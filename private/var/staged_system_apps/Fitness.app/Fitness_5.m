uint64_t sub_10031F290()
{
  uint64_t v0;
  int *v1;
  __int128 *v2;
  char v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  Swift::String v17;
  void *v18;
  id v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  Swift::String v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  __int128 v32;
  char v33;
  _QWORD v34[2];

  v34[0] = 0;
  v34[1] = 0xE000000000000000;
  v1 = (int *)type metadata accessor for ActivityRingsCard(0);
  v2 = (__int128 *)(v0 + v1[5]);
  v3 = *((_BYTE *)v2 + 16);
  v32 = *v2;
  v33 = v3;
  _print_unlocked<A, B>(_:_:)(&v32, v34, &type metadata for CardType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  LOBYTE(v32) = *(_BYTE *)(v0 + v1[6]);
  _print_unlocked<A, B>(_:_:)(&v32, v34, &type metadata for CardSize, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v5._countAndFlagsBits = 58;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6 = type metadata accessor for UUID(0);
  v7 = sub_1000083D8((unint64_t *)&qword_100821498, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, v7);
  object = (CHWorkoutDetailHeartRateTableViewCell *)v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object, v10, v11, v12, v13, v14, v15, v16);
  v17._countAndFlagsBits = 540945696;
  v17._object = (void *)0xE400000000000000;
  String.append(_:)(v17);
  v18 = *(void **)(v0 + v1[9]);
  if (v18)
  {
    v19 = objc_msgSend(v18, "description");
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

  }
  else
  {
    v22 = (CHWorkoutDetailHeartRateTableViewCell *)0xE300000000000000;
    v20 = 4271950;
  }
  v23._countAndFlagsBits = v20;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v22, v24, v25, v26, v27, v28, v29, v30);
  return v34[0];
}

uint64_t type metadata accessor for ActivityRingsCard(uint64_t a1)
{
  uint64_t result;

  result = qword_10082E7F8;
  if (!qword_10082E7F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActivityRingsCard);
  return result;
}

_QWORD *sub_10031F468(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v25);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    v12 = *((_QWORD *)v10 + 1);
    v13 = v10[16];
    sub_1000EB3F4(*(_QWORD *)v10, v12, v13);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    v9[16] = v13;
    v14 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    v15 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v16 = *(void **)((char *)a2 + v15);
    *(_QWORD *)((char *)a1 + v15) = v16;
    v17 = a3[10];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for Date(0);
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    v23 = v16;
    if (v22(v19, 1, v20))
    {
      v24 = sub_100047110((uint64_t *)&unk_100828370);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v26 = a3[11];
    v27 = a3[12];
    v28 = *(void **)((char *)a2 + v26);
    *(_QWORD *)((char *)a1 + v26) = v28;
    *((_BYTE *)a1 + v27) = *((_BYTE *)a2 + v27);
    v29 = v28;
  }
  return a1;
}

void sub_10031F5F0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_1000EB41C(*(_QWORD *)(a1 + a2[5]), *(_QWORD *)(a1 + a2[5] + 8), *(_BYTE *)(a1 + a2[5] + 16));

  v5 = a1 + a2[10];
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);

}

uint64_t sub_10031F6A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(const void *, uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v15 = *(void **)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  v16 = a3[10];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = type metadata accessor for Date(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  v22 = v15;
  if (v21(v18, 1, v19))
  {
    v23 = sub_100047110((uint64_t *)&unk_100828370);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v24 = a3[11];
  v25 = a3[12];
  v26 = *(void **)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v26;
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  v27 = v26;
  return a1;
}

uint64_t sub_10031F800(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  v13 = *(_QWORD *)v8;
  v14 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  v15 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v12;
  sub_1000EB41C(v13, v14, v15);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = a3[9];
  v17 = *(void **)(a1 + v16);
  v18 = *(void **)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = v18;

  v20 = a3[10];
  v21 = (void *)(a1 + v20);
  v22 = (void *)(a2 + v20);
  v23 = type metadata accessor for Date(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v8) = v25(v21, 1, v23);
  v26 = v25(v22, 1, v23);
  if (!(_DWORD)v8)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v21, v22, v23);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    v27 = sub_100047110((uint64_t *)&unk_100828370);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v21, v22, v23);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_7:
  v28 = a3[11];
  v29 = *(void **)(a1 + v28);
  v30 = *(void **)(a2 + v28);
  *(_QWORD *)(a1 + v28) = v30;
  v31 = v30;

  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_10031F9C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100047110((uint64_t *)&unk_100828370);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  return a1;
}

uint64_t sub_10031FB00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)v8;
  v12 = *(_QWORD *)(v8 + 8);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v13 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v10;
  sub_1000EB41C(v11, v12, v13);
  v14 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = *(void **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);

  v17 = a3[10];
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = type metadata accessor for Date(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    v25 = sub_100047110((uint64_t *)&unk_100828370);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_7:
  v26 = a3[11];
  v27 = *(void **)(a1 + v26);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);

  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_10031FCA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10031FCB4);
}

uint64_t sub_10031FCB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100047110((uint64_t *)&unk_100828370);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v11);
  }
}

uint64_t sub_10031FD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10031FD78);
}

uint64_t sub_10031FD78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 36)) = a2;
      return result;
    }
    v10 = sub_100047110((uint64_t *)&unk_100828370);
    v12 = a1 + *(int *)(a4 + 40);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10031FE20(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_100635A98;
    v6[2] = &unk_100635AB0;
    v6[3] = &unk_100635AB0;
    v6[4] = &unk_100635AB0;
    v6[5] = &unk_100635AC8;
    sub_10019120C(319);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      v6[7] = &unk_100635AC8;
      v6[8] = &unk_100635AE0;
      swift_initStructMetadata(a1, 256, 9, v6, a1 + 16);
    }
  }
}

void sub_10031FED0(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  void *v42;
  unsigned __int8 v43;
  void *v44;
  id v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  NSString v49;
  void *v50;
  id v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  id v56;
  Swift::String v57;
  Swift::String v58;
  Swift::String v59;
  NSString v60;
  id v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  const char *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  UIMenuElementSize v76;
  Swift::String v77;
  void *v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  unsigned int v83;
  id v84;
  void *v85;
  uint64_t v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  void *v88;
  id v89;
  Swift::String v90;
  Swift::String v91;
  Swift::String v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  NSString v99;
  void *v100;
  id v101;
  uint64_t v102;
  void *v103;
  id v104;
  uint64_t v105;
  void *v106;
  unsigned int v107;
  id v108;
  void *v109;
  BOOL v110;
  uint64_t v111;
  CHWorkoutDetailHeartRateTableViewCell *v112;
  id v113;
  Swift::String v114;
  Swift::String v115;
  Swift::String v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  NSString v123;
  id v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  void *v131;
  uint64_t v132;
  CHWorkoutDetailHeartRateTableViewCell *v133;
  void *v134;
  id v135;
  Swift::String v136;
  Swift::String v137;
  Swift::String v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  NSString v145;
  void *v146;
  id v147;
  uint64_t v148;
  void *v149;
  id v150;
  uint64_t v151;
  id v152;
  Swift::String v153;
  Swift::String v154;
  Swift::String v155;
  NSString v156;
  id v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  SEL v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  Swift::OpaquePointer v171;
  uint64_t v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  __int128 v177[2];
  char v178[24];
  _QWORD v179[3];
  uint64_t v180;
  uint64_t v181;
  UIImage_optional v182;
  Swift::String v183;
  Swift::String v184;
  Swift::String v185;
  Swift::String v186;
  Swift::String v187;
  Swift::String v188;

  v3 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v3);
  v5 = (char *)&v172 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_1008200B8);
  __chkstk_darwin(v6);
  v8 = (char *)&v172 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v172 - v10;
  v12 = type metadata accessor for ActivityRingsCard(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v175 = (uint64_t)&v172 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v172 - v16;
  __chkstk_darwin(v18);
  v174 = (uint64_t)&v172 - v19;
  v173 = (id)objc_opt_self(_HKBehavior);
  v20 = objc_msgSend(v173, "sharedBehavior");
  if (!v20)
    goto LABEL_64;
  v21 = v20;
  v22 = objc_msgSend(v20, "features");

  if (!v22)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  v23 = objc_msgSend(v22, "pauseRings");

  v24 = *(_QWORD *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  v26 = IndexPath.row.getter(v25);
  v27 = (uint64_t *)(v24 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards);
  swift_beginAccess(v27, v178, 0, 0);
  if ((v26 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_63;
  }
  v28 = *v27;
  if (v26 >= *(_QWORD *)(*v27 + 16))
  {
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  v176 = a2;
  sub_1000252E0(v28 + 40 * v26 + 32, (uint64_t)v179);
  v29 = v180;
  v30 = v181;
  sub_100016804(v179, v180);
  v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
  v33 = v32;
  LODWORD(v30) = v34;
  sub_1000EB41C(v31, v32, v34);
  if ((_DWORD)v30 != 3 || v31 | v33)
  {
    sub_10001E724(0, &qword_100823C90, UIAction_ptr);
    v44 = (void *)objc_opt_self(NSBundle);
    v45 = objc_msgSend(v44, "mainBundle");
    v183._object = (void *)0xE000000000000000;
    v46._countAndFlagsBits = 0x5241435F54494445;
    v46._object = (void *)0xE900000000000044;
    v47._countAndFlagsBits = 0;
    v47._object = (void *)0xE000000000000000;
    v183._countAndFlagsBits = 0;
    v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, (Swift::String_optional)0, (NSBundle)v45, v47, v183);

    v49 = String._bridgeToObjectiveC()();
    v50 = (void *)objc_opt_self(UIImage);
    v51 = objc_msgSend(v50, "systemImageNamed:", v49);

    sub_1000252E0((uint64_t)v179, (uint64_t)v177);
    v52 = swift_allocObject(&unk_1007965C0, 64, 7);
    v53 = v176;
    *(_QWORD *)(v52 + 16) = v176;
    sub_10002411C(v177, v52 + 24);
    v54 = v53;
    v55 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v48._countAndFlagsBits, v48._object, 0, 0, v51, 0, 0, 0, 0);
    v56 = objc_msgSend(v44, "mainBundle");
    v184._object = (void *)0xE000000000000000;
    v57._countAndFlagsBits = 0x5241435F45444948;
    v57._object = (void *)0xE900000000000044;
    v58._countAndFlagsBits = 0;
    v58._object = (void *)0xE000000000000000;
    v184._countAndFlagsBits = 0;
    v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, (Swift::String_optional)0, (NSBundle)v56, v58, v184);

    v60 = String._bridgeToObjectiveC()();
    v61 = objc_msgSend(v50, "systemImageNamed:", v60);

    sub_1000252E0((uint64_t)v179, (uint64_t)v177);
    v62 = swift_allocObject(&unk_1007965E8, 64, 7);
    *(_QWORD *)(v62 + 16) = v54;
    sub_10002411C(v177, v62 + 24);
    v63 = v54;
    v64 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v59._countAndFlagsBits, v59._object, 0, 0, v61, 0, 0, 0, 0);
    v65 = sub_100047110((uint64_t *)&unk_100828340);
    v66 = swift_allocObject(v65, 48, 7);
    *(_OWORD *)(v66 + 16) = xmmword_100629280;
    *(_QWORD *)(v66 + 32) = v55;
    *(_QWORD *)(v66 + 40) = v64;
    *(_QWORD *)&v177[0] = v66;
    specialized Array._endMutation()(v66);
    v67 = *(_QWORD *)&v177[0];
    if (*(_QWORD *)&v177[0] >> 62)
    {
LABEL_58:
      if (v67 < 0)
        v162 = v67;
      else
        v162 = v67 & 0xFFFFFFFFFFFFFF8;
      v163 = sub_10001E724(0, &qword_10082E068, UIMenuElement_ptr);
      swift_bridgeObjectRetain(v67);
      v76 = _bridgeCocoaArray<A>(_:)(v162, v163);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v67, v164, v165, v166, v167, v168, v169, v170);
      goto LABEL_15;
    }
LABEL_14:
    swift_bridgeObjectRetain(v67);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v68);
    sub_10001E724(0, &qword_10082E068, UIMenuElement_ptr);
    v76 = v67;
LABEL_15:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v67, v69, v70, v71, v72, v73, v74, v75);
    sub_10001E724(0, (unint64_t *)&unk_10082EEC0, UIMenu_ptr);
    v77._countAndFlagsBits = 0;
    v77._object = (void *)0xE000000000000000;
    v182.value.super.isa = 0;
    v182.is_nil = 0;
    UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v77, (Swift::String_optional)0, v182, 0, 0xFFFFFFFFFFFFFFFFLL, v76, v171);
LABEL_28:
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v179);
    return;
  }
  sub_1000252E0((uint64_t)v179, (uint64_t)v177);
  v35 = sub_100047110(&qword_1008200C0);
  v36 = swift_dynamicCast(v11, v177, v35, v12, 6);
  v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if ((v36 & 1) == 0)
  {
    v37(v11, 1, 1, v12);
    sub_10001BE90((uint64_t)v11, &qword_1008200B8);
LABEL_22:
    sub_1000252E0((uint64_t)v179, (uint64_t)v177);
    if ((swift_dynamicCast(v8, v177, v35, v12, 6) & 1) == 0)
    {
      v37(v8, 1, 1, v12);
      sub_10001BE90((uint64_t)v8, &qword_1008200B8);
      goto LABEL_28;
    }
    v37(v8, 0, 1, v12);
    v80 = v175;
    sub_100321504((uint64_t)v8, v175);
    if (!v23)
    {
      sub_100321548(v80);
      goto LABEL_28;
    }
    v81 = *(int *)(v12 + 36);
    v82 = *(void **)(v80 + v81);
    if (v82)
    {
      v83 = objc_msgSend(v82, "_isStandalonePhoneSummary");
LABEL_31:
      if (v83)
        v86 = 0x4F4D5F4553554150;
      else
        v86 = 0x49525F4553554150;
      if (v83)
        v87 = (CHWorkoutDetailHeartRateTableViewCell *)0xEF474E49525F4556;
      else
        v87 = (CHWorkoutDetailHeartRateTableViewCell *)0xEB0000000053474ELL;
      sub_10001E724(0, &qword_100823C90, UIAction_ptr);
      v88 = (void *)objc_opt_self(NSBundle);
      v89 = objc_msgSend(v88, "mainBundle");
      v185._object = (void *)0xE000000000000000;
      v90._countAndFlagsBits = v86;
      v90._object = v87;
      v91._countAndFlagsBits = 0;
      v91._object = (void *)0xE000000000000000;
      v185._countAndFlagsBits = 0;
      v92 = NSLocalizedString(_:tableName:bundle:value:comment:)(v90, (Swift::String_optional)0, (NSBundle)v89, v91, v185);
      swift_bridgeObjectRelease(v87, (SEL)v92._object, v93, v94, v95, v96, v97, v98);

      v99 = String._bridgeToObjectiveC()();
      v100 = (void *)objc_opt_self(UIImage);
      v101 = objc_msgSend(v100, "smm_systemImageNamed:", v99);

      v102 = swift_allocObject(&unk_100796610, 24, 7);
      v103 = v176;
      *(_QWORD *)(v102 + 16) = v176;
      v104 = v103;
      v105 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v92._countAndFlagsBits, v92._object, 0, 0, v101, 0, 0, 0, 0);
      v106 = *(void **)(v175 + v81);
      if (v106)
      {
        v107 = objc_msgSend(v106, "_isStandalonePhoneSummary");
LABEL_41:
        v110 = v107 == 0;
        if (v107)
          v111 = 0xD000000000000010;
        else
          v111 = 0x475F45474E414843;
        if (v110)
          v112 = (CHWorkoutDetailHeartRateTableViewCell *)0xEC000000534C414FLL;
        else
          v112 = (CHWorkoutDetailHeartRateTableViewCell *)0x80000001006993C0;
        v113 = objc_msgSend(v88, "mainBundle");
        v186._object = (void *)0xE000000000000000;
        v114._countAndFlagsBits = v111;
        v114._object = v112;
        v115._countAndFlagsBits = 0;
        v115._object = (void *)0xE000000000000000;
        v186._countAndFlagsBits = 0;
        v116 = NSLocalizedString(_:tableName:bundle:value:comment:)(v114, (Swift::String_optional)0, (NSBundle)v113, v115, v186);
        swift_bridgeObjectRelease(v112, (SEL)v116._object, v117, v118, v119, v120, v121, v122);

        v123 = String._bridgeToObjectiveC()();
        v124 = objc_msgSend(v100, "smm_systemImageNamed:", v123);

        *(_QWORD *)(swift_allocObject(&unk_100796638, 24, 7) + 16) = v104;
        v125 = v104;
        v126 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v116._countAndFlagsBits, v116._object, 0, 0, v124, 0, 0, 0, 0);
        v127 = sub_100047110((uint64_t *)&unk_100828340);
        v128 = swift_allocObject(v127, 48, 7);
        *(_OWORD *)(v128 + 16) = xmmword_100629280;
        *(_QWORD *)(v128 + 32) = v105;
        *(_QWORD *)(v128 + 40) = v126;
        *(_QWORD *)&v177[0] = v128;
        specialized Array._endMutation()(v128);
        v67 = *(_QWORD *)&v177[0];
        v129 = v175;
        goto LABEL_57;
      }
      v108 = objc_msgSend(v173, "sharedBehavior");
      if (v108)
      {
        v109 = v108;
        v107 = objc_msgSend(v108, "isStandalonePhoneFitnessMode");

        goto LABEL_41;
      }
      goto LABEL_67;
    }
    v84 = objc_msgSend(v173, "sharedBehavior");
    if (v84)
    {
      v85 = v84;
      v83 = objc_msgSend(v84, "isStandalonePhoneFitnessMode");

      goto LABEL_31;
    }
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v37(v11, 0, 1, v12);
  v38 = (uint64_t)v11;
  v39 = v174;
  sub_100321504(v38, v174);
  sub_100031D7C(v39 + *(int *)(v12 + 40), (uint64_t)v5);
  v40 = type metadata accessor for Date(0);
  v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v5, 1, v40);
  sub_10001BE90((uint64_t)v5, (uint64_t *)&unk_100828370);
  sub_1003215D4(v39, (uint64_t)v17);
  if (v41 != 1)
  {
    sub_100321548((uint64_t)v17);
    if (v23)
      goto LABEL_18;
LABEL_21:
    sub_100321548(v39);
    goto LABEL_22;
  }
  v42 = *(void **)&v17[*(int *)(v12 + 36)];
  if (!v42)
  {
    sub_100321548((uint64_t)v17);
    goto LABEL_21;
  }
  v43 = objc_msgSend(v42, "paused");
  sub_100321548((uint64_t)v17);
  if ((v43 & 1) == 0 || !v23)
    goto LABEL_21;
LABEL_18:
  v78 = *(void **)(v39 + *(int *)(v12 + 36));
  if (v78)
  {
    v79 = objc_msgSend(v78, "_isStandalonePhoneSummary");
LABEL_50:
    if (v79)
      v132 = 0xD000000000000010;
    else
      v132 = 0x525F454D55534552;
    if (v79)
      v133 = (CHWorkoutDetailHeartRateTableViewCell *)0x8000000100699400;
    else
      v133 = (CHWorkoutDetailHeartRateTableViewCell *)0xEC00000053474E49;
    sub_10001E724(0, &qword_100823C90, UIAction_ptr);
    v134 = (void *)objc_opt_self(NSBundle);
    v135 = objc_msgSend(v134, "mainBundle");
    v187._object = (void *)0xE000000000000000;
    v136._countAndFlagsBits = v132;
    v136._object = v133;
    v137._countAndFlagsBits = 0;
    v137._object = (void *)0xE000000000000000;
    v187._countAndFlagsBits = 0;
    v138 = NSLocalizedString(_:tableName:bundle:value:comment:)(v136, (Swift::String_optional)0, (NSBundle)v135, v137, v187);
    swift_bridgeObjectRelease(v133, (SEL)v138._object, v139, v140, v141, v142, v143, v144);

    v145 = String._bridgeToObjectiveC()();
    v146 = (void *)objc_opt_self(UIImage);
    v147 = objc_msgSend(v146, "smm_systemImageNamed:", v145);

    v148 = swift_allocObject(&unk_100796660, 24, 7);
    v149 = v176;
    *(_QWORD *)(v148 + 16) = v176;
    v150 = v149;
    v151 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v138._countAndFlagsBits, v138._object, 0, 0, v147, 0, 0, 0, 0);
    v152 = objc_msgSend(v134, "mainBundle");
    v188._object = (void *)0xE000000000000000;
    v153._object = (void *)0x80000001006993E0;
    v153._countAndFlagsBits = 0xD000000000000010;
    v154._countAndFlagsBits = 0;
    v154._object = (void *)0xE000000000000000;
    v188._countAndFlagsBits = 0;
    v155 = NSLocalizedString(_:tableName:bundle:value:comment:)(v153, (Swift::String_optional)0, (NSBundle)v152, v154, v188);

    v156 = String._bridgeToObjectiveC()();
    v157 = objc_msgSend(v146, "smm_systemImageNamed:", v156);

    *(_QWORD *)(swift_allocObject(&unk_100796688, 24, 7) + 16) = v150;
    v158 = v150;
    v159 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v155._countAndFlagsBits, v155._object, 0, 0, v157, 0, 0, 0, 0);
    v160 = sub_100047110((uint64_t *)&unk_100828340);
    v161 = swift_allocObject(v160, 48, 7);
    *(_OWORD *)(v161 + 16) = xmmword_100629280;
    *(_QWORD *)(v161 + 32) = v151;
    *(_QWORD *)(v161 + 40) = v159;
    *(_QWORD *)&v177[0] = v161;
    specialized Array._endMutation()(v161);
    v67 = *(_QWORD *)&v177[0];
    v129 = v174;
LABEL_57:
    sub_100321548(v129);
    if ((unint64_t)v67 >> 62)
      goto LABEL_58;
    goto LABEL_14;
  }
  v130 = objc_msgSend(v173, "sharedBehavior");
  if (v130)
  {
    v131 = v130;
    v79 = objc_msgSend(v130, "isStandalonePhoneFitnessMode");

    goto LABEL_50;
  }
LABEL_68:
  __break(1u);
}

void sub_100320D68(uint64_t a1, void *a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(objc_allocWithZone((Class)CHASActivitySetupViewController), "initWithPresentationContext:", 6);
  v4 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v3);
  objc_msgSend(a2, "presentViewController:animated:completion:", v4, 1, 0);

}

id sub_100320F04(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  char *v21;
  os_log_type_t v22;
  void *v23;
  os_log_type_t v24;
  NSObject *v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t aBlock[5];
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];

  v2 = v1;
  ObjectType = swift_getObjectType(v2);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v9 = 0;
  if (IndexPath.section.getter(v8) == 1)
  {
    v10 = IndexPath.row.getter(1);
    v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
    v12 = v11 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards;
    v13 = swift_beginAccess(v11 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards, v42, 0, 0);
    if (v10 >= *(_QWORD *)(*(_QWORD *)v12 + 16))
    {
      v22 = static os_log_type_t.default.getter(v13);
      v23 = (void *)HKLogActivity;
      v24 = v22;
      if (os_log_type_enabled(HKLogActivity, v22))
      {
        v25 = v23;
        v26 = (uint8_t *)swift_slowAlloc(12, -1);
        v27 = swift_slowAlloc(32, -1);
        aBlock[0] = v27;
        *(_DWORD *)v26 = 136315138;
        v28 = _typeName(_:qualified:)(ObjectType, 0);
        v30 = (CHWorkoutDetailHeartRateTableViewCell *)v29;
        v41 = sub_10003E8EC(v28, v29, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v26 + 4);
        swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
        _os_log_impl((void *)&_mh_execute_header, v25, v24, "%s Index out of range for context menu", v26, 0xCu);
        swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v27, -1, -1);
        swift_slowDealloc(v26, -1, -1);

      }
    }
    else if ((*(_BYTE *)(v11 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode) & 1) == 0)
    {
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
      v15 = *(unsigned __int8 *)(v6 + 80);
      v16 = (v15 + 24) & ~v15;
      v17 = swift_allocObject(&unk_100796570, v16 + v7, v15 | 7);
      *(_QWORD *)(v17 + 16) = v2;
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
      v18 = (void *)objc_opt_self(UIContextMenuConfiguration);
      aBlock[4] = (uint64_t)sub_100321448;
      v40 = v17;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1005050F0;
      aBlock[3] = (uint64_t)&unk_100796588;
      v19 = _Block_copy(aBlock);
      v20 = v40;
      v21 = v2;
      swift_retain(v17);
      v9 = objc_msgSend(v18, "configurationWithIdentifier:previewProvider:actionProvider:", isa, 0, v19, swift_release(v20).n128_f64[0]);

      swift_release(v17);
      _Block_release(v19);
      return v9;
    }
    return 0;
  }
  return v9;
}

id sub_100321210(void *a1, id a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  id v16;

  v3 = objc_msgSend(a2, "identifier");
  v4 = objc_opt_self(NSIndexPath);
  v5 = swift_dynamicCastObjCClass(v3, v4);
  if (v5 && (v6 = objc_msgSend(a1, "cellForItemAtIndexPath:", v5)) != 0)
  {
    v7 = v6;
    v8 = type metadata accessor for ActivityDashboardCardCell();
    v9 = (id)swift_dynamicCastClass(v7, v8);
    if (v9)
    {
      v10 = objc_msgSend(objc_allocWithZone((Class)UIPreviewParameters), "init");
      objc_msgSend(v9, "bounds");
      v15 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", -1, v11, v12, v13, v14, 20.0, 20.0);
      objc_msgSend(v10, "setVisiblePath:", v15);

      v16 = objc_msgSend(v9, "contentView");
      v9 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:parameters:", v16, v10);

      swift_unknownObjectRelease(v3);
    }
    else
    {

      swift_unknownObjectRelease(v3);
    }
  }
  else
  {
    swift_unknownObjectRelease(v3);
    return 0;
  }
  return v9;
}

uint64_t sub_1003213D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100321448(uint64_t a1)
{
  uint64_t v1;

  type metadata accessor for IndexPath(0);
  sub_10031FED0(a1, *(char **)(v1 + 16));
}

uint64_t sub_10032148C()
{
  _QWORD *v0;
  char *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (char *)v0[2];
  v2 = v0 + 3;
  v4 = v0[6];
  v3 = (_QWORD *)v0[7];
  v5 = sub_100016804(v2, v4);
  return sub_1003E6668((uint64_t)v5, v1, v4, v3);
}

double sub_1003214D0()
{
  uint64_t v0;

  return sub_100361ED0(v0 + 24);
}

uint64_t sub_100321504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityRingsCard(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100321548(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActivityRingsCard(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100321584()
{
  return sub_100318D0C(0);
}

uint64_t sub_1003215A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003215CC(uint64_t a1)
{
  uint64_t v1;

  sub_100320D68(a1, *(void **)(v1 + 16));
}

uint64_t sub_1003215D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityRingsCard(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_100321618()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context)+ OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator), "unpauseRingsWithCompletionHandler:", 0);
}

id sub_10032164C()
{
  return sub_100318D0C(1);
}

id sub_1003216B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutConfigurationViewer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutConfigurationViewer()
{
  return objc_opt_self(_TtC10FitnessApp26WorkoutConfigurationViewer);
}

ValueMetadata *type metadata accessor for MirrorSegmentButton()
{
  return &type metadata for MirrorSegmentButton;
}

uint64_t sub_100321718(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B4384, 1);
}

uint64_t sub_100321728@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t);
  int v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  __int128 v51;
  uint64_t v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  unint64_t v55;
  unint64_t v56;
  SEL v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  uint64_t v69;
  uint64_t v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  int v91;
  uint64_t (*v92)(char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98[16];
  _OWORD *v99;
  uint64_t v100;
  CHWorkoutDetailHeartRateTableViewCell *v101;
  _OWORD v102[3];
  __int128 v103;
  id v104[4];

  v2 = v1;
  v89 = a1;
  v3 = type metadata accessor for ConfigurationType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v86 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v84 - v7;
  v9 = sub_100047110(&qword_10082E878);
  v94 = *(_QWORD *)(v9 - 8);
  v95 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100047110(&qword_10082E880);
  __chkstk_darwin(v93);
  v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100047110(&qword_10082E888);
  __chkstk_darwin(v96);
  v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_100047110(&qword_10082E890);
  __chkstk_darwin(v88);
  v87 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *v1;
  v103 = v1[1];
  *(_OWORD *)v104 = v17;
  v18 = (_OWORD *)swift_allocObject(&unk_100796738, 64, 7);
  v19 = v2[1];
  v18[1] = *v2;
  v18[2] = v19;
  v18[3] = v2[2];
  v99 = v2;
  v20 = *((_QWORD *)&v103 + 1);
  sub_1000F7048(v104);
  sub_10004D65C((uint64_t)&v103);
  v21 = sub_100047110(&qword_10082E898);
  v22 = sub_100322664();
  Button.init(action:label:)(sub_100322654, v18, sub_10032265C, v98, v21, v22);
  swift_retain(v20);
  MetricsPublisher.workoutConfigurationType.getter(v23);
  sub_10004D634((uint64_t)&v103);
  v85 = v4;
  v24 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  v97 = v3;
  v25 = v24(v8, v3);
  v92 = v24;
  v91 = enum case for ConfigurationType.interval(_:);
  v90 = v15;
  if (v25 == enum case for ConfigurationType.interval(_:))
  {
    swift_retain(v20);
    v27 = MetricsPublisher.intervalsMetricsPublisher.getter(v26);
    sub_10004D634((uint64_t)&v103);
    v29 = IntervalsMetricsPublisher.intervalThisStep.getter(v28);
    swift_release(v27);
    v30 = v11;
    if (v29)
    {
      swift_release(v29);
      v31 = 0;
LABEL_8:
      v37 = (uint64_t)v87;
      v38 = v86;
      goto LABEL_9;
    }
LABEL_6:
    v31 = 1;
    goto LABEL_8;
  }
  v30 = v11;
  if (v25 != enum case for ConfigurationType.multisport(_:))
  {
    (*(void (**)(char *, uint64_t))(v85 + 8))(v8, v97);
    swift_retain(v20);
    v35 = MetricsPublisher.workoutStatePublisher.getter(v34);
    v36 = sub_10004D634((uint64_t)&v103);
    v31 = WorkoutStatePublisher.workoutPaused.getter(v36);
    swift_release(v35);
    goto LABEL_8;
  }
  swift_retain(v20);
  v33 = MetricsPublisher.multisportWorkoutInAutoMode.getter(v32);
  sub_10004D634((uint64_t)&v103);
  if ((v33 & 1) != 0)
    goto LABEL_6;
  swift_retain(v20);
  v81 = MetricsPublisher.multisportMetricsPublisher.getter(v80);
  v82 = sub_10004D634((uint64_t)&v103);
  v83 = (void *)MultisportMetricsPublisher.nextMultisportActivity.getter(v82);
  swift_release(v81);
  v37 = (uint64_t)v87;
  v38 = v86;
  if (v83)
  {

    v31 = 0;
  }
  else
  {
    v31 = 1;
  }
LABEL_9:
  KeyPath = swift_getKeyPath(&unk_100635BA8);
  v40 = swift_allocObject(&unk_100796760, 17, 7);
  *(_BYTE *)(v40 + 16) = v31 & 1;
  v42 = v94;
  v41 = v95;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v13, v30, v95);
  v43 = (uint64_t *)&v13[*(int *)(v93 + 36)];
  *v43 = KeyPath;
  v43[1] = (uint64_t)sub_1000F7088;
  v43[2] = v40;
  v44 = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v30, v41);
  v45 = *((_QWORD *)v2 + 4);
  v46 = static Alignment.center.getter(v44);
  _FrameLayout.init(width:height:alignment:)(v102, v45, 0, 0, 1, v46, v47);
  v48 = (uint64_t)v90;
  sub_100322700((uint64_t)v13, (uint64_t)v90);
  v49 = v96;
  v50 = (_OWORD *)(v48 + *(int *)(v96 + 36));
  v51 = v102[1];
  *v50 = v102[0];
  v50[1] = v51;
  v50[2] = v102[2];
  sub_10001BE90((uint64_t)v13, &qword_10082E880);
  v52 = sub_100322944(v20);
  v54 = v53;
  v100 = v52;
  v101 = v53;
  v55 = sub_100322AE8();
  v56 = sub_100038CA0();
  View.accessibilityLabel<A>(_:)(&v100, v49, &type metadata for String, v55, v56);
  swift_bridgeObjectRelease(v54, v57, v58, v59, v60, v61, v62, v63);
  sub_10001BE90(v48, &qword_10082E888);
  swift_retain(v20);
  MetricsPublisher.workoutConfigurationType.getter(v64);
  sub_10004D634((uint64_t)&v103);
  v65 = v92(v38, v97);
  if (v65 != v91)
  {
    if (v65 != enum case for ConfigurationType.multisport(_:))
    {
      (*(void (**)(char *, uint64_t))(v85 + 8))(v38, v97);
      swift_retain(v20);
      v70 = MetricsPublisher.segmentIndex.getter(v69);
      sub_10004D634((uint64_t)&v103);
      v100 = v70;
      v67 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v68 = v71;
      goto LABEL_14;
    }
    swift_retain(v20);
    MetricsPublisher.multisportWorkoutInAutoMode.getter(v66);
    sub_10004D634((uint64_t)&v103);
  }
  v67 = 0;
  v68 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
LABEL_14:
  v100 = v67;
  v101 = v68;
  ModifiedContent<>.accessibilityValue<A>(_:)(&v100, v88, &type metadata for String, v56);
  swift_bridgeObjectRelease(v68, v72, v73, v74, v75, v76, v77, v78);
  return sub_10001BE90(v37, &qword_10082E890);
}

uint64_t sub_100321D3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  char *v20;
  uint64_t v21;
  NSObject *v22;
  _BOOL4 v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t);
  int v27;
  unsigned int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  char *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  os_log_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  unsigned int *v57;
  char *v58;
  uint64_t v59;
  char v60;
  __n128 v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  os_log_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  char *v72;
  void *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;

  v2 = type metadata accessor for ConfigurationType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v74 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v65 - v6;
  v8 = type metadata accessor for DataLinkCommand(0);
  v77 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v75 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v72 = (char *)&v65 - v11;
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static WOLog.dataLink.getter(v16);
  v17 = *(void **)a1;
  v68 = *(_QWORD *)(a1 + 8);
  v81 = *(_OWORD *)(a1 + 16);
  v18 = *((_QWORD *)&v81 + 1);
  v73 = v17;
  v19 = v17;
  sub_10004D65C((uint64_t)&v81);
  v20 = (char *)v19;
  v21 = sub_10004D65C((uint64_t)&v81);
  v22 = Logger.logObject.getter(v21);
  v71 = static os_log_type_t.default.getter(v22);
  v23 = os_log_type_enabled(v22, (os_log_type_t)v71);
  v76 = v3;
  v78 = v18;
  if (!v23)
  {

    sub_10004D634((uint64_t)&v81);
    sub_10004D634((uint64_t)&v81);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v29 = v77;
    v33 = v73;
    v34 = v20;
    goto LABEL_12;
  }
  v66 = v22;
  v67 = v20;
  v69 = v8;
  v24 = (uint8_t *)swift_slowAlloc(12, -1);
  v65 = swift_slowAlloc(32, -1);
  v80 = v65;
  *(_DWORD *)v24 = 136315138;
  swift_retain(v18);
  MetricsPublisher.workoutConfigurationType.getter(v25);
  sub_10004D634((uint64_t)&v81);
  v26 = *(uint64_t (**)(char *, uint64_t))(v3 + 88);
  v70 = v2;
  v27 = v26(v7, v2);
  if (v27 != enum case for ConfigurationType.interval(_:))
  {
    v31 = v13;
    v32 = v72;
    if (v27 == enum case for ConfigurationType.multisport(_:))
    {
      swift_retain(v78);
      v36 = MetricsPublisher.multisportWorkoutInAutoMode.getter(v35);
      sub_10004D634((uint64_t)&v81);
      v29 = v77;
      v33 = v73;
      if ((v36 & 1) == 0)
      {
        v28 = (unsigned int *)&enum case for DataLinkCommand.nextLeg(_:);
LABEL_10:
        v30 = v12;
        goto LABEL_11;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v70);
      v29 = v77;
      v33 = v73;
    }
    v28 = (unsigned int *)&enum case for DataLinkCommand.markSegment(_:);
    goto LABEL_10;
  }
  v28 = (unsigned int *)&enum case for DataLinkCommand.nextInterval(_:);
  v29 = v77;
  v30 = v12;
  v31 = v13;
  v32 = v72;
  v33 = v73;
LABEL_11:
  v37 = v69;
  (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v32, *v28, v69);
  v38 = String.init<A>(describing:)(v32, v37);
  v40 = (CHWorkoutDetailHeartRateTableViewCell *)v39;
  v79 = sub_10003E8EC(v38, v39, &v80);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v24 + 4);
  v34 = v67;

  swift_bridgeObjectRelease(v40, v41, v42, v43, v44, v45, v46, v47);
  sub_10004D634((uint64_t)&v81);

  sub_10004D634((uint64_t)&v81);
  v48 = v66;
  _os_log_impl((void *)&_mh_execute_header, v66, (os_log_type_t)v71, "Sending %s", v24, 0xCu);
  v49 = v65;
  swift_arrayDestroy(v65, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v49, -1, -1);
  v50 = v24;
  v8 = v37;
  swift_slowDealloc(v50, -1, -1);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v30);
  v2 = v70;
LABEL_12:
  if (v33)
  {
    v51 = *(_QWORD *)&v34[OBJC_IVAR___WODataLinkMonitor_client];
    sub_10004D65C((uint64_t)&v81);
    swift_retain(v51);
    v52 = v74;
    v53 = v78;
    MetricsPublisher.workoutConfigurationType.getter(v54);
    sub_10004D634((uint64_t)&v81);
    v55 = v76;
    v56 = (*(uint64_t (**)(char *, uint64_t))(v76 + 88))(v52, v2);
    if (v56 == enum case for ConfigurationType.interval(_:))
    {
      v57 = (unsigned int *)&enum case for DataLinkCommand.nextInterval(_:);
      v58 = v75;
LABEL_20:
      (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v58, *v57, v8);
      dispatch thunk of DataLinkClient.send(command:acknowledged:)(v58, sub_1000F6BBC, 0);
      v61 = swift_release(v51);
      return (*(uint64_t (**)(char *, uint64_t, __n128))(v29 + 8))(v58, v8, v61);
    }
    if (v56 == enum case for ConfigurationType.multisport(_:))
    {
      swift_retain(v53);
      v60 = MetricsPublisher.multisportWorkoutInAutoMode.getter(v59);
      sub_10004D634((uint64_t)&v81);
      v58 = v75;
      if ((v60 & 1) == 0)
      {
        v57 = (unsigned int *)&enum case for DataLinkCommand.nextLeg(_:);
        goto LABEL_20;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v2);
      v58 = v75;
    }
    v57 = (unsigned int *)&enum case for DataLinkCommand.markSegment(_:);
    goto LABEL_20;
  }
  v63 = type metadata accessor for DataLinkMonitor();
  v64 = sub_1000083D8((unint64_t *)&qword_10081F7B0, (uint64_t (*)(uint64_t))type metadata accessor for DataLinkMonitor, (uint64_t)&unk_100636D30);
  result = EnvironmentObject.error()(0, v68, v63, v64);
  __break(1u);
  return result;
}

void sub_100322274(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  double v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = type metadata accessor for ConfigurationType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = static Alignment.center.getter(v8);
  v40 = v10;
  sub_100322494(a1, (uint64_t)v41);
  v11 = *(_QWORD *)&v41[0];
  v12 = BYTE8(v41[0]);
  v13 = BYTE9(v41[0]);
  v39 = v41[1];
  v14 = v43;
  v37 = v44;
  v38 = v42;
  v41[0] = *(_OWORD *)(a1 + 16);
  v15 = *((_QWORD *)&v41[0] + 1);
  swift_retain(*((_QWORD *)&v41[0] + 1));
  MetricsPublisher.workoutConfigurationType.getter(v16);
  sub_10004D634((uint64_t)v41);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v17 == enum case for ConfigurationType.interval(_:))
  {
    swift_retain(v15);
    v19 = MetricsPublisher.intervalsMetricsPublisher.getter(v18);
    sub_10004D634((uint64_t)v41);
    v21 = IntervalsMetricsPublisher.intervalThisStep.getter(v20);
    swift_release(v19);
    if (v21)
    {
      swift_release(v21);
LABEL_10:
      v32 = 1.0;
      goto LABEL_11;
    }
  }
  else if (v17 == enum case for ConfigurationType.multisport(_:))
  {
    swift_retain(v15);
    v23 = MetricsPublisher.multisportWorkoutInAutoMode.getter(v22);
    sub_10004D634((uint64_t)v41);
    if ((v23 & 1) == 0)
    {
      swift_retain(v15);
      v25 = MetricsPublisher.multisportMetricsPublisher.getter(v24);
      v26 = sub_10004D634((uint64_t)v41);
      v27 = (void *)MultisportMetricsPublisher.nextMultisportActivity.getter(v26);
      swift_release(v25);
      if (v27)
      {

        goto LABEL_10;
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_retain(v15);
    v29 = MetricsPublisher.workoutStatePublisher.getter(v28);
    v30 = sub_10004D634((uint64_t)v41);
    v31 = WorkoutStatePublisher.workoutPaused.getter(v30);
    swift_release(v29);
    if ((v31 & 1) == 0)
      goto LABEL_10;
  }
  v32 = 0.35;
LABEL_11:
  v33 = v40;
  v34 = v39;
  v36 = v37;
  v35 = v38;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v33;
  *(_QWORD *)(a2 + 16) = v11;
  *(_BYTE *)(a2 + 24) = v12;
  *(_BYTE *)(a2 + 25) = v13;
  *(_OWORD *)(a2 + 32) = v34;
  *(_QWORD *)(a2 + 48) = v35;
  *(_QWORD *)(a2 + 56) = v14;
  *(_QWORD *)(a2 + 64) = v36;
  *(double *)(a2 + 72) = v32;
}

uint64_t sub_100322494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t KeyPath;
  double v15;
  __n128 v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  v4 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10081DCD8 != -1)
    swift_once(&qword_10081DCD8, sub_1003D1FC8);
  v7 = qword_10086A848;
  v8 = *(_QWORD *)(a1 + 24);
  swift_retain(qword_10086A848);
  v9 = sub_100322748(v8);
  v11 = Image.init(systemName:)(v9, v10);
  v13 = static Color.white.getter(v12);
  KeyPath = swift_getKeyPath(&unk_100635BD8);
  v15 = *(double *)(a1 + 40);
  v17 = static Font.Weight.regular.getter(v16);
  v18 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
  v19 = static Font.system(size:weight:design:)(*(_QWORD *)&v17, 0, v6, v15);
  sub_10001BE90((uint64_t)v6, &qword_10081F2F8);
  result = swift_getKeyPath(&unk_100635C08);
  *(_QWORD *)a2 = v7;
  *(_WORD *)(a2 + 8) = 256;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = KeyPath;
  *(_QWORD *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 40) = result;
  *(_QWORD *)(a2 + 48) = v19;
  return result;
}

uint64_t sub_1003225F0@<X0>(uint64_t a1@<X8>)
{
  return sub_100321728(a1);
}

uint64_t sub_100322628()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100322654()
{
  uint64_t v0;

  return sub_100321D3C(v0 + 16);
}

void sub_10032265C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100322274(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100322664()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E8A0;
  if (!qword_10082E8A0)
  {
    v1 = sub_100007050(&qword_10082E898);
    sub_100028384(&qword_10082E8A8, &qword_10082E8B0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082E8A0);
  }
  return result;
}

uint64_t sub_1003226F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100322700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10082E880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100322748(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for ConfigurationType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_retain(a1);
  MetricsPublisher.workoutConfigurationType.getter(v6);
  swift_release(a1);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v7 != enum case for ConfigurationType.interval(_:))
  {
    if (v7 != enum case for ConfigurationType.multisport(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v18 = swift_retain(a1);
      v19 = MetricsPublisher.segmentIndex.getter(v18);
      swift_release(a1);
      v23[1] = v19;
      v24 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v25 = v20;
      v21._countAndFlagsBits = 0x656C637269632ELL;
      v21._object = (void *)0xE700000000000000;
      String.append(_:)(v21);
      return v24;
    }
    v13 = swift_retain(a1);
    MetricsPublisher.multisportWorkoutInAutoMode.getter(v13);
    swift_release(a1);
    v14 = swift_retain(a1);
    v15 = MetricsPublisher.multisportMetricsPublisher.getter(v14);
    v16 = swift_release(a1);
    v17 = (void *)MultisportMetricsPublisher.nextMultisportActivity.getter(v16);
    swift_release(v15);
    if (v17)
    {
      v12 = 0x6F662E776F727261;

      return v12;
    }
    return 0x6568632E67616C66;
  }
  v8 = swift_retain(a1);
  v9 = MetricsPublisher.intervalsMetricsPublisher.getter(v8);
  v10 = swift_release(a1);
  v11 = IntervalsMetricsPublisher.intervalNextStep.getter(v10);
  swift_release(v9);
  if (!v11)
    return 0x6568632E67616C66;
  v12 = 0x6F662E776F727261;
  swift_release(v11);
  return v12;
}

uint64_t sub_100322944(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v2 = type metadata accessor for ConfigurationType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_retain(a1);
  MetricsPublisher.workoutConfigurationType.getter(v6);
  swift_release(a1);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v7 != enum case for ConfigurationType.interval(_:))
  {
    if (v7 != enum case for ConfigurationType.multisport(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      goto LABEL_6;
    }
    v8 = swift_retain(a1);
    MetricsPublisher.multisportWorkoutInAutoMode.getter(v8);
    swift_release(a1);
  }
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
LABEL_6:
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, 0, 0);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  return v12;
}

unint64_t sub_100322AE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E8B8;
  if (!qword_10082E8B8)
  {
    v1 = sub_100007050(&qword_10082E888);
    sub_100322B54();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082E8B8);
  }
  return result;
}

unint64_t sub_100322B54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E8C0;
  if (!qword_10082E8C0)
  {
    v1 = sub_100007050(&qword_10082E880);
    sub_100028384(&qword_10082E8C8, &qword_10082E878, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100028384(&qword_10081F7E0, &qword_10081F7E8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082E8C0);
  }
  return result;
}

unint64_t sub_100322C04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E8D0;
  if (!qword_10082E8D0)
  {
    v1 = sub_100007050(&qword_10082E890);
    sub_100322AE8();
    sub_1000083D8((unint64_t *)&qword_10081EFA8, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082E8D0);
  }
  return result;
}

void destroy for MirrorMultiSportMetricsPlatter(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));
  swift_release(*(_QWORD *)(a1 + 40));
  swift_release(*(_QWORD *)(a1 + 56));
  swift_release(*(_QWORD *)(a1 + 72));
  swift_release(*(_QWORD *)(a1 + 88));

}

_QWORD *initializeWithCopy for MirrorMultiSportMetricsPlatter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v10 = (void *)a2[12];
  v9 = a2[13];
  a1[12] = v10;
  a1[13] = v9;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  v11 = v10;
  return a1;
}

_QWORD *assignWithCopy for MirrorMultiSportMetricsPlatter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_retain(v10);
  swift_release(v11);
  a1[8] = a2[8];
  v12 = a2[9];
  v13 = a1[9];
  a1[9] = v12;
  swift_retain(v12);
  swift_release(v13);
  a1[10] = a2[10];
  v14 = a2[11];
  v15 = a1[11];
  a1[11] = v14;
  swift_retain(v14);
  swift_release(v15);
  v16 = (void *)a2[12];
  v17 = (void *)a1[12];
  a1[12] = v16;
  v18 = v16;

  a1[13] = a2[13];
  return a1;
}

_QWORD *assignWithTake for MirrorMultiSportMetricsPlatter(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = a1[3];
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = a1[5];
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v8;
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = a1[7];
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v10;
  swift_release(v11);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = a1[9];
  a1[8] = *(_QWORD *)(a2 + 64);
  a1[9] = v12;
  swift_release(v13);
  a1[10] = *(_QWORD *)(a2 + 80);
  swift_release(a1[11]);
  v14 = (void *)a1[12];
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 88);

  a1[13] = *(_QWORD *)(a2 + 104);
  return a1;
}

ValueMetadata *type metadata accessor for MirrorMultiSportMetricsPlatter()
{
  return &type metadata for MirrorMultiSportMetricsPlatter;
}

uint64_t sub_100322F2C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B43C8, 1);
}

uint64_t sub_100322F3C()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __n128 v5;
  void *v6;
  id v7;
  uint64_t v8;
  __int128 v10;

  v1 = type metadata accessor for LocalizationFeature(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v0;
  v5 = swift_retain(*((_QWORD *)&v10 + 1));
  v6 = (void *)MultisportMetricsPublisher.currentMultisportActivity.getter(v5);
  sub_10004D634((uint64_t)&v10);
  if (!v6)
  {
    sub_1003254C8();
    v6 = (void *)static FIUIWorkoutActivityType.msIndoorCycle.getter();
  }
  v7 = objc_msgSend(v6, "effectiveTypeIdentifier");

  if (v7 != (id)13)
    return 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for LocalizationFeature.workout(_:), v1);
  v8 = static Localization.workoutUILocalizedString(_:feature:)(0x4F505349544C554DLL, 0xEF454B49425F5452, v4);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v8;
}

double sub_100323070(double (*a1)(__n128), double (*a2)(__n128))
{
  _OWORD *v2;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  __n128 v18;
  double v19;
  __int128 *v20;
  __n128 v21;
  __int128 v23;
  __int128 v24;

  v5 = v2;
  v6 = type metadata accessor for MultisportTransitionState(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - v11;
  v24 = *v2;
  v13 = *((_QWORD *)&v24 + 1);
  v14 = swift_retain(*((_QWORD *)&v24 + 1));
  MultisportMetricsPublisher.multisportTransitionState.getter(v14);
  sub_10004D634((uint64_t)&v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for MultisportTransitionState.notInTransition(_:), v6);
  v15 = sub_1000083D8(&qword_10082E950, (uint64_t (*)(uint64_t))&type metadata accessor for MultisportTransitionState, (uint64_t)&protocol conformance descriptor for MultisportTransitionState);
  v16 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v9, v6, v15);
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v9, v6);
  v17(v12, v6);
  if ((v16 & 1) != 0)
  {
    v23 = v5[5];
    v18 = swift_retain(*((_QWORD *)&v23 + 1));
    v19 = a2(v18);
    v20 = &v23;
  }
  else
  {
    v21 = swift_retain(v13);
    v19 = a1(v21);
    v20 = &v24;
  }
  sub_10004D634((uint64_t)v20);
  return v19;
}

uint64_t sub_1003231FC@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  int *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 *v85;
  uint64_t v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;
  void (*v89)(char *, uint64_t);
  __int128 *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  const char *v99;
  const char *v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  double (*v107)(uint64_t);
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint64_t *v111;
  double (**v112)(uint64_t);
  _QWORD *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  void (*v117)(char *, uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v119;
  uint64_t v120;
  __n128 v121;
  void *v122;
  unsigned int v123;
  __n128 v124;
  void *v125;
  void *v126;
  unsigned int v127;
  id *v128;
  __n128 v129;
  double v130;
  char *v131;
  __n128 v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char v137;
  char *v138;
  double v139;
  void (*v140)(char *, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  void (*v149)(char *, char *, uint64_t);
  uint64_t v150;
  __n128 v151;
  double v152;
  id v153;
  char *v154;
  __n128 v155;
  char *v156;
  void (*v157)(char *, uint64_t);
  double v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  void (*v165)(char *, char *, uint64_t);
  char *v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(char *, uint64_t);
  uint64_t v172;
  uint64_t v173;
  void *v174;
  char *v175;
  __n128 v176;
  uint64_t v177;
  __int128 *v178;
  double v179;
  __n128 v180;
  char v181;
  char *v182;
  __n128 v183;
  char *v184;
  uint64_t v185;
  void (*v186)(char *, char *, uint64_t);
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  void (*v191)(char *, uint64_t);
  double v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  unint64_t v200;
  char *v201;
  double v202;
  char *v203;
  __n128 v204;
  void *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  __n128 v209;
  char *v210;
  char *v211;
  uint64_t v212;
  char v213;
  double v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  unint64_t v221;
  char *v222;
  uint64_t v223;
  char *v224;
  unint64_t v225;
  _QWORD *v226;
  void (*v227)(char *, char *, void (*)(_QWORD));
  char *v228;
  void (*v229)(_QWORD);
  void (*v230)(char *, char *, unint64_t);
  char *v231;
  uint64_t v232;
  uint64_t v233;
  void (*v234)(char *, unint64_t);
  void (*v235)(char *, void (*)(_QWORD));
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  __int128 *v250;
  uint64_t v251;
  __n128 v252;
  uint64_t v253;
  char v254;
  uint64_t v255;
  __n128 v256;
  char *v257;
  __n128 v258;
  char v259;
  uint64_t v260;
  uint64_t v261;
  __n128 v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  char *v266;
  void (*v267)(char *, uint64_t);
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  int *v271;
  __n128 v272;
  uint64_t v273;
  __n128 v274;
  __n128 v275;
  double v276;
  unint64_t v277;
  char *v278;
  uint64_t KeyPath;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  void (*v292)(char *, char *, uint64_t);
  char *v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  int *v297;
  void (*v298)(char *, uint64_t);
  char *v300;
  char *v301;
  char *v302;
  uint64_t v303;
  char *v304;
  char *v305;
  char *v306;
  char *v307;
  char *v308;
  char *v309;
  char *v310;
  uint64_t v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  char *v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  char *v323;
  char *v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  char *v330;
  uint64_t v331;
  unint64_t v332;
  void (*v333)(char *, uint64_t);
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  char *v339;
  uint64_t v340;
  void (*v341)(char *, char *, uint64_t);
  char *v342;
  id v343;
  void (*v344)(_QWORD);
  char *v345;
  uint64_t v346;
  uint64_t v347;
  char *v348;
  uint64_t v349;
  uint64_t v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  char *v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  char *v361;
  uint64_t v362;
  char *v363;
  char *v364;
  char *v365;
  char *v366;
  uint64_t v367;
  void (*v368)(char *, uint64_t);
  char *v369;
  char *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  __int128 *v374;
  int *v375;
  uint64_t v376;
  double v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;

  v374 = a1;
  v358 = a2;
  v2 = sub_100047110(&qword_10082E8E0);
  __chkstk_darwin(v2);
  v354 = (char *)&v300 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v353 = sub_100047110(&qword_10082E8E8);
  v352 = *(_QWORD *)(v353 - 8);
  __chkstk_darwin(v353);
  v351 = (char *)&v300 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v350 = sub_100047110(&qword_10082E8F0);
  __chkstk_darwin(v350);
  v357 = (char *)&v300 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v356 = (uint64_t)&v300 - v8;
  v9 = type metadata accessor for HeartRateCurrentValueType(0, v7);
  v10 = __chkstk_darwin(v9);
  v348 = (char *)&v300 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v340 = type metadata accessor for HeartRateMetricView(0, v10);
  v349 = *(_QWORD *)(v340 - 8);
  __chkstk_darwin(v340);
  v339 = (char *)&v300 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v367 = sub_100047110(&qword_10082E8F8);
  v355 = *(_QWORD *)(v367 - 8);
  __chkstk_darwin(v367);
  v366 = (char *)&v300 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v365 = (char *)&v300 - v15;
  v338 = sub_100047110(&qword_10082E900);
  v16 = __chkstk_darwin(v338);
  v333 = (char *)&v300 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v328 = type metadata accessor for DistanceMetricView(0, v16);
  v326 = *(_QWORD *)(v328 - 8);
  __chkstk_darwin(v328);
  v325 = (char *)&v300 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v327 = sub_100047110(&qword_10082E908);
  __chkstk_darwin(v327);
  v329 = (char *)&v300 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v332 = sub_100047110(&qword_10082E910);
  v331 = *(_QWORD *)(v332 - 8);
  __chkstk_darwin(v332);
  v330 = (char *)&v300 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v324 = (char *)&v300 - v22;
  v24 = __chkstk_darwin(v23);
  v345 = (char *)&v300 - v25;
  v320 = type metadata accessor for PaceMetricView(0, v24);
  v319 = *(_QWORD *)(v320 - 8);
  __chkstk_darwin(v320);
  v318 = (char *)&v300 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v321 = sub_100047110(&qword_10082E918);
  __chkstk_darwin(v321);
  v322 = (char *)&v300 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v344 = (void (*)(_QWORD))sub_100047110(&qword_10082E920);
  v343 = (id)*((_QWORD *)v344 - 1);
  __chkstk_darwin(v344);
  v323 = (char *)&v300 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v317 = (char *)&v300 - v30;
  __chkstk_darwin(v31);
  v363 = (char *)&v300 - v32;
  v336 = sub_100047110(&qword_10082E928);
  __chkstk_darwin(v336);
  v337 = (uint64_t)&v300 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v362 = type metadata accessor for MultisportTransitionState(0);
  v334 = *(_QWORD *)(v362 - 8);
  __chkstk_darwin(v362);
  v360 = (char *)&v300 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v35);
  v361 = (char *)&v300 - v37;
  v314 = type metadata accessor for EnergyMetricView(0, v36);
  v303 = *(_QWORD *)(v314 - 8);
  __chkstk_darwin(v314);
  v307 = (char *)&v300 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v301 = (char *)&v300 - v40;
  v313 = sub_100047110(&qword_10082E930);
  __chkstk_darwin(v313);
  v306 = (char *)&v300 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v302 = (char *)&v300 - v43;
  v311 = sub_100047110(&qword_10082E938);
  v315 = *(_QWORD *)(v311 - 8);
  __chkstk_darwin(v311);
  v310 = (char *)&v300 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v309 = (char *)&v300 - v46;
  __chkstk_darwin(v47);
  v304 = (char *)&v300 - v48;
  __chkstk_darwin(v49);
  v305 = (char *)&v300 - v50;
  __chkstk_darwin(v51);
  v300 = (char *)&v300 - v52;
  __chkstk_darwin(v53);
  v312 = (char *)&v300 - v54;
  v335 = sub_100047110(&qword_10082E940);
  __chkstk_darwin(v335);
  v308 = (char *)&v300 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  v316 = (char *)&v300 - v57;
  v58 = sub_100047110(&qword_10082E948);
  __chkstk_darwin(v58);
  v347 = (uint64_t)&v300 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v373 = (uint64_t)&v300 - v61;
  v372 = type metadata accessor for WorkoutViewStyle(0);
  v368 = *(void (**)(_QWORD, _QWORD))(v372 - 8);
  __chkstk_darwin(v372);
  v370 = (char *)&v300 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for LocalizationFeature(0);
  v64 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v66 = (char *)&v300 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for Date(0);
  v68 = *(_QWORD *)(v67 - 8);
  v341 = (void (*)(char *, char *, uint64_t))v67;
  __chkstk_darwin(v67);
  v70 = (char *)&v300 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v71);
  v73 = (char *)&v300 - v72;
  v369 = (char *)&v300 - v72;
  v74 = (int *)type metadata accessor for AnimatingOpenGoalTimeRing(0);
  __chkstk_darwin(v74);
  v76 = (char *)&v300 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v346 = sub_100047110(&qword_100820768);
  v359 = *(_QWORD *)(v346 - 8);
  __chkstk_darwin(v346);
  v342 = (char *)&v300 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100047110(&qword_100820770);
  __chkstk_darwin(v78);
  v80 = (char *)&v300 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v81);
  v371 = (uint64_t)&v300 - v82;
  Date.init()(v83);
  v84 = (uint64_t)v73;
  v85 = v374;
  sub_100324F94((uint64_t)v70, v84);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v67);
  (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v66, enum case for LocalizationFeature.workout(_:), v63);
  v86 = static Localization.workoutUILocalizedString(_:feature:)(0xD000000000000027, 0x8000000100699450, v66);
  v88 = v87;
  v89 = *(void (**)(char *, uint64_t))(v64 + 8);
  v90 = v85;
  v89(v66, v63);
  v91 = sub_100047110((uint64_t *)&unk_100827460);
  v92 = swift_allocObject(v91, 72, 7);
  *(_OWORD *)(v92 + 16) = xmmword_100622F90;
  v93 = sub_100322F3C();
  v95 = v94;
  *(_QWORD *)(v92 + 56) = &type metadata for String;
  *(_QWORD *)(v92 + 64) = sub_100038CF8();
  *(_QWORD *)(v92 + 32) = v93;
  *(_QWORD *)(v92 + 40) = v95;
  v96 = v372;
  v98 = String.init(format:_:)(v86, v88, v92, v97);
  v100 = v99;
  swift_bridgeObjectRelease(v88, v99, v101, v102, v103, v104, v105, v106);
  v107 = (double (*)(uint64_t))swift_allocObject(&unk_100796870, 128, 7);
  v108 = v90[5];
  *((_OWORD *)v107 + 5) = v90[4];
  *((_OWORD *)v107 + 6) = v108;
  *((_OWORD *)v107 + 7) = v90[6];
  v109 = v90[1];
  *((_OWORD *)v107 + 1) = *v90;
  *((_OWORD *)v107 + 2) = v109;
  v110 = v90[3];
  *((_OWORD *)v107 + 3) = v90[2];
  *((_OWORD *)v107 + 4) = v110;
  (*(void (**)(char *, char *, _QWORD))(v68 + 32))(v76, v369, v341);
  v111 = (uint64_t *)&v76[v74[5]];
  *v111 = v98;
  v111[1] = (uint64_t)v100;
  v112 = (double (**)(uint64_t))&v76[v74[6]];
  *v112 = sub_1003253EC;
  v112[1] = v107;
  v113 = v368;
  v114 = v370;
  v369 = (char *)*((_QWORD *)v368 + 13);
  ((void (*)(char *, _QWORD, uint64_t))v369)(v370, enum case for WorkoutViewStyle.iOSHeroEnclosedMetric(_:), v96);
  sub_10032540C(v90);
  v115 = sub_1000083D8(&qword_100820798, type metadata accessor for AnimatingOpenGoalTimeRing, (uint64_t)&unk_100649048);
  v116 = v342;
  View.workoutViewStyle(_:)(v114, v74, v115);
  v117 = (void (*)(char *, uint64_t))v113[1];
  v117(v114, v96);
  sub_10032548C((uint64_t)v76);
  v375 = v74;
  v376 = v115;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v375, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
  v119 = v346;
  View.accessibility(identifier:)(0xD000000000000012, 0x8000000100699480, v346, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v359 + 8))(v116, v119);
  v364 = v80;
  sub_100045AD4((uint64_t)v80, v371, &qword_100820770);
  v381 = *v90;
  v120 = *((_QWORD *)&v381 + 1);
  v121 = swift_retain(*((_QWORD *)&v381 + 1));
  v122 = (void *)MultisportMetricsPublisher.currentMultisportActivity.getter(v121);
  sub_10004D634((uint64_t)&v381);
  if (!v122)
  {
    sub_1003254C8();
    v122 = (void *)static FIUIWorkoutActivityType.msIndoorCycle.getter();
  }
  v123 = objc_msgSend(v122, "isIndoor");

  v368 = (void (*)(_QWORD, _QWORD))v117;
  v346 = v120;
  if (v123)
  {
    v124 = swift_retain(v120);
    v125 = (void *)MultisportMetricsPublisher.currentMultisportActivity.getter(v124);
    sub_10004D634((uint64_t)&v381);
    if (!v125)
    {
      sub_1003254C8();
      v125 = (void *)static FIUIWorkoutActivityType.msIndoorCycle.getter();
    }
    v126 = (void *)objc_opt_self(HKWorkout);
    v127 = objc_msgSend(v126, "fiui_activitySupportsMetricType:activityType:activityMoveMode:", 2, v125, *((_QWORD *)v374 + 13));

    if (v127)
    {
      v128 = (id *)v374;
      v380 = v374[1];
      v363 = (char *)*((_QWORD *)&v380 + 1);
      v129 = swift_retain(*((_QWORD *)&v380 + 1));
      v130 = EnergyMetricsPublisher.activeEnergy.getter(v129);
      sub_10004D634((uint64_t)&v380);
      v343 = v128[12];
      v131 = v301;
      EnergyMetricView.init(energy:energyType:workoutSectionType:formattingManager:)(1, 1, v343, v130);
      v132 = swift_retain(v120);
      v133 = v361;
      MultisportMetricsPublisher.multisportTransitionState.getter(v132);
      sub_10004D634((uint64_t)&v381);
      LODWORD(v345) = enum case for MultisportTransitionState.notInTransition(_:);
      v134 = v334;
      v344 = *(void (**)(_QWORD))(v334 + 104);
      v135 = v360;
      v136 = v362;
      v344(v360);
      v342 = (char *)sub_1000083D8(&qword_10082E950, (uint64_t (*)(uint64_t))&type metadata accessor for MultisportTransitionState, (uint64_t)&protocol conformance descriptor for MultisportTransitionState);
      v137 = dispatch thunk of static Equatable.== infix(_:_:)(v133, v135, v136, v342);
      v138 = *(char **)(v134 + 8);
      v333 = v138;
      ((void (*)(char *, uint64_t))v138)(v135, v136);
      ((void (*)(char *, uint64_t))v138)(v133, v136);
      if ((v137 & 1) != 0)
        v139 = 1.0;
      else
        v139 = 0.35;
      v140 = v117;
      v141 = v303;
      v341 = *(void (**)(char *, char *, uint64_t))(v303 + 16);
      v142 = (uint64_t)v302;
      v143 = v314;
      v341(v302, v131, v314);
      v144 = v313;
      *(double *)(v142 + *(int *)(v313 + 36)) = v139;
      v334 = *(_QWORD *)(v141 + 8);
      ((void (*)(char *, uint64_t))v334)(v131, v143);
      LODWORD(v359) = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
      v145 = v120;
      v146 = v370;
      v147 = v372;
      ((void (*)(char *))v369)(v370);
      v332 = sub_1003256D4();
      v148 = v300;
      View.workoutViewStyle(_:)(v146, v144, v332);
      v140(v146, v147);
      sub_10001BE90(v142, &qword_10082E930);
      v149 = *(void (**)(char *, char *, uint64_t))(v315 + 32);
      v150 = v311;
      v149(v312, v148, v311);
      v151 = swift_retain(v363);
      v152 = EnergyMetricsPublisher.totalEnergy.getter(v151);
      sub_10004D634((uint64_t)&v380);
      v153 = v343;
      v154 = v307;
      EnergyMetricView.init(energy:energyType:workoutSectionType:formattingManager:)(3, 1, v153, v152);
      v155 = swift_retain(v145);
      MultisportMetricsPublisher.multisportTransitionState.getter(v155);
      sub_10004D634((uint64_t)&v381);
      ((void (*)(char *, _QWORD, uint64_t))v344)(v135, v345, v136);
      LOBYTE(v142) = dispatch thunk of static Equatable.== infix(_:_:)(v133, v135, v136, v342);
      v156 = v135;
      v157 = (void (*)(char *, uint64_t))v333;
      ((void (*)(char *, uint64_t))v333)(v156, v136);
      v157(v133, v136);
      if ((v142 & 1) != 0)
        v158 = 1.0;
      else
        v158 = 0.35;
      v159 = (uint64_t)v306;
      v160 = v314;
      v341(v306, v154, v314);
      v161 = v313;
      *(double *)(v159 + *(int *)(v313 + 36)) = v158;
      ((void (*)(char *, uint64_t))v334)(v154, v160);
      ((void (*)(char *, _QWORD, uint64_t))v369)(v146, v359, v147);
      v162 = v304;
      View.workoutViewStyle(_:)(v146, v161, v332);
      v368(v146, v147);
      sub_10001BE90(v159, &qword_10082E930);
      v163 = v305;
      v149(v305, v162, v150);
      v164 = v315;
      v165 = *(void (**)(char *, char *, uint64_t))(v315 + 16);
      v166 = v309;
      v167 = v312;
      v165(v309, v312, v150);
      v168 = v310;
      v165(v310, v163, v150);
      v169 = (uint64_t)v308;
      v165(v308, v166, v150);
      v170 = sub_100047110(&qword_10082E9D0);
      v165((char *)(v169 + *(int *)(v170 + 48)), v168, v150);
      v171 = *(void (**)(char *, uint64_t))(v164 + 8);
      v171(v163, v150);
      v171(v167, v150);
      v171(v168, v150);
      v171(v166, v150);
      v172 = sub_100047110(&qword_10082E990);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v172 - 8) + 56))(v169, 0, 1, v172);
      v173 = (uint64_t)v316;
      sub_100045AD4(v169, (uint64_t)v316, &qword_10082E940);
    }
    else
    {
      v242 = sub_100047110(&qword_10082E990);
      v173 = (uint64_t)v316;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v242 - 8) + 56))(v316, 1, 1, v242);
      LODWORD(v359) = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
    }
    v243 = v340;
    v241 = v339;
    v244 = v338;
    v245 = v337;
    v246 = v336;
    v247 = v335;
    sub_100021CC0(v173, v337, &qword_10082E940);
    swift_storeEnumTagMultiPayload(v245, v246, 0);
    v248 = sub_10032560C();
    v249 = sub_100028384(&qword_10082E998, &qword_10082E900, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v245, v247, v244, v248, v249);
    sub_10001BE90(v173, &qword_10082E940);
    v240 = v372;
    v219 = v370;
    v239 = v243;
  }
  else
  {
    v174 = (void *)*((_QWORD *)v374 + 12);
    sub_10004D65C((uint64_t)&v381);
    v175 = v174;
    v177 = MultisportMetricsPublisher.currentMultisportActivity.getter(v176);
    sub_10004D634((uint64_t)&v381);
    if (!v177)
    {
      sub_1003254C8();
      v177 = static FIUIWorkoutActivityType.msIndoorCycle.getter();
    }
    v178 = v374;
    v179 = sub_100323070((double (*)(__n128))&MultisportMetricsPublisher.lastMultisportLegAveragePace.getter, (double (*)(__n128))&MetricsPublisher.averagePace.getter);
    v380 = v178[4];
    v180 = swift_retain(*((_QWORD *)&v380 + 1));
    v181 = WorkoutStatePublisher.gpsUnavailable.getter(v180);
    sub_10004D634((uint64_t)&v380);
    v182 = v318;
    PaceMetricView.init(formattingManager:metricType:activityType:pace:gpsUnavailable:visualAlertDescription:)(v175, 8, v177, v181 & 1, 0, 0, v179);
    v183 = swift_retain(v120);
    v316 = v175;
    v184 = v361;
    MultisportMetricsPublisher.multisportTransitionState.getter(v183);
    sub_10004D634((uint64_t)&v381);
    v185 = v334;
    v186 = *(void (**)(_QWORD))(v334 + 104);
    v187 = v360;
    LODWORD(v342) = enum case for MultisportTransitionState.notInTransition(_:);
    v188 = v362;
    v341 = (void (*)(char *, char *, uint64_t))v186;
    v186(v360);
    v189 = sub_1000083D8(&qword_10082E950, (uint64_t (*)(uint64_t))&type metadata accessor for MultisportTransitionState, (uint64_t)&protocol conformance descriptor for MultisportTransitionState);
    v190 = dispatch thunk of static Equatable.== infix(_:_:)(v184, v187, v188, v189);
    v191 = *(void (**)(char *, uint64_t))(v185 + 8);
    v191(v187, v188);
    v191(v184, v188);
    if ((v190 & 1) != 0)
      v192 = 1.0;
    else
      v192 = 0.35;
    v193 = v319;
    v194 = (uint64_t)v322;
    v195 = v320;
    (*(void (**)(char *, char *, uint64_t))(v319 + 16))(v322, v182, v320);
    v196 = v321;
    *(double *)(v194 + *(int *)(v321 + 36)) = v192;
    (*(void (**)(char *, uint64_t))(v193 + 8))(v182, v195);
    v197 = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
    v198 = v370;
    v199 = v372;
    ((void (*)(char *, _QWORD, uint64_t))v369)(v370, enum case for WorkoutViewStyle.iOSSmallMetric(_:), v372);
    v200 = sub_100325504();
    v201 = v317;
    View.workoutViewStyle(_:)(v198, v196, v200);
    v368(v198, v199);
    sub_10001BE90(v194, &qword_10082E918);
    (*((void (**)(char *, char *, void (*)(_QWORD)))v343 + 4))(v363, v201, v344);
    v202 = sub_100323070((double (*)(__n128))&MultisportMetricsPublisher.lastMultisportLegDistance.getter, (double (*)(__n128))&MetricsPublisher.distance.getter);
    sub_10004D65C((uint64_t)&v381);
    v203 = v316;
    v205 = (void *)MultisportMetricsPublisher.currentMultisportActivity.getter(v204);
    sub_10004D634((uint64_t)&v381);
    v206 = v197;
    if (!v205)
    {
      sub_1003254C8();
      v205 = (void *)static FIUIWorkoutActivityType.msIndoorCycle.getter();
    }
    v207 = FIUIDistanceTypeForActivityType(v205);

    v208 = v325;
    DistanceMetricView.init(distance:formattingManager:distanceType:distanceUnit:)(v203, v207, 0, 1, v202);
    v209 = swift_retain(v120);
    v210 = v361;
    MultisportMetricsPublisher.multisportTransitionState.getter(v209);
    sub_10004D634((uint64_t)&v381);
    v211 = v360;
    v212 = v362;
    v341(v360, (char *)v342, v362);
    v213 = dispatch thunk of static Equatable.== infix(_:_:)(v210, v211, v212, v189);
    v191(v211, v212);
    v191(v210, v212);
    if ((v213 & 1) != 0)
      v214 = 1.0;
    else
      v214 = 0.35;
    v215 = v326;
    v216 = (uint64_t)v329;
    v217 = v328;
    (*(void (**)(char *, char *, uint64_t))(v326 + 16))(v329, v208, v328);
    v218 = v327;
    *(double *)(v216 + *(int *)(v327 + 36)) = v214;
    (*(void (**)(char *, uint64_t))(v215 + 8))(v208, v217);
    v219 = v370;
    LODWORD(v359) = v206;
    v220 = v372;
    ((void (*)(char *, uint64_t, uint64_t))v369)(v370, v206, v372);
    v221 = sub_100325588();
    v222 = v324;
    View.workoutViewStyle(_:)(v219, v218, v221);
    v368(v219, v220);
    sub_10001BE90(v216, &qword_10082E908);
    v223 = v331;
    v224 = v345;
    v225 = v332;
    (*(void (**)(char *, char *, unint64_t))(v331 + 32))(v345, v222, v332);
    v226 = v343;
    v227 = (void (*)(char *, char *, void (*)(_QWORD)))*((_QWORD *)v343 + 2);
    v228 = v323;
    v229 = v344;
    v227(v323, v363, v344);
    v230 = *(void (**)(char *, char *, unint64_t))(v223 + 16);
    v231 = v330;
    v230(v330, v224, v225);
    v232 = (uint64_t)v333;
    v227(v333, v228, v229);
    v233 = sub_100047110(&qword_10082E978);
    v230((char *)(v232 + *(int *)(v233 + 48)), v231, v225);
    v234 = *(void (**)(char *, unint64_t))(v223 + 8);
    v234(v231, v225);
    v235 = (void (*)(char *, void (*)(_QWORD)))v226[1];
    v235(v228, v229);
    v236 = v337;
    sub_100021CC0(v232, v337, &qword_10082E900);
    swift_storeEnumTagMultiPayload(v236, v336, 1);
    v237 = sub_10032560C();
    v238 = sub_100028384(&qword_10082E998, &qword_10082E900, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v236, v335, v338, v237, v238);
    sub_10001BE90(v232, &qword_10082E900);
    v234(v345, v225);
    v235(v363, v229);
    v239 = v340;
    v240 = v372;
    v241 = v339;
  }
  v250 = v374;
  v379 = v374[2];
  v251 = *((_QWORD *)&v379 + 1);
  v252 = swift_retain(*((_QWORD *)&v379 + 1));
  v253 = HeartRateMetricsPublisher.currentHeartRate.getter(v252);
  v255 = v254 & 1;
  sub_10004D634((uint64_t)&v379);
  v256 = swift_retain(v251);
  v257 = v348;
  HeartRateMetricsPublisher.currentHeartRateValueType.getter(v256);
  sub_10004D634((uint64_t)&v379);
  v258 = swift_retain(v251);
  v259 = HeartRateMetricsPublisher.isStaleHeartRate.getter(v258);
  sub_10004D634((uint64_t)&v379);
  v378 = v250[4];
  v260 = *((_QWORD *)&v378 + 1);
  swift_retain(*((_QWORD *)&v378 + 1));
  LOBYTE(v250) = WorkoutStatePublisher.workoutPaused.getter(v261);
  sub_10004D634((uint64_t)&v378);
  v262 = swift_retain(v260);
  LOBYTE(v260) = WorkoutStatePublisher.lowPowerModeAnimationSuspended.getter(v262);
  sub_10004D634((uint64_t)&v378);
  HeartRateMetricView.init(heartRate:heartRateValueType:isStale:workoutPaused:lowPowerModeAnimationSuspended:)(v253, v255, v257, v259 & 1, v250 & 1, v260 & 1);
  v263 = v359;
  v264 = v369;
  ((void (*)(char *, _QWORD, uint64_t))v369)(v219, v359, v240);
  v265 = sub_1000083D8(&qword_10082E9A0, (uint64_t (*)(uint64_t))&type metadata accessor for HeartRateMetricView, (uint64_t)&protocol conformance descriptor for HeartRateMetricView);
  v266 = v366;
  View.workoutViewStyle(_:)(v219, v239, v265);
  v267 = (void (*)(char *, uint64_t))v368;
  v368(v219, v240);
  (*(void (**)(char *, uint64_t))(v349 + 8))(v241, v239);
  v268 = v355;
  (*(void (**)(char *, char *, uint64_t))(v355 + 32))(v365, v266, v367);
  v269 = v346;
  swift_retain(v346);
  v271 = (int *)MultisportMetricsPublisher.nextMultisportActivity.getter(v270);
  sub_10004D634((uint64_t)&v381);
  v272 = swift_retain(v269);
  v273 = MultisportMetricsPublisher.multisportRemainingLegCount.getter(v272);
  sub_10004D634((uint64_t)&v381);
  v274.n128_u64[0] = 20.0;
  v275.n128_u64[0] = 23.0;
  v276 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(20.0, 23.0, v274, 23.0, v275, 25.0, 25.0);
  v375 = v271;
  v376 = v273;
  v377 = v276;
  ((void (*)(char *, uint64_t, uint64_t))v264)(v219, v263, v240);
  v277 = sub_100325688();
  v278 = v351;
  View.workoutViewStyle(_:)(v219, &type metadata for NextMultisportLegHintView, v277);
  v267(v219, v240);

  KeyPath = swift_getKeyPath(&unk_100635CC0);
  v280 = enum case for LegibilityWeight.regular(_:);
  v281 = type metadata accessor for LegibilityWeight(0);
  v282 = *(_QWORD *)(v281 - 8);
  v283 = (uint64_t)v354;
  (*(void (**)(char *, uint64_t, uint64_t))(v282 + 104))(v354, v280, v281);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v282 + 56))(v283, 0, 1, v281);
  v284 = (uint64_t)v357;
  v285 = (uint64_t *)&v357[*(int *)(v350 + 36)];
  v286 = sub_100047110(&qword_10082E9B0);
  sub_100021CC0(v283, (uint64_t)v285 + *(int *)(v286 + 28), &qword_10082E8E0);
  *v285 = KeyPath;
  v287 = v352;
  v288 = v353;
  (*(void (**)(uint64_t, char *, uint64_t))(v352 + 16))(v284, v278, v353);
  sub_10001BE90(v283, &qword_10082E8E0);
  (*(void (**)(char *, uint64_t))(v287 + 8))(v278, v288);
  v289 = v356;
  sub_100045AD4(v284, v356, &qword_10082E8F0);
  v290 = (uint64_t)v364;
  sub_100021CC0(v371, (uint64_t)v364, &qword_100820770);
  v291 = v347;
  sub_100021CC0(v373, v347, &qword_10082E948);
  v292 = *(void (**)(char *, char *, uint64_t))(v268 + 16);
  v293 = v366;
  v294 = v365;
  v295 = v367;
  v292(v366, v365, v367);
  sub_100021CC0(v289, v284, &qword_10082E8F0);
  v296 = v358;
  sub_100021CC0(v290, v358, &qword_100820770);
  v297 = (int *)sub_100047110(&qword_10082E9B8);
  sub_100021CC0(v291, v296 + v297[12], &qword_10082E948);
  v292((char *)(v296 + v297[16]), v293, v295);
  sub_100021CC0(v284, v296 + v297[20], &qword_10082E8F0);
  sub_10001BE90(v289, &qword_10082E8F0);
  v298 = *(void (**)(char *, uint64_t))(v268 + 8);
  v298(v294, v295);
  sub_10001BE90(v373, &qword_10082E948);
  sub_10001BE90(v371, &qword_100820770);
  sub_10001BE90(v284, &qword_10082E8F0);
  v298(v293, v295);
  sub_10001BE90(v291, &qword_10082E948);
  return sub_10001BE90((uint64_t)v364, &qword_100820770);
}

uint64_t sub_100324F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v17;
  __n128 v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  __n128 v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  __int128 v28;
  __int128 v29;

  v5 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - v9;
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *v2;
  v15 = swift_retain(*((_QWORD *)&v29 + 1));
  MultisportMetricsPublisher.currentActivityStart.getter(v15);
  sub_10004D634((uint64_t)&v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10001BE90((uint64_t)v10, (uint64_t *)&unk_100828370);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a2, a1, v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    v28 = v2[4];
    v17 = *((_QWORD *)&v28 + 1);
    v18 = swift_retain(*((_QWORD *)&v28 + 1));
    v19 = (CHWorkoutDetailHeartRateTableViewCell *)WorkoutStatePublisher.pauseTimes.getter(v18);
    sub_10004D634((uint64_t)&v28);
    v20 = swift_retain(v17);
    WorkoutStatePublisher.lastUnbalancedPauseStart.getter(v20);
    sub_10004D634((uint64_t)&v28);
    Date.offset(until:pauseTimes:lastUnbalancedPauseStart:)(a1, v19, v7);
    swift_bridgeObjectRelease(v19, v21, v22, v23, v24, v25, v26, v27);
    sub_10001BE90((uint64_t)v7, (uint64_t *)&unk_100828370);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

double sub_100325164(uint64_t a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  double v18;
  __n128 v19;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v22 = a1;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MultisportTransitionState(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - v11;
  v23 = *v1;
  v13 = *((_QWORD *)&v23 + 1);
  v14 = swift_retain(*((_QWORD *)&v23 + 1));
  MultisportMetricsPublisher.multisportTransitionState.getter(v14);
  sub_10004D634((uint64_t)&v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for MultisportTransitionState.notInTransition(_:), v6);
  v15 = sub_1000083D8(&qword_10082E950, (uint64_t (*)(uint64_t))&type metadata accessor for MultisportTransitionState, (uint64_t)&protocol conformance descriptor for MultisportTransitionState);
  v16 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v9, v6, v15);
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v9, v6);
  v17(v12, v6);
  if ((v16 & 1) != 0)
  {
    sub_100324F94(v22, (uint64_t)v5);
    v18 = Date.timeIntervalSince(_:)(v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v19 = swift_retain(v13);
    v18 = MultisportMetricsPublisher.lastMultisportLegTime.getter(v19);
    sub_10004D634((uint64_t)&v23);
  }
  return v18;
}

uint64_t sub_100325334@<X0>(_BYTE *a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  __int128 v8[7];

  v3 = v1[5];
  v8[4] = v1[4];
  v8[5] = v3;
  v8[6] = v1[6];
  v4 = v1[1];
  v8[0] = *v1;
  v8[1] = v4;
  v5 = v1[3];
  v8[2] = v1[2];
  v8[3] = v5;
  *a1 = 0;
  v6 = sub_100047110(&qword_10082E8D8);
  return sub_1003231FC(v8, (uint64_t)&a1[*(int *)(v6 + 44)]);
}

uint64_t sub_100325398()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 104));

  return swift_deallocObject(v0, 128, 7);
}

double sub_1003253EC(uint64_t a1)
{
  return sub_100325164(a1);
}

_QWORD *sub_10032540C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[9];
  v6 = a1[11];
  v7 = (void *)a1[12];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  v8 = v7;
  return a1;
}

uint64_t sub_10032548C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AnimatingOpenGoalTimeRing(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003254C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10081F420;
  if (!qword_10081F420)
  {
    v1 = objc_opt_self(FIUIWorkoutActivityType);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10081F420);
  }
  return result;
}

unint64_t sub_100325504()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E958;
  if (!qword_10082E958)
  {
    v1 = sub_100007050(&qword_10082E918);
    sub_1000083D8(&qword_10082E960, (uint64_t (*)(uint64_t))&type metadata accessor for PaceMetricView, (uint64_t)&protocol conformance descriptor for PaceMetricView);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082E958);
  }
  return result;
}

unint64_t sub_100325588()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E968;
  if (!qword_10082E968)
  {
    v1 = sub_100007050(&qword_10082E908);
    sub_1000083D8(&qword_10082E970, (uint64_t (*)(uint64_t))&type metadata accessor for DistanceMetricView, (uint64_t)&protocol conformance descriptor for DistanceMetricView);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082E968);
  }
  return result;
}

unint64_t sub_10032560C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E980;
  if (!qword_10082E980)
  {
    v1 = sub_100007050(&qword_10082E940);
    sub_100028384(&qword_10082E988, &qword_10082E990, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10082E980);
  }
  return result;
}

unint64_t sub_100325688()
{
  unint64_t result;

  result = qword_10082E9A8;
  if (!qword_10082E9A8)
  {
    result = swift_getWitnessTable(&unk_10063D49C, &type metadata for NextMultisportLegHintView);
    atomic_store(result, (unint64_t *)&qword_10082E9A8);
  }
  return result;
}

unint64_t sub_1003256D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E9C0;
  if (!qword_10082E9C0)
  {
    v1 = sub_100007050(&qword_10082E930);
    sub_1000083D8(&qword_10082E9C8, (uint64_t (*)(uint64_t))&type metadata accessor for EnergyMetricView, (uint64_t)&protocol conformance descriptor for EnergyMetricView);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082E9C0);
  }
  return result;
}

unint64_t sub_10032575C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E9D8;
  if (!qword_10082E9D8)
  {
    v1 = sub_100007050(&qword_10082E8D8);
    sub_100028384(&qword_10082E9E0, &qword_10082E9E8, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_100028384(&qword_10082E9F0, &qword_10082E9F8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082E9D8);
  }
  return result;
}

unint64_t sub_1003257FC()
{
  unint64_t result;

  result = qword_10082EA00;
  if (!qword_10082EA00)
  {
    result = swift_getWitnessTable(&unk_100635D48, &type metadata for MindfulnessSessionEntityQuery);
    atomic_store(result, (unint64_t *)&qword_10082EA00);
  }
  return result;
}

unint64_t sub_100325844()
{
  unint64_t result;

  result = qword_10082EA08[0];
  if (!qword_10082EA08[0])
  {
    result = swift_getWitnessTable(&unk_100635DA8, &type metadata for MindfulnessSessionEntityQuery);
    atomic_store(result, qword_10082EA08);
  }
  return result;
}

uint64_t sub_10032588C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[3] = a1;
  v2[4] = a2;
  v3 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[5] = swift_task_alloc(v3);
  v2[6] = swift_task_alloc(v3);
  v4 = type metadata accessor for UUID(0);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10082EA50);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v2[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10082EA58);
  v2[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[13] = v8;
  v2[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100325970, 0, 0);
}

uint64_t sub_100325970()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  void *v5;
  uint64_t v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  Class isa;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  Class v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v1 = v0[13];
  v2 = v0[14];
  v3 = v0[12];
  v4 = (CHWorkoutDetailHeartRateTableViewCell *)v0[3];
  v5 = (void *)objc_opt_self(HKQuery);
  swift_bridgeObjectRetain(v4);
  v7 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10014889C(v6);
  swift_bridgeObjectRelease(v4, v8, v9, v10, v11, v12, v13, v14);
  sub_1000DC0E8();
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7, v16, v17, v18, v19, v20, v21, v22);
  v23 = objc_msgSend(v5, "predicateForObjectsWithUUIDs:", isa);
  v0[15] = v23;

  sub_10001E724(0, (unint64_t *)&unk_10082E680, HKCategoryType_ptr);
  v24 = HKCategoryType.init(_:)(HKCategoryTypeIdentifierMindfulSession).super.super.super.isa;
  v25 = sub_10001E724(0, &qword_100823568, HKSample_ptr);
  v26 = v23;
  static HKSamplePredicate.categorySample(type:predicate:)(v24, v23, v25);

  v27 = sub_100047110(&qword_10082EA60);
  v28 = *(unsigned __int8 *)(v1 + 80);
  v29 = (v28 + 32) & ~v28;
  v30 = swift_allocObject(v27, v29 + *(_QWORD *)(v1 + 72), v28 | 7);
  *(_OWORD *)(v30 + 16) = xmmword_100622F90;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v30 + v29, v2, v3);
  v31 = *(_QWORD *)v4->cellPadding;
  v32 = sub_10001E724(0, &qword_10082EA78, HKCategorySample_ptr);
  HKSampleQueryDescriptor.init(predicates:sortDescriptors:limit:)(v30, _swiftEmptyArrayStorage, v31, 0, v32);
  AppDependency.wrappedValue.getter(v0 + 2);
  v33 = v0[2];
  v0[16] = v33;
  v34 = (_QWORD *)swift_task_alloc(async function pointer to HKSampleQueryDescriptor.result(for:)[1]);
  v0[17] = v34;
  *v34 = v0;
  v34[1] = sub_100325B78;
  return HKSampleQueryDescriptor.result(for:)(v33, v0[9]);
}

uint64_t sub_100325B78(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)();

  v3 = *v2;
  v5 = *(void **)(*v2 + 128);
  v4 = *(_QWORD *)(*v2 + 136);
  *(_QWORD *)(v3 + 144) = a1;
  *(_QWORD *)(v3 + 152) = v1;
  swift_task_dealloc(v4);

  if (v1)
    v6 = sub_100325F10;
  else
    v6 = sub_100325BE8;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100325BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 144);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_17:

    v32 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 144);
    v34 = *(_QWORD *)(v0 + 104);
    v33 = *(_QWORD *)(v0 + 112);
    v36 = *(_QWORD *)(v0 + 88);
    v35 = *(_QWORD *)(v0 + 96);
    v37 = *(_QWORD *)(v0 + 64);
    v39 = *(_QWORD *)(v0 + 40);
    v38 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v36, *(_QWORD *)(v0 + 72));
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    swift_bridgeObjectRelease(v32, v40, v41, v42, v43, v44, v45, v46);
    swift_task_dealloc(v33);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
  if (v1 < 0)
    v24 = *(_QWORD *)(v0 + 144);
  else
    v24 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 144));
  v2 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v1, v25, v26, v27, v28, v29, v30, v31);
  if (!v2)
    goto LABEL_17;
LABEL_3:
  result = specialized ContiguousArray.reserveCapacity(_:)(v2);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v5 = v1 & 0xC000000000000001;
    v47 = *(_QWORD *)(v0 + 144) + 32;
    do
    {
      if (v5)
        v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *(_QWORD *)(v0 + 144));
      else
        v18 = *(id *)(v47 + 8 * v4);
      v19 = v18;
      v20 = objc_msgSend(v18, "UUID", v47);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v20);

      v21 = objc_msgSend(v19, "startDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v21);

      v22 = objc_msgSend(v19, "endDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v22);

      v23 = objc_msgSend(v19, "metadata");
      if (v23)
      {
        v6 = v23;
        v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v23, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

      }
      else
      {
        v7 = 0;
      }
      v8 = *(_QWORD *)(v0 + 64);
      v10 = *(_QWORD *)(v0 + 40);
      v9 = *(_QWORD *)(v0 + 48);
      ++v4;
      v11 = objc_msgSend(v19, "sourceRevision");
      v12 = sub_100047110((uint64_t *)&unk_100828340);
      v13 = swift_allocObject(v12, 40, 7);
      *(_OWORD *)(v13 + 16) = xmmword_100623630;
      *(_QWORD *)(v13 + 32) = v19;
      v48 = v13;
      specialized Array._endMutation()(v13);
      v14 = objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionViewModel(0));
      v15 = MindfulnessSessionViewModel.init(uuid:startDate:endDate:duration:metadata:sourceRevision:mindfulnessSessions:)(v8, v9, v10, 0, 1, v7, v11, v48);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v16 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
      specialized ContiguousArray._endMutation()(v17);
    }
    while (v2 != v4);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_100325F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100325FBC(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[3] = a1;
  v2 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[4] = swift_task_alloc(v2);
  v1[5] = swift_task_alloc(v2);
  v3 = type metadata accessor for UUID(0);
  v1[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_10082EA50);
  v1[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[8] = v5;
  v1[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10082EA58);
  v1[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[11] = v7;
  v1[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10032609C, 0, 0);
}

uint64_t sub_10032609C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Class isa;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v2 = v0[11];
  v1 = v0[12];
  v3 = v0[10];
  sub_10001E724(0, (unint64_t *)&unk_10082E680, HKCategoryType_ptr);
  isa = HKCategoryType.init(_:)(HKCategoryTypeIdentifierMindfulSession).super.super.super.isa;
  v5 = sub_10001E724(0, &qword_100823568, HKSample_ptr);
  static HKSamplePredicate.categorySample(type:predicate:)(isa, 0, v5);

  v6 = sub_100047110(&qword_10082EA60);
  v7 = *(unsigned __int8 *)(v2 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject(v6, v8 + *(_QWORD *)(v2 + 72), v7 | 7);
  *(_OWORD *)(v9 + 16) = xmmword_100622F90;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v9 + v8, v1, v3);
  v10 = sub_100047110(&qword_10082EA68);
  v11 = sub_100047110(&qword_10082EA70);
  v12 = swift_allocObject(v10, ((*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) | 7);
  *(_OWORD *)(v12 + 16) = xmmword_100622F90;
  KeyPath = swift_getKeyPath(&unk_100635E28);
  SortDescriptor.init<A>(_:order:)(KeyPath, 1);
  v14 = sub_10001E724(0, &qword_10082EA78, HKCategorySample_ptr);
  HKSampleQueryDescriptor.init(predicates:sortDescriptors:limit:)(v9, v12, 10, 0, v14);
  AppDependency.wrappedValue.getter(v0 + 2);
  v15 = v0[2];
  v0[13] = v15;
  v16 = (_QWORD *)swift_task_alloc(async function pointer to HKSampleQueryDescriptor.result(for:)[1]);
  v0[14] = v16;
  *v16 = v0;
  v16[1] = sub_100326284;
  return HKSampleQueryDescriptor.result(for:)(v15, v0[7]);
}

uint64_t sub_100326284(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)();

  v3 = *v2;
  v5 = *(void **)(*v2 + 104);
  v4 = *(_QWORD *)(*v2 + 112);
  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = v1;
  swift_task_dealloc(v4);

  if (v1)
    v6 = sub_100326600;
  else
    v6 = sub_1003262F4;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1003262F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 120);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v39 = *(_QWORD *)(v0 + 120);
    else
      v39 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 120));
    v2 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v1, v40, v41, v42, v43, v44, v45, v46);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v2)
    goto LABEL_13;
  result = specialized ContiguousArray.reserveCapacity(_:)(v2);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v5 = v1 & 0xC000000000000001;
    v47 = *(_QWORD *)(v0 + 120) + 32;
    do
    {
      if (v5)
        v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *(_QWORD *)(v0 + 120));
      else
        v18 = *(id *)(v47 + 8 * v4);
      v19 = v18;
      v20 = objc_msgSend(v18, "UUID", v47);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v20);

      v21 = objc_msgSend(v19, "startDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v21);

      v22 = objc_msgSend(v19, "endDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v22);

      v23 = objc_msgSend(v19, "metadata");
      if (v23)
      {
        v6 = v23;
        v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v23, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

      }
      else
      {
        v7 = 0;
      }
      v9 = *(_QWORD *)(v0 + 40);
      v8 = *(_QWORD *)(v0 + 48);
      v10 = *(_QWORD *)(v0 + 32);
      ++v4;
      v11 = objc_msgSend(v19, "sourceRevision");
      v12 = sub_100047110((uint64_t *)&unk_100828340);
      v13 = swift_allocObject(v12, 40, 7);
      *(_OWORD *)(v13 + 16) = xmmword_100623630;
      *(_QWORD *)(v13 + 32) = v19;
      v48 = v13;
      specialized Array._endMutation()(v13);
      v14 = objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionViewModel(0));
      v15 = MindfulnessSessionViewModel.init(uuid:startDate:endDate:duration:metadata:sourceRevision:mindfulnessSessions:)(v8, v9, v10, 0, 1, v7, v11, v48);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v16 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
      specialized ContiguousArray._endMutation()(v17);
    }
    while (v2 != v4);
LABEL_13:
    v24 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 120);
    v26 = *(_QWORD *)(v0 + 88);
    v25 = *(_QWORD *)(v0 + 96);
    v28 = *(_QWORD *)(v0 + 72);
    v27 = *(_QWORD *)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 40);
    v29 = *(_QWORD *)(v0 + 48);
    v31 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(v28, *(_QWORD *)(v0 + 56));
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    swift_bridgeObjectRelease(v24, v32, v33, v34, v35, v36, v37, v38);
    swift_task_dealloc(v25);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
  __break(1u);
  return result;
}

uint64_t sub_100326600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(v4, *(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032669C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _OWORD v5[2];
  uint64_t v6;

  sub_100047110(&qword_1008201E0);
  v2 = type metadata accessor for AppDependencyManager(0);
  memset(v5, 0, sizeof(v5));
  v6 = 0;
  v3 = static AppDependencyManager.shared.getter(v2);
  result = AppDependency.__allocating_init(key:manager:)(v5, v3);
  *a1 = result;
  return result;
}

uint64_t sub_100326708(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_10082EA84);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001A48BC;
  return sub_10032588C(a1, v4);
}

uint64_t sub_10032675C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *v1;
  v4 = (_QWORD *)swift_task_alloc(dword_10082EA4C);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_100100D3C;
  return sub_100325FBC(v3);
}

unint64_t sub_1003267B0()
{
  unint64_t result;

  result = qword_10082EA20;
  if (!qword_10082EA20)
  {
    result = swift_getWitnessTable(&unk_100635DD0, &type metadata for MindfulnessSessionEntityQuery);
    atomic_store(result, (unint64_t *)&qword_10082EA20);
  }
  return result;
}

unint64_t sub_1003267F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082EA28;
  if (!qword_10082EA28)
  {
    v1 = sub_100007050(qword_10082EA30);
    sub_10021F714();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_10082EA28);
  }
  return result;
}

uint64_t sub_10032685C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10021EE44();
  *v5 = v2;
  v5[1] = sub_1000DA0E4;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for MindfulnessSessionEntityQuery()
{
  return &type metadata for MindfulnessSessionEntityQuery;
}

id sub_1003268FC(uint64_t a1, _QWORD *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  Swift::OpaquePointer v13;
  Class isa;
  Swift::OpaquePointer v15;
  Class v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  objc_class *v26;
  id v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  objc_super v36;

  v5 = type metadata accessor for Artwork(0);
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  __chkstk_darwin(v5);
  v32 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for StandardArtworkDescriptor(0);
  v31 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ArtworkDescriptor(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100016804(a2, a2[3]);
  v12 = v2;
  v13._rawValue = (void *)CatalogLockup.titleTags.getter();
  isa = MediaTagStringBuilding.attributedString(for:)(v13).super.isa;
  swift_bridgeObjectRelease(v13._rawValue);
  *(_QWORD *)&v12[OBJC_IVAR___CHCatalogItemViewModel_title] = isa;
  sub_100016804(a2, a2[3]);
  v15._rawValue = (void *)CatalogLockup.subtitleTags.getter();
  v16 = MediaTagStringBuilding.attributedString(for:)(v15).super.isa;
  v17 = swift_bridgeObjectRelease(v15._rawValue);
  *(_QWORD *)&v12[OBJC_IVAR___CHCatalogItemViewModel_subtitle] = v16;
  v18 = CatalogLockup.artworkDescriptor.getter(v17);
  ArtworkDescriptor.standardArtworkDescriptor.getter(v18);
  v19 = sub_100327A9C((uint64_t)v11);
  v20 = v32;
  StandardArtworkDescriptor.artwork.getter(v19);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
  v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v34 + 32))(&v12[OBJC_IVAR___CHCatalogItemViewModel_artwork], v20, v35);
  v22 = CatalogLockup.mediaType.getter(v21);
  v23 = &v12[OBJC_IVAR___CHCatalogItemViewModel_mediaType];
  *(_QWORD *)v23 = v22;
  *((_QWORD *)v23 + 1) = v24;
  v23[16] = v25;
  *(_QWORD *)&v12[OBJC_IVAR___CHCatalogItemViewModel_workouts] = _swiftEmptyArrayStorage;

  v26 = (objc_class *)type metadata accessor for CatalogItemViewModel(0);
  v36.receiver = v12;
  v36.super_class = v26;
  v27 = objc_msgSendSuper2(&v36, "init");
  v28 = type metadata accessor for CatalogLockup(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(a1, v28);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a2);
  return v27;
}

id sub_100326B64(uint64_t a1, CHWorkoutDetailHeartRateTableViewCell *a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __n128 v20;
  id v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  double v33;
  const char *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::OpaquePointer v58;
  Class isa;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  objc_class *v73;
  id v74;
  uint64_t v75;
  uint64_t v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  CHWorkoutDetailHeartRateTableViewCell *v85;
  objc_super v86;

  v82 = a4;
  v83 = a3;
  v9 = type metadata accessor for MediaDuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10082EAD0);
  __chkstk_darwin(v13);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v77 - v17;
  v19 = v5;
  v21 = sub_1003276E8(a2, a1, v20);
  v80 = v19;
  v81 = a5;
  *(_QWORD *)&v19[OBJC_IVAR___CHCatalogItemViewModel_title] = v21;
  v22 = (CHWorkoutDetailHeartRateTableViewCell *)Configuration.filterDurations.getter();
  v29 = *(_QWORD *)a2->cellPadding;
  if (v29)
  {
    v79 = a1;
    v85 = v22;
    v30 = *(_QWORD *)(type metadata accessor for CatalogWorkout(0) - 8);
    v31 = (char *)a2 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
    v84 = *(_QWORD *)(v30 + 72);
    v78 = a2;
    swift_bridgeObjectRetain(a2);
    v33 = 0.0;
    do
    {
      __chkstk_darwin(v32);
      *(&v77 - 2) = (uint64_t)v31;
      sub_1003933F4((uint64_t (*)(char *))sub_100327A80, v40, v18);
      sub_100021CC0((uint64_t)v18, (uint64_t)v15, &qword_10082EAD0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
      {
        sub_10001BE90((uint64_t)v18, &qword_10082EAD0);
        v32 = sub_10001BE90((uint64_t)v15, &qword_10082EAD0);
      }
      else
      {
        v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
        v42 = MediaDuration.duration.getter(v41);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        v32 = sub_10001BE90((uint64_t)v18, &qword_10082EAD0);
        v33 = v33 + v42;
      }
      v31 += v84;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease(v85, v34, v85, v35, v36, v37, v38, v39);
    a2 = v78;
    swift_bridgeObjectRelease(v78, v43, v44, v45, v46, v47, v48, v49);
    v50 = v79;
  }
  else
  {
    swift_bridgeObjectRelease(v22, (SEL)v22, v23, v24, v25, v26, v27, v28);
    v33 = 0.0;
    v50 = a1;
  }
  v51 = v82;
  sub_100016804(v82, v82[3]);
  v52 = sub_100047110(&qword_10082EAD8);
  v53 = type metadata accessor for MediaTag(0);
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(_QWORD *)(v54 + 72);
  v56 = *(unsigned __int8 *)(v54 + 80);
  v57 = (v56 + 32) & ~v56;
  v58._rawValue = (void *)swift_allocObject(v52, v57 + v55, v56 | 7);
  *((_OWORD *)v58._rawValue + 1) = xmmword_100622F90;
  *(double *)((char *)v58._rawValue + v57) = v33;
  swift_storeEnumTagMultiPayload((char *)v58._rawValue + v57, v53, 2);
  isa = MediaTagStringBuilding.attributedString(for:)(v58).super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v58._rawValue, v60, v61, v62, v63, v64, v65, v66);
  v67 = v80;
  *(_QWORD *)&v80[OBJC_IVAR___CHCatalogItemViewModel_subtitle] = isa;
  v68 = &v67[OBJC_IVAR___CHCatalogItemViewModel_artwork];
  v69 = type metadata accessor for Artwork(0);
  v70 = *(_QWORD *)(v69 - 8);
  v71 = v83;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v68, v83, v69);
  v72 = &v67[OBJC_IVAR___CHCatalogItemViewModel_mediaType];
  *(_QWORD *)v72 = 0;
  *((_QWORD *)v72 + 1) = 0;
  v72[16] = -1;
  *(_QWORD *)&v67[OBJC_IVAR___CHCatalogItemViewModel_workouts] = a2;

  v73 = (objc_class *)type metadata accessor for CatalogItemViewModel(0);
  v86.receiver = v67;
  v86.super_class = v73;
  v74 = objc_msgSendSuper2(&v86, "init");
  v75 = type metadata accessor for Configuration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v81, v75);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v51);
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v69);
  sub_10001BE90(v50, &qword_10082EAE0);
  return v74;
}

uint64_t sub_100326F3C()
{
  return sub_100326F84((__n128)xmmword_1006235B0);
}

uint64_t sub_100326F78()
{
  return sub_100326F84((__n128)xmmword_100623580);
}

uint64_t sub_100326F84(__n128 a1)
{
  uint64_t v1;
  uint64_t *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  __n128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v2 = (uint64_t *)(v1 + OBJC_IVAR___CHCatalogItemViewModel_mediaType);
  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR___CHCatalogItemViewModel_mediaType + 16);
  if (v3 == 255)
  {
    v8 = 0;
  }
  else
  {
    v5 = *v2;
    v4 = v2[1];
    v12 = v5;
    v13 = v4;
    v14 = v3;
    v10 = a1;
    v11 = 1;
    sub_100327AD8(v5, v4, v3 & 1);
    sub_100327AD8(v5, v4, v3 & 1);
    v6 = sub_100327AE8();
    v7 = sub_100327B2C();
    v8 = static PortableEnum<>.== infix(_:_:)(&v12, &v10, &type metadata for CatalogMediaType, v6, v7, &protocol witness table for String);
    sub_100327B70(v12, v13, v14);
    sub_100327B80(v5, v4, v3);
  }
  return v8 & 1;
}

uint64_t sub_10032708C()
{
  uint64_t v0;
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  _QWORD v9[2];
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___CHCatalogItemViewModel_mediaType);
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR___CHCatalogItemViewModel_mediaType + 16);
  if (v2 == 255)
  {
    v7 = 0;
  }
  else
  {
    v4 = *v1;
    v3 = v1[1];
    v11 = v4;
    v12 = v3;
    v13 = v2;
    v9[0] = 0;
    v9[1] = 0;
    v10 = 1;
    sub_100327AD8(v4, v3, v2 & 1);
    sub_100327AD8(v4, v3, v2 & 1);
    v5 = sub_100327AE8();
    v6 = sub_100327B2C();
    v7 = static PortableEnum<>.== infix(_:_:)(&v11, v9, &type metadata for CatalogMediaType, v5, v6, &protocol witness table for String);
    sub_100327B70(v11, v12, v13);
    sub_100327B80(v4, v3, v2);
  }
  return v7 & 1;
}

BOOL sub_100327194(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v17;

  v3 = type metadata accessor for CatalogWorkout(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MediaDuration.duration.getter(v5);
  v9 = v8 - MediaDuration.lowerBuffer.getter();
  v11 = MediaDuration.duration.getter(v10);
  v12 = MediaDuration.upperBuffer.getter();
  v13 = ((double (*)(void))CatalogWorkout.duration.getter)();
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a2, v3);
  v15 = v9 <= v13 && CatalogWorkout.duration.getter(v14) <= v11 + v12;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v15;
}

uint64_t sub_1003272E4()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  Swift::String v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  Swift::String v14;
  id v15;
  uint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  Swift::String v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  Swift::String v27;
  id v28;
  uint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  Swift::String v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  Swift::String v40;
  uint64_t v41;
  unint64_t v42;
  Swift::String v43;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  Swift::String v52;
  uint64_t v53;
  Swift::String v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  __int128 v64;
  objc_super v65;
  __int128 v66;

  v1 = v0;
  *(_QWORD *)&v64 = 0;
  *((_QWORD *)&v64 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(53);
  v66 = v64;
  v65.receiver = v0;
  v65.super_class = (Class)type metadata accessor for CatalogItemViewModel(0);
  v2 = objc_msgSendSuper2(&v65, "description");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6._countAndFlagsBits = v3;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(v5, v7, v8, v9, v10, v11, v12, v13);
  v14._countAndFlagsBits = 0x203A656C74697420;
  v14._object = (void *)0xE800000000000000;
  String.append(_:)(v14);
  v15 = objc_msgSend(*(id *)&v1[OBJC_IVAR___CHCatalogItemViewModel_title], "string");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19._countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v18, v20, v21, v22, v23, v24, v25, v26);
  v27._countAndFlagsBits = 0x746974627573202CLL;
  v27._object = (void *)0xEB0000000020656CLL;
  String.append(_:)(v27);
  v28 = objc_msgSend(*(id *)&v1[OBJC_IVAR___CHCatalogItemViewModel_subtitle], "string");
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v31 = v30;

  v32._countAndFlagsBits = v29;
  v32._object = v31;
  String.append(_:)(v32);
  swift_bridgeObjectRelease(v31, v33, v34, v35, v36, v37, v38, v39);
  v40._countAndFlagsBits = 0x726F77747261202CLL;
  v40._object = (void *)0xEB00000000203A6BLL;
  String.append(_:)(v40);
  v41 = type metadata accessor for Artwork(0);
  v42 = sub_100327B98();
  v43._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v41, v42);
  object = (CHWorkoutDetailHeartRateTableViewCell *)v43._object;
  String.append(_:)(v43);
  swift_bridgeObjectRelease(object, v45, v46, v47, v48, v49, v50, v51);
  v52._countAndFlagsBits = 0x54616964656D202CLL;
  v52._object = (void *)0xED0000203A657079;
  String.append(_:)(v52);
  v53 = sub_100047110(&qword_10082EB00);
  v54._countAndFlagsBits = Optional.description.getter(v53);
  v55 = (CHWorkoutDetailHeartRateTableViewCell *)v54._object;
  String.append(_:)(v54);
  swift_bridgeObjectRelease(v55, v56, v57, v58, v59, v60, v61, v62);
  return v66;
}

id sub_100327554()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CatalogItemViewModel(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100327610()
{
  return type metadata accessor for CatalogItemViewModel(0);
}

uint64_t type metadata accessor for CatalogItemViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_10082EAC0;
  if (!qword_10082EAC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CatalogItemViewModel);
  return result;
}

uint64_t sub_100327654(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for Artwork(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_100635E78;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

id sub_1003276E8(CHWorkoutDetailHeartRateTableViewCell *a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  uint64_t v20;
  __n128 v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  const char *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  char v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  const char *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  id v63;
  NSString v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  unint64_t v74;
  const char *v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  NSString v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  SEL v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  uint64_t v100;
  CHWorkoutDetailHeartRateTableViewCell *v101;
  uint64_t v102;
  uint64_t v103[2];
  CHWorkoutDetailHeartRateTableViewCell *v104;

  v5 = type metadata accessor for CatalogModality(0, a3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10082EAE0);
  __chkstk_darwin(v9);
  v11 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Playlist(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100021CC0(a2, (uint64_t)v11, &qword_10082EAE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v102 = v5;
    sub_10001BE90((uint64_t)v11, &qword_10082EAE0);
    v104 = (CHWorkoutDetailHeartRateTableViewCell *)&_swiftEmptySetSingleton;
    v16 = *(_QWORD *)a1->cellPadding;
    if (v16)
    {
      v17 = *(_QWORD *)(type metadata accessor for CatalogWorkout(0) - 8);
      v18 = (char *)a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      v19 = a1;
      v20 = *(_QWORD *)(v17 + 72);
      v101 = v19;
      v21 = swift_bridgeObjectRetain(v19);
      v22 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
      do
      {
        v30 = CatalogWorkout.modality.getter(v21);
        v31 = CatalogModality.name.getter(v30);
        v33 = v32;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v102);
        v34 = v104;
        swift_bridgeObjectRetain(v104);
        v35 = sub_1002D41B4(v31, (uint64_t)v33, (uint64_t)v34);
        swift_bridgeObjectRelease(v34, v36, v37, v38, v39, v40, v41, v42);
        if ((v35 & 1) != 0)
        {
          swift_bridgeObjectRelease(v33, v43, v44, v45, v46, v47, v48, v49);
        }
        else
        {
          swift_bridgeObjectRetain(v33);
          sub_100142388(v103, v31, (uint64_t)v33);
          swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v103[1], v50, v51, v52, v53, v54, v55, v56);
          if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
            v22 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013F75C(0, *(_QWORD *)v22->cellPadding + 1, 1, v22);
          v58 = *(_QWORD *)v22->cellPadding;
          v57 = *(_QWORD *)v22->cellInset;
          if (v58 >= v57 >> 1)
            v22 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013F75C((_QWORD *)(v57 > 1), v58 + 1, 1, v22);
          *(_QWORD *)v22->cellPadding = v58 + 1;
          v59 = (char *)v22 + 16 * v58;
          *((_QWORD *)v59 + 4) = v31;
          *((_QWORD *)v59 + 5) = v33;
        }
        v18 += v20;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease(v101, v23, v24, v25, v26, v27, v28, v29);
    }
    else
    {
      v22 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
    }
    v103[0] = (uint64_t)v22;
    v73 = sub_100047110((uint64_t *)&unk_10081E160);
    v74 = sub_10004791C();
    BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v73, v74);
    v76 = (CHWorkoutDetailHeartRateTableViewCell *)v75;
    swift_bridgeObjectRelease(v22, v75, v77, v78, v79, v80, v81, v82);
    v83 = objc_allocWithZone((Class)NSAttributedString);
    v84 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v76, v85, v86, v87, v88, v89, v90, v91);
    v72 = objc_msgSend(v83, "initWithString:", v84);

    swift_bridgeObjectRelease(v104, v92, v93, v94, v95, v96, v97, v98);
  }
  else
  {
    v60 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    Playlist.name.getter(v60);
    v62 = v61;
    v63 = objc_allocWithZone((Class)NSAttributedString);
    v64 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v62, v65, v66, v67, v68, v69, v70, v71);
    v72 = objc_msgSend(v63, "initWithString:", v64);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return v72;
}

BOOL sub_100327A80(uint64_t a1)
{
  uint64_t v1;

  return sub_100327194(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100327A9C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArtworkDescriptor(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100327AD8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRetain(a2);
  return result;
}

unint64_t sub_100327AE8()
{
  unint64_t result;

  result = qword_10082EAE8;
  if (!qword_10082EAE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CatalogMediaType, &type metadata for CatalogMediaType);
    atomic_store(result, (unint64_t *)&qword_10082EAE8);
  }
  return result;
}

unint64_t sub_100327B2C()
{
  unint64_t result;

  result = qword_10082EAF0;
  if (!qword_10082EAF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CatalogMediaType, &type metadata for CatalogMediaType);
    atomic_store(result, (unint64_t *)&qword_10082EAF0);
  }
  return result;
}

uint64_t sub_100327B70(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t sub_100327B80(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_100327B70(result, a2, a3 & 1);
  return result;
}

unint64_t sub_100327B98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082EAF8;
  if (!qword_10082EAF8)
  {
    v1 = type metadata accessor for Artwork(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Artwork, v1);
    atomic_store(result, (unint64_t *)&qword_10082EAF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadCardPendingView()
{
  return &type metadata for LoadCardPendingView;
}

uint64_t sub_100327BF0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B4490, 1);
}

uint64_t sub_100327C00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v29;
  _OWORD v30[3];
  _OWORD v31[10];
  _BYTE v32[167];
  char v33;
  __int128 v34;
  _BYTE v35[168];
  _QWORD v36[2];
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[23];

  v2 = sub_100047110(&qword_10082EB18);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100047110(&qword_10082EB20);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - v9;
  *v4 = static Alignment.center.getter(v11);
  v4[1] = v12;
  v13 = sub_100047110(&qword_10082EB28);
  v14 = sub_100327FBC((uint64_t)v4 + *(int *)(v13 + 44));
  v15 = static Alignment.center.getter(v14);
  _FrameLayout.init(width:height:alignment:)(v30, 0x4052800000000000, 0, 0x4052800000000000, 0, v15, v16);
  sub_100021CC0((uint64_t)v4, (uint64_t)v7, &qword_10082EB18);
  v17 = &v7[*(int *)(v5 + 36)];
  v18 = v30[1];
  *(_OWORD *)v17 = v30[0];
  *((_OWORD *)v17 + 1) = v18;
  *((_OWORD *)v17 + 2) = v30[2];
  sub_10001BE90((uint64_t)v4, &qword_10082EB18);
  v19 = sub_100045AD4((uint64_t)v7, (uint64_t)v10, &qword_10082EB20);
  v20 = static HorizontalAlignment.leading.getter(v19);
  sub_100328420((uint64_t)v31);
  *(_OWORD *)&v32[103] = v31[6];
  *(_OWORD *)&v32[119] = v31[7];
  *(_OWORD *)&v32[135] = v31[8];
  *(_OWORD *)&v32[151] = v31[9];
  *(_OWORD *)&v32[39] = v31[2];
  *(_OWORD *)&v32[55] = v31[3];
  *(_OWORD *)&v32[71] = v31[4];
  *(_OWORD *)&v32[87] = v31[5];
  *(_OWORD *)&v32[7] = v31[0];
  v33 = 0;
  *(_OWORD *)&v32[23] = v31[1];
  sub_100021CC0((uint64_t)v10, (uint64_t)v7, &qword_10082EB20);
  sub_100021CC0((uint64_t)v7, a1, &qword_10082EB20);
  v21 = *(int *)(sub_100047110(&qword_10082EB30) + 48);
  *(_OWORD *)&v35[113] = *(_OWORD *)&v32[112];
  *(_OWORD *)&v35[129] = *(_OWORD *)&v32[128];
  *(_OWORD *)&v35[145] = *(_OWORD *)&v32[144];
  *(_OWORD *)&v35[49] = *(_OWORD *)&v32[48];
  *(_OWORD *)&v35[65] = *(_OWORD *)&v32[64];
  *(_OWORD *)&v35[81] = *(_OWORD *)&v32[80];
  *(_OWORD *)&v35[97] = *(_OWORD *)&v32[96];
  *(_OWORD *)&v35[17] = *(_OWORD *)&v32[16];
  v22 = a1 + v21;
  v34 = (unint64_t)v20;
  v35[0] = 0;
  *(_QWORD *)&v35[160] = *(_QWORD *)&v32[159];
  *(_OWORD *)&v35[33] = *(_OWORD *)&v32[32];
  *(_OWORD *)&v35[1] = *(_OWORD *)v32;
  v23 = *(_OWORD *)&v35[128];
  *(_OWORD *)(v22 + 128) = *(_OWORD *)&v35[112];
  *(_OWORD *)(v22 + 144) = v23;
  *(_OWORD *)(v22 + 160) = *(_OWORD *)&v35[144];
  *(_QWORD *)(v22 + 176) = *(_QWORD *)&v35[160];
  v24 = *(_OWORD *)&v35[64];
  *(_OWORD *)(v22 + 64) = *(_OWORD *)&v35[48];
  *(_OWORD *)(v22 + 80) = v24;
  v25 = *(_OWORD *)&v35[96];
  *(_OWORD *)(v22 + 96) = *(_OWORD *)&v35[80];
  *(_OWORD *)(v22 + 112) = v25;
  v26 = *(_OWORD *)v35;
  *(_OWORD *)v22 = v34;
  *(_OWORD *)(v22 + 16) = v26;
  v27 = *(_OWORD *)&v35[32];
  *(_OWORD *)(v22 + 32) = *(_OWORD *)&v35[16];
  *(_OWORD *)(v22 + 48) = v27;
  sub_100328B00((uint64_t)&v34);
  sub_10001BE90((uint64_t)v10, &qword_10082EB20);
  v45 = *(_OWORD *)&v32[112];
  v46 = *(_OWORD *)&v32[128];
  *(_OWORD *)v47 = *(_OWORD *)&v32[144];
  v41 = *(_OWORD *)&v32[48];
  v42 = *(_OWORD *)&v32[64];
  v43 = *(_OWORD *)&v32[80];
  v44 = *(_OWORD *)&v32[96];
  v38 = *(_OWORD *)v32;
  v39 = *(_OWORD *)&v32[16];
  v36[0] = v20;
  v36[1] = 0;
  v37 = 0;
  *(_QWORD *)&v47[15] = *(_QWORD *)&v32[159];
  v40 = *(_OWORD *)&v32[32];
  sub_100328B9C((uint64_t)v36);
  return sub_10001BE90((uint64_t)v7, &qword_10082EB20);
}

uint64_t sub_100327FBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t Band;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v56 = a1;
  Band = type metadata accessor for TrainingLoadBand(0);
  v52 = *(_QWORD *)(Band - 8);
  __chkstk_darwin(Band);
  v51 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100047110(&qword_10082EB38);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v48 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100047110(&qword_10082EB40);
  __chkstk_darwin(v50);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v49 = (uint64_t)&v48 - v6;
  v7 = sub_100047110(&qword_100821238);
  __chkstk_darwin(v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v10);
  v12 = (_OWORD *)((char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_100047110(&qword_10082B1A0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v48 - v18;
  v20 = static Color.white.getter(v17);
  v21 = Color.opacity(_:)(0.1);
  swift_release(v20);
  v22 = (char *)v12 + *(int *)(v10 + 20);
  v23 = enum case for RoundedCornerStyle.continuous(_:);
  v24 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
  __asm { FMOV            V0.2D, #4.0 }
  *v12 = _Q0;
  sub_100234158((uint64_t)v12, (uint64_t)v9);
  *(_WORD *)&v9[*(int *)(v7 + 36)] = 256;
  sub_100021CC0((uint64_t)v9, (uint64_t)v15 + *(int *)(v13 + 36), &qword_100821238);
  *v15 = v21;
  swift_retain(v21);
  sub_10001BE90((uint64_t)v9, &qword_100821238);
  sub_1001D2ACC((uint64_t)v12);
  swift_release(v21);
  sub_100045AD4((uint64_t)v15, (uint64_t)v19, &qword_10082B1A0);
  v30 = Image.init(_internalSystemName:)(0xD000000000000016);
  v31 = static Font.largeTitle.getter();
  KeyPath = swift_getKeyPath(&unk_100635F38);
  v57 = v30;
  v58 = KeyPath;
  v59 = v31;
  v33 = sub_100047110(&qword_100826050);
  v34 = sub_1001D2DD0();
  v35 = v48;
  View.bold(_:)(1, v33, v34);
  swift_release(v31);
  swift_release(KeyPath);
  v36 = swift_release(v30);
  v38 = v51;
  v37 = v52;
  v39 = Band;
  v40 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v52 + 104))(v51, enum case for TrainingLoadBand.near(_:), Band, v36);
  v41 = TrainingLoadBand.color.getter(v40);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  v42 = v53;
  v43 = v55;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v4, v35, v55);
  *(_QWORD *)&v4[*(int *)(v50 + 36)] = v41;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
  v44 = v49;
  sub_100045AD4((uint64_t)v4, v49, &qword_10082EB40);
  sub_100021CC0((uint64_t)v19, (uint64_t)v15, &qword_10082B1A0);
  sub_100021CC0(v44, (uint64_t)v4, &qword_10082EB40);
  v45 = v56;
  sub_100021CC0((uint64_t)v15, v56, &qword_10082B1A0);
  v46 = sub_100047110(&qword_10082EB48);
  sub_100021CC0((uint64_t)v4, v45 + *(int *)(v46 + 48), &qword_10082EB40);
  sub_10001BE90(v44, &qword_10082EB40);
  sub_10001BE90((uint64_t)v19, &qword_10082B1A0);
  sub_10001BE90((uint64_t)v4, &qword_10082EB40);
  return sub_10001BE90((uint64_t)v15, &qword_10082B1A0);
}

uint64_t sub_100328420@<X0>(uint64_t a1@<X8>)
{
  uint64_t Band;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(char *, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  char v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  uint64_t v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  char v77;
  SEL v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  int v96;
  SEL v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  uint64_t v105;
  CHWorkoutDetailHeartRateTableViewCell *v106;
  uint64_t KeyPath;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  _DWORD v119[2];
  _DWORD v120[2];
  _DWORD v121[6];
  unsigned __int8 v122;
  _BYTE v123[7];
  _BYTE v124[7];
  unsigned __int8 v125;
  _BYTE v126[7];
  unsigned __int8 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  _BYTE v134[25];
  _BYTE v135[7];
  char v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  _BYTE v140[7];
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  _BYTE v145[7];
  uint64_t v146;
  uint64_t v147;
  int v148;
  char v149;
  _BYTE v150[7];
  double v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;

  v114 = a1;
  Band = type metadata accessor for TrainingLoadBand(0);
  v112 = *(_QWORD *)(Band - 8);
  v113 = Band;
  __chkstk_darwin(Band);
  v111 = (char *)&v105 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Font.Leading(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self(NSBundle);
  v8 = objc_msgSend(v7, "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, 0, 0);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v137 = v11;
  v138 = v13;
  v14 = sub_100038CA0();
  v15 = Text.init<A>(_:)(&v137, &type metadata for String, v14);
  v109 = v16;
  v110 = v15;
  LOBYTE(v11) = v17;
  v108 = v18;
  KeyPath = swift_getKeyPath(&unk_100635F08);
  v20 = static Font.subheadline.getter(v19);
  v21 = enum case for Font.Leading.tight(_:);
  v106 = *(CHWorkoutDetailHeartRateTableViewCell **)(v4 + 104);
  ((void (*)(char *, _QWORD, uint64_t))v106)(v6, enum case for Font.Leading.tight(_:), v3);
  v118 = Font.leading(_:)(v6, v20);
  v22 = swift_release(v20);
  v23 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
  v23(v6, v3, v22);
  v117 = swift_getKeyPath(&unk_100635F38);
  v25 = static HierarchicalShapeStyle.secondary.getter(v24);
  v116 = v25;
  v115 = static Edge.Set.bottom.getter(v25);
  v26 = EdgeInsets.init(_all:)(5.0);
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v127 = v11 & 1;
  v125 = 0;
  v122 = 0;
  v33 = objc_msgSend(v7, "mainBundle");
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, 0, 0);

  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  v137 = v36;
  v138 = v38;
  v39 = Text.init<A>(_:)(&v137, &type metadata for String, v14);
  v41 = v40;
  v43 = v42;
  v45 = v44 & 1;
  v47 = static Font.footnote.getter(v46);
  ((void (*)(char *, uint64_t, uint64_t))v106)(v6, v21, v3);
  v48 = Font.leading(_:)(v6, v47);
  v49 = swift_release(v47);
  v50 = ((uint64_t (*)(char *, uint64_t, __n128))v23)(v6, v3, v49);
  static Font.Weight.semibold.getter(v50);
  v51 = Font.weight(_:)(v48);
  v52 = swift_release(v48);
  v53 = Text.font(_:)(v51, v39, v41, v45, v43, v52);
  v55 = v54;
  LOBYTE(v23) = v56;
  v106 = v57;
  swift_release(v51);
  v58 = v23 & 1;
  sub_1000E4458(v39, v41, v45);
  swift_bridgeObjectRelease(v43, v59, v60, v61, v62, v63, v64, v65);
  v67 = v111;
  v66 = v112;
  v68 = v113;
  v69 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v112 + 104))(v111, enum case for TrainingLoadBand.near(_:), v113);
  v70 = TrainingLoadBand.color.getter(v69);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
  v137 = v70;
  v71 = v106;
  v72 = Text.foregroundStyle<A>(_:)(&v137, v53, v55, v58, v106, &type metadata for Color, &protocol witness table for Color);
  v74 = v73;
  v76 = v75;
  LOBYTE(v66) = v77 & 1;
  sub_1000E4458(v53, v55, v58);
  swift_release(v70);
  swift_bridgeObjectRelease(v71, v78, v79, v80, v81, v82, v83, v84);
  LODWORD(v111) = v127;
  v121[0] = *(_DWORD *)v126;
  *(_DWORD *)((char *)v121 + 3) = *(_DWORD *)&v126[3];
  LODWORD(v112) = v125;
  v120[0] = *(_DWORD *)v124;
  *(_DWORD *)((char *)v120 + 3) = *(_DWORD *)&v124[3];
  v119[0] = *(_DWORD *)v123;
  *(_DWORD *)((char *)v119 + 3) = *(_DWORD *)&v123[3];
  DWORD1(v129) = *(_DWORD *)&v126[3];
  LODWORD(v113) = v122;
  v86 = v109;
  v85 = v110;
  *(_QWORD *)&v128 = v110;
  *((_QWORD *)&v128 + 1) = v109;
  LOBYTE(v129) = v127;
  *(_DWORD *)((char *)&v129 + 1) = *(_DWORD *)v126;
  v87 = KeyPath;
  v88 = v108;
  *((_QWORD *)&v129 + 1) = v108;
  *(_QWORD *)&v130 = KeyPath;
  DWORD1(v131) = *(_DWORD *)&v124[3];
  *((_QWORD *)&v130 + 1) = 8;
  LOBYTE(v131) = v125;
  *(_DWORD *)((char *)&v131 + 1) = *(_DWORD *)v124;
  *((_QWORD *)&v131 + 1) = v117;
  *(_QWORD *)&v132 = v118;
  DWORD2(v132) = v116;
  LOBYTE(v133) = v115;
  DWORD1(v133) = *(_DWORD *)&v123[3];
  *(_DWORD *)((char *)&v133 + 1) = *(_DWORD *)v123;
  *((double *)&v133 + 1) = v26;
  *(_QWORD *)v134 = v28;
  *(_QWORD *)&v134[8] = v30;
  *(_QWORD *)&v134[16] = v32;
  v134[24] = v122;
  v89 = v128;
  v90 = v129;
  v91 = v131;
  v92 = v114;
  *(_OWORD *)(v114 + 32) = v130;
  *(_OWORD *)(v92 + 48) = v91;
  *(_OWORD *)v92 = v89;
  *(_OWORD *)(v92 + 16) = v90;
  v93 = v132;
  v94 = v133;
  v95 = *(_OWORD *)v134;
  *(_OWORD *)(v92 + 105) = *(_OWORD *)&v134[9];
  *(_OWORD *)(v92 + 80) = v94;
  *(_OWORD *)(v92 + 96) = v95;
  *(_OWORD *)(v92 + 64) = v93;
  v136 = v66;
  v96 = *(_DWORD *)v135;
  *(_DWORD *)(v92 + 148) = *(_DWORD *)&v135[3];
  *(_DWORD *)(v92 + 145) = v96;
  *(_QWORD *)(v92 + 128) = v72;
  *(_QWORD *)(v92 + 136) = v74;
  *(_BYTE *)(v92 + 144) = v66;
  *(_QWORD *)(v92 + 152) = v76;
  sub_100328C48((uint64_t)&v128);
  sub_1000E439C(v72, v74, v66);
  swift_bridgeObjectRetain(v76);
  sub_1000E4458(v72, v74, v66);
  swift_bridgeObjectRelease(v76, v97, v98, v99, v100, v101, v102, v103);
  v137 = v85;
  v138 = v86;
  v139 = (char)v111;
  *(_DWORD *)v140 = v121[0];
  *(_DWORD *)&v140[3] = *(_DWORD *)((char *)v121 + 3);
  v141 = v88;
  v142 = v87;
  v143 = 8;
  v144 = v112;
  *(_DWORD *)v145 = v120[0];
  *(_DWORD *)&v145[3] = *(_DWORD *)((char *)v120 + 3);
  v146 = v117;
  v147 = v118;
  v148 = v116;
  v149 = v115;
  *(_DWORD *)&v150[3] = *(_DWORD *)((char *)v119 + 3);
  *(_DWORD *)v150 = v119[0];
  v151 = v26;
  v152 = v28;
  v153 = v30;
  v154 = v32;
  v155 = v113;
  return sub_100328CB0((uint64_t)&v137);
}

uint64_t sub_100328A18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = sub_100047110(&qword_10082EB08);
  __chkstk_darwin(v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v5);
  *((_QWORD *)v4 + 1) = 0x4028000000000000;
  v4[16] = 0;
  v6 = sub_100047110(&qword_10082EB10);
  v7 = sub_100327C00((uint64_t)&v4[*(int *)(v6 + 44)]);
  v8 = static Alignment.center.getter(v7);
  sub_1003EC5EC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v8, v9);
  return sub_10001BE90((uint64_t)v4, &qword_10082EB08);
}

uint64_t sub_100328B00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 152);
  v7 = *(_QWORD *)(a1 + 160);
  v8 = *(_BYTE *)(a1 + 168);
  v9 = *(_QWORD *)(a1 + 176);
  sub_1000E439C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_retain(v5);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  sub_1000E439C(v6, v7, v8);
  swift_bridgeObjectRetain(v9);
  return a1;
}

uint64_t sub_100328B9C(uint64_t a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;

  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 152);
  v7 = *(_QWORD *)(a1 + 160);
  v8 = *(_BYTE *)(a1 + 168);
  v9 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 176);
  sub_1000E4458(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2, v10, v11, v12, v13, v14, v15, v16);
  swift_release(v5);
  sub_1000E4458(v6, v7, v8);
  swift_bridgeObjectRelease(v9, v17, v18, v19, v20, v21, v22, v23);
  return a1;
}

uint64_t sub_100328C48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  sub_1000E439C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain(v5);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t sub_100328CB0(uint64_t a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  sub_1000E4458(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2, v6, v7, v8, v9, v10, v11, v12);
  swift_release(v5);
  return a1;
}

unint64_t sub_100328D1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082EB50;
  if (!qword_10082EB50)
  {
    v1 = sub_100007050(&qword_10082EB58);
    sub_100028384(&qword_10082EB60, &qword_10082EB08, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082EB50);
  }
  return result;
}

void sub_100328DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(uint64_t, char *, uint64_t);
  void (*v51)(unint64_t, id, uint64_t);
  _QWORD *v52;
  uint64_t v53;
  id v54;
  char *v55;
  id v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  NSString v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  char *v74;
  id v75;
  void *v76;
  id v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  Class isa;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t, uint64_t);
  void (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  id v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  _QWORD *v110;
  _QWORD aBlock[5];
  uint64_t v112;

  v8 = v7;
  v100 = a6;
  v101 = a7;
  v96 = a3;
  v97 = a4;
  v95 = a2;
  v102 = a1;
  v99 = type metadata accessor for DateComponents(0);
  v110 = *(_QWORD **)(v99 - 8);
  v10 = v110[8];
  v11 = __chkstk_darwin(v99);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v84 - v13;
  v15 = __chkstk_darwin(v12);
  v107 = (uint64_t)&v84 - v16;
  __chkstk_darwin(v15);
  v108 = (char *)&v84 - v17;
  v18 = type metadata accessor for Date(0);
  v109 = *(_QWORD *)(v18 - 8);
  v19 = *(_QWORD *)(v109 + 64);
  v20 = __chkstk_darwin(v18);
  v104 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v20);
  v103 = (char *)&v84 - v22;
  v23 = __chkstk_darwin(v21);
  v106 = (uint64_t)&v84 - v24;
  __chkstk_darwin(v23);
  v105 = (uint64_t)&v84 - v25;
  v26 = OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_chartQuery;
  v27 = *(void **)&v7[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_chartQuery];
  if (v27)
  {
    v28 = *(void **)&v7[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_healthStore];
    v29 = v27;
    objc_msgSend(v28, "stopQuery:", v29);
    v30 = *(void **)&v8[v26];
    *(_QWORD *)&v8[v26] = 0;

  }
  v94 = v8;
  v98 = v26;
  if (a5 < 11)
  {
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 16);
    v91 = a5;
    v33 = v102;
    v32(v105, v102, v18);
    v93 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    v34 = v95;
    v32(v106, v95, v18);
    v92 = v14;
    v35 = (void (*)(uint64_t, uint64_t, uint64_t))v110[2];
    v36 = v96;
    v37 = v99;
    v35((uint64_t)v108, v96, v99);
    v38 = v97;
    v35(v107, v97, v37);
    v32((uint64_t)v103, v33, v18);
    v90 = v32;
    v32((uint64_t)v104, v34, v18);
    v35((uint64_t)v92, v36, v37);
    v89 = v35;
    v35((uint64_t)v93, v38, v37);
    v39 = *(unsigned __int8 *)(v109 + 80);
    v40 = (v39 + 24) & ~v39;
    v41 = (char *)((v19 + v39 + v40) & ~v39);
    v42 = *((unsigned __int8 *)v110 + 80);
    v43 = (unint64_t)&v41[v19 + v42] & ~v42;
    v44 = (_QWORD *)((v10 + v42 + v43) & ~v42);
    v45 = ((unint64_t)v44 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    v46 = (v45 + 15) & 0xFFFFFFFFFFFFFFF8;
    v86 = v46 + 16;
    v87 = v39 | v42 | 7;
    v47 = swift_allocObject(&unk_100796C38, v46 + 16, v87);
    v48 = v94;
    *(_QWORD *)(v47 + 16) = v94;
    v88 = v40;
    v49 = v47 + v40;
    v50 = *(void (**)(uint64_t, char *, uint64_t))(v109 + 32);
    v50(v49, v103, v18);
    v103 = v41;
    v85 = v18;
    v50((uint64_t)&v41[v47], v104, v18);
    v109 = v43;
    v51 = (void (*)(unint64_t, id, uint64_t))v110[4];
    v51(v47 + v43, v92, v37);
    v110 = v44;
    v51((unint64_t)v44 + v47, v93, v37);
    v93 = (char *)v45;
    *(_QWORD *)(v47 + v45) = v91;
    v104 = (char *)v46;
    v52 = (_QWORD *)(v47 + v46);
    v53 = v101;
    *v52 = v100;
    v52[1] = v53;
    v54 = objc_allocWithZone((Class)_HKActivityStatisticsQuery);
    v55 = v48;
    swift_retain(v53);
    v56 = sub_10032AF5C(v105, v106, (uint64_t)v108, v107, (uint64_t)sub_10032B468, v47);
    v57 = v98;
    v58 = *(void **)&v48[v98];
    *(_QWORD *)&v48[v98] = v56;

    v59 = *(void **)&v48[v57];
    if (v59)
    {
      v60 = v59;
      v61 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "setDebugIdentifier:", v61);

      if (*(_QWORD *)&v48[v57])
      {
        v62 = v105;
        v63 = v85;
        v64 = v90;
        v92 = *(id *)&v48[v57];
        v90(v105, v102, v85);
        v65 = v106;
        v64(v106, v95, v63);
        v66 = v99;
        v67 = v89;
        v89((uint64_t)v108, v96, v99);
        v68 = v107;
        v67(v107, v97, v66);
        v69 = swift_allocObject(&unk_100796C60, v86, v87);
        *(_QWORD *)(v69 + 16) = v55;
        v50(v69 + v88, (char *)v62, v63);
        v50((uint64_t)&v103[v69], (char *)v65, v63);
        v51(v69 + v109, v108, v66);
        v51((unint64_t)v110 + v69, (id)v68, v66);
        *(_QWORD *)&v93[v69] = v91;
        v70 = &v104[v69];
        v71 = v101;
        *(_QWORD *)v70 = v100;
        *((_QWORD *)v70 + 1) = v71;
        aBlock[4] = sub_10032B468;
        v112 = v69;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10004CD48;
        aBlock[3] = &unk_100796C78;
        v72 = _Block_copy(aBlock);
        v73 = v112;
        v74 = v55;
        swift_retain(v71);
        v75 = v92;
        objc_msgSend(v75, "setQueryUpdateHandler:", v72, swift_release(v73).n128_f64[0]);
        _Block_release(v72);

        v76 = *(void **)&v48[v98];
        if (v76)
        {
          v77 = v76;
          v78 = static os_log_type_t.default.getter(v77);
          v79 = (void *)HKLogActivity;
          v80 = sub_100047110((uint64_t *)&unk_100827460);
          v81 = swift_allocObject(v80, 72, 7);
          *(_OWORD *)(v81 + 16) = xmmword_100622F90;
          v82 = v79;
          isa = Date._bridgeToObjectiveC()().super.isa;
          *(_QWORD *)(v81 + 56) = sub_10001E724(0, (unint64_t *)&qword_100823578, NSDate_ptr);
          *(_QWORD *)(v81 + 64) = sub_1001F8BA4((unint64_t *)&qword_100828750, (unint64_t *)&qword_100823578, NSDate_ptr);
          *(_QWORD *)(v81 + 32) = isa;
          os_log(_:dso:log:_:_:)(v78, &_mh_execute_header, v82, "Executing chart query for start date: %@", 40, 2, v81);

          objc_msgSend(*(id *)&v74[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_healthStore], "executeQuery:", v77, swift_bridgeObjectRelease(v81).n128_f64[0]);
        }
      }
    }
  }
  else
  {
    v110 = HKLogActivity;
    v31 = static os_log_type_t.default.getter(v110);
    os_log(_:dso:log:type:_:)("Reached maximum number of retries in chart query. Bailing.", 58, 2, &_mh_execute_header, v110, v31, _swiftEmptyArrayStorage);

  }
}

void sub_100329520(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _BYTE *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void (*v43)(_BYTE *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_BYTE *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void (*v57)(uint64_t, _BYTE *, uint64_t);
  uint64_t v58;
  void (*v59)(uint64_t, _BYTE *, uint64_t);
  _QWORD *v60;
  uint64_t v61;
  id v62;
  __n128 v63;
  void *v64;
  void *v65;
  _QWORD *v66;
  uint64_t v67;
  void *v68;
  _QWORD *v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  _BYTE v75[12];
  unsigned int v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  _BYTE *v91;
  _QWORD aBlock[5];
  _QWORD *v93;

  v82 = a7;
  v83 = a8;
  v80 = a5;
  v81 = a6;
  v85 = a4;
  v88 = a10;
  v89 = a11;
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  v87 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = &v75[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v79 = type metadata accessor for DispatchQoS(0);
  v16 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v18 = &v75[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for DateComponents(0);
  v84 = *(_QWORD *)(v19 - 8);
  v20 = *(_QWORD *)(v84 + 64);
  __chkstk_darwin(v19);
  v90 = &v75[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  v91 = &v75[-v22];
  v23 = type metadata accessor for Date(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  __chkstk_darwin(v26);
  if (a3)
  {
    v79 = a9;
    v30 = (void *)HKLogActivity;
    v86 = v28;
    v87 = v29;
    v31 = &v75[-v27];
    v77 = &v75[-v27];
    v78 = a3;
    swift_errorRetain(a3);
    v32 = v30;
    v76 = static os_log_type_t.error.getter(v32);
    v33 = sub_100047110((uint64_t *)&unk_100827460);
    v34 = swift_allocObject(v33, 72, 7);
    *(_OWORD *)(v34 + 16) = xmmword_100622F90;
    v35 = _convertErrorToNSError(_:)(a3);
    *(_QWORD *)(v34 + 56) = sub_10001E724(0, (unint64_t *)&qword_1008274A0, NSError_ptr);
    *(_QWORD *)(v34 + 64) = sub_1001F8BA4((unint64_t *)&qword_100828C70, (unint64_t *)&qword_1008274A0, NSError_ptr);
    *(_QWORD *)(v34 + 32) = v35;
    os_log(_:dso:log:type:_:)("Retrying chart query after error: %@", 36, 2, &_mh_execute_header, v32, v76, v34);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v34, v36, v37, v38, v39, v40, v41, v42);
    v43 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v24 + 16);
    v44 = v86;
    v43(v31, v80, v86);
    v43((_BYTE *)v87, v81, v44);
    v45 = v84;
    v46 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v84 + 16);
    v46(v91, v82, v19);
    v46(v90, v83, v19);
    v47 = *(unsigned __int8 *)(v24 + 80);
    v48 = (v47 + 24) & ~v47;
    v49 = (v25 + v47 + v48) & ~v47;
    v50 = *(unsigned __int8 *)(v45 + 80);
    v51 = (v25 + v50 + v49) & ~v50;
    v52 = (v20 + v50 + v51) & ~v50;
    v83 = (v20 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    v53 = (v83 + 15) & 0xFFFFFFFFFFFFFFF8;
    v54 = swift_allocObject(&unk_100796D28, v53 + 16, v47 | v50 | 7);
    v55 = v85;
    *(_QWORD *)(v54 + 16) = v85;
    v56 = v54 + v48;
    v57 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v24 + 32);
    v58 = v86;
    v57(v56, v77, v86);
    v57(v54 + v49, (_BYTE *)v87, v58);
    v59 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v45 + 32);
    v59(v54 + v51, v91, v19);
    v59(v54 + v52, v90, v19);
    *(_QWORD *)(v54 + v83) = v79;
    v60 = (_QWORD *)(v54 + v53);
    v61 = v89;
    *v60 = v88;
    v60[1] = v61;
    v62 = v55;
    swift_retain(v61);
    sub_100151A58((uint64_t)sub_10032B6C8, v54, 0.15);
    swift_errorRelease(v78);
    swift_release(v54);
  }
  else
  {
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v64 = a2;
    v65 = (void *)static OS_dispatch_queue.main.getter(v63);
    v66 = (_QWORD *)swift_allocObject(&unk_100796CD8, 48, 7);
    v67 = v89;
    v66[2] = v88;
    v66[3] = v67;
    v66[4] = v64;
    v66[5] = 0;
    aBlock[4] = sub_10032B588;
    v93 = v66;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_100796CF0;
    v68 = _Block_copy(aBlock);
    v69 = v93;
    v70 = v64;
    swift_retain(v67);
    swift_release(v69);
    static DispatchQoS.unspecified.getter(v71);
    aBlock[0] = _swiftEmptyArrayStorage;
    v72 = sub_10002FAC0();
    v73 = sub_100047110(&qword_100828C80);
    v74 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v73, v74, v13, v72);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v18, v15, v68);
    _Block_release(v68);

    (*(void (**)(_BYTE *, uint64_t))(v87 + 8))(v15, v13);
    (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v18, v79);
  }
}

uint64_t sub_100329A34(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  double v20;
  id v21;
  __n128 v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  _QWORD aBlock[5];
  _QWORD *v35;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v11 - 8);
  result = __chkstk_darwin(v11);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v16 = objc_opt_self(HKUnit);
    v33 = v8;
    v17 = (void *)v16;
    v18 = a1;
    v32 = v18;
    v19 = objc_msgSend(v17, "kilocalorieUnit");
    objc_msgSend(v18, "doubleValue");
    v21 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v19, v20);

    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v23 = (void *)static OS_dispatch_queue.main.getter(v22);
    v24 = (_QWORD *)swift_allocObject(&unk_100796B20, 40, 7);
    v24[2] = a3;
    v24[3] = a4;
    v24[4] = v21;
    aBlock[4] = sub_10032B328;
    v35 = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_100796B38;
    v25 = _Block_copy(aBlock);
    v26 = v35;
    swift_retain(a4);
    v27 = v21;
    swift_release(v26);
    static DispatchQoS.unspecified.getter(v28);
    aBlock[0] = _swiftEmptyArrayStorage;
    v29 = sub_10002FAC0();
    v30 = sub_100047110(&qword_100828C80);
    v31 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v7, v29);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v10, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  return result;
}

void sub_100329CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  Class v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  id v40;
  id v41;
  id v42;
  char *v43;
  Class isa;
  Class v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  NSString v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, char *, uint64_t);
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  void *v69;
  uint64_t v70;
  double v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  Class v79;
  double v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  id v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  void **aBlock;
  uint64_t v110;
  void *v111;
  void *v112;
  void *v113;
  uint64_t v114;

  v108 = a2;
  v8 = type metadata accessor for Date(0);
  v105 = *(_QWORD *)(v8 - 8);
  v106 = v8;
  __chkstk_darwin(v8);
  v104 = v9;
  v107 = (char *)&v92 - ((unint64_t)(v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100823FC8);
  __chkstk_darwin(v10);
  v12 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110((uint64_t *)&unk_100827450);
  __chkstk_darwin(v13);
  v15 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DateComponents(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend((id)objc_opt_self(HKObjectType), "quantityTypeForIdentifier:", HKQuantityTypeIdentifierBasalEnergyBurned);
  if (v20)
  {
    v21 = v20;
    v102 = v16;
    v103 = a3;
    v101 = v17;
    v22 = OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_basalEnergyQuery;
    v23 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_basalEnergyQuery);
    v24 = v4;
    if (v23)
    {
      v25 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_healthStore);
      v26 = a4;
      v27 = a1;
      v28 = v23;
      objc_msgSend(v25, "stopQuery:", v28);
      v29 = *(void **)(v4 + v22);
      *(_QWORD *)(v4 + v22) = 0;

      a1 = v27;
      a4 = v26;
      v24 = v4;

    }
    if (v108 < 11)
    {
      v37 = type metadata accessor for Calendar(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v15, 1, 1, v37);
      v38 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v12, 1, 1, v38);
      v91 = 1;
      v90 = 1;
      v89 = 1;
      v88 = 1;
      v87 = 1;
      v86 = 1;
      v85 = 1;
      v84 = 1;
      v83 = 1;
      v82 = 1;
      v81 = 1;
      v39 = v19;
      DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v15, v12, 0, 1, 0, 1, 0, 1, 0, v81, 0, v82, 0, v83, 0, v84, 0, v85, 0,
        v86,
        0,
        v87,
        0,
        v88,
        0,
        v89,
        0,
        v90,
        0,
        v91);
      DateComponents.day.setter(1, 0);
      v40 = sub_10032AB4C(a1);
      v41 = objc_allocWithZone((Class)HKStatisticsCollectionQuery);
      v42 = v40;
      v43 = v21;
      isa = Date._bridgeToObjectiveC()().super.isa;
      v45 = DateComponents._bridgeToObjectiveC()().super.isa;
      v46 = objc_msgSend(v41, "initWithQuantityType:quantitySamplePredicate:options:anchorDate:intervalComponents:", v43, v42, 16, isa, v45);

      v47 = *(void **)(v24 + v22);
      *(_QWORD *)(v24 + v22) = v46;

      v48 = *(void **)(v24 + v22);
      if (v48
        && (v49 = v48,
            v50 = String._bridgeToObjectiveC()(),
            objc_msgSend(v49, "setDebugIdentifier:", v50),
            v49,
            v50,
            *(_QWORD *)(v24 + v22)))
      {
        v93 = *(id *)(v24 + v22);
        v51 = swift_allocObject(&unk_100796A08, 24, 7);
        swift_unknownObjectWeakInit(v51 + 16, v24);
        v52 = v105;
        v97 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
        v99 = v42;
        v53 = v106;
        v97(v107, a1, v106);
        v96 = a1;
        v54 = *(unsigned __int8 *)(v52 + 80);
        v100 = v39;
        v55 = (v54 + 24) & ~v54;
        v94 = v54 | 7;
        v95 = v104 + 7;
        v56 = (unint64_t)&v104[v55 + 7] & 0xFFFFFFFFFFFFFFF8;
        v104 = v43;
        v57 = (v56 + 15) & 0xFFFFFFFFFFFFFFF8;
        v58 = swift_allocObject(&unk_100796A30, v57 + 16, v54 | 7);
        *(_QWORD *)(v58 + 16) = v51;
        v98 = v24;
        v59 = *(void (**)(uint64_t, char *, uint64_t))(v52 + 32);
        v60 = v107;
        v59(v58 + v55, v107, v53);
        *(_QWORD *)(v58 + v56) = v108;
        v61 = (_QWORD *)(v58 + v57);
        v62 = v103;
        *v61 = v103;
        v61[1] = a4;
        v113 = sub_10032B188;
        v114 = v58;
        aBlock = _NSConcreteStackBlock;
        v110 = 1107296256;
        v111 = sub_10004CD48;
        v112 = &unk_100796A48;
        v63 = _Block_copy(&aBlock);
        v64 = v114;
        swift_retain(a4);
        v108 = (uint64_t)v93;
        objc_msgSend((id)v108, "setInitialResultsHandler:", v63, swift_release(v64).n128_f64[0]);
        _Block_release(v63);
        v97(v60, v96, v53);
        v65 = (v54 + 16) & ~v54;
        v66 = (unint64_t)&v95[v65] & 0xFFFFFFFFFFFFFFF8;
        v67 = swift_allocObject(&unk_100796A80, v66 + 16, v94);
        v59(v67 + v65, v60, v53);
        v68 = (_QWORD *)(v67 + v66);
        *v68 = v62;
        v68[1] = a4;
        v113 = sub_10032B27C;
        v114 = v67;
        aBlock = _NSConcreteStackBlock;
        v110 = 1107296256;
        v111 = sub_10032AAA8;
        v112 = &unk_100796A98;
        v69 = _Block_copy(&aBlock);
        v70 = v114;
        swift_retain(a4);
        *(_QWORD *)&v71 = swift_release(v70).n128_u64[0];
        v72 = (id)v108;
        objc_msgSend((id)v108, "setStatisticsUpdateHandler:", v69, v71);
        _Block_release(v69);
        v74 = static os_log_type_t.default.getter(v73);
        v75 = (void *)HKLogActivity;
        v76 = sub_100047110((uint64_t *)&unk_100827460);
        v77 = swift_allocObject(v76, 72, 7);
        *(_OWORD *)(v77 + 16) = xmmword_100622F90;
        v78 = v75;
        v79 = Date._bridgeToObjectiveC()().super.isa;
        *(_QWORD *)(v77 + 56) = sub_10001E724(0, (unint64_t *)&qword_100823578, NSDate_ptr);
        *(_QWORD *)(v77 + 64) = sub_1001F8BA4((unint64_t *)&qword_100828750, (unint64_t *)&qword_100823578, NSDate_ptr);
        *(_QWORD *)(v77 + 32) = v79;
        os_log(_:dso:log:_:_:)(v74, &_mh_execute_header, v78, "Executing basal stats query for date: %@", 40, 2, v77);

        *(_QWORD *)&v80 = swift_bridgeObjectRelease(v77).n128_u64[0];
        objc_msgSend(*(id *)(v98 + OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_healthStore), "executeQuery:", v72, v80);

        (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v102);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v101 + 8))(v39, v102);

      }
    }
    else
    {
      v30 = HKLogActivity;
      v31 = static os_log_type_t.default.getter(v30);
      os_log(_:dso:log:type:_:)("Reached maximum number of retries in basal energy query. Executing raw calculation.", 83, 2, &_mh_execute_header, v30, v31, _swiftEmptyArrayStorage);

      v32 = *(void **)(v24 + OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_healthStore);
      v33 = Date._bridgeToObjectiveC()().super.isa;
      v34 = swift_allocObject(&unk_100796AD0, 32, 7);
      *(_QWORD *)(v34 + 16) = v103;
      *(_QWORD *)(v34 + 24) = a4;
      v113 = sub_10032B31C;
      v114 = v34;
      aBlock = _NSConcreteStackBlock;
      v110 = 1107296256;
      v111 = sub_1001ABA78;
      v112 = &unk_100796AE8;
      v35 = _Block_copy(&aBlock);
      v36 = v114;
      swift_retain(a4);
      objc_msgSend(v32, "ch_calculateBMRForDate:useEndOfDay:completion:", v33, 1, v35, swift_release(v36).n128_f64[0]);
      _Block_release(v35);

    }
  }
}

void sub_10032A4D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  Class isa;
  id v15;
  id v16;
  __n128 v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  _QWORD *v31;

  v29 = a4;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(a1, "statisticsForDate:", isa);

  if (v15)
  {
    v16 = objc_msgSend(v15, "sumQuantity");

    if (v16)
    {
      sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
      v28 = static OS_dispatch_queue.main.getter(v17);
      v18 = (_QWORD *)swift_allocObject(&unk_100796B70, 40, 7);
      v19 = v29;
      v18[2] = a3;
      v18[3] = v19;
      v18[4] = v16;
      aBlock[4] = sub_10032B328;
      v31 = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10002D0F8;
      aBlock[3] = &unk_100796B88;
      v20 = _Block_copy(aBlock);
      v21 = v31;
      swift_retain(v19);
      v22 = v16;
      swift_release(v21);
      static DispatchQoS.unspecified.getter(v23);
      aBlock[0] = _swiftEmptyArrayStorage;
      v24 = sub_10002FAC0();
      v25 = sub_100047110(&qword_100828C80);
      v26 = sub_10002FB08();
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v6, v24);
      v27 = (void *)v28;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v20);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
}

void sub_10032A720(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  id v34;
  void *v35;
  Class isa;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  _BYTE v40[12];
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD aBlock[5];
  uint64_t v48;
  char v49[24];

  v46 = a5;
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  a4 += 16;
  swift_beginAccess(a4, v49, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v18 = (id)Strong;
    if (a3)
    {
      v45 = a6;
      v19 = (void *)HKLogActivity;
      swift_errorRetain(a3);
      v20 = v19;
      v41 = static os_log_type_t.default.getter(v20);
      v21 = sub_100047110((uint64_t *)&unk_100827460);
      v22 = swift_allocObject(v21, 72, 7);
      v23 = a3;
      v44 = a3;
      v24 = (_QWORD *)v22;
      *(_OWORD *)(v22 + 16) = xmmword_100622F90;
      v25 = _convertErrorToNSError(_:)(v23);
      v42 = a8;
      v43 = a7;
      v24[7] = sub_10001E724(0, (unint64_t *)&qword_1008274A0, NSError_ptr);
      v24[8] = sub_1001F8BA4((unint64_t *)&qword_100828C70, (unint64_t *)&qword_1008274A0, NSError_ptr);
      v24[4] = v25;
      os_log(_:dso:log:type:_:)("Error encountered in basal energy calculation: %@", 49, 2, &_mh_execute_header, v20, v41, v24);

      v26 = swift_bridgeObjectRelease(v24);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v15 + 16))(&v40[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)], v46, v14, v26);
      v27 = *(unsigned __int8 *)(v15 + 80);
      v28 = (v27 + 24) & ~v27;
      v29 = (v16 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
      v31 = swift_allocObject(&unk_100796C10, v30 + 16, v27 | 7);
      *(_QWORD *)(v31 + 16) = v18;
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v15 + 32))(v31 + v28, &v40[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)], v14);
      *(_QWORD *)(v31 + v29) = v45;
      v32 = (uint64_t *)(v31 + v30);
      v33 = v42;
      *v32 = v43;
      v32[1] = v33;
      v18 = v18;
      swift_retain(v33);
      sub_100151A58((uint64_t)sub_10032B3F8, v31, 0.15);
      swift_errorRelease(v44);
      swift_release(v31);
    }
    else if (a2)
    {
      v34 = a2;
      sub_10032A4D0(v34, v46, a7, a8);

    }
    else
    {
      v35 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_healthStore);
      isa = Date._bridgeToObjectiveC()().super.isa;
      v37 = swift_allocObject(&unk_100796BC0, 32, 7);
      *(_QWORD *)(v37 + 16) = a7;
      *(_QWORD *)(v37 + 24) = a8;
      aBlock[4] = sub_10032B7C0;
      v48 = v37;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001ABA78;
      aBlock[3] = &unk_100796BD8;
      v38 = _Block_copy(aBlock);
      v39 = v48;
      swift_retain(a8);
      objc_msgSend(v35, "ch_calculateBMRForDate:useEndOfDay:completion:", isa, 1, v38, swift_release(v39).n128_f64[0]);
      _Block_release(v38);

      v18 = isa;
    }

  }
}

void sub_10032AA50(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v10;

  if (a3)
  {
    v10 = a3;
    sub_10032A4D0(v10, a5, a6, a7);

  }
}

void sub_10032AAA8(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v9;
  void (*v10)(id, void *, void *, void *);
  id v11;
  id v12;
  id v13;
  id v14;

  v10 = *(void (**)(id, void *, void *, void *))(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  swift_retain(v9);
  v14 = a2;
  v11 = a3;
  v12 = a4;
  v13 = a5;
  v10(v14, a3, a4, a5);
  swift_release(v9);

}

id sub_10032AB4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSDate v20;
  Class isa;
  id v22;
  id result;
  void *v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  Class v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = type metadata accessor for Calendar.Component(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110((uint64_t *)&unk_100828370);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v34 - v10;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Calendar(0);
  v35 = *(_QWORD *)(v16 - 8);
  v36 = v16;
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.autoupdatingCurrent.getter(v17);
  Calendar.startOfDay(for:)(a1);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Calendar.Component.day(_:), v2);
  Calendar.date(byAdding:value:to:wrappingComponents:)(v5, 1, v15, 0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v20.super.isa = Date._bridgeToObjectiveC()().super.isa;
  sub_100031D7C((uint64_t)v11, (uint64_t)v9);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v12);
  }
  v22 = objc_msgSend((id)objc_opt_self(HKQuery), "predicateForSamplesWithStartDate:endDate:options:", v20.super.isa, isa, 0);

  sub_10018DFE8((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v36);
  result = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (result)
  {
    v24 = result;
    v25 = objc_msgSend(result, "isStandalonePhoneFitnessMode");

    if ((v25 & 1) != 0)
    {
      return v22;
    }
    else
    {
      v26 = sub_100047110((uint64_t *)&unk_100828340);
      v27 = swift_allocObject(v26, 48, 7);
      *(_OWORD *)(v27 + 16) = xmmword_100629280;
      v28 = *(void **)(v34 + OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_watchSourcePredicate);
      *(_QWORD *)(v27 + 32) = v28;
      *(_QWORD *)(v27 + 40) = v22;
      v37 = v27;
      specialized Array._endMutation()(v27);
      v29 = v37;
      sub_10001E724(0, (unint64_t *)&unk_100827490, NSPredicate_ptr);
      v30 = v28;
      v31 = v22;
      v32 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v29);
      v33 = objc_msgSend((id)objc_opt_self(NSCompoundPredicate), "andPredicateWithSubpredicates:", v32);

      return v33;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10032AED4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityQueryExecutor();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_10032AF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  Class isa;
  Class v14;
  Class v15;
  Class v16;
  void *v17;
  id v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  _QWORD aBlock[5];
  uint64_t v26;

  v7 = v6;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v14 = Date._bridgeToObjectiveC()().super.isa;
  v15 = DateComponents._bridgeToObjectiveC()().super.isa;
  v16 = DateComponents._bridgeToObjectiveC()().super.isa;
  aBlock[4] = a5;
  v26 = a6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004CD48;
  aBlock[3] = &unk_100796CA0;
  v17 = _Block_copy(aBlock);
  v18 = objc_msgSend(v7, "initWithStartDate:endDate:moveIntervalComponents:exerciseIntervalComponents:initialQueryResultsHandler:", isa, v14, v15, v16, v17);
  _Block_release(v17);

  v19 = type metadata accessor for DateComponents(0);
  v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8);
  v20(a4, v19);
  v20(a3, v19);
  v21 = type metadata accessor for Date(0);
  v22 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8);
  v22(a2, v21);
  v22(a1, v21);
  swift_release(v26);
  return v18;
}

uint64_t sub_10032B0C8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10032B0EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

void sub_10032B188(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10032A720(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + v8, *(_QWORD *)(v3 + v9), *(_QWORD *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10032B204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

void sub_10032B27C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;

  v9 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (uint64_t *)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_10032AA50(a1, a2, a3, a4, v4 + v10, *v11, v11[1]);
}

uint64_t sub_10032B2F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10032B31C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100329A34(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10032B330()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10032B35C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_10032B3F8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  result = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(result - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(v0 + v4);
  if (!__OFADD__(v5, 1))
    return sub_100329CC0(v0 + v3, v5 + 1, *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
  __break(1u);
  return result;
}

void sub_10032B470(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 24) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = (v10 + v8 + v9) & ~v8;
  v12 = *(_QWORD *)(type metadata accessor for DateComponents(0) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v10 + v13 + v11) & ~v13;
  v15 = *(_QWORD *)(v12 + 64);
  v16 = (v15 + v13 + v14) & ~v13;
  sub_100329520(a1, a2, a3, *(void **)(v3 + 16), v3 + v9, v3 + v11, v3 + v14, v3 + v16, *(_QWORD *)(v3 + ((v15 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((((v15 + v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((((v15 + v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10032B554()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  swift_errorRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10032B588()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10032B5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t, uint64_t);
  uint64_t v18;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (v5 + v3 + v4) & ~v3;
  v7 = type metadata accessor for DateComponents(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v5 + v9 + v6) & ~v9;
  v11 = *(_QWORD *)(v8 + 64);
  v12 = v3 | v9 | 7;
  v13 = (v11 + v9 + v10) & ~v9;
  v14 = (((v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v18 = v12;

  v15 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v15(v0 + v4, v1);
  v15(v0 + v6, v1);
  v16 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v16(v0 + v10, v7);
  v16(v0 + v13, v7);
  swift_release(*(_QWORD *)(v0 + v14 + 8));
  return swift_deallocObject(v0, v14 + 16, v18);
}

void sub_10032B6C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = (v4 + v2 + v3) & ~v2;
  v6 = *(_QWORD *)(type metadata accessor for DateComponents(0) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v7 + v5) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = (v9 + v7 + v8) & ~v7;
  v11 = (v9 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_QWORD *)(v0 + v11);
  if (__OFADD__(v12, 1))
    __break(1u);
  else
    sub_100328DA0(v0 + v3, v0 + v5, v0 + v8, v0 + v10, v12 + 1, *(_QWORD *)(v0 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void *sub_10032B7C4()
{
  return &protocol witness table for ObjectIdentifier;
}

_QWORD *sub_10032B7D0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  __n128 v16;
  void (*v17)(char *, uint64_t, __n128);
  uint64_t v19;
  _QWORD *v20;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v19 - v7;
  v9 = _swiftEmptyArrayStorage;
  v20 = _swiftEmptyArrayStorage;
  v10 = objc_msgSend(v1, "workoutEvents");
  if (v10)
  {
    v11 = v10;
    v12 = sub_10001E724(0, (unint64_t *)&qword_10081ED88, HKWorkoutEvent_ptr);
    v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    v14 = objc_msgSend(v1, "startDate");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v14);

    v15 = objc_msgSend(v1, "endDate");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v15);

    sub_10032B95C((uint64_t)v8, v6, v13, (uint64_t)&v20, (void (*)(char *, char *, uint64_t))sub_10032C390);
    v16 = swift_bridgeObjectRelease(v13);
    v17 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
    v17(v6, v2, v16);
    ((void (*)(char *, uint64_t))v17)(v8, v2);
    return v20;
  }
  return v9;
}

uint64_t sub_10032B950(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  return sub_10032B95C(a1, a2, a3, a4, (void (*)(char *, char *, uint64_t))sub_10032C390);
}

uint64_t sub_10032B95C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, void (*a5)(char *, char *, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  char *v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  _BOOL4 v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  char *v61;
  void (*v62)(char *, uint64_t, uint64_t);
  char *v63;

  v48 = a4;
  v49 = a5;
  v59 = a2;
  v7 = type metadata accessor for DateInterval(0);
  v57 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v56 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = __chkstk_darwin(v9);
  v51 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v63 = (char *)&v46 - v13;
  v14 = __chkstk_darwin(v12);
  v55 = (char *)&v46 - v15;
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v46 - v17;
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v46 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v46 - v22;
  v58 = v24;
  v62 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v62((char *)&v46 - v22, a1, v9);
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v45 = a3;
    else
      v45 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    result = _CocoaArrayWrapper.endIndex.getter(v45);
    v25 = result;
    if (result)
      goto LABEL_3;
LABEL_30:
    swift_bridgeObjectRelease(a3);
    v62(v21, (uint64_t)v59, v9);
    goto LABEL_31;
  }
  v25 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain(a3);
  if (!v25)
    goto LABEL_30;
LABEL_3:
  if (v25 < 1)
  {
    __break(1u);
    return result;
  }
  v47 = v21;
  v27 = 0;
  v60 = a3 & 0xC000000000000001;
  v61 = v23;
  v52 = 1;
  v50 = v7;
  v53 = a3;
  v54 = v25;
  do
  {
    if (v60)
      v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, a3);
    else
      v28 = *(id *)(a3 + 8 * v27 + 32);
    v29 = v28;
    if (objc_msgSend(v28, "type") != (id)1 && objc_msgSend(v29, "type") != (id)2)
    {

      goto LABEL_6;
    }
    v30 = objc_msgSend(v29, "dateInterval");
    v31 = v56;
    static DateInterval._unconditionallyBridgeFromObjectiveC(_:)();

    DateInterval.start.getter();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v7);
    v32 = Date.compare(_:)(v61);
    v33 = v55;
    v34 = v62;
    v62(v55, (uint64_t)v18, v9);
    v34(v63, (uint64_t)v59, v9);
    if (v32 == -1)
    {
      v38 = *(void (**)(char *, uint64_t))(v58 + 8);
      v38(v63, v9);
      v38(v33, v9);
    }
    else
    {
      v35 = v7;
      v36 = v63;
      v37 = Date.compare(_:)(v63);
      v38 = *(void (**)(char *, uint64_t))(v58 + 8);
      v38(v36, v9);
      v38(v33, v9);
      if (v37 != 1)
      {
        v39 = v51;
        v62(v51, (uint64_t)v18, v9);
        if (v52)
        {
          v38(v39, v9);
          v40 = v61;
        }
        else
        {
          v40 = v61;
          v41 = Date.compare(_:)(v61);
          v38(v39, v9);
          if (v41 == 1)
            v49(v40, v18, v48);
        }
        v38(v40, v9);
        v62(v40, (uint64_t)v18, v9);
        v42 = objc_msgSend(v29, "type");

        v52 = v42 == (id)2;
        v38(v18, v9);
        a3 = v53;
        v7 = v50;
        goto LABEL_22;
      }
      v7 = v35;
    }
    v38(v18, v9);

    a3 = v53;
LABEL_22:
    v25 = v54;
LABEL_6:
    ++v27;
  }
  while (v25 != v27);
  swift_bridgeObjectRelease(a3);
  v21 = v47;
  v62(v47, (uint64_t)v59, v9);
  v23 = v61;
  if (v52)
  {
LABEL_31:
    v44 = *(void (**)(char *, uint64_t))(v58 + 8);
    v44(v21, v9);
    return ((uint64_t (*)(char *, uint64_t))v44)(v23, v9);
  }
  v43 = Date.compare(_:)(v61);
  v44 = *(void (**)(char *, uint64_t))(v58 + 8);
  v44(v21, v9);
  if (v43 == 1)
    v49(v23, v59, v48);
  return ((uint64_t (*)(char *, uint64_t))v44)(v23, v9);
}

uint64_t sub_10032BE20(uint64_t a1)
{
  return sub_10032BF8C(a1, (uint64_t (*)(void))&static IntervalWorkoutConfiguration.StepMetadataKey.getter, &qword_10086A540, &qword_10086A548);
}

uint64_t sub_10032BE58(uint64_t a1)
{
  return sub_10032BF8C(a1, (uint64_t (*)(void))&static IntervalWorkoutConfiguration.StepSuccessMetadataKey.getter, &qword_10086A550, &qword_10086A558);
}

uint64_t sub_10032BE90()
{
  uint64_t result;
  uint64_t v1;

  result = static RaceMetadataKeys.averagePaceOnRoute.getter();
  qword_10086A560 = result;
  *(_QWORD *)algn_10086A568 = v1;
  return result;
}

uint64_t sub_10032BED0()
{
  uint64_t result;
  uint64_t v1;

  result = static RaceMetadataKeys.referenceWorkoutUUID.getter();
  qword_10086A570 = result;
  *(_QWORD *)algn_10086A578 = v1;
  return result;
}

uint64_t sub_10032BF3C(uint64_t a1)
{
  return sub_10032BF8C(a1, (uint64_t (*)(void))&static IntervalWorkoutConfiguration.StepDistanceGoalAchievedDateKey.getter, &qword_10086A580, &qword_10086A588);
}

uint64_t sub_10032BF74(uint64_t a1)
{
  return sub_10032BF8C(a1, (uint64_t (*)(void))&static IntervalWorkoutConfiguration.StepDistanceGoalAchievedDurationKey.getter, &qword_10086A590, &qword_10086A598);
}

uint64_t sub_10032BF8C(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v8;

  type metadata accessor for IntervalWorkoutConfiguration(0);
  result = a2();
  *a3 = result;
  *a4 = v8;
  return result;
}

uint64_t sub_10032BFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  unint64_t *v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  unint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];

  v36 = a3;
  v40 = a2;
  v4 = type metadata accessor for DateInterval(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  __chkstk_darwin(v4);
  v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110((uint64_t *)&unk_100828370);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v36 - v10;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v36 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v36 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v36 - v23;
  sub_100021CC0(a1, (uint64_t)v11, (uint64_t *)&unk_100828370);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v25(v11, 1, v12) == 1)
    return sub_10001BE90((uint64_t)v11, (uint64_t *)&unk_100828370);
  v27 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v27(v24, v11, v12);
  sub_100021CC0(v40, (uint64_t)v9, (uint64_t *)&unk_100828370);
  if (v25(v9, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v24, v12);
    return sub_10001BE90((uint64_t)v9, (uint64_t *)&unk_100828370);
  }
  else
  {
    v28 = (unint64_t *)(v36 + 16);
    v27(v22, v9, v12);
    v29 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v29(v19, v24, v12);
    v29(v16, v22, v12);
    v30 = v37;
    DateInterval.init(start:end:)(v19, v16);
    swift_beginAccess(v28, v41, 33, 0);
    v31 = *v28;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v28);
    *v28 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v31 = sub_10013F868(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
      *v28 = v31;
    }
    v34 = *(_QWORD *)(v31 + 16);
    v33 = *(_QWORD *)(v31 + 24);
    if (v34 >= v33 >> 1)
    {
      v31 = sub_10013F868(v33 > 1, v34 + 1, 1, v31);
      *v28 = v31;
    }
    *(_QWORD *)(v31 + 16) = v34 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v31+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v34, v30, v39);
    swift_endAccess(v41);
    v35 = *(void (**)(char *, uint64_t))(v13 + 8);
    v35(v22, v12);
    return ((uint64_t (*)(char *, uint64_t))v35)(v24, v12);
  }
}

uint64_t sub_10032C390(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v23 - v11;
  v13 = type metadata accessor for DateInterval(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v17(v12, a1, v6);
  v17(v10, a2, v6);
  DateInterval.init(start:end:)(v12, v10);
  v18 = *a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a3);
  *a3 = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v18 = sub_10013F868(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
    *a3 = v18;
  }
  v21 = *(_QWORD *)(v18 + 16);
  v20 = *(_QWORD *)(v18 + 24);
  if (v21 >= v20 >> 1)
  {
    v18 = sub_10013F868(v20 > 1, v21 + 1, 1, v18);
    *a3 = v18;
  }
  *(_QWORD *)(v18 + 16) = v21 + 1;
  return (*(uint64_t (**)(unint64_t, char *, uint64_t))(v14 + 32))(v18+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v21, v16, v13);
}

uint64_t sub_10032C670()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  uint64_t v16;
  uint64_t v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(void);
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  unint64_t v35;
  void (*v36)(char *, uint64_t, __n128);
  __n128 v37;
  const char *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  char v45;
  uint64_t v47;
  uint64_t v48;

  v1 = type metadata accessor for ConfigurationType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v47 - v6;
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v11 = (char *)&v47 - v10;
  if (objc_msgSend(v0, "workoutActivityType", v9) == (id)84)
  {
    LOBYTE(v12) = 1;
  }
  else
  {
    v13 = objc_msgSend(v0, "metadata");
    if (v13)
    {
      v14 = v13;
      v15 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    }
    else
    {
      v15 = 0;
    }
    type metadata accessor for WorkoutConfiguration(0);
    v16 = type metadata accessor for BlastDoorConfigurationValidator(0);
    swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
    v17 = BlastDoorConfigurationValidator.init()();
    v12 = static WorkoutConfiguration.deserialize(from:requiringOccurrence:validator:)(v15, 0, v17);
    swift_release(v17);
    swift_bridgeObjectRelease(v15, v18, v19, v20, v21, v22, v23, v24);
    if (v12)
    {
      dispatch thunk of WorkoutConfiguration.type.getter(v25);

      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v11, v7, v1);
      v26 = sub_100047110((uint64_t *)&unk_10082EBE0);
      v27 = *(_QWORD *)(v2 + 72);
      v28 = *(unsigned __int8 *)(v2 + 80);
      v29 = (v28 + 32) & ~v28;
      v30 = swift_allocObject(v26, v29 + 3 * v27, v28 | 7);
      *(_OWORD *)(v30 + 16) = xmmword_100624A40;
      v31 = v30 + v29;
      v32 = *(void (**)(void))(v2 + 104);
      ((void (*)(uint64_t, _QWORD, uint64_t))v32)(v31, enum case for ConfigurationType.interval(_:), v1);
      v33 = v31 + v27;
      ((void (*)(uint64_t, _QWORD, uint64_t))v32)(v31 + v27, enum case for ConfigurationType.pacer(_:), v1);
      v48 = v31 + 2 * v27;
      v32();
      v34 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
      v34(v4, v31, v1);
      v35 = sub_10032FE84();
      LOBYTE(v27) = dispatch thunk of static Equatable.== infix(_:_:)(v4, v11, v1, v35);
      v36 = *(void (**)(char *, uint64_t, __n128))(v2 + 8);
      v37 = swift_bridgeObjectRetain(v30);
      v36(v4, v1, v37);
      if ((v27 & 1) != 0
        || (v34(v4, v33, v1),
            v45 = dispatch thunk of static Equatable.== infix(_:_:)(v4, v11, v1, v35),
            ((void (*)(char *, uint64_t))v36)(v4, v1),
            (v45 & 1) != 0))
      {
        LOBYTE(v12) = 1;
      }
      else
      {
        v34(v4, v48, v1);
        LOBYTE(v12) = dispatch thunk of static Equatable.== infix(_:_:)(v4, v11, v1, v35);
        ((void (*)(char *, uint64_t))v36)(v4, v1);
      }
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v30, v38, v39, v40, v41, v42, v43, v44);
      ((void (*)(char *, uint64_t))v36)(v11, v1);
      swift_setDeallocating(v30);
      swift_arrayDestroy(v31, *(_QWORD *)(v30 + 16), v1);
      swift_deallocClassInstance(v30, 32, 7);
    }
  }
  return v12 & 1;
}

BOOL sub_10032C9E0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  __n128 v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  unint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t);
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  id v62;

  v1 = type metadata accessor for ConfigurationType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v60 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_10082EBC8);
  __chkstk_darwin(v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10082EBD0);
  __chkstk_darwin(v7);
  v61 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v59 - v10;
  *(_QWORD *)&v13 = __chkstk_darwin(v12).n128_u64[0];
  v15 = (char *)&v59 - v14;
  v62 = v0;
  v16 = objc_msgSend(v0, "metadata", v13);
  if (v16)
  {
    v17 = v16;
    v18 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v16, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v18 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  v19 = type metadata accessor for BlastDoorConfigurationValidator(0);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v20 = BlastDoorConfigurationValidator.init()();
  v21 = (void *)static WorkoutConfiguration.deserialize(from:requiringOccurrence:validator:)(v18, 0, v20);
  swift_release(v20);
  swift_bridgeObjectRelease(v18, v22, v23, v24, v25, v26, v27, v28);
  if (v21)
  {
    dispatch thunk of WorkoutConfiguration.type.getter(v29);

    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v30(v15, 0, 1, v1);
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v30(v15, 1, 1, v1);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v11, enum case for ConfigurationType.interval(_:), v1);
  v30(v11, 0, 1, v1);
  v31 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_100021CC0((uint64_t)v15, (uint64_t)v6, &qword_10082EBD0);
  sub_100021CC0((uint64_t)v11, v31, &qword_10082EBD0);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v32((uint64_t)v6, 1, v1) == 1)
  {
    sub_10001BE90((uint64_t)v11, &qword_10082EBD0);
    sub_10001BE90((uint64_t)v15, &qword_10082EBD0);
    if (v32(v31, 1, v1) == 1)
    {
      sub_10001BE90((uint64_t)v6, &qword_10082EBD0);
      return 1;
    }
    goto LABEL_12;
  }
  v34 = v61;
  sub_100021CC0((uint64_t)v6, v61, &qword_10082EBD0);
  if (v32(v31, 1, v1) == 1)
  {
    sub_10001BE90((uint64_t)v11, &qword_10082EBD0);
    sub_10001BE90((uint64_t)v15, &qword_10082EBD0);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v34, v1);
LABEL_12:
    sub_10001BE90((uint64_t)v6, &qword_10082EBC8);
    goto LABEL_15;
  }
  v35 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v60, v31, v1);
  v36 = sub_10032FE84();
  v37 = dispatch thunk of static Equatable.== infix(_:_:)(v34, v35, v1, v36);
  v38 = *(void (**)(char *, uint64_t))(v2 + 8);
  v38(v35, v1);
  sub_10001BE90((uint64_t)v11, &qword_10082EBD0);
  sub_10001BE90((uint64_t)v15, &qword_10082EBD0);
  v38((char *)v34, v1);
  sub_10001BE90((uint64_t)v6, &qword_10082EBD0);
  if ((v37 & 1) != 0)
    return 1;
LABEL_15:
  v39 = v62;
  if ((objc_msgSend(v62, "isMultiSportWorkout") & 1) != 0)
    return 0;
  v40 = objc_msgSend(v39, "workoutActivities");
  v41 = sub_10001E724(0, (unint64_t *)&qword_10082E6A0, HKWorkoutActivity_ptr);
  v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v41);

  if ((unint64_t)v42 >> 62)
  {
    if (v42 < 0)
      v51 = v42;
    else
      v51 = v42 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v42);
    v50 = _CocoaArrayWrapper.endIndex.getter(v51);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v42, v52, v53, v54, v55, v56, v57, v58);
  }
  else
  {
    v50 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v42, v43, v44, v45, v46, v47, v48, v49);
  return v50 > 1;
}

uint64_t sub_10032CE94()
{
  return sub_10032D578((unsigned int *)&enum case for ConfigurationType.race(_:));
}

BOOL sub_10032CED0()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  Swift::OpaquePointer_optional v10;
  void *rawValue;
  void *v12;
  uint64_t v13;
  id v14;
  Swift::Bool v16;

  v1 = v0;
  v2 = objc_msgSend(v0, "metadata");
  if (v2)
  {
    v3 = v2;
    v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v4 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  v5 = type metadata accessor for BlastDoorConfigurationValidator(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = BlastDoorConfigurationValidator.init()();
  v7 = (void *)static WorkoutConfiguration.deserialize(from:requiringOccurrence:validator:)(v4, 0, v6);
  swift_release(v6);
  v8 = swift_bridgeObjectRelease(v4);
  if (!v7)
    goto LABEL_9;
  v9 = type metadata accessor for RaceWorkoutConfiguration(0);
  if (!swift_dynamicCastClass(v7, v9))
  {

LABEL_9:
    v13 = static os_log_type_t.default.getter(v8);
    v14 = HKLogWorkouts;
    os_log(_:dso:log:_:_:)(v13, &_mh_execute_header, v14, "[race] unable to serialize race as race configuration", 53, 2, _swiftEmptyArrayStorage);

    return 0;
  }
  v10.value._rawValue = objc_msgSend(v1, "metadata");
  if (v10.value._rawValue)
  {
    rawValue = v10.value._rawValue;
    v12 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v10.value._rawValue, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v12 = 0;
  }
  v10.value._rawValue = v12;
  v16 = RaceWorkoutConfiguration.shouldShowResultsRow(metadata:)(v10);

  swift_bridgeObjectRelease(v12);
  return v16;
}

double sub_10032D0B8()
{
  objc_class *v0;
  HKWorkout v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;

  v1.super.super.super.isa = v0;
  v2 = -[objc_class metadata](v0, "metadata");
  if (v2)
  {
    v3 = v2;
    v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v4 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  v5 = type metadata accessor for BlastDoorConfigurationValidator(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = BlastDoorConfigurationValidator.init()();
  v7 = (id)static WorkoutConfiguration.deserialize(from:requiringOccurrence:validator:)(v4, 0, v6);
  swift_release(v6);
  v8 = swift_bridgeObjectRelease(v4);
  if (!v7)
    goto LABEL_8;
  v9 = type metadata accessor for RaceWorkoutConfiguration(0);
  if (!swift_dynamicCastClass(v7, v9))
  {

LABEL_8:
    v11 = static os_log_type_t.default.getter(v8);
    v7 = HKLogWorkouts;
    os_log(_:dso:log:_:_:)(v11, &_mh_execute_header, v7, "[race] unable to serialize race as race configuration", 53, 2, _swiftEmptyArrayStorage);
    v10 = 0.0;
    goto LABEL_9;
  }
  v10 = RaceWorkoutConfiguration.raceTimeFrom(_:)(v1);
LABEL_9:

  return v10;
}

uint64_t sub_10032D218()
{
  objc_class *v0;
  HKWorkout v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Swift::Double_optional v14;

  v1.super.super.super.isa = v0;
  v2 = -[objc_class metadata](v0, "metadata");
  if (v2)
  {
    v3 = v2;
    v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v4 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  v5 = type metadata accessor for BlastDoorConfigurationValidator(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = BlastDoorConfigurationValidator.init()();
  v7 = (void *)static WorkoutConfiguration.deserialize(from:requiringOccurrence:validator:)(v4, 0, v6);
  swift_release(v6);
  v8 = swift_bridgeObjectRelease(v4);
  if (!v7)
    goto LABEL_8;
  v9 = type metadata accessor for RaceWorkoutConfiguration(0);
  if (!swift_dynamicCastClass(v7, v9))
  {

LABEL_8:
    v11 = static os_log_type_t.default.getter(v8);
    v12 = HKLogWorkouts;
    os_log(_:dso:log:_:_:)(v11, &_mh_execute_header, v12, "[race] unable to serialize race as race configuration", 53, 2, _swiftEmptyArrayStorage);

    return 0;
  }
  v14 = RaceWorkoutConfiguration.secondsAheadFrom(_:)(v1);
  v10 = *(_QWORD *)&v14.is_nil;

  return v10;
}

BOOL sub_10032D3B0()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  Swift::Double v18;
  Swift::Bool v19;
  uint64_t v20;
  Swift::Double_optional v22;

  v1 = v0;
  v2 = objc_msgSend(v0, "metadata");
  if (v2)
  {
    v3 = v2;
    v4 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v4 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  v5 = type metadata accessor for BlastDoorConfigurationValidator(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = BlastDoorConfigurationValidator.init()();
  v7 = (id)static WorkoutConfiguration.deserialize(from:requiringOccurrence:validator:)(v4, 0, v6);
  swift_release(v6);
  swift_bridgeObjectRelease(v4, v8, v9, v10, v11, v12, v13, v14);
  if (!v7)
    goto LABEL_8;
  v16 = type metadata accessor for RaceWorkoutConfiguration(0);
  if (!swift_dynamicCastClass(v7, v16))
  {

LABEL_8:
    v20 = static os_log_type_t.default.getter(v15);
    v7 = HKLogWorkouts;
    os_log(_:dso:log:_:_:)(v20, &_mh_execute_header, v7, "[race] unable to serialize race as race configuration", 53, 2, _swiftEmptyArrayStorage);
    v19 = 0;
    goto LABEL_9;
  }
  objc_msgSend(v1, "raceTime");
  v18 = v17;
  v22.is_nil = sub_10032D218();
  v19 = RaceWorkoutConfiguration.raceTimeWouldWinRace(_:secondsAhead:)(v18, v22);
LABEL_9:

  return v19;
}

uint64_t sub_10032D56C()
{
  return sub_10032D578((unsigned int *)&enum case for ConfigurationType.pacer(_:));
}

uint64_t sub_10032D578(unsigned int *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  __n128 v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  int v34;
  uint64_t *v35;
  char v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unsigned int *v45;

  v45 = a1;
  v2 = type metadata accessor for ConfigurationType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v43 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10082EBC8);
  __chkstk_darwin(v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_10082EBD0);
  __chkstk_darwin(v8);
  v44 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - v11;
  *(_QWORD *)&v14 = __chkstk_darwin(v13).n128_u64[0];
  v16 = (char *)&v42 - v15;
  v17 = objc_msgSend(v1, "metadata", v14);
  if (v17)
  {
    v18 = v17;
    v19 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v19 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  v20 = type metadata accessor for BlastDoorConfigurationValidator(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = BlastDoorConfigurationValidator.init()();
  v22 = (void *)static WorkoutConfiguration.deserialize(from:requiringOccurrence:validator:)(v19, 0, v21);
  swift_release(v21);
  swift_bridgeObjectRelease(v19, v23, v24, v25, v26, v27, v28, v29);
  if (v22)
  {
    dispatch thunk of WorkoutConfiguration.type.getter(v30);

    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v31(v16, 0, 1, v2);
  }
  else
  {
    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v31(v16, 1, 1, v2);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v12, *v45, v2);
  v31(v12, 0, 1, v2);
  v32 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_100021CC0((uint64_t)v16, (uint64_t)v7, &qword_10082EBD0);
  sub_100021CC0((uint64_t)v12, v32, &qword_10082EBD0);
  v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v33((uint64_t)v7, 1, v2) == 1)
  {
    sub_10001BE90((uint64_t)v12, &qword_10082EBD0);
    sub_10001BE90((uint64_t)v16, &qword_10082EBD0);
    v34 = v33(v32, 1, v2);
    if (v34 == 1)
      v35 = &qword_10082EBD0;
    else
      v35 = &qword_10082EBC8;
    if (v34 == 1)
      v36 = -1;
    else
      v36 = 0;
  }
  else
  {
    v37 = v44;
    sub_100021CC0((uint64_t)v7, v44, &qword_10082EBD0);
    if (v33(v32, 1, v2) == 1)
    {
      sub_10001BE90((uint64_t)v12, &qword_10082EBD0);
      sub_10001BE90((uint64_t)v16, &qword_10082EBD0);
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v37, v2);
      v36 = 0;
      v35 = &qword_10082EBC8;
    }
    else
    {
      v38 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v43, v32, v2);
      v39 = sub_10032FE84();
      v36 = dispatch thunk of static Equatable.== infix(_:_:)(v37, v38, v2, v39);
      v40 = *(void (**)(char *, uint64_t))(v3 + 8);
      v40(v38, v2);
      v35 = &qword_10082EBD0;
      sub_10001BE90((uint64_t)v12, &qword_10082EBD0);
      sub_10001BE90((uint64_t)v16, &qword_10082EBD0);
      v40((char *)v37, v2);
    }
  }
  sub_10001BE90((uint64_t)v7, v35);
  return v36 & 1;
}

double sub_10032D994()
{
  return sub_10032D9EC((double (*)(void))&RaceWorkoutConfiguration.referenceRouteAveragePace.getter);
}

double sub_10032D9E0()
{
  return sub_10032D9EC((double (*)(void))&RaceWorkoutConfiguration.lastWorkoutDistance.getter);
}

double sub_10032D9EC(double (*a1)(void))
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  double v10;

  v3 = objc_msgSend(v1, "metadata");
  if (v3)
  {
    v4 = v3;
    v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v5 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  v6 = type metadata accessor for BlastDoorConfigurationValidator(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7 = BlastDoorConfigurationValidator.init()();
  v8 = (void *)static WorkoutConfiguration.deserialize(from:requiringOccurrence:validator:)(v5, 0, v7);
  swift_release(v7);
  swift_bridgeObjectRelease(v5);
  if (!v8)
    return 0.0;
  v9 = type metadata accessor for RaceWorkoutConfiguration(0);
  if (swift_dynamicCastClass(v8, v9))
    v10 = a1();
  else
    v10 = 0.0;

  return v10;
}

id sub_10032DB34()
{
  void *v0;
  id result;
  void *v2;
  unsigned __int8 v3;
  void *v4;
  unsigned int v5;

  if (objc_msgSend(v0, "workoutActivityType") != (id)37 && objc_msgSend(v0, "workoutActivityType") != (id)71)
    return 0;
  result = objc_msgSend(v0, "fiui_activityType");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "isIndoor");

    if ((v3 & 1) != 0)
      return 0;
    result = objc_msgSend(v0, "fiui_activityType");
    if (result)
    {
      v4 = result;
      v5 = objc_msgSend(result, "isPartOfMultiSport");

      return (id)(v5 ^ 1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10032DCA8()
{
  void *v0;
  id v1;
  void *v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  const char *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  unint64_t v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  __int128 v22;
  __int128 v23;

  v1 = objc_msgSend(v0, "metadata");
  if (!v1)
  {
    v22 = 0u;
    v23 = 0u;
    goto LABEL_10;
  }
  v2 = v1;
  v3 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  if (!*(_QWORD *)v3->cellPadding
    || (v11 = sub_100438F74(0xD000000000000023, 0x8000000100699CB0), (v4 & 1) == 0))
  {
    v22 = 0u;
    v23 = 0u;
    swift_bridgeObjectRelease(v3, v4, v5, v6, v7, v8, v9, v10);
    goto LABEL_10;
  }
  sub_10003E9BC(*(_QWORD *)v3[1].cellInset + 32 * v11, (uint64_t)&v22);
  swift_bridgeObjectRelease(v3, v12, v13, v14, v15, v16, v17, v18);
  if (!*((_QWORD *)&v23 + 1))
  {
LABEL_10:
    sub_10001BE90((uint64_t)&v22, (uint64_t *)&unk_100828420);
    return 0;
  }
  v19 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
  if (swift_dynamicCast(&v21, &v22, (char *)&type metadata for Any + 8, v19, 6))
    return v21;
  else
    return 0;
}

uint64_t sub_10032DDD0(char a1)
{
  void *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  uint64_t v10;
  void *v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = sub_100047110(&qword_10082EBC0);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v1, "metadata", v4);
  if (v7)
  {
    v8 = v7;
    v9 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v9 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  type metadata accessor for WorkoutConfigurationValidator(0);
  v10 = static WorkoutConfigurationValidator.shared.getter();
  v11 = (void *)static WorkoutConfiguration.deserialize(from:validator:)(v9, v10);
  swift_release(v10);
  swift_bridgeObjectRelease(v9, v12, v13, v14, v15, v16, v17, v18);
  if (!v11)
    return 0;
  if ((a1 & 1) == 0)
  {
    v20 = type metadata accessor for WorkoutPlan.Route(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
    v19 = dispatch thunk of WorkoutConfiguration.route.setter(v6);
  }
  v21 = WorkoutConfiguration.serializedCompositionData.getter(v19);

  return v21;
}

uint64_t sub_10032DFE4()
{
  void *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  uint64_t v8;
  void *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = sub_100047110(&qword_10082EBC0);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, "metadata", v2);
  if (v5)
  {
    v6 = v5;
    v7 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v7 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  type metadata accessor for WorkoutConfigurationValidator(0);
  v8 = static WorkoutConfigurationValidator.shared.getter();
  v9 = (void *)static WorkoutConfiguration.deserialize(from:validator:)(v7, v8);
  swift_release(v8);
  swift_bridgeObjectRelease(v7, v10, v11, v12, v13, v14, v15, v16);
  if (v9)
  {
    dispatch thunk of WorkoutConfiguration.route.getter();

    v17 = type metadata accessor for WorkoutPlan.Route(0);
    v18 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v4, 1, v17) != 1)
      goto LABEL_9;
  }
  else
  {
    v19 = type metadata accessor for WorkoutPlan.Route(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  }
  v18 = 0;
LABEL_9:
  sub_10001BE90((uint64_t)v4, &qword_10082EBC0);
  return v18;
}

void *sub_10032E1C8()
{
  void *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  uint64_t v8;
  void *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  v1 = sub_100047110(&qword_10082EBC0);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, "metadata", v2);
  if (v5)
  {
    v6 = v5;
    v7 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v7 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  type metadata accessor for WorkoutConfigurationValidator(0);
  v8 = static WorkoutConfigurationValidator.shared.getter();
  v9 = (void *)static WorkoutConfiguration.deserialize(from:validator:)(v7, v8);
  swift_release(v8);
  swift_bridgeObjectRelease(v7, v10, v11, v12, v13, v14, v15, v16);
  if (v9)
  {
    dispatch thunk of WorkoutConfiguration.route.getter();

    v17 = type metadata accessor for WorkoutPlan.Route(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v4, 1, v17))
      v9 = 0;
    else
      v9 = (void *)WorkoutPlan.Route.snapshot.getter();
    sub_10001BE90((uint64_t)v4, &qword_10082EBC0);
  }
  return v9;
}

uint64_t sub_10032E330(void *a1, uint64_t a2, unint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  uint64_t v28;
  uint64_t v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  const char *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  _QWORD *v49;
  id v50;
  void *v51;
  double v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  const char *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  uint64_t v66;
  SEL v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  SEL v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  char *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  id v89;
  void *v90;
  char *v91;
  uint64_t v92;
  _QWORD *v93;

  v92 = type metadata accessor for RoutePoint(0);
  v7 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v9 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10082EBC0);
  __chkstk_darwin(v10);
  v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  v13 = a1;
  v14 = objc_msgSend(v13, "allValidLocations");
  v15 = sub_10001E724(0, (unint64_t *)&qword_10082AC90, CLLocation_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v66 = v16;
    else
      v66 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v24 = _CocoaArrayWrapper.endIndex.getter(v66);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v16, v67, v68, v69, v70, v71, v72, v73);
  }
  else
  {
    v24 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v16, v17, v18, v19, v20, v21, v22, v23);
  if (!v24)
    goto LABEL_20;
  v25 = objc_msgSend(v3, "metadata");
  v91 = v12;
  if (v25)
  {
    v26 = v25;
    v27 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v27 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  type metadata accessor for WorkoutConfigurationValidator(0);
  v28 = static WorkoutConfigurationValidator.shared.getter();
  v29 = static WorkoutConfiguration.deserialize(from:validator:)(v27, v28);
  swift_release(v28);
  swift_bridgeObjectRelease(v27, v30, v31, v32, v33, v34, v35, v36);
  v90 = (void *)v29;
  if (!v29)
  {
LABEL_20:

    return 0;
  }
  v37 = objc_msgSend(v13, "allValidLocations");
  v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v15);

  if (!((unint64_t)v38 >> 62))
  {
    v46 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v46)
      goto LABEL_11;
LABEL_29:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v38, v39, v40, v41, v42, v43, v44, v45);
    v49 = _swiftEmptyArrayStorage;
LABEL_30:
    sub_10032FE70(a2, a3);
    v82 = v91;
    WorkoutPlan.Route.init(points:snapshot:)(v49, a2, a3);
    v83 = type metadata accessor for WorkoutPlan.Route(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 0, 1, v83);
    v84 = v90;
    v85 = dispatch thunk of WorkoutConfiguration.route.setter(v82);
    v86 = WorkoutConfiguration.serializedCompositionData.getter(v85);

    return v86;
  }
  if (v38 < 0)
    v74 = v38;
  else
    v74 = v38 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v38);
  v46 = _CocoaArrayWrapper.endIndex.getter(v74);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v38, v75, v76, v77, v78, v79, v80, v81);
  if (!v46)
    goto LABEL_29;
LABEL_11:
  v87 = a2;
  v88 = a3;
  v89 = v13;
  v93 = _swiftEmptyArrayStorage;
  result = sub_100121AA8(0, v46 & ~(v46 >> 63), 0);
  if ((v46 & 0x8000000000000000) == 0)
  {
    v48 = 0;
    v49 = v93;
    do
    {
      if ((v38 & 0xC000000000000001) != 0)
        v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v48, v38);
      else
        v50 = *(id *)(v38 + 8 * v48 + 32);
      v51 = v50;
      objc_msgSend(v50, "coordinate");
      v53 = v52;
      v55 = v54;
      objc_msgSend(v51, "altitude");
      RoutePoint.init(coordinate:altitude:)(v56, 0, v53, v55);

      v93 = v49;
      v58 = v49[2];
      v57 = v49[3];
      if (v58 >= v57 >> 1)
      {
        sub_100121AA8(v57 > 1, v58 + 1, 1);
        v49 = v93;
      }
      ++v48;
      v49[2] = v58 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))((unint64_t)v49+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v58, v9, v92);
    }
    while (v46 != v48);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v38, v59, v60, v61, v62, v63, v64, v65);
    a3 = v88;
    v13 = v89;
    a2 = v87;
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_10032E838(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  id v5;
  void *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  NSString v37;
  id v38;
  uint64_t result;
  uint64_t v40;
  id v41;
  double v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  unint64_t v49;
  void *v50;
  uint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  unint64_t v54;
  const char *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  id v63;
  void *v64;
  id v65;
  void *v66;
  double v67;
  double v68;
  uint64_t v69;
  void *v70;
  id v71;
  unint64_t v72;
  double v73;
  id v74;
  void *v75;
  unint64_t v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  uint64_t v81;
  id v82;
  void *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  id v87;
  void *v88;
  uint64_t v89;
  CHWorkoutDetailHeartRateTableViewCell *v90;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  id v92;
  NSString v93;
  id v94;
  uint64_t v95;
  CHWorkoutDetailHeartRateTableViewCell *v96;
  CHWorkoutDetailHeartRateTableViewCell *v97;
  id v98;
  const char *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  Swift::String v117;
  SEL v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  NSString v126;
  id v127;
  uint64_t v128;
  CHWorkoutDetailHeartRateTableViewCell *v129;
  CHWorkoutDetailHeartRateTableViewCell *v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  __n128 v134;
  SEL v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  void *v142;
  id v143;
  void *v144;
  double v145;
  double v146;
  uint64_t v147;
  void *v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  void *v153;
  uint64_t v154;
  void *v155;
  void *v156;
  id v157;
  id v158;
  double v159;
  double v160;
  id v161;
  void *v162;
  uint64_t v163;
  id v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  id v169;
  NSString v170;
  uint64_t v171;
  id v172;
  NSString v173;
  id v174;
  uint64_t v175;
  CHWorkoutDetailHeartRateTableViewCell *v176;
  CHWorkoutDetailHeartRateTableViewCell *v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  __n128 v181;
  SEL v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  id v188;
  SEL v189;
  id v190;
  id v191;
  id v192;
  id v193;
  id v194;
  id v195;
  id v196;
  uint64_t v197;
  CHWorkoutDetailHeartRateTableViewCell *v198;
  CHWorkoutDetailHeartRateTableViewCell *v199;
  Swift::String v200;
  SEL v201;
  id v202;
  id v203;
  id v204;
  id v205;
  id v206;
  id v207;
  uint64_t v208;
  uint64_t v209;
  void *v210;
  unint64_t v211;
  uint64_t v212;
  unint64_t v213;
  unint64_t v214;
  unint64_t v215;
  _QWORD v216[2];
  _QWORD v217[2];
  uint64_t v218;
  unint64_t v219;

  v3 = v1;
  v5 = objc_msgSend(v1, "metadata");
  if (v5)
  {
    v6 = v5;
    v7 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v7 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  v8 = type metadata accessor for BlastDoorConfigurationValidator(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = BlastDoorConfigurationValidator.init()();
  v10 = (void *)static WorkoutConfiguration.deserialize(from:requiringOccurrence:validator:)(v7, 0, v9);
  swift_release(v9);
  swift_bridgeObjectRelease(v7, v11, v12, v13, v14, v15, v16, v17);
  if (!v10)
    return 0;
  v18 = type metadata accessor for GoalWorkoutConfiguration(0);
  if (swift_dynamicCastClass(v10, v18))
  {
    v19 = v10;
    v20 = (char *)GoalWorkoutConfiguration.goal.getter();
    v21 = objc_msgSend(v20, "goalTypeIdentifier");

    if (v21)
    {
      v23 = (void *)GoalWorkoutConfiguration.goal.getter();
      v24 = objc_msgSend(v23, "goalTypeIdentifier");

      v25 = (void *)GoalWorkoutConfiguration.goal.getter();
      objc_msgSend(v25, "doubleValue");
      v27 = v26;

      v29 = (void *)dispatch thunk of WorkoutConfiguration.activityType.getter(v28);
      v30 = objc_msgSend(a1, "localizedGoalDescriptionForGoalType:goalValue:activityType:", v24, v29, v27);

      if (v30)
      {
        v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);

LABEL_9:
        return v31;
      }

      return 0;
    }
    v35 = (id)FIUIBundle(v22);
    if (v35)
    {
      v36 = v35;
      v37 = String._bridgeToObjectiveC()();
      v38 = objc_msgSend(v36, "localizedStringForKey:value:table:", v37, 0, 0);

      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      return v31;
    }
    __break(1u);
    goto LABEL_53;
  }
  v32 = type metadata accessor for IntervalWorkoutConfiguration(0);
  if (swift_dynamicCastClass(v10, v32))
  {
    v33 = v10;
    v34 = (void *)IntervalWorkoutConfiguration.intervalWorkout.getter(v33);
    v31 = IntervalWorkout.displayName.getter();

    return v31;
  }
  v40 = type metadata accessor for RaceWorkoutConfiguration(0);
  if (swift_dynamicCastClass(v10, v40))
  {
    v41 = v10;
    v42 = RaceWorkoutConfiguration.referenceRouteLength.getter();
    v43 = v41;
    v44 = (void *)dispatch thunk of WorkoutConfiguration.activityType.getter(v43);

    v20 = (char *)FIUIDistanceTypeForActivityType(v44);
    v45 = objc_msgSend(a1, "unitManager");
    if (v45)
    {
      v46 = v45;
      v47 = objc_msgSend(v45, "userDistanceUnitForDistanceType:", v20);

      v48 = objc_msgSend(a1, "localizedStringWithDistanceInMeters:distanceUnit:unitStyle:decimalPrecision:", v47, 2, 2, v42);
      v49 = 0xE000000000000000;
      if (v48)
      {
        v50 = v48;
        v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
        v53 = v52;

        v218 = v51;
        v219 = (unint64_t)v53;
        v217[0] = 32;
        v217[1] = 0xE100000000000000;
        v216[0] = 0;
        v216[1] = 0xE000000000000000;
        v54 = sub_100038CA0();
        v209 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v217, v216, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v54, v54, v54);
        v49 = (unint64_t)v55;
        swift_bridgeObjectRelease(v53, v55, v56, v57, v58, v59, v60, v61);
      }
      else
      {
        v209 = 0;
      }
      v73 = RaceWorkoutConfiguration.referenceRouteDuration.getter();
      v74 = objc_msgSend(a1, "stringWithDuration:durationFormat:", 2);
      if (v74)
      {
        v75 = v74;
        v208 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
        v213 = v76;

      }
      else
      {
        v208 = 0;
        v213 = 0xE000000000000000;
      }
      v77 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
      v78 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v77, v42);

      v79 = v43;
      v80 = (void *)dispatch thunk of WorkoutConfiguration.activityType.getter(v79);

      v81 = FIUIPaceFormatForWorkoutActivityType(v80);
      v210 = v78;
      v82 = objc_msgSend(a1, "localizedPaceStringWithDistance:overDuration:paceFormat:distanceType:", v78, v81, v20, v73);
      if (v82)
      {
        v83 = v82;
        v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
        v86 = v85;

      }
      else
      {
        v84 = 0;
        v86 = 0xE000000000000000;
      }
      v215 = v49;
      if (v81 == 4)
      {
        v87 = objc_msgSend(a1, "localizedSpeedUnitStringForDistanceUnit:unitStyle:", v47, 1);
        if (v87)
        {
          v88 = v87;
          v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
          v91 = v90;

        }
        else
        {
          v89 = 0;
          v91 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
        }
        v115 = v208;
        v114 = v209;
        v218 = v84;
        v219 = v86;
        v117._countAndFlagsBits = v89;
        v117._object = v91;
        String.append(_:)(v117);
        swift_bridgeObjectRelease(v91, v118, v119, v120, v121, v122, v123, v124);
        v84 = v218;
        v86 = v219;
      }
      else
      {
        v92 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v93 = String._bridgeToObjectiveC()();
        v94 = objc_msgSend(v92, "localizedStringForKey:value:table:", v93, 0, 0);

        v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
        v97 = v96;

        v98 = objc_msgSend(a1, "localizedShortUnitStringForDistanceUnit:", v47);
        if (v98)
        {
          v106 = v98;
          v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
          v109 = v108;

          v110 = sub_100047110((uint64_t *)&unk_100827460);
          v111 = swift_allocObject(v110, 112, 7);
          *(_OWORD *)(v111 + 16) = xmmword_100620BC0;
          *(_QWORD *)(v111 + 56) = &type metadata for String;
          v112 = sub_100038CF8();
          *(_QWORD *)(v111 + 32) = v84;
          *(_QWORD *)(v111 + 40) = v86;
          *(_QWORD *)(v111 + 96) = &type metadata for String;
          *(_QWORD *)(v111 + 104) = v112;
          *(_QWORD *)(v111 + 64) = v112;
          *(_QWORD *)(v111 + 72) = v107;
          *(_QWORD *)(v111 + 80) = v109;
          v84 = String.init(format:_:)(v95, v97, v111, v113);
          v86 = (unint64_t)v99;
        }
        swift_bridgeObjectRelease(v97, v99, v100, v101, v102, v103, v104, v105);
        v115 = v208;
        v114 = v209;
      }
      v125 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v126 = String._bridgeToObjectiveC()();
      v127 = objc_msgSend(v125, "localizedStringForKey:value:table:", v126, 0, 0);

      v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(v127);
      v130 = v129;

      v131 = sub_100047110((uint64_t *)&unk_100827460);
      v132 = swift_allocObject(v131, 152, 7);
      *(_OWORD *)(v132 + 16) = xmmword_100624A40;
      *(_QWORD *)(v132 + 56) = &type metadata for String;
      v133 = sub_100038CF8();
      *(_QWORD *)(v132 + 32) = v114;
      *(_QWORD *)(v132 + 40) = v215;
      *(_QWORD *)(v132 + 96) = &type metadata for String;
      *(_QWORD *)(v132 + 104) = v133;
      *(_QWORD *)(v132 + 64) = v133;
      *(_QWORD *)(v132 + 72) = v115;
      *(_QWORD *)(v132 + 80) = v213;
      *(_QWORD *)(v132 + 136) = &type metadata for String;
      *(_QWORD *)(v132 + 144) = v133;
      *(_QWORD *)(v132 + 112) = v84;
      *(_QWORD *)(v132 + 120) = v86;
      v31 = String.init(format:_:)(v128, v130, v132, v134);
      swift_bridgeObjectRelease(v130, v135, v136, v137, v138, v139, v140, v141);

      return v31;
    }
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v62 = type metadata accessor for PacerWorkoutConfiguration();
  if (swift_dynamicCastClass(v10, v62))
  {
    v63 = v10;
    v64 = (void *)PacerWorkoutConfiguration.distanceGoal.getter();
    v65 = objc_msgSend(v64, "goalTypeIdentifier");

    v66 = (void *)PacerWorkoutConfiguration.distanceGoal.getter();
    objc_msgSend(v66, "doubleValue");
    v68 = v67;

    v70 = (void *)dispatch thunk of WorkoutConfiguration.activityType.getter(v69);
    v71 = objc_msgSend(a1, "localizedGoalDescriptionForGoalType:goalValue:activityType:", v65, v70, v68);

    if (v71)
    {
      v212 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
      v214 = v72;

    }
    else
    {
      v212 = 11565;
      v214 = 0xE200000000000000;
    }
    v142 = (void *)PacerWorkoutConfiguration.timeGoal.getter();
    v143 = objc_msgSend(v142, "goalTypeIdentifier");

    v144 = (void *)PacerWorkoutConfiguration.timeGoal.getter();
    objc_msgSend(v144, "doubleValue");
    v146 = v145;

    v148 = (void *)dispatch thunk of WorkoutConfiguration.activityType.getter(v147);
    v149 = objc_msgSend(a1, "localizedGoalDescriptionForGoalType:goalValue:activityType:", v143, v148, v146);

    if (v149)
    {
      v151 = static String._unconditionallyBridgeFromObjectiveC(_:)(v149);
      v211 = v152;

    }
    else
    {
      v211 = 0xE500000000000000;
      v151 = 0x2D2D3A2D2DLL;
    }
    v20 = (char *)0xD000000000000011;
    v153 = (void *)dispatch thunk of WorkoutConfiguration.activityType.getter(v150);
    v154 = FIUIPaceFormatForWorkoutActivityType(v153);

    v155 = (void *)PacerWorkoutConfiguration.distanceGoal.getter();
    v2 = objc_msgSend(v155, "value");

    if (!v2)
      goto LABEL_55;
    v156 = (void *)PacerWorkoutConfiguration.timeGoal.getter();
    v157 = objc_msgSend(v156, "value");

    if (v157)
    {
      v158 = objc_msgSend((id)objc_opt_self(HKUnit), "secondUnit");
      objc_msgSend(v157, "doubleValueForUnit:", v158);
      v160 = v159;

      v161 = v63;
      v162 = (void *)dispatch thunk of WorkoutConfiguration.activityType.getter(v161);

      v163 = FIUIDistanceTypeForActivityType(v162);
      v164 = objc_msgSend(a1, "localizedPaceStringWithDistance:overDuration:paceFormat:distanceType:", v2, v154, v163, v160);
      if (v164)
      {
        v165 = v164;
        v166 = static String._unconditionallyBridgeFromObjectiveC(_:)(v164);
        v168 = v167;
      }
      else
      {
        v169 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v170 = String._bridgeToObjectiveC()();
        v165 = objc_msgSend(v169, "localizedStringForKey:value:table:", v170, 0, 0);

        v166 = static String._unconditionallyBridgeFromObjectiveC(_:)(v165);
        v168 = v171;

      }
      v172 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v173 = String._bridgeToObjectiveC()();
      v174 = objc_msgSend(v172, "localizedStringForKey:value:table:", v173, 0, 0);

      v175 = static String._unconditionallyBridgeFromObjectiveC(_:)(v174);
      v177 = v176;

      v178 = sub_100047110((uint64_t *)&unk_100827460);
      v179 = swift_allocObject(v178, 152, 7);
      *(_OWORD *)(v179 + 16) = xmmword_100624A40;
      *(_QWORD *)(v179 + 56) = &type metadata for String;
      v180 = sub_100038CF8();
      *(_QWORD *)(v179 + 32) = v212;
      *(_QWORD *)(v179 + 40) = v214;
      *(_QWORD *)(v179 + 96) = &type metadata for String;
      *(_QWORD *)(v179 + 104) = v180;
      *(_QWORD *)(v179 + 64) = v180;
      *(_QWORD *)(v179 + 72) = v151;
      *(_QWORD *)(v179 + 80) = v211;
      *(_QWORD *)(v179 + 136) = &type metadata for String;
      *(_QWORD *)(v179 + 144) = v180;
      *(_QWORD *)(v179 + 112) = v166;
      *(_QWORD *)(v179 + 120) = v168;
      v31 = String.init(format:_:)(v175, v177, v179, v181);

      swift_bridgeObjectRelease(v177, v182, v183, v184, v185, v186, v187, v188);
      return v31;
    }
LABEL_54:

LABEL_55:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v20 + 45, 0x8000000100699D40, "FitnessApp/HKWorkout+Convenience.swift", 38, 2, 296, 0);
    goto LABEL_57;
  }
  v116 = type metadata accessor for MultiSportWorkoutConfiguration();
  if (swift_dynamicCastClass(v10, v116))
  {
    v19 = v10;
    v31 = MultiSportWorkoutConfiguration.displayName.getter();
    goto LABEL_9;
  }
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000, v189, v190, v191, v192, v193, v194, v195);
  v196 = objc_msgSend(v3, "description");
  v197 = static String._unconditionallyBridgeFromObjectiveC(_:)(v196);
  v199 = v198;

  v200._countAndFlagsBits = v197;
  v200._object = v199;
  String.append(_:)(v200);
  swift_bridgeObjectRelease(v199, v201, v202, v203, v204, v205, v206, v207);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x8000000100699D10, "FitnessApp/HKWorkout+Convenience.swift", 38, 2, 312, 0);
LABEL_57:
  __break(1u);
  return result;
}

id sub_10032F598(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v39;
  id v40;

  v40 = a3;
  v6 = sub_100047110(&qword_10082E2B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IntervalWorkoutKeyPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v11 = __chkstk_darwin(v9).n128_u64[0];
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(v3, "metadata", v11);
  if (v14)
  {
    v15 = v14;
    v16 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v16 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  v17 = type metadata accessor for BlastDoorConfigurationValidator(0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v18 = BlastDoorConfigurationValidator.init()();
  v19 = (void *)static WorkoutConfiguration.deserialize(from:requiringOccurrence:validator:)(v16, 0, v18);
  swift_release(v18);
  swift_bridgeObjectRelease(v16, v20, v21, v22, v23, v24, v25, v26);
  if (!v19)
    return 0;
  v27 = type metadata accessor for IntervalWorkoutConfiguration(0);
  if (!swift_dynamicCastClass(v19, v27))
    goto LABEL_11;
  v28 = swift_bridgeObjectRetain(a2);
  IntervalWorkoutKeyPath.init(serializedString:)(a1, a2, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {

    sub_10001BE90((uint64_t)v8, &qword_10082E2B0);
    return 0;
  }
  v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  v30 = (void *)IntervalWorkoutConfiguration.intervalWorkout.getter(v29);
  v31 = IntervalWorkout.stepForKeyPath(_:)(v13);

  v33 = (void *)WorkoutStep.goal.getter(v32);
  v34 = objc_msgSend(v33, "goalTypeIdentifier");

  if (v34 != v40)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    swift_release(v31);
LABEL_11:

    return 0;
  }
  v36 = (void *)WorkoutStep.goal.getter(v35);
  v37 = objc_msgSend(v36, "value");
  swift_release(v31);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v37;
}

id sub_10032F928(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v38;

  v5 = sub_100047110(&qword_10082E2B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IntervalWorkoutKeyPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v8).n128_u64[0];
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(v2, "metadata", v10);
  if (v13)
  {
    v14 = v13;
    v15 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v15 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  v16 = type metadata accessor for BlastDoorConfigurationValidator(0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v17 = BlastDoorConfigurationValidator.init()();
  v18 = (void *)static WorkoutConfiguration.deserialize(from:requiringOccurrence:validator:)(v15, 0, v17);
  swift_release(v17);
  swift_bridgeObjectRelease(v15, v19, v20, v21, v22, v23, v24, v25);
  if (!v18)
    return 0;
  v26 = type metadata accessor for IntervalWorkoutConfiguration(0);
  if (!swift_dynamicCastClass(v18, v26))
    goto LABEL_11;
  v27 = swift_bridgeObjectRetain(a2);
  IntervalWorkoutKeyPath.init(serializedString:)(a1, a2, v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {

    sub_10001BE90((uint64_t)v7, &qword_10082E2B0);
    return 0;
  }
  v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
  v29 = (void *)IntervalWorkoutConfiguration.intervalWorkout.getter(v28);
  v30 = IntervalWorkout.stepForKeyPath(_:)(v12);

  v32 = (void *)WorkoutStep.goal.getter(v31);
  v33 = objc_msgSend(v32, "goalTypeIdentifier");

  if (v33 != (id)2)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    swift_release(v30);
LABEL_11:

    return 0;
  }
  v35 = (void *)WorkoutStep.goal.getter(v34);
  v36 = objc_msgSend(v35, "requiredDistance");
  swift_release(v30);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return v36;
}

uint64_t sub_10032FC08(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  void *v22;
  uint64_t v24;

  v5 = sub_100047110(&qword_10082E2B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IntervalWorkoutKeyPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(v2, "metadata");
  if (v12)
  {
    v13 = v12;
    v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v12, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v14 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  v15 = type metadata accessor for BlastDoorConfigurationValidator(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = BlastDoorConfigurationValidator.init()();
  v17 = (void *)static WorkoutConfiguration.deserialize(from:requiringOccurrence:validator:)(v14, 0, v16);
  swift_release(v16);
  swift_bridgeObjectRelease(v14);
  if (v17)
  {
    v18 = type metadata accessor for IntervalWorkoutConfiguration(0);
    v19 = swift_dynamicCastClass(v17, v18);
    if (!v19)
    {

      return v19;
    }
    v20 = swift_bridgeObjectRetain(a2);
    IntervalWorkoutKeyPath.init(serializedString:)(a1, a2, v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      v22 = (void *)IntervalWorkoutConfiguration.intervalWorkout.getter(v21);
      v19 = IntervalWorkout.stepForKeyPath(_:)(v11);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return v19;
    }

    sub_10001BE90((uint64_t)v7, &qword_10082E2B0);
  }
  return 0;
}

uint64_t sub_10032FE20@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  result = Identifiable<>.id.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_10032FE70(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1001AE60C(result, a2);
  return result;
}

unint64_t sub_10032FE84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082EBD8;
  if (!qword_10082EBD8)
  {
    v1 = type metadata accessor for ConfigurationType(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ConfigurationType, v1);
    atomic_store(result, (unint64_t *)&qword_10082EBD8);
  }
  return result;
}

id sub_10032FF8C()
{
  return sub_100111F3C(type metadata accessor for TrendListTableView);
}

uint64_t type metadata accessor for TrendListTableView()
{
  return objc_opt_self(_TtC10FitnessApp18TrendListTableView);
}

id sub_10032FFB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  const char *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t inited;
  uint64_t v30;
  void *v31;
  NSString *v32;
  id v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  id v35;
  NSString v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Class isa;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  const char *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  SEL v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  void (*v73)(void);
  char *v74;
  NSString v75;
  SEL v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  NSString v83;
  uint64_t v84;
  uint64_t v85;
  CHWorkoutDetailHeartRateTableViewCell *v86;
  NSString *v87;
  id v88;
  _QWORD *v89;
  id v90;
  NSString *v91;
  NSString *v92;
  CHWorkoutDetailHeartRateTableViewCell *v93;
  id v94;
  NSString v95;
  SEL v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  Class v103;
  SEL v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  double v113;
  _QWORD v115[2];
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  NSString *v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  id v129;
  char v130[112];
  char v131[16];

  v0 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v0);
  v125 = (char *)v115 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for URL(0);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v124 = (char *)v115 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TrendsFooterTextView();
  v128 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");
  v4 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:variant:", UIFontTextStyleFootnote, 256);
  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, 0, 0);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = objc_msgSend(v5, "mainBundle");
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, 0, 0);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = sub_100047110((uint64_t *)&unk_100827460);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100622F90;
  *(_QWORD *)(v19 + 56) = &type metadata for String;
  *(_QWORD *)(v19 + 64) = sub_100038CF8();
  v122 = v9;
  *(_QWORD *)(v19 + 32) = v9;
  *(_QWORD *)(v19 + 40) = v11;
  v20 = swift_bridgeObjectRetain(v11);
  String.init(format:_:)(v15, v17, v19, v20);
  v22 = (CHWorkoutDetailHeartRateTableViewCell *)v21;
  swift_bridgeObjectRelease(v17, v21, v23, v24, v25, v26, v27, v28);
  v121 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v121, v131);
  v120 = xmmword_100620BC0;
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v30 = sub_100047110((uint64_t *)&unk_10082EE00);
  *(_QWORD *)(inited + 40) = v4;
  v118 = v30;
  *(_QWORD *)(inited + 64) = v30;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v31 = (void *)objc_opt_self(UIColor);
  v119 = NSFontAttributeName;
  v123 = v4;
  v129 = v4;
  v32 = NSForegroundColorAttributeName;
  v33 = objc_msgSend(v31, "secondaryLabelColor");
  *(_QWORD *)(inited + 104) = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v33;
  v34 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(inited);
  v35 = objc_allocWithZone((Class)NSMutableAttributedString);
  swift_bridgeObjectRetain(v22);
  v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22, v37, v38, v39, v40, v41, v42, v43);
  type metadata accessor for Key(0);
  v45 = v44;
  v46 = sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  v117 = v45;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v34, v48, v49, v50, v51, v52, v53, v54);
  v55 = objc_msgSend(v35, "initWithString:attributes:", v36, isa);

  v56 = (uint64_t)v125;
  URL.init(string:)(0xD000000000000022, 0x800000010069A270);
  v57 = v126;
  v58 = v127;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v126 + 48))(v56, 1) == 1)
  {
    swift_bridgeObjectRelease(v22, v59, v60, v61, v62, v63, v64, v65);
    swift_bridgeObjectRelease(v11, v66, v67, v68, v69, v70, v71, v72);
    sub_10001BE90(v56, &qword_10081E640);
  }
  else
  {
    v73 = *(void (**)(void))(v57 + 32);
    v115[1] = v46;
    v74 = v124;
    v73();
    v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v22, v76, v77, v78, v79, v80, v81, v82);
    v83 = String._bridgeToObjectiveC()();
    v125 = (char *)objc_msgSend(v75, "rangeOfString:", v83);
    v116 = v84;

    v85 = swift_initStackObject(v121, v130);
    *(_OWORD *)(v85 + 16) = v120;
    v86 = v11;
    v87 = v119;
    v88 = v123;
    *(_QWORD *)(v85 + 32) = v119;
    *(_QWORD *)(v85 + 40) = v88;
    *(_QWORD *)(v85 + 64) = v118;
    *(_QWORD *)(v85 + 72) = NSLinkAttributeName;
    *(_QWORD *)(v85 + 104) = v58;
    v89 = sub_10004C480((_QWORD *)(v85 + 80));
    (*(void (**)(_QWORD *, char *, uint64_t))(v57 + 16))(v89, v74, v58);
    v90 = v129;
    v91 = v87;
    v92 = NSLinkAttributeName;
    v93 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(v85);
    v94 = objc_allocWithZone((Class)NSAttributedString);
    v95 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v86, v96, v97, v98, v99, v100, v101, v102);
    v103 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v93, v104, v105, v106, v107, v108, v109, v110);
    v111 = objc_msgSend(v94, "initWithString:attributes:", v95, v103);

    objc_msgSend(v55, "replaceCharactersInRange:withAttributedString:", v125, v116, v111);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v74, v58);
  }
  v112 = v128;
  objc_msgSend(v128, "setAttributedText:", v55);
  LODWORD(v113) = 1148846080;
  objc_msgSend(v112, "setContentCompressionResistancePriority:forAxis:", 1, v113);

  return v112;
}

char *sub_100330678(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  uint64_t v6;
  char *v7;
  NSString v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  char *v17;
  id v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  Class isa;
  SEL v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  objc_super v64;
  CGRect v65;

  v6 = OBJC_IVAR____TtC10FitnessApp15TrendListFooter_textView;
  v7 = v3;
  *(_QWORD *)&v3[v6] = sub_10032FFB8();

  if (a3)
  {
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v9, v10, v11, v12, v13, v14, v15);
  }
  else
  {
    v8 = 0;
  }
  v64.receiver = v7;
  v64.super_class = (Class)type metadata accessor for TrendListFooter();
  v16 = objc_msgSendSuper2(&v64, "initWithStyle:reuseIdentifier:", a1, v8);

  v17 = (char *)v16;
  v18 = objc_msgSend(v17, "contentView");
  v19 = OBJC_IVAR____TtC10FitnessApp15TrendListFooter_textView;
  objc_msgSend(v18, "addSubview:", *(_QWORD *)&v17[OBJC_IVAR____TtC10FitnessApp15TrendListFooter_textView]);

  v20 = (void *)objc_opt_self(UIScreen);
  v21 = v17;
  v22 = objc_msgSend(v20, "mainScreen");
  objc_msgSend(v22, "bounds");
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;

  v65.origin.x = v24;
  v65.origin.y = v26;
  v65.size.width = v28;
  v65.size.height = v30;
  objc_msgSend(v21, "setSeparatorInset:", 0.0, CGRectGetWidth(v65), 0.0, 0.0);

  v31 = objc_msgSend(*(id *)&v17[v19], "leadingAnchor");
  v32 = objc_msgSend(v21, "contentView");
  v33 = objc_msgSend(v32, "leadingAnchor");

  v34 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, 16.0);
  v35 = objc_msgSend(*(id *)&v17[v19], "topAnchor");
  v36 = objc_msgSend(v21, "contentView");
  v37 = objc_msgSend(v36, "topAnchor");

  v38 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v37, 4.0);
  v39 = objc_msgSend(*(id *)&v17[v19], "trailingAnchor");
  v40 = objc_msgSend(v21, "contentView");
  v41 = objc_msgSend(v40, "trailingAnchor");

  v42 = objc_msgSend(v39, "constraintEqualToAnchor:constant:", v41, -16.0);
  v43 = objc_msgSend(*(id *)&v17[v19], "bottomAnchor");
  v44 = objc_msgSend(v21, "contentView");
  v45 = objc_msgSend(v44, "bottomAnchor");

  v46 = objc_msgSend(v43, "constraintEqualToAnchor:constant:", v45, -20.0);
  v47 = (void *)objc_opt_self(NSLayoutConstraint);
  v48 = sub_100047110((uint64_t *)&unk_100828340);
  v49 = swift_allocObject(v48, 64, 7);
  *(_OWORD *)(v49 + 16) = xmmword_100623750;
  *(_QWORD *)(v49 + 32) = v34;
  *(_QWORD *)(v49 + 40) = v38;
  *(_QWORD *)(v49 + 48) = v42;
  *(_QWORD *)(v49 + 56) = v46;
  v63 = (CHWorkoutDetailHeartRateTableViewCell *)v49;
  specialized Array._endMutation()(v49);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  v50 = v34;
  v51 = v38;
  v52 = v42;
  v53 = v46;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v63, v55, v56, v57, v58, v59, v60, v61);
  objc_msgSend(v47, "activateConstraints:", isa);

  return v21;
}

id sub_100330B64()
{
  return sub_100111F3C(type metadata accessor for TrendListFooter);
}

uint64_t type metadata accessor for TrendListFooter()
{
  return objc_opt_self(_TtC10FitnessApp15TrendListFooter);
}

void sub_100330BA0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  const char *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v3 = sub_100047110(&qword_1008214B0);
  v4 = swift_allocObject(v3, 33, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100622F90;
  *(_BYTE *)(v4 + 32) = *v1;
  v5 = Array.description.getter((__n128)xmmword_100622F90);
  v7 = v6;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v4, v6, v8, v9, v10, v11, v12, v13);
  *a1 = v5;
  a1[1] = (uint64_t)v7;
}

uint64_t sub_100330C14(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  Swift::String v4;
  void *object;
  Swift::String v6;
  Swift::String v7;

  v2 = (void *)0xE400000000000000;
  v3 = 1701601613;
  switch(a2)
  {
    case 0:
      v2 = (void *)0xE700000000000000;
      v3 = 0x74655320746F4ELL;
      break;
    case 1:
      v2 = (void *)0xE600000000000000;
      v3 = 0x656C616D6546;
      break;
    case 2:
      break;
    case 3:
      v2 = (void *)0xE500000000000000;
      v3 = 0x726568744FLL;
      break;
    default:
      v2 = (void *)0xE900000000000044;
      v3 = 0x454C444E41484E55;
      break;
  }
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(0xE000000000000000);
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v4._object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(object);
  v6._countAndFlagsBits = 0x7265646E6567203BLL;
  v6._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v6);
  v7._countAndFlagsBits = v3;
  v7._object = v2;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v2);
  return 0x203A656761;
}

uint64_t sub_100330D60()
{
  uint64_t *v0;

  return sub_100330C14(*v0, v0[1]);
}

void sub_100330D68(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100332B68();

  }
}

uint64_t sub_100330DB8(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double Width;
  id v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double Height;
  uint64_t v27;
  id v28;
  uint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  CGRect v40;
  CGRect v41;

  v1[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_initialAppearance] = 1;
  v3 = OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_tableView;
  v4 = type metadata accessor for TrendListTableView();
  v5 = (void *)objc_opt_self(UIScreen);
  v6 = v1;
  v7 = objc_msgSend(v5, "mainScreen");
  objc_msgSend(v7, "bounds");
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;

  v40.origin.x = v9;
  v40.origin.y = v11;
  v40.size.width = v13;
  v40.size.height = v15;
  Width = CGRectGetWidth(v40);
  v17 = objc_msgSend(v5, "mainScreen");
  objc_msgSend(v17, "bounds");
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;

  v41.origin.x = v19;
  v41.origin.y = v21;
  v41.size.width = v23;
  v41.size.height = v25;
  Height = CGRectGetHeight(v41);
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "initWithFrame:", 0.0, 0.0, Width, Height);
  v6[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_isWheelchairUser] = 0;
  v27 = OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_spinner;
  v28 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 101);

  *(_QWORD *)&v6[v27] = v28;
  v6[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_awaitingPushForTrendType] = 9;
  v6[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataDidLoad] = 0;
  v29 = OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_metricsByTrendType;
  *(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_metricsByTrendType] = _swiftEmptyDictionarySingleton;

  v30 = *(CHWorkoutDetailHeartRateTableViewCell **)&v6[v29];
  swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
  v38 = type metadata accessor for TrendsListViewController();
  swift_deallocPartialClassInstance(v6, v38, 144, 7);
  return 0;
}

id sub_100330FE0()
{
  char *v0;
  id v1;
  char *v2;
  objc_super v4;

  v1 = *(id *)&v0[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataProvider];
  v2 = v0;
  sub_100221460((uint64_t)v2);

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for TrendsListViewController();
  return objc_msgSendSuper2(&v4, "dealloc");
}

void sub_100331160()
{
  char *v0;
  char *v1;
  void *v2;
  NSString v3;
  id v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Class isa;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  NSString v22;
  id v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  NSString v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t ObjCClassFromMetadata;
  NSString v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  int v51;
  id v52;
  void *v53;
  void *v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  id v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  objc_super v61;

  v1 = v0;
  v61.receiver = v0;
  v61.super_class = (Class)type metadata accessor for TrendsListViewController();
  objc_msgSendSuper2(&v61, "viewDidLoad");
  if (objc_msgSend((id)objc_opt_self(_HKBehavior), "isAppleInternalInstall"))
  {
    if (qword_10081E0B0 != -1)
      swift_once(&qword_10081E0B0, sub_10004F61C);
    if ((byte_10083D1A0 & 1) == 0)
    {
      v2 = (void *)objc_opt_self(UIImage);
      v3 = String._bridgeToObjectiveC()();
      v4 = objc_msgSend(v2, "__systemImageNamedSwift:", v3);

      v5 = objc_allocWithZone((Class)UIBarButtonItem);
      v6 = v1;
      v7 = objc_msgSend(v5, "initWithImage:style:target:action:", v4, 0, v6, "tapToRadar");

      v8 = objc_msgSend(v6, "navigationItem");
      v9 = sub_100047110((uint64_t *)&unk_100828340);
      v10 = swift_allocObject(v9, 40, 7);
      *(_OWORD *)(v10 + 16) = xmmword_100623630;
      *(_QWORD *)(v10 + 32) = v7;
      v60 = (CHWorkoutDetailHeartRateTableViewCell *)v10;
      specialized Array._endMutation()(v10);
      sub_10001E724(0, (unint64_t *)&unk_10082EEB0, UIBarButtonItem_ptr);
      v11 = v7;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v60, v13, v14, v15, v16, v17, v18, v19);
      objc_msgSend(v8, "setRightBarButtonItems:", isa);

    }
  }
  v20 = objc_msgSend(v1, "navigationItem");
  v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v21, "localizedStringForKey:value:table:", v22, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v25 = v24;

  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25, v27, v28, v29, v30, v31, v32, v33);
  objc_msgSend(v20, "setTitle:", v26);

  v34 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_tableView];
  v35 = type metadata accessor for TrendsPregnancyDisclaimerCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v35);
  v37 = String._bridgeToObjectiveC()();
  objc_msgSend(v34, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v37);

  v38 = type metadata accessor for TrendPairTableViewCell(0);
  v39 = swift_getObjCClassFromMetadata(v38);
  v40 = String._bridgeToObjectiveC()();
  objc_msgSend(v34, "registerClass:forCellReuseIdentifier:", v39, v40);

  v41 = type metadata accessor for TrendingDownTableViewCell(0);
  v42 = swift_getObjCClassFromMetadata(v41);
  v43 = String._bridgeToObjectiveC()();
  objc_msgSend(v34, "registerClass:forCellReuseIdentifier:", v42, v43);

  v44 = type metadata accessor for TrendListFooter();
  v45 = swift_getObjCClassFromMetadata(v44);
  v46 = String._bridgeToObjectiveC()();
  objc_msgSend(v34, "registerClass:forCellReuseIdentifier:", v45, v46);

  objc_msgSend(v34, "setRowHeight:", UITableViewAutomaticDimension);
  objc_msgSend(v34, "setEstimatedRowHeight:", 100.0);
  v47 = (void *)objc_opt_self(UIColor);
  v48 = objc_msgSend(v47, "systemBackgroundColor");
  objc_msgSend(v34, "setBackgroundColor:", v48);

  v49 = objc_msgSend(v47, "separatorColor");
  objc_msgSend(v34, "setSeparatorColor:", v49);

  objc_msgSend(v34, "_setHeaderAndFooterViewsFloat:", 0);
  objc_msgSend(v34, "setSectionHeaderTopPadding:", 0.0);
  objc_msgSend(v34, "setAllowsSelection:", 0);
  objc_msgSend(v34, "contentInset");
  objc_msgSend(v34, "setContentInset:", -13.0);
  v50 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v34, "setTableFooterView:", v50);

  v51 = *(unsigned __int8 *)(*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_activityDataProvider]
                           + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser);
  v1[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_isWheelchairUser] = v51;
  if (v51 == 1)
    sub_100332490();
  v52 = objc_msgSend(v1, "view");
  if (!v52)
  {
    __break(1u);
    goto LABEL_16;
  }
  v53 = v52;
  objc_msgSend(v52, "addSubview:", v34);

  objc_msgSend(v34, "setDataSource:", v1);
  objc_msgSend(v34, "setDelegate:", v1);
  if ((v1[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataDidLoad] & 1) == 0)
  {
    objc_msgSend(v34, "setHidden:", 1);
    v54 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_spinner];
    objc_msgSend(v54, "setHidesWhenStopped:", 1);
    v55 = objc_msgSend(v1, "view");
    if (v55)
    {
      v56 = v55;
      objc_msgSend(v55, "addSubview:", v54);

      objc_msgSend(v54, "startAnimating");
      goto LABEL_12;
    }
LABEL_16:
    __break(1u);
    return;
  }
LABEL_12:
  v57 = (void *)objc_opt_self(NSNotificationCenter);
  v58 = objc_msgSend(v57, "defaultCenter");
  if (qword_10081D640 != -1)
    swift_once(&qword_10081D640, sub_10004CE14);
  objc_msgSend(v58, "addObserver:selector:name:object:", v1, "wheelchairUseDidChangeWithNote:", qword_100869F70, 0);

  v59 = objc_msgSend(v57, "defaultCenter");
  objc_msgSend(v59, "addObserver:selector:name:object:", v1, "reloadForFontSizeChangeWithNote:", UIContentSizeCategoryDidChangeNotification, 0);

}

uint64_t sub_1003318A8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  _QWORD v13[2];
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;

  v2 = v1;
  result = Notification.userInfo.getter(a1);
  if (result)
  {
    v4 = (CHWorkoutDetailHeartRateTableViewCell *)result;
    v13[0] = 0xD000000000000010;
    v13[1] = 0x8000000100688AB0;
    AnyHashable.init<A>(_:)(v14, v13, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)v4->cellPadding && (v12 = sub_10004C814((uint64_t)v14), (v5 & 1) != 0))
    {
      sub_10003E9BC(*(_QWORD *)v4[1].cellInset + 32 * v12, (uint64_t)&v15);
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
    }
    swift_bridgeObjectRelease(v4, v5, v6, v7, v8, v9, v10, v11);
    sub_10004CC10((uint64_t)v14);
    if (*((_QWORD *)&v16 + 1))
    {
      result = swift_dynamicCast(v13, &v15, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
      if ((result & 1) != 0
        && LOBYTE(v13[0]) != *(unsigned __int8 *)(v2
                                                + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_isWheelchairUser))
      {
        *(_BYTE *)(v2 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_isWheelchairUser) = v13[0];
        return sub_100332B68();
      }
    }
    else
    {
      return sub_10001BE90((uint64_t)&v15, (uint64_t *)&unk_100828420);
    }
  }
  return result;
}

id sub_100331A58()
{
  char *v0;
  void *v1;
  id result;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double MidX;
  objc_super v23;
  CGRect v24;
  CGRect v25;

  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for TrendsListViewController();
  objc_msgSendSuper2(&v23, "viewWillLayoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_tableView];
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v3 = result;
    objc_msgSend(result, "bounds");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    objc_msgSend(v1, "setFrame:", v5, v7, v9, v11);
    v12 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_spinner];
    result = objc_msgSend(v0, "view");
    if (result)
    {
      v13 = result;
      objc_msgSend(result, "bounds");
      v15 = v14;
      v17 = v16;
      v19 = v18;
      v21 = v20;

      v24.origin.x = v15;
      v24.origin.y = v17;
      v24.size.width = v19;
      v24.size.height = v21;
      MidX = CGRectGetMidX(v24);
      v25.origin.x = v15;
      v25.origin.y = v17;
      v25.size.width = v19;
      v25.size.height = v21;
      return objc_msgSend(v12, "setCenter:", MidX, CGRectGetMidY(v25));
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100331BE8(char a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t i;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  __int128 v30[2];
  uint64_t v31;
  id v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  objc_super v36;

  v36.receiver = v1;
  v36.super_class = (Class)type metadata accessor for TrendsListViewController();
  objc_msgSendSuper2(&v36, "viewWillAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "navigationController");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setNavigationBarHidden:animated:", 0, 1);

  }
  if ((a1 & 1) == 0 || v1[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_initialAppearance] == 1)
  {
    v5 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_tableView], "visibleCells");
    v6 = sub_10001E724(0, &qword_10082EDD8, UITableViewCell_ptr);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0)
        v22 = v7;
      else
        v22 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v15 = _CocoaArrayWrapper.endIndex.getter(v22);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v7, v23, v24, v25, v26, v27, v28, v29);
      if (v15)
        goto LABEL_7;
    }
    else
    {
      v15 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v15)
      {
LABEL_7:
        if (v15 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v15; ++i)
        {
          if ((v7 & 0xC000000000000001) != 0)
            v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
          else
            v17 = *(id *)(v7 + 8 * i + 32);
          v32 = v17;
          v18 = v17;
          v19 = sub_100047110(&qword_10082EDE0);
          if ((swift_dynamicCast(v30, &v32, v6, v19, 6) & 1) != 0)
          {
            sub_10002411C(v30, (uint64_t)v33);
            v20 = v34;
            v21 = v35;
            sub_100016804(v33, v34);
            (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);

            _s10FitnessApp24HistoryViewActionContextVwxx_0(v33);
          }
          else
          {
            v31 = 0;
            memset(v30, 0, sizeof(v30));

            sub_10001BE90((uint64_t)v30, &qword_10082EDE8);
          }
        }
      }
    }
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v7, v8, v9, v10, v11, v12, v13, v14);
  }
}

void sub_100331E50(char a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for TrendsListViewController();
  objc_msgSendSuper2(&v3, "viewDidAppear:", a1 & 1);
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataDidLoad) == 1
    && ((a1 & 1) == 0 || *((_BYTE *)v1 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_initialAppearance) == 1))
  {
    sub_10056AE6C();
    sub_100332DEC();
  }
  *((_BYTE *)v1 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_initialAppearance) = 0;
}

uint64_t sub_10033200C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;
  _BYTE v17[24];

  v2 = v1;
  v4 = type metadata accessor for TrendListMetric(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = __chkstk_darwin(v6);
  v11 = &v17[-v10 - 8];
  v12 = OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_awaitingPushForTrendType;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_awaitingPushForTrendType) = a1;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataDidLoad) == 1)
  {
    v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_metricsByTrendType);
    result = swift_beginAccess(v2 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_metricsByTrendType, v17, 0, 0);
    v14 = *v13;
    if (*(_QWORD *)(v14 + 16))
    {
      result = sub_100049DE0(a1);
      if ((v15 & 1) != 0)
      {
        sub_10004F8C8(*(_QWORD *)(v14 + 56) + *(_QWORD *)(v5 + 72) * result, (uint64_t)v8, type metadata accessor for TrendListMetric);
        sub_1001F6320((uint64_t)v8, (uint64_t)v11);
        sub_100332278(v11);
        result = sub_100011F54((uint64_t)v11, type metadata accessor for TrendListMetric);
        *(_BYTE *)(v2 + v12) = 9;
      }
    }
  }
  return result;
}

uint64_t sub_100332140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  _BYTE v16[24];

  v1 = v0;
  v2 = type metadata accessor for TrendListMetric(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = __chkstk_darwin(v4);
  v9 = &v16[-v8 - 8];
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataDidLoad) == 1)
  {
    v10 = OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_awaitingPushForTrendType;
    v11 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_awaitingPushForTrendType);
    if ((_DWORD)v11 != 9)
    {
      v12 = (uint64_t *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_metricsByTrendType);
      result = swift_beginAccess(v1 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_metricsByTrendType, v16, 0, 0);
      v13 = *v12;
      if (*(_QWORD *)(v13 + 16))
      {
        result = sub_100049DE0(v11);
        if ((v14 & 1) != 0)
        {
          sub_10004F8C8(*(_QWORD *)(v13 + 56) + *(_QWORD *)(v3 + 72) * result, (uint64_t)v6, type metadata accessor for TrendListMetric);
          sub_1001F6320((uint64_t)v6, (uint64_t)v9);
          sub_100332278(v9);
          result = sub_100011F54((uint64_t)v9, type metadata accessor for TrendListMetric);
          *(_BYTE *)(v1 + v10) = 9;
        }
      }
    }
  }
  return result;
}

void sub_100332278(unsigned __int8 *a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  char *v12;
  id v13;
  char v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  char *v19;

  v3 = objc_msgSend(v1, "navigationController");
  if (!v3)
    return;
  v4 = v3;
  v5 = objc_msgSend(v3, "viewControllers");

  v6 = sub_10001E724(0, (unint64_t *)&qword_100828310, UIViewController_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_4;
LABEL_19:
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (v7 < 0)
    v18 = v7;
  else
    v18 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(v7);
  if (!v8)
    goto LABEL_19;
LABEL_4:
  v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
    goto LABEL_21;
  }
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_21:
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
    goto LABEL_9;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v9 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_23:
    __break(1u);
    return;
  }
  v10 = *(id *)(v7 + 8 * v9 + 32);
LABEL_9:
  v11 = v10;
  swift_bridgeObjectRelease(v7);
  v12 = v1;
  v13 = v11;
  v14 = static NSObject.== infix(_:_:)(v13, v12);

  if ((v14 & 1) != 0)
  {
    v15 = sub_1002C9B24(a1, *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataProvider], *(void **)&v12[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_trendsFormattingManager], *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_userCharacteristics], *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_userCharacteristics + 8], v12[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_userCharacteristics + 16], v12[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_isWheelchairUser]);
    if (v15)
    {
      v19 = v15;
      v16 = objc_msgSend(v12, "navigationController");
      if (v16)
      {
        v17 = v16;
        objc_msgSend(v16, "pushViewController:animated:", v19, 1);

      }
    }
  }
}

void sub_100332490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[24];
  _QWORD v90[4];
  char v91[24];
  char v92[24];
  char v93[24];

  v1 = v0;
  v2 = 0;
  v3 = sub_100047110((uint64_t *)&unk_10082EDF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for AttributedString(0);
  v6 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v76 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for TrendListMetric(0);
  v83 = *(_QWORD *)(v86 - 8);
  v8 = __chkstk_darwin(v86);
  v75 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v74 = (char *)&v72 - v10;
  v11 = sub_100047110(&qword_10082EDD0);
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_metricsByTrendType);
  swift_beginAccess(v14, v93, 1, 0);
  v15 = *v14;
  v85 = v14;
  *v14 = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataProvider);
  v17 = (uint64_t *)(v16 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends);
  swift_beginAccess(v16 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends, v92, 0, 0);
  v18 = *v17;
  v84 = v16;
  v19 = (uint64_t *)(v16 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidDownTrends);
  swift_beginAccess(v19, v91, 0, 0);
  v20 = *v19;
  v90[0] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v20);
  sub_10013C130(v20);
  v21 = v90[0];
  v22 = *(_QWORD *)(v90[0] + 16);
  v87 = v1;
  v82 = v22;
  v77 = v6;
  v73 = v5;
  if (v22)
  {
    v23 = 0;
    v24 = v1 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_userCharacteristics;
    v81 = OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_isWheelchairUser;
    v80 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_trendsFormattingManager);
    v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_userFirstName + 8);
    v79 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_userFirstName);
    v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_userCharacteristics);
    v27 = *(_QWORD *)(v24 + 8);
    v28 = *(unsigned __int8 *)(v24 + 16);
    do
    {
      v29 = v21;
      v30 = *(unsigned __int8 *)(v21 + v23 + 32);
      sub_1002C94B0(v30, v84, v80, v79, v25, v26, v27, v28, v13, *(_BYTE *)(v87 + v81), 2u);
      ++v23;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v13, 0, 1, v86);
      swift_beginAccess(v85, v90, 33, 0);
      sub_1004C5C20((uint64_t)v13, v30);
      swift_endAccess(v90);
      v21 = v29;
    }
    while (v82 != v23);
  }
  swift_bridgeObjectRelease(v21);
  v31 = (uint64_t *)(v84 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedInvalidTrends);
  swift_beginAccess(v84 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedInvalidTrends, v90, 0, 0);
  v32 = *v31;
  v79 = *(_QWORD *)(*v31 + 16);
  if (v79)
  {
    v82 = OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_isWheelchairUser;
    v33 = v87;
    v81 = *(_QWORD *)(v87 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_trendsFormattingManager);
    swift_bridgeObjectRetain(v32);
    v35 = 0;
    v36 = (uint64_t)v73;
    v80 = v34;
    while (1)
    {
      v37 = *(unsigned __int8 *)(v34 + v35 + 32);
      v38 = *(unsigned __int8 *)(v33 + v82);
      sub_1004E3DDC(v38, v37);
      v40 = v39;
      v42 = v41;
      sub_10055F008(v37, 2u, v36);
      if (v2)
        break;
      v43 = v77;
      v44 = v78;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v77 + 56))(v36, 0, 1, v78);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v36, 1, v44) == 1)
        goto LABEL_11;
      ++v35;
      v45 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
      v83 = v42;
      v84 = 0;
      v46 = v76;
      v45(v76, v36, v44);
      sub_1004E5034(v38, v37);
      v47 = v44;
      v49 = v48;
      v51 = v50;
      v52 = v86;
      v53 = v40;
      v54 = (uint64_t)v74;
      v55 = v46;
      v2 = v84;
      v45(&v74[*(int *)(v86 + 28)], (uint64_t)v55, v47);
      v33 = v87;
      *(_BYTE *)v54 = v37;
      *(_BYTE *)(v54 + 1) = 1;
      v56 = v83;
      *(_QWORD *)(v54 + 8) = v53;
      *(_QWORD *)(v54 + 16) = v56;
      v57 = (_QWORD *)(v54 + *(int *)(v52 + 32));
      *v57 = v49;
      v57[1] = v51;
      v58 = v85;
      swift_beginAccess(v85, v89, 33, 0);
      v59 = v75;
      sub_1001F6320(v54, v75);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v58);
      v88 = *v58;
      *v58 = 0x8000000000000000;
      sub_1003FF0C4(v59, v37, isUniquelyReferenced_nonNull_native);
      v61 = *v58;
      *v58 = v88;
      swift_bridgeObjectRelease(v61);
      swift_endAccess(v89);
      v34 = v80;
      if (v79 == v35)
      {
        swift_bridgeObjectRelease(v80);
        return;
      }
    }
    swift_errorRelease(v2);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(v36, 1, 1, v78);
LABEL_11:
    swift_bridgeObjectRelease(v42);
    sub_10001BE90(v36, (uint64_t *)&unk_10082EDF0);
    v62 = sub_10025DBE8();
    v63 = swift_allocError(&type metadata for TrendsFormattingManager.TextError, v62, 0, 0);
    *v64 = 0;
    swift_willThrow(v63);
    swift_bridgeObjectRelease(v80);
    v66 = static os_log_type_t.error.getter(v65);
    v67 = (void *)HKLogActivity;
    v68 = sub_100047110((uint64_t *)&unk_100827460);
    v69 = swift_allocObject(v68, 72, 7);
    *(_OWORD *)(v69 + 16) = xmmword_100622F90;
    v70 = v67;
    v71 = _convertErrorToNSError(_:)(v63);
    *(_QWORD *)(v69 + 56) = sub_10001E724(0, (unint64_t *)&qword_1008274A0, NSError_ptr);
    *(_QWORD *)(v69 + 64) = sub_100221950();
    *(_QWORD *)(v69 + 32) = v71;
    os_log(_:dso:log:_:_:)(v66, &_mh_execute_header, v70, "Error populating trend types: %@", 32, 2, v69);

    swift_bridgeObjectRelease(v69);
    swift_errorRelease(v63);
  }
}

uint64_t sub_100332B68()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataDidLoad] = 1;
  v9 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_tableView];
  objc_msgSend(v9, "setSeparatorStyle:", 0);
  objc_msgSend(v9, "setHidden:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_spinner], "stopAnimating");
  sub_100332490();
  objc_msgSend(v9, "reloadData");
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_100796E18, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  aBlock[4] = sub_1003361DC;
  v24 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_100796E30;
  v13 = _Block_copy(aBlock);
  v14 = v24;
  v15 = v1;
  swift_release(v14);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_100047110(&qword_100828C80);
  v19 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v2, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100332DEC()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_tableView), "visibleCells"));
  v2 = sub_10001E724(0, &qword_10082EDD8, UITableViewCell_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v21 = v3;
  else
    v21 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_20;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    v7 = (uint64_t *)&unk_10082EDE0;
    v22 = v2;
    do
    {
      if (v6)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      else
        v10 = *(id *)(v3 + 8 * v5 + 32);
      v23 = v10;
      v11 = v10;
      v12 = sub_100047110(v7);
      if (swift_dynamicCast(&v24, &v23, v2, v12, 6))
      {
        v13 = v6;
        v14 = v4;
        v15 = v3;
        v16 = v7;
        v18 = *((_QWORD *)&v25 + 1);
        v17 = v26;
        sub_100016804(&v24, *((uint64_t *)&v25 + 1));
        v19 = v18;
        v7 = v16;
        v3 = v15;
        v4 = v14;
        v6 = v13;
        v2 = v22;
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v17);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(&v24);
      }
      else
      {
        v26 = 0;
        v24 = 0u;
        v25 = 0u;
        sub_10001BE90((uint64_t)&v24, &qword_10082EDE8);
      }
      v23 = v11;
      v20 = v11;
      if (swift_dynamicCast(&v24, &v23, v2, v12, 6))
      {
        v8 = *((_QWORD *)&v25 + 1);
        v9 = v26;
        sub_100016804(&v24, *((uint64_t *)&v25 + 1));
        (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);

        _s10FitnessApp24HistoryViewActionContextVwxx_0(&v24);
      }
      else
      {
        v26 = 0;
        v24 = 0u;
        v25 = 0u;

        sub_10001BE90((uint64_t)&v24, &qword_10082EDE8);
      }
      ++v5;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease(v3);
  }
}

unint64_t sub_10033305C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell **v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  uint64_t v17;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell **v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  _BYTE v34[24];

  v3 = v2;
  v5 = IndexPath.section.getter(a1);
  if (v5 != 1)
  {
    v14 = IndexPath.section.getter(v5);
    if (v14 == 2)
    {
      v15 = (CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)(v2
                                                                 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataProvider)
                                                     + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidDownTrends);
      swift_beginAccess(v15, v34, 0, 0);
      v16 = *v15;
      swift_bridgeObjectRetain(v16);
      result = IndexPath.row.getter(v17);
      if ((result & 0x8000000000000000) != 0)
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      if (result >= *(_QWORD *)v16->cellPadding)
      {
        __break(1u);
LABEL_11:
        v25 = sub_100047110(&qword_1008214B0);
        v13 = swift_allocObject(v25, 33, 7);
        *(_OWORD *)(v13 + 16) = xmmword_100622F90;
        v26 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataProvider);
        v27 = IndexPath.row.getter(v13);
        v28 = v26 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends;
        result = swift_beginAccess(v28, v34, 0, 0);
        if ((v27 & 0x8000000000000000) == 0)
        {
          if (v27 < *(_QWORD *)(*(_QWORD *)v28 + 16))
          {
            v29 = *(_QWORD *)v28 + v27;
LABEL_21:
            *(_BYTE *)(v13 + 32) = *(_BYTE *)(v29 + 32);
            return v13;
          }
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      if (IndexPath.section.getter(v14) != 3)
        return (unint64_t)_swiftEmptyArrayStorage;
      v30 = (CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)(v2
                                                                 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataProvider)
                                                     + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedInvalidTrends);
      swift_beginAccess(v30, v34, 0, 0);
      v16 = *v30;
      swift_bridgeObjectRetain(v16);
      result = IndexPath.row.getter(v31);
      if ((result & 0x8000000000000000) != 0)
        goto LABEL_28;
      if (result >= *(_QWORD *)v16->cellPadding)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    v32 = *((_BYTE *)&v16[1].super.super.super.super.isa + result);
    swift_bridgeObjectRelease(v16, v18, v19, v20, v21, v22, v23, v24);
    v33 = sub_100047110(&qword_1008214B0);
    v13 = swift_allocObject(v33, 33, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100622F90;
    *(_BYTE *)(v13 + 32) = v32;
    return v13;
  }
  if ((a2 & 1) == 0)
    goto LABEL_11;
  result = IndexPath.row.getter(1);
  if ((uint64_t)(result + 0x4000000000000000) < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v7 = 2 * result;
  v8 = (2 * result) | 1;
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataProvider)
     + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends;
  swift_beginAccess(v9, v34, 0, 0);
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(*(_QWORD *)v9 + 16);
  v12 = sub_100047110(&qword_1008214B0);
  if (v8 < (uint64_t)v11)
  {
    result = swift_allocObject(v12, 34, 7);
    *(_OWORD *)(result + 16) = xmmword_100620BC0;
    if (v7 < v11)
    {
      v13 = result;
      *(_BYTE *)(result + 32) = *(_BYTE *)(v10 + 32 + v7);
      *(_BYTE *)(result + 33) = *(_BYTE *)(v10 + 32 + v8);
      return v13;
    }
    goto LABEL_27;
  }
  result = swift_allocObject(v12, 33, 7);
  *(_OWORD *)(result + 16) = xmmword_100622F90;
  if (v7 < v11)
  {
    v13 = result;
    v29 = v10 + v7;
    goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_100333320()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, "features");

    if (v2)
    {
      objc_msgSend(v2, "seahorse");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for TrendsListViewController()
{
  return objc_opt_self(_TtC10FitnessApp24TrendsListViewController);
}

uint64_t sub_100333480(uint64_t a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSString v23;
  Class isa;
  void (*v25)(unsigned __int8 *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (**v29)(unsigned __int8 *);
  uint64_t v30;
  id v31;
  void *v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double Width;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  double v50;
  double v51;
  double v52;
  int v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  const char *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  uint64_t v63;
  char *v64;
  const char *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  const char *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  const char *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  SEL v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char v127[40];
  CGRect v128;

  v3 = v2;
  v119 = sub_100047110(&qword_1008283F0);
  __chkstk_darwin(v119);
  v7 = (char *)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v116 - v9;
  v11 = type metadata accessor for TrendPairTableViewCell.TrailingMetricType(0);
  __chkstk_darwin(v11);
  v124 = (char *)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TrendListMetric(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v123 = (uint64_t)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v126 = (uint64_t)&v116 - v17;
  __chkstk_darwin(v18);
  v125 = (uint64_t)&v116 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v116 - v21;
  v23 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v25 = (void (*)(unsigned __int8 *))objc_msgSend(a2, "dequeueReusableCellWithIdentifier:forIndexPath:", v23, isa);

  v26 = type metadata accessor for TrendPairTableViewCell(0);
  v27 = swift_dynamicCastClass(v25, v26);
  if (!v27)
    goto LABEL_26;
  v28 = v27;
  v120 = v7;
  v121 = a1;
  v117 = v10;
  v118 = v13;
  v25 = (void (*)(unsigned __int8 *))swift_allocObject(&unk_100796DF0, 24, 7);
  swift_unknownObjectWeakInit((char *)v25 + 16, v3);
  v122 = v28;
  v29 = (void (**)(unsigned __int8 *))(v28
                                                + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionFunction);
  v30 = *(_QWORD *)(v28 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionFunction + 8);
  *v29 = sub_100335BAC;
  v29[1] = v25;
  v31 = objc_msgSend(v3, "view", swift_release(v30).n128_f64[0]);
  if (!v31)
  {
    __break(1u);
LABEL_26:

    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000020, 0x800000010069A160, "FitnessApp/TrendsListViewController.swift", 41, 2, 500, 0);
    __break(1u);
    return result;
  }
  v32 = v31;
  objc_msgSend(v31, "bounds");
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;

  v128.origin.x = v34;
  v128.origin.y = v36;
  v128.size.width = v38;
  v128.size.height = v40;
  Width = CGRectGetWidth(v128);
  v42 = (void *)objc_opt_self(HKUnit);
  v43 = objc_msgSend(v42, "literUnitWithMetricPrefix:", 4);
  v44 = objc_msgSend(v42, "gramUnitWithMetricPrefix:", 9);
  v45 = objc_msgSend(v42, "minuteUnit");
  v46 = objc_msgSend(v43, "unitDividedByUnit:", v44);
  v47 = objc_msgSend(v46, "unitDividedByUnit:", v45);

  v48 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v47, 99.99);
  v49 = sub_100035D5C(v48, 4u);

  v50 = Width * 0.5 + -16.0 + -8.0 + -40.0 + -12.0;
  objc_msgSend(v49, "boundingRectWithSize:options:context:", 3, 0, 1.79769313e308, 1.79769313e308);
  v52 = v51;

  v53 = v52 < v50;
  v54 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10033305C(v121, v53);
  v62 = v54;
  v63 = *(_QWORD *)v54->cellPadding;
  if (v63)
  {
    LODWORD(v121) = v52 < v50;
    v64 = &v3[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_metricsByTrendType];
    v116 = v3;
    swift_beginAccess(v64, v127, 0, 0);
    v72 = 0;
    v73 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
    v74 = v14;
    do
    {
      v76 = *(_QWORD *)v64;
      if (*(_QWORD *)(*(_QWORD *)v64 + 16))
      {
        v77 = sub_100049DE0(*((unsigned __int8 *)&v62[1].super.super.super.super.isa + v72));
        if ((v65 & 1) != 0)
        {
          v78 = *(_QWORD *)(v14 + 72);
          v79 = *(_QWORD *)(v76 + 56) + v78 * v77;
          v80 = v125;
          sub_10004F8C8(v79, v125, type metadata accessor for TrendListMetric);
          sub_1001F6320(v80, (uint64_t)v22);
          sub_1001F6320((uint64_t)v22, v126);
          if ((swift_isUniquelyReferenced_nonNull_native(v73) & 1) == 0)
            v73 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD44(0, *(_QWORD *)v73->cellPadding + 1, 1, (unint64_t)v73);
          v82 = *(_QWORD *)v73->cellPadding;
          v81 = *(_QWORD *)v73->cellInset;
          if (v82 >= v81 >> 1)
            v73 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD44(v81 > 1, v82 + 1, 1, (unint64_t)v73);
          *(_QWORD *)v73->cellPadding = v82 + 1;
          v75 = (uint64_t)v73
              + ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))
              + v82 * v78;
          v14 = v74;
          sub_1001F6320(v126, v75);
        }
      }
      ++v72;
    }
    while (v63 != v72);
    swift_bridgeObjectRelease(v62, v65, v66, v67, v68, v69, v70, v71);

    v53 = v121;
  }
  else
  {
    swift_bridgeObjectRelease(v54, v55, v56, v57, v58, v59, v60, v61);
    v73 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
  }
  v90 = *(_QWORD *)v73->cellPadding;
  v92 = v123;
  v91 = (uint64_t)v124;
  if (v90)
  {
    v93 = (uint64_t)v73 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    sub_10004F8C8(v93, v123, type metadata accessor for TrendListMetric);
    if (v90 == 1)
    {
      swift_bridgeObjectRelease(v73, v94, v95, v96, v97, v98, v99, v100);
      v101 = v119;
      if (v53)
        v102 = 1;
      else
        v102 = 2;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v91, v102, 2, v118);
      v111 = (uint64_t)v120;
    }
    else
    {
      sub_10004F8C8(v93 + *(_QWORD *)(v14 + 72), v91, type metadata accessor for TrendListMetric);
      swift_bridgeObjectRelease(v73, v104, v105, v106, v107, v108, v109, v110);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v91, 0, 2, v118);
      v101 = v119;
      v111 = (uint64_t)v120;
    }
    v112 = (uint64_t)v117;
    v113 = (uint64_t)&v117[*(int *)(v101 + 48)];
    sub_10004F8C8(v92, (uint64_t)v117, type metadata accessor for TrendListMetric);
    sub_10004F8C8(v91, v113, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
    v114 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v111 + *(int *)(v101 + 48));
    sub_10004F8C8(v112, v111, type metadata accessor for TrendListMetric);
    sub_10004F8C8(v113, (uint64_t)v114, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
    v103 = v122;
    sub_1004F771C(v111, v114);
    sub_10001BE90(v112, &qword_1008283F0);
    sub_100011F54(v91, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
    sub_100011F54(v92, type metadata accessor for TrendListMetric);
    sub_100011F54((uint64_t)v114, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
    sub_100011F54(v111, type metadata accessor for TrendListMetric);
  }
  else
  {
    swift_bridgeObjectRelease(v73, v83, v84, v85, v86, v87, v88, v89);
    return v122;
  }
  return v103;
}

uint64_t sub_100333BE4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  NSString v14;
  Class isa;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (**v21)(unsigned __int8 *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  _BYTE *v32;
  uint64_t v33;
  void *v34;
  NSString v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t result;
  _BYTE *v44;
  _BYTE v45[24];
  _BYTE v46[24];
  _BYTE v47[24];

  v3 = v2;
  v5 = sub_100047110(&qword_10082EDD0);
  __chkstk_darwin(v5);
  v44 = &v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for TrendListMetric(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v45[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v45[-v12 - 8];
  v14 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(a2, "dequeueReusableCellWithIdentifier:forIndexPath:", v14, isa);

  v17 = type metadata accessor for TrendingDownTableViewCell(0);
  v18 = swift_dynamicCastClass(v16, v17);
  if (!v18)
    goto LABEL_10;
  v19 = v18;
  v20 = swift_allocObject(&unk_100796DF0, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v2);
  v21 = (void (**)(unsigned __int8 *))(v19
                                                + OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_selectionFunction);
  v22 = *(_QWORD *)(v19 + OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_selectionFunction + 8);
  *v21 = sub_100335BAC;
  v21[1] = (void (*)(unsigned __int8 *))v20;
  swift_release(v22);
  v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataProvider);
  v25 = IndexPath.row.getter(v24);
  v16 = (id)(v23 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidDownTrends);
  swift_beginAccess(v16, v47, 0, 0);
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v25 >= *(_QWORD *)(*(_QWORD *)v16 + 16))
  {
LABEL_9:
    __break(1u);
LABEL_10:

    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000022, 0x800000010069A190, "FitnessApp/TrendsListViewController.swift", 41, 2, 536, 0);
    __break(1u);
    return result;
  }
  v26 = *(unsigned __int8 *)(*(_QWORD *)v16 + v25 + 32);
  v27 = (uint64_t *)(v3 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_metricsByTrendType);
  swift_beginAccess(v3 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_metricsByTrendType, v46, 0, 0);
  v28 = *v27;
  if (*(_QWORD *)(v28 + 16))
  {
    v29 = sub_100049DE0(v26);
    if ((v30 & 1) != 0)
    {
      sub_10004F8C8(*(_QWORD *)(v28 + 56) + *(_QWORD *)(v8 + 72) * v29, (uint64_t)v10, type metadata accessor for TrendListMetric);
      sub_1001F6320((uint64_t)v10, (uint64_t)v13);
      v31 = *(CHWorkoutDetailHeartRateTableViewCell **)&v13[*(int *)(v7 + 32) + 8];
      v32 = v44;
      sub_10004F8C8((uint64_t)v13, (uint64_t)v44, type metadata accessor for TrendListMetric);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v32, 0, 1, v7);
      v33 = v19 + OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_metric;
      swift_beginAccess(v19 + OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_metric, v45, 33, 0);
      swift_bridgeObjectRetain(v31);
      sub_100335BC4((uint64_t)v32, v33);
      swift_endAccess(v45);
      sub_1004AB160(v13);
      v34 = *(void **)(v19 + OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_detailLabel);
      v35 = String._bridgeToObjectiveC()();
      objc_msgSend(v34, "setText:", v35);
      swift_bridgeObjectRelease(v31, v36, v37, v38, v39, v40, v41, v42);

      sub_100011F54((uint64_t)v13, type metadata accessor for TrendListMetric);
    }
  }
  return v19;
}

uint64_t sub_100333F6C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  NSString v14;
  Class isa;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (**v21)(unsigned __int8 *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  _BYTE *v32;
  uint64_t v33;
  void *v34;
  NSString v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t result;
  _BYTE *v44;
  _BYTE v45[24];
  _BYTE v46[24];
  _BYTE v47[24];

  v3 = v2;
  v5 = sub_100047110(&qword_10082EDD0);
  __chkstk_darwin(v5);
  v44 = &v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for TrendListMetric(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v45[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v45[-v12 - 8];
  v14 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(a2, "dequeueReusableCellWithIdentifier:forIndexPath:", v14, isa);

  v17 = type metadata accessor for TrendingDownTableViewCell(0);
  v18 = swift_dynamicCastClass(v16, v17);
  if (!v18)
    goto LABEL_10;
  v19 = v18;
  v20 = swift_allocObject(&unk_100796DF0, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v2);
  v21 = (void (**)(unsigned __int8 *))(v19
                                                + OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_selectionFunction);
  v22 = *(_QWORD *)(v19 + OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_selectionFunction + 8);
  *v21 = sub_100335BAC;
  v21[1] = (void (*)(unsigned __int8 *))v20;
  swift_release(v22);
  v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataProvider);
  v25 = IndexPath.row.getter(v24);
  v16 = (id)(v23 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedInvalidTrends);
  swift_beginAccess(v16, v47, 0, 0);
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v25 >= *(_QWORD *)(*(_QWORD *)v16 + 16))
  {
LABEL_9:
    __break(1u);
LABEL_10:

    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000022, 0x800000010069A190, "FitnessApp/TrendsListViewController.swift", 41, 2, 554, 0);
    __break(1u);
    return result;
  }
  v26 = *(unsigned __int8 *)(*(_QWORD *)v16 + v25 + 32);
  v27 = (uint64_t *)(v3 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_metricsByTrendType);
  swift_beginAccess(v3 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_metricsByTrendType, v46, 0, 0);
  v28 = *v27;
  if (*(_QWORD *)(v28 + 16))
  {
    v29 = sub_100049DE0(v26);
    if ((v30 & 1) != 0)
    {
      sub_10004F8C8(*(_QWORD *)(v28 + 56) + *(_QWORD *)(v8 + 72) * v29, (uint64_t)v10, type metadata accessor for TrendListMetric);
      sub_1001F6320((uint64_t)v10, (uint64_t)v13);
      v31 = *(CHWorkoutDetailHeartRateTableViewCell **)&v13[*(int *)(v7 + 32) + 8];
      v32 = v44;
      sub_10004F8C8((uint64_t)v13, (uint64_t)v44, type metadata accessor for TrendListMetric);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v32, 0, 1, v7);
      v33 = v19 + OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_metric;
      swift_beginAccess(v19 + OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_metric, v45, 33, 0);
      swift_bridgeObjectRetain(v31);
      sub_100335BC4((uint64_t)v32, v33);
      swift_endAccess(v45);
      sub_1004AB160(v13);
      v34 = *(void **)(v19 + OBJC_IVAR____TtC10FitnessApp25TrendingDownTableViewCell_detailLabel);
      v35 = String._bridgeToObjectiveC()();
      objc_msgSend(v34, "setText:", v35);
      swift_bridgeObjectRelease(v31, v36, v37, v38, v39, v40, v41, v42);

      sub_100011F54((uint64_t)v13, type metadata accessor for TrendListMetric);
    }
  }
  return v19;
}

void sub_1003342F4(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100332278(a1);

  }
}

id sub_10033434C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  NSString v12;
  id result;

  v3 = v2;
  switch(IndexPath.section.getter(a1))
  {
    case 0:
      v6 = String._bridgeToObjectiveC()();
      v7 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v6);

      if (!v7)
        goto LABEL_16;
      v8 = type metadata accessor for TrendsPregnancyDisclaimerCell();
      v9 = swift_dynamicCastClass(v7, v8);
      if (!v9)
      {

LABEL_16:
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000012, 0x800000010069A120, "FitnessApp/TrendsListViewController.swift", 41, 2, 576, 0);
LABEL_17:
        __break(1u);
        JUMPOUT(0x10033454CLL);
      }
      v10 = (id)v9;
      if (*(_BYTE *)(v3 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_pregnancyState + 8))
        v11 = 0;
      else
        v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_pregnancyState);
      sub_1004A654C(v11);
LABEL_9:
      result = v10;
      break;
    case 1:
      return (id)sub_100333480(a2, a1);
    case 2:
      return (id)sub_100333BE4(a2, a1);
    case 3:
      return (id)sub_100333F6C(a2, a1);
    case 4:
      v12 = String._bridgeToObjectiveC()();
      v10 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v12);

      if (v10)
        goto LABEL_9;
      result = objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
      break;
    default:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000012, 0x800000010069A120, "FitnessApp/TrendsListViewController.swift", 41, 2, 593, 0);
      goto LABEL_17;
  }
  return result;
}

id sub_100334618(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  NSString v12;
  id v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  char v16;
  id v17;
  NSString v18;
  id v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  NSString v25;
  id v26;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  const char *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  NSString v51;
  id v52;
  uint64_t v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  uint64_t v56;
  uint64_t v57;
  const char *v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  SEL v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  NSString v75;
  id v76;
  uint64_t v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  CHWorkoutDetailHeartRateTableViewCell *v80;
  SEL v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  CHWorkoutDetailHeartRateTableViewCell *v89;
  id v90;
  NSString v91;
  id v92;
  uint64_t v93;
  CHWorkoutDetailHeartRateTableViewCell *v94;
  uint64_t v95;
  CHWorkoutDetailHeartRateTableViewCell *v96;
  CHWorkoutDetailHeartRateTableViewCell *v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  char v101;
  SEL v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  char v112;
  char v113;
  id v114;
  uint64_t v115;
  NSString v116;
  void *v117;
  SEL v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  uint64_t v125;
  void *v126;
  CHWorkoutDetailHeartRateTableViewCell *v127;
  id v128;
  uint64_t v129;
  void *v130;
  id v131;
  CHWorkoutDetailHeartRateTableViewCell *v132;
  uint64_t v133;
  Class v134;
  SEL v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  Class isa;
  uint64_t v147;
  uint64_t v148;
  NSString *v149;
  NSString *v150;
  NSString *v151;
  NSString *v152;
  id v153;
  CHWorkoutDetailHeartRateTableViewCell *v154;
  Class v155;
  SEL v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  NSString v166;
  id v167;
  CHWorkoutDetailHeartRateTableViewCell *v168;
  uint64_t v169;
  uint64_t inited;
  void *v171;
  NSString *v172;
  id v173;
  uint64_t v174;
  void *v175;
  NSString *v176;
  id v177;
  CHWorkoutDetailHeartRateTableViewCell *v178;
  id v179;
  NSString v180;
  SEL v181;
  id v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  SEL v188;
  id v189;
  id v190;
  id v191;
  id v192;
  id v193;
  id v194;
  char *v195;
  char v196;
  double v197;
  id v198;
  NSString v199;
  SEL v200;
  id v201;
  id v202;
  id v203;
  id v204;
  id v205;
  id v206;
  _QWORD v208[2];
  uint64_t v209;
  NSString *v210;
  id v211;
  uint64_t v212;
  NSString *v213;
  id v214;
  __int128 v215;
  objc_class *v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char v225[112];
  uint64_t v226;
  CHWorkoutDetailHeartRateTableViewCell *v227;
  uint64_t v228;
  unint64_t v229;

  v3 = v2;
  v6 = sub_100047110((uint64_t *)&unk_10082ED90);
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = (char *)v208 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)objc_msgSend(v3, "tableView:numberOfRowsInSection:", a1, a2, v7) < 1)
    return 0;
  v10 = 0;
  switch(a2)
  {
    case 0:
    case 4:
      return v10;
    case 1:
      if (objc_msgSend(v3, "tableView:numberOfRowsInSection:", a1, 2)
        || (v21 = *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_userFirstName + 8]) == 0)
      {
        v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v12 = String._bridgeToObjectiveC()();
        v13 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, 0, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
        v15 = v14;

        goto LABEL_25;
      }
      v22 = *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_userFirstName];
      v23 = (void *)objc_opt_self(NSBundle);
      v24 = objc_msgSend(v23, "mainBundle", swift_bridgeObjectRetain(v21).n128_f64[0]);
      v25 = String._bridgeToObjectiveC()();
      v26 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, 0, 0);

      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v29 = v28;

      v30 = sub_100047110((uint64_t *)&unk_100827460);
      v31 = swift_allocObject(v30, 72, 7);
      *(_OWORD *)(v31 + 16) = xmmword_100622F90;
      *(_QWORD *)(v31 + 56) = &type metadata for String;
      *(_QWORD *)(v31 + 64) = sub_100038CF8();
      *(_QWORD *)(v31 + 32) = v22;
      *(_QWORD *)(v31 + 40) = v21;
      static String.localizedStringWithFormat(_:_:)(v27, v29, v31);
      v15 = (CHWorkoutDetailHeartRateTableViewCell *)v32;
      swift_bridgeObjectRelease(v29, v32, v33, v34, v35, v36, v37, v38);
      v46 = (CHWorkoutDetailHeartRateTableViewCell *)v31;
      goto LABEL_24;
    case 2:
      if (objc_msgSend(v3, "tableView:numberOfRowsInSection:", a1, 1))
        goto LABEL_11;
      v47 = *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_userFirstName + 8];
      if (v47)
      {
        v48 = *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_userFirstName];
        v49 = (void *)objc_opt_self(NSBundle);
        v50 = objc_msgSend(v49, "mainBundle", swift_bridgeObjectRetain(v47).n128_f64[0]);
        v51 = String._bridgeToObjectiveC()();
        v52 = objc_msgSend(v50, "localizedStringForKey:value:table:", v51, 0, 0);

        v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
        v55 = v54;

        v56 = sub_100047110((uint64_t *)&unk_100827460);
        v57 = swift_allocObject(v56, 72, 7);
        *(_OWORD *)(v57 + 16) = xmmword_100622F90;
        *(_QWORD *)(v57 + 56) = &type metadata for String;
        *(_QWORD *)(v57 + 64) = sub_100038CF8();
        *(_QWORD *)(v57 + 32) = v48;
        *(_QWORD *)(v57 + 40) = v47;
        static String.localizedStringWithFormat(_:_:)(v53, v55, v57);
        v59 = (CHWorkoutDetailHeartRateTableViewCell *)v58;
        swift_bridgeObjectRelease(v55, v58, v60, v61, v62, v63, v64, v65);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v57, v66, v67, v68, v69, v70, v71, v72);
      }
      else
      {
        v165 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v166 = String._bridgeToObjectiveC()();
        v167 = objc_msgSend(v165, "localizedStringForKey:value:table:", v166, 0, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v167);
        v59 = v168;

      }
      v169 = sub_100047110((uint64_t *)&unk_10082EDA0);
      inited = swift_initStackObject(v169, &v223);
      *(_OWORD *)(inited + 16) = xmmword_100620BC0;
      *(_QWORD *)(inited + 32) = NSFontAttributeName;
      v171 = (void *)objc_opt_self(UIFont);
      v172 = NSFontAttributeName;
      v173 = objc_msgSend(v171, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
      v174 = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
      *(_QWORD *)(inited + 40) = v173;
      *(_QWORD *)(inited + 64) = v174;
      *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
      v175 = (void *)objc_opt_self(UIColor);
      v176 = NSForegroundColorAttributeName;
      v177 = objc_msgSend(v175, "secondaryLabelColor");
      *(_QWORD *)(inited + 104) = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
      *(_QWORD *)(inited + 80) = v177;
      v178 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(inited);
      v179 = objc_allocWithZone((Class)NSAttributedString);
      v180 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v59, v181, v182, v183, v184, v185, v186, v187);
      type metadata accessor for Key(0);
      sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v178, v188, v189, v190, v191, v192, v193, v194);
      v10 = objc_msgSend(v179, "initWithString:attributes:", v180, isa);

      goto LABEL_22;
    case 3:
      if (objc_msgSend(v3, "tableView:numberOfRowsInSection:", a1, 1)
        || objc_msgSend(v3, "tableView:numberOfRowsInSection:", a1, 2))
      {
LABEL_11:
        v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v18 = String._bridgeToObjectiveC()();
        v19 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, 0, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        v15 = v20;

        v10 = 0;
        v16 = 1;
      }
      else
      {
        v73 = (void *)objc_opt_self(NSBundle);
        v74 = objc_msgSend(v73, "mainBundle");
        v75 = String._bridgeToObjectiveC()();
        v76 = objc_msgSend(v74, "localizedStringForKey:value:table:", v75, 0, 0);

        v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(v76);
        v79 = v78;

        v228 = 10;
        v229 = 0xE100000000000000;
        v226 = v77;
        v227 = v79;
        swift_bridgeObjectRetain(v79);
        v226 = String.init<A>(_:)(&v226, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
        v227 = v80;
        String.append<A>(contentsOf:)(&v228, &type metadata for String, &protocol witness table for String);
        swift_bridgeObjectRelease(v79, v81, v82, v83, v84, v85, v86, v87);
        v88 = v226;
        v89 = v227;
        v90 = objc_msgSend(v73, "mainBundle");
        v91 = String._bridgeToObjectiveC()();
        v92 = objc_msgSend(v90, "localizedStringForKey:value:table:", v91, 0, 0);

        v93 = static String._unconditionallyBridgeFromObjectiveC(_:)(v92);
        v15 = v94;

        v228 = v93;
        v229 = (unint64_t)v15;
        v95 = v88;
        v226 = v88;
        v227 = v89;
        swift_bridgeObjectRetain(v89);
        v226 = String.init<A>(_:)(&v226, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
        v227 = v96;
        String.append<A>(contentsOf:)(&v228, &type metadata for String, &protocol witness table for String);
        v97 = v227;
        v222 = v226;
        v228 = v226;
        v229 = (unint64_t)v227;
        v226 = v95;
        v227 = v89;
        v98 = type metadata accessor for Locale(0);
        v99 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56);
        v99(v9, 1, 1, v98);
        v221 = sub_100038CA0();
        v219 = StringProtocol.range<A>(of:options:range:locale:)(&v226, 0, 0, 0, 1, v9, &type metadata for String, &type metadata for String, v221, v221);
        v220 = v100;
        LOBYTE(v90) = v101;
        sub_10001BE90((uint64_t)v9, (uint64_t *)&unk_10082ED90);
        swift_bridgeObjectRelease(v89, v102, v103, v104, v105, v106, v107, v108);
        if ((v90 & 1) != 0)
          goto LABEL_23;
        v228 = v222;
        v229 = (unint64_t)v97;
        v226 = v93;
        v227 = v15;
        v99(v9, 1, 1, v98);
        v109 = StringProtocol.range<A>(of:options:range:locale:)(&v226, 0, 0, 0, 1, v9, &type metadata for String, &type metadata for String, v221, v221);
        v111 = v110;
        v113 = v112;
        sub_10001BE90((uint64_t)v9, (uint64_t *)&unk_10082ED90);
        if ((v113 & 1) != 0)
        {
LABEL_23:
          v46 = v97;
LABEL_24:
          swift_bridgeObjectRelease(v46, v39, v40, v41, v42, v43, v44, v45);
LABEL_25:
          v16 = 0;
          v10 = 0;
        }
        else
        {
          swift_bridgeObjectRelease(v15, v39, v40, v41, v42, v43, v44, v45);
          v114 = objc_allocWithZone((Class)NSMutableAttributedString);
          swift_bridgeObjectRetain(v97);
          v115 = v222;
          v116 = String._bridgeToObjectiveC()();
          v218 = v111;
          v117 = v116;
          swift_bridgeObjectRelease(v97, v118, v119, v120, v121, v122, v123, v124);
          v216 = (objc_class *)objc_msgSend(v114, "initWithString:", v117);

          v217 = sub_100047110((uint64_t *)&unk_10082EDA0);
          v125 = swift_initStackObject(v217, v225);
          v215 = xmmword_100620BC0;
          *(_OWORD *)(v125 + 16) = xmmword_100620BC0;
          *(_QWORD *)(v125 + 32) = NSFontAttributeName;
          v126 = (void *)objc_opt_self(UIFont);
          v214 = v126;
          v127 = v97;
          v213 = NSFontAttributeName;
          v128 = objc_msgSend(v126, "preferredFontForTextStyle:", UIFontTextStyleTitle2);
          v129 = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
          v212 = v129;
          *(_QWORD *)(v125 + 40) = v128;
          *(_QWORD *)(v125 + 64) = v129;
          *(_QWORD *)(v125 + 72) = NSForegroundColorAttributeName;
          v130 = (void *)objc_opt_self(UIColor);
          v211 = v130;
          v210 = NSForegroundColorAttributeName;
          v131 = objc_msgSend(v130, "labelColor");
          v209 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
          *(_QWORD *)(v125 + 104) = v209;
          *(_QWORD *)(v125 + 80) = v131;
          v132 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(v125);
          type metadata accessor for Key(0);
          v208[1] = v133;
          sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
          v134 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v132, v135, v136, v137, v138, v139, v140, v141);
          v228 = v219;
          v229 = v220;
          v226 = v115;
          v227 = v127;
          v208[0] = v127;
          swift_bridgeObjectRetain(v127);
          v142 = sub_100047110(&qword_10082EDC0);
          v143 = sub_100028384(&qword_10082EDC8, &qword_10082EDC0, (uint64_t)&protocol conformance descriptor for Range<A>);
          v220 = v109;
          v144 = v221;
          v145 = _NSRange.init<A, B>(_:in:)(&v228, &v226, v142, &type metadata for String, v143, v221);
          isa = v216;
          -[objc_class addAttributes:range:](v216, "addAttributes:range:", v134, v145, v147);

          v148 = swift_initStackObject(v217, &v224);
          *(_OWORD *)(v148 + 16) = v215;
          v149 = v213;
          *(_QWORD *)(v148 + 32) = v213;
          v150 = v149;
          *(_QWORD *)(v148 + 40) = objc_msgSend(v214, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
          v151 = v210;
          *(_QWORD *)(v148 + 64) = v212;
          *(_QWORD *)(v148 + 72) = v151;
          v152 = v151;
          v153 = objc_msgSend(v211, "secondaryLabelColor");
          *(_QWORD *)(v148 + 104) = v209;
          *(_QWORD *)(v148 + 80) = v153;
          v154 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(v148);
          v155 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v154, v156, v157, v158, v159, v160, v161, v162);
          v228 = v220;
          v229 = v218;
          v226 = v222;
          v227 = (CHWorkoutDetailHeartRateTableViewCell *)v208[0];
          v163 = _NSRange.init<A, B>(_:in:)(&v228, &v226, v142, &type metadata for String, v143, v144);
          -[objc_class addAttributes:range:](isa, "addAttributes:range:", v155, v163, v164);

          v10 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "initWithAttributedString:", isa);
LABEL_22:

          v16 = 0;
          v15 = 0;
        }
      }
LABEL_26:
      v195 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TrendListHeaderView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      sub_100333320();
      v197 = 25.0;
      if (!(v16 & 1 | ((v196 & 1) == 0)))
        v197 = 0.0;
      objc_msgSend(*(id *)&v195[OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_topConstraint], "setConstant:", v197);
      if (v15)
      {
        v198 = *(id *)&v195[OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_label];
        v199 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v15, v200, v201, v202, v203, v204, v205, v206);
        objc_msgSend(v198, "setText:", v199);

      }
      if (v10)
      {
        objc_msgSend(*(id *)&v195[OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_label], "setAttributedText:", v10);

      }
      v10 = v195;
      break;
    default:
      v15 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
      v16 = 1;
      goto LABEL_26;
  }
  return v10;
}

ValueMetadata *type metadata accessor for TrendsUserCharacteristics()
{
  return &type metadata for TrendsUserCharacteristics;
}

uint64_t *sub_100335618(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for AttributedString(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 32);
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain(v16);
  }
  return v4;
}

uint64_t sub_1003356E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 32) + 8));
}

uint64_t sub_100335744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for AttributedString(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 32);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  return a1;
}

uint64_t sub_1003357E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = *(int *)(a3 + 32);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  return a1;
}

uint64_t sub_1003358A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)(a1 + *(int *)(a3 + 32)) = *(_OWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_100335924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 32);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  v17 = v13[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease(v17);
  return a1;
}

uint64_t sub_1003359BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003359C8);
}

uint64_t sub_1003359C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for AttributedString(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_100335A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100335A50);
}

uint64_t sub_100335A50(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for AttributedString(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TrendListMetric(uint64_t a1)
{
  uint64_t result;

  result = qword_10082ED40;
  if (!qword_10082ED40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TrendListMetric);
  return result;
}

uint64_t sub_100335B00(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_1006360C0;
  v4[1] = &unk_1006360D8;
  v4[2] = &unk_1006360F0;
  result = type metadata accessor for AttributedString(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    v4[4] = &unk_1006360F0;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100335B88()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100335BAC(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1003342F4(a1, v1);
}

uint64_t sub_100335BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10082EDD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100335D68(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t result;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  os_log_type_t v8;
  void *v9;
  os_log_type_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double Width;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[3];
  uint64_t v49;
  uint64_t v50;
  CGRect v51;

  v2 = v1;
  swift_getObjectType(v2);
  result = 1;
  switch(a1)
  {
    case 0:
      sub_100333320();
      result = v5 & 1;
      break;
    case 1:
      v24 = objc_msgSend(v2, "view");
      if (!v24)
      {
        __break(1u);
        JUMPOUT(0x1003361A4);
      }
      v25 = v24;
      objc_msgSend(v24, "bounds");
      v27 = v26;
      v29 = v28;
      v31 = v30;
      v33 = v32;

      v51.origin.x = v27;
      v51.origin.y = v29;
      v51.size.width = v31;
      v51.size.height = v33;
      Width = CGRectGetWidth(v51);
      v35 = (void *)objc_opt_self(HKUnit);
      v36 = objc_msgSend(v35, "literUnitWithMetricPrefix:", 4);
      v37 = objc_msgSend(v35, "gramUnitWithMetricPrefix:", 9);
      v38 = objc_msgSend(v35, "minuteUnit");
      v39 = objc_msgSend(v36, "unitDividedByUnit:", v37);
      v40 = objc_msgSend(v39, "unitDividedByUnit:", v38);

      v41 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v40, 99.99);
      v42 = sub_100035D5C(v41, 4u);

      v43 = Width * 0.5 + -16.0 + -8.0 + -40.0 + -12.0;
      objc_msgSend(v42, "boundingRectWithSize:options:context:", 3, 0, 1.79769313e308, 1.79769313e308);
      v45 = v44;

      if (v45 >= v43)
      {
        v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataProvider];
        v7 = &OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends;
        goto LABEL_13;
      }
      v46 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataProvider]
          + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends;
      swift_beginAccess(v46, v48, 0, 0);
      result = (*(_QWORD *)(*(_QWORD *)v46 + 16) & 1) + (*(_QWORD *)(*(_QWORD *)v46 + 16) >> 1);
      break;
    case 2:
      v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataProvider];
      v7 = &OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidDownTrends;
      goto LABEL_13;
    case 3:
      v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp24TrendsListViewController_dataProvider];
      v7 = &OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedInvalidTrends;
LABEL_13:
      v47 = v6 + *v7;
      swift_beginAccess(v47, v48, 0, 0);
      result = *(_QWORD *)(*(_QWORD *)v47 + 16);
      break;
    case 4:
      return result;
    default:
      v8 = static os_log_type_t.default.getter(1);
      v9 = (void *)HKLogActivity;
      v10 = v8;
      if (os_log_type_enabled(HKLogActivity, v8))
      {
        v11 = v9;
        v12 = swift_slowAlloc(22, -1);
        v13 = swift_slowAlloc(32, -1);
        v48[0] = v13;
        *(_DWORD *)v12 = 136315394;
        v14 = _typeName(_:qualified:)(1, 0);
        v16 = (CHWorkoutDetailHeartRateTableViewCell *)v15;
        v49 = sub_10003E8EC(v14, v15, v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v12 + 4);
        swift_bridgeObjectRelease(v16, v17, v18, v19, v20, v21, v22, v23);
        *(_WORD *)(v12 + 12) = 2048;
        v49 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v12 + 14);
        _os_log_impl((void *)&_mh_execute_header, v11, v10, "%s Unexpectedly encountered section with value %ld", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v13, -1, -1);
        swift_slowDealloc(v12, -1, -1);

      }
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_1003361B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003361DC()
{
  sub_100332DEC();
  return sub_100332140();
}

uint64_t storeEnumTagSinglePayload for CharacteristicError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100336240 + 4 * byte_100636024[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100336260 + 4 * byte_100636029[v4]))();
}

_BYTE *sub_100336240(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100336260(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100336268(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100336270(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100336278(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100336280(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicError()
{
  return &type metadata for CharacteristicError;
}

unint64_t sub_1003362A0()
{
  unint64_t result;

  result = qword_10082EE10;
  if (!qword_10082EE10)
  {
    result = swift_getWitnessTable(&unk_1006361C4, &type metadata for CharacteristicError);
    atomic_store(result, (unint64_t *)&qword_10082EE10);
  }
  return result;
}

uint64_t sub_1003362E4(uint64_t a1, char a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100047110(&qword_10082EEA0);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume(v3);
  }
}

id sub_100336364(uint64_t a1, void *a2)
{
  char *v2;
  id v5;
  id v6;
  id result;
  void *v8;
  objc_super v9;

  *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProviderObserver] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_achievementTransitionAnimator] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_pauseRingsCoordinator] = a2;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailViewController();
  swift_retain(a1);
  v5 = a2;
  v6 = objc_msgSendSuper2(&v9, "initWithNibName:bundle:", 0, 0);
  result = objc_msgSend(v6, "tableView", v9.receiver, v9.super_class);
  if (result)
  {
    v8 = result;
    objc_msgSend(result, "setSeparatorStyle:", 0);

    swift_release(a1);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100336448()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  Class v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  NSString v19;
  objc_super v20;

  v1 = v0;
  swift_getObjectType(v0);
  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailViewController();
  objc_msgSendSuper2(&v20, "viewDidLoad");
  v2 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v2, "setLargeTitleDisplayMode:", 2);

  v3 = objc_msgSend(v1, "navigationItem");
  v4 = sub_10033880C();
  objc_msgSend(v3, "setRightBarButtonItem:", v4);

  v5 = objc_msgSend(v1, "tableView");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "setEstimatedRowHeight:", 100.0);

    v7 = objc_msgSend(v1, "tableView");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "setSectionHeaderTopPadding:", 0.0);

      v9 = objc_msgSend(v1, "tableView");
      if (v9)
      {
        v10 = v9;
        v11 = objc_msgSend(v9, "ch_withFloatingHeadersAndFooters:", 0);

        v12 = objc_msgSend(v1, "tableView");
        if (v12)
        {
          v13 = v12;
          v14 = sub_10033C628();
          objc_msgSend(v13, "setTableFooterView:", v14);

          v15 = objc_msgSend(v1, "tableView");
          if (v15)
          {
            v16 = v15;
            v17 = type metadata accessor for ActivityTileSectionHeader();
            ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
            v19 = String._bridgeToObjectiveC()();
            objc_msgSend(v16, "registerClass:forHeaderFooterViewReuseIdentifier:", ObjCClassFromMetadata, v19);

            JUMPOUT(0x1003366A8);
          }
LABEL_11:
          __break(1u);
          __break(1u);
          __break(1u);
          JUMPOUT(0x1003369F8);
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
LABEL_9:
      __break(1u);
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_9;
}

uint64_t sub_100336A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  os_log_type_t v12;
  void *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  void *v32;
  uint64_t v33;
  void *Strong;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t aBlock[5];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v45 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static os_log_type_t.default.getter(v11);
  v13 = (void *)HKLogActivity;
  v14 = v12;
  if (os_log_type_enabled(HKLogActivity, v12))
  {
    v42 = v13;
    v43 = a1;
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    v44 = v8;
    v17 = v16;
    aBlock[0] = v16;
    *(_DWORD *)v15 = 136315138;
    v18 = _typeName(_:qualified:)(a2, 0);
    v20 = (CHWorkoutDetailHeartRateTableViewCell *)v19;
    v48 = sub_10003E8EC(v18, v19, aBlock);
    a1 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v15 + 4);
    swift_bridgeObjectRelease(v20, v21, v22, v23, v24, v25, v26, v27);
    v28 = v42;
    _os_log_impl((void *)&_mh_execute_header, v42, v14, "%s received object will change", v15, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    v29 = v17;
    v8 = v44;
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  v30 = a1 + 16;
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v32 = (void *)static OS_dispatch_queue.main.getter(v31);
  v33 = swift_allocObject(&unk_100797028, 24, 7);
  swift_beginAccess(v30, &v48, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v30);
  swift_unknownObjectWeakInit(v33 + 16, Strong);

  aBlock[4] = (uint64_t)sub_10033DC24;
  v47 = v33;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10002D0F8;
  aBlock[3] = (uint64_t)&unk_100797290;
  v35 = _Block_copy(aBlock);
  swift_release(v47);
  static DispatchQoS.unspecified.getter(v36);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v37 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v38 = sub_100047110(&qword_100828C80);
  v39 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v38, v39, v4, v37);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v35);
  _Block_release(v35);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v10, v8);
}

void sub_100336D80(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  void *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  void *v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  void *v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  void *v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  Class v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  void *v65;
  CHWorkoutDetailHeartRateTableViewCell *v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;
  void *v68;
  _BYTE v69[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v69, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider);
    KeyPath = swift_getKeyPath(&unk_100636280);
    v7 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter(&v61, v5, KeyPath, v7);
    swift_release(v7);
    swift_release(KeyPath);
    v8 = v62;
    v9 = v63;
    v10 = v64;
    v12 = v65;
    v11 = v66;
    v13 = v67;
    v14 = v68;
    swift_release(v61);

    swift_release(v9);
    swift_bridgeObjectRelease(v11, v15, v16, v17, v18, v19, v20, v21);
    swift_bridgeObjectRelease(v13, v22, v23, v24, v25, v26, v27, v28);

    LOBYTE(v9) = objc_msgSend(v10, "isFriendshipCurrentlyActive");
    if ((v9 & 1) != 0)
      goto LABEL_4;
    v29 = *(_QWORD *)&v3[v4];
    v30 = swift_getKeyPath(&unk_100636280);
    v31 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter(&v61, v29, v30, v31);
    swift_release(v31);
    swift_release(v30);
    v32 = v62;
    v33 = v63;
    v34 = v64;
    v36 = v65;
    v35 = v66;
    v37 = v67;
    v38 = v68;
    swift_release(v61);

    swift_release(v33);
    swift_bridgeObjectRelease(v35, v39, v40, v41, v42, v43, v44, v45);
    swift_bridgeObjectRelease(v37, v46, v47, v48, v49, v50, v51, v52);

    LODWORD(v33) = objc_msgSend(v34, "isMe");
    if ((_DWORD)v33)
    {
LABEL_4:
      v53 = objc_msgSend(v3, "navigationItem");
      v54 = sub_10033880C();
      objc_msgSend(v53, "setRightBarButtonItem:", v54);

      v55 = objc_msgSend(v3, "tableView");
      if (v55)
      {
        v56 = v55;
        objc_msgSend(v55, "reloadData");

        v57 = objc_msgSend(v3, "tableView");
        if (v57)
        {
          v58 = v57;
          v59 = sub_10033C628();
          objc_msgSend(v58, "setTableFooterView:", v59);
          goto LABEL_7;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
    v60 = objc_msgSend(v3, "navigationController");
    if (!v60)
      goto LABEL_8;
    v58 = v60;
    v59 = v3;
    v3 = (char *)objc_msgSend(v60, "popViewControllerAnimated:", 1);
LABEL_7:

LABEL_8:
  }
}

void sub_1003371B0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  NSString v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  Class isa;
  id v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;

  v2 = sub_100047110(&qword_10082EF38);
  __chkstk_darwin(v2);
  v4 = IndexPath.section.getter(v3);
  v5 = sub_10035640C(v4);
  if (v5 != 10)
  {
    v6 = v5;
    sub_100355F94(v5);
    (*(void (**)(void))(v7 + 8))();
    v9 = v8;
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9, v11, v12, v13, v14, v15, v16, v17);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v19 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v10, isa);

    objc_msgSend(v19, "setSelectionStyle:", 0);
    __asm { BR              X10 }
  }
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000, v20, v21, v22, v23, v24, v25, v26);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000036, 0x80000001006907F0, "FitnessApp/ActivitySharingFriendDetailViewController.swift", 58, 2, 130, 0);
  __break(1u);
  JUMPOUT(0x1003380E8);
}

void sub_100338110(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD v13[12];

  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider);
  KeyPath = swift_getKeyPath(&unk_100636280);
  v5 = swift_getKeyPath(&unk_1006362A8);
  static Published.subscript.getter(v13, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v13[0];
  v7 = (void *)v13[1];
  v8 = v13[2];
  v9 = v13[5];
  v11 = (void *)v13[7];
  v10 = v13[8];
  v12 = v13[9];

  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v10);
  swift_release(v8);

  swift_release(v6);
  *a2 = v9;
}

id sub_1003381E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  __int128 v15;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char v26;

  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider);
  KeyPath = swift_getKeyPath(&unk_100636280);
  v5 = swift_getKeyPath(&unk_1006362A8);
  static Published.subscript.getter(&v17, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v18;
  v7 = v19;
  v8 = v20;
  v9 = v21;
  v10 = v22;
  v11 = v23;
  v12 = v25;
  v13 = v26;
  v14 = *(void **)(v3
                 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementBadgeImageFactory);
  v15 = v24;
  *(_OWORD *)a2 = v17;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v9;
  *(_BYTE *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v11;
  *(_OWORD *)(a2 + 64) = v15;
  *(_QWORD *)(a2 + 80) = v12;
  *(_BYTE *)(a2 + 88) = v13;
  *(_QWORD *)(a2 + 96) = v14;
  return v14;
}

uint64_t sub_100338370(void *a1, unint64_t a2)
{
  void *v2;
  unsigned __int8 v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  id v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  NSString v15;
  void (*v16)(char);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  const char *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t result;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;

  v4 = sub_10035640C(a2);
  v5 = v4;
  if (v4 < 7u || v4 - 8 < 2)
    goto LABEL_3;
  if (v4 == 7)
  {
    v28 = objc_msgSend(v2, "tableView");
    if (v28)
    {
      v29 = v28;
      v30 = objc_msgSend(v28, "numberOfRowsInSection:", 6);

      if (v30)
      {
        v7 = 0;
        v9 = 0;
LABEL_4:
        sub_100356090(v5);
        if (!((unint64_t)v9 | (unint64_t)v11))
          return 0;
        v13 = v10;
        v14 = v11;
        v15 = String._bridgeToObjectiveC()();
        v12 = objc_msgSend(a1, "dequeueReusableHeaderFooterViewWithIdentifier:", v15);

        if (v5 >= 8u)
        {
          if (v5 == 8)
            v31 = &unk_100797200;
          else
            v31 = &unk_1007971D8;
          if (v5 == 8)
            v16 = sub_10033D674;
          else
            v16 = sub_10033D64C;
          v17 = swift_allocObject(v31, 24, 7);
          *(_QWORD *)(v17 + 16) = v2;
          v32 = v2;
          if (v12)
            goto LABEL_8;
        }
        else
        {
          v16 = 0;
          v17 = 0;
          if (v12)
          {
LABEL_8:
            v18 = type metadata accessor for ActivityTileSectionHeader();
            v19 = swift_dynamicCastClass(v12, v18);
            v20 = v12;
            if (v19)
              sub_10003482C(v7, v9, v13, v14, (uint64_t)v16, v17, 18.0);
            sub_100022BA4((uint64_t)v16, v17);

            goto LABEL_23;
          }
        }
        sub_100022BA4((uint64_t)v16, v17);
LABEL_23:
        swift_bridgeObjectRelease(v14, v21, v22, v23, v24, v25, v26, v27);
        swift_bridgeObjectRelease(v9, v33, v34, v35, v36, v37, v38, v39);
        return (uint64_t)v12;
      }
      v4 = 7;
LABEL_3:
      sub_100356208(v4);
      v7 = v6;
      v9 = v8;
      goto LABEL_4;
    }
    __break(1u);
  }
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000, v41, v42, v43, v44, v45, v46, v47);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000040, 0x80000001006907A0, "FitnessApp/ActivitySharingFriendDetailViewController.swift", 58, 2, 212, 0);
  __break(1u);
  return result;
}

void sub_10033863C(void *a1, unint64_t a2)
{
  void *v2;
  unsigned __int8 v4;
  unsigned __int8 v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;

  v4 = sub_10035640C(a2);
  v5 = v4;
  if (v4 < 7u || v4 - 8 < 2)
  {
    sub_100356208(v4);
    if (v6)
    {
LABEL_4:
      swift_bridgeObjectRelease(v6, (SEL)v6, v7, v8, v9, v10, v11, v12);
LABEL_9:
      objc_msgSend(a1, "numberOfRowsInSection:", v5);
      return;
    }
    goto LABEL_8;
  }
  if (v4 != 7)
  {
LABEL_14:
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000, v24, v25, v26, v27, v28, v29, v30);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000042, 0x800000010069A490, "FitnessApp/ActivitySharingFriendDetailViewController.swift", 58, 2, 230, 0);
    __break(1u);
    return;
  }
  v13 = objc_msgSend(v2, "tableView");
  if (!v13)
  {
    __break(1u);
    goto LABEL_14;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "numberOfRowsInSection:", 6);

  if (!v15)
  {
    sub_100356208(7);
    if (v6)
      goto LABEL_4;
  }
LABEL_8:
  sub_100356090(v5);
  v17 = v16;
  swift_bridgeObjectRelease(v16, (SEL)v16, v18, v19, v20, v21, v22, v23);
  if (v17)
    goto LABEL_9;
}

Class sub_10033880C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  void *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  void *v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  Class result;
  NSString v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  Class isa;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  objc_class *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  const char *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  UIMenuElementSize preferredElementSize;
  Swift::String v58;
  objc_class *v59;
  uint64_t v60;
  uint64_t v61;
  Swift::OpaquePointer v62;
  _QWORD v63[12];
  UIImage_optional v64;
  UIImage_optional v65;
  UIAction_optional v66;
  UIMenu_optional v67;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider];
  KeyPath = swift_getKeyPath(&unk_100636280);
  v4 = swift_getKeyPath(&unk_1006362A8);
  static Published.subscript.getter(v63, v2, KeyPath, v4);
  swift_release(v4);
  swift_release(KeyPath);
  v5 = (void *)v63[1];
  v6 = v63[2];
  v7 = (void *)v63[5];
  v9 = (void *)v63[7];
  v8 = (CHWorkoutDetailHeartRateTableViewCell *)v63[8];
  v10 = (CHWorkoutDetailHeartRateTableViewCell *)v63[9];
  v11 = (void *)v63[10];
  swift_release(v63[0]);

  swift_release(v6);
  swift_bridgeObjectRelease(v8, v12, v13, v14, v15, v16, v17, v18);
  swift_bridgeObjectRelease(v10, v19, v20, v21, v22, v23, v24, v25);

  LOBYTE(v6) = objc_msgSend(v7, "isMe");
  result = 0;
  if ((v6 & 1) == 0)
  {
    v27 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v27);

    if (v28
      && (v29 = (void *)objc_opt_self(UIImageSymbolConfiguration),
          v30 = objc_msgSend(v29, "configurationWithWeight:", 9),
          v31 = objc_msgSend(v28, "imageByApplyingSymbolConfiguration:", v30),
          v30,
          v28,
          v31))
    {
      v32 = sub_100047110((uint64_t *)&unk_100828340);
      v33 = swift_allocObject(v32, 48, 7);
      *(_OWORD *)(v33 + 16) = xmmword_100629280;
      v34 = (void *)objc_opt_self(UIColor);
      *(_QWORD *)(v33 + 32) = objc_msgSend(v34, "lightGrayColor");
      v35 = objc_msgSend(v34, "darkGrayColor");
      *(_QWORD *)(v33 + 40) = v35;
      v63[0] = v33;
      specialized Array._endMutation()(v35);
      v36 = (CHWorkoutDetailHeartRateTableViewCell *)v63[0];
      sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v36, v38, v39, v40, v41, v42, v43, v44);
      v45 = objc_msgSend(v29, "configurationWithPaletteColors:", isa);

      v46 = (objc_class *)objc_msgSend(v31, "imageByApplyingSymbolConfiguration:", v45);
    }
    else
    {
      v46 = 0;
    }
    v47 = v1;
    v48 = (uint64_t)sub_10033CFEC((CHWorkoutDetailHeartRateTableViewCell *)&off_1007828F0, (uint64_t)v47);

    if ((unint64_t)v48 >> 62)
    {
      if (v48 < 0)
        v60 = v48;
      else
        v60 = v48 & 0xFFFFFFFFFFFFFF8;
      v61 = sub_10001E724(0, &qword_10082E068, UIMenuElement_ptr);
      preferredElementSize = _bridgeCocoaArray<A>(_:)(v60, v61);
    }
    else
    {
      swift_bridgeObjectRetain(v48);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v49);
      sub_10001E724(0, &qword_10082E068, UIMenuElement_ptr);
      preferredElementSize = v48;
    }
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v48, v50, v51, v52, v53, v54, v55, v56);
    sub_10001E724(0, (unint64_t *)&unk_10082EEC0, UIMenu_ptr);
    v58._countAndFlagsBits = 0;
    v58._object = (void *)0xE000000000000000;
    v65.value.super.isa = 0;
    v65.is_nil = 0;
    v59 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v58, (Swift::String_optional)0, v65, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v62).super.super.isa;
    sub_10001E724(0, (unint64_t *)&unk_10082EEB0, UIBarButtonItem_ptr);
    v64.value.super.isa = v46;
    v64.is_nil = 0;
    v66.value.super.super.isa = v59;
    return UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v64, v66, v67).super.super.isa;
  }
  return result;
}

double sub_100338BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v5 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  type metadata accessor for MainActor(0);
  swift_retain(a3);
  v10 = static MainActor.shared.getter(v9);
  v11 = (_QWORD *)swift_allocObject(&unk_1007971B0, 48, 7);
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = a2;
  v11[5] = a3;
  v12 = sub_10020D9C0((uint64_t)v7, (uint64_t)&unk_10082EF30, (uint64_t)v11);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_100338C90(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v6 = type metadata accessor for MainActor(0);
  v4[2] = v6;
  v4[3] = static MainActor.shared.getter(v6);
  v9 = (uint64_t (*)(void))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc(a4[1]);
  v4[4] = v7;
  *v7 = v4;
  v7[1] = sub_10016D0B4;
  return v9();
}

uint64_t sub_100338D0C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10082EE6C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000EA380;
  return sub_100338E74();
}

uint64_t sub_100338D54()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10082EE74);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000EA380;
  return sub_100339574();
}

uint64_t sub_100338D9C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10082EE7C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000EA380;
  return sub_10033A2AC();
}

uint64_t sub_100338DE4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10082EE84);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000EA380;
  return sub_10033B3F0();
}

uint64_t sub_100338E2C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10082EE8C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000EA380;
  return sub_10033B7F4();
}

uint64_t sub_100338E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 112) = v0;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 120) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100338F14, v3, v4);
}

uint64_t sub_100338F14()
{
  uint64_t v0;
  void **v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSString *v5;
  NSString *v6;
  id v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  void *v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  const char *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  NSString v44;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  Class isa;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  char **v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void *v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  void *v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  void *v75;
  SEL v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  SEL v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  NSString v90;
  id v91;
  CHWorkoutDetailHeartRateTableViewCell *v92;
  CHWorkoutDetailHeartRateTableViewCell *v93;
  SEL v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  void *v104;
  id v105;
  id v106;
  Class v107;
  uint64_t v108;
  id v109;
  Class v110;
  SEL v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  void *v119;
  void *v120;
  id v121;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  id v129;
  CHWorkoutDetailHeartRateTableViewCell *v130;
  UIAction_optional v131;
  UIMenu_optional v132;

  v1 = (void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 120));
  v129 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  v128 = sub_100047110((uint64_t *)&unk_100828340);
  v3 = swift_allocObject(v128, 56, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100624C90;
  *(_QWORD *)(v3 + 32) = CNContactEmailAddressesKey;
  *(_QWORD *)(v3 + 40) = CNContactPhoneNumbersKey;
  v4 = (void *)objc_opt_self(CNContactViewController);
  v5 = CNContactEmailAddressesKey;
  v6 = CNContactPhoneNumbersKey;
  v127 = v4;
  v7 = objc_msgSend(v4, "descriptorForRequiredKeys");
  *(_QWORD *)(v3 + 48) = v7;
  specialized Array._endMutation()(v7);
  v8 = (CHWorkoutDetailHeartRateTableViewCell *)v3;
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider);
  KeyPath = swift_getKeyPath(&unk_100636280);
  v11 = swift_getKeyPath(&unk_1006362A8);
  v126 = v9;
  static Published.subscript.getter((_QWORD *)(v0 + 16), v9, KeyPath, v11);
  swift_release(v11);
  swift_release(KeyPath);
  v12 = *(void **)(v0 + 24);
  v13 = *(_QWORD *)(v0 + 32);
  v14 = *(void **)(v0 + 56);
  v15 = *(void **)(v0 + 72);
  v16 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 80);
  v17 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 88);
  v18 = *(void **)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(v13);
  swift_bridgeObjectRelease(v16, v19, v20, v21, v22, v23, v24, v25);
  swift_bridgeObjectRelease(v17, v26, v27, v28, v29, v30, v31, v32);

  v33 = objc_msgSend(v14, "contact");
  if (v33
    && (v41 = objc_msgSend(v33, "linkedContactStoreIdentifier"),
        v33,
        v41))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v43 = v42;

    v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v43, v45, v46, v47, v48, v49, v50, v51);
    sub_100047110((uint64_t *)&unk_100828950);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v8, v53, v54, v55, v56, v57, v58, v59);
    *v1 = 0;
    v60 = v129;
    v61 = objc_msgSend(v129, "unifiedContactWithIdentifier:keysToFetch:error:", v44, isa, v0 + 16);

    v62 = *v1;
    if (v61)
    {
      v63 = v62;
      v64 = objc_msgSend(v127, "viewControllerForContact:", v61);
      v65 = v128;
      v66 = &selRef_headerStringForSection_isRecentAndRelevant_;
      goto LABEL_9;
    }
    v123 = v62;
    v124 = _convertNSErrorToError(_:)(v62);

    swift_willThrow(v125);
    swift_errorRelease(v124);
  }
  else
  {
    swift_bridgeObjectRelease(v8, v34, v35, v36, v37, v38, v39, v40);
    v60 = v129;
  }
  v67 = swift_getKeyPath(&unk_100636280);
  v68 = swift_getKeyPath(&unk_1006362A8);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v126, v67, v68);
  swift_release(v68);
  swift_release(v67);
  v69 = *(void **)(v0 + 24);
  v70 = *(_QWORD *)(v0 + 32);
  v71 = *(void **)(v0 + 56);
  v73 = *(void **)(v0 + 72);
  v72 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 80);
  v74 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 88);
  v75 = *(void **)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(v70);
  swift_bridgeObjectRelease(v72, v76, v77, v78, v79, v80, v81, v82);
  swift_bridgeObjectRelease(v74, v83, v84, v85, v86, v87, v88, v89);

  v90 = objc_msgSend(v71, "contact");
  if (v90)
  {
    v91 = objc_msgSend(v90, "primaryDestinationForMessaging");

    static String._unconditionallyBridgeFromObjectiveC(_:)(v91);
    v93 = v92;

    v90 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v93, v94, v95, v96, v97, v98, v99, v100);
  }
  v65 = v128;
  v66 = &selRef_headerStringForSection_isRecentAndRelevant_;
  v61 = objc_msgSend((id)objc_opt_self(CNContact), "contactWithDisplayName:emailOrPhoneNumber:", 0, v90);

  v64 = objc_msgSend(v127, "viewControllerForUnknownContact:", v61);
LABEL_9:
  v101 = v64;

  v102 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), v66[70]);
  sub_10001E724(0, &qword_100823C90, UIAction_ptr);
  *(_QWORD *)(swift_allocObject(&unk_100797098, 24, 7) + 16) = v102;
  v103 = v102;
  v104 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0);
  v105 = objc_msgSend(v101, "navigationItem");
  sub_10001E724(0, (unint64_t *)&unk_10082EEB0, UIBarButtonItem_ptr);
  v106 = v104;
  v131.value.super.super.isa = (Class)v104;
  v131.is_nil = 0;
  v107 = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v131, v132).super.super.isa;
  objc_msgSend(v105, "setLeftBarButtonItem:", v107);

  v108 = swift_allocObject(v65, 40, 7);
  *(_OWORD *)(v108 + 16) = xmmword_100623630;
  *(_QWORD *)(v108 + 32) = v101;
  v130 = (CHWorkoutDetailHeartRateTableViewCell *)v108;
  specialized Array._endMutation()(v108);
  sub_10001E724(0, (unint64_t *)&qword_100828310, UIViewController_ptr);
  v109 = v101;
  v110 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v130, v111, v112, v113, v114, v115, v116, v117);
  objc_msgSend(v103, "setViewControllers:", v110);

  v118 = objc_msgSend(v103, "view");
  if (!v118)
    __break(1u);
  v119 = v118;
  v120 = *(void **)(v0 + 112);
  v121 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  objc_msgSend(v119, "setTintColor:", v121);

  objc_msgSend(v120, "presentViewController:animated:completion:", v103, 1, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100339574()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[109] = v0;
  v2 = sub_100047110((uint64_t *)&unk_10082E690);
  v1[110] = v2;
  v3 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[111] = swift_task_alloc(v3);
  v1[112] = swift_task_alloc(v3);
  v1[113] = swift_task_alloc(v3);
  v1[114] = swift_task_alloc(v3);
  v4 = type metadata accessor for MainActor(0);
  v1[115] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[116] = v5;
  v1[117] = v6;
  return swift_task_switch(sub_100339634, v5, v6);
}

uint64_t sub_100339634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  void *v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  void *v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  void *v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 872)
                 + OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider);
  *(_QWORD *)(v0 + 944) = v1;
  KeyPath = swift_getKeyPath(&unk_100636280);
  v3 = swift_getKeyPath(&unk_1006362A8);
  static Published.subscript.getter((_QWORD *)(v0 + 80), v1, KeyPath, v3);
  swift_release(v3);
  swift_release(KeyPath);
  v4 = *(void **)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(void **)(v0 + 120);
  v7 = *(void **)(v0 + 136);
  v8 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 144);
  v9 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 152);
  v10 = *(void **)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 80));

  swift_release(v5);
  swift_bridgeObjectRelease(v8, v11, v12, v13, v14, v15, v16, v17);
  swift_bridgeObjectRelease(v9, v18, v19, v20, v21, v22, v23, v24);

  LODWORD(v9) = objc_msgSend(v6, "isMuted");
  *(_BYTE *)(v0 + 170) = (_BYTE)v9;

  v25 = v9 ^ 1;
  v26 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendManager);
  *(_QWORD *)(v0 + 952) = v26;
  v27 = swift_getKeyPath(&unk_100636280);
  v28 = swift_getKeyPath(&unk_1006362A8);
  v29 = v26;
  static Published.subscript.getter((_QWORD *)(v0 + 272), v1, v27, v28);
  swift_release(v28);
  swift_release(v27);
  v30 = *(_QWORD *)(v0 + 272);
  v31 = *(void **)(v0 + 280);
  v32 = *(_QWORD *)(v0 + 288);
  v33 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)(v0 + 960) = v33;
  v35 = *(void **)(v0 + 328);
  v34 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 336);
  v36 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 344);
  v37 = *(void **)(v0 + 352);
  swift_release(v30);

  swift_release(v32);
  swift_bridgeObjectRelease(v34, v38, v39, v40, v41, v42, v43, v44);
  swift_bridgeObjectRelease(v36, v45, v46, v47, v48, v49, v50, v51);

  *(_QWORD *)(v0 + 56) = v0 + 169;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_10033985C;
  *(_QWORD *)(v0 + 784) = swift_continuation_init(v0 + 16, 1);
  *(_QWORD *)(v0 + 752) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 760) = 0x40000000;
  *(_QWORD *)(v0 + 768) = sub_1003362E4;
  *(_QWORD *)(v0 + 776) = &unk_100797070;
  objc_msgSend(v29, "setMuteEnabled:forFriend:completion:", v25, v33, v0 + 752);
  return swift_continuation_await(v0 + 16);
}

uint64_t sub_10033985C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 968) = v2;
  if (v2)
    v3 = sub_100339D08;
  else
    v3 = sub_1003398BC;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 928), *(_QWORD *)(v1 + 936));
}

uint64_t sub_1003398BC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id *v4;
  void *v5;
  uint64_t v6;
  os_log_type_t v7;
  NSObject *v8;
  id v9;
  char v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  void *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  SEL v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  void *v62;
  void *v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v85;
  uint64_t v86;
  os_log_type_t v87;
  NSObject *log;
  uint64_t v89;
  uint64_t v90;

  v1 = v0;
  v2 = *(void **)(v0 + 960);
  v3 = *(void **)(v0 + 952);
  v4 = (id *)(v1 + 872);
  v5 = *(void **)(v1 + 872);
  swift_release(*(_QWORD *)(v1 + 920));

  v7 = static os_log_type_t.default.getter(v6);
  v8 = HKLogActivity;
  v9 = v5;
  if (os_log_type_enabled(v8, v7))
  {
    v87 = v7;
    v89 = v1 + 864;
    v10 = *(_BYTE *)(v1 + 170);
    v11 = *(_QWORD *)(v1 + 944);
    v12 = *(id *)(v1 + 872);
    log = v8;
    v13 = swift_slowAlloc(28, -1);
    v85 = (_QWORD *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v15 = 1;
    *(_DWORD *)(v1 + 172) = (v10 & 1) == 0;
    v86 = v14;
    v90 = v14;
    *(_DWORD *)v13 = 67109634;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 172, v1 + 176, v13 + 4);
    *(_WORD *)(v13 + 8) = 2082;
    KeyPath = swift_getKeyPath(&unk_100636280);
    v17 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter((_QWORD *)(v1 + 656), v11, KeyPath, v17);
    swift_release(v17);
    swift_release(KeyPath);
    v18 = *(void **)(v1 + 664);
    v19 = *(_QWORD *)(v1 + 672);
    v20 = *(void **)(v1 + 696);
    v21 = *(void **)(v1 + 712);
    v22 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 720);
    v23 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 728);
    v24 = *(void **)(v1 + 736);
    swift_release(*(_QWORD *)(v1 + 656));

    swift_release(v19);
    swift_bridgeObjectRelease(v22, v25, v26, v27, v28, v29, v30, v31);
    swift_bridgeObjectRelease(v23, v32, v33, v34, v35, v36, v37, v38);

    v39 = objc_msgSend(v20, "UUID");
    if (v39)
    {
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v39);

      v15 = 0;
    }
    v40 = *(_QWORD *)(v1 + 944);
    v41 = *(_QWORD *)(v1 + 912);
    v42 = *(_QWORD *)(v1 + 904);
    v43 = *(_QWORD *)(v1 + 880);
    v44 = *(void **)(v1 + 872);
    v45 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v42, v15, 1, v45);
    sub_100218188(v42, v41);
    v46 = Optional.description.getter(v43);
    v48 = v47;
    sub_10004D914(v41);
    *(_QWORD *)(v1 + 856) = sub_10003E8EC(v46, (unint64_t)v48, &v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 856, v89, v13 + 10);
    swift_bridgeObjectRelease(v48, v49, v50, v51, v52, v53, v54, v55);

    *(_WORD *)(v13 + 18) = 2112;
    v56 = swift_getKeyPath(&unk_100636280);
    v57 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter((_QWORD *)(v1 + 176), v40, v56, v57);
    swift_release(v57);
    swift_release(v56);
    v58 = *(void **)(v1 + 184);
    v59 = *(_QWORD *)(v1 + 192);
    v60 = *(_QWORD *)(v1 + 216);
    v62 = *(void **)(v1 + 232);
    v61 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 240);
    v64 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 248);
    v63 = *(void **)(v1 + 256);
    swift_release(*(_QWORD *)(v1 + 176));

    swift_release(v59);
    swift_bridgeObjectRelease(v61, v65, v66, v67, v68, v69, v70, v71);
    swift_bridgeObjectRelease(v64, v72, v73, v74, v75, v76, v77, v78);

    *(_QWORD *)(v1 + 864) = v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v89, v1 + 872, v13 + 20);
    *v85 = v60;

    v79 = log;
    _os_log_impl((void *)&_mh_execute_header, log, v87, "Successfully set mute status to %{BOOL}d for friend: %{public}s - %@", (uint8_t *)v13, 0x1Cu);
    v80 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v85, 1, v80);
    swift_slowDealloc(v85, -1, -1);
    swift_arrayDestroy(v86, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v86, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    v79 = *v4;

  }
  v81 = *(_QWORD *)(v1 + 904);
  v82 = *(_QWORD *)(v1 + 896);
  v83 = *(_QWORD *)(v1 + 888);
  swift_task_dealloc(*(_QWORD *)(v1 + 912));
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100339D08()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  NSObject *v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  void *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  void *v64;
  void *v65;
  CHWorkoutDetailHeartRateTableViewCell *v66;
  SEL v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  SEL v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  NSObject *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  CHWorkoutDetailHeartRateTableViewCell *v92;
  void *v93;
  SEL v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  SEL v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  NSObject *log;
  os_log_type_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v1 = *(void **)(v0 + 960);
  v2 = *(void **)(v0 + 952);
  v3 = *(void **)(v0 + 872);
  swift_release(*(_QWORD *)(v0 + 920));
  swift_willThrow(v4);

  v6 = static os_log_type_t.default.getter(v5);
  v7 = HKLogActivity;
  v8 = v3;
  if (os_log_type_enabled(v7, v6))
  {
    v118 = v6;
    v114 = v0 + 840;
    v119 = v0 + 848;
    v9 = *(_QWORD *)(v0 + 968);
    v10 = *(_BYTE *)(v0 + 170);
    v11 = *(_QWORD *)(v0 + 944);
    v12 = *(id *)(v0 + 872);
    swift_errorRetain(v9);
    v13 = v12;
    swift_errorRetain(v9);
    log = v7;
    v14 = swift_slowAlloc(38, -1);
    v115 = (uint64_t *)swift_slowAlloc(16, -1);
    v116 = swift_slowAlloc(32, -1);
    v121 = v116;
    *(_DWORD *)v14 = 67109890;
    v15 = 1;
    *(_DWORD *)(v0 + 268) = (v10 & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 268, v0 + 272, v14 + 4);
    *(_WORD *)(v14 + 8) = 2082;
    KeyPath = swift_getKeyPath(&unk_100636280);
    v17 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter((_QWORD *)(v0 + 464), v11, KeyPath, v17);
    swift_release(v17);
    swift_release(KeyPath);
    v18 = *(void **)(v0 + 472);
    v19 = *(_QWORD *)(v0 + 480);
    v20 = *(void **)(v0 + 504);
    v21 = *(void **)(v0 + 520);
    v22 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 528);
    v23 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 536);
    v24 = *(void **)(v0 + 544);
    swift_release(*(_QWORD *)(v0 + 464));

    swift_release(v19);
    swift_bridgeObjectRelease(v22, v25, v26, v27, v28, v29, v30, v31);
    swift_bridgeObjectRelease(v23, v32, v33, v34, v35, v36, v37, v38);

    v39 = objc_msgSend(v20, "UUID");
    if (v39)
    {
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v39);

      v15 = 0;
    }
    v40 = *(_QWORD *)(v0 + 968);
    v41 = *(_QWORD *)(v0 + 944);
    v42 = *(_QWORD *)(v0 + 896);
    v43 = *(_QWORD *)(v0 + 888);
    v44 = *(_QWORD *)(v0 + 880);
    v45 = *(void **)(v0 + 872);
    v46 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v43, v15, 1, v46);
    sub_100218188(v43, v42);
    v47 = Optional.description.getter(v44);
    v49 = v48;
    sub_10004D914(v42);
    *(_QWORD *)(v0 + 840) = sub_10003E8EC(v47, (unint64_t)v49, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v114, v119, v14 + 10);
    swift_bridgeObjectRelease(v49, v50, v51, v52, v53, v54, v55, v56);

    *(_WORD *)(v14 + 18) = 2114;
    swift_errorRetain(v40);
    v57 = _swift_stdlib_bridgeErrorToNSError(v40);
    *(_QWORD *)(v0 + 832) = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 832, v114, v14 + 20);
    *v115 = v57;
    swift_errorRelease(v40);
    swift_errorRelease(v40);
    *(_WORD *)(v14 + 28) = 2112;
    v58 = swift_getKeyPath(&unk_100636280);
    v59 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter((_QWORD *)(v0 + 368), v41, v58, v59);
    swift_release(v59);
    swift_release(v58);
    v60 = *(void **)(v0 + 376);
    v61 = *(_QWORD *)(v0 + 384);
    v62 = *(_QWORD *)(v0 + 408);
    v64 = *(void **)(v0 + 424);
    v63 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 432);
    v66 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 440);
    v65 = *(void **)(v0 + 448);
    swift_release(*(_QWORD *)(v0 + 368));

    swift_release(v61);
    swift_bridgeObjectRelease(v63, v67, v68, v69, v70, v71, v72, v73);
    swift_bridgeObjectRelease(v66, v74, v75, v76, v77, v78, v79, v80);

    *(_QWORD *)(v0 + 848) = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v119, v0 + 856, v14 + 30);
    v115[1] = v62;

    v81 = log;
    _os_log_impl((void *)&_mh_execute_header, log, v118, "Failed to set mute status to %{BOOL}d for friend: %{public}s error: %{public}@ - %@", (uint8_t *)v14, 0x26u);
    v82 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v115, 2, v82);
    swift_slowDealloc(v115, -1, -1);
    swift_arrayDestroy(v116, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v116, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    v81 = *(NSObject **)(v0 + 872);

  }
  v120 = *(_QWORD *)(v0 + 968);
  v83 = *(_QWORD *)(v0 + 944);
  v84 = *(_QWORD *)(v83 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_alertCoordinator);
  v85 = swift_getKeyPath(&unk_100636280);
  v86 = swift_getKeyPath(&unk_1006362A8);
  swift_retain(v84);
  static Published.subscript.getter((_QWORD *)(v0 + 560), v83, v85, v86);
  swift_release(v86);
  swift_release(v85);
  v87 = *(void **)(v0 + 568);
  v88 = *(_QWORD *)(v0 + 576);
  v89 = *(_QWORD *)(v0 + 600);
  v90 = *(void **)(v0 + 616);
  v91 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 624);
  v92 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 632);
  v93 = *(void **)(v0 + 640);
  swift_release(*(_QWORD *)(v0 + 560));

  swift_release(v88);
  swift_bridgeObjectRelease(v91, v94, v95, v96, v97, v98, v99, v100);
  swift_bridgeObjectRelease(v92, v101, v102, v103, v104, v105, v106, v107);

  v108 = swift_getKeyPath(&unk_1006362C8);
  v109 = swift_getKeyPath(&unk_1006362F0);
  *(_QWORD *)(v0 + 792) = v89;
  *(_QWORD *)(v0 + 800) = 0;
  *(_QWORD *)(v0 + 816) = 0;
  *(_QWORD *)(v0 + 808) = 0;
  *(_BYTE *)(v0 + 824) = 1;
  static Published.subscript.setter(v0 + 792, v84, v108, v109);
  swift_errorRelease(v120);
  v110 = *(_QWORD *)(v0 + 904);
  v111 = *(_QWORD *)(v0 + 896);
  v112 = *(_QWORD *)(v0 + 888);
  swift_task_dealloc(*(_QWORD *)(v0 + 912));
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033A2AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[167] = v0;
  v2 = sub_100047110((uint64_t *)&unk_10082E690);
  v1[168] = v2;
  v3 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[169] = swift_task_alloc(v3);
  v1[170] = swift_task_alloc(v3);
  v1[171] = swift_task_alloc(v3);
  v1[172] = swift_task_alloc(v3);
  v4 = type metadata accessor for MainActor(0);
  v1[173] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[174] = v5;
  v1[175] = v6;
  return swift_task_switch(sub_10033A36C, v5, v6);
}

uint64_t sub_10033A36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  void *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  void *v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  void *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  void *v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  void *v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  void *v62;
  SEL v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  SEL v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  CHWorkoutDetailHeartRateTableViewCell *v84;
  void *v85;
  CHWorkoutDetailHeartRateTableViewCell *v86;
  void *v87;
  SEL v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  SEL v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  CHWorkoutDetailHeartRateTableViewCell *v111;
  CHWorkoutDetailHeartRateTableViewCell *v112;
  void *v113;
  SEL v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  SEL v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  CHWorkoutDetailHeartRateTableViewCell *v140;
  CHWorkoutDetailHeartRateTableViewCell *v141;
  void *v142;
  SEL v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  SEL v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 1336)
                 + OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider);
  *(_QWORD *)(v0 + 1408) = v1;
  KeyPath = swift_getKeyPath(&unk_100636280);
  v3 = swift_getKeyPath(&unk_1006362A8);
  static Published.subscript.getter((_QWORD *)(v0 + 80), v1, KeyPath, v3);
  swift_release(v3);
  swift_release(KeyPath);
  v4 = *(void **)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(void **)(v0 + 120);
  v8 = *(void **)(v0 + 136);
  v7 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 144);
  v9 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 152);
  v10 = *(void **)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 80));

  swift_release(v5);
  swift_bridgeObjectRelease(v7, v11, v12, v13, v14, v15, v16, v17);
  swift_bridgeObjectRelease(v9, v18, v19, v20, v21, v22, v23, v24);

  v25 = objc_msgSend(v6, "isMyActivityDataCurrentlyHidden");
  *(_BYTE *)(v0 + 170) = (_BYTE)v25;

  if ((v25 & 1) == 0)
  {
    v26 = swift_getKeyPath(&unk_100636280);
    v27 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter((_QWORD *)(v0 + 176), v1, v26, v27);
    swift_release(v27);
    swift_release(v26);
    v28 = *(void **)(v0 + 184);
    v29 = *(_QWORD *)(v0 + 192);
    v30 = *(void **)(v0 + 216);
    v32 = *(void **)(v0 + 232);
    v31 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 240);
    v33 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 248);
    v34 = *(void **)(v0 + 256);
    swift_release(*(_QWORD *)(v0 + 176));

    swift_release(v29);
    swift_bridgeObjectRelease(v31, v35, v36, v37, v38, v39, v40, v41);
    swift_bridgeObjectRelease(v33, v42, v43, v44, v45, v46, v47, v48);

    LODWORD(v29) = objc_msgSend(v30, "isCompetitionActive");
    if ((_DWORD)v29)
    {
      v49 = v0 + 1176;
      swift_release(*(_QWORD *)(v0 + 1384));
      v51 = static os_log_type_t.default.getter(v50);
      v52 = HKLogActivity;
      os_log(_:dso:log:_:_:)(v51, &_mh_execute_header, v52, "Hiding not allowed; competition active",
        38,
        2,
        _swiftEmptyArrayStorage);

      v53 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_alertCoordinator);
      v54 = swift_getKeyPath(&unk_100636280);
      v55 = swift_getKeyPath(&unk_1006362A8);
      swift_retain(v53);
      static Published.subscript.getter((_QWORD *)(v0 + 368), v1, v54, v55);
      swift_release(v55);
      swift_release(v54);
      v56 = *(void **)(v0 + 376);
      v57 = *(_QWORD *)(v0 + 384);
      v58 = *(_QWORD *)(v0 + 408);
      v60 = *(void **)(v0 + 424);
      v59 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 432);
      v61 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 440);
      v62 = *(void **)(v0 + 448);
      swift_release(*(_QWORD *)(v0 + 368));

      swift_release(v57);
      swift_bridgeObjectRelease(v59, v63, v64, v65, v66, v67, v68, v69);
      swift_bridgeObjectRelease(v61, v70, v71, v72, v73, v74, v75, v76);

      v77 = swift_getKeyPath(&unk_1006362C8);
      v78 = swift_getKeyPath(&unk_1006362F0);
      *(_QWORD *)(v0 + 1176) = v58;
      *(_QWORD *)(v0 + 1184) = 0;
      *(_QWORD *)(v0 + 1200) = 0;
      *(_QWORD *)(v0 + 1192) = 0;
      *(_BYTE *)(v0 + 1208) = 2;
LABEL_6:
      static Published.subscript.setter(v49, v53, v77, v78);
      v128 = *(_QWORD *)(v0 + 1368);
      v129 = *(_QWORD *)(v0 + 1360);
      v130 = *(_QWORD *)(v0 + 1352);
      swift_task_dealloc(*(_QWORD *)(v0 + 1376));
      swift_task_dealloc(v128);
      swift_task_dealloc(v129);
      swift_task_dealloc(v130);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v79 = swift_getKeyPath(&unk_100636280);
    v80 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter((_QWORD *)(v0 + 272), v1, v79, v80);
    swift_release(v80);
    swift_release(v79);
    v81 = *(void **)(v0 + 280);
    v82 = *(_QWORD *)(v0 + 288);
    v83 = *(void **)(v0 + 312);
    v85 = *(void **)(v0 + 328);
    v84 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 336);
    v86 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 344);
    v87 = *(void **)(v0 + 352);
    swift_release(*(_QWORD *)(v0 + 272));

    swift_release(v82);
    swift_bridgeObjectRelease(v84, v88, v89, v90, v91, v92, v93, v94);
    swift_bridgeObjectRelease(v86, v95, v96, v97, v98, v99, v100, v101);

    LODWORD(v82) = objc_msgSend(v83, "hasPendingCompetitionRequestFromMe");
    if ((_DWORD)v82)
    {
      v49 = v0 + 1216;
      swift_release(*(_QWORD *)(v0 + 1384));
      v103 = static os_log_type_t.default.getter(v102);
      v104 = HKLogActivity;
      os_log(_:dso:log:_:_:)(v103, &_mh_execute_header, v104, "Hiding not allowed; competition request pending",
        47,
        2,
        _swiftEmptyArrayStorage);

      v53 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_alertCoordinator);
      v105 = swift_getKeyPath(&unk_100636280);
      v106 = swift_getKeyPath(&unk_1006362A8);
      swift_retain(v53);
      static Published.subscript.getter((_QWORD *)(v0 + 848), v1, v105, v106);
      swift_release(v106);
      swift_release(v105);
      v107 = *(void **)(v0 + 856);
      v108 = *(_QWORD *)(v0 + 864);
      v109 = *(_QWORD *)(v0 + 888);
      v110 = *(void **)(v0 + 904);
      v111 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 912);
      v112 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 920);
      v113 = *(void **)(v0 + 928);
      swift_release(*(_QWORD *)(v0 + 848));

      swift_release(v108);
      swift_bridgeObjectRelease(v111, v114, v115, v116, v117, v118, v119, v120);
      swift_bridgeObjectRelease(v112, v121, v122, v123, v124, v125, v126, v127);

      v77 = swift_getKeyPath(&unk_1006362C8);
      v78 = swift_getKeyPath(&unk_1006362F0);
      *(_QWORD *)(v0 + 1216) = v109;
      *(_QWORD *)(v0 + 1224) = 0;
      *(_QWORD *)(v0 + 1240) = 0;
      *(_QWORD *)(v0 + 1232) = 0;
      *(_BYTE *)(v0 + 1248) = 3;
      goto LABEL_6;
    }
  }
  v132 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendManager);
  *(_QWORD *)(v0 + 1416) = v132;
  v133 = swift_getKeyPath(&unk_100636280);
  v134 = swift_getKeyPath(&unk_1006362A8);
  v157 = v132;
  static Published.subscript.getter((_QWORD *)(v0 + 464), v1, v133, v134);
  swift_release(v134);
  swift_release(v133);
  v135 = *(_QWORD *)(v0 + 464);
  v136 = *(void **)(v0 + 472);
  v137 = *(_QWORD *)(v0 + 480);
  v138 = *(_QWORD *)(v0 + 504);
  *(_QWORD *)(v0 + 1424) = v138;
  v139 = *(void **)(v0 + 520);
  v140 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 528);
  v141 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 536);
  v142 = *(void **)(v0 + 544);
  swift_release(v135);

  swift_release(v137);
  swift_bridgeObjectRelease(v140, v143, v144, v145, v146, v147, v148, v149);
  swift_bridgeObjectRelease(v141, v150, v151, v152, v153, v154, v155, v156);

  *(_QWORD *)(v0 + 56) = v0 + 169;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_10033A9A0;
  *(_QWORD *)(v0 + 1168) = swift_continuation_init(v0 + 16, 1);
  *(_QWORD *)(v0 + 1136) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 1144) = 0x40000000;
  *(_QWORD *)(v0 + 1152) = sub_1003362E4;
  *(_QWORD *)(v0 + 1160) = &unk_100797058;
  objc_msgSend(v157, "setActivityDataVisible:toFriend:completion:", v25, v138, v0 + 1136);
  return swift_continuation_await(v0 + 16);
}

uint64_t sub_10033A9A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 1432) = v2;
  if (v2)
    v3 = sub_10033AE20;
  else
    v3 = sub_10033AA00;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 1392), *(_QWORD *)(v1 + 1400));
}

uint64_t sub_10033AA00()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  os_log_type_t v5;
  NSObject *v6;
  id v7;
  int v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  void *v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  void *v62;
  SEL v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  SEL v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v82;
  uint64_t v83;
  os_log_type_t v84;
  NSObject *log;
  uint64_t v86;

  v1 = *(void **)(v0 + 1424);
  v2 = *(void **)(v0 + 1416);
  v3 = *(void **)(v0 + 1336);
  swift_release(*(_QWORD *)(v0 + 1384));

  v5 = static os_log_type_t.default.getter(v4);
  v6 = HKLogActivity;
  v7 = v3;
  if (os_log_type_enabled(v6, v5))
  {
    v84 = v5;
    v8 = *(unsigned __int8 *)(v0 + 170);
    v9 = *(_QWORD *)(v0 + 1408);
    v10 = *(id *)(v0 + 1336);
    log = v6;
    v11 = swift_slowAlloc(28, -1);
    v82 = (_QWORD *)swift_slowAlloc(8, -1);
    v83 = swift_slowAlloc(32, -1);
    v86 = v83;
    *(_DWORD *)v11 = 67109634;
    *(_DWORD *)(v0 + 268) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 268, v0 + 272, v11 + 4);
    *(_WORD *)(v11 + 8) = 2082;
    KeyPath = swift_getKeyPath(&unk_100636280);
    v13 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter((_QWORD *)(v0 + 560), v9, KeyPath, v13);
    swift_release(v13);
    swift_release(KeyPath);
    v14 = *(void **)(v0 + 568);
    v15 = *(_QWORD *)(v0 + 576);
    v16 = *(void **)(v0 + 600);
    v17 = *(void **)(v0 + 616);
    v18 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 624);
    v19 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 632);
    v20 = *(void **)(v0 + 640);
    swift_release(*(_QWORD *)(v0 + 560));

    swift_release(v15);
    swift_bridgeObjectRelease(v18, v21, v22, v23, v24, v25, v26, v27);
    swift_bridgeObjectRelease(v19, v28, v29, v30, v31, v32, v33, v34);

    v35 = objc_msgSend(v16, "UUID");
    if (v35)
    {
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v35);

      v36 = 0;
    }
    else
    {
      v36 = 1;
    }
    v38 = *(_QWORD *)(v0 + 1408);
    v39 = *(_QWORD *)(v0 + 1376);
    v40 = *(_QWORD *)(v0 + 1368);
    v41 = *(_QWORD *)(v0 + 1344);
    v42 = *(void **)(v0 + 1336);
    v43 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v40, v36, 1, v43);
    sub_100218188(v40, v39);
    v44 = Optional.description.getter(v41);
    v46 = v45;
    sub_10004D914(v39);
    *(_QWORD *)(v0 + 1304) = sub_10003E8EC(v44, (unint64_t)v46, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1304, v0 + 1312, v11 + 10);
    swift_bridgeObjectRelease(v46, v47, v48, v49, v50, v51, v52, v53);

    *(_WORD *)(v11 + 18) = 2112;
    v54 = swift_getKeyPath(&unk_100636280);
    v55 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter((_QWORD *)(v0 + 944), v38, v54, v55);
    swift_release(v55);
    swift_release(v54);
    v56 = *(void **)(v0 + 952);
    v57 = *(_QWORD *)(v0 + 960);
    v58 = *(_QWORD *)(v0 + 984);
    v59 = *(void **)(v0 + 1000);
    v60 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 1008);
    v61 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 1016);
    v62 = *(void **)(v0 + 1024);
    swift_release(*(_QWORD *)(v0 + 944));

    swift_release(v57);
    swift_bridgeObjectRelease(v60, v63, v64, v65, v66, v67, v68, v69);
    swift_bridgeObjectRelease(v61, v70, v71, v72, v73, v74, v75, v76);

    *(_QWORD *)(v0 + 1320) = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1320, v0 + 1328, v11 + 20);
    *v82 = v58;

    v37 = log;
    _os_log_impl((void *)&_mh_execute_header, log, v84, "Successfully set hiding status to %{BOOL}d for friend: %{public}s - %@", (uint8_t *)v11, 0x1Cu);
    v77 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v82, 1, v77);
    swift_slowDealloc(v82, -1, -1);
    swift_arrayDestroy(v83, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v83, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    v37 = *(NSObject **)(v0 + 1336);

  }
  v78 = *(_QWORD *)(v0 + 1368);
  v79 = *(_QWORD *)(v0 + 1360);
  v80 = *(_QWORD *)(v0 + 1352);
  swift_task_dealloc(*(_QWORD *)(v0 + 1376));
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033AE20()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  NSObject *v8;
  id v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  void *v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  void *v69;
  SEL v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  SEL v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  CHWorkoutDetailHeartRateTableViewCell *v93;
  CHWorkoutDetailHeartRateTableViewCell *v94;
  void *v95;
  SEL v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  SEL v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v116;
  uint64_t v117;
  NSObject *log;
  os_log_type_t v119;
  uint64_t v120;
  uint64_t v121;

  v1 = *(void **)(v0 + 1424);
  v2 = *(void **)(v0 + 1416);
  v3 = (id *)(v0 + 1336);
  v4 = *(void **)(v0 + 1336);
  swift_release(*(_QWORD *)(v0 + 1384));
  swift_willThrow(v5);

  v7 = static os_log_type_t.default.getter(v6);
  v8 = HKLogActivity;
  v9 = v4;
  if (os_log_type_enabled(v8, v7))
  {
    v119 = v7;
    v10 = *(_QWORD *)(v0 + 1432);
    v11 = *(unsigned __int8 *)(v0 + 170);
    v12 = *(_QWORD *)(v0 + 1408);
    v13 = *(id *)(v0 + 1336);
    swift_errorRetain(v10);
    v14 = v13;
    swift_errorRetain(v10);
    log = v8;
    v15 = swift_slowAlloc(38, -1);
    v116 = (uint64_t *)swift_slowAlloc(16, -1);
    v16 = swift_slowAlloc(32, -1);
    *(_DWORD *)(v0 + 172) = v11;
    v117 = v16;
    v121 = v16;
    *(_DWORD *)v15 = 67109890;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 172, v0 + 176, v15 + 4);
    *(_WORD *)(v15 + 8) = 2082;
    KeyPath = swift_getKeyPath(&unk_100636280);
    v18 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter((_QWORD *)(v0 + 1040), v12, KeyPath, v18);
    swift_release(v18);
    swift_release(KeyPath);
    v19 = *(void **)(v0 + 1048);
    v20 = *(_QWORD *)(v0 + 1056);
    v21 = *(void **)(v0 + 1080);
    v22 = *(void **)(v0 + 1096);
    v23 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 1104);
    v24 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 1112);
    v25 = *(void **)(v0 + 1120);
    swift_release(*(_QWORD *)(v0 + 1040));

    swift_release(v20);
    swift_bridgeObjectRelease(v23, v26, v27, v28, v29, v30, v31, v32);
    swift_bridgeObjectRelease(v24, v33, v34, v35, v36, v37, v38, v39);

    v40 = objc_msgSend(v21, "UUID");
    if (v40)
    {
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v40);

      v41 = 0;
    }
    else
    {
      v41 = 1;
    }
    v43 = *(_QWORD *)(v0 + 1432);
    v44 = *(_QWORD *)(v0 + 1408);
    v45 = *(_QWORD *)(v0 + 1360);
    v46 = *(_QWORD *)(v0 + 1352);
    v47 = *(_QWORD *)(v0 + 1344);
    v48 = *(void **)(v0 + 1336);
    v49 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v46, v41, 1, v49);
    sub_100218188(v46, v45);
    v50 = Optional.description.getter(v47);
    v52 = v51;
    sub_10004D914(v45);
    *(_QWORD *)(v0 + 1296) = sub_10003E8EC(v50, (unint64_t)v52, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1296, v0 + 1304, v15 + 10);
    swift_bridgeObjectRelease(v52, v53, v54, v55, v56, v57, v58, v59);

    *(_WORD *)(v15 + 18) = 2114;
    swift_errorRetain(v43);
    v60 = _swift_stdlib_bridgeErrorToNSError(v43);
    *(_QWORD *)(v0 + 1328) = v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1328, v0 + 1336, v15 + 20);
    *v116 = v60;
    swift_errorRelease(v43);
    swift_errorRelease(v43);
    *(_WORD *)(v15 + 28) = 2112;
    v61 = swift_getKeyPath(&unk_100636280);
    v62 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter((_QWORD *)(v0 + 656), v44, v61, v62);
    swift_release(v62);
    swift_release(v61);
    v63 = *(void **)(v0 + 664);
    v64 = *(_QWORD *)(v0 + 672);
    v65 = *(_QWORD *)(v0 + 696);
    v66 = *(void **)(v0 + 712);
    v67 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 720);
    v68 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 728);
    v69 = *(void **)(v0 + 736);
    swift_release(*(_QWORD *)(v0 + 656));

    swift_release(v64);
    swift_bridgeObjectRelease(v67, v70, v71, v72, v73, v74, v75, v76);
    swift_bridgeObjectRelease(v68, v77, v78, v79, v80, v81, v82, v83);

    *(_QWORD *)(v0 + 1312) = v65;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1312, v0 + 1320, v15 + 30);
    v116[1] = v65;

    v42 = log;
    _os_log_impl((void *)&_mh_execute_header, log, v119, "Failed to set hiding status to %{BOOL}d for friend: %{public}s error: %{public}@ - %@", (uint8_t *)v15, 0x26u);
    v84 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v116, 2, v84);
    swift_slowDealloc(v116, -1, -1);
    swift_arrayDestroy(v117, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v117, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    v42 = *v3;

  }
  v120 = *(_QWORD *)(v0 + 1432);
  v85 = *(_QWORD *)(v0 + 1408);
  v86 = *(_QWORD *)(v85 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_alertCoordinator);
  v87 = swift_getKeyPath(&unk_100636280);
  v88 = swift_getKeyPath(&unk_1006362A8);
  swift_retain(v86);
  static Published.subscript.getter((_QWORD *)(v0 + 752), v85, v87, v88);
  swift_release(v88);
  swift_release(v87);
  v89 = *(void **)(v0 + 760);
  v90 = *(_QWORD *)(v0 + 768);
  v91 = *(_QWORD *)(v0 + 792);
  v92 = *(void **)(v0 + 808);
  v93 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 816);
  v94 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 824);
  v95 = *(void **)(v0 + 832);
  swift_release(*(_QWORD *)(v0 + 752));

  swift_release(v90);
  swift_bridgeObjectRelease(v93, v96, v97, v98, v99, v100, v101, v102);
  swift_bridgeObjectRelease(v94, v103, v104, v105, v106, v107, v108, v109);

  v110 = swift_getKeyPath(&unk_1006362C8);
  v111 = swift_getKeyPath(&unk_1006362F0);
  *(_QWORD *)(v0 + 1256) = v91;
  *(_QWORD *)(v0 + 1264) = 0;
  *(_QWORD *)(v0 + 1280) = 0;
  *(_QWORD *)(v0 + 1272) = 0;
  *(_BYTE *)(v0 + 1288) = 4;
  static Published.subscript.setter(v0 + 1256, v86, v110, v111);
  swift_errorRelease(v120);
  v112 = *(_QWORD *)(v0 + 1368);
  v113 = *(_QWORD *)(v0 + 1360);
  v114 = *(_QWORD *)(v0 + 1352);
  swift_task_dealloc(*(_QWORD *)(v0 + 1376));
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033B3F0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1[16] = v0;
  v2 = type metadata accessor for ActivitySharingSettings(0);
  v1[17] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[18] = v3;
  v1[19] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0);
  v1[20] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[21] = swift_task_alloc(v5);
  v1[22] = swift_task_alloc(v5);
  v6 = type metadata accessor for MainActor(0);
  v1[23] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v1[24] = v7;
  v1[25] = v8;
  return swift_task_switch(sub_10033B4B8, v7, v8);
}

uint64_t sub_10033B4B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0[16] + OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider);
  v2 = OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_fitnessAppContext;
  v0[26] = v1;
  v0[27] = v2;
  return swift_task_switch(sub_10033B4E8, v1, 0);
}

uint64_t sub_10033B4E8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(v0[26] + v0[27]);
  v0[28] = v1;
  v2 = v0[24];
  v3 = v0[25];
  v4 = v1;
  return swift_task_switch(sub_10033B530, v2, v3);
}

uint64_t sub_10033B530()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;

  v1 = (void *)v0[28];
  v2 = v0[26];
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[18] + 16))(v0[19], (uint64_t)v1 + OBJC_IVAR___CHFitnessAppContext_activitySharingSettings, v0[17]);

  return swift_task_switch(sub_10033B590, v2, 0);
}

uint64_t sub_10033B590()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(v0[26] + v0[27]);
  v0[29] = v1;
  v2 = v0[24];
  v3 = v0[25];
  v4 = v1;
  return swift_task_switch(sub_10033B5D8, v2, v3);
}

uint64_t sub_10033B5D8()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t KeyPath;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  void *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;

  v1 = *(char **)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(int **)(v0 + 160);
  v40 = *(_QWORD *)(v0 + 152);
  v41 = *(_QWORD *)(v0 + 168);
  v38 = *(_QWORD *)(v0 + 144);
  v39 = *(_QWORD *)(v0 + 136);
  v42 = *(id *)(v0 + 128);
  swift_release(*(_QWORD *)(v0 + 184));
  v37 = *(id *)&v1[OBJC_IVAR___CHFitnessAppContext_cloudDeviceProvider];

  KeyPath = swift_getKeyPath(&unk_100636280);
  v6 = swift_getKeyPath(&unk_1006362A8);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v2, KeyPath, v6);
  swift_release(v6);
  swift_release(KeyPath);
  v7 = *(void **)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(void **)(v0 + 72);
  v11 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 80);
  v13 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 88);
  v12 = *(void **)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(v8);
  swift_bridgeObjectRelease(v11, v14, v15, v16, v17, v18, v19, v20);
  swift_bridgeObjectRelease(v13, v21, v22, v23, v24, v25, v26, v27);

  *(_BYTE *)(v0 + 105) = 0;
  State.init(wrappedValue:)((_QWORD *)(v0 + 112), v0 + 105, &type metadata for Bool);
  v28 = *(_QWORD *)(v0 + 120);
  *(_BYTE *)v3 = *(_BYTE *)(v0 + 112);
  *(_QWORD *)(v3 + 8) = v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v3 + v4[5], v40, v39);
  *(_QWORD *)(v3 + v4[6]) = v37;
  *(_QWORD *)(v3 + v4[7]) = v9;
  sub_10033CF54(v3, v41);
  v29 = objc_allocWithZone((Class)sub_100047110(&qword_10082EEA8));
  v30 = (void *)UIHostingController.init(rootView:)(v41);
  v31 = objc_msgSend(v42, "navigationController");
  v32 = *(_QWORD *)(v0 + 176);
  if (v31)
  {
    v33 = v31;
    objc_msgSend(v31, "presentViewController:animated:completion:", v30, 1, 0);

    sub_10033CF98(v32);
  }
  else
  {
    sub_10033CF98(*(_QWORD *)(v0 + 176));

  }
  v34 = *(_QWORD *)(v0 + 168);
  v35 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033B7F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 56) = v0;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 64) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10033B860, v3, v4);
}

uint64_t sub_10033B860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 64));
  v2 = swift_allocObject(&unk_100797028, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v1);
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider)
                 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_alertCoordinator);
  KeyPath = swift_getKeyPath(&unk_1006362C8);
  v5 = swift_getKeyPath(&unk_1006362F0);
  *(_QWORD *)(v0 + 16) = &unk_10082EE98;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 24) = v2;
  *(_BYTE *)(v0 + 48) = 5;
  swift_retain(v3);
  static Published.subscript.setter(v0 + 16, v3, KeyPath, v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033B93C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[100] = a1;
  v2 = sub_100047110((uint64_t *)&unk_10082E690);
  v1[101] = v2;
  v3 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[102] = swift_task_alloc(v3);
  v1[103] = swift_task_alloc(v3);
  v1[104] = swift_task_alloc(v3);
  v1[105] = swift_task_alloc(v3);
  v4 = type metadata accessor for MainActor(0);
  v1[106] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[107] = v5;
  v1[108] = v6;
  return swift_task_switch(sub_10033B9FC, v5, v6);
}

uint64_t sub_10033B9FC()
{
  uint64_t v0;
  uint64_t v1;
  char *Strong;
  char *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t KeyPath;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  void *v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 800) + 16;
  swift_beginAccess(v1, v0 + 736, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 872) = Strong;
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "navigationController");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, "popViewControllerAnimated:", 1);

    }
    v7 = OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider;
    *(_QWORD *)(v0 + 880) = OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider;
    v8 = *(_QWORD *)&v3[v7];
    v9 = *(void **)(v8 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendManager);
    *(_QWORD *)(v0 + 888) = v9;
    KeyPath = swift_getKeyPath(&unk_100636280);
    v11 = swift_getKeyPath(&unk_1006362A8);
    v12 = v9;
    static Published.subscript.getter((_QWORD *)(v0 + 272), v8, KeyPath, v11);
    swift_release(v11);
    swift_release(KeyPath);
    v13 = *(_QWORD *)(v0 + 272);
    v14 = *(void **)(v0 + 280);
    v15 = *(_QWORD *)(v0 + 288);
    v16 = *(_QWORD *)(v0 + 312);
    *(_QWORD *)(v0 + 896) = v16;
    v17 = *(void **)(v0 + 328);
    v18 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 336);
    v19 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 344);
    v20 = *(void **)(v0 + 352);
    swift_release(v13);

    swift_release(v15);
    swift_bridgeObjectRelease(v18, v21, v22, v23, v24, v25, v26, v27);
    swift_bridgeObjectRelease(v19, v28, v29, v30, v31, v32, v33, v34);

    *(_QWORD *)(v0 + 56) = v0 + 169;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_10033BC3C;
    *(_QWORD *)(v0 + 688) = swift_continuation_init(v0 + 16, 1);
    *(_QWORD *)(v0 + 656) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 664) = 0x40000000;
    *(_QWORD *)(v0 + 672) = sub_1003362E4;
    *(_QWORD *)(v0 + 680) = &unk_100797040;
    objc_msgSend(v12, "removeFriend:completion:", v16, v0 + 656);
    return swift_continuation_await(v0 + 16);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 848));
    v36 = *(_QWORD *)(v0 + 832);
    v37 = *(_QWORD *)(v0 + 824);
    v38 = *(_QWORD *)(v0 + 816);
    swift_task_dealloc(*(_QWORD *)(v0 + 840));
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10033BC3C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 904) = v2;
  if (v2)
    v3 = sub_10033C0A0;
  else
    v3 = sub_10033BC9C;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 856), *(_QWORD *)(v1 + 864));
}

uint64_t sub_10033BC9C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  os_log_type_t v5;
  NSObject *v6;
  id v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  void *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  void *v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v84;
  uint64_t v85;
  os_log_type_t v86;
  NSObject *log;
  uint64_t v88;

  v1 = *(void **)(v0 + 896);
  v2 = *(void **)(v0 + 888);
  v3 = *(void **)(v0 + 872);
  swift_release(*(_QWORD *)(v0 + 848));

  v5 = static os_log_type_t.default.getter(v4);
  v6 = HKLogActivity;
  v7 = v3;
  if (os_log_type_enabled(v6, v5))
  {
    v86 = v5;
    v8 = *(_QWORD *)(v0 + 880);
    v9 = *(char **)(v0 + 872);
    v10 = v9;
    log = v6;
    v11 = swift_slowAlloc(22, -1);
    v84 = (_QWORD *)swift_slowAlloc(8, -1);
    v85 = swift_slowAlloc(32, -1);
    v88 = v85;
    *(_DWORD *)v11 = 136446466;
    v12 = *(_QWORD *)&v9[v8];
    KeyPath = swift_getKeyPath(&unk_100636280);
    v14 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter((_QWORD *)(v0 + 368), v12, KeyPath, v14);
    swift_release(v14);
    swift_release(KeyPath);
    v15 = *(void **)(v0 + 376);
    v16 = *(_QWORD *)(v0 + 384);
    v17 = *(void **)(v0 + 408);
    v18 = *(void **)(v0 + 424);
    v19 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 432);
    v21 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 440);
    v20 = *(void **)(v0 + 448);
    swift_release(*(_QWORD *)(v0 + 368));

    swift_release(v16);
    swift_bridgeObjectRelease(v19, v22, v23, v24, v25, v26, v27, v28);
    swift_bridgeObjectRelease(v21, v29, v30, v31, v32, v33, v34, v35);

    v36 = objc_msgSend(v17, "UUID");
    if (v36)
    {
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v36);

      v37 = 0;
    }
    else
    {
      v37 = 1;
    }
    v39 = *(_QWORD *)(v0 + 880);
    v40 = *(char **)(v0 + 872);
    v41 = *(_QWORD *)(v0 + 840);
    v42 = *(_QWORD *)(v0 + 832);
    v43 = *(_QWORD *)(v0 + 808);
    v44 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v42, v37, 1, v44);
    sub_100218188(v42, v41);
    v45 = Optional.description.getter(v43);
    v47 = v46;
    sub_10004D914(v41);
    *(_QWORD *)(v0 + 784) = sub_10003E8EC(v45, (unint64_t)v47, &v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 784, v0 + 792, v11 + 4);
    swift_bridgeObjectRelease(v47, v48, v49, v50, v51, v52, v53, v54);

    *(_WORD *)(v11 + 12) = 2112;
    v55 = *(_QWORD *)&v40[v39];
    v56 = swift_getKeyPath(&unk_100636280);
    v57 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter((_QWORD *)(v0 + 176), v55, v56, v57);
    swift_release(v57);
    swift_release(v56);
    v58 = *(void **)(v0 + 184);
    v59 = *(_QWORD *)(v0 + 192);
    v60 = *(_QWORD *)(v0 + 216);
    v61 = *(void **)(v0 + 232);
    v62 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 240);
    v64 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 248);
    v63 = *(void **)(v0 + 256);
    swift_release(*(_QWORD *)(v0 + 176));

    swift_release(v59);
    swift_bridgeObjectRelease(v62, v65, v66, v67, v68, v69, v70, v71);
    swift_bridgeObjectRelease(v64, v72, v73, v74, v75, v76, v77, v78);

    *(_QWORD *)(v0 + 792) = v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 792, v0 + 800, v11 + 14);
    *v84 = v60;

    _os_log_impl((void *)&_mh_execute_header, log, v86, "Successfully removed friend: %{public}s - %@", (uint8_t *)v11, 0x16u);
    v79 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v84, 1, v79);
    swift_slowDealloc(v84, -1, -1);
    swift_arrayDestroy(v85, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v85, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {
    v38 = *(void **)(v0 + 872);

  }
  v80 = *(_QWORD *)(v0 + 832);
  v81 = *(_QWORD *)(v0 + 824);
  v82 = *(_QWORD *)(v0 + 816);
  swift_task_dealloc(*(_QWORD *)(v0 + 840));
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033C0A0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  NSObject *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  void *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  void *v69;
  SEL v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  SEL v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  CHWorkoutDetailHeartRateTableViewCell *v94;
  void *v95;
  CHWorkoutDetailHeartRateTableViewCell *v96;
  SEL v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  SEL v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v117;
  uint64_t v118;
  NSObject *log;
  os_log_type_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v1 = *(void **)(v0 + 896);
  v2 = *(void **)(v0 + 888);
  v3 = *(void **)(v0 + 872);
  swift_release(*(_QWORD *)(v0 + 848));
  swift_willThrow(v4);

  v6 = static os_log_type_t.default.getter(v5);
  v7 = HKLogActivity;
  v8 = v3;
  if (os_log_type_enabled(v7, v6))
  {
    v120 = v6;
    v121 = v0 + 776;
    v122 = v0 + 768;
    v9 = *(_QWORD *)(v0 + 904);
    v10 = *(_QWORD *)(v0 + 880);
    v11 = *(char **)(v0 + 872);
    v12 = v11;
    swift_errorRetain(v9);
    v13 = v12;
    swift_errorRetain(v9);
    log = v7;
    v14 = swift_slowAlloc(32, -1);
    v117 = (uint64_t *)swift_slowAlloc(16, -1);
    v118 = swift_slowAlloc(32, -1);
    v124 = v118;
    *(_DWORD *)v14 = 136446722;
    v15 = *(_QWORD *)&v11[v10];
    KeyPath = swift_getKeyPath(&unk_100636280);
    v17 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter((_QWORD *)(v0 + 464), v15, KeyPath, v17);
    swift_release(v17);
    swift_release(KeyPath);
    v18 = *(void **)(v0 + 472);
    v19 = *(_QWORD *)(v0 + 480);
    v20 = *(void **)(v0 + 504);
    v21 = *(void **)(v0 + 520);
    v22 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 528);
    v23 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 536);
    v24 = *(void **)(v0 + 544);
    swift_release(*(_QWORD *)(v0 + 464));

    swift_release(v19);
    swift_bridgeObjectRelease(v22, v25, v26, v27, v28, v29, v30, v31);
    swift_bridgeObjectRelease(v23, v32, v33, v34, v35, v36, v37, v38);

    v39 = objc_msgSend(v20, "UUID");
    if (v39)
    {
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v39);

      v40 = 0;
    }
    else
    {
      v40 = 1;
    }
    v42 = *(_QWORD *)(v0 + 904);
    v43 = *(_QWORD *)(v0 + 880);
    v44 = *(char **)(v0 + 872);
    v45 = *(_QWORD *)(v0 + 824);
    v46 = *(_QWORD *)(v0 + 816);
    v47 = *(_QWORD *)(v0 + 808);
    v48 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v46, v40, 1, v48);
    sub_100218188(v46, v45);
    v49 = Optional.description.getter(v47);
    v51 = v50;
    sub_10004D914(v45);
    *(_QWORD *)(v0 + 776) = sub_10003E8EC(v49, (unint64_t)v51, &v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v121, v0 + 784, v14 + 4);
    swift_bridgeObjectRelease(v51, v52, v53, v54, v55, v56, v57, v58);

    *(_WORD *)(v14 + 12) = 2114;
    swift_errorRetain(v42);
    v59 = _swift_stdlib_bridgeErrorToNSError(v42);
    *(_QWORD *)(v0 + 760) = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 760, v122, v14 + 14);
    *v117 = v59;
    swift_errorRelease(v42);
    swift_errorRelease(v42);
    *(_WORD *)(v14 + 22) = 2112;
    v60 = *(_QWORD *)&v44[v43];
    v61 = swift_getKeyPath(&unk_100636280);
    v62 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter((_QWORD *)(v0 + 560), v60, v61, v62);
    swift_release(v62);
    swift_release(v61);
    v63 = *(void **)(v0 + 568);
    v64 = *(_QWORD *)(v0 + 576);
    v65 = *(_QWORD *)(v0 + 600);
    v66 = *(void **)(v0 + 616);
    v67 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 624);
    v68 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 632);
    v69 = *(void **)(v0 + 640);
    swift_release(*(_QWORD *)(v0 + 560));

    swift_release(v64);
    swift_bridgeObjectRelease(v67, v70, v71, v72, v73, v74, v75, v76);
    swift_bridgeObjectRelease(v68, v77, v78, v79, v80, v81, v82, v83);

    *(_QWORD *)(v0 + 768) = v65;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v122, v121, v14 + 24);
    v117[1] = v65;

    v41 = log;
    _os_log_impl((void *)&_mh_execute_header, log, v120, "Failed to remove friend: %{public}s error: %{public}@ - %@", (uint8_t *)v14, 0x20u);
    v84 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v117, 2, v84);
    swift_slowDealloc(v117, -1, -1);
    swift_arrayDestroy(v118, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v118, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    v41 = *(NSObject **)(v0 + 872);

  }
  v85 = *(char **)(v0 + 872);
  v86 = *(_QWORD *)&v85[*(_QWORD *)(v0 + 880)];
  v123 = *(_QWORD *)(v0 + 904);
  v87 = *(_QWORD *)(v86 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_alertCoordinator);
  v88 = swift_getKeyPath(&unk_100636280);
  v89 = swift_getKeyPath(&unk_1006362A8);
  swift_retain(v87);
  static Published.subscript.getter((_QWORD *)(v0 + 80), v86, v88, v89);
  swift_release(v89);
  swift_release(v88);
  v90 = *(void **)(v0 + 88);
  v91 = *(_QWORD *)(v0 + 96);
  v92 = *(_QWORD *)(v0 + 120);
  v93 = *(void **)(v0 + 136);
  v94 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 144);
  v96 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 152);
  v95 = *(void **)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 80));

  swift_release(v91);
  swift_bridgeObjectRelease(v94, v97, v98, v99, v100, v101, v102, v103);
  swift_bridgeObjectRelease(v96, v104, v105, v106, v107, v108, v109, v110);

  v111 = swift_getKeyPath(&unk_1006362C8);
  v112 = swift_getKeyPath(&unk_1006362F0);
  *(_QWORD *)(v0 + 696) = v92;
  *(_QWORD *)(v0 + 704) = 0;
  *(_QWORD *)(v0 + 720) = 0;
  *(_QWORD *)(v0 + 712) = 0;
  *(_BYTE *)(v0 + 728) = 6;
  static Published.subscript.setter(v0 + 696, v87, v111, v112);

  swift_errorRelease(v123);
  v113 = *(_QWORD *)(v0 + 832);
  v114 = *(_QWORD *)(v0 + 824);
  v115 = *(_QWORD *)(v0 + 816);
  swift_task_dealloc(*(_QWORD *)(v0 + 840));
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10033C628()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  id v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double Width;
  id v25;
  _QWORD v27[12];
  CGRect v28;

  v1 = objc_msgSend(objc_allocWithZone((Class)UITextView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider);
  KeyPath = swift_getKeyPath(&unk_100636280);
  v4 = swift_getKeyPath(&unk_1006362A8);
  static Published.subscript.getter(v27, v2, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v27[0];
  v6 = (void *)v27[1];
  v7 = v27[2];
  v8 = (void *)v27[5];
  v10 = (void *)v27[7];
  v9 = v27[8];
  v11 = (void *)v27[10];
  swift_bridgeObjectRelease(v27[9]);
  swift_bridgeObjectRelease(v9);

  swift_release(v7);
  swift_release(v5);

  objc_msgSend(v1, "setAttributedText:", v11);
  objc_msgSend(v1, "setScrollEnabled:", 0);
  objc_msgSend(v1, "setEditable:", 0);
  objc_msgSend(v1, "_setInteractiveTextSelectionDisabled:", 1);
  objc_msgSend(v1, "textContainerInset");
  v13 = v12;
  objc_msgSend(v1, "textContainerInset");
  objc_msgSend(v1, "setTextContainerInset:", v13, 16.0, v14, 16.0);
  v15 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v15, "bounds");
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;

  v28.origin.x = v17;
  v28.origin.y = v19;
  v28.size.width = v21;
  v28.size.height = v23;
  Width = CGRectGetWidth(v28);
  v25 = v1;
  objc_msgSend(v25, "systemLayoutSizeFittingSize:", Width, INFINITY);
  objc_msgSend(v25, "frame");
  objc_msgSend(v25, "setFrame:");

  return v25;
}

void sub_10033C874(char a1, char *a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;

  v7 = *(_QWORD *)&a2[OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider];
  objc_allocWithZone((Class)a3(0));
  v8 = swift_retain(v7);
  v11 = (id)a4(v8);
  v9 = objc_msgSend(a2, "navigationController");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "pushViewController:animated:", v11, a1 & 1);

  }
}

void sub_10033C91C(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  void **v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  char *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  void *v59;
  id v60;
  id v61;
  char *v62;
  void *v63;
  id v64;
  void *v65;
  id v66;
  void *v67;
  id v68;
  void *v69;
  void *v70;
  id v71;
  id v72;
  id v74;
  void *v76;
  id v77;
  void **aBlock;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  void *v81;
  id (*v82)();
  void *v83;
  void *v84;
  CHWorkoutDetailHeartRateTableViewCell *v85;
  CHWorkoutDetailHeartRateTableViewCell *v86;
  id v87;

  v11 = *(_QWORD *)(v6 + OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider);
  KeyPath = swift_getKeyPath(&unk_100636280);
  v13 = swift_getKeyPath(&unk_1006362A8);
  static Published.subscript.getter(&aBlock, v11, KeyPath, v13);
  swift_release(KeyPath);
  swift_release(v13);
  v15 = aBlock;
  v14 = (void *)v79;
  v16 = v80;
  v77 = v83;
  v17 = v84;
  v18 = v85;
  v19 = v86;

  swift_bridgeObjectRelease(v19, v20, v21, v22, v23, v24, v25, v26);
  swift_bridgeObjectRelease(v18, v27, v28, v29, v30, v31, v32, v33);
  swift_release(v16);

  swift_release(v15);
  v34 = *(void **)(v11 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_healthStore);
  v35 = *(void **)(v11 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendListSectionManager);
  v36 = *(void **)(v11 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_awardsDataProvider);
  v37 = *(void **)(v11
                 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementBadgeImageFactory);
  v38 = *(void **)(v11
                 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementResourceProvider);
  v39 = *(void **)(v11 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_fiuiFormattingManager);
  v40 = *(void **)(v11
                 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementLocalizationProvider);
  v41 = *(void **)(v11 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_pauseRingsCoordinator);
  v42 = *(void **)(v11 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_fitnessAppContext);
  v70 = *(void **)(v11 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_workoutFormattingManager);
  v43 = *(void **)(v11 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_workoutDataProvider);
  v74 = a1;
  v72 = v34;
  v71 = v35;
  v44 = v36;
  v45 = v37;
  v46 = v38;
  v47 = v39;
  v48 = v40;
  v49 = v41;
  v50 = v42;
  v51 = v70;
  v52 = v43;
  LOBYTE(v35) = objc_msgSend(v77, "isMe") ^ 1;
  v53 = (char *)objc_allocWithZone((Class)type metadata accessor for TrophyCaseAwardDetailViewController());
  v54 = sub_100319B20(v74, v72, v71, (uint64_t)v44, v45, v46, v47, v48, v49, v50, v51, v52, 0, 0, 1, 0, (char)v35, v53);
  v55 = swift_allocObject(&unk_100796F88, 24, 7);
  *(_QWORD *)(v55 + 16) = a2;
  v56 = swift_allocObject(&unk_100796FB0, 24, 7);
  *(_QWORD *)(v56 + 16) = a2;
  v57 = objc_allocWithZone((Class)AAUIAchievementDetailTransitionAnimator);
  v82 = sub_1002185F4;
  v83 = (void *)v55;
  aBlock = _NSConcreteStackBlock;
  v79 = 1107296256;
  v80 = sub_10002D0F8;
  v81 = &unk_100796FC8;
  v58 = _Block_copy(&aBlock);
  v59 = v83;
  v60 = a2;
  v61 = v54;
  swift_retain(v55);
  swift_retain(v56);
  v62 = v76;
  swift_release(v59);
  v82 = sub_100218610;
  v83 = (void *)v56;
  aBlock = _NSConcreteStackBlock;
  v79 = 1107296256;
  v80 = sub_10002D0F8;
  v81 = &unk_100796FF0;
  v63 = _Block_copy(&aBlock);
  swift_release(v83);
  v64 = objc_msgSend(v57, "initWithPresentingViewController:detailViewController:shouldPlayFlipInAnimation:initialBadgeFrame:conversionView:didStartAnimationBlock:didFinishAnimationBlock:", v62, v61, 1, v60, v58, v63, a3, a4, a5, a6);

  _Block_release(v63);
  _Block_release(v58);
  v65 = *(void **)&v62[OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_achievementTransitionAnimator];
  *(_QWORD *)&v62[OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_achievementTransitionAnimator] = v64;

  v66 = objc_msgSend(v62, "navigationController");
  if (v66)
  {
    v67 = v66;
    objc_msgSend(v66, "setDelegate:", v62);

  }
  v68 = objc_msgSend(v62, "navigationController");
  if (v68)
  {
    v69 = v68;
    objc_msgSend(v68, "pushViewController:animated:", v61, 1);

  }
  swift_release(v56);
  swift_release(v55);
}

id sub_10033CDF4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivitySharingFriendDetailViewController()
{
  return objc_opt_self(_TtC10FitnessApp41ActivitySharingFriendDetailViewController);
}

uint64_t sub_10033CEBC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10033CEE0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10033CF04()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10082EE94);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1000EA380;
  return sub_10033B93C(v0);
}

uint64_t sub_10033CF54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10033CF98(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_10033CFD4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "dismissViewControllerAnimated:completion:", 1, 0);
}

_QWORD *sub_10033CFEC(CHWorkoutDetailHeartRateTableViewCell *a1, uint64_t a2)
{
  _QWORD *result;
  __n128 v4;
  uint64_t i;
  uint64_t v6;
  const char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  void *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[13];
  _QWORD *v42;

  result = _swiftEmptyArrayStorage;
  v42 = _swiftEmptyArrayStorage;
  v39 = *(_QWORD *)a1->cellPadding;
  if (v39)
  {
    v38 = OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider;
    v4 = swift_bridgeObjectRetain(a1);
    for (i = 0; i != v39; ++i)
    {
      v6 = *((char *)&a1[1].super.super.super.super.isa + i);
      if (v6 != 3 || os_variant_has_internal_ui("com.apple.Fitness.ActivitySharing", v4))
      {
        v14 = *(_QWORD *)(a2 + v38);
        KeyPath = swift_getKeyPath(&unk_100636280);
        v16 = swift_getKeyPath(&unk_1006362A8);
        static Published.subscript.getter(v41, v14, KeyPath, v16);
        swift_release(v16);
        swift_release(KeyPath);
        v17 = (void *)v41[1];
        v18 = v41[2];
        v19 = (void *)v41[5];
        v20 = (void *)v41[7];
        v21 = (CHWorkoutDetailHeartRateTableViewCell *)v41[8];
        v23 = (CHWorkoutDetailHeartRateTableViewCell *)v41[9];
        v22 = (void *)v41[10];
        swift_release(v41[0]);

        swift_release(v18);
        swift_bridgeObjectRelease(v21, v24, v25, v26, v27, v28, v29, v30);
        swift_bridgeObjectRelease(v23, v31, v32, v33, v34, v35, v36, v37);

        sub_10016F750((uint64_t)v19, v6);
        __asm { BR              X9 }
      }
    }
    swift_bridgeObjectRelease(a1, v7, v8, v9, v10, v11, v12, v13);
    return v42;
  }
  return result;
}

uint64_t sub_10033D374()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_10082EED4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000EA380;
  v2 = (_QWORD *)swift_task_alloc(dword_10082EE8C);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1000EA380;
  return sub_10033B7F4();
}

uint64_t sub_10033D3DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10033D400(uint64_t a1)
{
  uint64_t v1;

  return sub_100338BB0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10033D408()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_10082EEE4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000EA380;
  v2 = (_QWORD *)swift_task_alloc(dword_10082EE84);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1000EA380;
  return sub_10033B3F0();
}

uint64_t sub_10033D470()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_10082EEF4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000EA380;
  v2 = (_QWORD *)swift_task_alloc(dword_10082EE7C);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1000EA380;
  return sub_10033A2AC();
}

uint64_t sub_10033D4D8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_10082EF04);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000DA0E4;
  v2 = (_QWORD *)swift_task_alloc(dword_10082EE74);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1000EA380;
  return sub_100339574();
}

uint64_t sub_10033D540()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_10082EF14);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000EA380;
  v2 = (_QWORD *)swift_task_alloc(dword_10082EE6C);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1000EA380;
  return sub_100338E74();
}

uint64_t sub_10033D5A8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10033D5D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10082EF2C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_100338C90(a1, v4, v5, v6);
}

void sub_10033D64C(char a1)
{
  uint64_t v1;

  sub_10033C874(a1, *(char **)(v1 + 16), (uint64_t (*)(_QWORD))type metadata accessor for ActivitySharingFriendDetailAwardsListViewController, (uint64_t (*)(uint64_t))sub_10029DC90);
}

void sub_10033D674(char a1)
{
  uint64_t v1;

  sub_10033C874(a1, *(char **)(v1 + 16), (uint64_t (*)(_QWORD))type metadata accessor for ActivitySharingFriendDetailWorkoutListViewController, (uint64_t (*)(uint64_t))sub_10059CDBC);
}

void sub_10033D69C(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  sub_10033C91C(a1, a2, a3, a4, a5, a6);
}

id sub_10033D6BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003381E0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10033D6C4()
{
  unint64_t result;

  result = qword_10082EF40;
  if (!qword_10082EF40)
  {
    result = swift_getWitnessTable(&unk_100631B88, &type metadata for ActivitySharingFriendDetailCompetitionActionListView);
    atomic_store(result, (unint64_t *)&qword_10082EF40);
  }
  return result;
}

void sub_10033D708(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_100338110(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10033D710()
{
  unint64_t result;

  result = qword_10082EF60;
  if (!qword_10082EF60)
  {
    result = swift_getWitnessTable(&unk_100623968, &type metadata for ActivitySharingFriendDetailHeaderView);
    atomic_store(result, (unint64_t *)&qword_10082EF60);
  }
  return result;
}

void sub_10033D754(unint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  uint64_t v9;
  void *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  void *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  id v45;

  v2 = sub_10035640C(a1);
  if (v2 != 10)
  {
    v3 = v2;
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp41ActivitySharingFriendDetailViewController_dataProvider);
    KeyPath = swift_getKeyPath(&unk_100636280);
    v6 = swift_getKeyPath(&unk_1006362A8);
    static Published.subscript.getter(&v38, v4, KeyPath, v6);
    swift_release(KeyPath);
    swift_release(v6);
    v7 = v38;
    v8 = v39;
    v9 = v40;
    v10 = v41;
    v12 = v42;
    v11 = v43;
    v13 = v44;

    swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
    swift_bridgeObjectRelease(v11, v21, v22, v23, v24, v25, v26, v27);
    swift_release(v9);

    swift_release(v7);
    objc_msgSend(v10, "isCurrentlyHidingActivityDataFromMe");
    objc_msgSend(v10, "isCompetitionActive");
    if (!objc_msgSend(v10, "supportsCompetitions"))
      goto LABEL_5;
    v28 = objc_msgSend(v10, "contact");
    if (v28)
    {
      v29 = v28;
      v30 = objc_msgSend(v28, "relationship");

      objc_msgSend(v30, "supportsCompetitions");
LABEL_5:
      __asm { BR              X11 }
    }
    __break(1u);
  }
  v38 = 0;
  v39 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease(v39, v31, v32, v33, v34, v35, v36, v37);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003FLL, 0x80000001006909B0, "FitnessApp/ActivitySharingFriendDetailViewController.swift", 58, 2, 102, 0);
  __break(1u);
  JUMPOUT(0x10033DBD0);
}

uint64_t sub_10033DBF8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10033DC1C()
{
  uint64_t v0;

  return sub_100336A20(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10033DC24()
{
  uint64_t v0;

  sub_100336D80(v0);
}

id sub_10033DC68()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)AACAwardsClient), "init");
  qword_10082EF80 = (uint64_t)result;
  return result;
}

id sub_10033DC98(NSObject *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  void *v24;
  NSObject *v25;
  id v26;
  NSObject *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  NSObject *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, _QWORD, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  void (**v53)(char *, _QWORD, uint64_t, _QWORD);
  uint64_t v54;
  id result;
  uint64_t v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  SEL v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  Class isa;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  void *v72;
  double v73;
  double v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  const char *v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  SEL v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  void *v93;
  NSObject *v94;
  uint64_t v95;
  os_log_type_t v96;
  void *v97;
  NSObject *v98;
  NSObject *v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  void *v103;
  void *v104;
  CHWorkoutDetailHeartRateTableViewCell *v105;
  CHWorkoutDetailHeartRateTableViewCell *v106;
  uint64_t v107;
  uint64_t v108;
  const char *v109;
  CHWorkoutDetailHeartRateTableViewCell *v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  SEL v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  NSObject *v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  CHWorkoutDetailHeartRateTableViewCell *v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  NSObject *v136;
  id v137;
  CHWorkoutDetailHeartRateTableViewCell *v138;
  uint64_t v139;

  v2 = type metadata accessor for Date(0);
  v135 = *(id *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v5);
  v7 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Calendar(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for DateComponents(0);
  v12 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v14 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10081DAC0 != -1)
    swift_once(&qword_10081DAC0, sub_10033DC68);
  v15 = (void *)qword_10082EF80;
  v136 = a1;
  v16 = -[NSObject templateUniqueName](a1, "templateUniqueName");
  if (!v16)
    __break(1u);
  v17 = v16;
  v137 = 0;
  v18 = objc_msgSend(v15, "ephemeralAchievementWithTemplateUniqueName:error:", v16, &v137);

  if (v137)
  {
    v20 = v137;

    v22 = swift_willThrow(v21);
    v23 = static os_log_type_t.error.getter(v22);
    v24 = (void *)HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, v23))
    {
      v25 = v136;
      v26 = v20;
      v27 = v25;
      v135 = v26;
      v136 = v24;
      v28 = swift_slowAlloc(32, -1);
      v29 = (_QWORD *)swift_slowAlloc(8, -1);
      v30 = swift_slowAlloc(64, -1);
      v139 = v30;
      *(_DWORD *)v28 = 136315650;
      v137 = (id)sub_10003E8EC(0xD00000000000001DLL, 0x800000010069A4E0, &v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, &v138, v28 + 4);
      *(_WORD *)(v28 + 12) = 2080;
      v31 = -[NSObject templateUniqueName](v27, "templateUniqueName");
      if (v31)
      {
        v32 = v31;
        v33 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
        v35 = v34;

      }
      else
      {
        v33 = 0;
        v35 = 0;
      }
      v137 = v33;
      v138 = v35;
      v76 = sub_100047110(&qword_10082B520);
      v77 = Optional.description.getter(v76);
      v79 = (CHWorkoutDetailHeartRateTableViewCell *)v78;
      swift_bridgeObjectRelease(v35, v78, v80, v81, v82, v83, v84, v85);
      v137 = (id)sub_10003E8EC(v77, (unint64_t)v79, &v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, &v138, v28 + 14);

      swift_bridgeObjectRelease(v79, v86, v87, v88, v89, v90, v91, v92);
      *(_WORD *)(v28 + 22) = 2112;
      v20 = v135;
      v93 = (void *)_swift_stdlib_bridgeErrorToNSError(v20);
      v137 = v93;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, &v138, v28 + 24);
      *v29 = v93;

      v94 = v136;
      _os_log_impl((void *)&_mh_execute_header, v136, v23, "%s failed to fetch ephemeral achievement for %s with error %@", (uint8_t *)v28, 0x20u);
      v95 = sub_100047110(&qword_10081E648);
      swift_arrayDestroy(v29, 1, v95);
      swift_slowDealloc(v29, -1, -1);
      swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v28, -1, -1);

    }
    return 0;
  }
  v36 = v136;
  if (!v18)
  {
LABEL_23:
    v96 = static os_log_type_t.default.getter(v19);
    v97 = (void *)HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, v96))
    {
      v98 = v36;
      v99 = v97;
      v100 = swift_slowAlloc(22, -1);
      v101 = swift_slowAlloc(64, -1);
      v139 = v101;
      *(_DWORD *)v100 = 136315394;
      v137 = (id)sub_10003E8EC(0xD00000000000001DLL, 0x800000010069A4E0, &v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, &v138, v100 + 4);
      *(_WORD *)(v100 + 12) = 2080;
      v102 = -[NSObject templateUniqueName](v98, "templateUniqueName");
      v136 = v99;
      if (v102)
      {
        v103 = v102;
        v104 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v102);
        v106 = v105;

      }
      else
      {
        v104 = 0;
        v106 = 0;
      }
      v137 = v104;
      v138 = v106;
      v107 = sub_100047110(&qword_10082B520);
      v108 = Optional.description.getter(v107);
      v110 = (CHWorkoutDetailHeartRateTableViewCell *)v109;
      swift_bridgeObjectRelease(v106, v109, v111, v112, v113, v114, v115, v116);
      v137 = (id)sub_10003E8EC(v108, (unint64_t)v110, &v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, &v138, v100 + 14);

      swift_bridgeObjectRelease(v110, v117, v118, v119, v120, v121, v122, v123);
      v124 = v136;
      _os_log_impl((void *)&_mh_execute_header, v136, v96, "%s Friend Achievement %s does not have required URLs, filtering out.", (uint8_t *)v100, 0x16u);
      swift_arrayDestroy(v101, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v101, -1, -1);
      swift_slowDealloc(v100, -1, -1);

    }
    return 0;
  }
  v133 = v2;
  v37 = v18;
  if (!objc_msgSend(v37, "hasClientRequiredURLs"))
  {

    goto LABEL_23;
  }
  v132 = v37;
  v38 = objc_msgSend(v37, "relevantEarnedInstance");
  if (v38)
  {
    v125 = v38;
    v126 = v12;
    static Calendar.current.getter(v38);
    v39 = sub_100047110((uint64_t *)&unk_100828720);
    v40 = type metadata accessor for Calendar.Component(0);
    v41 = *(_QWORD *)(v40 - 8);
    v128 = *(_QWORD *)(v41 + 72);
    v129 = v40;
    v42 = *(unsigned __int8 *)(v41 + 80);
    v43 = (v42 + 32) & ~v42;
    v131 = (CHWorkoutDetailHeartRateTableViewCell *)(2 * v128);
    v44 = swift_allocObject(v39, v43 + 3 * v128, v42 | 7);
    v130 = v44;
    *(_OWORD *)(v44 + 16) = xmmword_100624A40;
    v45 = v44 + v43;
    v46 = *(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 104);
    v127 = v45;
    v47 = v129;
    v46(v45, enum case for Calendar.Component.year(_:), v129);
    v46(v45 + v128, enum case for Calendar.Component.month(_:), v47);
    v48 = (char *)v131 + v45;
    v49 = v47;
    v46((uint64_t)v48, enum case for Calendar.Component.day(_:), v47);
    v50 = v130;
    v131 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002302F0(v130);
    swift_setDeallocating(v50);
    swift_arrayDestroy(v127, 3, v49);
    swift_deallocClassInstance(v50, 32, 7);
    v51 = -[NSObject completedDate](v136, "completedDate");
    if (v51)
    {
      v52 = v51;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v51);

      v53 = (void (**)(char *, _QWORD, uint64_t, _QWORD))v135;
      v54 = v133;
      (*((void (**)(char *, char *, uint64_t))v135 + 4))(v7, v4, v133);
      v53[7](v7, 0, 1, v54);
      result = (id)((uint64_t (*)(char *, uint64_t, uint64_t))v53[6])(v7, 1, v54);
      v56 = v126;
      if ((_DWORD)result != 1)
      {
        v57 = v131;
        Calendar.dateComponents(_:from:)(v131, v7);
        swift_bridgeObjectRelease(v57, v58, v59, v60, v61, v62, v63, v64);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        ((void (*)(char *, uint64_t))v53[1])(v7, v54);
        isa = DateComponents._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v134);
        v66 = v125;
        objc_msgSend(v125, "setEarnedDateComponents:", isa);

        goto LABEL_14;
      }
    }
    else
    {
      result = (id)(*((uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v135 + 7))(v7, 1, 1, v133);
    }
    __break(1u);
    goto LABEL_35;
  }
LABEL_14:
  v67 = v132;
  v68 = objc_msgSend(v132, "template");
  v69 = objc_msgSend(v68, "canonicalUnit");

  if (!v69)
  {

    return v18;
  }
  v70 = objc_msgSend(v67, "relevantEarnedInstance");
  if (!v70)
    goto LABEL_18;
  v71 = v70;
  result = -[NSObject value](v136, "value");
  if (result)
  {
    v72 = result;
    objc_msgSend(result, "doubleValue");
    v74 = v73;

    v75 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v69, v74);
    objc_msgSend(v71, "setValue:", v75);

LABEL_18:
    return v18;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_10033E610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t TupleTypeMetadata;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[16];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v44 = a1;
  v46 = a2;
  v51 = sub_100007050(&qword_1008231E0);
  v3 = sub_100007050(&qword_10082F008);
  v43 = *(_QWORD *)(a1 + 16);
  v4 = sub_100007050(&qword_1008237E8);
  v5 = type metadata accessor for ModifiedContent(255, v43, v4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v3, v5, 0, 0);
  v7 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v7);
  v9 = type metadata accessor for ZStack(255, v7, WitnessTable);
  v10 = sub_100007050(&qword_10082F010);
  v11 = swift_getTupleTypeMetadata2(255, v9, v10, 0, 0);
  v12 = type metadata accessor for TupleView(255, v11);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v12);
  v13 = type metadata accessor for HStack(255, v12);
  v14 = type metadata accessor for ModifiedContent(255, v13, v4);
  v15 = type metadata accessor for ModifiedContent(255, v14, &type metadata for _PaddingLayout);
  v16 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _PaddingLayout);
  v17 = type metadata accessor for ModifiedContent(255, v16, &type metadata for _FrameLayout);
  v18 = sub_100007050(&qword_10082F018);
  v19 = type metadata accessor for ModifiedContent(255, v17, v18);
  v52 = type metadata accessor for ModifiedContent(255, v19, v4);
  v53 = v51;
  v54 = sub_100007050(&qword_10082F020);
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 4);
  v21 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v21);
  v22 = type metadata accessor for VStack(255, v21);
  v23 = swift_getTupleTypeMetadata2(255, v22, &type metadata for Spacer, 0, 0);
  v24 = type metadata accessor for TupleView(255, v23);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v24);
  v26 = type metadata accessor for HStack(0, v24);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v43 - v28;
  v30 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v26);
  v51 = v26;
  v52 = v30;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v51, &opaque type descriptor for <<opaque return type of View.metricRow(padding:)>>, 0);
  v32 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v34 = (char *)&v43 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v37 = (char *)&v43 - v36;
  v38 = *(_QWORD *)(v44 + 24);
  v48 = v43;
  v49 = v38;
  v50 = v45;
  v40 = static VerticalAlignment.center.getter(v39);
  HStack.init(alignment:spacing:content:)(v40, 0, 1, sub_10034072C, v47, v24, v25);
  View.metricRow(padding:)(v26, v30, 0.0);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  v51 = v26;
  v52 = v30;
  swift_getOpaqueTypeConformance2(&v51, &opaque type descriptor for <<opaque return type of View.metricRow(padding:)>>, 1);
  sub_10029340C((uint64_t)v34, OpaqueTypeMetadata2, (uint64_t)v37);
  v41 = *(void (**)(char *, uint64_t))(v32 + 8);
  v41(v34, OpaqueTypeMetadata2);
  sub_100291778((uint64_t)v37, OpaqueTypeMetadata2, v46);
  return ((uint64_t (*)(char *, uint64_t))v41)(v37, OpaqueTypeMetadata2);
}

uint64_t sub_10033E9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t);
  _BYTE v37[16];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  _QWORD v43[2];
  uint64_t v44;
  char v45;
  _BYTE *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;

  v46 = (_BYTE *)sub_100007050(&qword_1008231E0);
  v6 = sub_100007050(&qword_10082F008);
  v7 = sub_100007050(&qword_1008237E8);
  v8 = type metadata accessor for ModifiedContent(255, a2, v7);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v6, v8, 0, 0);
  v10 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v10);
  v12 = type metadata accessor for ZStack(255, v10, WitnessTable);
  v13 = sub_100007050(&qword_10082F010);
  v14 = swift_getTupleTypeMetadata2(255, v12, v13, 0, 0);
  v15 = type metadata accessor for TupleView(255, v14);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v15);
  v16 = type metadata accessor for HStack(255, v15);
  v17 = type metadata accessor for ModifiedContent(255, v16, v7);
  v18 = type metadata accessor for ModifiedContent(255, v17, &type metadata for _PaddingLayout);
  v19 = type metadata accessor for ModifiedContent(255, v18, &type metadata for _PaddingLayout);
  v20 = type metadata accessor for ModifiedContent(255, v19, &type metadata for _FrameLayout);
  v21 = sub_100007050(&qword_10082F018);
  v22 = type metadata accessor for ModifiedContent(255, v20, v21);
  v47 = (uint64_t *)type metadata accessor for ModifiedContent(255, v22, v7);
  v48 = (uint64_t)v46;
  v49 = sub_100007050(&qword_10082F020);
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 4);
  v24 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v24);
  v25 = type metadata accessor for VStack(0, v24);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = &v37[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v29);
  v31 = &v37[-v30];
  v33 = static HorizontalAlignment.leading.getter(v32);
  v38 = a2;
  v39 = a3;
  v40 = a1;
  VStack.init(alignment:spacing:content:)(v33, 0, 1, sub_100340738);
  v34 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v25);
  sub_10029340C((uint64_t)v28, v25, (uint64_t)v31);
  v35 = *(void (**)(_BYTE *, uint64_t))(v26 + 8);
  v35(v28, v25);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v26 + 16))(v28, v31, v25);
  v44 = 0;
  v45 = 1;
  v46 = v28;
  v47 = &v44;
  v43[0] = v25;
  v43[1] = &type metadata for Spacer;
  v41 = v34;
  v42 = &protocol witness table for Spacer;
  sub_100522738((uint64_t *)&v46, 2uLL, (uint64_t)v43);
  v35(v31, v25);
  return ((uint64_t (*)(_BYTE *, uint64_t))v35)(v28, v25);
}

uint64_t sub_10033ED04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  double *v57;
  double v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  double v72;
  uint64_t v73;
  double *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  CHWorkoutDetailHeartRateTableViewCell *v105;
  CHWorkoutDetailHeartRateTableViewCell *v106;
  char v107;
  char *v108;
  SEL v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(uint64_t, uint64_t);
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  double *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD v163[5];
  unint64_t v164;
  double *v165;
  unint64_t v166;
  unint64_t v167;
  _QWORD v168[4];
  uint64_t v169;
  char v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  CHWorkoutDetailHeartRateTableViewCell *v180;
  uint64_t v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185[16];
  uint64_t v186;
  unsigned __int8 v187;
  uint64_t v188;
  unsigned __int8 v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unsigned __int8 v193;
  uint64_t v194;
  unsigned __int8 v195;
  uint64_t v196;
  uint64_t v197;

  v139 = a1;
  v140 = a3;
  v133 = a2;
  v160 = a4;
  v5 = sub_100047110(&qword_10082F028);
  v158 = *(_QWORD *)(v5 - 8);
  v159 = v5;
  __chkstk_darwin(v5);
  v154 = (char *)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100047110(&qword_10082F020);
  __chkstk_darwin(v157);
  v155 = (char *)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v156 = (uint64_t)&v127 - v9;
  v147 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v147);
  v146 = (double *)((char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_100007050(&qword_10082F008);
  v12 = sub_100007050(&qword_1008237E8);
  v13 = type metadata accessor for ModifiedContent(255, a2, v12);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v11, v13, 0, 0);
  v15 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v15);
  v17 = type metadata accessor for ZStack(255, v15, WitnessTable);
  v18 = sub_100007050(&qword_10082F010);
  v19 = swift_getTupleTypeMetadata2(255, v17, v18, 0, 0);
  v20 = type metadata accessor for TupleView(255, v19);
  v127 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v20);
  v21 = type metadata accessor for HStack(0, v20);
  v130 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v23 = (char *)&v127 - v22;
  v24 = type metadata accessor for ModifiedContent(0, v21, v12);
  v134 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v26 = (char *)&v127 - v25;
  v27 = type metadata accessor for ModifiedContent(0, v24, &type metadata for _PaddingLayout);
  v135 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v128 = (char *)&v127 - v28;
  v29 = type metadata accessor for ModifiedContent(0, v27, &type metadata for _PaddingLayout);
  v137 = *(_QWORD *)(v29 - 8);
  v129 = v29;
  __chkstk_darwin(v29);
  v131 = (char *)&v127 - v30;
  v32 = type metadata accessor for ModifiedContent(0, v31, &type metadata for _FrameLayout);
  v141 = *(_QWORD *)(v32 - 8);
  v138 = v32;
  __chkstk_darwin(v32);
  v132 = (char *)&v127 - v33;
  v34 = sub_100007050(&qword_10082F018);
  v35 = type metadata accessor for ModifiedContent(0, v32, v34);
  v36 = *(_QWORD *)(v35 - 8);
  v143 = v35;
  v145 = v36;
  __chkstk_darwin(v35);
  v136 = (char *)&v127 - v37;
  v144 = type metadata accessor for ModifiedContent(0, v38, v12);
  v162 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v142 = (char *)&v127 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v161 = (uint64_t)&v127 - v41;
  v42 = (double *)v139;
  v43 = *(_QWORD *)(v139 + 32);
  v45 = static Alignment.center.getter(v44);
  v47 = _FrameLayout.init(width:height:alignment:)(&v186, 0, 1, v43, 0, v45, v46);
  v153 = v186;
  v152 = v187;
  v151 = v188;
  v150 = v189;
  v148 = v191;
  v149 = v190;
  v163[2] = v133;
  v163[3] = v140;
  v163[4] = v42;
  v48 = static VerticalAlignment.center.getter(v47);
  v49 = HStack.init(alignment:spacing:content:)(v48, 0x4020000000000000, 0, sub_100340744, v163, v20, v127);
  v50 = static Color.black.getter(v49);
  v177 = v50;
  v51 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v21);
  View.foregroundStyle<A>(_:)(&v177, v21, &type metadata for Color, v51, &protocol witness table for Color, v52);
  v53 = swift_release(v50);
  v54 = (*(uint64_t (**)(char *, uint64_t, __n128))(v130 + 8))(v23, v21, v53);
  v55 = static Edge.Set.leading.getter(v54);
  v56 = *v42;
  v57 = v42;
  v58 = (*v42 - v42[1]) * 0.5;
  v140 = sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
  v185[14] = v51;
  v185[15] = v140;
  v59 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v24);
  v60 = v128;
  View.padding(_:_:)(v55, *(_QWORD *)&v58, 0, v24, v59);
  v61 = (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v26, v24);
  v62 = static Edge.Set.trailing.getter(v61);
  v185[12] = v59;
  v185[13] = (uint64_t)&protocol witness table for _PaddingLayout;
  v63 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v27);
  v64 = v131;
  View.padding(_:_:)(v62, 0x4032000000000000, 0, v27, v63);
  v65 = (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v60, v27);
  v66 = static Alignment.center.getter(v65);
  v68 = v67;
  v185[10] = v63;
  v185[11] = (uint64_t)&protocol witness table for _PaddingLayout;
  v69 = v129;
  v70 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v129);
  v71 = v132;
  View.frame(width:height:alignment:)(0, 1, *(_QWORD *)&v56, 0, v66, v68, v69, v70);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v64, v69);
  v72 = v56 * 0.5;
  v74 = v146;
  v73 = v147;
  v75 = (char *)v146 + *(int *)(v147 + 20);
  v76 = enum case for RoundedCornerStyle.continuous(_:);
  v77 = type metadata accessor for RoundedCornerStyle(0);
  v78 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 104))(v75, v76, v77);
  *v74 = v72;
  v74[1] = v72;
  v79 = static Alignment.center.getter(v78);
  v81 = v80;
  v185[8] = v70;
  v185[9] = (uint64_t)&protocol witness table for _FrameLayout;
  v82 = v138;
  v83 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v138);
  v84 = sub_100340750();
  v85 = v136;
  View.background<A>(_:alignment:)(v74, v79, v81, v82, v73, v83, v84);
  sub_1001D2ACC((uint64_t)v74);
  (*(void (**)(char *, uint64_t))(v141 + 8))(v71, v82);
  v86 = (void *)objc_opt_self(UIColor);
  v87 = Color.init(uiColor:)(objc_msgSend(v86, "secondaryLabelColor"));
  v88 = Color.opacity(_:)(0.7);
  swift_release(v87);
  v177 = v88;
  v89 = sub_100028384(&qword_10082F038, &qword_10082F018, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v185[6] = v83;
  v185[7] = v89;
  v90 = v143;
  v91 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v143);
  v92 = (uint64_t)v142;
  View.foregroundStyle<A>(_:)(&v177, v90, &type metadata for Color, v91, &protocol witness table for Color, v93);
  v94 = swift_release(v88);
  (*(void (**)(char *, uint64_t, __n128))(v145 + 8))(v85, v90, v94);
  v185[4] = v91;
  v185[5] = v140;
  v95 = v144;
  v146 = (double *)swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v144);
  sub_10029340C(v92, v95, v161);
  v147 = *(_QWORD *)(v162 + 8);
  v96 = ((uint64_t (*)(uint64_t, uint64_t))v147)(v92, v95);
  v97 = *((_QWORD *)v57 + 3);
  v98 = static Alignment.center.getter(v96);
  _FrameLayout.init(width:height:alignment:)(&v192, 0, 1, v97, 0, v98, v99);
  v145 = v192;
  LODWORD(v143) = v193;
  v141 = v194;
  LODWORD(v140) = v195;
  v137 = v197;
  v138 = v196;
  v100 = *((_QWORD *)v57 + 11);
  v177 = *((_QWORD *)v57 + 10);
  v178 = v100;
  v101 = sub_100038CA0();
  swift_bridgeObjectRetain(v100);
  v102 = Text.init<A>(_:)(&v177, &type metadata for String, v101);
  v104 = v103;
  v106 = v105;
  v177 = v102;
  v178 = v103;
  LOBYTE(v57) = v107 & 1;
  LOBYTE(v179) = v107 & 1;
  v180 = v105;
  v108 = v154;
  View.metricDescriptionFont(multiline:)(0, &type metadata for Text, &protocol witness table for Text);
  sub_1000E4458(v102, v104, (char)v57);
  swift_bridgeObjectRelease(v106, v109, v110, v111, v112, v113, v114, v115);
  v116 = Color.init(uiColor:)(objc_msgSend(v86, "secondaryLabelColor"));
  v118 = v158;
  v117 = v159;
  v119 = v155;
  (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v155, v108, v159);
  v120 = v157;
  *(_QWORD *)&v119[*(int *)(v157 + 36)] = v116;
  (*(void (**)(char *, uint64_t))(v118 + 8))(v108, v117);
  v121 = (uint64_t)v119;
  v122 = (uint64_t)v119;
  v123 = v156;
  sub_100340798(v121, v156);
  v177 = 0;
  LOBYTE(v178) = 1;
  v179 = v153;
  LOBYTE(v180) = v152;
  v181 = v151;
  v182 = v150;
  v183 = v149;
  v184 = v148;
  v185[0] = (uint64_t)&v177;
  v124 = v161;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v162 + 16))(v92, v161, v95);
  v169 = 0;
  v170 = 1;
  v171 = v145;
  v172 = v143;
  v173 = v141;
  v174 = v140;
  v175 = v138;
  v176 = v137;
  v185[1] = v92;
  v185[2] = (uint64_t)&v169;
  sub_1003407E0(v123, v122);
  v185[3] = v122;
  v168[0] = sub_100047110(&qword_1008231E0);
  v168[1] = v95;
  v168[2] = v168[0];
  v168[3] = v120;
  v164 = sub_100340828();
  v165 = v146;
  v166 = v164;
  v167 = sub_10034088C();
  sub_100522738(v185, 4uLL, (uint64_t)v168);
  sub_100340934(v123);
  v125 = (uint64_t (*)(uint64_t, uint64_t))v147;
  ((void (*)(uint64_t, uint64_t))v147)(v124, v95);
  sub_100340934(v122);
  return v125(v92, v95);
}

uint64_t sub_10033F7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43;
  unsigned __int8 v44;
  __n128 v45;
  uint64_t (*v46)(char *, uint64_t, __n128);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD v66[2];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  char v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82[2];

  v59 = a4;
  v57 = type metadata accessor for Font.PrivateDesign(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007050(&qword_10082F008);
  v10 = sub_100007050(&qword_1008237E8);
  v11 = type metadata accessor for ModifiedContent(255, a2, v10);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v9, v11, 0, 0);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  v15 = type metadata accessor for ZStack(0, v13, WitnessTable);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v52 - v20;
  v23 = static Alignment.center.getter(v22);
  v61 = a2;
  v62 = a3;
  v63 = a1;
  ZStack.init(alignment:content:)(v23);
  v24 = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v15);
  v60 = v21;
  v55 = v24;
  sub_10029340C((uint64_t)v18, v15, (uint64_t)v21);
  v58 = *(void (**)(char *, uint64_t))(v16 + 8);
  v58(v18, v15);
  v25 = sub_10033FED8(a1, (uint64_t)&v67);
  v26 = v67;
  v27 = v68;
  v29 = v69;
  v28 = v70;
  v54 = v71;
  v53 = static Edge.Set.bottom.getter(v25);
  v30 = 0.0;
  if ((*(_BYTE *)(a1 + 96) & 1) == 0)
    v30 = *(double *)(a1 + 16);
  v31 = EdgeInsets.init(_all:)(v30);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = static Font.Weight.semibold.getter(v38);
  static Font.PrivateDesign.compactRounded.getter(v40);
  v41 = static Font.system(size:weight:design:)(v8, 27.0, v39);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v8, v57);
  KeyPath = swift_getKeyPath(&unk_1006363D8);
  v43 = swift_getKeyPath(&unk_100636408);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v60, v15);
  v67 = v26;
  v68 = v27;
  v69 = v29;
  v70 = v28;
  v44 = v54;
  v71 = v54;
  v72 = v53;
  v73 = v31;
  v74 = v33;
  v75 = v35;
  v76 = v37;
  v77 = 0;
  v78 = KeyPath;
  v79 = v41;
  v80 = v43;
  v81 = 0x3FE0000000000000;
  v82[0] = (uint64_t)v18;
  v82[1] = (uint64_t)&v67;
  sub_100116B30(v26, v27, v29, v28, v54);
  swift_retain(KeyPath);
  swift_retain(v41);
  swift_retain(v43);
  v66[0] = v15;
  v66[1] = sub_100047110(&qword_10082F010);
  v64 = v55;
  v65 = sub_100340990();
  sub_100522738(v82, 2uLL, (uint64_t)v66);
  sub_100116B70(v26, v27, v29, v28, v44);
  swift_release(v43);
  swift_release(v41);
  v45 = swift_release(KeyPath);
  v46 = (uint64_t (*)(char *, uint64_t, __n128))v58;
  ((void (*)(char *, uint64_t, __n128))v58)(v60, v15, v45);
  v47 = v78;
  v48 = v79;
  v49 = v80;
  sub_100116B70(v67, v68, v69, v70, v71);
  swift_release(v49);
  swift_release(v47);
  v50 = swift_release(v48);
  return v46(v18, v15, v50);
}

uint64_t sub_10033FBE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  uint64_t WitnessTable;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[4];
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;

  v38 = a4;
  v7 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007050(&qword_1008237E8);
  v11 = type metadata accessor for ModifiedContent(0, a2, v10);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - v16;
  v18 = *(_QWORD *)(a1 + 8);
  v20 = static Alignment.center.getter(v19);
  v22 = _FrameLayout.init(width:height:alignment:)(&v49, v18, 0, 0, 1, v20, v21);
  v37 = v49;
  v36 = v50;
  v35 = v51;
  v34 = v52;
  v33 = v53;
  v32 = v54;
  (*(void (**)(_QWORD *))(a1 + 40))(v22);
  v23 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v24 = Color.init(uiColor:)(v23);
  v25 = Color.opacity(_:)(0.95);
  v26 = swift_release(v24);
  v42 = v25;
  View.foregroundStyle<A>(_:)(&v42, a2, &type metadata for Color, a3, &protocol witness table for Color, v26);
  v27 = swift_release(v25);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, a2, v27);
  v28 = sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
  v48[2] = a3;
  v48[3] = v28;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  sub_10029340C((uint64_t)v14, v11, (uint64_t)v17);
  v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30(v14, v11);
  v42 = v37;
  v43 = v36;
  v44 = v35;
  v45 = v34;
  v46 = v33;
  v47 = v32;
  v48[0] = (uint64_t)&v42;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  v48[1] = (uint64_t)v14;
  v41[0] = sub_100047110(&qword_10082F008);
  v41[1] = v11;
  v39 = sub_100340B48();
  v40 = WitnessTable;
  sub_100522738(v48, 2uLL, (uint64_t)v41);
  v30(v17, v11);
  return ((uint64_t (*)(char *, uint64_t))v30)(v14, v11);
}

uint64_t sub_10033FED8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _OWORD v20[2];
  char v21;

  if ((*(_BYTE *)(result + 56) & 1) != 0)
  {
    v8 = LocalizedStringKey.init(stringLiteral:)(0x6873696E6946, 0xE600000000000000);
    v15 = Text.init(_:tableName:bundle:comment:)(v8);
    v16 = v9;
    v17 = v10 & 1;
    v18 = v11;
    v19 = 0;
  }
  else
  {
    v3 = *(_QWORD *)(result + 72);
    if (!v3)
    {
      v12 = 0uLL;
      v14 = -1;
      v13 = 0uLL;
      goto LABEL_7;
    }
    *(_QWORD *)&v20[0] = *(_QWORD *)(result + 64);
    *((_QWORD *)&v20[0] + 1) = v3;
    v4 = sub_100038CA0();
    swift_bridgeObjectRetain(v3);
    v15 = Text.init<A>(_:)(v20, &type metadata for String, v4);
    v16 = v6;
    v17 = v5 & 1;
    v18 = v7;
    v19 = 1;
  }
  result = _ConditionalContent<>.init(storage:)(&v15, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
  v12 = v20[0];
  v13 = v20[1];
  v14 = v21;
LABEL_7:
  *(_OWORD *)a2 = v12;
  *(_OWORD *)(a2 + 16) = v13;
  *(_BYTE *)(a2 + 32) = v14;
  return result;
}

uint64_t sub_10033FFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10033E610(a1, a2);
}

uint64_t sub_10034002C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0x6568632E67616C66, 0xEE00646572656B63);
  *a1 = result;
  return result;
}

void sub_100340070(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, __n128 a5@<Q2>, __n128 a6@<Q4>)
{
  __n128 v10;
  __n128 v11;
  __n128 v12;
  __n128 v13;
  void *v14;
  id v15;
  char v16;
  double v17;
  id v18;
  char v19;
  double v20;
  id v21;
  char v22;
  double v23;
  id v24;
  char v25;
  double v26;
  id v27;
  char v28;
  double v29;
  id v30;
  char v31;
  double v32;
  id v33;
  char v34;
  __n128 v35;
  __n128 v36;
  double v37;
  id v38;
  char v39;
  double v40;
  id v41;
  char v42;
  double v43;
  id v44;
  char v45;
  double v46;
  id v47;
  char v48;
  double v49;
  id v50;
  char v51;
  double v52;
  id v53;
  char v54;
  double v55;
  id v56;
  char v57;
  __n128 v58;
  __n128 v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;

  a5.n128_u64[0] = 0x4045000000000000;
  a6.n128_u64[0] = 0x4048800000000000;
  v65 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(42.0, 49.0, a5, 49.0, a6, 53.0, 53.0);
  v10.n128_u64[0] = 0x4041000000000000;
  v11.n128_u64[0] = 0x4043800000000000;
  v64 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(34.0, 39.0, v10, 39.0, v11, 43.0, 43.0);
  v12.n128_u64[0] = 1.0;
  v13.n128_u64[0] = 1.5;
  v63 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(1.0, 1.5, v12, 1.0, v13, 1.5, 1.5);
  v14 = (void *)objc_opt_self(UIDevice);
  v15 = objc_msgSend(v14, "currentDevice");
  v16 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v16 & 1) != 0)
    v17 = 12.0;
  else
    v17 = 8.0;
  v18 = objc_msgSend(v14, "currentDevice");
  v19 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v19 & 1) != 0)
    v20 = 16.0;
  else
    v20 = 8.0;
  v21 = objc_msgSend(v14, "currentDevice");
  v22 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v22 & 1) != 0)
    v23 = 12.0;
  else
    v23 = 10.0;
  v24 = objc_msgSend(v14, "currentDevice");
  v25 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v25 & 1) != 0)
    v26 = 12.0;
  else
    v26 = 10.0;
  v27 = objc_msgSend(v14, "currentDevice");
  v28 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v28 & 1) != 0)
    v29 = 12.0;
  else
    v29 = 8.0;
  v30 = objc_msgSend(v14, "currentDevice");
  v31 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v31 & 1) != 0)
    v32 = 12.0;
  else
    v32 = 8.0;
  v33 = objc_msgSend(v14, "currentDevice");
  v34 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v34 & 1) != 0)
    v37 = 12.0;
  else
    v37 = 8.0;
  v35.n128_f64[0] = v23;
  v36.n128_f64[0] = v29;
  v62 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(v17, v20, v35, v26, v36, v32, v37);
  v38 = objc_msgSend(v14, "currentDevice");
  v39 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v39 & 1) != 0)
    v40 = 23.0;
  else
    v40 = 12.0;
  v41 = objc_msgSend(v14, "currentDevice");
  v42 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v42 & 1) != 0)
    v43 = 23.0;
  else
    v43 = 8.0;
  v44 = objc_msgSend(v14, "currentDevice");
  v45 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v45 & 1) != 0)
    v46 = 23.0;
  else
    v46 = 10.0;
  v47 = objc_msgSend(v14, "currentDevice");
  v48 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v48 & 1) != 0)
    v49 = 23.0;
  else
    v49 = 10.0;
  v50 = objc_msgSend(v14, "currentDevice");
  v51 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v51 & 1) != 0)
    v52 = 23.0;
  else
    v52 = 8.0;
  v53 = objc_msgSend(v14, "currentDevice");
  v54 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v54 & 1) != 0)
    v55 = 23.0;
  else
    v55 = 8.0;
  v56 = objc_msgSend(v14, "currentDevice");
  v57 = UIDevice.isLargeDisplayZoomEnabled.getter();

  if ((v57 & 1) != 0)
    v60 = 23.0;
  else
    v60 = 8.0;
  v58.n128_f64[0] = v46;
  v59.n128_f64[0] = v52;
  v61 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(v40, v43, v58, v49, v59, v55, v60);
  *(double *)a4 = v65;
  *(double *)(a4 + 8) = v64;
  *(double *)(a4 + 16) = v63;
  *(double *)(a4 + 24) = v62;
  *(double *)(a4 + 32) = v61;
  *(_QWORD *)(a4 + 40) = sub_10034002C;
  *(_QWORD *)(a4 + 48) = 0;
  *(_BYTE *)(a4 + 56) = a1;
  *(_QWORD *)(a4 + 64) = 0;
  *(_QWORD *)(a4 + 72) = 0;
  *(_QWORD *)(a4 + 80) = a2;
  *(_QWORD *)(a4 + 88) = a3;
  *(_BYTE *)(a4 + 96) = 0;
}

uint64_t sub_100340474(_QWORD *a1)
{
  swift_release(a1[6]);
  swift_bridgeObjectRelease(a1[9]);
  return swift_bridgeObjectRelease(a1[11]);
}

uint64_t sub_1003404A4(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  swift_retain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t sub_100340518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 88);
  v9 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t sub_1003405D4(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v5);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 88);
  v9 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t sub_100340648(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 97))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_100340690(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 97) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for NextIntervalOrLegPillView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10014E7CC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NextIntervalOrLegPillView);
}

uint64_t sub_1003406F8(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1006B48C0, 1);
}

uint64_t sub_10034072C()
{
  uint64_t *v0;

  return sub_10033E9D4(v0[4], v0[2], v0[3]);
}

uint64_t sub_100340738@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10033ED04(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_100340744@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10033F7B4(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_100340750()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082F030;
  if (!qword_10082F030)
  {
    v1 = type metadata accessor for RoundedRectangle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for RoundedRectangle, v1);
    atomic_store(result, (unint64_t *)&qword_10082F030);
  }
  return result;
}

uint64_t sub_100340798(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10082F020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003407E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10082F020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100340828()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100823208;
  if (!qword_100823208)
  {
    v1 = sub_100007050(&qword_1008231E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100823208);
  }
  return result;
}

unint64_t sub_10034088C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10082F040;
  if (!qword_10082F040)
  {
    v1 = sub_100007050(&qword_10082F020);
    v2[0] = &type metadata for Text;
    v2[1] = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.metricDescriptionFont(multiline:)>>, 1);
    sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F040);
  }
  return result;
}

uint64_t sub_100340934(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_10082F020);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100340974@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10033FBE8(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_100340990()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082F048;
  if (!qword_10082F048)
  {
    v1 = sub_100007050(&qword_10082F010);
    sub_100340A14();
    sub_100028384(&qword_100826E78, &qword_100826E80, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F048);
  }
  return result;
}

unint64_t sub_100340A14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082F050;
  if (!qword_10082F050)
  {
    v1 = sub_100007050(&qword_10082F058);
    sub_100340A98();
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F050);
  }
  return result;
}

unint64_t sub_100340A98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082F060;
  if (!qword_10082F060)
  {
    v1 = sub_100007050(&qword_10082F068);
    sub_1000F0610(&qword_10082F070, &qword_10082F078, (void (*)(void))sub_100340B24, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F060);
  }
  return result;
}

uint64_t sub_100340B24()
{
  return sub_1000F0610(&qword_10082F080, &qword_10082F088, (void (*)(void))sub_1002B35FC, (uint64_t)&protocol conformance descriptor for <A> A?);
}

unint64_t sub_100340B48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082F090;
  if (!qword_10082F090)
  {
    v1 = sub_100007050(&qword_10082F008);
    sub_100340BB4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F090);
  }
  return result;
}

unint64_t sub_100340BB4()
{
  unint64_t result;

  result = qword_10082F098;
  if (!qword_10082F098)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Circle, &type metadata for Circle);
    atomic_store(result, (unint64_t *)&qword_10082F098);
  }
  return result;
}

uint64_t sub_100340BF8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t TupleTypeMetadata;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[4];

  v1 = *a1;
  v2 = sub_100007050(&qword_1008231E0);
  v3 = sub_100007050(&qword_10082F008);
  v4 = sub_100007050(&qword_1008237E8);
  v5 = type metadata accessor for ModifiedContent(255, v1, v4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v3, v5, 0, 0);
  v7 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v7);
  v9 = type metadata accessor for ZStack(255, v7, WitnessTable);
  v10 = sub_100007050(&qword_10082F010);
  v11 = swift_getTupleTypeMetadata2(255, v9, v10, 0, 0);
  v12 = type metadata accessor for TupleView(255, v11);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v12);
  v13 = type metadata accessor for HStack(255, v12);
  v14 = type metadata accessor for ModifiedContent(255, v13, v4);
  v15 = type metadata accessor for ModifiedContent(255, v14, &type metadata for _PaddingLayout);
  v16 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _PaddingLayout);
  v17 = type metadata accessor for ModifiedContent(255, v16, &type metadata for _FrameLayout);
  v18 = sub_100007050(&qword_10082F018);
  v19 = type metadata accessor for ModifiedContent(255, v17, v18);
  type metadata accessor for ModifiedContent(255, v19, v4);
  v26[2] = v2;
  v26[3] = sub_100007050(&qword_10082F020);
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 4);
  v21 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v21);
  v22 = type metadata accessor for VStack(255, v21);
  v23 = swift_getTupleTypeMetadata2(255, v22, &type metadata for Spacer, 0, 0);
  v24 = type metadata accessor for TupleView(255, v23);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v24);
  v26[0] = type metadata accessor for HStack(255, v24);
  v26[1] = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v26[0]);
  return swift_getOpaqueTypeConformance2(v26, &opaque type descriptor for <<opaque return type of View.metricRow(padding:)>>, 1);
}

id sub_100340E50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  void (*v14)();
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  int v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id result;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD v42[3];

  v3 = v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView + 8);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView + 16);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView + 24);
  v8 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView + 32);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView + 40);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView + 48);
  if (v4)
  {
    v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView + 8) & 1;
    v40 = (v5 >> 8) & 1;
    v11 = (v5 >> 16) & 1;
    v12 = v9 & 1;
    v13 = *(id *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView);
    v14 = *(void (**)())(v1
                       + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView
                       + 16);
    v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView + 24);
    v16 = *(id *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView + 32);
    v17 = v10;
  }
  else
  {
    v18 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController_pauseRingsCoordinator);
    v34 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController_shouldShowEditFlow);
    v19 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController_isStandalone);
    LODWORD(v11) = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController_isWheelchair);
    v38 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView + 24);
    v39 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView + 16);
    v36 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView + 40);
    v37 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView + 32);
    v35 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView + 48);
    v15 = swift_allocObject(&unk_1007973C8, 24, 7);
    swift_unknownObjectWeakInit(v15 + 16, v1);
    v41 = 0;
    v20 = v18;
    swift_retain(v15);
    State.init(wrappedValue:)(v42, &v41, &type metadata for Bool);
    v33 = LOBYTE(v42[0]);
    v17 = v42[1];
    v21 = sub_1002049C4(v19, 0);

    swift_release(v15);
    LOBYTE(v40) = v19;
    v22 = 256;
    if (!v19)
      v22 = 0;
    v31 = *(_QWORD *)(v3 + 8);
    v32 = *(void **)v3;
    v23 = v22 | v34;
    v24 = 0x10000;
    if (!(_DWORD)v11)
      v24 = 0;
    v27 = *(_QWORD *)(v3 + 16);
    v28 = *(void **)(v3 + 32);
    v29 = *(_QWORD *)(v3 + 24);
    v30 = *(_QWORD *)(v3 + 40);
    *(_QWORD *)v3 = v20;
    *(_QWORD *)(v3 + 8) = v23 | v24;
    v14 = sub_1003417CC;
    v26 = *(_QWORD *)(v3 + 48);
    *(_QWORD *)(v3 + 16) = sub_1003417CC;
    *(_QWORD *)(v3 + 24) = v15;
    v12 = v33;
    *(_QWORD *)(v3 + 32) = v21;
    *(_QWORD *)(v3 + 40) = v33;
    *(_QWORD *)(v3 + 48) = v17;
    LOBYTE(v3) = v34;
    swift_retain(v17);
    v13 = v20;
    swift_retain(v15);
    v16 = v21;
    sub_1003417D4(v32, v31, v27, v29, v28, v30, v26);
    v4 = 0;
    v10 = v35;
    v9 = v36;
    v8 = v37;
    v7 = v38;
    v6 = v39;
  }
  result = sub_10034181C(v4, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)a1 = v13;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v40;
  *(_BYTE *)(a1 + 10) = v11;
  *(_QWORD *)(a1 + 16) = v14;
  *(_QWORD *)(a1 + 24) = v15;
  *(_QWORD *)(a1 + 32) = v16;
  *(_BYTE *)(a1 + 40) = v12;
  *(_QWORD *)(a1 + 48) = v17;
  return result;
}

void sub_100341080(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

char *sub_1003410E0(void *a1, char a2, char a3, char a4)
{
  _BYTE *v4;
  char *v6;
  id v7;
  char *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  char *result;
  char *v14;
  char *v15;
  _BYTE v16[56];
  objc_super v17;

  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController_hostingController] = 0;
  v6 = &v4[OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController____lazy_storage___pauseRingsView];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  *((_QWORD *)v6 + 6) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController_pauseRingsCoordinator] = a1;
  v4[OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController_isStandalone] = a2;
  v4[OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController_isWheelchair] = a3;
  v4[OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController_shouldShowEditFlow] = a4;
  v17.receiver = v4;
  v17.super_class = (Class)type metadata accessor for PauseRingsViewController();
  v7 = a1;
  v8 = (char *)objc_msgSendSuper2(&v17, "initWithNibName:bundle:", 0, 0);
  sub_100340E50((uint64_t)v16);
  v9 = objc_allocWithZone((Class)sub_100047110(&qword_10082F0F8));
  v10 = (void *)UIHostingController.init(rootView:)(v16);
  v11 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController_hostingController];
  *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController_hostingController] = v10;
  v12 = v10;

  objc_msgSend(v8, "addChildViewController:", v12);
  result = (char *)objc_msgSend(v8, "view");
  if (result)
  {
    v14 = result;
    result = (char *)objc_msgSend(v12, "view");
    if (result)
    {
      v15 = result;
      objc_msgSend(v14, "addSubview:", result);

      return v8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1003412F4()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  objc_super v29;

  v29.receiver = v0;
  v29.super_class = (Class)type metadata accessor for PauseRingsViewController();
  objc_msgSendSuper2(&v29, "viewDidLoad");
  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp24PauseRingsViewController_hostingController];
  if (!v1)
    goto LABEL_14;
  v2 = objc_msgSend(v1, "view");
  if (!v2)
    goto LABEL_14;
  v3 = v2;
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = objc_msgSend(v0, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 = v4;
  objc_msgSend(v4, "addSubview:", v3);

  v6 = objc_msgSend(v3, "leadingAnchor");
  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "safeAreaLayoutGuide");

  v10 = objc_msgSend(v9, "leadingAnchor");
  v11 = objc_msgSend(v6, "constraintEqualToAnchor:", v10);

  objc_msgSend(v11, "setActive:", 1);
  v12 = objc_msgSend(v3, "trailingAnchor");
  v13 = objc_msgSend(v0, "view");
  if (!v13)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "safeAreaLayoutGuide");

  v16 = objc_msgSend(v15, "trailingAnchor");
  v17 = objc_msgSend(v12, "constraintEqualToAnchor:", v16);

  objc_msgSend(v17, "setActive:", 1);
  v18 = objc_msgSend(v3, "topAnchor");
  v19 = objc_msgSend(v0, "view");
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, "safeAreaLayoutGuide");

    v22 = objc_msgSend(v21, "topAnchor");
    v23 = objc_msgSend(v18, "constraintEqualToAnchor:", v22);

    objc_msgSend(v23, "setActive:", 1);
    v24 = objc_msgSend(v3, "bottomAnchor");
    v25 = objc_msgSend(v0, "view");
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend(v25, "bottomAnchor");

      v28 = objc_msgSend(v24, "constraintEqualToAnchor:", v27);
      objc_msgSend(v28, "setActive:", 1);

      return;
    }
    goto LABEL_13;
  }
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x800000010069A5F0, "FitnessApp/PauseRingsViewController.swift", 41, 2, 48, 0);
  __break(1u);
}

id sub_100341700()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PauseRingsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PauseRingsViewController()
{
  return objc_opt_self(_TtC10FitnessApp24PauseRingsViewController);
}

uint64_t sub_1003417A8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003417CC()
{
  uint64_t v0;

  sub_100341080(v0);
}

void *sub_1003417D4(void *result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  if (result)
  {

    swift_release(a4);
    return (void *)swift_release(a7);
  }
  return result;
}

id sub_10034181C(id result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  void *v8;
  id v9;

  if (result)
  {
    v8 = result;
    swift_retain(a7);
    v9 = v8;
    swift_retain(a4);
    return a5;
  }
  return result;
}

void sub_100341868()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  NSString v3;
  id v4;
  id v5;

  v0 = (void *)objc_opt_self(UIFont);
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIFontTextStyleBody);
  v2 = v1;
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v4 = objc_msgSend(v0, "defaultFontForTextStyle:", v3);

  if (v4)
  {
    v5 = objc_msgSend(v4, "fu_fontWithSize:", 12.0);

    qword_10082F100 = (uint64_t)v5;
  }
  else
  {
    __break(1u);
  }
}

char *sub_100341914(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  double v18;
  id v19;
  void *v20;
  char *v21;
  id v22;
  id v23;
  objc_super v25;

  v5 = v4;
  v10 = OBJC_IVAR____TtC10FitnessApp42WorkoutAppRecommendationCollectionViewCell_iconImageView;
  v11 = objc_allocWithZone((Class)UIImageView);
  v12 = v5;
  v13 = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = (void *)UIView.withContentMode(_:)(2);

  v15 = objc_msgSend(v14, "layer");
  objc_msgSend(v15, "setCornerRadius:", 10.0);

  objc_msgSend(v14, "setClipsToBounds:", 1);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v10] = v14;
  v16 = OBJC_IVAR____TtC10FitnessApp42WorkoutAppRecommendationCollectionViewCell_titleLabel;
  v17 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  LODWORD(v18) = 1148846080;
  objc_msgSend(v17, "setContentCompressionResistancePriority:forAxis:", 1, v18);
  objc_msgSend(v17, "setLineBreakMode:", 0);
  objc_msgSend(v17, "setNumberOfLines:", 2);
  objc_msgSend(v17, "setTextAlignment:", 1);
  if (qword_10081DAC8 != -1)
    swift_once(&qword_10081DAC8, sub_100341868);
  objc_msgSend(v17, "setFont:", qword_10082F100);
  v19 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v20 = (void *)UILabel.withTextColor(_:)(v19);

  objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v12[v16] = v20;

  v25.receiver = v12;
  v25.super_class = (Class)type metadata accessor for WorkoutAppRecommendationCollectionViewCell();
  v21 = (char *)objc_msgSendSuper2(&v25, "initWithFrame:", a1, a2, a3, a4);
  v22 = objc_msgSend(v21, "contentView");
  objc_msgSend(v22, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC10FitnessApp42WorkoutAppRecommendationCollectionViewCell_iconImageView]);

  v23 = objc_msgSend(v21, "contentView");
  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC10FitnessApp42WorkoutAppRecommendationCollectionViewCell_titleLabel]);

  sub_100341E44();
  return v21;
}

uint64_t sub_100341BEC(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  double v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;

  v2 = v1;
  v4 = OBJC_IVAR____TtC10FitnessApp42WorkoutAppRecommendationCollectionViewCell_iconImageView;
  v5 = objc_allocWithZone((Class)UIImageView);
  v6 = v2;
  v7 = objc_msgSend(v5, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = (void *)UIView.withContentMode(_:)(2);

  v9 = objc_msgSend(v8, "layer");
  objc_msgSend(v9, "setCornerRadius:", 10.0);

  objc_msgSend(v8, "setClipsToBounds:", 1);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v2[v4] = v8;
  v10 = OBJC_IVAR____TtC10FitnessApp42WorkoutAppRecommendationCollectionViewCell_titleLabel;
  v11 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  LODWORD(v12) = 1148846080;
  objc_msgSend(v11, "setContentCompressionResistancePriority:forAxis:", 1, v12);
  objc_msgSend(v11, "setLineBreakMode:", 0);
  objc_msgSend(v11, "setNumberOfLines:", 2);
  objc_msgSend(v11, "setTextAlignment:", 1);
  if (qword_10081DAC8 != -1)
    swift_once(&qword_10081DAC8, sub_100341868);
  objc_msgSend(v11, "setFont:", qword_10082F100);
  v13 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v14 = (void *)UILabel.withTextColor(_:)(v13);

  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v6[v10] = v14;

  v15 = *(void **)&v6[v10];
  v16 = type metadata accessor for WorkoutAppRecommendationCollectionViewCell();
  swift_deallocPartialClassInstance(v6, v16, 24, 7);
  return 0;
}

void sub_100341E44()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  Class isa;
  CGRect v49;

  v1 = v0;
  v47 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = sub_100047110((uint64_t *)&unk_100828340);
  v3 = swift_allocObject(v2, 88, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100626C00;
  v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp42WorkoutAppRecommendationCollectionViewCell_iconImageView];
  v5 = objc_msgSend(v4, "topAnchor");
  v6 = objc_msgSend(v1, "contentView");
  v7 = objc_msgSend(v6, "topAnchor");

  v8 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v7, 13.0);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = objc_msgSend(v4, "centerXAnchor");
  v10 = objc_msgSend(v1, "contentView");
  v11 = objc_msgSend(v10, "centerXAnchor");

  v12 = objc_msgSend(v9, "constraintEqualToAnchor:", v11);
  *(_QWORD *)(v3 + 40) = v12;
  v13 = objc_msgSend(v4, "widthAnchor");
  v14 = objc_msgSend(v1, "contentView");
  objc_msgSend(v14, "frame");
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;

  v49.origin.x = v16;
  v49.origin.y = v18;
  v49.size.width = v20;
  v49.size.height = v22;
  v23 = objc_msgSend(v13, "constraintEqualToConstant:", CGRectGetWidth(v49) + -27.0);

  *(_QWORD *)(v3 + 48) = v23;
  v24 = objc_msgSend(v4, "heightAnchor");
  v25 = objc_msgSend(v4, "widthAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v3 + 56) = v26;
  v27 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp42WorkoutAppRecommendationCollectionViewCell_titleLabel];
  v28 = objc_msgSend(v27, "topAnchor");
  v29 = objc_msgSend(v4, "bottomAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, 3.0);

  *(_QWORD *)(v3 + 64) = v30;
  v31 = objc_msgSend(v27, "leadingAnchor");
  v32 = objc_msgSend(v1, "contentView");
  v33 = objc_msgSend(v32, "leadingAnchor");

  v34 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, 5.0);
  *(_QWORD *)(v3 + 72) = v34;
  v35 = objc_msgSend(v27, "trailingAnchor");
  v36 = objc_msgSend(v1, "contentView");
  v37 = objc_msgSend(v36, "trailingAnchor");

  v38 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v37, -5.0);
  *(_QWORD *)(v3 + 80) = v38;
  specialized Array._endMutation()(v39);
  sub_100039898();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v3, v40, v41, v42, v43, v44, v45, v46);
  objc_msgSend(v47, "activateConstraints:", isa);

}

uint64_t sub_100342264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[6] = v8;
  v6[7] = v9;
  return swift_task_switch(sub_1003422D4, v8, v9);
}

uint64_t sub_1003422D4()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  id v8;
  double v9;
  double v10;
  _QWORD *v11;

  v1 = (_QWORD *)v0[3];
  v2 = *(void **)(v0[2] + OBJC_IVAR____TtC10FitnessApp42WorkoutAppRecommendationCollectionViewCell_iconImageView);
  v0[8] = v2;
  objc_msgSend(v2, "size");
  v4 = v3;
  v6 = v5;
  v7 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v8 = objc_msgSend(v7, "traitCollection");

  objc_msgSend(v8, "displayScale");
  v10 = v9;

  sub_100016804(v1, v1[3]);
  v11 = (_QWORD *)swift_task_alloc(dword_100835FD4);
  v0[9] = v11;
  *v11 = v0;
  v11[1] = sub_10031E2B0;
  return sub_100496DC8(v0[4], v4, v6, v10);
}

id sub_1003423CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutAppRecommendationCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutAppRecommendationCollectionViewCell()
{
  return objc_opt_self(_TtC10FitnessApp42WorkoutAppRecommendationCollectionViewCell);
}

id sub_100342454(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  NSString v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  NSString v15;
  id v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  NSString v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  NSString v31;
  id v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  NSString v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  id v47;
  NSString v48;
  id v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  NSString v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;

  v2 = v1;
  FIUIPaceFormatForWorkoutActivityType(a1);
  v4 = objc_msgSend(a1, "workoutActivityType");
  v5 = objc_msgSend(v4, "identifier");

  if (qword_10081D678 != -1)
    swift_once(&qword_10081D678, sub_1001A5270);
  v6 = (void *)UILabel.withFont(_:)(qword_100869FE8);
  v7 = (void *)objc_opt_self(UIColor);
  v8 = objc_msgSend(v7, "secondaryLabelColor");
  v9 = (void *)UILabel.withTextColor(_:)(v8);

  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setText:", v10);

  v11 = (void *)UILabel.withFont(_:)(qword_100869FE8);
  v12 = objc_msgSend(v7, "secondaryLabelColor");
  v13 = (void *)UILabel.withTextColor(_:)(v12);

  v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v18 = v17;

  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setText:", v19);

  swift_bridgeObjectRelease(v18, v20, v21, v22, v23, v24, v25, v26);
  v27 = (void *)UILabel.withFont(_:)(qword_100869FE8);
  v28 = objc_msgSend(v7, "secondaryLabelColor");
  v29 = (void *)UILabel.withTextColor(_:)(v28);

  v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v34 = v33;

  v35 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setText:", v35);

  swift_bridgeObjectRelease(v34, v36, v37, v38, v39, v40, v41, v42);
  v43 = (void *)UILabel.withFont(_:)(qword_100869FE8);
  v44 = objc_msgSend(v7, "secondaryLabelColor");
  v45 = (void *)UILabel.withTextColor(_:)(v44);

  if (v5 == (id)46)
  {
    v46 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
  }
  else
  {
    v47 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v48 = String._bridgeToObjectiveC()();
    v49 = objc_msgSend(v47, "localizedStringForKey:value:table:", v48, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v46 = v50;

  }
  v51 = String._bridgeToObjectiveC()();
  objc_msgSend(v45, "setText:", v51);

  swift_bridgeObjectRelease(v46, v52, v53, v54, v55, v56, v57, v58);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView), "setHidden:", 1);
  return sub_1001BB604();
}

uint64_t sub_100342980(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(_QWORD *, uint64_t, uint64_t);
  uint64_t v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  __n128 v27;
  void *v28;
  _QWORD *v29;
  void *v30;
  void *v31;
  void *v32;
  _QWORD *v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  char v50[8];
  _QWORD aBlock[5];
  _QWORD *v52;

  v47 = a4;
  v45 = a1;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v46 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v12 = sub_100047110(&qword_10082CEC0);
    v13 = swift_allocObject(v12, 64, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100622F90;
    v43 = v11;
    swift_getErrorValue(a2, v50, &v48);
    v14 = a3;
    v15 = v48;
    v16 = v49;
    *(_QWORD *)(v13 + 56) = v49;
    v11 = v43;
    v17 = sub_10004C480((_QWORD *)(v13 + 32));
    v18 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v19 = v16;
    a3 = v14;
    v18(v17, v15, v19);
    swift_errorRetain(a2);
    print(_:separator:terminator:)(v13, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v13, v20, v21, v22, v23, v24, v25, v26);
    swift_errorRelease(a2);
  }
  sub_10002FB54();
  v28 = (void *)static OS_dispatch_queue.main.getter(v27);
  v29 = (_QWORD *)swift_allocObject(&unk_100797440, 40, 7);
  v30 = v45;
  v29[2] = a3;
  v29[3] = v30;
  v31 = v47;
  v29[4] = v47;
  aBlock[4] = sub_100343FB4;
  v52 = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_100797458;
  v32 = _Block_copy(aBlock);
  v33 = v52;
  v34 = v30;
  v35 = v31;
  v36 = a3;
  swift_release(v33);
  static DispatchQoS.unspecified.getter(v37);
  aBlock[0] = _swiftEmptyArrayStorage;
  v38 = sub_10002FAC0();
  v39 = sub_100047110(&qword_100828C80);
  v40 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v39, v40, v6, v38);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v32);
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v44);
}

void sub_100342C28(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  uint64_t v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  id v9;
  void *v10;
  NSString v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  uint64_t v13;
  id v14;
  void *v15;
  NSString v16;
  id v17;
  uint64_t v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  unint64_t v21;
  uint64_t v22;
  const char *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;

  v4 = objc_msgSend(a1, "localizedStringWithHeartRate:", a2);
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;
  }
  else
  {
    v9 = (id)FIUIBundle(0);
    if (!v9)
    {
LABEL_10:
      __break(1u);
      return;
    }
    v10 = v9;
    v11 = String._bridgeToObjectiveC()();
    v5 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, 0, 0);

    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v12;

  }
  v14 = (id)FIUIBundle(v13);
  if (!v14)
  {
    __break(1u);
    goto LABEL_10;
  }
  v15 = v14;
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "localizedStringForKey:value:table:", v16, 0, 0);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v47 = v18;
  v21 = sub_100038CA0();
  v22 = StringProtocol.localizedUppercase.getter(&type metadata for String, v21);
  v24 = (CHWorkoutDetailHeartRateTableViewCell *)v23;
  swift_bridgeObjectRelease(v20, v23, v25, v26, v27, v28, v29, v30);
  v31 = *(void **)(a3 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel);
  if (qword_10081D688 != -1)
    swift_once(&qword_10081D688, sub_1001A536C);
  v32 = sub_1000387C4(v6, (uint64_t)v8, v22, (uint64_t)v24, (void *)qword_100869FF8);
  swift_bridgeObjectRelease(v24, v33, v34, v35, v36, v37, v38, v39);
  swift_bridgeObjectRelease(v8, v40, v41, v42, v43, v44, v45, v46);
  objc_msgSend(v31, "setAttributedText:", v32, v47, v20);

}

id sub_100342F0C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  NSString v7;
  void *v8;
  void *v9;
  id result;
  void *v11;
  id v12;
  NSString v13;
  void *v14;
  void *v15;
  id v16;
  NSString v17;
  void *v18;
  void *v19;
  id v20;
  NSString v21;
  void *v22;

  v2 = v1;
  if (qword_10081D680 != -1)
    swift_once(&qword_10081D680, sub_1001A5284);
  v4 = (void *)UILabel.withFont(_:)(qword_100869FF0);
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v6 = (void *)UILabel.withTextColor(_:)(v5);

  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setText:", v7);

  if (qword_10081D688 != -1)
    swift_once(&qword_10081D688, sub_1001A536C);
  v8 = (void *)UILabel.withFont(_:)(qword_100869FF8);
  v9 = (void *)objc_opt_self(ARUIMetricColors);
  result = objc_msgSend(v9, "elapsedTimeColors");
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  v11 = result;
  v12 = objc_msgSend(result, "nonGradientTextColor");

  objc_msgSend(v8, "setTextColor:", v12);
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setText:", v13);

  v14 = (void *)UILabel.withFont(_:)(qword_100869FF8);
  result = objc_msgSend(v9, "paceColors");
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v15 = result;
  v16 = objc_msgSend(result, "nonGradientTextColor");

  objc_msgSend(v14, "setTextColor:", v16);
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setText:", v17);

  v18 = (void *)UILabel.withFont(_:)(qword_100869FF8);
  result = objc_msgSend(v9, "heartRateColors");
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v19 = result;
  v20 = objc_msgSend(result, "nonGradientTextColor");

  objc_msgSend(v18, "setTextColor:", v20);
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setText:", v21);

  result = objc_msgSend(*(id *)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView), "setHidden:", a1 & 1);
  if ((a1 & 1) != 0)
  {
    v22 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorStandard);
    if (v22)
      objc_msgSend(v22, "setActive:", 0);
    result = *(id *)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorLastRow);
    if (result)
      return objc_msgSend(result, "setActive:", 1);
  }
  return result;
}

id sub_100343330()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailFourColumnSplitTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailFourColumnSplitTableViewCell()
{
  return objc_opt_self(CHWorkoutDetailFourColumnSplitTableViewCell);
}

id sub_100343380()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSLengthFormatter), "init");
  result = objc_msgSend(v0, "setUnitStyle:", 1);
  qword_10082F148 = (uint64_t)v0;
  return result;
}

void sub_1003433CC(void *a1, char *a2, char a3, void *a4)
{
  char *v4;
  _UNKNOWN **v5;
  char **v6;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  void *v17;
  NSString v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  id v41;
  NSString v42;
  id v43;
  uint64_t v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  __n128 v50;
  const char *v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  NSString v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  id v76;
  void *v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  id v81;
  NSString v82;
  id v83;
  uint64_t v84;
  CHWorkoutDetailHeartRateTableViewCell *v85;
  CHWorkoutDetailHeartRateTableViewCell *v86;
  uint64_t v87;
  const char *v88;
  CHWorkoutDetailHeartRateTableViewCell *v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  void *v96;
  SEL v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  __n128 v104;
  void *v105;
  void *v106;
  void *v107;
  char *v108;
  uint64_t v109;
  id v110;
  char *v111;
  id v112;

  sub_100342F0C(a3);
  v10 = objc_opt_self(NSNumberFormatter);
  v11 = (uint64_t)(a2 + 1);
  if (__OFADD__(a2, 1))
  {
    __break(1u);
LABEL_17:
    swift_once(&qword_10081DAD0, sub_100343380);
    goto LABEL_4;
  }
  v12 = (void *)v10;
  v5 = &FIUIDistanceTypeForActivityType_ptr;
  v6 = &selRef_tableView_titleForHeaderInSection_;
  v13 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a2 + 1);
  v14 = objc_msgSend(v12, "localizedStringFromNumber:numberStyle:", v13, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = *(void **)&v4[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel];
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setText:", v18);
  swift_bridgeObjectRelease(v16, v19, v20, v21, v22, v23, v24, v25);

  v26 = objc_msgSend(a4, "unitManager");
  if (!v26)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
  v27 = v26;
  a2 = (char *)objc_msgSend(v26, "userDistanceHKUnitForDistanceType:", 3);

  if (qword_10081DAD0 != -1)
    goto LABEL_17;
LABEL_4:
  v28 = objc_msgSend((id)qword_10082F148, "unitStringFromValue:unit:", objc_msgSend((id)objc_opt_self(HKUnit), "lengthFormatterUnitFromUnit:", a2), 1.0);
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v31 = v30;

  v32 = (uint64_t)objc_msgSend(a1, "splitDelimiterDistance");
  if ((unsigned __int128)(v32 * (__int128)v11) >> 64 != (v32 * v11) >> 63)
  {
    __break(1u);
    goto LABEL_19;
  }
  v109 = v31;
  v110 = (id)v29;
  v107 = a1;
  v33 = objc_msgSend(objc_allocWithZone((Class)v5[369]), v6[234], v32 * v11);
  v34 = objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "stringWithNumber:decimalPrecision:", v33, 1);
  v108 = a2;
  v105 = v33;
  v106 = a4;
  if (v34)
  {
    v35 = v34;
    v36 = v4;
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v39 = v38;

  }
  else
  {
    v36 = v4;
    v37 = 0;
    v39 = 0xE000000000000000;
  }
  v40 = (void *)objc_opt_self(NSBundle);
  v41 = objc_msgSend(v40, "mainBundle");
  v42 = String._bridgeToObjectiveC()();
  v43 = objc_msgSend(v41, "localizedStringForKey:value:table:", v42, 0, 0);

  v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
  v46 = v45;

  v47 = sub_100047110((uint64_t *)&unk_100827460);
  v48 = swift_allocObject(v47, 112, 7);
  *(_OWORD *)(v48 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v48 + 56) = &type metadata for String;
  v49 = sub_100038CF8();
  *(_QWORD *)(v48 + 32) = v37;
  *(_QWORD *)(v48 + 40) = v39;
  *(_QWORD *)(v48 + 96) = &type metadata for String;
  *(_QWORD *)(v48 + 104) = v49;
  *(_QWORD *)(v48 + 64) = v49;
  *(_QWORD *)(v48 + 72) = v110;
  *(_QWORD *)(v48 + 80) = v109;
  String.init(format:_:)(v44, v46, v48, v50);
  v52 = (CHWorkoutDetailHeartRateTableViewCell *)v51;
  swift_bridgeObjectRelease(v46, v51, v53, v54, v55, v56, v57, v58);
  v59 = *(void **)&v36[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel];
  v60 = String._bridgeToObjectiveC()();
  objc_msgSend(v59, "setText:", v60);
  swift_bridgeObjectRelease(v52, v61, v62, v63, v64, v65, v66, v67);

  v68 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "distanceColors");
  if (!v68)
    goto LABEL_20;
  v69 = v68;
  v111 = v36;
  v70 = objc_msgSend(v68, "nonGradientTextColor");

  objc_msgSend(v59, "setTextColor:", v70);
  v71 = objc_msgSend(v107, "formattedPaceWithFormattingManager:", v106);
  if (v71)
  {
    v72 = v71;
    v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
    v75 = v74;

  }
  else
  {
    v73 = 0;
    v75 = 0xE000000000000000;
  }
  v76 = objc_msgSend(v107, "formattedStrokeCount", 2, 4);
  if (v76)
  {
    v77 = v76;
    v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v76);
    v80 = v79;

  }
  else
  {
    v78 = 0;
    v80 = 0xE000000000000000;
  }
  v81 = objc_msgSend(v40, "mainBundle");
  v82 = String._bridgeToObjectiveC()();
  v83 = objc_msgSend(v81, "localizedStringForKey:value:table:", v82, 0, 0);

  v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
  v86 = v85;

  v87 = swift_allocObject(v47, 112, 7);
  *(__n128 *)(v87 + 16) = v104;
  *(_QWORD *)(v87 + 56) = &type metadata for String;
  *(_QWORD *)(v87 + 64) = v49;
  *(_QWORD *)(v87 + 32) = v73;
  *(_QWORD *)(v87 + 40) = v75;
  *(_QWORD *)(v87 + 96) = &type metadata for String;
  *(_QWORD *)(v87 + 104) = v49;
  *(_QWORD *)(v87 + 72) = v78;
  *(_QWORD *)(v87 + 80) = v80;
  String.init(format:_:)(v84, v86, v87, v104);
  v89 = (CHWorkoutDetailHeartRateTableViewCell *)v88;
  swift_bridgeObjectRelease(v86, v88, v90, v91, v92, v93, v94, v95);
  v96 = *(void **)&v111[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel];
  v112 = String._bridgeToObjectiveC()();
  objc_msgSend(v96, "setText:", v112);

  swift_bridgeObjectRelease(v89, v97, v98, v99, v100, v101, v102, v103);
}

void sub_100343A0C(void *a1, void *a2, void *a3, uint64_t a4, char a5, void *a6, void *a7)
{
  char *v7;
  char *v8;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  void *v29;
  NSString v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  double v38;
  uint64_t v39;
  id v40;
  NSString v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  void *v44;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  id v54;
  double v55;
  id v56;
  uint64_t v57;
  id v58;
  NSString v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  void *v62;
  SEL v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  objc_class *v70;
  Class isa;
  char *v72;
  char *v73;
  uint64_t v74;
  int v75;
  void *v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  id v81;
  char *v82;
  double v83;
  uint64_t v84;
  char *v85;
  void *v86;
  uint64_t v87;
  id v88;
  id v89;
  _QWORD aBlock[5];
  uint64_t v91;

  v8 = v7;
  v88 = a1;
  v87 = type metadata accessor for DateInterval(0);
  v15 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v17 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100047110((uint64_t *)&unk_100827440);
  __chkstk_darwin(v18);
  v20 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100342F0C(a5);
  v21 = objc_opt_self(NSNumberFormatter);
  v22 = __OFADD__(a4, 1);
  v23 = a4 + 1;
  if (v22)
  {
    __break(1u);
    goto LABEL_21;
  }
  v24 = (void *)v21;
  v85 = v17;
  v86 = a6;
  v25 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v23);
  v26 = objc_msgSend(v24, "localizedStringFromNumber:numberStyle:", v25, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v28 = v27;

  v29 = *(void **)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel];
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setText:", v30);
  swift_bridgeObjectRelease(v28, v31, v32, v33, v34, v35, v36, v37);

  objc_msgSend(a3, "duration");
  if (round(v38) < 3600.0)
    v39 = 3;
  else
    v39 = 2;
  v89 = a7;
  v40 = objc_msgSend(a7, "stringWithDuration:durationFormat:", v39);
  v41 = v40;
  if (v40)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

    v44 = *(void **)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel];
    v41 = String._bridgeToObjectiveC()();
  }
  else
  {
    v43 = 0;
    v44 = *(void **)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel];
  }
  objc_msgSend(v44, "setText:", v41);
  swift_bridgeObjectRelease(v43, v45, v46, v47, v48, v49, v50, v51);

  if (!a2)
  {
    v52 = objc_msgSend(v88, "fiui_activityType");
    if (v52)
      goto LABEL_11;
LABEL_21:
    __break(1u);
    return;
  }
  v52 = objc_msgSend(a2, "fiui_activityType");
LABEL_11:
  v53 = FIUIPaceFormatForWorkoutActivityType(v52);
  v54 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
  objc_msgSend(a3, "distanceInMeters");
  v56 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v54, v55);

  v57 = FIUIDistanceTypeForActivityType(v52);
  v58 = v56;
  objc_msgSend(a3, "duration");
  v59 = objc_msgSend(v89, "localizedPaceStringWithDistance:overDuration:paceFormat:distanceType:", v58, v53, v57);

  if (v59)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
    v61 = v60;

    v62 = *(void **)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel];
    v59 = String._bridgeToObjectiveC()();
  }
  else
  {
    v61 = 0;
    v62 = *(void **)&v8[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel];
  }
  objc_msgSend(v62, "setText:", v59);
  swift_bridgeObjectRelease(v61, v63, v64, v65, v66, v67, v68, v69);

  v70 = (objc_class *)objc_msgSend(a3, "dateInterval");
  isa = v70;
  if (v70)
  {
    v72 = v85;
    static DateInterval._unconditionallyBridgeFromObjectiveC(_:)(v70);

    v73 = v72;
    v74 = v87;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v73, v87);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v74);
    v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v74);
    v76 = v86;
    if (v75 == 1)
    {
      isa = 0;
    }
    else
    {
      isa = DateInterval._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v74);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v20, 1, 1, v87);
    v76 = v86;
  }
  v77 = swift_allocObject(&unk_1007973F0, 32, 7);
  v78 = v89;
  *(_QWORD *)(v77 + 16) = v89;
  *(_QWORD *)(v77 + 24) = v8;
  aBlock[4] = sub_100343F78;
  v91 = v77;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001ABA78;
  aBlock[3] = &unk_100797408;
  v79 = _Block_copy(aBlock);
  v80 = v91;
  v81 = v78;
  v82 = v8;
  *(_QWORD *)&v83 = swift_release(v80).n128_u64[0];
  objc_msgSend(v76, "averageHeartRateForWorkout:during:completion:", v88, isa, v79, v83);
  _Block_release(v79);

}

uint64_t sub_100343F4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100343F78(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100342980(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100343F80()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_100343FB4()
{
  uint64_t v0;

  sub_100342C28(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_100343FC8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void **aBlock;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  void *v28;
  void (*v29)(uint64_t);
  uint64_t v30;

  if ((sub_10000AB48() & 1) == 0)
  {
    v1 = (void *)objc_opt_self(NSNotificationCenter);
    v2 = objc_msgSend(v1, "defaultCenter");
    v3 = kFIUIFitnessUnitPreferencesDidChangeNotification;
    v4 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context)+ OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager), "unitManager");
    v5 = (void *)objc_opt_self(NSOperationQueue);
    v6 = objc_msgSend(v5, "mainQueue");
    v7 = swift_allocObject(&unk_1007974A0, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16, v0);
    v29 = sub_1003443E8;
    v30 = v7;
    aBlock = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_1000398D4;
    v28 = &unk_1007974B8;
    v8 = _Block_copy(&aBlock);
    v24 = objc_msgSend(v2, "addObserverForName:object:queue:usingBlock:", v3, v4, v6, v8, swift_release(v30).n128_f64[0]);
    _Block_release(v8);

    v9 = objc_msgSend(v1, "defaultCenter");
    v10 = kASFriendListChangedNotificationKey;
    v11 = objc_msgSend(v5, "mainQueue");
    v12 = swift_allocObject(&unk_1007974A0, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v0);
    v29 = sub_100344410;
    v30 = v12;
    aBlock = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_1000398D4;
    v28 = &unk_1007974E0;
    v13 = _Block_copy(&aBlock);
    v14 = objc_msgSend(v9, "addObserverForName:object:queue:usingBlock:", v10, 0, v11, v13, swift_release(v30).n128_f64[0]);
    _Block_release(v13);

    v15 = objc_msgSend(v1, "defaultCenter");
    if (qword_10081DE28 != -1)
      swift_once(&qword_10081DE28, sub_10004E610);
    v16 = qword_10086AC40;
    v17 = objc_msgSend(v5, "mainQueue");
    v18 = swift_allocObject(&unk_1007974A0, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16, v0);
    v29 = sub_1003444F0;
    v30 = v18;
    aBlock = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_1000398D4;
    v28 = &unk_100797508;
    v19 = _Block_copy(&aBlock);
    v20 = objc_msgSend(v15, "addObserverForName:object:queue:usingBlock:", v16, 0, v17, v19, swift_release(v30).n128_f64[0]);
    _Block_release(v19);

    v21 = sub_100047110(&qword_10082CEC0);
    v22 = swift_allocObject(v21, 128, 7);
    *(_OWORD *)(v22 + 16) = xmmword_100624A40;
    *(_QWORD *)(v22 + 56) = swift_getObjectType(v24);
    *(_QWORD *)(v22 + 32) = v24;
    *(_QWORD *)(v22 + 88) = swift_getObjectType(v14);
    *(_QWORD *)(v22 + 64) = v14;
    *(_QWORD *)(v22 + 120) = swift_getObjectType(v20);
    *(_QWORD *)(v22 + 96) = v20;
    v23 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_notificationCenterObservers);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_notificationCenterObservers) = v22;
    swift_bridgeObjectRelease(v23);
  }
}

uint64_t sub_1003443C4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003443E8(uint64_t a1)
{
  uint64_t v1;

  sub_100344438(a1, v1, "[SummaryCoordinator] did receive fiuiFitnessUnitPreferencesDidChange notification", 81, 0x2Du);
}

void sub_100344410(uint64_t a1)
{
  uint64_t v1;

  sub_100344438(a1, v1, "[SummaryCoordinator] did receive ASFriendListChangedNotificationKey notification", 80, 0x28u);
}

void sub_100344438(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t Strong;
  void *v12;
  _BYTE v13[24];

  v8 = a2 + 16;
  v9 = static os_log_type_t.default.getter(a1);
  v10 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v10, a3, a4, 2, _swiftEmptyArrayStorage);

  swift_beginAccess(v8, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v12 = (void *)Strong;
    sub_10035DDA4(a5);

  }
}

void sub_1003444F0(uint64_t a1)
{
  uint64_t v1;

  sub_100344438(a1, v1, "[SummaryCoordinator] did receive trendsAvailabilityDidChangeNotification notification", 85, 0x31u);
}

void destroy for MirrorIntervalsPlatterView(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 32));

}

uint64_t *initializeWithCopy for MirrorIntervalsPlatterView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = a2[2];
  v5 = a2[3];
  a1[2] = v6;
  a1[3] = v5;
  v7 = a2[4];
  v8 = (void *)a2[5];
  a1[4] = v7;
  a1[5] = (uint64_t)v8;
  v9 = (void *)a2[6];
  a1[6] = (uint64_t)v9;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v7);
  v10 = v8;
  v11 = v9;
  return a1;
}

uint64_t *assignWithCopy for MirrorIntervalsPlatterView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[3] = a2[3];
  v8 = a2[4];
  v9 = a1[4];
  a1[4] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = (void *)a2[5];
  v11 = (void *)a1[5];
  a1[5] = (uint64_t)v10;
  v12 = v10;

  v13 = (void *)a2[6];
  v14 = (void *)a1[6];
  a1[6] = (uint64_t)v13;
  v15 = v13;

  return a1;
}

_QWORD *assignWithTake for MirrorIntervalsPlatterView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v4 = *a1;
  *a1 = *(_QWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = a1[2];
  a1[1] = *(_QWORD *)(a2 + 8);
  a1[2] = v5;
  swift_release(v6);
  a1[3] = *(_QWORD *)(a2 + 24);
  swift_release(a1[4]);
  v7 = (void *)a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);

  v8 = (void *)a1[6];
  a1[6] = *(_QWORD *)(a2 + 48);

  return a1;
}

ValueMetadata *type metadata accessor for MirrorIntervalsPlatterView()
{
  return &type metadata for MirrorIntervalsPlatterView;
}

uint64_t sub_100344704(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B4A24, 1);
}

uint64_t sub_100344714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  void *v7;
  __n128 v8;
  char v9;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v1 + 48);
  if (objc_msgSend(v7, "effectiveTypeIdentifier", v4) == (id)13)
  {
    if (objc_msgSend(v7, "isIndoor"))
    {
      v30 = *(_OWORD *)(v1 + 24);
      v8 = swift_retain(*((_QWORD *)&v30 + 1));
      v9 = WorkoutStatePublisher.hasSpeedSensorEverBeenConnected.getter(v8);
      sub_10004D634((uint64_t)&v30);
      return v9 & 1;
    }
    else
    {
      return 1;
    }
  }
  else
  {
    static WOLog.app.getter();
    sub_100346730((_QWORD *)v1);
    v11 = sub_100346730((_QWORD *)v1);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.fault.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v30 = v28;
      *(_DWORD *)v14 = 136446210;
      v27 = v14 + 4;
      v15 = HKWorkoutActivityType.description.getter(objc_msgSend(v7, "effectiveTypeIdentifier"));
      v17 = (CHWorkoutDetailHeartRateTableViewCell *)v16;
      v29 = sub_10003E8EC(v15, v16, (uint64_t *)&v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v27);
      swift_bridgeObjectRelease(v17, v18, v19, v20, v21, v22, v23, v24);
      sub_10034678C((uint64_t *)v1);
      sub_10034678C((uint64_t *)v1);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Asking whether we support distance metrics, but not in a cycling workout: %{public}s", v14, 0xCu);
      v25 = v28;
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }
    else
    {
      sub_10034678C((uint64_t *)v1);
      sub_10034678C((uint64_t *)v1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
}

uint64_t sub_100344948@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t OpaqueTypeConformance2;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[2];
  __int128 v63;

  v61 = a1;
  v2 = type metadata accessor for WorkoutViewStyle(0);
  v57 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10082F178);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_10082F180);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_10082F188);
  v54 = *(_QWORD *)(v11 - 8);
  v55 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100047110(&qword_10082F190);
  __chkstk_darwin(v60);
  v51 = (uint64_t)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v56 = (uint64_t)&v50 - v16;
  v59 = sub_100047110(&qword_10082F198);
  __chkstk_darwin(v59);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_10082F1A0);
  __chkstk_darwin(v19);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t *)v1;
  v63 = *(_OWORD *)(v1 + 8);
  v23 = swift_retain(*((_QWORD *)&v63 + 1));
  v24 = IntervalsMetricsPublisher.intervalThisStep.getter(v23);
  v25 = sub_10004D634((uint64_t)&v63);
  if (v24)
  {
    v26 = (void *)WorkoutStep.goal.getter(v25);
    v27 = objc_msgSend(v26, "goalTypeIdentifier");

    v28 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "metricColorsForGoalTypeIdentifier:", v27);
    *v21 = 0;
    sub_100344E08(v22, v28, v24, &v21[*(int *)(v19 + 44)]);
    sub_100021CC0((uint64_t)v21, (uint64_t)v18, &qword_10082F1A0);
    swift_storeEnumTagMultiPayload(v18, v59, 0);
    v29 = v19;
    v30 = sub_100346424();
    v31 = sub_1003464C0();
    _ConditionalContent<>.init(storage:)(v18, v29, v60, v30, v31);
    swift_release(v24);

    v32 = (uint64_t)v21;
    v33 = &qword_10082F1A0;
  }
  else
  {
    *(_QWORD *)v7 = static HorizontalAlignment.leading.getter(v25);
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 1;
    v34 = sub_100047110(&qword_10082F1A8);
    sub_100346108((uint64_t)v22, &v7[*(int *)(v34 + 44)]);
    v35 = v19;
    v36 = sub_100028384(&qword_10082F1B0, &qword_10082F178, (uint64_t)&protocol conformance descriptor for VStack<A>);
    View.metricValueFont(includesSlashes:smallCaps:)(0, 1, v5, v36);
    sub_10001BE90((uint64_t)v7, &qword_10082F178);
    v38 = v57;
    v37 = v58;
    (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v4, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v58);
    v62[0] = v5;
    v62[1] = v36;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v62, &opaque type descriptor for <<opaque return type of View.metricValueFont(includesSlashes:smallCaps:)>>, 1);
    v40 = v53;
    View.workoutViewStyle(_:)(v4, v53, OpaqueTypeConformance2);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v4, v37);
    v41 = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v10, v40);
    v42 = static Alignment.center.getter(v41);
    v43 = v51;
    v45 = sub_1003EC644(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v51, 0.0, 1, 0.0, 1, v42, v44);
    (*(void (**)(char *, uint64_t, double))(v54 + 8))(v13, v55, v45);
    v46 = v56;
    sub_100045AD4(v43, v56, &qword_10082F190);
    sub_100021CC0(v46, (uint64_t)v18, &qword_10082F190);
    swift_storeEnumTagMultiPayload(v18, v59, 1);
    v47 = sub_100346424();
    v48 = sub_1003464C0();
    _ConditionalContent<>.init(storage:)(v18, v35, v60, v47, v48);
    v32 = v46;
    v33 = &qword_10082F190;
  }
  return sub_10001BE90(v32, v33);
}

id sub_100344E08@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  id result;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, _QWORD, uint64_t);
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int *v93;
  __n128 v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t OpaqueTypeConformance2;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  double v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  char v121;
  char v122;
  uint64_t v123;
  id v124;
  NSString v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  char *v134;
  void *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  void (*v155)(char *, char *, uint64_t);
  uint64_t v156;
  void (*v157)(char *, uint64_t);
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  id v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  unint64_t v168;
  char *v169;
  void (*v170)(char *, uint64_t);
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  id v174;
  char *v175;
  uint64_t KeyPath;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(char *, char *, uint64_t);
  char *v188;
  uint64_t v189;
  uint64_t v190;
  void (*v191)(char *, char *, uint64_t);
  char *v192;
  uint64_t v193;
  char *v194;
  int *v195;
  void (*v196)(char *, uint64_t);
  void (*v197)(char *, uint64_t);
  char *v198;
  char *v199;
  char *v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  void (*v207)(char *, _QWORD, uint64_t);
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  id v235;
  void *v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  id v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  id v249;
  id v250;
  id v251;
  id v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  __int128 v258;

  v231 = a3;
  v230 = a4;
  v6 = sub_100047110(&qword_10082E8E0);
  __chkstk_darwin(v6);
  v229 = (char *)&v198 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = sub_100047110(&qword_10082F1D8);
  v227 = *(_QWORD *)(v228 - 8);
  __chkstk_darwin(v228);
  v226 = (char *)&v198 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = sub_100047110(&qword_10082F1E0);
  __chkstk_darwin(v225);
  v10 = (char *)&v198 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v198 - v12;
  v14 = sub_100047110(&qword_10082F1E8);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v198 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v248 = (char *)&v198 - v19;
  v215 = sub_100047110(&qword_10081EFB0);
  v214 = *(_QWORD *)(v215 - 8);
  __chkstk_darwin(v215);
  v220 = (char *)&v198 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = sub_100047110(&qword_10082F1F0);
  v216 = *(_QWORD *)(v218 - 8);
  __chkstk_darwin(v218);
  v217 = (char *)&v198 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v22);
  v221 = (char *)&v198 - v24;
  v212 = type metadata accessor for DistanceMetricText(0, v23);
  v204 = *(_QWORD *)(v212 - 8);
  __chkstk_darwin(v212);
  v203 = (char *)&v198 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = sub_100047110(&qword_10082F1F8);
  v206 = *(_QWORD *)(v213 - 8);
  __chkstk_darwin(v213);
  v202 = (char *)&v198 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v205 = (char *)&v198 - v28;
  v209 = sub_100047110(&qword_10082F200);
  __chkstk_darwin(v209);
  v30 = (char *)&v198 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = type metadata accessor for MirrorIntervalTimeView(0);
  __chkstk_darwin(v210);
  v199 = (char *)&v198 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = sub_100047110(&qword_10082F208);
  v201 = *(_QWORD *)(v211 - 8);
  __chkstk_darwin(v211);
  v198 = (char *)&v198 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v200 = (char *)&v198 - v34;
  v35 = sub_100047110(&qword_10082F210);
  __chkstk_darwin(v35);
  v219 = (uint64_t)&v198 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v233 = (uint64_t)&v198 - v38;
  v39 = sub_100047110(&qword_10082F218);
  __chkstk_darwin(v39);
  v234 = (uint64_t)&v198 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v247 = (uint64_t)&v198 - v42;
  v242 = type metadata accessor for WorkoutViewStyle(0);
  v43 = *(_QWORD *)(v242 - 8);
  __chkstk_darwin(v242);
  v224 = (char *)&v198 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v241 = sub_100047110(&qword_10082F220);
  v246 = *(_QWORD *)(v241 - 8);
  __chkstk_darwin(v241);
  v240 = (char *)&v198 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v48 = (char *)&v198 - v47;
  __chkstk_darwin(v49);
  v245 = (char *)&v198 - v50;
  v243 = (id)a1[5];
  result = objc_msgSend(a2, "gradientDarkColor");
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  v208 = v30;
  v244 = v15;
  v222 = v13;
  v238 = v17;
  v239 = v14;
  v223 = v10;
  v236 = (void *)Color.init(_:)(result);
  result = objc_msgSend(a2, "gradientLightColor");
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v52 = (void *)Color.init(_:)(result);
  v53 = (void *)a1[6];
  v258 = *(_OWORD *)(a1 + 1);
  v54 = *((_QWORD *)&v258 + 1);
  v55 = *a1;
  v56 = v53;
  v57 = sub_10004D65C((uint64_t)&v258);
  v237 = v55;
  v58 = MetricsPublisher.workoutStatePublisher.getter(v57);
  v59 = type metadata accessor for IntervalsMetricsPublisher(0);
  v60 = sub_1000083D8(&qword_10082F228, (uint64_t (*)(uint64_t))&type metadata accessor for IntervalsMetricsPublisher, (uint64_t)&protocol conformance descriptor for IntervalsMetricsPublisher);
  v232 = v54;
  v61 = ObservedObject.init(wrappedValue:)(v54, v59, v60);
  v63 = v62;
  v64 = type metadata accessor for WorkoutStatePublisher(0);
  v65 = sub_1000083D8(&qword_10082F230, (uint64_t (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher, (uint64_t)&protocol conformance descriptor for WorkoutStatePublisher);
  v66 = ObservedObject.init(wrappedValue:)(v58, v64, v65);
  v68 = v67;
  result = objc_msgSend(a2, "nonGradientTextColor");
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v69 = Color.init(_:)(result);
  v249 = v243;
  v250 = v236;
  v251 = v52;
  v252 = v56;
  v235 = v56;
  v253 = v61;
  v254 = v63;
  v255 = v66;
  v256 = v68;
  v257 = v69;
  v70 = *(void (**)(char *, _QWORD, uint64_t))(v43 + 104);
  v71 = v224;
  v72 = v242;
  v70(v224, enum case for WorkoutViewStyle.iOSHeroEnclosedMetric(_:), v242);
  v73 = sub_100047110(&qword_10082F238);
  v74 = sub_10034659C();
  View.workoutViewStyle(_:)(v71, v73, v74);
  v236 = *(void **)(v43 + 8);
  ((void (*)(char *, uint64_t))v236)(v71, v72);
  v76 = v249;
  v75 = v250;
  v77 = v251;
  v78 = v252;
  v79 = v254;
  v80 = v256;
  swift_release(v257);
  swift_release(v80);
  swift_release(v79);

  swift_release(v77);
  swift_release(v75);

  (*(void (**)(char *, char *, uint64_t))(v246 + 32))(v245, v48, v241);
  v81 = sub_100344714();
  if ((v81 & 1) != 0)
  {
    v82 = v231;
    v83 = (void *)WorkoutStep.goal.getter(v81);
    v84 = objc_msgSend(v83, "goalTypeIdentifier");

    v85 = swift_retain(v232);
    v207 = v70;
    if (v84 == (id)1)
    {
      v86 = (uint64_t)v199;
      IntervalsMetricsPublisher.intervalStartDate.getter(v85);
      sub_10004D634((uint64_t)&v258);
      swift_retain(v82);
      v88 = MetricsPublisher.workoutStatePublisher.getter(v87);
      v90 = WorkoutStatePublisher.pauseTimes.getter(v89);
      swift_release(v88);
      v92 = MetricsPublisher.workoutStatePublisher.getter(v91);
      v93 = (int *)v210;
      WorkoutStatePublisher.lastUnbalancedPauseStart.getter(v94);
      v95 = swift_release(v92);
      *(_QWORD *)(v86 + v93[5]) = v82;
      *(_QWORD *)(v86 + v93[6]) = v90;
      *(_BYTE *)(v86 + v93[8]) = 0;
      v96 = v86 + v93[9];
      *(_QWORD *)v96 = 0;
      *(_BYTE *)(v96 + 8) = 1;
      *(_BYTE *)(v86 + v93[10]) = 1;
      LODWORD(v231) = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
      v97 = v242;
      ((void (*)(char *, __n128))v70)(v71, v95);
      v98 = (void *)sub_1000083D8(&qword_1008207B8, type metadata accessor for MirrorIntervalTimeView, (uint64_t)&unk_100629B88);
      v99 = v198;
      View.workoutViewStyle(_:)(v71, v93, v98);
      ((void (*)(char *, uint64_t))v236)(v71, v97);
      sub_1003466F4(v86);
      v100 = v201;
      v101 = v200;
      v102 = v211;
      (*(void (**)(char *, char *, uint64_t))(v201 + 32))(v200, v99, v211);
      v103 = v208;
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v208, v101, v102);
      swift_storeEnumTagMultiPayload(v103, v209, 0);
      v249 = v93;
      v250 = v98;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v249, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
      v105 = (void *)sub_1000083D8(&qword_10082F270, (uint64_t (*)(uint64_t))&type metadata accessor for DistanceMetricText, (uint64_t)&protocol conformance descriptor for DistanceMetricText);
      v249 = (id)v212;
      v250 = v105;
      v106 = swift_getOpaqueTypeConformance2(&v249, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
      _ConditionalContent<>.init(storage:)(v103, v102, v213, OpaqueTypeConformance2, v106);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v102);
    }
    else
    {
      v114 = IntervalsMetricsPublisher.intervalDistance.getter(v85);
      sub_10004D634((uint64_t)&v258);
      v115 = v243;
      v116 = FIUIDistanceTypeForActivityType(v235);
      v117 = MetricsPublisher.trackRunningMetricsPublisher.getter();
      v118 = dispatch thunk of TrackRunningMetricsPublisher.trackRunningCoordinator.getter();
      v119 = swift_release(v117);
      v120 = dispatch thunk of TrackRunningCoordinator.preferredDistanceUnit.getter(v119);
      v122 = v121;
      swift_release(v118);
      v123 = v122 & 1;
      v124 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v125 = String._bridgeToObjectiveC()();
      v126 = objc_msgSend(v124, "localizedStringForKey:value:table:", v125, 0, 0);

      v127 = static String._unconditionallyBridgeFromObjectiveC(_:)(v126);
      v129 = v128;

      v130 = v203;
      v131 = v123;
      v132 = v242;
      DistanceMetricText.init(distance:formattingManager:distanceType:distanceUnit:description:)(v115, v116, v120, v131, v127, v129, v114);
      LODWORD(v231) = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
      ((void (*)(char *))v70)(v71);
      v133 = (void *)sub_1000083D8(&qword_10082F270, (uint64_t (*)(uint64_t))&type metadata accessor for DistanceMetricText, (uint64_t)&protocol conformance descriptor for DistanceMetricText);
      v134 = v202;
      v135 = (void *)v212;
      View.workoutViewStyle(_:)(v71, v212, v133);
      ((void (*)(char *, uint64_t))v236)(v71, v132);
      (*(void (**)(char *, void *))(v204 + 8))(v130, v135);
      v136 = v206;
      v137 = v205;
      v138 = v213;
      (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v205, v134, v213);
      v139 = v208;
      (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v208, v137, v138);
      swift_storeEnumTagMultiPayload(v139, v209, 1);
      v140 = (void *)sub_1000083D8(&qword_1008207B8, type metadata accessor for MirrorIntervalTimeView, (uint64_t)&unk_100629B88);
      v249 = (id)v210;
      v250 = v140;
      v141 = swift_getOpaqueTypeConformance2(&v249, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
      v249 = v135;
      v250 = v133;
      v142 = swift_getOpaqueTypeConformance2(&v249, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
      _ConditionalContent<>.init(storage:)(v139, v211, v138, v141, v142);
      (*(void (**)(char *, uint64_t))(v136 + 8))(v137, v138);
    }
    v143 = v234;
    v144 = v218;
    v145 = v217;
    v146 = v216;
    v147 = v215;
    v148 = v214;
    v149 = v220;
    static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)(41, v243, v235, v237);
    v150 = v242;
    v151 = ((uint64_t (*)(char *, _QWORD, uint64_t))v207)(v71, v231, v242);
    v152 = swift_getOpaqueTypeConformance2(v151, &opaque type descriptor for <<opaque return type of static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)>>, 1);
    View.workoutViewStyle(_:)(v71, v147, v152);
    ((void (*)(char *, uint64_t))v236)(v71, v150);
    (*(void (**)(char *, uint64_t))(v148 + 8))(v149, v147);
    v153 = v221;
    (*(void (**)(char *, char *, uint64_t))(v146 + 32))(v221, v145, v144);
    v154 = v219;
    sub_100021CC0(v233, v219, &qword_10082F210);
    v155 = *(void (**)(char *, char *, uint64_t))(v146 + 16);
    v155(v145, v153, v144);
    sub_100021CC0(v154, v143, &qword_10082F210);
    v156 = sub_100047110(&qword_10082F278);
    v155((char *)(v143 + *(int *)(v156 + 48)), v145, v144);
    v157 = *(void (**)(char *, uint64_t))(v146 + 8);
    v157(v153, v144);
    sub_10001BE90(v233, &qword_10082F210);
    v158 = v145;
    v111 = v150;
    v70 = v207;
    v157(v158, v144);
    v159 = v154;
    v113 = v235;
    v110 = v243;
    sub_10001BE90(v159, &qword_10082F210);
    v160 = sub_100047110(&qword_10082F250);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 56))(v143, 0, 1, v160);
    sub_100045AD4(v143, v247, &qword_10082F218);
    v109 = v232;
    v112 = v237;
    v108 = v238;
  }
  else
  {
    v107 = sub_100047110(&qword_10082F250);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v247, 1, 1, v107);
    LODWORD(v231) = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
    v108 = v238;
    v109 = v232;
    v111 = v242;
    v110 = v243;
    v112 = v237;
    v113 = v235;
  }
  v161 = type metadata accessor for MetricsPublisher(0);
  v162 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
  v163 = v110;
  v164 = v113;
  swift_retain(v112);
  v249 = (id)ObservedObject.init(wrappedValue:)(v165, v161, v162);
  v250 = v166;
  v251 = v164;
  v252 = v163;
  v167 = v231;
  v70(v71, v231, v111);
  v168 = sub_100346664();
  v169 = v108;
  View.workoutViewStyle(_:)(v71, &type metadata for IntervalsTargetView, v168);
  v170 = (void (*)(char *, uint64_t))v236;
  ((void (*)(char *, uint64_t))v236)(v71, v111);
  swift_release(v250);

  (*(void (**)(char *, char *, uint64_t))(v244 + 32))(v248, v108, v239);
  swift_retain(v109);
  v172 = IntervalsMetricsPublisher.intervalNextStep.getter(v171);
  sub_10004D634((uint64_t)&v258);
  v249 = (id)v172;
  v250 = v163;
  v70(v71, v167, v111);
  v173 = sub_1003466A8();
  v174 = v163;
  v175 = v226;
  View.workoutViewStyle(_:)(v71, &type metadata for NextIntervalHintView, v173);
  v170(v71, v111);
  swift_release(v249);

  KeyPath = swift_getKeyPath(&unk_100636570);
  v177 = enum case for LegibilityWeight.regular(_:);
  v178 = type metadata accessor for LegibilityWeight(0);
  v179 = *(_QWORD *)(v178 - 8);
  v180 = (uint64_t)v229;
  (*(void (**)(char *, uint64_t, uint64_t))(v179 + 104))(v229, v177, v178);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v179 + 56))(v180, 0, 1, v178);
  v181 = (uint64_t)v223;
  v182 = (uint64_t *)&v223[*(int *)(v225 + 36)];
  v183 = sub_100047110(&qword_10082E9B0);
  sub_100021CC0(v180, (uint64_t)v182 + *(int *)(v183 + 28), &qword_10082E8E0);
  *v182 = KeyPath;
  v184 = v227;
  v185 = v228;
  (*(void (**)(uint64_t, char *, uint64_t))(v227 + 16))(v181, v175, v228);
  sub_10001BE90(v180, &qword_10082E8E0);
  (*(void (**)(char *, uint64_t))(v184 + 8))(v175, v185);
  v186 = (uint64_t)v222;
  sub_100045AD4(v181, (uint64_t)v222, &qword_10082F1E0);
  v187 = *(void (**)(char *, char *, uint64_t))(v246 + 16);
  v188 = v240;
  v189 = v241;
  v187(v240, v245, v241);
  v190 = v234;
  sub_100021CC0(v247, v234, &qword_10082F218);
  v191 = *(void (**)(char *, char *, uint64_t))(v244 + 16);
  v192 = v108;
  v193 = v239;
  v191(v192, v248, v239);
  sub_100021CC0(v186, v181, &qword_10082F1E0);
  v194 = v230;
  v187(v230, v188, v189);
  v195 = (int *)sub_100047110(&qword_10082F268);
  sub_100021CC0(v190, (uint64_t)&v194[v195[12]], &qword_10082F218);
  v191(&v194[v195[16]], v169, v193);
  sub_100021CC0(v181, (uint64_t)&v194[v195[20]], &qword_10082F1E0);
  sub_10001BE90(v186, &qword_10082F1E0);
  v196 = *(void (**)(char *, uint64_t))(v244 + 8);
  v196(v248, v193);
  sub_10001BE90(v247, &qword_10082F218);
  v197 = *(void (**)(char *, uint64_t))(v246 + 8);
  v197(v245, v189);
  sub_10001BE90(v181, &qword_10082F1E0);
  v196(v238, v193);
  sub_10001BE90(v190, &qword_10082F218);
  return (id)((uint64_t (*)(char *, uint64_t))v197)(v240, v189);
}

uint64_t sub_100346108@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  double v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  void (*v57)(char *, uint64_t, __n128);
  __n128 v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  _QWORD v72[2];
  __int128 v73;

  v71 = a2;
  v3 = type metadata accessor for LocalizationFeature(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100824458);
  v70 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v69 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v68 = (char *)&v67 - v11;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v6, enum case for LocalizationFeature.workout(_:), v3, v10);
  v12 = static Localization.workoutUILocalizedString(_:feature:)(0xD000000000000011, 0x800000010069A860, v6);
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  static WorkoutNotificationFont.multilineTextView(with:lineLimit:)(v12, v14, 2);
  swift_bridgeObjectRelease(v14, v15, v16, v17, v18, v19, v20, v21);
  type metadata accessor for ElapsedTimeFormatter(0);
  v73 = *(_OWORD *)(a1 + 8);
  v22 = swift_retain(*((_QWORD *)&v73 + 1));
  v23 = IntervalsMetricsPublisher.intervalTotalTime.getter(v22);
  sub_10004D634((uint64_t)&v73);
  v72[0] = static ElapsedTimeFormatter.stringFromElapsedTime(_:trimDoubleLeadingZero:compactHours:)(0, 0, v23);
  v72[1] = v24;
  v25 = sub_100038CA0();
  v26 = Text.init<A>(_:)(v72, &type metadata for String, v25);
  v28 = v27;
  v30 = v29;
  v32 = v31 & 1;
  type metadata accessor for IntervalWorkoutConfiguration(0);
  v33 = static IntervalWorkoutConfiguration.displayColor.getter();
  v34 = Color.init(_:)(v33);
  v35 = Text.foregroundColor(_:)(v34, v26, v28, v32, v30);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  swift_release(v34);
  LOBYTE(v34) = v39 & 1;
  sub_1000E4458(v26, v28, v32);
  swift_bridgeObjectRelease(v30, v42, v43, v44, v45, v46, v47, v48);
  v49 = v69;
  v50 = v70;
  v51 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
  v52 = v68;
  v51(v69, v68, v7);
  v53 = v71;
  v51(v71, v49, v7);
  v54 = sub_100047110(&qword_10082F280);
  v55 = &v53[*(int *)(v54 + 48)];
  *(_QWORD *)v55 = v35;
  *((_QWORD *)v55 + 1) = v37;
  v55[16] = v34;
  *((_QWORD *)v55 + 3) = v41;
  v56 = &v53[*(int *)(v54 + 64)];
  *(_QWORD *)v56 = 0;
  v56[8] = 1;
  sub_1000E439C(v35, v37, v34);
  v57 = *(void (**)(char *, uint64_t, __n128))(v50 + 8);
  v58 = swift_bridgeObjectRetain(v41);
  v57(v52, v7, v58);
  sub_1000E4458(v35, v37, v34);
  swift_bridgeObjectRelease(v41, v59, v60, v61, v62, v63, v64, v65);
  return ((uint64_t (*)(char *, uint64_t))v57)(v49, v7);
}

uint64_t sub_1003463E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100344948(a1);
}

unint64_t sub_100346424()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082F1B8;
  if (!qword_10082F1B8)
  {
    v1 = sub_100007050(&qword_10082F1A0);
    sub_100028384(&qword_10082E9E0, &qword_10082E9E8, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_100028384(&qword_10082F1C0, &qword_10082F1C8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F1B8);
  }
  return result;
}

unint64_t sub_1003464C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;

  result = qword_10082F1D0;
  if (!qword_10082F1D0)
  {
    v1 = sub_100007050(&qword_10082F190);
    v2 = sub_100007050(&qword_10082F180);
    v4 = sub_100007050(&qword_10082F178);
    v5 = sub_100028384(&qword_10082F1B0, &qword_10082F178, (uint64_t)&protocol conformance descriptor for VStack<A>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.metricValueFont(includesSlashes:smallCaps:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F1D0);
  }
  return result;
}

unint64_t sub_10034659C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082F240;
  if (!qword_10082F240)
  {
    v1 = sub_100007050(&qword_10082F238);
    sub_100346620();
    sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F240);
  }
  return result;
}

unint64_t sub_100346620()
{
  unint64_t result;

  result = qword_10082F248;
  if (!qword_10082F248)
  {
    result = swift_getWitnessTable(&unk_1006247E4, &type metadata for IntervalsHeroView);
    atomic_store(result, (unint64_t *)&qword_10082F248);
  }
  return result;
}

unint64_t sub_100346664()
{
  unint64_t result;

  result = qword_10082F258;
  if (!qword_10082F258)
  {
    result = swift_getWitnessTable(&unk_10062BE24, &type metadata for IntervalsTargetView);
    atomic_store(result, (unint64_t *)&qword_10082F258);
  }
  return result;
}

unint64_t sub_1003466A8()
{
  unint64_t result;

  result = qword_10082F260;
  if (!qword_10082F260)
  {
    result = swift_getWitnessTable(&unk_100640AD8, &type metadata for NextIntervalHintView);
    atomic_store(result, (unint64_t *)&qword_10082F260);
  }
  return result;
}

uint64_t sub_1003466F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MirrorIntervalTimeView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_100346730(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v2 = a1[2];
  v3 = a1[4];
  v4 = (void *)a1[5];
  v5 = (void *)a1[6];
  swift_retain(*a1);
  swift_retain(v2);
  swift_retain(v3);
  v6 = v4;
  v7 = v5;
  return a1;
}

uint64_t *sub_10034678C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *a1;
  v3 = a1[2];
  v4 = a1[4];
  v5 = (void *)a1[5];

  swift_release(v4);
  swift_release(v3);
  swift_release(v2);
  return a1;
}

unint64_t sub_1003467F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082F288;
  if (!qword_10082F288)
  {
    v1 = sub_100007050(&qword_10082F290);
    sub_100346424();
    sub_1003464C0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F288);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ActivityRingsCardFactory(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for ActivityRingsCardFactory(id *a1)
{

}

uint64_t assignWithCopy for ActivityRingsCardFactory(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for ActivityRingsCardFactory(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for ActivityRingsCardFactory()
{
  return &type metadata for ActivityRingsCardFactory;
}

uint64_t sub_100346994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>, void *a10)
{
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  _BYTE *v53;
  uint64_t v54;
  id v55;
  void (*v56)(char *, uint64_t);
  int v57;
  id v58;
  char *v59;
  id v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  int v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;

  v60 = a8;
  v61 = a5;
  v64 = a7;
  v66 = a6;
  LODWORD(v59) = a4;
  v13 = a3;
  v14 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v14);
  v65 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110((uint64_t *)&unk_100828370);
  v17 = __chkstk_darwin(v16);
  v63 = (uint64_t)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v56 - v20;
  __chkstk_darwin(v19);
  v62 = (char *)&v56 - v22;
  v23 = type metadata accessor for Calendar(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Date(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = __chkstk_darwin(v27);
  v31 = (char *)&v56 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v29);
  if (v13 < 3 || a1 | a2)
  {
    *(_QWORD *)(a9 + 32) = 0;
    *(_OWORD *)a9 = 0u;
    *(_OWORD *)(a9 + 16) = 0u;
  }
  else
  {
    v58 = a10;
    v57 = v59 & 1;
    v34 = result;
    v35 = (char *)&v56 - v33;
    v36 = static Calendar.current.getter(result);
    Date.init()(v36);
    Calendar.startOfDay(for:)(v31);
    v37 = v34;
    v56 = *(void (**)(char *, uint64_t))(v28 + 8);
    v56(v31, v34);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    v59 = v35;
    v38 = sub_1000237E8();
    v39 = v64;
    v40 = objc_msgSend(*(id *)(v64 + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache), "activitySummaryForCacheIndex:", v38);
    v41 = v60;
    v42 = objc_msgSend(v60, "resumeDate");
    if (v42)
    {
      v43 = v42;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v42);

      v44 = 0;
    }
    else
    {
      v44 = 1;
    }
    v45 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v21, v44, 1, v37);
    sub_1001B9DF4((uint64_t)v21, v45);
    objc_msgSend(v40, "setDeprecatedPauseForInternalSwiftClient:", objc_msgSend(v41, "isPaused"));
    sub_100021CC0(v61, (uint64_t)v67, &qword_100832410);
    v46 = v68;
    if (v68)
    {
      v47 = v69;
      sub_100016804(v67, v68);
      v48 = (uint64_t)v65;
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
      v49 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v67);
    }
    else
    {
      sub_10001BE90((uint64_t)v67, &qword_100832410);
      v50 = type metadata accessor for UUID(0);
      v48 = (uint64_t)v65;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v65, 1, 1, v50);
    }
    v51 = v63;
    sub_100021CC0(v45, v63, (uint64_t *)&unk_100828370);
    v52 = *(unsigned __int8 *)(v39 + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser);
    *(_QWORD *)(a9 + 24) = type metadata accessor for ActivityRingsCard(0);
    *(_QWORD *)(a9 + 32) = &off_100796510;
    v53 = sub_10004C480((_QWORD *)a9);
    v54 = (uint64_t)v58;
    v55 = v58;
    sub_10031E9B4(v48, v57, v66 & 1, 1, (uint64_t)v40, v51, v52, v54, v53);
    sub_10001BE90(v45, (uint64_t *)&unk_100828370);
    return ((uint64_t (*)(char *, uint64_t))v56)(v59, v37);
  }
  return result;
}

ValueMetadata *type metadata accessor for FriendSetupView()
{
  return &type metadata for FriendSetupView;
}

id sub_100346DD0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t KeyPath;
  uint64_t v6;
  id v7;
  uint64_t v9;

  v4 = objc_msgSend(objc_allocWithZone((Class)CHFriendsSetupViewController), "init");
  objc_msgSend(v4, "setDelegate:", a3);
  KeyPath = swift_getKeyPath(&unk_1006366C8);
  v6 = swift_getKeyPath(&unk_1006366F0);
  v7 = a3;
  static Published.subscript.getter(&v9, v7, KeyPath, v6);

  swift_release(KeyPath);
  swift_release(v6);
  objc_msgSend(v4, "setPhase:animated:", v9, 0);
  return v4;
}

id sub_100346E90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100346DD0(a1, a2, *(void **)(v2 + 8));
}

id sub_100346E98(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  uint64_t v8;

  v3 = *(void **)(v1 + 8);
  KeyPath = swift_getKeyPath(&unk_1006366C8);
  v5 = swift_getKeyPath(&unk_1006366F0);
  v6 = v3;
  static Published.subscript.getter(&v8, v6, KeyPath, v5);

  swift_release(KeyPath);
  swift_release(v5);
  return objc_msgSend(a1, "setPhase:animated:", v8, 0);
}

uint64_t sub_100346F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100347004();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100346F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100347004();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100346FE0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100347004();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

unint64_t sub_100347004()
{
  unint64_t result;

  result = qword_10082F298;
  if (!qword_10082F298)
  {
    result = swift_getWitnessTable(&unk_1006365FC, &type metadata for FriendSetupView);
    atomic_store(result, (unint64_t *)&qword_10082F298);
  }
  return result;
}

uint64_t sub_100347050(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = sub_10001E724(0, &qword_10082EA78, HKCategorySample_ptr);
  **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v4);
  return swift_continuation_resume(v3);
}

_QWORD *sub_1003470A4(unint64_t a1)
{
  return sub_1003470B0(a1, HKActivityGoalSchedule_ptr);
}

_QWORD *sub_1003470B0(unint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  specialized ContiguousArray.reserveCapacity(_:)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10));
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
        v7 = i + 1;
        if (__OFADD__(i, 1))
          break;
        v8 = v6;
        v9 = objc_opt_self(*a2);
        v10 = swift_dynamicCastObjCClass(v8, v9);
        if (!v10)
        {
          swift_unknownObjectRelease(v8);
          goto LABEL_15;
        }
        v11 = v10;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v12 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
        v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
        specialized ContiguousArray._endMutation()(v13);
        if (v7 == v4)
          return _swiftEmptyArrayStorage;
      }
      __break(1u);
    }
    else
    {
      v14 = 0;
      v15 = v3 + 32;
      while (1)
      {
        v16 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        v17 = *(void **)(v15 + 8 * v14);
        v18 = objc_opt_self(*a2);
        v19 = swift_dynamicCastObjCClass(v17, v18);
        if (!v19)
        {
LABEL_15:
          swift_release(_swiftEmptyArrayStorage);
          return 0;
        }
        v3 = v19;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v20 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
        v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v3);
        specialized ContiguousArray._endMutation()(v21);
        ++v14;
        if (v16 == v4)
          return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_18:
    if (v3 < 0)
      v23 = v3;
    else
      v23 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v3);
    specialized ContiguousArray.reserveCapacity(_:)(v24);
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v3);
  }
  return _swiftEmptyArrayStorage;
}

Swift::Int sub_100347290()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  Swift::UInt v2;
  unsigned __int8 v3;
  _QWORD v5[9];

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  v3 = v0[16];
  Hasher.init(_seed:)(v5, 0);
  Hasher._combine(_:)(v1);
  if ((v3 & 1) == 0)
    Hasher._combine(_:)(3uLL);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_100347300()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  unsigned __int8 v2;

  v1 = *((_QWORD *)v0 + 1);
  v2 = v0[16];
  Hasher._combine(_:)(*v0);
  if ((v2 & 1) == 0)
    Hasher._combine(_:)(3uLL);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_10034734C(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  Swift::UInt v3;
  unsigned __int8 v4;
  _QWORD v6[9];

  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v4 = v1[16];
  Hasher.init(_seed:)(v6, a1);
  Hasher._combine(_:)(v2);
  if ((v4 & 1) == 0)
    Hasher._combine(_:)(3uLL);
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

BOOL sub_1003473B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;

  if (*a1 != *a2)
    return 0;
  v2 = *((_QWORD *)a1 + 1);
  v3 = *((_QWORD *)a2 + 1);
  v4 = a2[16];
  if (a1[16] != 1)
  {
    if (v2 != v3)
      v4 = 1;
    return (v4 & 1) == 0;
  }
  if (!v2)
  {
    if (v3)
      v4 = 0;
    return (v4 & 1) != 0;
  }
  if (v2 != 1)
  {
    if (v3 <= 1)
      v4 = 0;
    return (v4 & 1) != 0;
  }
  if (v3 != 1)
    v4 = 0;
  return (v4 & 1) != 0;
}

void sub_100347434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void **aBlock;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v2 = sub_100047110(&qword_10082F350);
  v3 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  v39 = v3;
  __chkstk_darwin(v2);
  v37 = (char *)&ObjectType - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = swift_allocObject(&unk_100797998, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v0);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_workoutDataProvider);
  v44 = sub_1003543A0;
  v45 = v5;
  aBlock = _NSConcreteStackBlock;
  v41 = 1107296256;
  v42 = sub_10002D0F8;
  v43 = &unk_1007979B0;
  v7 = _Block_copy(&aBlock);
  v8 = v45;
  swift_retain(v5);
  objc_msgSend(v6, "addUpdateHandler:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  v44 = sub_1003543A0;
  v45 = v5;
  aBlock = _NSConcreteStackBlock;
  v41 = 1107296256;
  v42 = sub_10002D0F8;
  v43 = &unk_1007979D8;
  v9 = _Block_copy(&aBlock);
  v10 = v45;
  swift_retain(v5);
  objc_msgSend(v6, "addAnimatedUpdateHandler:", v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_activityDataProvider)+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers), "addObject:", v1);
  v11 = (void *)objc_opt_self(NSNotificationCenter);
  v12 = objc_msgSend(v11, "defaultCenter");
  v13 = (void *)objc_opt_self(NSOperationQueue);
  v14 = objc_msgSend(v13, "mainQueue");
  v15 = swift_allocObject(&unk_100797998, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v1);
  v16 = swift_allocObject(&unk_100797A10, 32, 7);
  v17 = ObjectType;
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v17;
  v44 = sub_1003543CC;
  v45 = v16;
  aBlock = _NSConcreteStackBlock;
  v41 = 1107296256;
  v42 = sub_1000398D4;
  v43 = &unk_100797A28;
  v18 = _Block_copy(&aBlock);
  v19 = objc_msgSend(v12, "addObserverForName:object:queue:usingBlock:", UIApplicationSignificantTimeChangeNotification, 0, v14, v18, swift_release(v45).n128_f64[0]);
  _Block_release(v18);

  v20 = objc_msgSend(v11, "defaultCenter");
  v21 = kFIMindfulnessSessionDataProviderDidUpdateNotification;
  v22 = objc_msgSend(v13, "mainQueue");
  v23 = swift_allocObject(&unk_100797998, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, v1);
  v44 = sub_1003543D4;
  v45 = v23;
  aBlock = _NSConcreteStackBlock;
  v41 = 1107296256;
  v42 = sub_1000398D4;
  v43 = &unk_100797A50;
  v24 = _Block_copy(&aBlock);
  v25 = objc_msgSend(v20, "addObserverForName:object:queue:usingBlock:", v21, 0, v22, v24, swift_release(v45).n128_f64[0]);
  _Block_release(v24);

  swift_beginAccess(*(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_configurationProvider)+ OBJC_IVAR____TtC10FitnessApp28SummaryConfigurationProvider__currentCardConfiguration, &aBlock, 33, 0);
  v26 = sub_100047110(&qword_10081F3E0);
  v27 = v37;
  Published.projectedValue.getter(v26);
  swift_endAccess(&aBlock);
  v28 = swift_allocObject(&unk_100797998, 24, 7);
  swift_unknownObjectWeakInit(v28 + 16, v1);
  v29 = sub_100028384(&qword_10082F358, &qword_10082F350, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v30 = v38;
  v31 = Publisher<>.sink(receiveValue:)(sub_1003543DC, v28, v38, v29);
  v32 = swift_release(v28);
  (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v27, v30, v32);
  v33 = sub_100047110(&qword_10082CEC0);
  v34 = swift_allocObject(v33, 128, 7);
  *(_OWORD *)(v34 + 16) = xmmword_100624A40;
  *(_QWORD *)(v34 + 56) = swift_getObjectType(v19);
  *(_QWORD *)(v34 + 32) = v19;
  *(_QWORD *)(v34 + 88) = swift_getObjectType(v25);
  *(_QWORD *)(v34 + 64) = v25;
  *(_QWORD *)(v34 + 120) = type metadata accessor for AnyCancellable(0);
  *(_QWORD *)(v34 + 96) = v31;
  v35 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_observers);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_observers) = v34;
  swift_unknownObjectRetain(v19);
  swift_unknownObjectRetain(v25);
  swift_retain(v31);
  swift_bridgeObjectRelease(v35);
  sub_100348558((uint64_t)&off_100782948);
  swift_release(v31);
  swift_unknownObjectRelease(v25);
  swift_unknownObjectRelease(v19);
  swift_release(v5);
}

void sub_100347980(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  __n128 v5;
  _QWORD *v6;
  char v7[9];
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    __chkstk_darwin(Strong);
    dispatch thunk of UnfairLock.acquire<A>(_:)(sub_10035442C);
    v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_metricCategoryUpdates];
    v7[0] = 1;
    v5 = swift_retain(v4);
    PassthroughSubject.send(_:)(v7, v5);
    swift_release(v4);
    v6 = sub_1005F14DC(1);
    sub_100348558((uint64_t)v6);
    swift_bridgeObjectRelease(v6);

  }
}

void sub_100347A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_log_type_t v5;
  void *v6;
  os_log_type_t v7;
  NSObject *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[3];

  v4 = a2 + 16;
  v5 = static os_log_type_t.default.getter(a1);
  v6 = (void *)HKLogActivity;
  v7 = v5;
  if (os_log_type_enabled(HKLogActivity, v5))
  {
    v8 = v6;
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v20[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = _typeName(_:qualified:)(a3, 0);
    v13 = v12;
    v18 = sub_10003E8EC(v11, v12, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v9 + 4);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v8, v7, "%s did receive significantTimeChangeNotification notification", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  swift_beginAccess(v4, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v15 = (void *)Strong;
    __chkstk_darwin(Strong);
    dispatch thunk of UnfairLock.acquire<A>(_:)(sub_100354400);

  }
  swift_beginAccess(v4, &v18, 0, 0);
  v16 = swift_unknownObjectWeakLoadStrong(v4);
  if (v16)
  {
    v17 = (void *)v16;
    sub_100348558((uint64_t)&off_100782948);

  }
}

void sub_100347C68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  _BYTE v12[24];
  _BYTE v13[32];
  _BYTE v14[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    __chkstk_darwin(Strong);
    dispatch thunk of UnfairLock.acquire<A>(_:)(sub_10035442C);

  }
  swift_beginAccess(v2, v13, 0, 0);
  v5 = swift_unknownObjectWeakLoadStrong(v2);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_metricCategoryUpdates);
    swift_retain(v7);

    v12[0] = 2;
    PassthroughSubject.send(_:)(v12, v8);
    swift_release(v7);
  }
  swift_beginAccess(v2, v12, 0, 0);
  v9 = swift_unknownObjectWeakLoadStrong(v2);
  if (v9)
  {
    v10 = (void *)v9;
    v11 = sub_1005F14DC(2);
    sub_100348558((uint64_t)v11);
    swift_bridgeObjectRelease(v11);

  }
}

double sub_100347DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_lock);
    __chkstk_darwin(Strong);
    swift_retain(v6);
    dispatch thunk of UnfairLock.acquire<A>(_:)(sub_1003543E4);
    swift_release(v6);
    swift_bridgeObjectRetain(&_swiftEmptySetSingleton);
    v8 = sub_10029661C(v7);
    swift_bridgeObjectRelease(&_swiftEmptySetSingleton);
    sub_100348558((uint64_t)v8);

    swift_release(v8);
    *(_QWORD *)&result = swift_bridgeObjectRelease(&_swiftEmptySetSingleton).n128_u64[0];
  }
  return result;
}

void sub_100347EC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_activeMetrics;
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_activeMetrics);
  swift_bridgeObjectRetain(v7);
  v8 = sub_1000EDA28(a2);
  v9 = sub_100148A6C((uint64_t)v8);
  swift_bridgeObjectRelease(v8);
  if (*(_QWORD *)(v7 + 16) <= *(_QWORD *)(v9 + 16) >> 3)
  {
    swift_bridgeObjectRetain(v9);
    sub_100351B08(v7);
    swift_bridgeObjectRelease(v7);
    v10 = v9;
  }
  else
  {
    swift_bridgeObjectRetain(v9);
    v10 = (uint64_t)sub_100351C68(v7, v9);
    swift_bridgeObjectRelease(v7);
  }
  v11 = *a3;
  *a3 = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a1 + v6);
  *(_QWORD *)(a1 + v6) = v9;
  swift_bridgeObjectRelease(v12);
}

uint64_t sub_100347FA8@<X0>(int a1@<W0>, char *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  char *v32;
  int v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  char *v44;
  char v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  char *v56;
  int v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char v61;
  char *v62;
  char v63;

  v58 = a2;
  v7 = a3 & 1;
  v8 = sub_100047110((uint64_t *)&unk_100827440);
  v9 = __chkstk_darwin(v8);
  v50 = (uint64_t)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v51 = (uint64_t)&v47 - v11;
  v12 = type metadata accessor for DateInterval(0);
  v52 = *(_QWORD *)(v12 - 8);
  v53 = v12;
  v13 = __chkstk_darwin(v12);
  v48 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v49 = (char *)&v47 - v15;
  v16 = type metadata accessor for MetricDetailViewModel(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_10081F218);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v25 = (char *)&v47 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))((char *)&v47 - v24, 1, 1, v16);
  v59 = v25;
  v60 = v4;
  v55 = v4;
  v54 = a1;
  v61 = a1;
  v62 = v58;
  v57 = v7;
  v63 = v7;
  dispatch thunk of UnfairLock.acquire<A>(_:)(sub_100354310);
  v56 = v25;
  sub_100021CC0((uint64_t)v25, (uint64_t)v23, &qword_10081F218);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v23, 1, v16) == 1)
  {
    v26 = &qword_10081F218;
    v27 = (uint64_t)v23;
LABEL_5:
    sub_10001BE90(v27, v26);
    v32 = v58;
    v33 = v57;
    goto LABEL_6;
  }
  sub_100047C88((uint64_t)v23, (uint64_t)v19, type metadata accessor for MetricDetailViewModel);
  v28 = v51;
  sub_100021CC0((uint64_t)&v19[*(int *)(v16 + 36)], v51, (uint64_t *)&unk_100827440);
  v30 = v52;
  v29 = v53;
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  if (v31(v28, 1, v53) == 1)
  {
    sub_100011F54((uint64_t)v19, type metadata accessor for MetricDetailViewModel);
    v26 = (uint64_t *)&unk_100827440;
    v27 = v28;
    goto LABEL_5;
  }
  v47 = v19;
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 32);
  v42 = v49;
  v41(v49, v28, v29);
  v43 = v50;
  v32 = v58;
  v33 = v57;
  sub_10041E110(v58, v57, v50);
  if (v31(v43, 1, v29) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v42, v29);
    sub_100011F54((uint64_t)v47, type metadata accessor for MetricDetailViewModel);
    sub_10001BE90(v43, (uint64_t *)&unk_100827440);
  }
  else
  {
    v44 = v48;
    v41(v48, v43, v29);
    v45 = static DateInterval.== infix(_:_:)(v42, v44);
    v46 = *(void (**)(char *, uint64_t))(v30 + 8);
    v46(v44, v29);
    v46(v42, v29);
    if ((v45 & 1) != 0)
    {
      sub_100047C88((uint64_t)v47, a4, type metadata accessor for MetricDetailViewModel);
      return sub_10001BE90((uint64_t)v56, &qword_10081F218);
    }
    sub_100011F54((uint64_t)v47, type metadata accessor for MetricDetailViewModel);
  }
LABEL_6:
  sub_1004437C4(v54);
  v35 = v34;
  v36 = (void *)objc_opt_self(HKQuantity);
  v37 = objc_msgSend(v36, "quantityWithUnit:doubleValue:", v35, 0.0);
  v38 = objc_msgSend(v36, "quantityWithUnit:doubleValue:", v35, 0.0);
  v39 = sub_10041E110(v32, v33, a4 + *(int *)(v16 + 36));
  Date.init()(v39);

  *(_QWORD *)a4 = v37;
  *(_QWORD *)(a4 + 8) = v38;
  *(_QWORD *)(a4 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a4 + 24) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a4 + 32) = v32;
  *(_BYTE *)(a4 + 40) = v33 != 0;
  *(_BYTE *)(a4 + *(int *)(v16 + 40)) = 0;
  return sub_10001BE90((uint64_t)v56, &qword_10081F218);
}

uint64_t sub_10034841C(uint64_t a1, uint64_t a2, unsigned __int8 a3, Swift::UInt a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v24[24];

  v10 = sub_100047110(&qword_10081F218);
  __chkstk_darwin(v10);
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = (uint64_t *)(a2 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_modelViewCache);
  swift_beginAccess(v13, v24, 0, 0);
  v14 = *v13;
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_1004398B4(a3, a4, a5 & 1), (v16 & 1) != 0))
  {
    v17 = v15;
    v18 = *(_QWORD *)(v14 + 56);
    v19 = type metadata accessor for MetricDetailViewModel(0);
    v20 = *(_QWORD *)(v19 - 8);
    sub_100353DCC(v18 + *(_QWORD *)(v20 + 72) * v17, (uint64_t)v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
  }
  else
  {
    v21 = type metadata accessor for MetricDetailViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v12, 1, 1, v21);
  }
  return sub_100354334((uint64_t)v12, a1);
}

void sub_100348558(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v21;
  int64_t v22;
  Swift::UInt v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  int v35;
  id v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  int64_t v48;
  char *v49;
  _BYTE *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void **v54;
  void *v55;
  _QWORD v56[4];
  uint64_t v57[10];
  _BYTE *v58;

  v2 = v1;
  v4 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v4);
  v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a1);
  v8 = sub_100148A6C(v7);
  swift_bridgeObjectRelease(a1);
  v58 = &_swiftEmptySetSingleton;
  v54 = (void **)&v58;
  v55 = v2;
  v52 = v2;
  dispatch thunk of UnfairLock.acquire<A>(_:)(sub_1003541E0);
  v47[1] = 0;
  v9 = v58;
  v10 = v58 + 56;
  v11 = 1 << v58[32];
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v13 = v12 & *((_QWORD *)v58 + 7);
  v14 = (unint64_t)(v11 + 63) >> 6;
  v53 = v8 + 56;
  swift_bridgeObjectRetain(v58);
  v15 = 0;
  v51 = v8;
  v50 = v9;
  v49 = v10;
  v48 = v14;
  while (1)
  {
    while (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v19 = v18 | (v15 << 6);
      if (*(_QWORD *)(v8 + 16))
      {
LABEL_21:
        v23 = *(unsigned __int8 *)(*((_QWORD *)v9 + 6) + v19);
        Hasher.init(_seed:)(v57, *(_QWORD *)(v8 + 40));
        Hasher._combine(_:)(v23);
        v24 = Hasher._finalize()();
        v25 = -1 << *(_BYTE *)(v8 + 32);
        v26 = v24 & ~v25;
        if (((*(_QWORD *)(v53 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) != 0)
        {
          v27 = *(_QWORD *)(v8 + 48);
          if (*(unsigned __int8 *)(v27 + v26) == (_DWORD)v23)
          {
LABEL_26:
            v29 = type metadata accessor for TaskPriority(0);
            v30 = *(_QWORD *)(v29 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v6, 1, 1, v29);
            v31 = swift_allocObject(&unk_100797948, 41, 7);
            *(_QWORD *)(v31 + 16) = 0;
            v32 = (_QWORD *)(v31 + 16);
            v33 = (uint64_t)v6;
            v34 = v52;
            *(_QWORD *)(v31 + 24) = 0;
            *(_QWORD *)(v31 + 32) = v34;
            *(_BYTE *)(v31 + 40) = v23;
            v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v33, 1, v29);
            v36 = v34;
            if (v35 == 1)
            {
              sub_10001BE90(v33, &qword_10081E650);
              v37 = 0;
            }
            else
            {
              v38 = TaskPriority.rawValue.getter(v36);
              (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v33, v29);
              v37 = v38;
            }
            v6 = (char *)v33;
            v39 = *v32;
            v8 = v51;
            if (*v32)
            {
              v40 = *(_QWORD *)(v31 + 24);
              ObjectType = swift_getObjectType(*v32);
              swift_unknownObjectRetain(v39);
              v42 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v40);
              v44 = v43;
              swift_unknownObjectRelease(v39);
            }
            else
            {
              v42 = 0;
              v44 = 0;
            }
            v14 = v48;
            v45 = swift_allocObject(&unk_100797970, 32, 7);
            *(_QWORD *)(v45 + 16) = &unk_10082F348;
            *(_QWORD *)(v45 + 24) = v31;
            v46 = sub_100047110(&qword_10081F218);
            if (v44 | v42)
            {
              v56[0] = 0;
              v56[1] = 0;
              v16 = v56;
              v56[2] = v42;
              v56[3] = v44;
            }
            else
            {
              v16 = 0;
            }
            v9 = v50;
            v17 = swift_task_create(v37 | 0x1C00, v16, v46, &unk_100828300, v45);
            swift_release(v17);
            v10 = v49;
          }
          else
          {
            v28 = ~v25;
            while (1)
            {
              v26 = (v26 + 1) & v28;
              if (((*(_QWORD *)(v53 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
                break;
              if (*(unsigned __int8 *)(v27 + v26) == (_DWORD)v23)
                goto LABEL_26;
            }
          }
        }
      }
    }
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v14)
      goto LABEL_38;
    v21 = *(_QWORD *)&v10[8 * v15];
    if (!v21)
      break;
LABEL_20:
    v13 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v15 << 6);
    if (*(_QWORD *)(v8 + 16))
      goto LABEL_21;
  }
  v22 = v15 + 1;
  if (v15 + 1 >= v14)
    goto LABEL_38;
  v21 = *(_QWORD *)&v10[8 * v22];
  if (v21)
    goto LABEL_19;
  v22 = v15 + 2;
  if (v15 + 2 >= v14)
    goto LABEL_38;
  v21 = *(_QWORD *)&v10[8 * v22];
  if (v21)
    goto LABEL_19;
  v22 = v15 + 3;
  if (v15 + 3 >= v14)
  {
LABEL_38:
    swift_release(v9);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v58);
    return;
  }
  v21 = *(_QWORD *)&v10[8 * v22];
  if (v21)
  {
LABEL_19:
    v15 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v15 >= v14)
      goto LABEL_38;
    v21 = *(_QWORD *)&v10[8 * v15];
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_100348998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v5;
  _BOOL8 v8;
  _QWORD *v9;

  v8 = a5 > 3u;
  v9 = (_QWORD *)swift_task_alloc(dword_10082F2EC);
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_1000EA380;
  return sub_100348B28(a1, a5, v8, 1);
}

double sub_100348A14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  double result;
  _BYTE v7[24];

  v1 = (_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_modelViewCache);
  swift_beginAccess(a1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_modelViewCache, v7, 1, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(*v1);
  v4 = sub_100352284(v3);
  swift_bridgeObjectRelease(v2);
  v5 = *v1;
  *v1 = v4;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

double sub_100348A94(uint64_t a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  _BYTE v9[24];
  char v10[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_modelViewCache);
  swift_beginAccess(a1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_modelViewCache, v10, 1, 0);
  v4 = *v3;
  v9[16] = a2;
  swift_bridgeObjectRetain(v4);
  v6 = sub_100353A3C(v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *))sub_100353DAC, (uint64_t)v9);
  swift_bridgeObjectRelease(v4);
  v7 = *v3;
  *v3 = v6;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

uint64_t sub_100348B28(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 64) = a3;
  *(_QWORD *)(v5 + 72) = v4;
  *(_BYTE *)(v5 + 129) = a4;
  *(_BYTE *)(v5 + 128) = a2;
  *(_QWORD *)(v5 + 56) = a1;
  *(_QWORD *)(v5 + 80) = swift_getObjectType(v4);
  v6 = sub_100047110(&qword_10081E650);
  *(_QWORD *)(v5 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100348B9C, 0, 0);
}

uint64_t sub_100348B9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  void *v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  Swift::String v16;
  void *object;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t (*v29)();
  uint64_t v30;
  char v31;
  void *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  char v40;
  NSObject *log;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v2 = v1 + 16;
  v3 = static os_log_type_t.default.getter(a1);
  v4 = (void *)HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, v3))
  {
    v5 = *(_QWORD *)(v1 + 80);
    v40 = *(_BYTE *)(v1 + 129);
    v6 = *(_BYTE *)(v1 + 128);
    log = v4;
    v7 = swift_slowAlloc(32, -1);
    v8 = swift_slowAlloc(96, -1);
    v43 = v8;
    *(_DWORD *)v7 = 136315650;
    v9 = _typeName(_:qualified:)(v5, 0);
    v11 = v10;
    *(_QWORD *)(v1 + 24) = sub_10003E8EC(v9, v10, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32, v7 + 4);
    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v7 + 12) = 2080;
    v12 = sub_1005F0860(v6);
    v14 = v13;
    *(_QWORD *)(v1 + 32) = sub_10003E8EC(v12, v13, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 32, v1 + 40, v7 + 14);
    swift_bridgeObjectRelease(v14);
    *(_WORD *)(v7 + 22) = 2080;
    v15 = *(_QWORD *)(v1 + 64);
    if ((v40 & 1) != 0)
    {
      v2 = v1 + 16;
      if (v15)
      {
        if (v15 == 1)
        {
          v19 = 0xE90000000000006BLL;
          v18 = 0x6565772073696874;
        }
        else
        {
          v19 = 0xEA00000000006874;
          v18 = 0x6E6F6D2073696874;
        }
      }
      else
      {
        v19 = 0xE500000000000000;
        v18 = 0x7961646F74;
      }
    }
    else
    {
      v44 = 0x2072616579;
      v45 = 0xE500000000000000;
      *(_QWORD *)(v1 + 40) = v15;
      v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = v16._object;
      String.append(_:)(v16);
      swift_bridgeObjectRelease(object);
      v18 = v44;
      v19 = v45;
      v2 = v1 + 16;
    }
    *(_QWORD *)(v1 + 48) = sub_10003E8EC(v18, v19, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 48, v1 + 56, v7 + 24);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, log, v3, "%s fetchData for %s in %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy(v8, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  v20 = *(_BYTE *)(v1 + 129);
  v22 = *(_QWORD *)(v1 + 64);
  v21 = *(_QWORD *)(v1 + 72);
  v23 = *(_BYTE *)(v1 + 128);
  *(_QWORD *)(v1 + 16) = 0;
  v24 = swift_task_alloc(64);
  *(_QWORD *)(v24 + 16) = v2;
  *(_QWORD *)(v24 + 24) = v21;
  *(_BYTE *)(v24 + 32) = v23;
  *(_QWORD *)(v24 + 40) = v22;
  *(_BYTE *)(v24 + 48) = v20 & 1;
  dispatch thunk of UnfairLock.acquire<A>(_:)(sub_100354000);
  swift_task_dealloc(v24);
  v25 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 96) = v25;
  if (v25)
  {
    v26 = async function pointer to Task<>.value.getter[1];
    swift_retain(v25);
    v27 = (_QWORD *)swift_task_alloc(v26);
    *(_QWORD *)(v1 + 104) = v27;
    v28 = sub_100047110(&qword_10081F218);
    v29 = sub_100348FF4;
  }
  else
  {
    v30 = *(_QWORD *)(v1 + 88);
    v42 = *(_QWORD *)(v1 + 80);
    v31 = *(_BYTE *)(v1 + 129);
    v33 = *(_QWORD *)(v1 + 64);
    v32 = *(void **)(v1 + 72);
    v34 = *(_BYTE *)(v1 + 128);
    v35 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v30, 1, 1, v35);
    v36 = swift_allocObject(&unk_1007978D0, 96, 7);
    *(_QWORD *)(v36 + 16) = 0;
    *(_QWORD *)(v36 + 24) = 0;
    *(_BYTE *)(v36 + 32) = v34;
    *(_QWORD *)(v36 + 40) = v32;
    *(_QWORD *)(v36 + 48) = v33;
    v31 &= 1u;
    *(_BYTE *)(v36 + 56) = v31;
    *(_BYTE *)(v36 + 64) = v34;
    *(_QWORD *)(v36 + 72) = v33;
    *(_BYTE *)(v36 + 80) = v31;
    *(_QWORD *)(v36 + 88) = v42;
    v37 = v32;
    v25 = sub_10020DB0C(v30, (uint64_t)&unk_10082F338, v36);
    *(_QWORD *)(v1 + 112) = v25;
    v38 = swift_task_alloc(64);
    *(_QWORD *)(v38 + 16) = v37;
    *(_BYTE *)(v38 + 24) = v34;
    *(_QWORD *)(v38 + 32) = v33;
    *(_BYTE *)(v38 + 40) = v31;
    *(_QWORD *)(v38 + 48) = v25;
    dispatch thunk of UnfairLock.acquire<A>(_:)(sub_100354114);
    swift_task_dealloc(v38);
    v27 = (_QWORD *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
    *(_QWORD *)(v1 + 120) = v27;
    v28 = sub_100047110(&qword_10081F218);
    v29 = sub_10034908C;
  }
  *v27 = v1;
  v27[1] = v29;
  return Task<>.value.getter(*(_QWORD *)(v1 + 56), v25, v28);
}

uint64_t sub_100348FF4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 104));
  return swift_task_switch(sub_100349048, 0, 0);
}

uint64_t sub_100349048()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 96));
  v1 = *(_QWORD *)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10034908C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 120));
  return swift_task_switch(sub_1003490E0, 0, 0);
}

uint64_t sub_1003490E0()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100349124(uint64_t *a1, uint64_t a2, unsigned __int8 a3, Swift::UInt a4, char a5)
{
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  char v16[24];

  v9 = (uint64_t *)(a2 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_processingModelViewCache);
  swift_beginAccess(a2 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_processingModelViewCache, v16, 0, 0);
  v10 = *v9;
  if (*(_QWORD *)(v10 + 16) && (v11 = sub_1004398B4(a3, a4, a5 & 1), (v12 & 1) != 0))
    v13 = swift_retain(*(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11));
  else
    v13 = 0;
  v14 = *a1;
  *a1 = v13;
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

uint64_t sub_1003491D0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  uint64_t v8;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  *(_QWORD *)(v8 + 96) = v20;
  *(_QWORD *)(v8 + 104) = v22;
  *(_BYTE *)(v8 + 179) = v21;
  *(_BYTE *)(v8 + 178) = a8;
  *(_BYTE *)(v8 + 177) = a7;
  *(_QWORD *)(v8 + 80) = a5;
  *(_QWORD *)(v8 + 88) = a6;
  *(_BYTE *)(v8 + 176) = a4;
  v11 = a7 & 1;
  *(_QWORD *)(v8 + 72) = a1;
  v12 = type metadata accessor for MetricDetailViewModel(0);
  *(_QWORD *)(v8 + 112) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 120) = v13;
  *(_QWORD *)(v8 + 128) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_100047110(&qword_10081F218) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 136) = swift_task_alloc(v14);
  v15 = swift_task_alloc(v14);
  *(_QWORD *)(v8 + 144) = v15;
  if (a4 >= 4u)
  {
    if (a4 == 38)
    {
      v18 = (_QWORD *)swift_task_alloc(dword_10082F2FC);
      *(_QWORD *)(v8 + 160) = v18;
      *v18 = v8;
      v18[1] = sub_100349858;
      return sub_10034B974(v15, a6, v11);
    }
    else
    {
      v19 = (_QWORD *)swift_task_alloc(dword_10082F304);
      *(_QWORD *)(v8 + 168) = v19;
      *v19 = v8;
      v19[1] = sub_1003498AC;
      return sub_10034CC0C(v15, a4, a6, v11);
    }
  }
  else
  {
    v16 = (_QWORD *)swift_task_alloc(dword_10082F2F4);
    *(_QWORD *)(v8 + 152) = v16;
    *v16 = v8;
    v16[1] = sub_100349378;
    return sub_100349E60(v15, a4, a6, v11);
  }
}

uint64_t sub_100349378()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_task_switch(sub_1003493CC, 0, 0);
}

uint64_t sub_1003493CC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  NSObject *v7;
  uint64_t v8;
  char v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  Swift::String v33;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  char v56;
  char v57;
  uint64_t v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  const char *v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  SEL v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v87;
  uint64_t v88;
  os_log_type_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;

  v1 = v0;
  v3 = v0 + 9;
  v2 = v0[9];
  v4 = v0[17];
  v5 = sub_10035413C(v0[18], v2);
  v6 = static os_log_type_t.default.getter(v5);
  v7 = HKLogActivity;
  sub_100021CC0(v2, v4, &qword_10081F218);
  if (os_log_type_enabled(v7, v6))
  {
    v89 = v6;
    v91 = v3 - 1;
    v8 = v1[13];
    v9 = *((_BYTE *)v1 + 177);
    v10 = *((_BYTE *)v1 + 176);
    v87 = v7;
    v11 = swift_slowAlloc(42, -1);
    v88 = swift_slowAlloc(128, -1);
    v93 = v88;
    *(_DWORD *)v11 = 136315906;
    v12 = _typeName(_:qualified:)(v8, 0);
    v14 = (CHWorkoutDetailHeartRateTableViewCell *)v13;
    v1[4] = sub_10003E8EC(v12, v13, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 4, v1 + 5, v11 + 4);
    swift_bridgeObjectRelease(v14, v15, v16, v17, v18, v19, v20, v21);
    *(_WORD *)(v11 + 12) = 2080;
    v22 = sub_1005F0860(v10);
    v24 = (CHWorkoutDetailHeartRateTableViewCell *)v23;
    v1[5] = sub_10003E8EC(v22, v23, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 5, v3 - 3, v11 + 14);
    swift_bridgeObjectRelease(v24, v25, v26, v27, v28, v29, v30, v31);
    *(_WORD *)(v11 + 22) = 2080;
    v32 = v1[11];
    if ((v9 & 1) != 0)
    {
      if (v32)
      {
        if (v32 == 1)
        {
          v43 = (CHWorkoutDetailHeartRateTableViewCell *)0xE90000000000006BLL;
          v42 = 0x6565772073696874;
        }
        else
        {
          v43 = (CHWorkoutDetailHeartRateTableViewCell *)0xEA00000000006874;
          v42 = 0x6E6F6D2073696874;
        }
      }
      else
      {
        v43 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
        v42 = 0x7961646F74;
      }
    }
    else
    {
      v94 = 0x2072616579;
      v95 = 0xE500000000000000;
      *(v3 - 3) = v32;
      v33._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = (CHWorkoutDetailHeartRateTableViewCell *)v33._object;
      String.append(_:)(v33);
      swift_bridgeObjectRelease(object, v35, v36, v37, v38, v39, v40, v41);
      v42 = v94;
      v43 = (CHWorkoutDetailHeartRateTableViewCell *)v95;
    }
    v44 = v1[17];
    v46 = v1[14];
    v45 = v1[15];
    v1[7] = sub_10003E8EC(v42, (unint64_t)v43, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 2, v91, v11 + 24);
    swift_bridgeObjectRelease(v43, v47, v48, v49, v50, v51, v52, v53);
    *(_WORD *)(v11 + 32) = 2080;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v44, 1, v46))
    {
      v54 = 0;
      v55 = 0;
    }
    else
    {
      v56 = *((_BYTE *)v1 + 176);
      sub_100353DCC(v1[17], v1[16]);
      v57 = 1;
      if (((1 << v56) & 0x5DDBB8E070) != 0)
      {
        v57 = 0;
      }
      else if (((1 << v56) & 0x2224471F80) == 0)
      {
        v57 = (*((_BYTE *)v1 + 177) & 1) == 0;
      }
      v58 = v1[16];
      v54 = sub_10038ED54(v57);
      v55 = v59;
      sub_100011F54(v58, type metadata accessor for MetricDetailViewModel);
    }
    v60 = v1[17];
    v1[2] = v54;
    v1[3] = v55;
    v61 = sub_100047110(&qword_10082B520);
    v62 = Optional.description.getter(v61);
    v64 = (CHWorkoutDetailHeartRateTableViewCell *)v63;
    swift_bridgeObjectRelease(v55, v63, v65, v66, v67, v68, v69, v70);
    v1[8] = sub_10003E8EC(v62, (unint64_t)v64, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v91, v3, v11 + 34);
    swift_bridgeObjectRelease(v64, v71, v72, v73, v74, v75, v76, v77);
    sub_10001BE90(v60, &qword_10081F218);
    _os_log_impl((void *)&_mh_execute_header, v87, v89, "%s fetchData returned for %s in %s: %s", (uint8_t *)v11, 0x2Au);
    swift_arrayDestroy(v88, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v88, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {
    sub_10001BE90(v1[17], &qword_10081F218);
  }
  v78 = v1[18];
  v90 = v1[17];
  v92 = v1[16];
  v79 = *((_BYTE *)v1 + 179);
  v80 = v1[12];
  v81 = *((_BYTE *)v1 + 178);
  v82 = *((_BYTE *)v1 + 176);
  v83 = v1[9];
  v84 = v1[10];
  v85 = swift_task_alloc(64);
  *(_QWORD *)(v85 + 16) = v84;
  *(_BYTE *)(v85 + 24) = v81;
  *(_QWORD *)(v85 + 32) = v80;
  *(_BYTE *)(v85 + 40) = v79 & 1;
  *(_QWORD *)(v85 + 48) = v83;
  *(_BYTE *)(v85 + 56) = v82;
  dispatch thunk of UnfairLock.acquire<A>(_:)(sub_100354184);
  swift_task_dealloc(v85);
  swift_task_dealloc(v78);
  swift_task_dealloc(v90);
  swift_task_dealloc(v92);
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_100349858()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 160));
  return swift_task_switch(sub_100354440, 0, 0);
}

uint64_t sub_1003498AC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 168));
  return swift_task_switch(sub_100354440, 0, 0);
}

double sub_100349900(char *a1, int a2, Swift::UInt a3, char a4, uint64_t a5, int a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  unsigned __int8 v23;
  char v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char *v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  double result;
  uint64_t v41;
  __n128 v42;
  void *v43;
  uint64_t v44;
  void *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  int v57;
  Swift::UInt v58;
  int v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  _QWORD aBlock[5];
  uint64_t v69;
  _QWORD *v70;

  v67 = a5;
  v59 = a6;
  v66 = a4 & 1;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v64 = *(_QWORD *)(v9 - 8);
  v65 = v9;
  __chkstk_darwin(v9);
  v63 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v61 = *(_QWORD *)(v11 - 8);
  v62 = v11;
  __chkstk_darwin(v11);
  v60 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10081F218);
  __chkstk_darwin(v13);
  v56 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v54 - v16;
  v18 = type metadata accessor for MetricDetailViewModel(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t *)&a1[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_processingModelViewCache];
  swift_beginAccess(&a1[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_processingModelViewCache], aBlock, 33, 0);
  v57 = a2;
  v23 = a2;
  v24 = v66;
  v58 = a3;
  v25 = sub_1004398B4(v23, a3, v66);
  if ((v26 & 1) != 0)
  {
    v27 = v25;
    v55 = v21;
    v28 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
    v30 = *v22;
    v70 = (_QWORD *)*v22;
    *v22 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100402F78();
      v30 = (uint64_t)v70;
    }
    v31 = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v27);
    sub_1004D25E8(v27, v30);
    v32 = (CHWorkoutDetailHeartRateTableViewCell *)*v22;
    *v22 = v30;
    swift_bridgeObjectRelease(v32, v33, v34, v35, v36, v37, v38, v39);
    swift_release(v31);
    a1 = v28;
    v21 = v55;
  }
  swift_endAccess(aBlock);
  sub_100021CC0(v67, (uint64_t)v17, &qword_10081F218);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_10001BE90((uint64_t)v17, &qword_10081F218);
  }
  else
  {
    sub_100047C88((uint64_t)v17, (uint64_t)v21, type metadata accessor for MetricDetailViewModel);
    v41 = v56;
    sub_100353DCC((uint64_t)v21, v56);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v41, 0, 1, v18);
    swift_beginAccess(&a1[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_modelViewCache], aBlock, 33, 0);
    sub_1004C5FE0(v41, v57, v58, v24);
    swift_endAccess(aBlock);
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v43 = (void *)static OS_dispatch_queue.main.getter(v42);
    v44 = swift_allocObject(&unk_1007978F8, 25, 7);
    *(_QWORD *)(v44 + 16) = a1;
    *(_BYTE *)(v44 + 24) = v59;
    aBlock[4] = sub_1003541D4;
    v69 = v44;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_100797910;
    v45 = _Block_copy(aBlock);
    v46 = a1;
    v47 = v60;
    static DispatchQoS.unspecified.getter(v46);
    v70 = _swiftEmptyArrayStorage;
    v48 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v49 = sub_100047110(&qword_100828C80);
    v50 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
    v51 = v63;
    v52 = v49;
    v53 = v65;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v70, v52, v50, v65, v48);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v47, v51, v45);
    _Block_release(v45);

    (*(void (**)(char *, uint64_t))(v64 + 8))(v51, v53);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v62);
    sub_100011F54((uint64_t)v21, type metadata accessor for MetricDetailViewModel);
    *(_QWORD *)&result = swift_release(v69).n128_u64[0];
  }
  return result;
}

uint64_t sub_100349D50(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_delegate);
  if (result)
  {
    v4 = result;
    sub_10035DDA4(a2);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

uint64_t sub_100349D9C(uint64_t a1, char a2, Swift::UInt a3, char a4, uint64_t a5)
{
  char v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  _BYTE v13[24];
  uint64_t v14;

  v8 = a4 & 1;
  v9 = (_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_processingModelViewCache);
  swift_beginAccess(a1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_processingModelViewCache, v13, 33, 0);
  swift_retain(a5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
  v14 = *v9;
  *v9 = 0x8000000000000000;
  sub_1003FF894(a5, a2, a3, v8, isUniquelyReferenced_nonNull_native);
  v11 = *v9;
  *v9 = v14;
  swift_bridgeObjectRelease(v11);
  return swift_endAccess(v13);
}

uint64_t sub_100349E60(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 + 88) = a3;
  *(_QWORD *)(v5 + 96) = v4;
  *(_BYTE *)(v5 + 193) = a4;
  *(_BYTE *)(v5 + 192) = a2;
  *(_QWORD *)(v5 + 80) = a1;
  *(_QWORD *)(v5 + 104) = swift_getObjectType(v4);
  v6 = sub_100047110((uint64_t *)&unk_100827440);
  *(_QWORD *)(v5 + 112) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DateInterval(0);
  *(_QWORD *)(v5 + 120) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 128) = v8;
  *(_QWORD *)(v5 + 136) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100349EFC, 0, 0);
}

id sub_100349EFC(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  void *v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  Swift::String v29;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  void *v54;
  uint64_t v55;
  unsigned __int8 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  SEL v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  Swift::String v80;
  CHWorkoutDetailHeartRateTableViewCell *v81;
  SEL v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  CHWorkoutDetailHeartRateTableViewCell *v90;
  void *v91;
  id v92;
  Class isa;
  id v94;
  id result;
  void *v96;
  unsigned int v97;
  id v98;
  uint64_t v99;
  unint64_t v100;
  SEL v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  CHWorkoutDetailHeartRateTableViewCell *v113;
  id v114;
  id v115;
  Class v116;
  SEL v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  char v133;
  char v134;
  NSObject *log;
  NSObject *loga;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;

  v2 = static os_log_type_t.default.getter(a1);
  v3 = (void *)HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, v2))
  {
    v4 = *(_QWORD *)(v1 + 104);
    v133 = *(_BYTE *)(v1 + 193);
    v5 = *(_BYTE *)(v1 + 192);
    log = v3;
    v6 = swift_slowAlloc(32, -1);
    v7 = swift_slowAlloc(96, -1);
    v137 = v7;
    *(_DWORD *)v6 = 136315650;
    v8 = _typeName(_:qualified:)(v4, 0);
    v10 = (CHWorkoutDetailHeartRateTableViewCell *)v9;
    *(_QWORD *)(v1 + 48) = sub_10003E8EC(v8, v9, &v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 48, v1 + 56, v6 + 4);
    swift_bridgeObjectRelease(v10, v11, v12, v13, v14, v15, v16, v17);
    *(_WORD *)(v6 + 12) = 2080;
    v18 = sub_1005F0860(v5);
    v20 = (CHWorkoutDetailHeartRateTableViewCell *)v19;
    *(_QWORD *)(v1 + 56) = sub_10003E8EC(v18, v19, &v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 56, v1 + 64, v6 + 14);
    swift_bridgeObjectRelease(v20, v21, v22, v23, v24, v25, v26, v27);
    *(_WORD *)(v6 + 22) = 2080;
    v28 = *(_QWORD *)(v1 + 88);
    if ((v133 & 1) != 0)
    {
      if (v28)
      {
        if (v28 == 1)
        {
          v38 = 0x6565772073696874;
          v39 = (CHWorkoutDetailHeartRateTableViewCell *)0xE90000000000006BLL;
        }
        else
        {
          v38 = 0x6E6F6D2073696874;
          v39 = (CHWorkoutDetailHeartRateTableViewCell *)0xEA00000000006874;
        }
      }
      else
      {
        v39 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
        v38 = 0x7961646F74;
      }
    }
    else
    {
      v138 = 0x2072616579;
      v139 = 0xE500000000000000;
      *(_QWORD *)(v1 + 64) = v28;
      v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = (CHWorkoutDetailHeartRateTableViewCell *)v29._object;
      String.append(_:)(v29);
      swift_bridgeObjectRelease(object, v31, v32, v33, v34, v35, v36, v37);
      v38 = v138;
      v39 = (CHWorkoutDetailHeartRateTableViewCell *)v139;
    }
    *(_QWORD *)(v1 + 72) = sub_10003E8EC(v38, (unint64_t)v39, &v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 72, v1 + 80, v6 + 24);
    swift_bridgeObjectRelease(v39, v40, v41, v42, v43, v44, v45, v46);
    _os_log_impl((void *)&_mh_execute_header, log, v2, "%s fetchQuantitySample for %s in %s", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy(v7, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  v47 = (uint64_t)sub_1005F0D88(*(_BYTE *)(v1 + 192));
  *(_QWORD *)(v1 + 144) = v47;
  if (v47)
  {
    v48 = (void *)v47;
    v49 = *(_QWORD *)(v1 + 120);
    v50 = *(_QWORD *)(v1 + 128);
    v51 = *(_QWORD *)(v1 + 112);
    sub_10041E110(*(char **)(v1 + 88), *(_BYTE *)(v1 + 193) & 1, v51);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v51, 1, v49) != 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 128) + 32))(*(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
      v91 = (void *)objc_opt_self(HKQuery);
      v92 = objc_msgSend(v91, "_predicateForObjectsFromAppleWatches");
      *(_QWORD *)(v1 + 152) = v92;
      isa = DateInterval._bridgeToObjectiveC()().super.isa;
      v94 = objc_msgSend(v91, "predicateForSamplesWithinDateInterval:options:", isa, 0);
      *(_QWORD *)(v1 + 160) = v94;

      result = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
      if (result)
      {
        v96 = result;
        v97 = objc_msgSend(result, "isStandalonePhoneFitnessMode");

        if (v97)
        {
          v98 = v94;
        }
        else
        {
          v111 = sub_100047110((uint64_t *)&unk_100828340);
          v112 = swift_allocObject(v111, 48, 7);
          *(_OWORD *)(v112 + 16) = xmmword_100629280;
          *(_QWORD *)(v112 + 32) = v94;
          *(_QWORD *)(v112 + 40) = v92;
          v138 = v112;
          specialized Array._endMutation()(v112);
          v113 = (CHWorkoutDetailHeartRateTableViewCell *)v138;
          sub_10001E724(0, (unint64_t *)&unk_100827490, NSPredicate_ptr);
          v114 = v94;
          v115 = v92;
          v116 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v113, v117, v118, v119, v120, v121, v122, v123);
          v98 = objc_msgSend((id)objc_opt_self(NSCompoundPredicate), "andPredicateWithSubpredicates:", v116);

        }
        *(_QWORD *)(v1 + 168) = v98;
        v124 = *(_QWORD *)(v1 + 136);
        v126 = *(_QWORD *)(v1 + 96);
        v125 = *(_QWORD *)(v1 + 104);
        v127 = *(_BYTE *)(v1 + 193);
        v128 = *(_QWORD *)(v1 + 88);
        v129 = *(_BYTE *)(v1 + 192);
        v130 = swift_task_alloc(80);
        *(_QWORD *)(v1 + 176) = v130;
        *(_QWORD *)(v130 + 16) = v48;
        *(_QWORD *)(v130 + 24) = v98;
        *(_BYTE *)(v130 + 32) = v129;
        *(_QWORD *)(v130 + 40) = v128;
        *(_BYTE *)(v130 + 48) = v127 & 1;
        *(_QWORD *)(v130 + 56) = v126;
        *(_QWORD *)(v130 + 64) = v124;
        *(_QWORD *)(v130 + 72) = v125;
        v131 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
        *(_QWORD *)(v1 + 184) = v131;
        v132 = sub_100047110(&qword_10081F218);
        *v131 = v1;
        v131[1] = sub_10034A68C;
        return (id)withCheckedContinuation<A>(isolation:function:_:)(*(_QWORD *)(v1 + 80), 0, 0, 0xD000000000000026, 0x800000010069A9A0, sub_100353E2C, v130, v132);
      }
      else
      {
        __break(1u);
      }
      return result;
    }
    v52 = *(_QWORD *)(v1 + 112);

    v47 = sub_10001BE90(v52, (uint64_t *)&unk_100827440);
  }
  v53 = static os_log_type_t.error.getter(v47);
  v54 = (void *)HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, v53))
  {
    v55 = *(_QWORD *)(v1 + 104);
    v134 = *(_BYTE *)(v1 + 193);
    v56 = *(_BYTE *)(v1 + 192);
    loga = v54;
    v57 = swift_slowAlloc(32, -1);
    v58 = swift_slowAlloc(96, -1);
    v137 = v58;
    *(_DWORD *)v57 = 136315650;
    v59 = _typeName(_:qualified:)(v55, 0);
    v61 = (CHWorkoutDetailHeartRateTableViewCell *)v60;
    *(_QWORD *)(v1 + 16) = sub_10003E8EC(v59, v60, &v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v57 + 4);
    swift_bridgeObjectRelease(v61, v62, v63, v64, v65, v66, v67, v68);
    *(_WORD *)(v57 + 12) = 2080;
    v69 = sub_1005F0860(v56);
    v71 = (CHWorkoutDetailHeartRateTableViewCell *)v70;
    *(_QWORD *)(v1 + 24) = sub_10003E8EC(v69, v70, &v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32, v57 + 14);
    swift_bridgeObjectRelease(v71, v72, v73, v74, v75, v76, v77, v78);
    *(_WORD *)(v57 + 22) = 2080;
    v79 = *(_QWORD *)(v1 + 88);
    if ((v134 & 1) != 0)
    {
      v99 = 0x6565772073696874;
      v100 = 0xE90000000000006BLL;
      if (v79 != 1)
      {
        v99 = 0x6E6F6D2073696874;
        v100 = 0xEA00000000006874;
      }
      if (v79)
        v89 = v99;
      else
        v89 = 0x7961646F74;
      if (v79)
        v90 = (CHWorkoutDetailHeartRateTableViewCell *)v100;
      else
        v90 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
    }
    else
    {
      v138 = 0x2072616579;
      v139 = 0xE500000000000000;
      *(_QWORD *)(v1 + 32) = v79;
      v80._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v81 = (CHWorkoutDetailHeartRateTableViewCell *)v80._object;
      String.append(_:)(v80);
      swift_bridgeObjectRelease(v81, v82, v83, v84, v85, v86, v87, v88);
      v89 = v138;
      v90 = (CHWorkoutDetailHeartRateTableViewCell *)v139;
    }
    *(_QWORD *)(v1 + 40) = sub_10003E8EC(v89, (unint64_t)v90, &v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 40, v1 + 48, v57 + 24);
    swift_bridgeObjectRelease(v90, v101, v102, v103, v104, v105, v106, v107);
    _os_log_impl((void *)&_mh_execute_header, loga, v53, "%s error fetchQuantitySample for %s in %s: invalid sample type or date interval", (uint8_t *)v57, 0x20u);
    swift_arrayDestroy(v58, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v58, -1, -1);
    swift_slowDealloc(v57, -1, -1);

  }
  v108 = *(_QWORD *)(v1 + 80);
  v109 = type metadata accessor for MetricDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v108, 1, 1, v109);
  v110 = *(_QWORD *)(v1 + 112);
  swift_task_dealloc(*(_QWORD *)(v1 + 136));
  swift_task_dealloc(v110);
  return (id)(*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10034A68C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 184));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10034A6E8, 0, 0);
}

uint64_t sub_10034A6E8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 168);
  v3 = *(void **)(v0 + 144);
  v2 = *(void **)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v7 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10034A764(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  char *v30;
  id v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[5];
  uint64_t v41;

  v35 = a6;
  v34 = a5;
  v33 = a4;
  v38 = a2;
  v39 = a3;
  v36 = a7;
  v37 = a9;
  v11 = type metadata accessor for DateInterval(0);
  v12 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_10082F328);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = __chkstk_darwin(v15);
  v19 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v19, a1, v15, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a8, v11);
  v20 = *(unsigned __int8 *)(v16 + 80);
  v21 = (v20 + 33) & ~v20;
  v22 = (v17 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(unsigned __int8 *)(v12 + 80);
  v24 = (v23 + v22 + 8) & ~v23;
  v25 = (v13 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject(&unk_100797880, v25 + 8, v20 | v23 | 7);
  *(_BYTE *)(v26 + 16) = v33;
  *(_QWORD *)(v26 + 24) = v34;
  *(_BYTE *)(v26 + 32) = v35 & 1;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v26 + v21, v19, v15);
  v27 = v36;
  *(_QWORD *)(v26 + v22) = v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v26 + v24, v14, v32);
  *(_QWORD *)(v26 + v25) = v37;
  v28 = objc_allocWithZone((Class)HKSampleQuery);
  aBlock[4] = sub_100353F3C;
  v41 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100008B5C;
  aBlock[3] = &unk_100797898;
  v29 = _Block_copy(aBlock);
  v30 = v27;
  v31 = objc_msgSend(v28, "initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:", v38, v39, 0, 0, v29);
  _Block_release(v29);
  objc_msgSend(*(id *)&v30[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_healthStore], "executeQuery:", v31, swift_release(v41).n128_f64[0]);

}

uint64_t sub_10034A9B8(uint64_t a1, unint64_t a2, uint64_t a3, int a4, unint64_t a5, char a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  uint64_t v23;
  const char *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  os_log_type_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  Swift::String v58;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  SEL v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  uint64_t v77;
  uint64_t v78;
  const char *v79;
  CHWorkoutDetailHeartRateTableViewCell *v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  SEL v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  os_log_t v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t result;
  unint64_t v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  _QWORD *v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  const char *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  id v114;
  id v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  os_log_t v119;
  char v120;
  _BOOL8 v121;
  uint64_t v122;
  char v123;
  unint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  __n128 v128;
  uint64_t v129;
  uint64_t v130;
  BOOL v131;
  void *v132;
  void *v133;
  void *v134;
  CHWorkoutDetailHeartRateTableViewCell *v135;
  id v136;
  id v137;
  CHWorkoutDetailHeartRateTableViewCell *v138;
  SEL v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  double v146;
  double v147;
  int v148;
  unint64_t v149;
  BOOL v150;
  uint64_t v151;
  uint64_t v152;
  _BYTE *v153;
  uint64_t v154;
  uint64_t v155;
  id v156;
  void *v157;
  id v158;
  _BYTE *v159;
  uint64_t v160;
  CHWorkoutDetailHeartRateTableViewCell *v161;
  uint64_t v162;
  SEL v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  _BYTE v170[12];
  int v171;
  _BYTE *v172;
  void *v173;
  __int128 v174;
  uint64_t v175;
  uint64_t v176;
  _BYTE *v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _BYTE *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  os_log_t v186;
  _QWORD v187[3];
  char v188[8];
  unint64_t v189;
  double v190;
  unint64_t v191;
  uint64_t v192[2];

  v173 = a8;
  v178 = a7;
  LODWORD(v11) = a4;
  v14 = a6 & 1;
  v15 = sub_100047110(&qword_10081F218);
  __chkstk_darwin(v15);
  v177 = &v170[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v176 = type metadata accessor for MetricDetailViewModel(0);
  v175 = *(_QWORD *)(v176 - 8);
  __chkstk_darwin(v176);
  v18 = &v170[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for Date(0);
  v183 = *(_QWORD *)(v19 - 8);
  v184 = v19;
  __chkstk_darwin(v19);
  v182 = &v170[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = type metadata accessor for DateComponents(0);
  v180 = *(_QWORD *)(v21 - 8);
  v181 = v21;
  __chkstk_darwin(v21);
  v186 = (os_log_t)&v170[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a2)
    goto LABEL_5;
  v22 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1003470B0(a2, HKQuantitySample_ptr);
  v185 = (uint64_t)v22;
  if (!v22)
    goto LABEL_5;
  if (a3)
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v185, v24, v25, v26, v27, v28, v29, v30);
LABEL_5:
    v31 = static os_log_type_t.error.getter(v22);
    v32 = (void *)HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, v31))
    {
      swift_errorRetain(a3);
      swift_errorRetain(a3);
      v186 = v32;
      v33 = swift_slowAlloc(42, -1);
      v185 = swift_slowAlloc(128, -1);
      v192[0] = v185;
      *(_DWORD *)v33 = 136315906;
      v34 = _typeName(_:qualified:)(a10, 0);
      v36 = (CHWorkoutDetailHeartRateTableViewCell *)v35;
      v190 = COERCE_DOUBLE(sub_10003E8EC(v34, v35, v192));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v190, &v191, v33 + 4);
      swift_bridgeObjectRelease(v36, v37, v38, v39, v40, v41, v42, v43);
      *(_WORD *)(v33 + 12) = 2080;
      v44 = sub_1005F0860(v11);
      v46 = (CHWorkoutDetailHeartRateTableViewCell *)v45;
      v190 = COERCE_DOUBLE(sub_10003E8EC(v44, v45, v192));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v190, &v191, v33 + 14);
      swift_bridgeObjectRelease(v46, v47, v48, v49, v50, v51, v52, v53);
      *(_WORD *)(v33 + 22) = 2080;
      if (v14)
      {
        v54 = 0xE90000000000006BLL;
        v55 = 0x6565772073696874;
        if (a5 != 1)
        {
          v55 = 0x6E6F6D2073696874;
          v54 = 0xEA00000000006874;
        }
        if (a5)
          v56 = v55;
        else
          v56 = 0x7961646F74;
        if (a5)
          v57 = (CHWorkoutDetailHeartRateTableViewCell *)v54;
        else
          v57 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
      }
      else
      {
        *(_QWORD *)&v190 = 0x2072616579;
        v191 = 0xE500000000000000;
        v189 = a5;
        v58._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        object = (CHWorkoutDetailHeartRateTableViewCell *)v58._object;
        String.append(_:)(v58);
        swift_bridgeObjectRelease(object, v60, v61, v62, v63, v64, v65, v66);
        v56 = *(_QWORD *)&v190;
        v57 = (CHWorkoutDetailHeartRateTableViewCell *)v191;
      }
      v190 = COERCE_DOUBLE(sub_10003E8EC(v56, (unint64_t)v57, v192));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v190, &v191, v33 + 24);
      swift_bridgeObjectRelease(v57, v67, v68, v69, v70, v71, v72, v73);
      *(_WORD *)(v33 + 32) = 2080;
      if (a3)
      {
        swift_getErrorValue(a3, v188, v187);
        *(double *)&v74 = COERCE_DOUBLE(Error.localizedDescription.getter(v187[1], v187[2]));
        v76 = v75;
      }
      else
      {
        *(double *)&v74 = 0.0;
        v76 = 0;
      }
      v190 = *(double *)&v74;
      v191 = (unint64_t)v76;
      v77 = sub_100047110(&qword_10082B520);
      v78 = Optional.description.getter(v77);
      v80 = (CHWorkoutDetailHeartRateTableViewCell *)v79;
      swift_bridgeObjectRelease(v76, v79, v81, v82, v83, v84, v85, v86);
      v190 = COERCE_DOUBLE(sub_10003E8EC(v78, (unint64_t)v80, v192));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v190, &v191, v33 + 34);
      swift_bridgeObjectRelease(v80, v87, v88, v89, v90, v91, v92, v93);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      v94 = v186;
      _os_log_impl((void *)&_mh_execute_header, v186, v31, "%s error fetchQuantitySample for %s in %s: %s", (uint8_t *)v33, 0x2Au);
      v95 = v185;
      swift_arrayDestroy(v185, 4, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v95, -1, -1);
      swift_slowDealloc(v33, -1, -1);

    }
    v96 = v177;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v175 + 56))(v177, 1, 1, v176);
    v97 = sub_100047110(&qword_10082F328);
    return CheckedContinuation.resume(returning:)(v96, v97);
  }
  v190 = COERCE_DOUBLE(_swiftEmptyDictionarySingleton);
  v99 = v185 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v185 >> 62)
  {
LABEL_49:
    v161 = (CHWorkoutDetailHeartRateTableViewCell *)v185;
    if (v185 >= 0)
      v162 = v99;
    else
      v162 = v185;
    swift_bridgeObjectRetain(v185);
    v100 = _CocoaArrayWrapper.endIndex.getter(v162);
    swift_bridgeObjectRelease(v161, v163, v164, v165, v166, v167, v168, v169);
  }
  else
  {
    v100 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v172 = v18;
  if (v100)
  {
    v171 = v11;
    v179 = v185 & 0xC000000000000001;
    v101 = COERCE_DOUBLE(_swiftEmptyDictionarySingleton);
    v11 = 4;
    v174 = xmmword_100623630;
    while (1)
    {
      if (v179)
        v114 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v185);
      else
        v114 = *(id *)(v185 + 8 * v11);
      v115 = v114;
      v116 = v11 - 3;
      if (__OFADD__(v11 - 4, 1))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      v117 = objc_msgSend(v114, "startDate");
      v118 = (uint64_t)v182;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v117);

      v119 = v186;
      v18 = (_BYTE *)a5;
      sub_10041DD1C(v118, a5, v14, (uint64_t)v186);
      (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v118, v184);
      a5 = sub_100439544((uint64_t)v119);
      v99 = *(_QWORD *)(*(_QWORD *)&v101 + 16);
      v121 = (v120 & 1) == 0;
      v122 = v99 + v121;
      if (__OFADD__(v99, v121))
        goto LABEL_47;
      v123 = v120;
      if (*(_QWORD *)(*(_QWORD *)&v101 + 24) < v122)
      {
        sub_1003FAEC4(v122, 1);
        v101 = v190;
        v124 = sub_100439544((uint64_t)v186);
        if ((v123 & 1) != (v125 & 1))
        {
          result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v181);
          __break(1u);
          return result;
        }
        a5 = v124;
      }
      if ((v123 & 1) != 0)
      {
        v102 = (*(uint64_t (**)(os_log_t, uint64_t))(v180 + 8))(v186, v181);
        v101 = v190;
        v103 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)&v190 + 56) + 8 * a5);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v102);
        v105 = *(_QWORD *)((*v103 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v104 = *(_QWORD *)((*v103 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v105 >= v104 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v104 > 1, v105 + 1, 1);
        v106 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v105, v115);
        specialized Array._endMutation()(v106);
      }
      else
      {
        v126 = sub_100047110((uint64_t *)&unk_100828340);
        v127 = swift_allocObject(v126, 40, 7);
        *(_OWORD *)(v127 + 16) = v174;
        *(_QWORD *)(v127 + 32) = v115;
        v192[0] = v127;
        v128 = specialized Array._endMutation()(v127);
        v129 = v192[0];
        *(_QWORD *)(*(_QWORD *)&v101 + 8 * (a5 >> 6) + 64) |= 1 << a5;
        (*(void (**)(unint64_t, os_log_t, uint64_t, __n128))(v180 + 32))(*(_QWORD *)(*(_QWORD *)&v101 + 48) + *(_QWORD *)(v180 + 72) * a5, v186, v181, v128);
        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v101 + 56) + 8 * a5) = v129;
        v130 = *(_QWORD *)(*(_QWORD *)&v101 + 16);
        v131 = __OFADD__(v130, 1);
        v99 = v130 + 1;
        if (v131)
          goto LABEL_48;
        *(_QWORD *)(*(_QWORD *)&v101 + 16) = v99;
      }
      a5 = (unint64_t)v18;
      ++v11;
      if (v116 == v100)
      {
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v185, v107, v108, v109, v110, v111, v112, v113);
        LODWORD(v11) = v171;
        goto LABEL_42;
      }
    }
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v185, v24, v25, v26, v27, v28, v29, v30);
  v101 = COERCE_DOUBLE(_swiftEmptyDictionarySingleton);
LABEL_42:
  v132 = v173;
  sub_1004437C4(v11);
  v134 = v133;
  v190 = 0.0;
  v192[0] = 0;
  v135 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10041F724(a9, a5, v14);
  swift_retain(*(_QWORD *)&v101);
  v136 = v134;
  v137 = v132;
  v138 = sub_100353014(v135, *(uint64_t *)&v101, v136, &v190, v11, a5, v14, v192, (uint64_t)v137);
  swift_bridgeObjectRelease(v135, v139, v140, v141, v142, v143, v144, v145);
  swift_release_n(*(_QWORD *)&v101, 2);

  v146 = v190;
  if (v192[0] <= 0)
    v147 = 0.0;
  else
    v147 = v190 / (double)v192[0];
  v148 = v14;
  v149 = a5;
  v150 = v148 != 0;
  v151 = v176;
  v152 = (uint64_t)v172;
  v153 = &v172[*(int *)(v176 + 36)];
  v154 = type metadata accessor for DateInterval(0);
  v155 = *(_QWORD *)(v154 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v155 + 16))(v153, a9, v154);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v153, 0, 1, v154);
  v156 = v136;
  Date.init()(v156);
  v157 = (void *)objc_opt_self(HKQuantity);
  *(_QWORD *)v152 = objc_msgSend(v157, "quantityWithUnit:doubleValue:", v156, v146);
  v158 = objc_msgSend(v157, "quantityWithUnit:doubleValue:", v156, v147);

  *(_QWORD *)(v152 + 8) = v158;
  *(_QWORD *)(v152 + 16) = v138;
  *(_QWORD *)(v152 + 24) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v152 + 32) = v149;
  *(_BYTE *)(v152 + 40) = v150;
  *(_BYTE *)(v152 + *(int *)(v151 + 40)) = 1;
  v159 = v177;
  sub_100353DCC(v152, (uint64_t)v177);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v159, 0, 1, v151);
  v160 = sub_100047110(&qword_10082F328);
  CheckedContinuation.resume(returning:)(v159, v160);

  return sub_100011F54(v152, type metadata accessor for MetricDetailViewModel);
}

uint64_t sub_10034B33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, double *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, _QWORD *a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  const char *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  int v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  const char *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  SEL v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  _QWORD *v87;
  const char *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  char v95;
  SEL v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  uint64_t v103;
  char *v104;
  char *v105;
  void *v106;
  id v107;
  id v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  SEL v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  char *v119;
  void (*v120)(char *, char *, uint64_t);
  uint64_t v121;
  _QWORD *v122;
  id v123;
  double *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  CHWorkoutDetailHeartRateTableViewCell *v134;

  v128 = a9;
  v121 = a6;
  v122 = a8;
  LODWORD(v126) = a7;
  v124 = a4;
  v125 = a5;
  v123 = a3;
  v127 = a2;
  v10 = type metadata accessor for TimeZone(0);
  v130 = *(_QWORD *)(v10 - 8);
  v131 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Calendar(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v17);
  v19 = (char *)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Date(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v132 = (char *)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v119 - v24;
  static Calendar.current.getter(v26);
  Calendar.date(from:)(a1);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v133 = v21;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_10001BE90((uint64_t)v19, (uint64_t *)&unk_100828370);
LABEL_8:
    v45 = v128;
    v46 = type metadata accessor for MetricChartData(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 1, 1, v46);
  }
  v27 = *(void (**)(char *, char *, uint64_t))(v133 + 32);
  v27(v25, v19, v20);
  v28 = v127;
  if (!*(_QWORD *)(v127 + 16) || (v29 = sub_100439544(a1), (v30 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t))(v133 + 8))(v25, v20);
    goto LABEL_8;
  }
  v119 = v25;
  v120 = v27;
  v31 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v29);
  v32 = v123;
  swift_bridgeObjectRetain(v31);
  v33 = v129;
  v35 = sub_100352EF8(v34, (uint64_t)v32, 0.0);
  v36 = v33;

  *v124 = v35 + *v124;
  v44 = 1;
  v123 = v32;
  if (((1 << v125) & 0x5DDBB8E070) == 0)
  {
    if (((1 << v125) & 0x2224471F80) != 0)
      goto LABEL_10;
    if ((v126 & 1) == 0)
      goto LABEL_15;
  }
  v44 = 0;
LABEL_10:
  if ((v126 & 1) != 0 && !v121)
  {
    if ((unint64_t)v31 >> 62)
      goto LABEL_43;
    v48 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_34;
  }
LABEL_15:
  if (!((unint64_t)v31 >> 62))
  {
    v49 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v49)
      goto LABEL_17;
LABEL_32:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v37, v38, v39, v40, v41, v42, v43);
    v61 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
LABEL_33:
    v31 = sub_10004CEFC((uint64_t)v61);
    swift_bridgeObjectRelease(v61, v80, v81, v82, v83, v84, v85, v86);
    v48 = *(_QWORD *)(v31 + 16);
LABEL_34:
    while (1)
    {
      v87 = v122;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v37, v38, v39, v40, v41, v42, v43);
      if (!__OFADD__(*v87, v48))
        break;
      __break(1u);
LABEL_43:
      if (v31 < 0)
        v111 = v31;
      else
        v111 = v31 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v31);
      v48 = _CocoaArrayWrapper.endIndex.getter(v111);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v112, v113, v114, v115, v116, v117, v118);
    }
    *v87 += v48;
    if (v44)
    {
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE700000000000000, v88, v89, v90, v91, v92, v93, v94);
    }
    else
    {
      v95 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C61746F74, 0xE500000000000000, 0x65676172657661, 0xE700000000000000, 0);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000, v96, v97, v98, v99, v100, v101, v102);
      if ((v95 & 1) == 0)
      {
LABEL_41:
        v104 = v132;
        v103 = v133;
        v105 = v119;
        (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v132, v119, v20);
        v106 = (void *)objc_opt_self(HKQuantity);
        v107 = v123;
        v108 = objc_msgSend(v106, "quantityWithUnit:doubleValue:", v107, v35);
        (*(void (**)(char *, uint64_t))(v103 + 8))(v105, v20);
        v109 = (char *)v128;
        *v128 = v107;
        v110 = type metadata accessor for MetricChartData(0);
        v120(&v109[*(int *)(v110 + 20)], v104, v20);
        *(_QWORD *)&v109[*(int *)(v110 + 24)] = v108;
        return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v109, 0, 1, v110);
      }
    }
    if (v48 < 1)
      v35 = 0.0;
    else
      v35 = v35 / (double)v48;
    goto LABEL_41;
  }
  if (v31 < 0)
    v72 = v31;
  else
    v72 = v31 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v31);
  v49 = _CocoaArrayWrapper.endIndex.getter(v72);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v73, v74, v75, v76, v77, v78, v79);
  if (!v49)
    goto LABEL_32;
LABEL_17:
  LODWORD(v125) = v44;
  v127 = v20;
  v129 = v36;
  v134 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
  result = sub_1001214C4(0, v49 & ~(v49 >> 63), 0);
  if ((v49 & 0x8000000000000000) == 0)
  {
    v50 = 0;
    v126 = v31 & 0xC000000000000001;
    v51 = (CHWorkoutDetailHeartRateTableViewCell *)v31;
    v52 = v49;
    do
    {
      if (v126)
        v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v50, v31);
      else
        v53 = *(id *)(v31 + 8 * v50 + 32);
      v54 = v53;
      v55 = objc_msgSend(v53, "endDate");
      v56 = v132;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v55);

      static TimeZone.current.getter(v57);
      v58 = Date.dayOfMonth(in:)(v12);
      v60 = v59;
      (*(void (**)(char *, uint64_t))(v130 + 8))(v12, v131);
      (*(void (**)(char *, uint64_t))(v133 + 8))(v56, v127);

      v61 = v134;
      if ((swift_isUniquelyReferenced_nonNull_native(v134) & 1) == 0)
      {
        sub_1001214C4(0, *(_QWORD *)v61->cellPadding + 1, 1);
        v61 = v134;
      }
      v70 = *(_QWORD *)v61->cellPadding;
      v69 = *(_QWORD *)v61->cellInset;
      if (v70 >= v69 >> 1)
      {
        sub_1001214C4(v69 > 1, v70 + 1, 1);
        v61 = v134;
      }
      ++v50;
      *(_QWORD *)v61->cellPadding = v70 + 1;
      v71 = (char *)v61 + 16 * v70;
      *((_QWORD *)v71 + 4) = v58;
      *((_QWORD *)v71 + 5) = v60;
      v31 = (uint64_t)v51;
    }
    while (v52 != v50);
    swift_bridgeObjectRelease(v51, v62, v63, v64, v65, v66, v67, v68);
    v20 = v127;
    v44 = v125;
    goto LABEL_33;
  }
  __break(1u);
  return result;
}

uint64_t sub_10034B974(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v4 + 184) = a2;
  *(_QWORD *)(v4 + 192) = v3;
  *(_BYTE *)(v4 + 328) = a3;
  *(_QWORD *)(v4 + 176) = a1;
  *(_QWORD *)(v4 + 200) = swift_getObjectType(v3);
  v5 = type metadata accessor for Date(0);
  *(_QWORD *)(v4 + 208) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 216) = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 224) = swift_task_alloc(v7);
  *(_QWORD *)(v4 + 232) = swift_task_alloc(v7);
  v8 = type metadata accessor for Calendar(0);
  *(_QWORD *)(v4 + 240) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 248) = v9;
  *(_QWORD *)(v4 + 256) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DateComponents(0);
  *(_QWORD *)(v4 + 264) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v4 + 272) = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 280) = swift_task_alloc(v12);
  *(_QWORD *)(v4 + 288) = swift_task_alloc(v12);
  v13 = sub_100047110((uint64_t *)&unk_100827440);
  *(_QWORD *)(v4 + 296) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DateInterval(0);
  *(_QWORD *)(v4 + 304) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v4 + 312) = v15;
  *(_QWORD *)(v4 + 320) = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10034BAA4, 0, 0);
}

uint64_t sub_10034BAA4(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Swift::String v20;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  void *v43;
  uint64_t v44;
  char v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  Swift::String v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  SEL v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v77;
  unint64_t v78;
  SEL v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;

  v2 = static os_log_type_t.default.getter(a1);
  v3 = (void *)HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, v2))
  {
    v4 = *(_QWORD *)(v1 + 200);
    v5 = *(_BYTE *)(v1 + 328);
    v6 = v3;
    v7 = swift_slowAlloc(22, -1);
    v8 = swift_slowAlloc(64, -1);
    v94 = v8;
    *(_DWORD *)v7 = 136315394;
    v9 = _typeName(_:qualified:)(v4, 0);
    v11 = (CHWorkoutDetailHeartRateTableViewCell *)v10;
    *(_QWORD *)(v1 + 152) = sub_10003E8EC(v9, v10, &v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 152, v1 + 160, v7 + 4);
    swift_bridgeObjectRelease(v11, v12, v13, v14, v15, v16, v17, v18);
    *(_WORD *)(v7 + 12) = 2080;
    v19 = *(_QWORD *)(v1 + 184);
    if ((v5 & 1) != 0)
    {
      if (v19)
      {
        if (v19 == 1)
        {
          v29 = 0x6565772073696874;
          v30 = (CHWorkoutDetailHeartRateTableViewCell *)0xE90000000000006BLL;
        }
        else
        {
          v29 = 0x6E6F6D2073696874;
          v30 = (CHWorkoutDetailHeartRateTableViewCell *)0xEA00000000006874;
        }
      }
      else
      {
        v30 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
        v29 = 0x7961646F74;
      }
    }
    else
    {
      v95 = 0x2072616579;
      v96 = 0xE500000000000000;
      *(_QWORD *)(v1 + 160) = v19;
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = (CHWorkoutDetailHeartRateTableViewCell *)v20._object;
      String.append(_:)(v20);
      swift_bridgeObjectRelease(object, v22, v23, v24, v25, v26, v27, v28);
      v29 = v95;
      v30 = (CHWorkoutDetailHeartRateTableViewCell *)v96;
    }
    *(_QWORD *)(v1 + 168) = sub_10003E8EC(v29, (unint64_t)v30, &v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 168, v1 + 176, v7 + 14);
    swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    _os_log_impl((void *)&_mh_execute_header, v6, v2, "%s fetchMindfulMinutes in %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy(v8, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  v38 = *(_QWORD *)(v1 + 304);
  v39 = *(_QWORD *)(v1 + 312);
  v40 = *(_QWORD *)(v1 + 296);
  sub_10041E110(*(char **)(v1 + 184), *(_BYTE *)(v1 + 328) & 1, v40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v40, 1, v38) == 1)
  {
    v41 = sub_10001BE90(*(_QWORD *)(v1 + 296), (uint64_t *)&unk_100827440);
    v42 = static os_log_type_t.error.getter(v41);
    v43 = (void *)HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, v42))
    {
      v44 = *(_QWORD *)(v1 + 200);
      v45 = *(_BYTE *)(v1 + 328);
      v46 = v43;
      v47 = swift_slowAlloc(22, -1);
      v48 = swift_slowAlloc(64, -1);
      v94 = v48;
      *(_DWORD *)v47 = 136315394;
      v49 = _typeName(_:qualified:)(v44, 0);
      v51 = (CHWorkoutDetailHeartRateTableViewCell *)v50;
      *(_QWORD *)(v1 + 136) = sub_10003E8EC(v49, v50, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 136, v1 + 144, v47 + 4);
      swift_bridgeObjectRelease(v51, v52, v53, v54, v55, v56, v57, v58);
      *(_WORD *)(v47 + 12) = 2080;
      v59 = *(_QWORD *)(v1 + 184);
      if ((v45 & 1) != 0)
      {
        v77 = 0x6565772073696874;
        v78 = 0xE90000000000006BLL;
        if (v59 != 1)
        {
          v77 = 0x6E6F6D2073696874;
          v78 = 0xEA00000000006874;
        }
        if (v59)
          v69 = v77;
        else
          v69 = 0x7961646F74;
        if (v59)
          v70 = (CHWorkoutDetailHeartRateTableViewCell *)v78;
        else
          v70 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
      }
      else
      {
        v95 = 0x2072616579;
        v96 = 0xE500000000000000;
        *(_QWORD *)(v1 + 144) = v59;
        v60._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        v61 = (CHWorkoutDetailHeartRateTableViewCell *)v60._object;
        String.append(_:)(v60);
        swift_bridgeObjectRelease(v61, v62, v63, v64, v65, v66, v67, v68);
        v69 = v95;
        v70 = (CHWorkoutDetailHeartRateTableViewCell *)v96;
      }
      *(_QWORD *)(v1 + 120) = sub_10003E8EC(v69, (unint64_t)v70, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 120, v1 + 128, v47 + 14);
      swift_bridgeObjectRelease(v70, v79, v80, v81, v82, v83, v84, v85);
      _os_log_impl((void *)&_mh_execute_header, v46, v42, "%s error fetchMindfulMinutes in %s: invalid date interval", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy(v48, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v47, -1, -1);

    }
    v86 = *(_QWORD *)(v1 + 176);
    v87 = type metadata accessor for MetricDetailViewModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v86, 1, 1, v87);
    v88 = *(_QWORD *)(v1 + 288);
    v89 = *(_QWORD *)(v1 + 296);
    v90 = *(_QWORD *)(v1 + 280);
    v91 = *(_QWORD *)(v1 + 256);
    v93 = *(_QWORD *)(v1 + 224);
    v92 = *(_QWORD *)(v1 + 232);
    swift_task_dealloc(*(_QWORD *)(v1 + 320));
    swift_task_dealloc(v89);
    swift_task_dealloc(v88);
    swift_task_dealloc(v90);
    swift_task_dealloc(v91);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v71 = v1 + 16;
    v72 = *(_QWORD *)(v1 + 192);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 312) + 32))(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 304));
    v73 = *(void **)(v72 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_mindfulnessDataProvider);
    *(_QWORD *)(v1 + 56) = v1 + 128;
    *(_QWORD *)(v1 + 16) = v1;
    *(_QWORD *)(v1 + 24) = sub_10034C02C;
    v74 = swift_continuation_init(v1 + 16, 0);
    *(_QWORD *)(v1 + 80) = _NSConcreteStackBlock;
    v75 = (_QWORD *)(v1 + 80);
    v75[1] = 0x40000000;
    v75[2] = sub_100347050;
    v75[3] = &unk_100797858;
    v75[4] = v74;
    objc_msgSend(v73, "allMindfulnessSessionsWithCompletion:", v75);
    return swift_continuation_await(v71);
  }
}

uint64_t sub_10034C02C()
{
  return swift_task_switch(sub_10034C078, 0, 0);
}

uint64_t sub_10034C078()
{
  unint64_t *v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  const char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  double v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v47;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  _QWORD *v61;
  char v62;
  void *v63;
  void *v64;
  CHWorkoutDetailHeartRateTableViewCell *v65;
  id v66;
  SEL v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  CHWorkoutDetailHeartRateTableViewCell *v82;
  uint64_t v83;
  uint64_t v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  double v95;
  double v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  CHWorkoutDetailHeartRateTableViewCell *v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  CHWorkoutDetailHeartRateTableViewCell *v128;
  double v129[2];

  v1 = v0;
  v2 = v0[16];
  v3 = v0[40];
  v4 = (_QWORD *)swift_task_alloc(32);
  v4[2] = v3;
  v5 = (uint64_t)sub_10050EC4C(sub_100353E10, v4, v2);
  swift_task_dealloc(v4);
  if ((unint64_t)v5 >> 62)
    goto LABEL_24;
  v13 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v13)
  {
    v14 = 0;
    v118 = v1[34];
    v121 = v1[27];
    v124 = v5 & 0xC000000000000001;
    v114 = v13;
    v116 = (CHWorkoutDetailHeartRateTableViewCell *)v5;
    while (v124)
    {
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v5);
      v21 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_21;
LABEL_13:
      v127 = v21;
      v22 = v1[35];
      v23 = v1[29];
      v24 = v1[26];
      v5 = (uint64_t)v1;
      v25 = v1[23];
      v26 = v1[41] & 1;
      v27 = v20;
      v1 = objc_msgSend(v20, "startDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v1);

      sub_10041DD1C(v23, v25, v26, v22);
      (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v23, v24);
      v29 = sub_100439544(v22);
      v30 = _swiftEmptyDictionarySingleton[2];
      v31 = (v28 & 1) == 0;
      v32 = v30 + v31;
      if (__OFADD__(v30, v31))
        goto LABEL_22;
      v33 = v28;
      v1 = (_QWORD *)v5;
      if (_swiftEmptyDictionarySingleton[3] < v32)
      {
        v34 = *(_QWORD *)(v5 + 280);
        sub_1003FA818(v32, 1);
        v35 = sub_100439544(v34);
        if ((v33 & 1) != (v36 & 1))
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(*(_QWORD *)(v5 + 264));
        v29 = v35;
        v1 = (_QWORD *)v5;
      }
      v37 = v1[35];
      v38 = v1[33];
      if ((v33 & 1) != 0)
      {
        v15 = (*(uint64_t (**)(_QWORD, _QWORD))(v118 + 8))(v1[35], v1[33]);
        v16 = (_QWORD *)(_swiftEmptyDictionarySingleton[7] + 8 * v29);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v18 = *(_QWORD *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v17 = *(_QWORD *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
        v5 = (uint64_t)v116;
        if (v18 >= v17 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
        v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v27);
        specialized Array._endMutation()(v19);
      }
      else
      {
        v39 = sub_100047110((uint64_t *)&unk_100828340);
        *(double *)&v40 = COERCE_DOUBLE(swift_allocObject(v39, 40, 7));
        *(_OWORD *)(v40 + 16) = xmmword_100623630;
        *(_QWORD *)(v40 + 32) = v27;
        v129[0] = *(double *)&v40;
        v41 = specialized Array._endMutation()(v40);
        v42 = v129[0];
        _swiftEmptyDictionarySingleton[(v29 >> 6) + 8] |= 1 << v29;
        (*(void (**)(unint64_t, uint64_t, uint64_t, __n128))(v118 + 32))(_swiftEmptyDictionarySingleton[6] + *(_QWORD *)(v118 + 72) * v29, v37, v38, v41);
        *(double *)(_swiftEmptyDictionarySingleton[7] + 8 * v29) = v42;
        v43 = _swiftEmptyDictionarySingleton[2];
        v44 = __OFADD__(v43, 1);
        v45 = v43 + 1;
        v5 = (uint64_t)v116;
        if (v44)
          goto LABEL_23;
        _swiftEmptyDictionarySingleton[2] = v45;
      }
      ++v14;
      if (v127 == v114)
        goto LABEL_28;
    }
    v20 = *(id *)(v5 + 8 * v14 + 32);
    v21 = v14 + 1;
    if (!__OFADD__(v14, 1))
      goto LABEL_13;
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    if (v5 < 0)
      v47 = v5;
    else
      v47 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v13 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v5, v48, v49, v50, v51, v52, v53, v54);
  }
LABEL_28:
  v55 = v1[40];
  v56 = v1[32];
  v57 = v1[29];
  v122 = v1[31];
  v125 = v1[30];
  v58 = v1[28];
  v115 = v1[27];
  v119 = v1[26];
  v59 = *((_BYTE *)v1 + 328);
  v60 = v1[23];
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v5, v6, v7, v8, v9, v10, v11, v12);
  v61 = v1;
  v62 = v59 & 1;
  v129[0] = 0.0;
  sub_1004437C4(38);
  v64 = v63;
  v65 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10041F724(v55, v60, v62);
  swift_retain(_swiftEmptyDictionarySingleton);
  v66 = v64;
  v128 = sub_100352B48(v65, (uint64_t)_swiftEmptyDictionarySingleton, v129, v66);

  swift_release_n(_swiftEmptyDictionarySingleton, 2);
  swift_bridgeObjectRelease(v65, v67, v68, v69, v70, v71, v72, v73);
  static Calendar.current.getter(v74);
  v75 = sub_100047110((uint64_t *)&unk_100828720);
  v76 = type metadata accessor for Calendar.Component(0);
  v77 = *(_QWORD *)(v76 - 8);
  v78 = *(unsigned __int8 *)(v77 + 80);
  v79 = (v78 + 32) & ~v78;
  v80 = swift_allocObject(v75, v79 + *(_QWORD *)(v77 + 72), v78 | 7);
  *(_OWORD *)(v80 + 16) = xmmword_100622F90;
  v81 = v80 + v79;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v77 + 104))(v81, enum case for Calendar.Component.day(_:), v76);
  v82 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002302F0(v80);
  swift_setDeallocating(v80);
  swift_arrayDestroy(v81, 1, v76);
  v83 = swift_deallocClassInstance(v80, 32, 7);
  v84 = DateInterval.start.getter(v83);
  DateInterval.end.getter(v84);
  Calendar.dateComponents(_:from:to:)(v82, v57, v58);
  swift_bridgeObjectRelease(v82, v85, v86, v87, v88, v89, v90, v91);
  v92 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
  v92(v58, v119);
  v92(v57, v119);
  v93 = (*(uint64_t (**)(uint64_t, uint64_t))(v122 + 8))(v56, v125);
  v94 = DateComponents.day.getter(v93);
  v95 = 0.0;
  v96 = v129[0];
  if ((v97 & 1) == 0)
    v95 = v129[0] / ((double)v94 + 1.0);
  v99 = v61[39];
  v98 = v61[40];
  v100 = v61[38];
  v120 = v61[34];
  v123 = v61[33];
  v126 = v61[36];
  v117 = *((_BYTE *)v61 + 328);
  v101 = v61[22];
  v102 = v61[23];
  v103 = type metadata accessor for MetricDetailViewModel(0);
  v104 = v101 + *(int *)(v103 + 36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16))(v104, v98, v100);
  v105 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v99 + 56))(v104, 0, 1, v100);
  Date.init()(v105);
  v106 = (void *)objc_opt_self(HKQuantity);
  *(_QWORD *)v101 = objc_msgSend(v106, "quantityWithUnit:doubleValue:", v66, v96);
  v107 = objc_msgSend(v106, "quantityWithUnit:doubleValue:", v66, v95);

  *(_QWORD *)(v101 + 8) = v107;
  *(_QWORD *)(v101 + 16) = v128;
  *(_QWORD *)(v101 + 24) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v101 + 32) = v102;
  *(_BYTE *)(v101 + 40) = v117 & 1;
  *(_BYTE *)(v101 + *(int *)(v103 + 40)) = 1;
  (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v126, v123);
  (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v98, v100);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v101, 0, 1, v103);
  v108 = v61[36];
  v109 = v61[37];
  v110 = v61[35];
  v111 = v61[32];
  v113 = v61[28];
  v112 = v61[29];
  swift_task_dealloc(v61[40]);
  swift_task_dealloc(v109);
  swift_task_dealloc(v108);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  return ((uint64_t (*)(void))v61[1])();
}

uint64_t sub_10034C758(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  char v7;
  uint64_t v9;

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*a1, "endDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  v7 = DateInterval.contains(_:)(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

void sub_10034C814(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, void *a4@<X3>, char *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  double v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  double v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  double *v49;
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;

  v53 = (char *)a1;
  v49 = a3;
  v50 = a4;
  v51 = a2;
  v52 = a5;
  v5 = type metadata accessor for Calendar(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v47 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v47 - v20;
  static Calendar.current.getter(v22);
  Calendar.date(from:)(v53);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10001BE90((uint64_t)v11, (uint64_t *)&unk_100828370);
    v23 = type metadata accessor for MetricChartData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v52, 1, 1, v23);
    return;
  }
  v48 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v48(v21, v11, v12);
  v24 = v51;
  if (*(_QWORD *)(v51 + 16) && (v25 = sub_100439544((uint64_t)v53), (v26 & 1) != 0))
  {
    v27 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v25);
    swift_bridgeObjectRetain(v27);
  }
  else
  {
    v27 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v53 = v21;
  if (!((unint64_t)v27 >> 62))
  {
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v27);
    v54 = v13;
    if (v28)
      goto LABEL_9;
LABEL_19:
    v31 = 0.0;
LABEL_20:
    swift_bridgeObjectRelease_n(v27, 2);
    *v49 = v31 + *v49;
    v40 = v54;
    v41 = (uint64_t)v53;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v18, v53, v12);
    v42 = (void *)objc_opt_self(HKQuantity);
    v43 = v50;
    v44 = objc_msgSend(v42, "quantityWithUnit:doubleValue:", v43, v31);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v12);
    v45 = v52;
    *(_QWORD *)v52 = v43;
    v46 = type metadata accessor for MetricChartData(0);
    v48(&v45[*(int *)(v46 + 20)], v18, v12);
    *(_QWORD *)&v45[*(int *)(v46 + 24)] = v44;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 0, 1, v46);
    return;
  }
  if (v27 < 0)
    v39 = v27;
  else
    v39 = v27 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v27);
  v28 = _CocoaArrayWrapper.endIndex.getter(v39);
  v54 = v13;
  if (!v28)
    goto LABEL_19;
LABEL_9:
  if (v28 >= 1)
  {
    v29 = 0;
    v30 = v27 & 0xC000000000000001;
    v31 = 0.0;
    v32 = v27;
    do
    {
      if (v30)
        v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27);
      else
        v33 = *(id *)(v27 + 8 * v29 + 32);
      v34 = v33;
      ++v29;
      v35 = objc_msgSend(v33, "endDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v35);

      v36 = objc_msgSend(v34, "startDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v36);

      v37 = Date.timeIntervalSince(_:)(v15);
      v38 = *(void (**)(char *, uint64_t))(v54 + 8);
      v38(v15, v12);
      v38(v18, v12);

      v31 = v31 + v37;
      v27 = v32;
    }
    while (v28 != v29);
    goto LABEL_20;
  }
  __break(1u);
}

uint64_t sub_10034CC0C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v5 + 96) = a3;
  *(_QWORD *)(v5 + 104) = v4;
  *(_BYTE *)(v5 + 389) = a4;
  *(_BYTE *)(v5 + 388) = a2;
  *(_QWORD *)(v5 + 88) = a1;
  *(_QWORD *)(v5 + 112) = swift_getObjectType(v4);
  v6 = type metadata accessor for MetricChartData(0);
  *(_QWORD *)(v5 + 120) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 128) = v7;
  *(_QWORD *)(v5 + 136) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Calendar(0);
  *(_QWORD *)(v5 + 144) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 152) = v9;
  *(_QWORD *)(v5 + 160) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110((uint64_t *)&unk_100828370);
  *(_QWORD *)(v5 + 168) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  *(_QWORD *)(v5 + 176) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v5 + 184) = v12;
  *(_QWORD *)(v5 + 192) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DateComponents(0);
  *(_QWORD *)(v5 + 200) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v5 + 208) = v14;
  *(_QWORD *)(v5 + 216) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100821648);
  *(_QWORD *)(v5 + 224) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110((uint64_t *)&unk_100827440);
  *(_QWORD *)(v5 + 232) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DateInterval(0);
  *(_QWORD *)(v5 + 240) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v5 + 248) = v18;
  *(_QWORD *)(v5 + 256) = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10034CD90, 0, 0);
}

uint64_t sub_10034CD90(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  void *v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  Swift::String v29;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  NSObject *v40;
  uint64_t v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  os_log_type_t v56;
  void *v57;
  uint64_t v58;
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  SEL v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  Swift::String v83;
  CHWorkoutDetailHeartRateTableViewCell *v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  CHWorkoutDetailHeartRateTableViewCell *v93;
  char v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  unint64_t v98;
  SEL v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, _QWORD, uint64_t, uint64_t);
  const char *v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (**v140)(_QWORD, uint64_t, uint64_t, _QWORD);
  uint64_t v141;
  uint64_t v142;
  char v143;
  const char *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  uint64_t v151;
  CHWorkoutDetailHeartRateTableViewCell *v152;
  SEL v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  id v159;
  const char *v160;
  void *v161;
  void *v162;
  void *v163;
  void *v164;
  void *v165;
  void *v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  void *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  id v181;
  SEL v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  id v188;
  char v189;
  uint64_t *v190;
  os_log_t log;
  NSObject *loga;
  os_log_t logb;
  char v194;
  char v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;

  v2 = static os_log_type_t.default.getter(a1);
  v3 = (void *)HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, v2))
  {
    v4 = *(_QWORD *)(v1 + 112);
    v194 = *(_BYTE *)(v1 + 389);
    v5 = *(_BYTE *)(v1 + 388);
    log = v3;
    v6 = swift_slowAlloc(32, -1);
    v7 = swift_slowAlloc(96, -1);
    v196 = v7;
    *(_DWORD *)v6 = 136315650;
    v8 = _typeName(_:qualified:)(v4, 0);
    v10 = (CHWorkoutDetailHeartRateTableViewCell *)v9;
    *(_QWORD *)(v1 + 56) = sub_10003E8EC(v8, v9, &v196);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 56, v1 + 64, v6 + 4);
    swift_bridgeObjectRelease(v10, v11, v12, v13, v14, v15, v16, v17);
    *(_WORD *)(v6 + 12) = 2080;
    v18 = sub_1005F0860(v5);
    v20 = (CHWorkoutDetailHeartRateTableViewCell *)v19;
    *(_QWORD *)(v1 + 64) = sub_10003E8EC(v18, v19, &v196);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 64, v1 + 72, v6 + 14);
    swift_bridgeObjectRelease(v20, v21, v22, v23, v24, v25, v26, v27);
    *(_WORD *)(v6 + 22) = 2080;
    v28 = *(_QWORD *)(v1 + 96);
    if ((v194 & 1) != 0)
    {
      v41 = v1 + 80;
      v40 = log;
      if (v28)
      {
        if (v28 == 1)
        {
          v38 = 0x6565772073696874;
          v39 = (CHWorkoutDetailHeartRateTableViewCell *)0xE90000000000006BLL;
        }
        else
        {
          v38 = 0x6E6F6D2073696874;
          v39 = (CHWorkoutDetailHeartRateTableViewCell *)0xEA00000000006874;
        }
      }
      else
      {
        v39 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
        v38 = 0x7961646F74;
      }
    }
    else
    {
      v197 = 0x2072616579;
      v198 = 0xE500000000000000;
      *(_QWORD *)(v1 + 72) = v28;
      v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = (CHWorkoutDetailHeartRateTableViewCell *)v29._object;
      String.append(_:)(v29);
      swift_bridgeObjectRelease(object, v31, v32, v33, v34, v35, v36, v37);
      v38 = v197;
      v39 = (CHWorkoutDetailHeartRateTableViewCell *)v198;
      v41 = v1 + 80;
      v40 = log;
    }
    *(_QWORD *)(v1 + 80) = sub_10003E8EC(v38, (unint64_t)v39, &v196);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v41, v1 + 88, v6 + 24);
    swift_bridgeObjectRelease(v39, v42, v43, v44, v45, v46, v47, v48);
    _os_log_impl((void *)&_mh_execute_header, v40, v2, "%s fetchWorkoutData for %s in %s", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy(v7, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  v49 = *(_BYTE *)(v1 + 389);
  v50 = *(_QWORD *)(v1 + 96);
  v51 = sub_1005F0DF8(*(_BYTE *)(v1 + 388));
  *(_QWORD *)(v1 + 264) = v51;
  if ((v52 & 1) != 0 || (v49 & (v50 == 0)) != 0)
    goto LABEL_14;
  v53 = *(_QWORD *)(v1 + 240);
  v54 = *(_QWORD *)(v1 + 248);
  v55 = *(_QWORD *)(v1 + 232);
  sub_10041E110(*(char **)(v1 + 96), *(_BYTE *)(v1 + 389) & 1, v55);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v55, 1, v53) == 1)
  {
    v51 = sub_10001BE90(*(_QWORD *)(v1 + 232), (uint64_t *)&unk_100827440);
LABEL_14:
    v56 = static os_log_type_t.error.getter(v51);
    v57 = (void *)HKLogActivity;
    if (os_log_type_enabled(HKLogActivity, v56))
    {
      v190 = (uint64_t *)(v1 + 40);
      v58 = *(_QWORD *)(v1 + 112);
      v189 = *(_BYTE *)(v1 + 389);
      v59 = *(_BYTE *)(v1 + 388);
      loga = v57;
      v60 = swift_slowAlloc(32, -1);
      v61 = swift_slowAlloc(96, -1);
      v196 = v61;
      *(_DWORD *)v60 = 136315650;
      v62 = _typeName(_:qualified:)(v58, 0);
      v64 = (CHWorkoutDetailHeartRateTableViewCell *)v63;
      *(_QWORD *)(v1 + 16) = sub_10003E8EC(v62, v63, &v196);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v60 + 4);
      swift_bridgeObjectRelease(v64, v65, v66, v67, v68, v69, v70, v71);
      *(_WORD *)(v60 + 12) = 2080;
      v72 = sub_1005F0860(v59);
      v74 = (CHWorkoutDetailHeartRateTableViewCell *)v73;
      *(_QWORD *)(v1 + 24) = sub_10003E8EC(v72, v73, &v196);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32, v60 + 14);
      swift_bridgeObjectRelease(v74, v75, v76, v77, v78, v79, v80, v81);
      *(_WORD *)(v60 + 22) = 2080;
      v82 = *(_QWORD *)(v1 + 96);
      if ((v189 & 1) != 0)
      {
        v97 = 0x6565772073696874;
        v98 = 0xE90000000000006BLL;
        if (v82 != 1)
        {
          v97 = 0x6E6F6D2073696874;
          v98 = 0xEA00000000006874;
        }
        if (v82)
          v92 = v97;
        else
          v92 = 0x7961646F74;
        if (v82)
          v93 = (CHWorkoutDetailHeartRateTableViewCell *)v98;
        else
          v93 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
      }
      else
      {
        v197 = 0x2072616579;
        v198 = 0xE500000000000000;
        *(_QWORD *)(v1 + 32) = v82;
        v83._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        v84 = (CHWorkoutDetailHeartRateTableViewCell *)v83._object;
        String.append(_:)(v83);
        swift_bridgeObjectRelease(v84, v85, v86, v87, v88, v89, v90, v91);
        v92 = v197;
        v93 = (CHWorkoutDetailHeartRateTableViewCell *)v198;
      }
      *v190 = sub_10003E8EC(v92, (unint64_t)v93, &v196);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v190, v1 + 48, v60 + 24);
      swift_bridgeObjectRelease(v93, v99, v100, v101, v102, v103, v104, v105);
      _os_log_impl((void *)&_mh_execute_header, loga, v56, "%s error fetchWorkoutData for %s in %s: invalid metric type or date interval", (uint8_t *)v60, 0x20u);
      swift_arrayDestroy(v61, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1, -1);
      swift_slowDealloc(v60, -1, -1);

    }
    v106 = *(_QWORD *)(v1 + 88);
    v107 = type metadata accessor for MetricDetailViewModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v106, 1, 1, v107);
    goto LABEL_29;
  }
  v94 = *(_BYTE *)(v1 + 388);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 248) + 32))(*(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240));
  *(_QWORD *)(v1 + 48) = _swiftEmptyArrayStorage;
  sub_1004437C4(v94);
  *(_QWORD *)(v1 + 272) = v95;
  v96 = 1;
  if (((1 << v94) & 0x5DDBB8E070) != 0)
  {
    v96 = 0;
  }
  else if (((1 << v94) & 0x2224471F80) == 0)
  {
    v96 = (*(_BYTE *)(v1 + 389) & 1) == 0;
  }
  *(_BYTE *)(v1 + 390) = v96;
  v116 = sub_10041F724(*(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 96), *(_BYTE *)(v1 + 389) & 1);
  *(_QWORD *)(v1 + 280) = v116;
  v117 = v116[2];
  *(_QWORD *)(v1 + 288) = v117;
  v118 = *(_QWORD *)(v1 + 208);
  if (v117)
  {
    v119 = 0;
    *(_DWORD *)(v1 + 384) = *(_DWORD *)(v118 + 80);
    *(_QWORD *)(v1 + 296) = *(_QWORD *)(v118 + 72);
    *(_QWORD *)(v1 + 304) = *(_QWORD *)(v118 + 16);
    while (1)
    {
      *(_QWORD *)(v1 + 328) = v119;
      *(_QWORD *)(v1 + 336) = _swiftEmptyArrayStorage;
      *(_QWORD *)(v1 + 312) = 0;
      *(_QWORD *)(v1 + 320) = 0;
      v120 = *(_QWORD *)(v1 + 224);
      v121 = *(_QWORD *)(v1 + 200);
      v122 = *(_QWORD *)(v1 + 208);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v1 + 304))(v120, *(_QWORD *)(v1 + 280)+ ((*(unsigned __int8 *)(v1 + 384) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 384))+ *(_QWORD *)(v1 + 296) * v119, v121);
      v123 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v122 + 56);
      *(_QWORD *)(v1 + 344) = v123;
      v123(v120, 0, 1, v121);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v120, 1, v121) == 1)
        break;
      v131 = *(_QWORD *)(v1 + 216);
      v132 = *(_QWORD *)(v1 + 176);
      v133 = *(_QWORD *)(v1 + 184);
      v135 = *(_QWORD *)(v1 + 160);
      v134 = *(_QWORD *)(v1 + 168);
      v136 = *(_QWORD *)(v1 + 144);
      v137 = *(_QWORD *)(v1 + 152);
      v138 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 208) + 32))(v131, *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 200));
      static Calendar.current.getter(v138);
      Calendar.date(from:)(v131);
      (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v135, v136);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v134, 1, v132) != 1)
      {
        v167 = *(_BYTE *)(v1 + 389);
        (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 184) + 32))(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
        v168 = swift_task_alloc(dword_10082F30C);
        *(_QWORD *)(v1 + 352) = v168;
        *(_QWORD *)v168 = v1;
        *(_QWORD *)(v168 + 8) = sub_10034D83C;
        v169 = *(_QWORD *)(v1 + 216);
        v170 = *(_QWORD *)(v1 + 104);
        v171 = *(_BYTE *)(v1 + 388);
        *(_QWORD *)(v168 + 96) = *(_QWORD *)(v1 + 264);
        *(_QWORD *)(v168 + 104) = v170;
        *(_BYTE *)(v168 + 241) = v167 & 1;
        *(_BYTE *)(v168 + 240) = v171;
        *(_QWORD *)(v168 + 88) = v169;
        return swift_task_switch(sub_10034DFF0, 0, 0);
      }
      v139 = *(_QWORD *)(v1 + 168);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 208) + 8))(*(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 200));
      sub_10001BE90(v139, (uint64_t *)&unk_100828370);
      v119 = *(_QWORD *)(v1 + 328) + 1;
      if (v119 == *(_QWORD *)(v1 + 288))
      {
        v140 = (void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v1 + 344);
        goto LABEL_39;
      }
    }
  }
  else
  {
    v140 = (void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v118 + 56);
LABEL_39:
    (*v140)(*(_QWORD *)(v1 + 224), 1, 1, *(_QWORD *)(v1 + 200));
  }
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 280), v124, v125, v126, v127, v128, v129, v130);
  v141 = *(_QWORD *)(v1 + 48);
  if (v141 < 0 || (v141 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + 48), 2);
    v142 = (uint64_t)sub_1002958E8(v141);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v141, v182, v183, v184, v185, v186, v187, v188);
  }
  else
  {
    v142 = v141 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + 48), 2);
  }
  v197 = v142;
  sub_100350B74(&v197);
  v143 = *(_BYTE *)(v1 + 390);
  swift_bridgeObjectRelease_n(v141, 2);
  v151 = v197;
  *(_QWORD *)(v1 + 48) = v197;
  if ((v143 & 1) != 0)
  {
    v152 = (CHWorkoutDetailHeartRateTableViewCell *)0xE700000000000000;
    _stringCompareWithSmolCheck(_:_:expecting:)(0x65676172657661, 0xE700000000000000, 0x6C61746F74, 0xE500000000000000, 0);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE700000000000000, v153, v154, v155, v156, v157, v158, v159);
  }
  else
  {
    v152 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000, v144, v145, v146, v147, v148, v149, v150);
    _stringCompareWithSmolCheck(_:_:expecting:)(0x6C61746F74, 0xE500000000000000, 0x65676172657661, 0xE700000000000000, 0);
  }
  swift_bridgeObjectRelease(v152, v160, v161, v162, v163, v164, v165, v166);
  v172 = *(void **)(v1 + 272);
  v174 = *(_QWORD *)(v1 + 248);
  v173 = *(_QWORD *)(v1 + 256);
  v175 = *(_QWORD *)(v1 + 240);
  v195 = *(_BYTE *)(v1 + 389);
  v176 = *(_QWORD *)(v1 + 88);
  logb = *(os_log_t *)(v1 + 96);
  v177 = type metadata accessor for MetricDetailViewModel(0);
  v178 = v176 + *(int *)(v177 + 36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v174 + 16))(v178, v173, v175);
  v179 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v174 + 56))(v178, 0, 1, v175);
  Date.init()(v179);
  v180 = (void *)objc_opt_self(HKQuantity);
  *(_QWORD *)v176 = objc_msgSend(v180, "quantityWithUnit:doubleValue:", v172, 0.0);
  v181 = objc_msgSend(v180, "quantityWithUnit:doubleValue:", v172, 0.0);

  *(_QWORD *)(v176 + 8) = v181;
  *(_QWORD *)(v176 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v176 + 24) = v151;
  *(_QWORD *)(v176 + 32) = logb;
  *(_BYTE *)(v176 + 40) = v195 & 1;
  *(_BYTE *)(v176 + *(int *)(v177 + 40)) = 1;
  (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v173, v175);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 56))(v176, 0, 1, v177);
LABEL_29:
  v108 = *(_QWORD *)(v1 + 224);
  v109 = *(_QWORD *)(v1 + 232);
  v110 = *(_QWORD *)(v1 + 216);
  v111 = *(_QWORD *)(v1 + 192);
  v113 = *(_QWORD *)(v1 + 160);
  v112 = *(_QWORD *)(v1 + 168);
  v114 = *(_QWORD *)(v1 + 136);
  swift_task_dealloc(*(_QWORD *)(v1 + 256));
  swift_task_dealloc(v109);
  swift_task_dealloc(v108);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10034D83C(uint64_t a1, double a2, double a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 352);
  *(double *)(v4 + 360) = a2;
  *(double *)(v4 + 368) = a3;
  *(_QWORD *)(v4 + 376) = a1;
  swift_task_dealloc(v5);
  return swift_task_switch(sub_10034D89C, 0, 0);
}

uint64_t sub_10034D89C(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  int v15;
  const char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  char v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  double v31;
  double v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, _QWORD, uint64_t, uint64_t);
  const char *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  const char *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  uint64_t v100;
  char v101;
  double v102;
  double v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char v110;
  SEL v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  SEL v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;

  v9 = *(_QWORD *)(v8 + 376);
  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 376);
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_18:
    v64 = *(_QWORD *)(v8 + 208);
    v63 = *(_QWORD *)(v8 + 216);
    v66 = *(_QWORD *)(v8 + 192);
    v65 = *(_QWORD *)(v8 + 200);
    v67 = *(_QWORD *)(v8 + 176);
    v68 = *(_QWORD *)(v8 + 184);
    swift_bridgeObjectRelease(v10, a2, a3, a4, a5, a6, a7, a8);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v66, v67);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
    v41 = *(_QWORD *)(v8 + 336);
    v45 = *(double *)(v8 + 312);
    v44 = *(double *)(v8 + 320);
    goto LABEL_19;
  }
  if (v9 < 0)
    v54 = *(_QWORD *)(v8 + 376);
  else
    v54 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v8 + 376));
  v55 = _CocoaArrayWrapper.endIndex.getter(v54);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, v56, v57, v58, v59, v60, v61, v62);
  v10 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 376);
  if (!v55)
    goto LABEL_18;
LABEL_3:
  v12 = *(double *)(v8 + 360);
  v11 = *(double *)(v8 + 368);
  v14 = *(double *)(v8 + 312);
  v13 = *(double *)(v8 + 320);
  v15 = *(unsigned __int8 *)(v8 + 390);
  sub_10013BFBC((uint64_t)v10);
  if (v15 == 1)
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE700000000000000, v16, v17, v18, v19, v20, v21, v22);
    goto LABEL_6;
  }
  v23 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C61746F74, 0xE500000000000000, 0x65676172657661, 0xE700000000000000, 0);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000, v24, v25, v26, v27, v28, v29, v30);
  if ((v23 & 1) != 0)
  {
LABEL_6:
    v31 = *(double *)(v8 + 368);
    v32 = 0.0;
    if (v31 > 0.0)
      v32 = *(double *)(v8 + 360) / v31;
    goto LABEL_9;
  }
  v32 = *(double *)(v8 + 360);
LABEL_9:
  v33 = *(_QWORD *)(v8 + 336);
  v34 = *(void **)(v8 + 272);
  v35 = *(char **)(v8 + 136);
  v36 = *(_QWORD *)(v8 + 120);
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v8 + 184) + 16))(&v35[*(int *)(v36 + 20)], *(_QWORD *)(v8 + 192), *(_QWORD *)(v8 + 176));
  v37 = (void *)objc_opt_self(HKQuantity);
  v38 = v34;
  v39 = objc_msgSend(v37, "quantityWithUnit:doubleValue:", v38, v32);
  *(_QWORD *)v35 = v38;
  *(_QWORD *)&v35[*(int *)(v36 + 24)] = v39;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
  v41 = *(_QWORD *)(v8 + 336);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v41 = sub_10013FD58(0, *(_QWORD *)(v41 + 16) + 1, 1, *(_QWORD *)(v8 + 336));
  v43 = *(_QWORD *)(v41 + 16);
  v42 = *(_QWORD *)(v41 + 24);
  if (v43 >= v42 >> 1)
    v41 = sub_10013FD58(v42 > 1, v43 + 1, 1, v41);
  v44 = v12 + v13;
  v45 = v11 + v14;
  v47 = *(_QWORD *)(v8 + 208);
  v46 = *(_QWORD *)(v8 + 216);
  v49 = *(_QWORD *)(v8 + 192);
  v48 = *(_QWORD *)(v8 + 200);
  v50 = *(_QWORD *)(v8 + 176);
  v51 = *(_QWORD *)(v8 + 184);
  v53 = *(_QWORD *)(v8 + 128);
  v52 = *(_QWORD *)(v8 + 136);
  *(_QWORD *)(v41 + 16) = v43 + 1;
  sub_100047C88(v52, v41+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(_QWORD *)(v53 + 72) * v43, type metadata accessor for MetricChartData);
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
LABEL_19:
  v69 = *(_QWORD *)(v8 + 328) + 1;
  if (v69 == *(_QWORD *)(v8 + 288))
  {
LABEL_23:
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v8 + 344))(*(_QWORD *)(v8 + 224), 1, 1, *(_QWORD *)(v8 + 200));
  }
  else
  {
    while (1)
    {
      *(_QWORD *)(v8 + 328) = v69;
      *(_QWORD *)(v8 + 336) = v41;
      *(double *)(v8 + 312) = v45;
      *(double *)(v8 + 320) = v44;
      v70 = *(_QWORD *)(v8 + 224);
      v71 = *(_QWORD *)(v8 + 200);
      v72 = *(_QWORD *)(v8 + 208);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 304))(v70, *(_QWORD *)(v8 + 280)+ ((*(unsigned __int8 *)(v8 + 384) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 384))+ *(_QWORD *)(v8 + 296) * v69, v71);
      v73 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v72 + 56);
      *(_QWORD *)(v8 + 344) = v73;
      v73(v70, 0, 1, v71);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71) == 1)
        break;
      v81 = *(_QWORD *)(v8 + 216);
      v82 = *(_QWORD *)(v8 + 176);
      v83 = *(_QWORD *)(v8 + 184);
      v85 = *(_QWORD *)(v8 + 160);
      v84 = *(_QWORD *)(v8 + 168);
      v86 = *(_QWORD *)(v8 + 144);
      v87 = *(_QWORD *)(v8 + 152);
      v88 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v8 + 208) + 32))(v81, *(_QWORD *)(v8 + 224), *(_QWORD *)(v8 + 200));
      static Calendar.current.getter(v88);
      Calendar.date(from:)(v81);
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v85, v86);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v84, 1, v82) != 1)
      {
        v104 = *(_BYTE *)(v8 + 389);
        (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v8 + 184) + 32))(*(_QWORD *)(v8 + 192), *(_QWORD *)(v8 + 168), *(_QWORD *)(v8 + 176));
        v105 = swift_task_alloc(dword_10082F30C);
        *(_QWORD *)(v8 + 352) = v105;
        *(_QWORD *)v105 = v8;
        *(_QWORD *)(v105 + 8) = sub_10034D83C;
        v106 = *(_QWORD *)(v8 + 216);
        v107 = *(_QWORD *)(v8 + 104);
        v108 = *(_BYTE *)(v8 + 388);
        *(_QWORD *)(v105 + 96) = *(_QWORD *)(v8 + 264);
        *(_QWORD *)(v105 + 104) = v107;
        *(_BYTE *)(v105 + 241) = v104 & 1;
        *(_BYTE *)(v105 + 240) = v108;
        *(_QWORD *)(v105 + 88) = v106;
        return swift_task_switch(sub_10034DFF0, 0, 0);
      }
      v89 = *(_QWORD *)(v8 + 168);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v8 + 208) + 8))(*(_QWORD *)(v8 + 216), *(_QWORD *)(v8 + 200));
      sub_10001BE90(v89, (uint64_t *)&unk_100828370);
      v69 = *(_QWORD *)(v8 + 328) + 1;
      if (v69 == *(_QWORD *)(v8 + 288))
        goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 280), v74, v75, v76, v77, v78, v79, v80);
  v90 = *(_QWORD *)(v8 + 48);
  if (v90 < 0 || (v90 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n(*(_QWORD *)(v8 + 48), 2);
    v91 = (uint64_t)sub_1002958E8(v90);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v90, v135, v136, v137, v138, v139, v140, v141);
  }
  else
  {
    v91 = v90 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*(_QWORD *)(v8 + 48), 2);
  }
  v145 = v91;
  sub_100350B74(&v145);
  v92 = *(_BYTE *)(v8 + 390);
  swift_bridgeObjectRelease_n(v90, 2);
  v100 = v145;
  *(_QWORD *)(v8 + 48) = v145;
  v144 = v100;
  if ((v92 & 1) != 0)
  {
    v101 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65676172657661, 0xE700000000000000, 0x6C61746F74, 0xE500000000000000, 0);
    swift_bridgeObjectRelease_n(0xE700000000000000, 2);
    v102 = 0.0;
    if ((v101 & 1) != 0)
      v103 = v44;
    else
      v103 = 0.0;
    if (v45 <= 0.0)
      goto LABEL_38;
  }
  else
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000, v93, v94, v95, v96, v97, v98, v99);
    v110 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C61746F74, 0xE500000000000000, 0x65676172657661, 0xE700000000000000, 0);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000, v111, v112, v113, v114, v115, v116, v117);
    v102 = 0.0;
    if ((v110 & 1) == 0 || (v103 = v44, v45 <= 0.0))
    {
      v103 = v44;
      goto LABEL_38;
    }
  }
  v102 = v44 / v45;
LABEL_38:
  v118 = *(void **)(v8 + 272);
  v120 = *(_QWORD *)(v8 + 248);
  v119 = *(_QWORD *)(v8 + 256);
  v121 = *(_QWORD *)(v8 + 240);
  v143 = *(_BYTE *)(v8 + 389);
  v122 = *(_QWORD *)(v8 + 88);
  v142 = *(_QWORD *)(v8 + 96);
  v123 = type metadata accessor for MetricDetailViewModel(0);
  v124 = v122 + *(int *)(v123 + 36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 16))(v124, v119, v121);
  v125 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v120 + 56))(v124, 0, 1, v121);
  Date.init()(v125);
  v126 = (void *)objc_opt_self(HKQuantity);
  *(_QWORD *)v122 = objc_msgSend(v126, "quantityWithUnit:doubleValue:", v118, v103);
  v127 = objc_msgSend(v126, "quantityWithUnit:doubleValue:", v118, v102);

  *(_QWORD *)(v122 + 8) = v127;
  *(_QWORD *)(v122 + 16) = v41;
  *(_QWORD *)(v122 + 24) = v144;
  *(_QWORD *)(v122 + 32) = v142;
  *(_BYTE *)(v122 + 40) = v143 & 1;
  *(_BYTE *)(v122 + *(int *)(v123 + 40)) = 1;
  (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v119, v121);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56))(v122, 0, 1, v123);
  v128 = *(_QWORD *)(v8 + 224);
  v129 = *(_QWORD *)(v8 + 232);
  v130 = *(_QWORD *)(v8 + 216);
  v131 = *(_QWORD *)(v8 + 192);
  v133 = *(_QWORD *)(v8 + 160);
  v132 = *(_QWORD *)(v8 + 168);
  v134 = *(_QWORD *)(v8 + 136);
  swift_task_dealloc(*(_QWORD *)(v8 + 256));
  swift_task_dealloc(v129);
  swift_task_dealloc(v128);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  return (*(uint64_t (**)(void))(v8 + 8))();
}

uint64_t sub_10034DFCC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 96) = a3;
  *(_QWORD *)(v6 + 104) = v5;
  *(_BYTE *)(v6 + 241) = a5;
  *(_BYTE *)(v6 + 240) = a2;
  *(_QWORD *)(v6 + 88) = a1;
  return swift_task_switch(sub_10034DFF0, 0, 0);
}

uint64_t sub_10034DFF0()
{
  uint64_t v0;
  char v1;
  BOOL v2;
  uint64_t v3;
  char v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  const char *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  const char *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  char **v30;
  double v31;
  double v32;
  void *v33;
  const char *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  id v43;
  int v44;
  unsigned int v45;
  uint64_t v46;
  id v47;
  void *v48;
  double v49;
  double v50;
  double v51;
  double v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  const char *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  id v73;
  void *v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  id v76;
  int v77;
  uint64_t v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  uint64_t v80;
  uint64_t v81;
  Class isa;
  void *v83;
  objc_class *v84;
  Class v85;
  objc_class *v86;
  objc_class *v87;
  double v88;
  double v89;
  double v90;
  double v91;
  unsigned int v92;
  void *v93;
  void *v94;
  double v95;
  double v96;
  id v97;
  void *v98;
  double v99;
  uint64_t v100;
  SEL v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  _QWORD *v108;
  CHWorkoutDetailHeartRateTableViewCell *v110;
  _QWORD *v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  SEL v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  uint64_t **v124;
  SEL v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;

  v1 = *(_BYTE *)(v0 + 240);
  v2 = 1;
  if (((1 << v1) & 0x5DDBB8E070) != 0)
  {
    v2 = 0;
  }
  else if (((1 << v1) & 0x2224471F80) == 0)
  {
    v2 = (*(_BYTE *)(v0 + 241) & 1) == 0;
  }
  *(_BYTE *)(v0 + 242) = v2;
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_BYTE *)(v0 + 241);
  *(_QWORD *)(v0 + 80) = &_swiftEmptySetSingleton;
  v5 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_workoutDataProvider);
  if ((v4 & 1) != 0)
    v6 = objc_msgSend(v5, "workoutsByDay");
  else
    v6 = objc_msgSend(v5, "workoutsByMonthAndYear");
  v7 = v6;
  v8 = type metadata accessor for DateComponents(0);
  v9 = sub_100047110((uint64_t *)&unk_100827430);
  v10 = sub_1000083D8(&qword_100822030, (uint64_t (*)(uint64_t))&type metadata accessor for DateComponents, (uint64_t)&protocol conformance descriptor for DateComponents);
  v11 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v7, v8, v9, v10);

  if (*(_QWORD *)v11->cellPadding && (v19 = sub_100439544(*(_QWORD *)(v0 + 88)), (v12 & 1) != 0))
  {
    v20 = *(_QWORD *)(*(_QWORD *)v11[1].cellInset + 8 * v19);
    swift_bridgeObjectRetain(v20);
  }
  else
  {
    v20 = (uint64_t)_swiftEmptyArrayStorage;
  }
  *(_QWORD *)(v0 + 112) = v20;
  swift_bridgeObjectRelease(v11, v12, v13, v14, v15, v16, v17, v18);
  if ((unint64_t)v20 >> 62)
    goto LABEL_84;
  v28 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  *(_QWORD *)(v0 + 120) = v28;
  if (!v28)
  {
LABEL_88:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v20, v21, v22, v23, v24, v25, v26, v27);
    v31 = 0.0;
    v110 = (CHWorkoutDetailHeartRateTableViewCell *)&_swiftEmptySetSingleton;
    v32 = 0.0;
    goto LABEL_89;
  }
LABEL_14:
  v29 = 0;
  *(_QWORD *)(v0 + 128) = OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_metricFormattingHelper;
  *(_QWORD *)(v0 + 136) = HKQuantityTypeIdentifierDistanceWalkingRunning;
  v30 = &selRef_celebrationMovieURLForAchievementIdentifer_;
  v31 = 0.0;
  v32 = 0.0;
  while (1)
  {
    *(double *)(v0 + 144) = v31;
    *(double *)(v0 + 152) = v32;
    v41 = *(_QWORD *)(v0 + 112);
    if ((v41 & 0xC000000000000001) != 0)
    {
      v42 = (CHWorkoutDetailHeartRateTableViewCell *)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v41);
    }
    else
    {
      if (v29 >= *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_82;
      v42 = (CHWorkoutDetailHeartRateTableViewCell *)*(id *)(v41 + 8 * v29 + 32);
    }
    v20 = (uint64_t)v42;
    *(_QWORD *)(v0 + 160) = v42;
    *(_QWORD *)(v0 + 168) = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      if (v20 < 0)
        v115 = v20;
      else
        v115 = v20 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v20);
      v116 = _CocoaArrayWrapper.endIndex.getter(v115);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v20, v117, v118, v119, v120, v121, v122, v123);
      *(_QWORD *)(v0 + 120) = v116;
      if (!v116)
        goto LABEL_88;
      goto LABEL_14;
    }
    v43 = *(id *)(v0 + 96);
    if (-[CHWorkoutDetailHeartRateTableViewCell workoutActivityType](v42, "workoutActivityType") != v43)
      break;
    v44 = *(unsigned __int8 *)(v0 + 242);
    v20 = (uint64_t)(id)v20;
    sub_1001428C8((Swift::Int *)&v132, (void *)v20);

    if (v44 == 1)
    {
      v45 = *(unsigned __int8 *)(v0 + 240);
      if (v45 > 0x25)
        goto LABEL_66;
      if (((1 << v45) & 0x2224410080) == 0)
      {
        if (((1 << v45) & 0x61F00) != 0)
        {
          v111 = (_QWORD *)swift_task_alloc(dword_100823F04);
          *(_QWORD *)(v0 + 176) = v111;
          *v111 = v0;
          v111[1] = sub_10034EE34;
          v112 = *(_BYTE *)(v0 + 240);
          v113 = v20;
          v114 = 0;
          return sub_1001928D0(v113, v114, v112);
        }
        goto LABEL_66;
      }
      if (qword_10081DD80 != -1)
        swift_once(&qword_10081DD80, sub_100445E3C);
      v46 = qword_10086AA10;
      v47 = objc_msgSend((id)v20, "fiui_totalDistance");
      if (!v47)
      {
        objc_msgSend((id)v20, "fiui_duration");
LABEL_66:

        goto LABEL_16;
      }
      v48 = v47;
      objc_msgSend(v47, "doubleValueForUnit:", v46);
      v50 = v49;

      objc_msgSend((id)v20, "fiui_duration");
      if (v50 <= 0.0)
        goto LABEL_66;
      v52 = v51;

      v32 = v52 + *(double *)(v0 + 152);
      v31 = v50 + *(double *)(v0 + 144);
    }
    else
    {
      v92 = *(unsigned __int8 *)(v0 + 240);
      sub_1004437C4(*(_BYTE *)(v0 + 240));
      v94 = v93;
      if (v92 <= 0x24)
      {
        if (((1 << v92) & 0x448882010) != 0)
        {
          v97 = objc_msgSend((id)v20, "fiui_totalDistance");
          if (v97)
            goto LABEL_69;
        }
        else
        {
          if (((1 << v92) & 0x891104020) != 0)
          {
            objc_msgSend((id)v20, "fiui_duration");
            v96 = v95;
            goto LABEL_70;
          }
          if (((1 << v92) & 0x1102208040) != 0)
          {
            v97 = objc_msgSend((id)v20, "fi_elevationGain");
LABEL_69:
            v98 = v97;
            objc_msgSend(v97, "doubleValueForUnit:", v94);
            v96 = v99;

LABEL_70:
            v32 = v32 + v96;
            goto LABEL_16;
          }
        }
      }

      v32 = v32 + 0.0;
    }
LABEL_16:
    v29 = *(_QWORD *)(v0 + 168);
    if (v29 == *(_QWORD *)(v0 + 120))
    {
      swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 112), v34, v35, v36, v37, v38, v39, v40);
      v110 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 80);
LABEL_89:
      v124 = sub_1002966F0((uint64_t)v110);
      swift_bridgeObjectRelease(v110, v125, v126, v127, v128, v129, v130, v131);
      return (*(uint64_t (**)(uint64_t **, double, double))(v0 + 8))(v124, v32, v31);
    }
  }
  v53 = objc_msgSend((id)v20, "workoutActivities");
  v54 = sub_10001E724(0, (unint64_t *)&qword_10082E6A0, HKWorkoutActivity_ptr);
  v55 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v53, v54);
  *(_QWORD *)(v0 + 184) = v55;

  if (!((unint64_t)v55 >> 62))
  {
    v63 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 192) = v63;
    if (v63)
      goto LABEL_33;
    goto LABEL_77;
  }
  if (v55 < 0)
    v100 = v55;
  else
    v100 = v55 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v55);
  v63 = _CocoaArrayWrapper.endIndex.getter(v100);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v55, v101, v102, v103, v104, v105, v106, v107);
  *(_QWORD *)(v0 + 192) = v63;
  if (!v63)
  {
LABEL_77:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v55, v56, v57, v58, v59, v60, v61, v62);

    goto LABEL_16;
  }
LABEL_33:
  if (v63 < 1)
    goto LABEL_83;
  v64 = 0;
  while (2)
  {
    *(_QWORD *)(v0 + 216) = v64;
    *(double *)(v0 + 200) = v31;
    *(double *)(v0 + 208) = v32;
    v72 = *(_QWORD *)(v0 + 184);
    if ((v72 & 0xC000000000000001) != 0)
      v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v64, v72);
    else
      v73 = *(id *)(v72 + 8 * v64 + 32);
    v74 = v73;
    *(_QWORD *)(v0 + 224) = v73;
    v75 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 96);
    v76 = objc_msgSend(v73, v30[353]);
    v20 = (uint64_t)objc_msgSend(v76, "identifier");

    if ((CHWorkoutDetailHeartRateTableViewCell *)v20 != v75)
    {

      goto LABEL_36;
    }
    v77 = *(unsigned __int8 *)(v0 + 242);
    sub_1001428C8((Swift::Int *)&v132, *(id *)(v0 + 160));

    v78 = *(unsigned __int8 *)(v0 + 240);
    if (v77 != 1)
      __asm { BR              X8 }
    v79 = v74;
    v20 = (uint64_t)v79;
    if (v78 > 0x25)
      goto LABEL_58;
    if (((1 << v78) & 0x2224410080) != 0)
    {
      v80 = qword_10081DD80;
      v20 = v79;
      if (v80 != -1)
        swift_once(&qword_10081DD80, sub_100445E3C);
      v81 = qword_10086AA10;
      isa = (Class)objc_msgSend((id)v20, "distanceType");
      if (!isa)
      {
        v83 = *(void **)(v0 + 136);
        sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
        isa = HKQuantityType.init(_:)((HKQuantityTypeIdentifier)v83).super.super.super.isa;
      }
      v84 = (objc_class *)objc_msgSend((id)v20, "statisticsForType:", isa);
      if (v84)
      {
        v85 = v84;
        v86 = (objc_class *)-[objc_class sumQuantity](v84, "sumQuantity");
        if (v86)
        {
          v87 = v86;
          -[objc_class doubleValueForUnit:](v86, "doubleValueForUnit:", v81);
          v89 = v88;

          v85 = isa;
          isa = v87;
        }
        else
        {
          v89 = 0.0;
        }
        v30 = &selRef_celebrationMovieURLForAchievementIdentifer_;

      }
      else
      {
        v89 = 0.0;
        v30 = &selRef_celebrationMovieURLForAchievementIdentifer_;
      }

      objc_msgSend((id)v20, "duration");
      v91 = v90;

      if (v89 > 0.0)
      {
        v32 = v91 + *(double *)(v0 + 208);
        v31 = v89 + *(double *)(v0 + 200);
      }
LABEL_36:
      v64 = *(_QWORD *)(v0 + 216) + 1;
      if (v64 == *(_QWORD *)(v0 + 192))
      {
        v33 = *(void **)(v0 + 160);
        swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 184), v65, v66, v67, v68, v69, v70, v71);

        goto LABEL_16;
      }
      continue;
    }
    break;
  }
  if (((1 << v78) & 0x61F00) == 0)
  {
LABEL_58:

    goto LABEL_36;
  }
  v108 = (_QWORD *)swift_task_alloc(dword_100823F04);
  *(_QWORD *)(v0 + 232) = v108;
  *v108 = v0;
  v108[1] = sub_10034FB30;
  v112 = *(_BYTE *)(v0 + 240);
  v113 = *(_QWORD *)(v0 + 160);
  v114 = v20;
  return sub_1001928D0(v113, v114, v112);
}

uint64_t sub_10034EE34(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_BYTE *)(v4 + 40) = a3;
  *(_QWORD *)(v4 + 24) = a1;
  *(_QWORD *)(v4 + 32) = a2;
  *(_QWORD *)(v4 + 16) = v3;
  v5 = *(_QWORD *)(v4 + 176);
  *(_BYTE *)(v4 + 243) = a3;
  swift_task_dealloc(v5);
  return swift_task_switch(sub_10034EE94, 0, 0);
}

uint64_t sub_10034EE94()
{
  uint64_t v0;
  char v1;
  const char *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  unint64_t v13;
  char **v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  int v20;
  id v21;
  unsigned int v22;
  uint64_t v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  int v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  Class isa;
  void *v54;
  objc_class *v55;
  Class v56;
  objc_class *v57;
  objc_class *v58;
  double v59;
  double v60;
  double v61;
  double v62;
  unsigned int v63;
  void *v64;
  void *v65;
  double v66;
  double v67;
  id v68;
  void *v69;
  double v70;
  uint64_t v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  _QWORD *v79;
  CHWorkoutDetailHeartRateTableViewCell *v81;
  uint64_t **v82;
  SEL v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  _QWORD *v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  id v94;

  v1 = *(_BYTE *)(v0 + 243);

  if ((v1 & 1) != 0)
  {
    v12 = *(double *)(v0 + 144);
    v11 = *(double *)(v0 + 152);
  }
  else
  {
    v10 = *(double *)(v0 + 24);
    v9 = *(double *)(v0 + 32);
LABEL_3:
    v11 = v10 + *(double *)(v0 + 152);
    v12 = v9 + *(double *)(v0 + 144);
  }
  v13 = *(_QWORD *)(v0 + 168);
  if (v13 == *(_QWORD *)(v0 + 120))
  {
LABEL_73:
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 112), v2, v3, v4, v5, v6, v7, v8);
    v81 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 80);
    v82 = sub_1002966F0((uint64_t)v81);
    swift_bridgeObjectRelease(v81, v83, v84, v85, v86, v87, v88, v89);
    return (*(uint64_t (**)(uint64_t **, double, double))(v0 + 8))(v82, v11, v12);
  }
  v14 = &selRef_celebrationMovieURLForAchievementIdentifer_;
  while (1)
  {
    *(double *)(v0 + 144) = v12;
    *(double *)(v0 + 152) = v11;
    v17 = *(_QWORD *)(v0 + 112);
    if ((v17 & 0xC000000000000001) != 0)
    {
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v17);
    }
    else
    {
      if (v13 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_75;
      v18 = *(id *)(v17 + 8 * v13 + 32);
    }
    v16 = v18;
    *(_QWORD *)(v0 + 160) = v18;
    *(_QWORD *)(v0 + 168) = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      JUMPOUT(0x10034FA94);
    }
    v19 = *(id *)(v0 + 96);
    if (objc_msgSend(v18, "workoutActivityType") != v19)
      break;
    v20 = *(unsigned __int8 *)(v0 + 242);
    v21 = v16;
    sub_1001428C8((Swift::Int *)&v94, v21);

    if (v20 != 1)
    {
      v63 = *(unsigned __int8 *)(v0 + 240);
      sub_1004437C4(*(_BYTE *)(v0 + 240));
      v65 = v64;
      if (v63 <= 0x24)
      {
        if (((1 << v63) & 0x448882010) != 0)
        {
          v68 = objc_msgSend(v21, "fiui_totalDistance");
          if (v68)
            goto LABEL_62;
        }
        else
        {
          if (((1 << v63) & 0x891104020) != 0)
          {
            objc_msgSend(v21, "fiui_duration");
            v67 = v66;
            goto LABEL_63;
          }
          if (((1 << v63) & 0x1102208040) != 0)
          {
            v68 = objc_msgSend(v21, "fi_elevationGain");
LABEL_62:
            v69 = v68;
            objc_msgSend(v68, "doubleValueForUnit:", v65);
            v67 = v70;

LABEL_63:
            v11 = v11 + v67;
            goto LABEL_9;
          }
        }
      }

      v11 = v11 + 0.0;
      goto LABEL_9;
    }
    v22 = *(unsigned __int8 *)(v0 + 240);
    if (v22 <= 0x25)
    {
      if (((1 << v22) & 0x2224410080) != 0)
      {
        if (qword_10081DD80 != -1)
          swift_once(&qword_10081DD80, sub_100445E3C);
        v23 = qword_10086AA10;
        v24 = objc_msgSend(v21, "fiui_totalDistance");
        if (v24)
        {
          v25 = v24;
          objc_msgSend(v24, "doubleValueForUnit:", v23);
          v9 = v26;

          objc_msgSend(v21, "fiui_duration");
          if (v9 > 0.0)
          {
            v10 = v27;

            goto LABEL_3;
          }
        }
        else
        {
          objc_msgSend(v21, "fiui_duration");
        }
      }
      else if (((1 << v22) & 0x61F00) != 0)
      {
        v90 = (_QWORD *)swift_task_alloc(dword_100823F04);
        *(_QWORD *)(v0 + 176) = v90;
        *v90 = v0;
        v90[1] = sub_10034EE34;
        v91 = *(_BYTE *)(v0 + 240);
        v92 = (uint64_t)v21;
        v93 = 0;
        return sub_1001928D0(v92, v93, v91);
      }
    }

LABEL_9:
    v13 = *(_QWORD *)(v0 + 168);
    if (v13 == *(_QWORD *)(v0 + 120))
      goto LABEL_73;
  }
  v28 = objc_msgSend(v16, "workoutActivities");
  v29 = sub_10001E724(0, (unint64_t *)&qword_10082E6A0, HKWorkoutActivity_ptr);
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);
  *(_QWORD *)(v0 + 184) = v30;

  if (!((unint64_t)v30 >> 62))
  {
    v38 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 192) = v38;
    if (v38)
      goto LABEL_26;
    goto LABEL_70;
  }
  if (v30 < 0)
    v71 = v30;
  else
    v71 = v30 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v30);
  v38 = _CocoaArrayWrapper.endIndex.getter(v71);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v30, v72, v73, v74, v75, v76, v77, v78);
  *(_QWORD *)(v0 + 192) = v38;
  if (!v38)
  {
LABEL_70:
    v15 = (CHWorkoutDetailHeartRateTableViewCell *)v30;
LABEL_8:
    swift_bridgeObjectRelease(v15, v31, v32, v33, v34, v35, v36, v37);

    goto LABEL_9;
  }
LABEL_26:
  if (v38 < 1)
    goto LABEL_76;
  v39 = 0;
  while (1)
  {
    *(_QWORD *)(v0 + 216) = v39;
    *(double *)(v0 + 200) = v12;
    *(double *)(v0 + 208) = v11;
    v40 = *(_QWORD *)(v0 + 184);
    v41 = (v40 & 0xC000000000000001) != 0
        ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v40)
        : *(id *)(v40 + 8 * v39 + 32);
    v42 = v41;
    *(_QWORD *)(v0 + 224) = v41;
    v43 = *(id *)(v0 + 96);
    v44 = objc_msgSend(v41, v14[353]);
    v45 = objc_msgSend(v44, "identifier");

    if (v45 == v43)
      break;

LABEL_29:
    v39 = *(_QWORD *)(v0 + 216) + 1;
    if (v39 == *(_QWORD *)(v0 + 192))
    {
      v15 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 184);
      v16 = *(void **)(v0 + 160);
      goto LABEL_8;
    }
  }
  v46 = *(unsigned __int8 *)(v0 + 242);
  sub_1001428C8((Swift::Int *)&v94, *(id *)(v0 + 160));

  v47 = *(unsigned __int8 *)(v0 + 240);
  if (v46 != 1)
    __asm { BR              X8 }
  v48 = v42;
  v49 = v48;
  if (v47 > 0x25)
    goto LABEL_51;
  if (((1 << v47) & 0x2224410080) != 0)
  {
    v50 = qword_10081DD80;
    v51 = v48;
    if (v50 != -1)
      swift_once(&qword_10081DD80, sub_100445E3C);
    v52 = qword_10086AA10;
    isa = (Class)objc_msgSend(v51, "distanceType");
    if (!isa)
    {
      v54 = *(void **)(v0 + 136);
      sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
      isa = HKQuantityType.init(_:)((HKQuantityTypeIdentifier)v54).super.super.super.isa;
    }
    v55 = (objc_class *)objc_msgSend(v51, "statisticsForType:", isa);
    if (v55)
    {
      v56 = v55;
      v57 = (objc_class *)-[objc_class sumQuantity](v55, "sumQuantity");
      if (v57)
      {
        v58 = v57;
        -[objc_class doubleValueForUnit:](v57, "doubleValueForUnit:", v52);
        v60 = v59;

        v56 = isa;
        isa = v58;
      }
      else
      {
        v60 = 0.0;
      }
      v14 = &selRef_celebrationMovieURLForAchievementIdentifer_;

    }
    else
    {
      v60 = 0.0;
      v14 = &selRef_celebrationMovieURLForAchievementIdentifer_;
    }

    objc_msgSend(v51, "duration");
    v62 = v61;

    if (v60 > 0.0)
    {
      v11 = v62 + *(double *)(v0 + 208);
      v12 = v60 + *(double *)(v0 + 200);
    }
    goto LABEL_29;
  }
  if (((1 << v47) & 0x61F00) == 0)
  {
LABEL_51:

    goto LABEL_29;
  }
  v79 = (_QWORD *)swift_task_alloc(dword_100823F04);
  *(_QWORD *)(v0 + 232) = v79;
  *v79 = v0;
  v79[1] = sub_10034FB30;
  v91 = *(_BYTE *)(v0 + 240);
  v92 = *(_QWORD *)(v0 + 160);
  v93 = (uint64_t)v49;
  return sub_1001928D0(v92, v93, v91);
}

uint64_t sub_10034FB30(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *v3;
  *(_BYTE *)(v4 + 72) = a3;
  *(_QWORD *)(v4 + 56) = a1;
  *(_QWORD *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 48) = v3;
  v6 = *(void **)(v4 + 224);
  v5 = *(_QWORD *)(v4 + 232);
  *(_BYTE *)(v4 + 244) = a3;
  swift_task_dealloc(v5);

  return swift_task_switch(sub_10034FB94, 0, 0);
}

uint64_t sub_10034FB94()
{
  uint64_t v0;
  char v1;
  const char *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  int v28;
  id v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  void *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  unsigned int v49;
  void *v50;
  void *v51;
  double v52;
  double v53;
  id v54;
  void *v55;
  double v56;
  uint64_t v57;
  SEL v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  int v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  Class isa;
  void *v77;
  objc_class *v78;
  Class v79;
  objc_class *v80;
  objc_class *v81;
  double v82;
  double v83;
  CHWorkoutDetailHeartRateTableViewCell *v84;
  uint64_t **v85;
  SEL v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  _QWORD *v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  id v100;

  v99 = v0 + 80;
  v1 = *(_BYTE *)(v0 + 244);

  if ((v1 & 1) == 0)
  {
    v10 = *(double *)(v0 + 56);
    v9 = *(double *)(v0 + 64);
    goto LABEL_3;
  }
  v12 = *(double *)(v0 + 200);
  v11 = *(double *)(v0 + 208);
  while (2)
  {
    while (2)
    {
      v13 = *(_QWORD *)(v0 + 216) + 1;
      if (v13 != *(_QWORD *)(v0 + 192))
        goto LABEL_48;
      v14 = *(void **)(v0 + 160);
      swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 184), v2, v3, v4, v5, v6, v7, v8);

      v22 = *(_QWORD *)(v0 + 168);
      if (v22 == *(_QWORD *)(v0 + 120))
      {
LABEL_66:
        swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 112), v15, v16, v17, v18, v19, v20, v21);
        v84 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 80);
        v85 = sub_1002966F0((uint64_t)v84);
        swift_bridgeObjectRelease(v84, v86, v87, v88, v89, v90, v91, v92);
        return (*(uint64_t (**)(uint64_t **, double, double))(v0 + 8))(v85, v11, v12);
      }
      v23 = 1;
      while (1)
      {
        *(double *)(v0 + 144) = v12;
        *(double *)(v0 + 152) = v11;
        v24 = *(_QWORD *)(v0 + 112);
        if ((v24 & 0xC000000000000001) != 0)
        {
          v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v24);
        }
        else
        {
          if (v22 >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_71;
          }
          v25 = *(id *)(v24 + 8 * v22 + 32);
        }
        v26 = v25;
        *(_QWORD *)(v0 + 160) = v25;
        *(_QWORD *)(v0 + 168) = v22 + 1;
        if (__OFADD__(v22, 1))
        {
          __break(1u);
          goto LABEL_69;
        }
        v27 = *(id *)(v0 + 96);
        if (objc_msgSend(v25, "workoutActivityType") != v27)
          break;
        v28 = *(unsigned __int8 *)(v0 + 242);
        v29 = v26;
        sub_1001428C8((Swift::Int *)&v100, v29);

        if (v28 != 1)
        {
          v49 = *(unsigned __int8 *)(v0 + 240);
          sub_1004437C4(*(_BYTE *)(v0 + 240));
          v51 = v50;
          if (v49 <= 0x24)
          {
            if (((1 << v49) & 0x448882010) != 0)
            {
              v54 = objc_msgSend(v29, "fiui_totalDistance");
              if (v54)
                goto LABEL_39;
            }
            else
            {
              if (((1 << v49) & 0x891104020) != 0)
              {
                objc_msgSend(v29, "fiui_duration");
                v53 = v52;
                goto LABEL_40;
              }
              if (((1 << v49) & 0x1102208040) != 0)
              {
                v54 = objc_msgSend(v29, "fi_elevationGain");
LABEL_39:
                v55 = v54;
                objc_msgSend(v54, "doubleValueForUnit:", v51, v99);
                v53 = v56;

LABEL_40:
                v11 = v11 + v53;
                goto LABEL_13;
              }
            }
          }

          v11 = v11 + 0.0;
          goto LABEL_13;
        }
        v30 = *(unsigned __int8 *)(v0 + 240);
        if (v30 <= 0x25)
        {
          if (((1 << v30) & 0x2224410080) != 0)
          {
            if (qword_10081DD80 != -1)
              swift_once(&qword_10081DD80, sub_100445E3C);
            v31 = qword_10086AA10;
            v32 = objc_msgSend(v29, "fiui_totalDistance", v99);
            if (v32)
            {
              v33 = v32;
              objc_msgSend(v32, "doubleValueForUnit:", v31);
              v35 = v34;

              objc_msgSend(v29, "fiui_duration");
              if (v35 > 0.0)
              {
                v37 = v36;

                v11 = v37 + *(double *)(v0 + 152);
                v12 = v35 + *(double *)(v0 + 144);
                goto LABEL_13;
              }
            }
            else
            {
              objc_msgSend(v29, "fiui_duration");
            }
          }
          else if (((1 << v30) & 0x61F00) != 0)
          {
            v94 = (_QWORD *)swift_task_alloc(dword_100823F04);
            *(_QWORD *)(v0 + 176) = v94;
            *v94 = v0;
            v94[1] = sub_10034EE34;
            v95 = *(_BYTE *)(v0 + 240);
            v96 = (uint64_t)v29;
            v97 = 0;
            return sub_1001928D0(v96, v97, v95);
          }
        }

LABEL_13:
        v22 = *(_QWORD *)(v0 + 168);
        if (v22 == *(_QWORD *)(v0 + 120))
          goto LABEL_66;
      }
      v38 = objc_msgSend(v26, "workoutActivities");
      v39 = sub_10001E724(0, (unint64_t *)&qword_10082E6A0, HKWorkoutActivity_ptr);
      v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, v39);
      *(_QWORD *)(v0 + 184) = v40;

      if (!((unint64_t)v40 >> 62))
      {
        v48 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
        *(_QWORD *)(v0 + 192) = v48;
        if (v48)
          goto LABEL_47;
        goto LABEL_30;
      }
      if (v40 < 0)
        v57 = v40;
      else
        v57 = v40 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v40);
      v48 = _CocoaArrayWrapper.endIndex.getter(v57);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v40, v58, v59, v60, v61, v62, v63, v64);
      *(_QWORD *)(v0 + 192) = v48;
      if (!v48)
      {
LABEL_30:
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v40, v41, v42, v43, v44, v45, v46, v47);

        goto LABEL_13;
      }
LABEL_47:
      v13 = 0;
      if (v48 < 1)
      {
LABEL_71:
        __break(1u);
        JUMPOUT(0x10035076CLL);
      }
LABEL_48:
      *(_QWORD *)(v0 + 216) = v13;
      *(double *)(v0 + 200) = v12;
      *(double *)(v0 + 208) = v11;
      v65 = *(_QWORD *)(v0 + 184);
      if ((v65 & 0xC000000000000001) != 0)
        v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v65);
      else
        v66 = *(id *)(v65 + 8 * v13 + 32);
      v23 = (uint64_t)v66;
      *(_QWORD *)(v0 + 224) = v66;
      v67 = *(id *)(v0 + 96);
      v68 = objc_msgSend(v66, "fiui_activityType", v99);
      v69 = objc_msgSend(v68, "identifier");

      if (v69 != v67)
        goto LABEL_7;
      v70 = *(unsigned __int8 *)(v0 + 242);
      sub_1001428C8((Swift::Int *)&v100, *(id *)(v0 + 160));

      v71 = *(unsigned __int8 *)(v0 + 240);
      if (v70 != 1)
        __asm { BR              X9 }
      v72 = (id)v23;
      v23 = (uint64_t)v72;
      if (v71 > 0x25)
        goto LABEL_6;
      if (((1 << v71) & 0x2224410080) != 0)
      {
        v73 = qword_10081DD80;
        v74 = v72;
        if (v73 != -1)
          swift_once(&qword_10081DD80, sub_100445E3C);
        v75 = qword_10086AA10;
        isa = (Class)objc_msgSend(v74, "distanceType");
        if (!isa)
        {
          v77 = *(void **)(v0 + 136);
          sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
          isa = HKQuantityType.init(_:)((HKQuantityTypeIdentifier)v77).super.super.super.isa;
        }
        v78 = (objc_class *)objc_msgSend(v74, "statisticsForType:", isa);
        v9 = 0.0;
        if (v78)
        {
          v79 = v78;
          v80 = (objc_class *)-[objc_class sumQuantity](v78, "sumQuantity");
          if (v80)
          {
            v81 = v80;
            -[objc_class doubleValueForUnit:](v80, "doubleValueForUnit:", v75);
            v9 = v82;

            v79 = isa;
            isa = v81;
          }

        }
        objc_msgSend(v74, "duration");
        v10 = v83;

        if (v9 > 0.0)
        {
LABEL_3:
          v11 = v10 + *(double *)(v0 + 208);
          v12 = v9 + *(double *)(v0 + 200);
        }
        continue;
      }
      break;
    }
    if (((1 << v71) & 0x61F00) == 0)
    {
LABEL_6:

LABEL_7:
      continue;
    }
    break;
  }
LABEL_69:
  v98 = (_QWORD *)swift_task_alloc(dword_100823F04);
  *(_QWORD *)(v0 + 232) = v98;
  *v98 = v0;
  v98[1] = sub_10034FB30;
  v95 = *(_BYTE *)(v0 + 240);
  v96 = *(_QWORD *)(v0 + 160);
  v97 = v23;
  return sub_1001928D0(v96, v97, v95);
}

id sub_100350834()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MetricsDataProvider(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100350978()
{
  return type metadata accessor for MetricsDataProvider(0);
}

uint64_t type metadata accessor for MetricsDataProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_10082F2D8;
  if (!qword_10082F2D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetricsDataProvider);
  return result;
}

uint64_t sub_1003509BC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[15];

  result = type metadata accessor for MetricFormattingHelper(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[13] = &unk_100636758;
    v4[14] = (char *)&value witness table for Builtin.NativeObject + 64;
    return swift_updateClassMetadata2(a1, 256, 15, v4, a1 + 80);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MetricsDataProvider.MetricDataCacheEntry(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xDA && a1[17])
    return (*(_DWORD *)a1 + 218);
  v3 = *a1;
  v4 = v3 >= 0x27;
  v5 = v3 - 39;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsDataProvider.MetricDataCacheEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xD9)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 218;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xDA)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xDA)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 38;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsDataProvider.MetricDataCacheEntry()
{
  return &type metadata for MetricsDataProvider.MetricDataCacheEntry;
}

unint64_t sub_100350B08()
{
  unint64_t result;

  result = qword_10082F310;
  if (!qword_10082F310)
  {
    result = swift_getWitnessTable(&unk_100636788, &type metadata for MetricsDataProvider.MetricDataCacheEntry);
    atomic_store(result, (unint64_t *)&qword_10082F310);
  }
  return result;
}

uint64_t sub_100350B50(uint64_t (*a1)(void))
{
  uint64_t v1;

  v1 = a1();
  return _typeName(_:qualified:)(v1, 0);
}

uint64_t sub_100350B74(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100149F48(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_100350BEC(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_100350BEC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  Swift::Int v6;
  Swift::Int v7;
  const char *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  Swift::Int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  Swift::Int v23;
  char *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  id *v34;
  Swift::Int v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  Swift::Int v45;
  Swift::Int v46;
  uint64_t *v47;
  uint64_t v48;
  Swift::Int v49;
  uint64_t v50;
  Swift::Int v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  void *v62;
  char *v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  char v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  CHWorkoutDetailHeartRateTableViewCell *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  SEL v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  uint64_t v132;
  char *v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  Swift::Int v137;
  Swift::Int v138;
  Swift::Int v139;
  Swift::Int v140;
  Swift::Int v141;
  id *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;

  v146 = type metadata accessor for Date(0);
  v144 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v145 = (char *)&v132 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v132 - v4;
  v6 = a1[1];
  v7 = _minimumMergeRunLength(_:)(v6);
  if (v7 >= v6)
  {
    if (v6 < 0)
      goto LABEL_135;
    if (v6)
      sub_1003514D8(0, v6, 1, a1);
    return;
  }
  if (v6 >= 0)
    v14 = v6;
  else
    v14 = v6 + 1;
  if (v6 < -1)
    goto LABEL_143;
  v137 = v7;
  v134 = a1;
  if (v6 < 2)
  {
    v18 = (char *)_swiftEmptyArrayStorage;
    v148 = (unint64_t)_swiftEmptyArrayStorage;
    v142 = (id *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      v22 = _swiftEmptyArrayStorage[2];
LABEL_101:
      v117 = v143;
      if (v22 >= 2)
      {
        v118 = *v134;
        do
        {
          v119 = v22 - 2;
          if (v22 < 2)
            goto LABEL_130;
          if (!v118)
            goto LABEL_142;
          v108 = v18;
          v120 = *(_QWORD *)&v18[16 * v119 + 32];
          v121 = *(_QWORD *)&v18[16 * v22 + 24];
          sub_1003516A0((void **)(v118 + 8 * v120), (id *)(v118 + 8 * *(_QWORD *)&v18[16 * v22 + 16]), (id *)(v118 + 8 * v121), v142);
          if (v117)
            goto LABEL_98;
          if (v121 < v120)
            goto LABEL_131;
          if ((swift_isUniquelyReferenced_nonNull_native(v108) & 1) == 0)
            v108 = sub_100147754((uint64_t)v108);
          if (v119 >= *((_QWORD *)v108 + 2))
            goto LABEL_132;
          v122 = &v108[16 * v119 + 32];
          *(_QWORD *)v122 = v120;
          *((_QWORD *)v122 + 1) = v121;
          v123 = *((_QWORD *)v108 + 2);
          if (v22 > v123)
            goto LABEL_133;
          memmove(&v108[16 * v22 + 16], &v108[16 * v22 + 32], 16 * (v123 - v22));
          v18 = v108;
          *((_QWORD *)v108 + 2) = v123 - 1;
          v22 = v123 - 1;
        }
        while (v123 > 2);
      }
      v116 = (CHWorkoutDetailHeartRateTableViewCell *)v18;
LABEL_113:
      swift_bridgeObjectRelease(v116, v8, v9, v18, v10, v11, v12, v13);
      *(_QWORD *)((v148 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v124);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v148, v125, v126, v127, v128, v129, v130, v131);
      return;
    }
  }
  else
  {
    v15 = v14 >> 1;
    v16 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
    v17 = static Array._allocateBufferUninitialized(minimumCapacity:)(v15, v16);
    *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) = v15;
    v142 = (id *)((v17 & 0xFFFFFFFFFFFFFF8) + 32);
    v148 = v17;
  }
  v19 = 0;
  v20 = *a1;
  v21 = *a1 + 16;
  v135 = *a1 - 8;
  v136 = v21;
  v18 = (char *)_swiftEmptyArrayStorage;
  v140 = v6;
  v147 = v20;
  while (1)
  {
    v23 = v19 + 1;
    v139 = v19;
    if (v19 + 1 < v6)
    {
      v24 = v18;
      v25 = *(void **)(v20 + 8 * v19);
      v26 = *(id *)(v20 + 8 * v23);
      v27 = v25;
      v28 = objc_msgSend(v26, "endDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v28);

      v29 = objc_msgSend(v27, "endDate");
      v30 = v145;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v29);

      LODWORD(v141) = static Date.> infix(_:_:)(v5, v30);
      v31 = *(void (**)(char *, uint64_t))(v144 + 8);
      v32 = v30;
      v33 = v146;
      v31(v32, v146);
      v31(v5, v33);

      v6 = v140;
      v23 = v19 + 2;
      if (v19 + 2 < v6)
      {
        v34 = (id *)(v136 + 8 * v19);
        while (1)
        {
          v35 = v23;
          v36 = *(v34 - 1);
          v37 = *v34;
          v38 = v36;
          v39 = objc_msgSend(v37, "endDate");
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v39);

          v40 = objc_msgSend(v38, "endDate");
          v41 = v145;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v40);

          LODWORD(v40) = static Date.> infix(_:_:)(v5, v41);
          v42 = v41;
          v43 = v146;
          v31(v42, v146);
          v31(v5, v43);

          if (((v141 ^ v40) & 1) != 0)
            break;
          v23 = v35 + 1;
          ++v34;
          v6 = v140;
          if (v140 == v35 + 1)
          {
            v23 = v140;
            goto LABEL_22;
          }
        }
        v6 = v140;
        v23 = v35;
LABEL_22:
        v19 = v139;
      }
      v18 = v24;
      v20 = v147;
      if ((v141 & 1) != 0)
      {
        if (v23 < v19)
          goto LABEL_136;
        if (v19 < v23)
        {
          v44 = (uint64_t *)(v135 + 8 * v23);
          v45 = v23;
          v46 = v19;
          v47 = (uint64_t *)(v147 + 8 * v19);
          do
          {
            if (v46 != --v45)
            {
              if (!v20)
                goto LABEL_141;
              v48 = *v47;
              *v47 = *v44;
              *v44 = v48;
            }
            ++v46;
            --v44;
            ++v47;
          }
          while (v46 < v45);
        }
      }
    }
    if (v23 < v6)
    {
      if (__OFSUB__(v23, v19))
        goto LABEL_134;
      if (v23 - v19 < v137)
        break;
    }
LABEL_50:
    if (v23 < v19)
      goto LABEL_129;
    v63 = v18;
    if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) != 0)
      v18 = v63;
    else
      v18 = sub_100147150(0, *((_QWORD *)v63 + 2) + 1, 1, v63);
    v65 = *((_QWORD *)v18 + 2);
    v64 = *((_QWORD *)v18 + 3);
    v22 = v65 + 1;
    v20 = v147;
    if (v65 >= v64 >> 1)
    {
      v115 = sub_100147150((char *)(v64 > 1), v65 + 1, 1, v18);
      v20 = v147;
      v18 = v115;
    }
    *((_QWORD *)v18 + 2) = v22;
    v66 = v18 + 32;
    v67 = &v18[16 * v65 + 32];
    *(_QWORD *)v67 = v19;
    *((_QWORD *)v67 + 1) = v23;
    v141 = v23;
    if (v65)
    {
      while (1)
      {
        v68 = v22 - 1;
        if (v22 >= 4)
        {
          v73 = &v66[16 * v22];
          v74 = *((_QWORD *)v73 - 8);
          v75 = *((_QWORD *)v73 - 7);
          v79 = __OFSUB__(v75, v74);
          v76 = v75 - v74;
          if (v79)
            goto LABEL_118;
          v78 = *((_QWORD *)v73 - 6);
          v77 = *((_QWORD *)v73 - 5);
          v79 = __OFSUB__(v77, v78);
          v71 = v77 - v78;
          v72 = v79;
          if (v79)
            goto LABEL_119;
          v80 = v22 - 2;
          v81 = &v66[16 * v22 - 32];
          v83 = *(_QWORD *)v81;
          v82 = *((_QWORD *)v81 + 1);
          v79 = __OFSUB__(v82, v83);
          v84 = v82 - v83;
          if (v79)
            goto LABEL_121;
          v79 = __OFADD__(v71, v84);
          v85 = v71 + v84;
          if (v79)
            goto LABEL_124;
          if (v85 >= v76)
          {
            v103 = &v66[16 * v68];
            v105 = *(_QWORD *)v103;
            v104 = *((_QWORD *)v103 + 1);
            v79 = __OFSUB__(v104, v105);
            v106 = v104 - v105;
            if (v79)
              goto LABEL_128;
            v96 = v71 < v106;
            goto LABEL_87;
          }
        }
        else
        {
          if (v22 != 3)
          {
            v97 = *((_QWORD *)v18 + 4);
            v98 = *((_QWORD *)v18 + 5);
            v79 = __OFSUB__(v98, v97);
            v90 = v98 - v97;
            v91 = v79;
            goto LABEL_81;
          }
          v70 = *((_QWORD *)v18 + 4);
          v69 = *((_QWORD *)v18 + 5);
          v79 = __OFSUB__(v69, v70);
          v71 = v69 - v70;
          v72 = v79;
        }
        if ((v72 & 1) != 0)
          goto LABEL_120;
        v80 = v22 - 2;
        v86 = &v66[16 * v22 - 32];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v89 = __OFSUB__(v87, v88);
        v90 = v87 - v88;
        v91 = v89;
        if (v89)
          goto LABEL_123;
        v92 = &v66[16 * v68];
        v94 = *(_QWORD *)v92;
        v93 = *((_QWORD *)v92 + 1);
        v79 = __OFSUB__(v93, v94);
        v95 = v93 - v94;
        if (v79)
          goto LABEL_126;
        if (__OFADD__(v90, v95))
          goto LABEL_127;
        if (v90 + v95 >= v71)
        {
          v96 = v71 < v95;
LABEL_87:
          if (v96)
            v68 = v80;
          goto LABEL_89;
        }
LABEL_81:
        if ((v91 & 1) != 0)
          goto LABEL_122;
        v99 = &v66[16 * v68];
        v101 = *(_QWORD *)v99;
        v100 = *((_QWORD *)v99 + 1);
        v79 = __OFSUB__(v100, v101);
        v102 = v100 - v101;
        if (v79)
          goto LABEL_125;
        if (v102 < v90)
          goto LABEL_14;
LABEL_89:
        v107 = v68 - 1;
        if (v68 - 1 >= v22)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v20)
          goto LABEL_140;
        v108 = v18;
        v109 = &v66[16 * v107];
        v110 = *(_QWORD *)v109;
        v111 = &v66[16 * v68];
        v112 = *((_QWORD *)v111 + 1);
        v113 = v143;
        sub_1003516A0((void **)(v20 + 8 * *(_QWORD *)v109), (id *)(v20 + 8 * *(_QWORD *)v111), (id *)(v20 + 8 * v112), v142);
        v143 = v113;
        if (v113)
        {
LABEL_98:
          v116 = (CHWorkoutDetailHeartRateTableViewCell *)v108;
          goto LABEL_113;
        }
        if (v112 < v110)
          goto LABEL_115;
        if (v68 > *((_QWORD *)v108 + 2))
          goto LABEL_116;
        *(_QWORD *)v109 = v110;
        *(_QWORD *)&v66[16 * v107 + 8] = v112;
        v114 = *((_QWORD *)v108 + 2);
        if (v68 >= v114)
          goto LABEL_117;
        v22 = v114 - 1;
        memmove(&v66[16 * v68], v111 + 16, 16 * (v114 - 1 - v68));
        v18 = v108;
        *((_QWORD *)v108 + 2) = v114 - 1;
        v20 = v147;
        if (v114 <= 2)
          goto LABEL_14;
      }
    }
    v22 = 1;
LABEL_14:
    v6 = v140;
    v19 = v141;
    if (v141 >= v140)
      goto LABEL_101;
  }
  if (__OFADD__(v19, v137))
    goto LABEL_137;
  if (v19 + v137 >= v6)
    v49 = v6;
  else
    v49 = v19 + v137;
  if (v49 >= v19)
  {
    if (v23 != v49)
    {
      v133 = v18;
      v50 = v135 + 8 * v23;
      v138 = v49;
      do
      {
        v51 = v23;
        v52 = *(void **)(v20 + 8 * v23);
        v141 = v50;
        while (1)
        {
          v53 = *(void **)v50;
          v54 = v52;
          v55 = v53;
          v56 = objc_msgSend(v54, "endDate");
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v56);

          v57 = objc_msgSend(v55, "endDate");
          v58 = v145;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v57);

          LOBYTE(v57) = static Date.> infix(_:_:)(v5, v58);
          v59 = *(void (**)(char *, uint64_t))(v144 + 8);
          v60 = v58;
          v61 = v146;
          v59(v60, v146);
          v59(v5, v61);

          if ((v57 & 1) == 0)
            break;
          v20 = v147;
          if (!v147)
            goto LABEL_139;
          v62 = *(void **)v50;
          v52 = *(void **)(v50 + 8);
          *(_QWORD *)v50 = v52;
          *(_QWORD *)(v50 + 8) = v62;
          v50 -= 8;
          if (v51 == ++v19)
            goto LABEL_43;
        }
        v20 = v147;
LABEL_43:
        v23 = v51 + 1;
        v50 = v141 + 8;
        v19 = v139;
      }
      while (v51 + 1 != v138);
      v23 = v138;
      v18 = v133;
    }
    goto LABEL_50;
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1003514D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v28 = a1;
  v7 = type metadata accessor for Date(0);
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v8 = __chkstk_darwin(v7);
  v30 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - v10;
  v27 = a2;
  if (a3 != a2)
  {
    v33 = *a4;
    v12 = v33 + 8 * a3 - 8;
LABEL_5:
    v13 = *(void **)(v33 + 8 * a3);
    v14 = v28;
    v29 = v12;
    while (1)
    {
      v15 = *(void **)v12;
      v16 = v13;
      v17 = v15;
      v18 = objc_msgSend(v16, "endDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v19 = objc_msgSend(v17, "endDate");
      v20 = v30;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v19) = static Date.> infix(_:_:)(v11, v20);
      v21 = a3;
      v22 = *(void (**)(char *, uint64_t))(v31 + 8);
      v23 = v20;
      v24 = v32;
      v22(v23, v32);
      v22(v11, v24);
      a3 = v21;

      if ((v19 & 1) == 0)
      {
LABEL_4:
        a3 = v21 + 1;
        v12 = v29 + 8;
        if (v21 + 1 == v27)
          return;
        goto LABEL_5;
      }
      if (!v33)
        break;
      v25 = *(void **)v12;
      v13 = *(void **)(v12 + 8);
      *(_QWORD *)v12 = v13;
      *(_QWORD *)(v12 + 8) = v25;
      v12 -= 8;
      if (v21 == ++v14)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1003516A0(void **a1, id *a2, id *a3, id *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  id *v28;
  id *v29;
  unint64_t v30;
  id *v31;
  id *v32;
  unint64_t v33;
  id *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  char *v39;
  id v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  id *v45;
  uint64_t result;
  uint64_t v47;
  void **v48;
  id *v49;
  unint64_t v50;
  void **v51;
  id *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void **v58;
  id *v59;

  v8 = type metadata accessor for Date(0);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  v9 = __chkstk_darwin(v8);
  v54 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v52 = a3;
  v53 = (char *)&v47 - v11;
  v12 = (char *)a2 - (char *)a1;
  v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0)
    v13 = (char *)a2 - (char *)a1;
  v14 = v13 >> 3;
  v15 = (char *)a3 - (char *)a2;
  v16 = v15 / 8;
  v59 = a1;
  v49 = a4;
  v58 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7)
      goto LABEL_43;
    v29 = v49;
    if (v49 != a2 || &a2[v16] <= v49)
      memmove(v49, a2, 8 * v16);
    v30 = (unint64_t)&v29[v16];
    v57 = (_QWORD *)v30;
    v59 = a2;
    if (v15 < 8 || a1 >= a2)
      goto LABEL_42;
    v31 = v52 - 1;
    v32 = a2;
    v48 = a1;
    while (1)
    {
      v52 = a2;
      v50 = v30;
      v51 = v31 + 1;
      v34 = (id *)(v30 - 8);
      v35 = *--v32;
      v36 = *(id *)(v30 - 8);
      v37 = v35;
      v38 = objc_msgSend(v36, "endDate");
      v39 = v53;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v40 = objc_msgSend(v37, "endDate");
      v41 = v54;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v40) = static Date.> infix(_:_:)(v39, v41);
      v42 = *(void (**)(char *, uint64_t))(v55 + 8);
      v43 = v41;
      v44 = v56;
      v42(v43, v56);
      v42(v39, v44);

      if ((v40 & 1) != 0)
        break;
      v57 = v34;
      v32 = v52;
      if ((unint64_t)v51 < v50 || (unint64_t)v31 >= v50)
      {
        *v31 = *v34;
        v30 = (unint64_t)v34;
        goto LABEL_30;
      }
      v33 = (unint64_t)v48;
      v45 = v49;
      if (v51 != (void **)v50)
        *v31 = *v34;
      v30 = (unint64_t)v34;
      if (v34 <= v45)
        goto LABEL_42;
LABEL_31:
      --v31;
      a2 = v32;
      if ((unint64_t)v32 <= v33)
        goto LABEL_42;
    }
    v30 = v50;
    if (v51 != v52 || v31 >= v52)
      *v31 = *v32;
    v59 = v32;
LABEL_30:
    v33 = (unint64_t)v48;
    if (v30 <= (unint64_t)v49)
      goto LABEL_42;
    goto LABEL_31;
  }
  if (v12 >= -7)
  {
    v17 = v49;
    if (v49 != a1 || &a1[v14] <= v49)
      memmove(v49, a1, 8 * v14);
    v51 = &v17[v14];
    v57 = v51;
    if (v12 >= 8 && a2 < v52)
    {
      v18 = v53;
      do
      {
        v19 = *v17;
        v20 = *a2;
        v21 = v19;
        v22 = objc_msgSend(v20, "endDate");
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v23 = objc_msgSend(v21, "endDate");
        v24 = v54;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v23) = static Date.> infix(_:_:)(v18, v24);
        v25 = *(void (**)(char *, uint64_t))(v55 + 8);
        v26 = v24;
        v27 = v56;
        v25(v26, v56);
        v25(v18, v27);

        if ((v23 & 1) != 0)
        {
          v28 = a2 + 1;
          if (a1 < a2 || a1 >= v28 || a1 != a2)
            *a1 = *a2;
        }
        else
        {
          if (a1 != v17)
            *a1 = *v17;
          v58 = ++v17;
          v28 = a2;
        }
        v59 = ++a1;
        if (v17 >= v51)
          break;
        a2 = v28;
      }
      while (v28 < v52);
    }
LABEL_42:
    sub_100147308(&v59, &v58, &v57);
    return 1;
  }
LABEL_43:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_100351B08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_24;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          goto LABEL_24;
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            goto LABEL_24;
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    sub_1000EDF68(*(_BYTE *)(*(_QWORD *)(a1 + 48) + v10));
  }
  v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_24:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

void *sub_100351C68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  Swift::UInt v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t isStackAllocationSafe;
  uint64_t v26;
  char *v27;
  Swift::Int v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[9];
  uint64_t v35[5];

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v6 = a1 + 56;
    v5 = *(_QWORD *)(a1 + 56);
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v33 = ~v7;
    if (-v7 < 64)
      v8 = ~(-1 << -(char)v7);
    else
      v8 = -1;
    v9 = v8 & v5;
    v10 = (unint64_t)(63 - v7) >> 6;
    v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v13 = v12 | (v4 << 6);
        }
        else
        {
          v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_37;
          }
          if (v14 >= v10)
            goto LABEL_35;
          v15 = *(_QWORD *)(v6 + 8 * v14);
          v16 = v4 + 1;
          if (!v15)
          {
            v16 = v4 + 2;
            if (v4 + 2 >= v10)
              goto LABEL_35;
            v15 = *(_QWORD *)(v6 + 8 * v16);
            if (!v15)
            {
              v16 = v4 + 3;
              if (v4 + 3 >= v10)
                goto LABEL_35;
              v15 = *(_QWORD *)(v6 + 8 * v16);
              if (!v15)
              {
                v16 = v4 + 4;
                if (v4 + 4 >= v10)
                  goto LABEL_35;
                v15 = *(_QWORD *)(v6 + 8 * v16);
                if (!v15)
                {
                  v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_35:
                    swift_bridgeObjectRetain(a1);
                    sub_100133140(v31);
                    return (void *)v2;
                  }
                  v15 = *(_QWORD *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      v16 = v17 + 1;
                      if (__OFADD__(v17, 1))
                        break;
                      if (v16 >= v10)
                        goto LABEL_35;
                      v15 = *(_QWORD *)(v6 + 8 * v16);
                      ++v17;
                      if (v15)
                        goto LABEL_23;
                    }
LABEL_37:
                    __break(1u);
                  }
                  v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          v9 = (v15 - 1) & v15;
          v13 = __clz(__rbit64(v15)) + (v16 << 6);
          v4 = v16;
        }
        v18 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v13);
        Hasher.init(_seed:)(v34, *(_QWORD *)(v2 + 40));
        Hasher._combine(_:)(v18);
        v19 = Hasher._finalize()();
        v20 = -1 << *(_BYTE *)(v2 + 32);
        v21 = v19 & ~v20;
      }
      while (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      v22 = *(_QWORD *)(v2 + 48);
      if (*(unsigned __int8 *)(v22 + v21) == (_DWORD)v18)
        break;
      while (1)
      {
        v21 = (v21 + 1) & ~v20;
        if (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v22 + v21) == (_DWORD)v18)
          goto LABEL_28;
      }
    }
LABEL_28:
    v35[0] = a1;
    v35[1] = v6;
    v35[2] = v33;
    v35[3] = v4;
    v35[4] = v9;
    v23 = (unint64_t)(63 - v20) >> 6;
    v24 = 8 * v23;
    swift_bridgeObjectRetain(a1);
    if (v23 < 0x81
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v24, 8), (_DWORD)isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      v27 = (char *)&v32 - v26;
      memcpy((char *)&v32 - v26, (const void *)(v2 + 56), v24);
      v28 = sub_100352010((Swift::Int)v27, v23, v2, v21, v35);
      swift_release(v2);
      sub_100133140(v35[0]);
    }
    else
    {
      v29 = (void *)swift_slowAlloc(v24, -1);
      memcpy(v29, (const void *)(v2 + 56), v24);
      v28 = sub_100352010((Swift::Int)v29, v23, v2, v21, v35);
      swift_release(v2);
      sub_100133140(v35[0]);
      swift_slowDealloc(v29, -1, -1);
    }
    return (void *)v28;
  }
  else
  {
    swift_release(a2);
    return &_swiftEmptySetSingleton;
  }
}

Swift::Int sub_100352010(Swift::Int result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  Swift::UInt v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  int64_t v31;
  uint64_t v34[9];

  v7 = (unint64_t *)result;
  v8 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v9 = v8 - 1;
  v10 = a3 + 56;
  while (1)
  {
    v15 = a5[3];
    v16 = a5[4];
    if (!v16)
      break;
    v17 = (v16 - 1) & v16;
    v18 = __clz(__rbit64(v16)) | (v15 << 6);
LABEL_16:
    v25 = *(unsigned __int8 *)(*(_QWORD *)(*a5 + 48) + v18);
    a5[3] = v15;
    a5[4] = v17;
    Hasher.init(_seed:)(v34, *(_QWORD *)(a3 + 40));
    Hasher._combine(_:)(v25);
    result = Hasher._finalize()();
    v26 = -1 << *(_BYTE *)(a3 + 32);
    v27 = result & ~v26;
    v11 = v27 >> 6;
    v12 = 1 << v27;
    if (((1 << v27) & *(_QWORD *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      v28 = *(_QWORD *)(a3 + 48);
      if (*(unsigned __int8 *)(v28 + v27) == (_DWORD)v25)
      {
LABEL_3:
        v13 = v11;
        v14 = v7[v11];
        v7[v13] = v14 & ~v12;
        if ((v12 & v14) != 0)
        {
          if (__OFSUB__(v9--, 1))
            goto LABEL_36;
          if (!v9)
            return (Swift::Int)&_swiftEmptySetSingleton;
        }
      }
      else
      {
        for (i = v27 + 1; ; i = v30 + 1)
        {
          v30 = i & ~v26;
          if (((*(_QWORD *)(v10 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
            break;
          if (*(unsigned __int8 *)(v28 + v30) == (_DWORD)v25)
          {
            v11 = v30 >> 6;
            v12 = 1 << v30;
            goto LABEL_3;
          }
        }
      }
    }
  }
  v19 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    v20 = (unint64_t)(a5[2] + 64) >> 6;
    v21 = a5[3];
    if (v19 >= v20)
      goto LABEL_33;
    v22 = a5[1];
    v23 = *(_QWORD *)(v22 + 8 * v19);
    if (v23)
      goto LABEL_15;
    v24 = v15 + 2;
    v21 = v15 + 1;
    if (v15 + 2 >= v20)
      goto LABEL_33;
    v23 = *(_QWORD *)(v22 + 8 * v24);
    if (!v23)
    {
      v21 = v15 + 2;
      if (v15 + 3 >= v20)
        goto LABEL_33;
      v23 = *(_QWORD *)(v22 + 8 * (v15 + 3));
      if (v23)
      {
        v19 = v15 + 3;
        goto LABEL_15;
      }
      v24 = v15 + 4;
      v21 = v15 + 3;
      if (v15 + 4 >= v20)
        goto LABEL_33;
      v23 = *(_QWORD *)(v22 + 8 * v24);
      if (!v23)
      {
        v19 = v15 + 5;
        v21 = v15 + 4;
        if (v15 + 5 >= v20)
          goto LABEL_33;
        v23 = *(_QWORD *)(v22 + 8 * v19);
        if (!v23)
        {
          v21 = v20 - 1;
          v31 = v15 + 6;
          while (v20 != v31)
          {
            v23 = *(_QWORD *)(v22 + 8 * v31++);
            if (v23)
            {
              v19 = v31 - 1;
              goto LABEL_15;
            }
          }
LABEL_33:
          a5[3] = v21;
          a5[4] = 0;
          swift_retain(a3);
          return sub_10043518C(v7, a2, v9, a3);
        }
        goto LABEL_15;
      }
    }
    v19 = v24;
LABEL_15:
    v17 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v19 << 6);
    v15 = v19;
    goto LABEL_16;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

_QWORD *sub_100352284(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  _QWORD *v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;

  v2 = (_QWORD *)isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_1003523D4((unint64_t *)((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    if (v1)
      swift_willThrow(v8);
    else
      return (_QWORD *)v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc(v7, -1);
    bzero(v9, v7);
    v2 = (_QWORD *)sub_1003523D4((unint64_t *)v9, v6, v2);
    swift_slowDealloc(v9, -1, -1);
  }
  return v2;
}

uint64_t sub_1003523D4(unint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  char *v48;
  int v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  int64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;

  v45 = a2;
  v46 = a1;
  v4 = sub_100047110((uint64_t *)&unk_100827440);
  v5 = __chkstk_darwin(v4);
  v53 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v44 - v7;
  v9 = type metadata accessor for DateInterval(0);
  v59 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v48 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v51 = (char *)&v44 - v12;
  v13 = type metadata accessor for MetricDetailViewModel(0);
  v57 = *(_QWORD *)(v13 - 8);
  result = __chkstk_darwin(v13);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = 0;
  v18 = 0;
  v58 = a3;
  v21 = a3[8];
  v20 = a3 + 8;
  v19 = v21;
  v22 = 1 << *((_BYTE *)v20 - 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v19;
  v54 = v20;
  v55 = (unint64_t)(v22 + 63) >> 6;
  v52 = v8;
  v50 = result;
LABEL_4:
  v47 = v17;
  while (v24)
  {
    v26 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    v27 = v26 | (v18 << 6);
    v28 = v59;
LABEL_20:
    v32 = v58[7];
    v33 = *(_QWORD *)(v57 + 72);
    v56 = v27;
    sub_100353DCC(v32 + v33 * v27, (uint64_t)v16);
    sub_100021CC0((uint64_t)&v16[*(int *)(v13 + 36)], (uint64_t)v8, (uint64_t *)&unk_100827440);
    v34 = (uint64_t)v16;
    v35 = v28;
    v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
    v37 = v36(v8, 1, v9);
    v25 = (uint64_t)v8;
    if (v37 == 1)
    {
LABEL_6:
      sub_10001BE90(v25, (uint64_t *)&unk_100827440);
      result = sub_100011F54(v34, type metadata accessor for MetricDetailViewModel);
      v16 = (char *)v34;
    }
    else
    {
      v38 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v39 = v51;
      v38(v51, v8, v9);
      v40 = v53;
      sub_10041E110(*(char **)(v34 + 32), *(unsigned __int8 *)(v34 + 40), v53);
      if (v36((char *)v40, 1, v9) == 1)
      {
        (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v9);
        v25 = v40;
        v8 = v52;
        v13 = v50;
        goto LABEL_6;
      }
      v41 = v48;
      v38(v48, (char *)v40, v9);
      v49 = static DateInterval.== infix(_:_:)(v39, v41);
      v42 = *(void (**)(char *, uint64_t))(v35 + 8);
      v42(v41, v9);
      v42(v39, v9);
      result = sub_100011F54(v34, type metadata accessor for MetricDetailViewModel);
      v8 = v52;
      v13 = v50;
      v16 = (char *)v34;
      if ((v49 & 1) != 0)
      {
        v43 = v47;
        *(unint64_t *)((char *)v46 + ((v56 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v56;
        v29 = __OFADD__(v43, 1);
        v17 = v43 + 1;
        if (!v29)
          goto LABEL_4;
        __break(1u);
        return sub_1003527D8(v46, v45, v47, v58);
      }
    }
  }
  v29 = __OFADD__(v18++, 1);
  v28 = v59;
  if (v29)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v18 >= v55)
    return sub_1003527D8(v46, v45, v47, v58);
  v30 = v54[v18];
  if (v30)
  {
LABEL_19:
    v24 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v18 << 6);
    goto LABEL_20;
  }
  v31 = v18 + 1;
  if (v18 + 1 >= v55)
    return sub_1003527D8(v46, v45, v47, v58);
  v30 = v54[v31];
  if (v30)
    goto LABEL_18;
  v31 = v18 + 2;
  if (v18 + 2 >= v55)
    return sub_1003527D8(v46, v45, v47, v58);
  v30 = v54[v31];
  if (v30)
    goto LABEL_18;
  v31 = v18 + 3;
  if (v18 + 3 >= v55)
    return sub_1003527D8(v46, v45, v47, v58);
  v30 = v54[v31];
  if (v30)
  {
LABEL_18:
    v18 = v31;
    goto LABEL_19;
  }
  while (1)
  {
    v18 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v18 >= v55)
      return sub_1003527D8(v46, v45, v47, v58);
    v30 = v54[v18];
    ++v31;
    if (v30)
      goto LABEL_19;
  }
LABEL_33:
  __break(1u);
  return result;
}

Swift::Int sub_1003527D8(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int result;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  Swift::UInt v25;
  Swift::UInt v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  unint64_t *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[9];

  v41 = a1;
  v7 = type metadata accessor for MetricDetailViewModel(0);
  v45 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  v44 = (uint64_t)&v40 - v10;
  if (!a3)
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  if (a4[2] == a3)
  {
    swift_retain(a4);
    return (Swift::Int)a4;
  }
  v43 = v9;
  sub_100047110(&qword_10082F318);
  result = static _DictionaryStorage.allocate(capacity:)(a3);
  v12 = result;
  v40 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *v41;
  v14 = 0;
  v15 = result + 64;
  v16 = v43;
  v42 = a4;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v46 = v14;
      v18 = v17 | (v14 << 6);
    }
    else
    {
      v19 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_42;
      if (v19 >= v40)
        return v12;
      v20 = v41[v19];
      v21 = v14 + 1;
      if (!v20)
      {
        v21 = v14 + 2;
        if (v14 + 2 >= v40)
          return v12;
        v20 = v41[v21];
        if (!v20)
        {
          v21 = v14 + 3;
          if (v14 + 3 >= v40)
            return v12;
          v20 = v41[v21];
          if (!v20)
          {
            v22 = v14 + 4;
            if (v14 + 4 >= v40)
              return v12;
            v20 = v41[v22];
            if (!v20)
            {
              while (1)
              {
                v21 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v21 >= v40)
                  return v12;
                v20 = v41[v21];
                ++v22;
                if (v20)
                  goto LABEL_24;
              }
            }
            v21 = v14 + 4;
          }
        }
      }
LABEL_24:
      v13 = (v20 - 1) & v20;
      v46 = v21;
      v18 = __clz(__rbit64(v20)) + (v21 << 6);
    }
    v23 = a4[7];
    v24 = (unsigned __int8 *)(a4[6] + 24 * v18);
    v25 = *v24;
    v26 = *((_QWORD *)v24 + 1);
    v27 = v24[16];
    v28 = v44;
    v29 = *(_QWORD *)(v45 + 72);
    sub_100353DCC(v23 + v29 * v18, v44);
    sub_100047C88(v28, v16, type metadata accessor for MetricDetailViewModel);
    Hasher.init(_seed:)(v47, *(_QWORD *)(v12 + 40));
    Hasher._combine(_:)(v25);
    if ((v27 & 1) == 0)
      Hasher._combine(_:)(3uLL);
    Hasher._combine(_:)(v26);
    result = Hasher._finalize()();
    v30 = -1 << *(_BYTE *)(v12 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6))) != 0)
    {
      v33 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      v16 = v43;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v30) >> 6;
      v16 = v43;
      do
      {
        if (++v32 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v36 = v32 == v35;
        if (v32 == v35)
          v32 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v32);
      }
      while (v37 == -1);
      v33 = __clz(__rbit64(~v37)) + (v32 << 6);
    }
    *(_QWORD *)(v15 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
    v38 = *(_QWORD *)(v12 + 48) + 24 * v33;
    *(_BYTE *)v38 = v25;
    *(_QWORD *)(v38 + 8) = v26;
    *(_BYTE *)(v38 + 16) = v27;
    result = sub_100047C88(v16, *(_QWORD *)(v12 + 56) + v33 * v29, type metadata accessor for MetricDetailViewModel);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v42;
    v14 = v46;
    if (!a3)
      return v12;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

CHWorkoutDetailHeartRateTableViewCell *sub_100352B48(CHWorkoutDetailHeartRateTableViewCell *a1, uint64_t a2, double *a3, void *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  __n128 v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t, __n128);
  const char *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t, __n128);
  uint64_t v63;
  double *v64;
  uint64_t v65;
  CHWorkoutDetailHeartRateTableViewCell *v66;

  v63 = a2;
  v64 = a3;
  v7 = sub_100047110(&qword_10081F090);
  __chkstk_darwin(v7);
  v56 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for MetricChartData(0);
  v65 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v60 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v55 = (uint64_t)&v54 - v11;
  v12 = type metadata accessor for DateComponents(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100821648);
  __chkstk_darwin(v16);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)a1->cellPadding;
  if (v19)
  {
    v58 = v15;
    v59 = a4;
    v20 = (char *)a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v57 = *(_QWORD *)(v13 + 72);
    v62 = *(void (**)(char *, char *, uint64_t, __n128))(v13 + 16);
    v54 = a1;
    v21 = swift_bridgeObjectRetain(a1);
    v66 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
    v22 = v56;
    do
    {
      v62(v18, v20, v12, v21);
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v23)(v18, 0, 1, v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12) == 1)
      {
        a1 = v54;
        goto LABEL_17;
      }
      v31 = (uint64_t)v58;
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v58, v18, v12);
      sub_10034C814(v31, v63, v64, v59, v22);
      if (v4)
      {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v31, v12);
        swift_bridgeObjectRelease(v66, v39, v40, v41, v42, v43, v44, v45);
        swift_bridgeObjectRelease(v54, v46, v47, v48, v49, v50, v51, v52);
        return v66;
      }
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v31, v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v22, 1, v61) == 1)
      {
        sub_10001BE90((uint64_t)v22, &qword_10081F090);
      }
      else
      {
        v32 = (uint64_t)v22;
        v33 = v55;
        sub_100047C88(v32, v55, type metadata accessor for MetricChartData);
        sub_100047C88(v33, v60, type metadata accessor for MetricChartData);
        if ((swift_isUniquelyReferenced_nonNull_native(v66) & 1) == 0)
          v66 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD58(0, *(_QWORD *)v66->cellPadding + 1, 1, (unint64_t)v66);
        v35 = *(_QWORD *)v66->cellPadding;
        v34 = *(_QWORD *)v66->cellInset;
        if (v35 >= v34 >> 1)
          v66 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD58(v34 > 1, v35 + 1, 1, (unint64_t)v66);
        v36 = v66;
        *(_QWORD *)v66->cellPadding = v35 + 1;
        sub_100047C88(v60, (uint64_t)v36+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(_QWORD *)(v65 + 72) * v35, type metadata accessor for MetricChartData);
        v22 = v56;
      }
      v20 += v57;
      --v19;
    }
    while (v19);
    a1 = v54;
    v23(v18, 1, 1, v12, v21);
  }
  else
  {
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
    v38 = swift_bridgeObjectRetain(a1);
    v66 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
    v37(v18, 1, 1, v12, v38);
  }
LABEL_17:
  swift_bridgeObjectRelease(a1, v24, v25, v26, v27, v28, v29, v30);
  return v66;
}

double sub_100352EF8(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  double v12;
  double v13;
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_11;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    v7 = 4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1)
         : *(id *)(a1 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = objc_msgSend(v8, "quantity");
      objc_msgSend(v11, "doubleValueForUnit:", a2);
      v13 = v12;

      a3 = a3 + v13;
      ++v7;
      if (v10 == v6)
        goto LABEL_9;
    }
    __break(1u);
LABEL_11:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_9:
  swift_bridgeObjectRelease(a1);
  return a3;
}

CHWorkoutDetailHeartRateTableViewCell *sub_100353014(CHWorkoutDetailHeartRateTableViewCell *a1, uint64_t a2, void *a3, double *a4, unsigned int a5, uint64_t a6, char a7, _QWORD *a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  const char *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  char *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  SEL v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  CHWorkoutDetailHeartRateTableViewCell *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t, __n128);
  _QWORD *v78;
  uint64_t v79;
  void *v80;
  double *v81;
  unsigned int v82;
  uint64_t v83;
  CHWorkoutDetailHeartRateTableViewCell *v84;
  uint64_t v85;
  uint64_t v86;

  v10 = v9;
  v82 = a5;
  v80 = a3;
  v81 = a4;
  v79 = a2;
  v15 = sub_100047110(&qword_10081F090);
  __chkstk_darwin(v15);
  v78 = (CHWorkoutDetailHeartRateTableViewCell **)((char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v76 = type metadata accessor for MetricChartData(0);
  v83 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v75 = (uint64_t)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v68 = (uint64_t)&v65 - v19;
  v20 = type metadata accessor for DateComponents(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100047110(&qword_100821648);
  __chkstk_darwin(v24);
  v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)a1->cellPadding;
  v65 = a1;
  if (v27)
  {
    v86 = v10;
    v74 = a9;
    v73 = a7 & 1;
    v28 = (char *)a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v70 = *(_QWORD *)(v21 + 72);
    v77 = *(void (**)(char *, char *, uint64_t, __n128))(v21 + 16);
    v29 = swift_bridgeObjectRetain(a1);
    v84 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
    v66 = a6;
    v67 = a8;
    v30 = a6;
    v71 = v21;
    v72 = v23;
    while (1)
    {
      v85 = v27;
      v77(v26, v28, v20, v29);
      v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v21 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v69)(v26, 0, 1, v20);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v26, 1, v20) == 1)
        break;
      v38 = v26;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v26, v20);
      v39 = a8;
      v40 = v78;
      v41 = v39;
      v42 = v86;
      sub_10034B33C((uint64_t)v23, v79, v80, v81, v82, v30, v73, v39, v78);
      if (v42)
      {
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        swift_bridgeObjectRelease(v84, v50, v51, v52, v53, v54, v55, v56);
        swift_bridgeObjectRelease(v65, v57, v58, v59, v60, v61, v62, v63);
        return v84;
      }
      v86 = 0;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v83 + 48))(v40, 1, v76) == 1)
      {
        sub_10001BE90((uint64_t)v40, &qword_10081F090);
        a8 = v41;
        v26 = v38;
        v21 = v71;
      }
      else
      {
        v43 = v68;
        sub_100047C88((uint64_t)v40, v68, type metadata accessor for MetricChartData);
        sub_100047C88(v43, v75, type metadata accessor for MetricChartData);
        if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
          v84 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD58(0, *(_QWORD *)v84->cellPadding + 1, 1, (unint64_t)v84);
        v26 = v38;
        v45 = *(_QWORD *)v84->cellPadding;
        v44 = *(_QWORD *)v84->cellInset;
        v21 = v71;
        if (v45 >= v44 >> 1)
          v84 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD58(v44 > 1, v45 + 1, 1, (unint64_t)v84);
        v46 = v83;
        v47 = v84;
        *(_QWORD *)v84->cellPadding = v45 + 1;
        sub_100047C88(v75, (uint64_t)v47+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v45, type metadata accessor for MetricChartData);
        v30 = v66;
        a8 = v67;
      }
      v28 += v70;
      v27 = v85 - 1;
      v23 = v72;
      if (v85 == 1)
      {
        v69(v26, 1, 1, v20, v29);
        break;
      }
    }
  }
  else
  {
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v21 + 56);
    v49 = swift_bridgeObjectRetain(a1);
    v84 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
    v48(v26, 1, 1, v20, v49);
  }
  swift_bridgeObjectRelease(v65, v31, v32, v33, v34, v35, v36, v37);
  return v84;
}

void sub_100353454(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  char *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  NSString v37;
  id v38;
  uint64_t v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  __n128 v42;
  char *v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  objc_class *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void *v56;
  objc_super v57;

  v56 = a5;
  v12 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v12);
  v55 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for MetricFormattingHelper(0);
  __chkstk_darwin(v54);
  v15 = (uint64_t *)((char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_lock;
  v17 = type metadata accessor for UnfairLock(0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v18 = v6;
  *(_QWORD *)&v6[v16] = UnfairLock.init()();
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_observers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_activeMetrics] = &_swiftEmptySetSingleton;
  v19 = &v18[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_delegate];
  *((_QWORD *)v19 + 1) = 0;
  swift_unknownObjectWeakInit(v19, 0);
  v20 = OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_metricCategoryUpdates;
  v21 = sub_100047110(&qword_10082F320);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(_QWORD *)&v18[v20] = PassthroughSubject.init()();
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_activityDataProvider] = a1;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_configurationProvider] = a2;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_healthStore] = a3;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_workoutDataProvider] = a4;
  v22 = v56;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_mindfulnessDataProvider] = v56;
  v23 = objc_allocWithZone((Class)CHWorkoutFormattingManager);
  v24 = a1;
  v25 = a2;
  v26 = a3;
  v27 = a4;
  v28 = v22;
  v29 = objc_msgSend(v23, "initWithFitnessUIFormattingManager:healthStore:", a6, v26);
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_workoutFormattingManager] = v29;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_modelViewCache] = sub_10043DECC((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_processingModelViewCache] = sub_10043E054((uint64_t)_swiftEmptyArrayStorage);
  v30 = v26;
  v31 = objc_msgSend(a6, "unitManager");
  v32 = objc_msgSend(objc_allocWithZone((Class)CHWorkoutDataCalculator), "initWithHealthStore:unitManager:", v30, v31);

  if (v32)
  {
    *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_workoutDataCalculator] = v32;
    *v15 = a6;
    v33 = v54;
    v34 = (void *)objc_opt_self(NSBundle);
    v35 = a6;
    v36 = objc_msgSend(v34, "mainBundle");
    v37 = String._bridgeToObjectiveC()();
    v38 = objc_msgSend(v36, "localizedStringForKey:value:table:", v37, 0, 0);

    v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v41 = v40;

    v42 = swift_bridgeObjectRetain(v41);
    v43 = v55;
    AttributeContainer.init()(v42);
    AttributedString.init(_:attributes:)(v39, v41, v43);
    swift_bridgeObjectRelease(v41, v44, v45, v46, v47, v48, v49, v50);
    v51 = *(int *)(v33 + 24);
    *(_QWORD *)((char *)v15 + v51) = sub_100133E38();
    sub_100047C88((uint64_t)v15, (uint64_t)&v18[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_metricFormattingHelper], type metadata accessor for MetricFormattingHelper);

    v52 = (objc_class *)type metadata accessor for MetricsDataProvider(0);
    v57.receiver = v18;
    v57.super_class = v52;
    objc_msgSendSuper2(&v57, "init");
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003537F0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t, char *);

  v25 = a2;
  v31 = a4;
  v26 = a1;
  v5 = type metadata accessor for MetricDetailViewModel(0);
  v30 = *(_QWORD *)(v5 - 8);
  result = __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = *(_QWORD *)(a3 + 64);
  v27 = 0;
  v28 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v29 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v29)
      return sub_1003527D8(v26, v25, v27, (_QWORD *)a3);
    v21 = *(_QWORD *)(v28 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v29)
        return sub_1003527D8(v26, v25, v27, (_QWORD *)a3);
      v21 = *(_QWORD *)(v28 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v29)
          return sub_1003527D8(v26, v25, v27, (_QWORD *)a3);
        v21 = *(_QWORD *)(v28 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_20:
    v13 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_5:
    v16 = (unsigned __int8 *)(*(_QWORD *)(a3 + 48) + 24 * v15);
    v17 = *((_QWORD *)v16 + 1);
    v18 = v16[16];
    v19 = *v16;
    sub_100353DCC(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v30 + 72) * v15, (uint64_t)v8);
    LOBYTE(v17) = v31(v19, v17, v18, v8);
    result = sub_100011F54((uint64_t)v8, type metadata accessor for MetricDetailViewModel);
    if ((v17 & 1) != 0)
    {
      *(unint64_t *)((char *)v26 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v27++, 1))
      {
        __break(1u);
        return sub_1003527D8(v26, v25, v27, (_QWORD *)a3);
      }
    }
  }
  v22 = v20 + 3;
  if (v22 >= v29)
    return sub_1003527D8(v26, v25, v27, (_QWORD *)a3);
  v21 = *(_QWORD *)(v28 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v29)
      return sub_1003527D8(v26, v25, v27, (_QWORD *)a3);
    v21 = *(_QWORD *)(v28 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100353A3C(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;

  v6 = isStackAllocationSafe;
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = v7 & 0x3F;
  v9 = (1 << v7) + 63;
  v10 = v9 >> 6;
  v11 = 8 * (v9 >> 6);
  if (v8 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v9 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v15 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v11);
    v12 = sub_1003537F0((unint64_t *)((char *)&v15 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0)), v10, v6, a2);
    if (v3)
      swift_willThrow(v12);
    else
      return v12;
  }
  else
  {
    v13 = (void *)swift_slowAlloc(v11, -1);
    bzero(v13, v11);
    a3 = sub_1003537F0((unint64_t *)v13, v10, v6, a2);
    swift_slowDealloc(v13, -1, -1);
  }
  return a3;
}

void sub_100353BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  os_log_type_t v3;
  void *v4;
  os_log_type_t v5;
  _BOOL8 v6;
  NSObject *v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  __n128 v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31[2];

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = static os_log_type_t.default.getter(ObjectType);
  v4 = (void *)HKLogActivity;
  v5 = v3;
  v6 = os_log_type_enabled(HKLogActivity, v3);
  if (v6)
  {
    v7 = v4;
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v31[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = _typeName(_:qualified:)(ObjectType, 0);
    v12 = (CHWorkoutDetailHeartRateTableViewCell *)v11;
    v30 = sub_10003E8EC(v10, v11, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31, v8 + 4);
    swift_bridgeObjectRelease(v12, v13, v14, v15, v16, v17, v18, v19);
    _os_log_impl((void *)&_mh_execute_header, v7, v5, "%s did receive summariesDidChange notification", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  __chkstk_darwin(v6);
  dispatch thunk of UnfairLock.acquire<A>(_:)(sub_100353D90);
  v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_metricCategoryUpdates);
  LOBYTE(v31[0]) = 0;
  v21 = swift_retain(v20);
  PassthroughSubject.send(_:)(v31, v21);
  swift_release(v20);
  v22 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1005F14DC(0);
  sub_100348558((uint64_t)v22);
  swift_bridgeObjectRelease(v22, v23, v24, v25, v26, v27, v28, v29);
}

double sub_100353D90()
{
  uint64_t v0;

  return sub_100348A94(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

BOOL sub_100353DAC(char a1)
{
  uint64_t v1;

  return qword_100636808[a1] != *(unsigned __int8 *)(v1 + 16);
}

uint64_t sub_100353DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MetricDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100353E10(id *a1)
{
  return sub_10034C758(a1) & 1;
}

void sub_100353E2C(uint64_t a1)
{
  uint64_t v1;

  sub_10034A764(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void **)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_100353E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = sub_100047110(&qword_10082F328);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 33) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for DateInterval(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = ((*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v11, v10);
}

uint64_t sub_100353F3C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v7 = *(_QWORD *)(sub_100047110(&qword_10082F328) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(type metadata accessor for DateInterval(0) - 8);
  v11 = (v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return sub_10034A9B8(a1, a2, a3, *(unsigned __int8 *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_BYTE *)(v3 + 32), v3 + v8, *(void **)(v3 + v9), v3 + v11, *(_QWORD *)(v3 + ((*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFF8)));
}

double sub_100354000()
{
  uint64_t v0;

  return sub_100349124(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
}

uint64_t sub_100354024()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100354050(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  unsigned __int8 v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v12 = *(_QWORD *)(v1 + 40);
  v11 = *(_QWORD *)(v1 + 48);
  v6 = *(_BYTE *)(v1 + 56);
  v7 = *(_BYTE *)(v1 + 64);
  v8 = *(_BYTE *)(v1 + 32);
  v9 = (_QWORD *)swift_task_alloc(dword_10082F334);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000EA380;
  return sub_1003491D0(a1, v4, v5, v8, v12, v11, v6, v7);
}

uint64_t sub_100354114()
{
  uint64_t v0;

  return sub_100349D9C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_10035413C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10081F218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_100354184()
{
  uint64_t v0;

  return sub_100349900(*(char **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_1003541B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1003541D4()
{
  uint64_t v0;

  return sub_100349D50(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1003541E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t **)(v0 + 16);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_activeMetrics);
  v3 = *v1;
  *v1 = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_100354224()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100354250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v4;
  _QWORD *v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(v1 + 40);
  v5 = (_QWORD *)swift_task_alloc(dword_10082F344);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000DA0E4;
  v6 = (_QWORD *)swift_task_alloc(dword_10082F2EC);
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_1000EA380;
  return sub_100348B28(a1, v4, v4 > 3, 1);
}

uint64_t sub_1003542EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100354310()
{
  uint64_t v0;

  return sub_10034841C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
}

uint64_t sub_100354334(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10081F218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10035437C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003543A0()
{
  uint64_t v0;

  sub_100347980(v0);
}

uint64_t sub_1003543A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003543CC(uint64_t a1)
{
  uint64_t v1;

  sub_100347A78(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1003543D4(uint64_t a1)
{
  uint64_t v1;

  sub_100347C68(a1, v1);
}

double sub_1003543DC(uint64_t a1)
{
  uint64_t v1;

  return sub_100347DB4(a1, v1);
}

void sub_1003543E4()
{
  uint64_t v0;

  sub_100347EC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

double sub_100354400()
{
  uint64_t v0;

  return sub_100348A14(*(_QWORD *)(v0 + 16));
}

double sub_10035442C()
{
  return sub_100353D90();
}

uint64_t sub_100354444(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;

  v2 = v1;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  *(_QWORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  *(_QWORD *)(v1 + 72) = 0;
  *(_BYTE *)(v1 + 80) = 1;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_QWORD *)(v1 + 120) = 0;
  *(_BYTE *)(v1 + 128) = 1;
  *(_QWORD *)(v1 + 144) = 0;
  *(_QWORD *)(v1 + 152) = 0;
  *(_QWORD *)(v1 + 136) = 0;
  v4 = (void *)dispatch thunk of DownhillRun.distance.getter();
  if (v4)
  {
    v5 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
    objc_msgSend(v4, "doubleValueForUnit:", v5);
    v7 = v6;

  }
  else
  {
    v7 = 0;
  }
  *(_QWORD *)(v2 + 32) = v7;
  *(_BYTE *)(v2 + 40) = v4 == 0;
  *(double *)(v2 + 64) = dispatch thunk of DownhillRun.workoutTime.getter();
  v8 = DownhillRun.maximumSpeed.getter();
  v9 = *(void **)(v2 + 144);
  *(_QWORD *)(v2 + 144) = v8;

  v10 = DownhillRun.averageSpeed.getter();
  v11 = *(void **)(v2 + 136);
  *(_QWORD *)(v2 + 136) = v10;

  v12 = DownhillRun.elevationDescended.getter();
  v13 = *(void **)(v2 + 152);
  *(_QWORD *)(v2 + 152) = v12;

  v14 = dispatch thunk of DownhillRun.averageHeartRate.getter();
  v15 = *(void **)(v2 + 104);
  *(_QWORD *)(v2 + 104) = v14;

  return v2;
}

uint64_t sub_100354594(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;

  v2 = v1;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_BYTE *)(v2 + 40) = 1;
  *(_QWORD *)(v2 + 48) = 0;
  *(_BYTE *)(v2 + 56) = 1;
  *(_QWORD *)(v2 + 72) = 0;
  *(_BYTE *)(v2 + 80) = 1;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_QWORD *)(v2 + 120) = 0;
  *(_BYTE *)(v2 + 128) = 1;
  *(_QWORD *)(v2 + 144) = 0;
  *(_QWORD *)(v2 + 152) = 0;
  *(_QWORD *)(v2 + 136) = 0;
  v4 = (void *)DownhillRunsStats.distance.getter();
  v5 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
  objc_msgSend(v4, "doubleValueForUnit:", v5);
  v7 = v6;

  *(_QWORD *)(v2 + 32) = v7;
  *(_BYTE *)(v2 + 40) = 0;
  *(double *)(v2 + 64) = DownhillRunsStats.duration.getter();
  v8 = DownhillRunsStats.maximumSpeed.getter();
  v9 = *(void **)(v2 + 144);
  *(_QWORD *)(v2 + 144) = v8;

  v10 = DownhillRunsStats.averageSpeed.getter();
  v11 = *(void **)(v2 + 136);
  *(_QWORD *)(v2 + 136) = v10;

  v12 = DownhillRunsStats.elevationDescended.getter();
  v13 = *(void **)(v2 + 152);
  *(_QWORD *)(v2 + 152) = v12;

  v14 = DownhillRunsStats.averageHeartRate.getter();
  swift_release(a1);
  v15 = *(void **)(v2 + 104);
  *(_QWORD *)(v2 + 104) = v14;

  return v2;
}

uint64_t sub_1003546AC(double a1, double a2)
{
  uint64_t v2;
  uint64_t result;

  result = v2;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_BYTE *)(v2 + 56) = 1;
  *(_QWORD *)(v2 + 72) = 0;
  *(_BYTE *)(v2 + 80) = 1;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_QWORD *)(v2 + 120) = 0;
  *(_BYTE *)(v2 + 128) = 1;
  *(_QWORD *)(v2 + 144) = 0;
  *(_QWORD *)(v2 + 152) = 0;
  *(_QWORD *)(v2 + 136) = 0;
  *(double *)(v2 + 32) = a1;
  *(_BYTE *)(v2 + 40) = 0;
  *(double *)(v2 + 64) = a2;
  return result;
}

void sub_1003546F4(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  id v17;
  id v18;
  Class isa;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  double v24;
  Class v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  NSObject *v29;
  double v30;
  id v31;
  Class v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  NSObject *v36;
  __n128 v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  _QWORD *v55;
  void **aBlock;
  uint64_t v57;
  void *v58;
  void *v59;
  void *v60;
  uint64_t v61;

  v7 = v6;
  v48 = a5;
  v49 = a6;
  v54 = a4;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v52 = *(_QWORD *)(v10 - 8);
  v53 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v50 = *(_QWORD *)(v13 - 8);
  v51 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = dispatch_group_create();
  if (a2)
  {
    v17 = objc_msgSend(a2, "workoutConfiguration");
    v18 = objc_msgSend(v17, "activityType");

  }
  else
  {
    v18 = objc_msgSend(a1, "workoutActivityType");
  }
  dispatch_group_enter(v16);
  isa = DateInterval._bridgeToObjectiveC()().super.isa;
  v20 = swift_allocObject(&unk_100797AD0, 32, 7);
  *(_QWORD *)(v20 + 16) = v6;
  *(_QWORD *)(v20 + 24) = v16;
  v60 = sub_100355EDC;
  v61 = v20;
  aBlock = _NSConcreteStackBlock;
  v57 = 1107296256;
  v58 = sub_1001ABA78;
  v59 = &unk_100797AE8;
  v21 = _Block_copy(&aBlock);
  v22 = v61;
  swift_retain(v6);
  v23 = v16;
  *(_QWORD *)&v24 = swift_release(v22).n128_u64[0];
  objc_msgSend(v54, "averageHeartRateForWorkout:during:completion:", a1, isa, v21, v24);
  _Block_release(v21);

  if (v18 == (id)37 || v18 == (id)13)
  {
    dispatch_group_enter(v23);
    v25 = DateInterval._bridgeToObjectiveC()().super.isa;
    v26 = swift_allocObject(&unk_100797B70, 32, 7);
    *(_QWORD *)(v26 + 16) = v6;
    *(_QWORD *)(v26 + 24) = v23;
    v60 = sub_100355F3C;
    v61 = v26;
    aBlock = _NSConcreteStackBlock;
    v57 = 1107296256;
    v58 = sub_1001ABA78;
    v59 = &unk_100797B88;
    v27 = _Block_copy(&aBlock);
    v28 = v61;
    swift_retain(v6);
    v29 = v23;
    *(_QWORD *)&v30 = swift_release(v28).n128_u64[0];
    v31 = v54;
    objc_msgSend(v54, "averagePowerForWorkout:during:completion:", a1, v25, v27, v30);
    _Block_release(v27);

    dispatch_group_enter(v29);
    v32 = DateInterval._bridgeToObjectiveC()().super.isa;
    v33 = swift_allocObject(&unk_100797BC0, 32, 7);
    *(_QWORD *)(v33 + 16) = v7;
    *(_QWORD *)(v33 + 24) = v29;
    v60 = sub_100355F74;
    v61 = v33;
    aBlock = _NSConcreteStackBlock;
    v57 = 1107296256;
    v58 = sub_1001ABA78;
    v59 = &unk_100797BD8;
    v34 = _Block_copy(&aBlock);
    v35 = v61;
    swift_retain(v7);
    v36 = v29;
    objc_msgSend(v31, "averageCadenceForWorkout:during:completion:", a1, v32, v34, swift_release(v35).n128_f64[0]);
    _Block_release(v34);

  }
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v38 = (void *)static OS_dispatch_queue.main.getter(v37);
  v39 = swift_allocObject(&unk_100797B20, 32, 7);
  v41 = v48;
  v40 = v49;
  *(_QWORD *)(v39 + 16) = v48;
  *(_QWORD *)(v39 + 24) = v40;
  v60 = sub_100355F10;
  v61 = v39;
  aBlock = _NSConcreteStackBlock;
  v57 = 1107296256;
  v58 = sub_10002D0F8;
  v59 = &unk_100797B38;
  v42 = _Block_copy(&aBlock);
  v43 = sub_10003AFE0(v41, v40);
  static DispatchQoS.unspecified.getter(v43);
  v55 = _swiftEmptyArrayStorage;
  v44 = sub_10002FAC0();
  v45 = sub_100047110(&qword_100828C80);
  v46 = sub_10002FB08();
  v47 = v53;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v55, v45, v46, v53, v44);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v15, v12, v38, v42);
  _Block_release(v42);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v12, v47);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v15, v51);
  swift_release(v61);
}

void sub_100354B58(void *a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[8];

  if (a2)
  {
    v8 = sub_100047110(&qword_10082CEC0);
    v9 = swift_allocObject(v8, 64, 7);
    *(_OWORD *)(v9 + 16) = xmmword_100622F90;
    swift_getErrorValue(a2, v17, &v15);
    v10 = v15;
    v11 = v16;
    *(_QWORD *)(v9 + 56) = v16;
    v12 = sub_10004C480((_QWORD *)(v9 + 32));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v12, v10, v11);
    swift_errorRetain(a2);
    print(_:separator:terminator:)(v9, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v9);
    swift_errorRelease(a2);
  }
  v13 = *(void **)(a3 + 104);
  *(_QWORD *)(a3 + 104) = a1;
  v14 = a1;

  dispatch_group_leave(a4);
}

void sub_100354C4C(void *a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[8];

  if (a2)
  {
    v8 = sub_100047110(&qword_10082CEC0);
    v9 = swift_allocObject(v8, 64, 7);
    *(_OWORD *)(v9 + 16) = xmmword_100622F90;
    swift_getErrorValue(a2, v17, &v15);
    v10 = v15;
    v11 = v16;
    *(_QWORD *)(v9 + 56) = v16;
    v12 = sub_10004C480((_QWORD *)(v9 + 32));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v12, v10, v11);
    swift_errorRetain(a2);
    print(_:separator:terminator:)(v9, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v9);
    swift_errorRelease(a2);
  }
  v13 = *(void **)(a3 + 112);
  *(_QWORD *)(a3 + 112) = a1;
  v14 = a1;

  dispatch_group_leave(a4);
}

void sub_100354D40(void *a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[8];

  if (a2)
  {
    v8 = sub_100047110(&qword_10082CEC0);
    v9 = swift_allocObject(v8, 64, 7);
    *(_OWORD *)(v9 + 16) = xmmword_100622F90;
    swift_getErrorValue(a2, v17, &v15);
    v10 = v15;
    v11 = v16;
    *(_QWORD *)(v9 + 56) = v16;
    v12 = sub_10004C480((_QWORD *)(v9 + 32));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v12, v10, v11);
    swift_errorRetain(a2);
    print(_:separator:terminator:)(v9, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v9);
    swift_errorRelease(a2);
  }
  v13 = *(void **)(a3 + 96);
  *(_QWORD *)(a3 + 96) = a1;
  v14 = a1;

  dispatch_group_leave(a4);
}

uint64_t sub_100354E34()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return v0;
}

uint64_t sub_100354E88()
{
  uint64_t v0;

  sub_100354E34();
  return swift_deallocClassInstance(v0, 160, 7);
}

uint64_t type metadata accessor for WorkoutDurationMetrics()
{
  return objc_opt_self(_TtC10FitnessApp22WorkoutDurationMetrics);
}

uint64_t sub_100354EC8(void *a1, void *a2, uint64_t a3, int a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  id v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void (*v30)(char *, char *, uint64_t);
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  id v32;
  void *v33;
  uint64_t result;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;

  v51 = a6;
  v52 = a7;
  v49 = a1;
  v50 = a5;
  v45 = a4;
  v44 = a3;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v44 - v18;
  v20 = type metadata accessor for DateInterval(0);
  v47 = *(_QWORD *)(v20 - 8);
  v48 = v20;
  __chkstk_darwin(v20);
  v46 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = 0;
  *(_QWORD *)(v7 + 32) = 0;
  *(_BYTE *)(v7 + 40) = 1;
  *(_QWORD *)(v7 + 48) = 0;
  *(_BYTE *)(v7 + 56) = 1;
  *(_QWORD *)(v7 + 72) = 0;
  *(_BYTE *)(v7 + 80) = 1;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_OWORD *)(v7 + 104) = 0u;
  *(_QWORD *)(v7 + 120) = 0;
  *(_BYTE *)(v7 + 128) = 1;
  *(_QWORD *)(v7 + 144) = 0;
  *(_QWORD *)(v7 + 152) = 0;
  *(_QWORD *)(v7 + 136) = 0;
  v22 = objc_msgSend(a2, "distance");
  if (v22)
  {
    v8 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
    objc_msgSend(v22, "doubleValueForUnit:", v8);
    v24 = v23;

  }
  else
  {
    v24 = 0;
  }
  *(_QWORD *)(v7 + 32) = v24;
  *(_BYTE *)(v7 + 40) = v22 == 0;
  objc_msgSend(a2, "elapsedTime");
  *(_QWORD *)(v7 + 64) = v25;
  v26 = objc_msgSend(a2, "activeEnergy");
  v27 = *(void **)(v7 + 88);
  *(_QWORD *)(v7 + 88) = v26;

  v28 = objc_msgSend(a2, "startDate");
  if (!v28)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v19, 1, 1, v10);
    goto LABEL_19;
  }
  v29 = v28;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v28);

  v30 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v30(v19, v13, v10);
  v8 = *(id *)(v11 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v8)(v19, 0, 1, v10);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v31(v19, 1, v10) == 1)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v32 = objc_msgSend(a2, "endDate");
  if (!v32)
  {
LABEL_20:
    result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v8)(v16, 1, 1, v10);
    goto LABEL_21;
  }
  v33 = v32;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v32);

  v30(v16, v13, v10);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v8)(v16, 0, 1, v10);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v31)(v16, 1, v10);
  if ((_DWORD)result == 1)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  v35 = (uint64_t)v46;
  DateInterval.init(start:end:)(v19, v16);
  v36 = v49;
  if (objc_msgSend(v49, "supportsTrackWorkout") && (v45 & 1) == 0)
  {
    v37 = objc_msgSend(v36, "workoutEvents");
    if (v37)
    {
      v38 = v37;
      v39 = sub_10001E724(0, (unint64_t *)&qword_10081ED88, HKWorkoutEvent_ptr);
      v40 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, v39);

    }
    else
    {
      v40 = _swiftEmptyArrayStorage;
    }
    v41 = v44;
    __chkstk_darwin(v37);
    *(&v44 - 2) = v35;
    v42 = sub_1004C6590(sub_10025548C, (uint64_t)(&v44 - 4), (uint64_t)v40);
    swift_bridgeObjectRelease(v40);
    if ((v42 & 1) != 0)
      v43 = v41;
    else
      v43 = 0;
    *(_QWORD *)(v7 + 48) = v43;
    *(_BYTE *)(v7 + 56) = (v42 & 1) == 0;
  }
  sub_1003546F4(v36, 0, v35, v50, v51, v52);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v35, v48);
  return v7;
}

uint64_t sub_100355308(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  __n128 v53;
  id v54;
  void *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  id v59;
  void *v60;
  char *v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  id v65;
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;

  v7 = v6;
  v74 = a5;
  v75 = a6;
  v72 = a1;
  v73 = a4;
  v65 = a2;
  v9 = type metadata accessor for Date(0);
  v77 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v12);
  v76 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - v15;
  v17 = type metadata accessor for DateInterval(0);
  v70 = *(_QWORD *)(v17 - 8);
  v71 = v17;
  __chkstk_darwin(v17);
  v69 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_10082E2B0);
  __chkstk_darwin(v19);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (_QWORD *)type metadata accessor for IntervalWorkoutKeyPath(0);
  v68 = *(v22 - 1);
  __chkstk_darwin(v22);
  v24 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = 0;
  *(_QWORD *)(v7 + 32) = 0;
  *(_BYTE *)(v7 + 40) = 1;
  *(_QWORD *)(v7 + 48) = 0;
  *(_BYTE *)(v7 + 56) = 1;
  *(_QWORD *)(v7 + 72) = 0;
  *(_BYTE *)(v7 + 80) = 1;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_OWORD *)(v7 + 104) = 0u;
  *(_QWORD *)(v7 + 120) = 0;
  *(_BYTE *)(v7 + 128) = 1;
  *(_QWORD *)(v7 + 144) = 0;
  *(_QWORD *)(v7 + 152) = 0;
  *(_QWORD *)(v7 + 136) = 0;
  v25 = objc_msgSend(a3, "distance");
  v67 = v22;
  if (v25)
  {
    v22 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
    objc_msgSend(v25, "doubleValueForUnit:", v22);
    v27 = v26;

  }
  else
  {
    v27 = 0;
  }
  v66 = v24;
  *(_QWORD *)(v7 + 32) = v27;
  *(_BYTE *)(v7 + 40) = v25 == 0;
  objc_msgSend(a3, "elapsedTime");
  *(_QWORD *)(v7 + 64) = v28;
  v29 = objc_msgSend(a3, "activeEnergy");
  v30 = *(void **)(v7 + 88);
  *(_QWORD *)(v7 + 88) = v29;

  v31 = objc_msgSend(a3, "stepKeyPath");
  if (v31)
  {
    v22 = v31;
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

  }
  else
  {
    v32 = 0;
    v34 = 0;
  }
  v35 = *(_QWORD *)(v7 + 24);
  *(_QWORD *)(v7 + 16) = v32;
  *(_QWORD *)(v7 + 24) = v34;
  objc_msgSend(a3, "distanceGoalAchievedTime", swift_bridgeObjectRelease(v35).n128_f64[0]);
  *(_QWORD *)(v7 + 72) = v36;
  *(_BYTE *)(v7 + 80) = 0;
  v37 = objc_msgSend(a3, "stepKeyPath");
  if (v37)
  {
    v38 = v37;
    v22 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v40 = v39;

    IntervalWorkoutKeyPath.init(serializedString:)(v22, v40, v41);
    v42 = v67;
    v43 = v68;
    if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v68 + 48))(v21, 1, v67) == 1)
    {
      sub_10030C3C8((uint64_t)v21);
    }
    else
    {
      v44 = v66;
      (*(void (**)(char *, char *, _QWORD *))(v43 + 32))(v66, v21, v42);
      if (v65)
      {
        v45 = v65;
        v46 = (void *)IntervalWorkoutConfiguration.intervalWorkout.getter(v45);

        v47 = IntervalWorkout.stepForKeyPath(_:)(v44);
        v22 = (_QWORD *)WorkoutStep.goal.getter(v48);
        v49 = objc_msgSend(v22, "goalTypeIdentifier");

        if (v49 == (id)1)
        {
          v22 = (_QWORD *)WorkoutStep.goal.getter(v50);
          v51 = objc_msgSend(v22, "value");

          if (v51 && (v52 = objc_msgSend(v51, "_unit"), v51, v52))
          {
            v22 = (_QWORD *)FIUIDistanceUnitForHKUnit(v52);

            v53 = swift_release(v47);
            (*(void (**)(char *, _QWORD *, __n128))(v68 + 8))(v66, v42, v53);
            *(_QWORD *)(v7 + 48) = v22;
            *(_BYTE *)(v7 + 56) = 0;
          }
          else
          {
            swift_release(v47);
            (*(void (**)(char *, _QWORD *))(v68 + 8))(v66, v42);
          }
        }
        else
        {
          (*(void (**)(char *, _QWORD *))(v43 + 8))(v66, v42);
          swift_release(v47);
        }
      }
      else
      {
        (*(void (**)(char *, _QWORD *))(v43 + 8))(v44, v42);
      }
    }
  }
  v54 = objc_msgSend(a3, "startDate");
  if (!v54)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(v16, 1, 1, v9);
    goto LABEL_24;
  }
  v55 = v54;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v54);

  v56 = v77;
  v57 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
  v57(v16, v11, v9);
  v22 = *(_QWORD **)(v56 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v22)(v16, 0, 1, v9);
  v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
  if (v58(v16, 1, v9) == 1)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v59 = objc_msgSend(a3, "endDate");
  if (!v59)
  {
LABEL_25:
    result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v22)(v76, 1, 1, v9);
    goto LABEL_26;
  }
  v60 = v59;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v59);

  v61 = v76;
  v57(v76, v11, v9);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v22)(v61, 0, 1, v9);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v61, 1, v9);
  if ((_DWORD)result != 1)
  {
    v63 = (uint64_t)v69;
    DateInterval.init(start:end:)(v16, v61);
    sub_1003546F4(v72, 0, v63, v73, v74, v75);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v63, v71);
    return v7;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1003558F8(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v25 = a6;
  v12 = type metadata accessor for DateInterval(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110((uint64_t *)&unk_100827440);
  __chkstk_darwin(v16);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  *(_BYTE *)(v6 + 40) = 1;
  *(_QWORD *)(v6 + 48) = 0;
  *(_BYTE *)(v6 + 56) = 1;
  *(_QWORD *)(v6 + 72) = 0;
  *(_BYTE *)(v6 + 80) = 1;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 104) = 0u;
  *(_QWORD *)(v6 + 120) = 0;
  *(_BYTE *)(v6 + 128) = 1;
  *(_QWORD *)(v6 + 144) = 0;
  *(_QWORD *)(v6 + 152) = 0;
  *(_QWORD *)(v6 + 136) = 0;
  objc_msgSend(a3, "distanceInMeters");
  *(_QWORD *)(v6 + 32) = v19;
  *(_BYTE *)(v6 + 40) = 0;
  objc_msgSend(a3, "duration");
  *(_QWORD *)(v6 + 64) = v20;
  v21 = objc_msgSend(a3, "dateInterval");
  if (v21)
  {
    v22 = v21;
    static DateInterval._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v15, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12);
    if ((_DWORD)result != 1)
    {
      sub_1003546F4(a1, a2, (uint64_t)v18, a4, a5, v25);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
      return v6;
    }
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v18, 1, 1, v12);
  }
  __break(1u);
  return result;
}

uint64_t sub_100355AE8(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  void (*v37)(char *, char *, uint64_t);
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  id v39;
  void *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;

  v49 = a5;
  v50 = a6;
  v47 = a1;
  v48 = a4;
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v43 - v17;
  v19 = type metadata accessor for DateInterval(0);
  v45 = *(_QWORD *)(v19 - 8);
  v46 = v19;
  __chkstk_darwin(v19);
  v44 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  *(_BYTE *)(v6 + 40) = 1;
  *(_QWORD *)(v6 + 48) = 0;
  *(_BYTE *)(v6 + 56) = 1;
  *(_QWORD *)(v6 + 72) = 0;
  *(_BYTE *)(v6 + 80) = 1;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 104) = 0u;
  *(_QWORD *)(v6 + 120) = 0;
  *(_BYTE *)(v6 + 128) = 1;
  *(_QWORD *)(v6 + 144) = 0;
  *(_QWORD *)(v6 + 152) = 0;
  *(_QWORD *)(v6 + 136) = 0;
  v21 = objc_msgSend(a2, "distance");
  if (v21)
  {
    v22 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
    objc_msgSend(v21, "doubleValueForUnit:", v22);
    v24 = v23;

  }
  else
  {
    v24 = 0;
  }
  *(_QWORD *)(v6 + 32) = v24;
  *(_BYTE *)(v6 + 40) = v21 == 0;
  *(_QWORD *)(v6 + 48) = a3;
  *(_BYTE *)(v6 + 56) = 0;
  objc_msgSend(a2, "elapsedTime");
  *(_QWORD *)(v6 + 64) = v25;
  v26 = objc_msgSend(a2, "activeEnergy");
  v27 = *(void **)(v6 + 88);
  *(_QWORD *)(v6 + 88) = v26;

  v28 = (void *)objc_opt_self(NSNumberFormatter);
  v29 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", objc_msgSend(a2, "lapIndex"));
  v30 = objc_msgSend(v28, "localizedStringFromNumber:numberStyle:", v29, 0);

  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v33 = v32;

  v34 = *(_QWORD *)(v6 + 24);
  *(_QWORD *)(v6 + 16) = v31;
  *(_QWORD *)(v6 + 24) = v33;
  v35 = objc_msgSend(a2, "startDate", swift_bridgeObjectRelease(v34).n128_f64[0]);
  if (!v35)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, 1, 1, v9);
    goto LABEL_10;
  }
  v36 = v35;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v35);

  v37 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v37(v18, v12, v9);
  v30 = *(id *)(v10 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v30)(v18, 0, 1, v9);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v38(v18, 1, v9) == 1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v39 = objc_msgSend(a2, "endDate");
  if (!v39)
  {
LABEL_11:
    result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v30)(v15, 1, 1, v9);
    goto LABEL_12;
  }
  v40 = v39;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v39);

  v37(v15, v12, v9);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v30)(v15, 0, 1, v9);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v38)(v15, 1, v9);
  if ((_DWORD)result != 1)
  {
    v42 = (uint64_t)v44;
    DateInterval.init(start:end:)(v18, v15);
    sub_1003546F4(v47, 0, v42, v48, v49, v50);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v42, v46);
    return v6;
  }
LABEL_12:
  __break(1u);
  return result;
}

void sub_100355EDC(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100354B58(a1, a2, *(_QWORD *)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t sub_100355EE4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100355F10()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

void sub_100355F3C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100354C4C(a1, a2, *(_QWORD *)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t sub_100355F48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100355F74(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100354D40(a1, a2, *(_QWORD *)(v2 + 16), *(NSObject **)(v2 + 24));
}

void sub_100355F94(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100355FB8()
{
  return type metadata accessor for ActivitySharingFriendDetailCompetitionTotalWinsTableViewCell();
}

uint64_t sub_100355FD0()
{
  return type metadata accessor for ActivitySharingHeaderSwiftUITableViewCell();
}

uint64_t sub_100355FE8()
{
  return type metadata accessor for ActivitySharingFriendDetailCompetitionScoreTableViewCell();
}

uint64_t sub_100356000()
{
  return type metadata accessor for ActivitySharingFriendDetailCompetitionGraphTableViewCell();
}

uint64_t sub_100356018()
{
  return type metadata accessor for TodayActivityTile();
}

uint64_t sub_100356030()
{
  return type metadata accessor for ActivitySharingFriendDetailPaletteTableViewCell();
}

uint64_t sub_100356048()
{
  return type metadata accessor for ActivitySharingCompetitionActionListSwiftUITableViewCell();
}

uint64_t sub_100356060()
{
  return type metadata accessor for WorkoutsListTableViewCell();
}

uint64_t sub_100356078()
{
  return type metadata accessor for AwardsActivityTile();
}

void sub_100356090(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1003560C4()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  return v3;
}

void sub_100356208(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10035623C()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  return v3;
}

unint64_t sub_10035640C(unint64_t result)
{
  if (result >= 0xA)
    return 10;
  return result;
}

ValueMetadata *type metadata accessor for OpaqueButtonStyle()
{
  return &type metadata for OpaqueButtonStyle;
}

uint64_t sub_10035642C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B4DDC, 1);
}

uint64_t sub_10035643C()
{
  return ButtonStyleConfiguration.label.getter();
}

unint64_t sub_100356460()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082DDB0;
  if (!qword_10082DDB0)
  {
    v1 = type metadata accessor for ButtonStyleConfiguration.Label(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ButtonStyleConfiguration.Label, v1);
    atomic_store(result, (unint64_t *)&qword_10082DDB0);
  }
  return result;
}

uint64_t destroy for ControlsLockOverlay(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  return swift_release(a1[5]);
}

uint64_t initializeWithCopy for ControlsLockOverlay(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for ControlsLockOverlay(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v6);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  swift_retain(v9);
  swift_release(v8);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for ControlsLockOverlay(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v5);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v6);
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlsLockOverlay(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlsLockOverlay(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlsLockOverlay()
{
  return &type metadata for ControlsLockOverlay;
}

uint64_t sub_100356730(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B4E20, 1);
}

uint64_t sub_100356740@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t KeyPath;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _QWORD *v42;
  char *v43;
  uint64_t OpaqueTypeConformance2;
  uint64_t v45;
  __n128 v46;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  _OWORD *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned __int8 v80;
  uint64_t v81;
  unsigned __int8 v82;
  uint64_t v83;
  uint64_t v84;

  v2 = v1;
  v63 = a1;
  v3 = type metadata accessor for AccessibilityActionKind(0);
  v64 = *(_QWORD *)(v3 - 8);
  v65 = v3;
  __chkstk_darwin(v3);
  v62 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for AccessibilityChildBehavior(0);
  v58 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v57 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Font.Leading(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Font.TextStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100047110(&qword_10082F5D8);
  v61 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v56 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = static Color.black.getter(v15);
  v55 = static Alignment.center.getter(v53);
  v54 = v16;
  v17 = (_OWORD *)swift_allocObject(&unk_100797D00, 128, 7);
  v18 = *(_OWORD *)(v2 + 80);
  v17[5] = *(_OWORD *)(v2 + 64);
  v17[6] = v18;
  v17[7] = *(_OWORD *)(v2 + 96);
  v19 = *(_OWORD *)(v2 + 16);
  v17[1] = *(_OWORD *)v2;
  v17[2] = v19;
  v20 = *(_OWORD *)(v2 + 48);
  v17[3] = *(_OWORD *)(v2 + 32);
  v17[4] = v20;
  v21 = *(_QWORD *)(v2 + 48);
  v22 = sub_100357FE8((_QWORD *)v2);
  v23 = static Alignment.center.getter(v22);
  _FrameLayout.init(width:height:alignment:)(&v79, 0, 1, v21, 0, v23, v24);
  v25 = v79;
  v52 = v80;
  v51 = v81;
  v50 = v82;
  v49 = v83;
  v48 = v84;
  v26 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for Font.TextStyle.title(_:), v10);
  static Font.Weight.medium.getter(v26);
  v27 = static Font.system(_:weight:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for Font.Leading.tight(_:), v6);
  v28 = Font.leading(_:)(v9, v27);
  v29 = swift_release(v27);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v29);
  KeyPath = swift_getKeyPath(&unk_100636AC8);
  v66 = v53;
  v67 = sub_100357FE0;
  v68 = v17;
  v69 = v25;
  v70 = v52;
  v71 = v51;
  v72 = v50;
  v73 = v49;
  v74 = v48;
  v75 = KeyPath;
  v76 = v28;
  v77 = v55;
  v78 = v54;
  v31 = v57;
  static AccessibilityChildBehavior.combine.getter(KeyPath);
  v32 = sub_100047110(&qword_10082F5E0);
  v33 = sub_100358038();
  v34 = v56;
  View.accessibilityElement(children:)(v31, v32, v33);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v31, v59);
  v35 = v66;
  v36 = v68;
  v37 = v76;
  swift_release(v75);
  swift_release(v36);
  swift_release(v35);
  swift_release(v37);
  v38 = (_OWORD *)swift_allocObject(&unk_100797D28, 128, 7);
  v39 = *(_OWORD *)(v2 + 80);
  v38[5] = *(_OWORD *)(v2 + 64);
  v38[6] = v39;
  v38[7] = *(_OWORD *)(v2 + 96);
  v40 = *(_OWORD *)(v2 + 16);
  v38[1] = *(_OWORD *)v2;
  v38[2] = v40;
  v41 = *(_OWORD *)(v2 + 48);
  v38[3] = *(_OWORD *)(v2 + 32);
  v38[4] = v41;
  v42 = sub_100357FE8((_QWORD *)v2);
  v43 = v62;
  static AccessibilityActionKind.default.getter(v42);
  v66 = v32;
  v67 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v66, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v45 = v60;
  View.accessibilityAction(_:_:)(v43, sub_1003580F4, v38, v60, OpaqueTypeConformance2);
  v46 = swift_release(v38);
  (*(void (**)(char *, uint64_t, __n128))(v64 + 8))(v43, v65, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v34, v45);
}

uint64_t sub_100356BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  double v57;
  _OWORD v58[3];

  v54 = a2;
  v55 = a3;
  v4 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v4);
  v6 = (double *)((char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100047110(&qword_100829298);
  __chkstk_darwin(v7);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10082F600);
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10082F608);
  __chkstk_darwin(v13);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1;
  GeometryProxy.size.getter(v17);
  v19 = v18 * 0.5;
  v20 = (char *)v6 + *(int *)(v4 + 20);
  v21 = enum case for RoundedCornerStyle.continuous(_:);
  v22 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  *v6 = v19;
  v6[1] = v19;
  if (qword_10081DCD8 != -1)
    swift_once(&qword_10081DCD8, sub_1003D1FC8);
  v23 = qword_10086A848;
  sub_10004F8C8((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_QWORD *)&v9[*(int *)(v7 + 36)] = v23;
  swift_retain(v23);
  v24 = sub_100011F54((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v25 = v16;
  v26 = GeometryProxy.size.getter(v24);
  v27 = v54;
  v58[0] = *(_OWORD *)(v54 + 16);
  v28 = sub_100047110(&qword_10082F610);
  v29 = State.wrappedValue.getter(&v56, v28);
  v30 = v26 - *(double *)&v56;
  v31 = static Alignment.center.getter(v29);
  _FrameLayout.init(width:height:alignment:)(v58, *(_QWORD *)&v30, 0, 0, 1, v31, v32);
  sub_100021CC0((uint64_t)v9, (uint64_t)v12, &qword_100829298);
  v33 = &v12[*(int *)(v10 + 36)];
  v34 = v58[1];
  *(_OWORD *)v33 = v58[0];
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v58[2];
  v35 = sub_10001BE90((uint64_t)v9, &qword_100829298);
  v36 = static Edge.Set.leading.getter(v35);
  v56 = *(_OWORD *)(v27 + 16);
  State.wrappedValue.getter(&v57, v28);
  v37 = EdgeInsets.init(_all:)(v57);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  sub_100021CC0((uint64_t)v12, (uint64_t)v15, &qword_10082F600);
  v44 = &v15[*(int *)(v13 + 36)];
  *v44 = v36;
  *((double *)v44 + 1) = v37;
  *((_QWORD *)v44 + 2) = v39;
  *((_QWORD *)v44 + 3) = v41;
  *((_QWORD *)v44 + 4) = v43;
  v44[40] = 0;
  v45 = sub_10001BE90((uint64_t)v12, &qword_10082F600);
  v46 = static Alignment.center.getter(v45);
  v48 = v47;
  v49 = sub_100047110(&qword_10082F618);
  v50 = v55;
  v51 = v55 + *(int *)(v49 + 36);
  sub_100356F54(v27, v25, v51);
  v52 = (uint64_t *)(v51 + *(int *)(sub_100047110(&qword_10082F620) + 36));
  *v52 = v46;
  v52[1] = v48;
  return sub_100045AD4((uint64_t)v15, v50, &qword_10082F608);
}

uint64_t sub_100356F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  double v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  double v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  double v84;
  double v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _OWORD *v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  __n128 v104;
  _OWORD *v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __n128 v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, char *, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  void (*v144)(char *, uint64_t, uint64_t);
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  double v175;
  double v176;
  double v177;
  double v178;
  unsigned __int8 v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  __int128 v184;

  v164 = a2;
  v161 = a3;
  v147 = type metadata accessor for GeometryProxy(0);
  v146 = *(_QWORD *)(v147 - 8);
  v148 = *(_QWORD *)(v146 + 64);
  __chkstk_darwin(v147);
  v145 = (char *)&v135 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for LocalCoordinateSpace(0);
  v5 = __chkstk_darwin(v144);
  v143 = (char *)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for DragGesture(0, v5);
  v151 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v142 = (char *)&v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_100047110(&qword_10082F628);
  v155 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v149 = (char *)&v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_100047110(&qword_10082F630);
  v159 = *(_QWORD *)(v158 - 8);
  __chkstk_darwin(v158);
  v152 = (char *)&v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_100047110(&qword_10082F638);
  v157 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v154 = (char *)&v135 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v156 = (char *)&v135 - v12;
  v13 = type metadata accessor for Locale(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0, v14);
  __chkstk_darwin(v17);
  v19 = (char *)&v135 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for SlidingGradientText(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v135 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_100047110(&qword_10082F640);
  __chkstk_darwin(v136);
  v24 = (char *)&v135 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100047110(&qword_10082F648);
  __chkstk_darwin(v137);
  v26 = (char *)&v135 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_100047110(&qword_10082F650);
  __chkstk_darwin(v138);
  v28 = (char *)&v135 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_100047110(&qword_10082F658);
  __chkstk_darwin(v139);
  v30 = (char *)&v135 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_100047110(&qword_10082F660);
  __chkstk_darwin(v140);
  v32 = (char *)&v135 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_100047110(&qword_10082F668);
  __chkstk_darwin(v141);
  v162 = (uint64_t)&v135 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v34);
  v163 = (uint64_t)&v135 - v36;
  v37 = String.LocalizationValue.init(stringLiteral:)(0x435F4B434F4C4E55, 0xEF534C4F52544E4FLL, v35);
  static Locale.current.getter(v37);
  v38 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, 0, v16, 0, 0, 256);
  v40 = v39;
  KeyPath = swift_getKeyPath(&unk_100636AF8);
  v42 = (uint64_t *)&v22[*(int *)(v20 + 36)];
  *v42 = KeyPath;
  v43 = sub_100047110(&qword_100828058);
  swift_storeEnumTagMultiPayload(v42, v43, 0);
  *(_QWORD *)v22 = v38;
  *((_QWORD *)v22 + 1) = v40;
  *((_QWORD *)v22 + 2) = 0x4000000000000000;
  *((_QWORD *)v22 + 3) = 10;
  v22[32] = 0;
  v178 = 1.0;
  State.init(wrappedValue:)(&v165, &v178, &type metadata for Double);
  v44 = *((_QWORD *)&v165 + 1);
  *((_QWORD *)v22 + 5) = v165;
  *((_QWORD *)v22 + 6) = v44;
  LOBYTE(v178) = 0;
  v45 = State.init(wrappedValue:)(&v165, &v178, &type metadata for Bool);
  v46 = *((_QWORD *)&v165 + 1);
  v22[56] = v165;
  *((_QWORD *)v22 + 8) = v46;
  LOBYTE(v42) = static Edge.Set.leading.getter(v45);
  v47 = *(double *)(a1 + 56);
  v48 = EdgeInsets.init(_all:)(v47 + v47 + *(double *)(a1 + 80));
  v50 = v49;
  v52 = v51;
  v54 = v53;
  sub_10004F8C8((uint64_t)v22, (uint64_t)v24, type metadata accessor for SlidingGradientText);
  v55 = &v24[*(int *)(v136 + 36)];
  *v55 = (char)v42;
  *((double *)v55 + 1) = v48;
  *((_QWORD *)v55 + 2) = v50;
  *((_QWORD *)v55 + 3) = v52;
  *((_QWORD *)v55 + 4) = v54;
  v55[40] = 0;
  v56 = sub_100011F54((uint64_t)v22, type metadata accessor for SlidingGradientText);
  LOBYTE(v42) = static Edge.Set.vertical.getter(v56);
  sub_100021CC0((uint64_t)v24, (uint64_t)v26, &qword_10082F640);
  v57 = &v26[*(int *)(v137 + 36)];
  *v57 = (char)v42;
  *(_OWORD *)(v57 + 8) = 0u;
  *(_OWORD *)(v57 + 24) = 0u;
  v57[40] = 1;
  v58 = sub_10001BE90((uint64_t)v24, &qword_10082F640);
  LOBYTE(v42) = static Edge.Set.trailing.getter(v58);
  v59 = EdgeInsets.init(_all:)(*(double *)(a1 + 88));
  v61 = v60;
  v63 = v62;
  v65 = v64;
  sub_100021CC0((uint64_t)v26, (uint64_t)v28, &qword_10082F648);
  v66 = &v28[*(int *)(v138 + 36)];
  *v66 = (char)v42;
  *((double *)v66 + 1) = v59;
  *((_QWORD *)v66 + 2) = v61;
  *((_QWORD *)v66 + 3) = v63;
  *((_QWORD *)v66 + 4) = v65;
  v66[40] = 0;
  sub_10001BE90((uint64_t)v26, &qword_10082F648);
  v184 = *(_OWORD *)(a1 + 16);
  v165 = *(_OWORD *)(a1 + 16);
  v138 = sub_100047110(&qword_10082F610);
  State.wrappedValue.getter(&v178, v138);
  v67 = 1.0 - v178 / *(double *)(a1 + 104);
  sub_100021CC0((uint64_t)v28, (uint64_t)v30, &qword_10082F650);
  *(double *)&v30[*(int *)(v139 + 36)] = v67;
  sub_10001BE90((uint64_t)v28, &qword_10082F650);
  v68 = swift_getKeyPath(&unk_100636B28);
  sub_100021CC0((uint64_t)v30, (uint64_t)v32, &qword_10082F658);
  v69 = (uint64_t *)&v32[*(int *)(v140 + 36)];
  *v69 = v68;
  v69[1] = 0x3FE999999999999ALL;
  sub_10001BE90((uint64_t)v30, &qword_10082F658);
  v70 = swift_getKeyPath(&unk_100636B58);
  v71 = v162;
  sub_100021CC0((uint64_t)v32, v162, &qword_10082F660);
  v72 = v71 + *(int *)(v141 + 36);
  *(_QWORD *)v72 = v70;
  *(_QWORD *)(v72 + 8) = 2;
  *(_BYTE *)(v72 + 16) = 0;
  sub_10001BE90((uint64_t)v32, &qword_10082F660);
  v73 = sub_100045AD4(v71, v163, &qword_10082F668);
  v74 = static Alignment.center.getter(v73);
  ((void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))_FrameLayout.init(width:height:alignment:))(&v178, v47 + v47, 0, 0, 1, v74, v75);
  v141 = *(_QWORD *)&v178;
  LODWORD(v140) = v179;
  v76 = v180;
  LOBYTE(v22) = v181;
  v139 = v182;
  v137 = v183;
  v77 = Color.init(rgbHex:)(5197647);
  v78 = static Alignment.center.getter(v77);
  v80 = v79;
  v81 = v164;
  sub_100357CB0(a1, (uint64_t)&v165);
  v82 = v165;
  LOBYTE(v28) = BYTE8(v165);
  v165 = v184;
  v83 = State.wrappedValue.getter(&v177, v138);
  v84 = v47 + v177 + *(double *)(a1 + 64);
  GeometryProxy.size.getter(v83);
  *(_QWORD *)&v165 = v141;
  BYTE8(v165) = v140;
  v166 = v76;
  v167 = (char)v22;
  v168 = v139;
  v169 = v137;
  v170 = v77;
  v171 = v82;
  v172 = (char)v28;
  v173 = v78;
  v174 = v80;
  v175 = v84;
  v176 = v85 * 0.5;
  v86 = v143;
  static CoordinateSpaceProtocol<>.local.getter(v87);
  v88 = v142;
  DragGesture.init<A>(minimumDistance:coordinateSpace:)(v86, v144, &protocol witness table for LocalCoordinateSpace, 10.0);
  v89 = v146;
  v144 = *(void (**)(char *, uint64_t, uint64_t))(v146 + 16);
  v90 = v145;
  v91 = v147;
  v144(v145, v81, v147);
  v92 = *(unsigned __int8 *)(v89 + 80);
  v93 = v89;
  v94 = (v92 + 128) & ~v92;
  v95 = v94 + v148;
  v148 = v92 | 7;
  v96 = (_OWORD *)swift_allocObject(&unk_100797D50, v95, v92 | 7);
  v97 = *(_OWORD *)(a1 + 80);
  v96[5] = *(_OWORD *)(a1 + 64);
  v96[6] = v97;
  v96[7] = *(_OWORD *)(a1 + 96);
  v98 = *(_OWORD *)(a1 + 16);
  v96[1] = *(_OWORD *)a1;
  v96[2] = v98;
  v99 = *(_OWORD *)(a1 + 48);
  v96[3] = *(_OWORD *)(a1 + 32);
  v96[4] = v99;
  v146 = *(_QWORD *)(v93 + 32);
  ((void (*)(char *, char *, uint64_t))v146)((char *)v96 + v94, v90, v91);
  sub_100357FE8((_QWORD *)a1);
  v100 = sub_1000083D8(&qword_10082F670, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture, (uint64_t)&protocol conformance descriptor for DragGesture);
  v101 = sub_1000083D8(&qword_10082F678, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture.Value, (uint64_t)&protocol conformance descriptor for DragGesture.Value);
  v102 = v149;
  v103 = v150;
  Gesture<>.onChanged(_:)(sub_100358138, v96, v150, v100, v101);
  v104 = swift_release(v96);
  (*(void (**)(char *, uint64_t, __n128))(v151 + 8))(v88, v103, v104);
  v144(v90, v164, v91);
  v105 = (_OWORD *)swift_allocObject(&unk_100797D78, v95, v148);
  v106 = *(_OWORD *)(a1 + 80);
  v105[5] = *(_OWORD *)(a1 + 64);
  v105[6] = v106;
  v105[7] = *(_OWORD *)(a1 + 96);
  v107 = *(_OWORD *)(a1 + 16);
  v105[1] = *(_OWORD *)a1;
  v105[2] = v107;
  v108 = *(_OWORD *)(a1 + 48);
  v105[3] = *(_OWORD *)(a1 + 32);
  v105[4] = v108;
  ((void (*)(char *, char *, uint64_t))v146)((char *)v105 + v94, v90, v91);
  sub_100357FE8((_QWORD *)a1);
  v109 = sub_100028384(&qword_10082F680, &qword_10082F628, (uint64_t)&protocol conformance descriptor for _ChangedGesture<A>);
  v110 = v152;
  v111 = v153;
  Gesture.onEnded(_:)(sub_1003581CC, v105, v153, v109);
  v112 = swift_release(v105);
  v113 = (*(uint64_t (**)(char *, uint64_t, __n128))(v155 + 8))(v102, v111, v112);
  v114 = static GestureMask.all.getter(v113);
  v115 = sub_100047110(&qword_10082F688);
  v116 = sub_100358228();
  v117 = sub_100028384(&qword_10082F6D0, &qword_10082F630, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
  v118 = v154;
  v119 = v114;
  v120 = v158;
  View.gesture<A>(_:including:)(v110, v119, v115, v158, v116, v117);
  (*(void (**)(char *, uint64_t))(v159 + 8))(v110, v120);
  v121 = v171;
  swift_release(v170);
  v122 = swift_release(v121);
  v123 = v157;
  v124 = v156;
  v125 = v160;
  (*(void (**)(char *, char *, uint64_t, __n128))(v157 + 32))(v156, v118, v160, v122);
  v126 = v163;
  v127 = v162;
  sub_100021CC0(v163, v162, &qword_10082F668);
  v128 = *(void (**)(char *, char *, uint64_t))(v123 + 16);
  v129 = v123;
  v130 = v125;
  v128(v118, v124, v125);
  v131 = v161;
  sub_100021CC0(v127, v161, &qword_10082F668);
  v132 = sub_100047110(&qword_10082F6D8);
  v128((char *)(v131 + *(int *)(v132 + 48)), v118, v130);
  v133 = *(void (**)(char *, uint64_t))(v129 + 8);
  v133(v124, v130);
  sub_10001BE90(v126, &qword_10082F668);
  v133(v118, v130);
  return sub_10001BE90(v127, &qword_10082F668);
}

uint64_t sub_100357CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  double v6;
  uint64_t result;
  char v8;
  uint64_t v9;
  char v10;
  __int128 v11;

  v11 = *(_OWORD *)(a1 + 16);
  v4 = sub_100047110(&qword_10082F610);
  v5 = State.wrappedValue.getter(&v9, v4);
  v6 = *(double *)&v9;
  if (GeometryProxy.size.getter(v5) * *(double *)(a1 + 72) >= v6)
  {
    v9 = Image.init(systemName:)(1801678700, 0xE400000000000000);
    v10 = 1;
  }
  else
  {
    v9 = Image.init(systemName:)(0x65706F2E6B636F6CLL, 0xE90000000000006ELL);
    v10 = 0;
  }
  result = _ConditionalContent<>.init(storage:)(&v9, &type metadata for Image, &type metadata for Image, &protocol witness table for Image, &protocol witness table for Image);
  v8 = BYTE8(v11);
  *(_QWORD *)a2 = v11;
  *(_BYTE *)(a2 + 8) = v8;
  return result;
}

uint64_t sub_100357DA0(uint64_t a1, uint64_t a2)
{
  double v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v8;
  __int128 v9;

  v3 = fabs(DragGesture.Value.translation.getter());
  v5 = GeometryProxy.size.getter(v4)
     - (*(double *)(a2 + 56)
      + *(double *)(a2 + 64)
      + *(double *)(a2 + 56)
      + *(double *)(a2 + 64));
  if (v5 >= v3)
    v5 = v3;
  v9 = *(_OWORD *)(a2 + 16);
  v8 = v5;
  v6 = sub_100047110(&qword_10082F610);
  return State.wrappedValue.setter(&v8, v6);
}

double sub_100357E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  double result;
  _QWORD v7[6];

  v5 = static Animation.spring(response:dampingFraction:blendDuration:)(*(double *)(a2 + 96), 1.0, 0.0);
  v7[2] = a2;
  v7[3] = a3;
  withAnimation<A>(_:_:)(v5, sub_1003583E0, v7, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_100357EA8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  double v8;

  v2 = sub_100047110(&qword_10082F610);
  v3 = State.wrappedValue.getter(&v8, v2);
  v4 = v8;
  if (GeometryProxy.size.getter(v3) * *(double *)(a1 + 72) >= v4)
  {
    v8 = 0.0;
    return State.wrappedValue.setter(&v8, v2);
  }
  else
  {
    v8 = GeometryProxy.size.getter(v5)
       - (*(double *)(a1 + 56)
        + *(double *)(a1 + 64)
        + *(double *)(a1 + 56)
        + *(double *)(a1 + 64));
    v6 = State.wrappedValue.setter(&v8, v2);
    return (*(uint64_t (**)(uint64_t, double))a1)(v6, *(double *)(a1 + 96));
  }
}

uint64_t sub_100357F94@<X0>(uint64_t a1@<X8>)
{
  return sub_100356740(a1);
}

uint64_t sub_100357FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100356BEC(a1, v2 + 16, a2);
}

_QWORD *sub_100357FE8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[3];
  swift_retain(a1[5]);
  swift_retain(v2);
  swift_retain(v3);
  return a1;
}

unint64_t sub_100358038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082F5E8;
  if (!qword_10082F5E8)
  {
    v1 = sub_100007050(&qword_10082F5E0);
    sub_1002D747C();
    sub_100028384(&qword_10082F5F0, &qword_10082F5F8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F5E8);
  }
  return result;
}

uint64_t sub_1003580C0()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1003580F4()
{
  uint64_t v0;

  return (*(uint64_t (**)(double))(v0 + 16))(*(double *)(v0 + 112));
}

uint64_t sub_100358138(uint64_t a1)
{
  return sub_1003581D8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100357DA0);
}

uint64_t sub_100358148()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for GeometryProxy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 128) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*((_QWORD *)v0 + 3));
  swift_release(*((_QWORD *)v0 + 5));
  swift_release(*((_QWORD *)v0 + 7));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003581CC(uint64_t a1)
{
  return sub_1003581D8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100357E38);
}

uint64_t sub_1003581D8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeometryProxy(0) - 8) + 80);
  return a2(a1, v2 + 16, v2 + ((v4 + 128) & ~v4));
}

unint64_t sub_100358228()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082F690;
  if (!qword_10082F690)
  {
    v1 = sub_100007050(&qword_10082F688);
    sub_100358294();
    sub_10035839C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F690);
  }
  return result;
}

unint64_t sub_100358294()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082F698;
  if (!qword_10082F698)
  {
    v1 = sub_100007050(&qword_10082F6A0);
    sub_100358318();
    sub_100028384(&qword_10082F6B8, &qword_10082F6C0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F698);
  }
  return result;
}

unint64_t sub_100358318()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082F6A8;
  if (!qword_10082F6A8)
  {
    v1 = sub_100007050(&qword_10082F6B0);
    sub_100340B48();
    sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F6A8);
  }
  return result;
}

unint64_t sub_10035839C()
{
  unint64_t result;

  result = qword_10082F6C8;
  if (!qword_10082F6C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _PositionLayout, &type metadata for _PositionLayout);
    atomic_store(result, (unint64_t *)&qword_10082F6C8);
  }
  return result;
}

uint64_t sub_1003583E0()
{
  uint64_t v0;

  return sub_100357EA8(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1003583FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10082F6E0;
  if (!qword_10082F6E0)
  {
    v1 = sub_100007050(&qword_10082F6E8);
    v2[0] = sub_100007050(&qword_10082F5E0);
    v2[1] = sub_100358038();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_1000083D8((unint64_t *)&qword_10081EFA8, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F6E0);
  }
  return result;
}

void sub_1003584C8(char *a1)
{
  sub_1003900AC(*a1);
}

void sub_1003584D4()
{
  char *v0;

  sub_1003920B0(0, *v0);
}

void sub_1003584E0(uint64_t a1)
{
  char *v1;

  sub_1003918C0(a1, *v1);
}

void sub_1003584E8(uint64_t a1)
{
  char *v1;

  sub_1003920B0(a1, *v1);
}

unint64_t sub_1003584F0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1003586E4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10035851C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100358544 + 4 * byte_100636B90[*v0]))();
}

void sub_100358544(_QWORD *a1@<X8>)
{
  *a1 = 0x726574656DLL;
  a1[1] = 0xE500000000000000;
}

void sub_10035855C(_QWORD *a1@<X8>)
{
  *a1 = 0x6574756E696DLL;
  a1[1] = 0xE600000000000000;
}

void sub_100358574(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1701011824;
  a1[1] = v1;
}

void sub_100358584(_QWORD *a1@<X8>)
{
  *a1 = 0x6465657073;
  a1[1] = 0xE500000000000000;
}

void sub_10035859C(_QWORD *a1@<X8>)
{
  *a1 = 0x746E756F63;
  a1[1] = 0xE500000000000000;
}

void sub_1003585B4(_QWORD *a1@<X8>)
{
  *a1 = 0x78614D324F76;
  a1[1] = 0xE600000000000000;
}

void sub_1003585CC(_QWORD *a1@<X8>)
{
  *a1 = 7628141;
  a1[1] = 0xE300000000000000;
}

uint64_t storeEnumTagSinglePayload for ActivityStatisticsUnit(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_10035862C + 4 * byte_100636B9D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_100358660 + 4 * byte_100636B98[v4]))();
}

uint64_t sub_100358660(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100358668(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100358670);
  return result;
}

uint64_t sub_10035867C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100358684);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_100358688(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100358690(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1003586A0()
{
  unint64_t result;

  result = qword_10082F6F0;
  if (!qword_10082F6F0)
  {
    result = swift_getWitnessTable(&unk_100636C40, &type metadata for ActivityStatisticsUnit);
    atomic_store(result, (unint64_t *)&qword_10082F6F0);
  }
  return result;
}

unint64_t sub_1003586E4(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100782990, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 8)
    return 8;
  else
    return v3;
}

void sub_10035872C(uint64_t a1)
{
  sub_100358744(a1, (void (*)(void))&Calendar.weekdaySymbols.getter);
}

void sub_100358738(uint64_t a1)
{
  sub_100358744(a1, (void (*)(void))&Calendar.shortWeekdaySymbols.getter);
}

void sub_100358744(uint64_t a1, void (*a2)(void))
{
  a2();
  __asm { BR              X10 }
}

ValueMetadata *type metadata accessor for FormattedDateView()
{
  return &type metadata for FormattedDateView;
}

uint64_t sub_1003588A0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B4E80, 1);
}

uint64_t sub_1003588B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  char v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  uint64_t v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  char v45;
  uint64_t v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  SEL v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t result;
  uint64_t v71;
  _QWORD v72[4];
  _QWORD v73[2];

  v72[0] = a3;
  v5 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v5);
  v7 = (char *)v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Font.Leading(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73[0] = a1;
  v73[1] = a2;
  v12 = sub_100038CA0();
  swift_bridgeObjectRetain(a2);
  v13 = Text.init<A>(_:)(v73, &type metadata for String, v12);
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  v21 = static Font.footnote.getter(v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for Font.Leading.tight(_:), v8);
  v22 = Font.leading(_:)(v11, v21);
  v23 = swift_release(v21);
  v24.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v23);
  v25 = Text.font(_:)(v22, v13, v15, v19, v17, v24);
  v27 = v26;
  LOBYTE(v21) = v28;
  v30 = v29;
  swift_release(v22);
  v31 = v21 & 1;
  sub_1000E4458(v13, v15, v19);
  swift_bridgeObjectRelease(v17, v32, v33, v34, v35, v36, v37, v38);
  LODWORD(v73[0]) = static HierarchicalShapeStyle.secondary.getter(v39);
  v40 = Text.foregroundStyle<A>(_:)(v73, v25, v27, v31, v30, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v42 = v41;
  v44 = v43;
  v46 = v45 & 1;
  sub_1000E4458(v25, v27, v31);
  swift_bridgeObjectRelease(v30, v47, v48, v49, v50, v51, v52, v53);
  v54 = enum case for Font.Design.rounded(_:);
  v55 = type metadata accessor for Font.Design(0);
  v56 = *(_QWORD *)(v55 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 104))(v7, v54, v55);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v7, 0, 1, v55);
  v57 = Text.fontDesign(_:)(v7, v40, v42, v46, v44);
  v59 = v58;
  LOBYTE(v56) = v60;
  v62 = v61;
  sub_1000E4458(v40, v42, v46);
  swift_bridgeObjectRelease(v44, v63, v64, v65, v66, v67, v68, v69);
  result = sub_100184224((uint64_t)v7);
  v71 = v72[0];
  *(_QWORD *)v72[0] = v57;
  *(_QWORD *)(v71 + 8) = v59;
  *(_BYTE *)(v71 + 16) = v56 & 1;
  *(_QWORD *)(v71 + 24) = v62;
  return result;
}

uint64_t sub_100358B38@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1003588B0(*v1, v1[1], a1);
}

void *sub_100358B40()
{
  return &protocol witness table for Text;
}

void sub_100358B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1003594F4();

  }
}

uint64_t sub_100358BBC(int a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  __n128 v19;
  void *v20;
  uint64_t v21;
  void *Strong;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _QWORD aBlock[5];
  uint64_t v36;
  _BYTE v37[24];

  v34 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v33 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static WOLog.dataLink.getter(v11);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v17 = 67109120;
    LODWORD(aBlock[0]) = v34 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4, v17 + 4);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Presence did change: %{BOOL}d", v17, 8u);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = a2 + 16;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  sub_10002FB54();
  v20 = (void *)static OS_dispatch_queue.main.getter(v19);
  v21 = swift_allocObject(&unk_100797F98, 24, 7);
  swift_beginAccess(v18, v37, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v18);
  swift_unknownObjectWeakInit(v21 + 16, Strong);

  v23 = swift_allocObject(&unk_100798060, 25, 7);
  *(_QWORD *)(v23 + 16) = v21;
  *(_BYTE *)(v23 + 24) = v34 & 1;
  aBlock[4] = sub_10035B828;
  v36 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_100798078;
  v24 = _Block_copy(aBlock);
  swift_release(v36);
  static DispatchQoS.unspecified.getter(v25);
  aBlock[0] = _swiftEmptyArrayStorage;
  v26 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v27 = sub_100047110(&qword_100828C80);
  v28 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v3, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v8, v32);
}

void sub_100358EE8(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR___WODataLinkMonitor_currentWorkoutState);
    if (v6 >= 2)
    {
      if (v6 == 3)
      {
        v7 = 0;
        v8 = a2 ^ 1;
      }
      else
      {
        if (v6 != 2)
        {
          v10 = *(_QWORD *)(Strong + OBJC_IVAR___WODataLinkMonitor_currentWorkoutState);
          _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DataLinkWorkoutState, &v10, &type metadata for DataLinkWorkoutState, &type metadata for Int);
          __break(1u);
          return;
        }
        v8 = 0;
        v7 = 1;
      }
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if ((a2 & 1) != 0)
      v9 = v7;
    else
      v9 = 2;
    sub_100005374(v9, v8 & 1);

  }
}

void sub_100358FB4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  objc_class *v24;
  char *v25;
  id v26;
  id v27;
  uint64_t Strong;
  void *v29;
  void *v30;
  uint64_t v31;
  uint8_t *v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];
  objc_super v39;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2 + 16;
  static WOLog.dataLink.getter(v6);
  v10 = a1;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v36 = swift_slowAlloc(32, -1);
    v38[0] = v36;
    v33 = v13;
    *(_DWORD *)v13 = 136315138;
    v32 = v13 + 4;
    v14 = v10;
    v15 = objc_msgSend(v14, "description");
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v34 = v5;
    v35 = v4;
    v17 = v9;
    v18 = v16;
    v20 = v19;

    v21 = v18;
    v9 = v17;
    v37 = sub_10003E8EC(v21, v20, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v38, v32);

    swift_bridgeObjectRelease(v20);
    v22 = v33;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Notification received: %s", v33, 0xCu);
    v23 = v36;
    swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v35);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  v24 = (objc_class *)type metadata accessor for WorkoutNotificationBridge();
  v25 = (char *)objc_allocWithZone(v24);
  *(_QWORD *)&v25[OBJC_IVAR___WOWorkoutNotification_bridgedNotification] = v10;
  v39.receiver = v25;
  v39.super_class = v24;
  v26 = v10;
  v27 = objc_msgSendSuper2(&v39, "init");
  swift_beginAccess(v9, v38, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong
    && (v29 = (void *)Strong,
        v30 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR___WODataLinkMonitor_delegate),
        v29,
        v30))
  {
    objc_msgSend(v30, "displayWorkoutNotification:", v27);

    swift_unknownObjectRelease(v30);
  }
  else
  {

  }
}

id sub_100359268()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  CHWorkoutDetailHeartRateTableViewCell **v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  const char *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  objc_class *v27;
  uint64_t v29;
  objc_super v30;
  _QWORD v31[3];
  uint64_t v32;
  char v33[24];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static WOLog.dataLink.getter(v6);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Destroying the DataLinkMonitor", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v11 = (CHWorkoutDetailHeartRateTableViewCell **)&v1[OBJC_IVAR___WODataLinkMonitor_observers];
  swift_beginAccess(&v1[OBJC_IVAR___WODataLinkMonitor_observers], v33, 0, 0);
  v12 = *v11;
  v13 = *(_QWORD *)v12->cellPadding;
  if (v13)
  {
    v14 = (void *)objc_opt_self(NSNotificationCenter);
    v15 = (uint64_t)&v12[1];
    swift_bridgeObjectRetain(v12);
    do
    {
      sub_10003E9BC(v15, (uint64_t)v31);
      v16 = objc_msgSend(v14, "defaultCenter");
      v17 = v32;
      v18 = sub_100016804(v31, v32);
      v19 = _bridgeAnythingToObjectiveC<A>(_:)(v18, v17);
      objc_msgSend(v16, "removeObserver:", v19);

      swift_unknownObjectRelease(v19);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v31);
      v15 += 32;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease(v12, v20, v21, v22, v23, v24, v25, v26);
  }
  v27 = (objc_class *)type metadata accessor for DataLinkMonitor();
  v30.receiver = v1;
  v30.super_class = v27;
  return objc_msgSendSuper2(&v30, "dealloc");
}

uint64_t sub_1003594F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v0 + OBJC_IVAR___WODataLinkMonitor_workoutStateUpdateWaiting);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 20));
  *(_BYTE *)(v10 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 20));
  sub_10002FB54();
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_100797F98, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  aBlock[4] = sub_10035B7E4;
  v21 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_100798028;
  v14 = _Block_copy(aBlock);
  swift_release(v21);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_100047110(&qword_100828C80);
  v18 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_100359704(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(_QWORD *)(Strong + OBJC_IVAR___WODataLinkMonitor_workoutStateUpdateWaiting);
    swift_retain(v4);
    os_unfair_lock_lock((os_unfair_lock_t)(v4 + 20));
    sub_1003597AC((_BYTE *)(v4 + 16), (uint64_t)v3);
    os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 20));
    swift_release(v4);

  }
}

_BYTE *sub_1003597AC(_BYTE *result, uint64_t a2)
{
  unint64_t v2;
  _BYTE *v3;
  uint64_t v4;

  if (*result == 1)
  {
    v2 = *(_QWORD *)(a2 + OBJC_IVAR___WODataLinkMonitor_currentWorkoutState);
    if (v2 >= 4)
    {
      v4 = *(_QWORD *)(a2 + OBJC_IVAR___WODataLinkMonitor_currentWorkoutState);
      result = (_BYTE *)_diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DataLinkWorkoutState, &v4, &type metadata for DataLinkWorkoutState, &type metadata for Int);
      __break(1u);
    }
    else
    {
      v3 = result;
      result = (_BYTE *)sub_100005374(qword_100636D68[v2], 0);
      *v3 = 0;
    }
  }
  return result;
}

void sub_100359838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  v5 = type metadata accessor for DataLinkCommand(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(&v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], a3, v5);
    v11 = *(unsigned __int8 *)(v6 + 80);
    v12 = (v11 + 16) & ~v11;
    v13 = swift_allocObject(&unk_100798010, v12 + v7, v11 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, v8, v5);
    dispatch thunk of DataLinkClient.send(command:acknowledged:)(a3, sub_10035B798, v13);
    swift_release(v13);

  }
}

uint64_t sub_100359950(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  unint64_t v42;
  unint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v6 = type metadata accessor for DataLinkCommand(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v51 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v51 - v14;
  v16 = type metadata accessor for Logger(0);
  v53 = *(_QWORD *)(v16 - 8);
  v54 = v16;
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v51 - v21;
  if ((a1 & 1) != 0)
  {
    static WOLog.dataLink.getter(v20);
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v24 = v23(v15, a3, v6);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.default.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v52 = swift_slowAlloc(32, -1);
      v56 = v52;
      *(_DWORD *)v27 = 136315138;
      v51 = v27 + 4;
      v23(v13, (uint64_t)v15, v6);
      v28 = String.init<A>(describing:)(v13, v6);
      v30 = v29;
      v55 = sub_10003E8EC(v28, v29, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v51);
      v31 = swift_bridgeObjectRelease(v30);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v15, v6, v31);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Did send command %s successfully", v27, 0xCu);
      v32 = v52;
      swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v22, v54);
  }
  else
  {
    static WOLog.dataLink.getter(v20);
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v33(v10, a3, v6);
    swift_errorRetain(a2);
    v34 = swift_errorRetain(a2);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      v38 = swift_slowAlloc(22, -1);
      LODWORD(v51) = v37;
      v39 = v38;
      v52 = swift_slowAlloc(64, -1);
      v56 = v52;
      *(_DWORD *)v39 = 136315394;
      v33(v13, (uint64_t)v10, v6);
      v40 = String.init<A>(describing:)(v13, v6);
      v41 = v35;
      v43 = v42;
      v55 = sub_10003E8EC(v40, v42, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v39 + 4);
      v44 = swift_bridgeObjectRelease(v43);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v44);
      *(_WORD *)(v39 + 12) = 2080;
      v55 = a2;
      v45 = sub_100047110(&qword_10081F7B8);
      v46 = Optional.description.getter(v45);
      v48 = v47;
      v55 = sub_10003E8EC(v46, v47, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v39 + 14);
      swift_bridgeObjectRelease(v48);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v51, "We sent command %s and got back error %s", (uint8_t *)v39, 0x16u);
      v49 = v52;
      swift_arrayDestroy(v52, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v39, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v19, v54);
  }
}

uint64_t sub_100359DB0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v25, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3);
  if (result)
  {
    v11 = (void *)result;
    static WOLog.dataLink.getter(result);
    swift_errorRetain(a2);
    v12 = swift_errorRetain(a2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc(18, -1);
      v22 = v6;
      v16 = v15;
      v17 = swift_slowAlloc(32, -1);
      v24 = v17;
      *(_DWORD *)v16 = 67109378;
      LODWORD(v23) = a1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, (char *)&v23 + 4, v16 + 4);
      *(_WORD *)(v16 + 8) = 2080;
      v23 = a2;
      v18 = sub_100047110(&qword_10081F7B8);
      v19 = Optional.description.getter(v18);
      v21 = v20;
      v23 = sub_10003E8EC(v19, v20, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v16 + 10);
      swift_bridgeObjectRelease(v21);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Ending mirroring: %{BOOL}d with error %s", (uint8_t *)v16, 0x12u);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v22);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  return result;
}

void sub_100359FEC(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t Strong;
  void *v26;
  id v27;
  id v28;
  NSObject *v29;
  int v30;
  _BOOL4 v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  Swift::String v40;
  void *object;
  Swift::String v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  __n128 v59;
  void *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t *v91;
  uint64_t *p_aBlock;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t aBlock;
  _QWORD v114[4];
  uint64_t v115;
  char v116[32];
  uint64_t v117;
  uint64_t v118;

  v109 = a4;
  LODWORD(v110) = a1;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v107 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v105 = *(_QWORD *)(v9 - 8);
  v106 = v9;
  __chkstk_darwin(v9);
  v104 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for DispatchTime(0);
  v101 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v12 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v102 = (char *)&v93 - v14;
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v93 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v93 - v23;
  a3 += 16;
  swift_beginAccess(a3, v116, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (!Strong)
    return;
  v26 = (void *)Strong;
  v98 = v7;
  v99 = v6;
  v100 = v21;
  static WOLog.dataLink.getter(Strong);
  swift_errorRetain(a2);
  v27 = v26;
  swift_errorRetain(a2);
  v28 = v27;
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.default.getter(v29);
  v31 = os_log_type_enabled(v29, (os_log_type_t)v30);
  v32 = (_QWORD *)&unk_10082F000;
  v108 = v15;
  v97 = v18;
  if (v31)
  {
    v94 = v12;
    LODWORD(v96) = v30;
    v33 = swift_slowAlloc(38, -1);
    v95 = swift_slowAlloc(96, -1);
    v112 = v95;
    *(_DWORD *)v33 = 67109890;
    LODWORD(aBlock) = v110 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v33 + 4);
    *(_WORD *)(v33 + 8) = 2080;
    aBlock = a2;
    v34 = sub_100047110(&qword_10081F7B8);
    v35 = Optional.description.getter(v34);
    v37 = v36;
    aBlock = sub_10003E8EC(v35, v36, &v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v114, v33 + 10);
    swift_bridgeObjectRelease(v37);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    *(_WORD *)(v33 + 18) = 2080;
    v38 = 0xE000000000000000;
    v39 = v109;
    if (v109 < 1)
    {
      v43 = 0;
    }
    else
    {
      aBlock = 0;
      v114[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      swift_bridgeObjectRelease(v114[0]);
      aBlock = 0x6120797274657220;
      v114[0] = 0xEF2074706D657474;
      v111 = v39;
      v40._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = v40._object;
      String.append(_:)(v40);
      swift_bridgeObjectRelease(object);
      v42._countAndFlagsBits = 44;
      v42._object = (void *)0xE100000000000000;
      String.append(_:)(v42);
      v43 = aBlock;
      v38 = v114[0];
    }
    aBlock = sub_10003E8EC(v43, v38, &v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v114, v33 + 20);
    swift_bridgeObjectRelease(v38);
    *(_WORD *)(v33 + 28) = 2080;
    v15 = *(_QWORD *)((char *)v28 + OBJC_IVAR___WODataLinkMonitor_currentWorkoutState);
    v12 = v94;
    v46 = 0x657669746341;
    v47 = 0xE600000000000000;
    switch(v15)
    {
      case 0:
        goto LABEL_11;
      case 1:
        v46 = 0xD00000000000001ELL;
        v47 = 0x800000010069ACA0;
        goto LABEL_11;
      case 2:
        v46 = 0x726F576E49746F4ELL;
        v47 = 0xEC00000074756F6BLL;
        goto LABEL_11;
      case 3:
        v47 = 0x800000010069AC80;
        v46 = 0xD000000000000012;
LABEL_11:
        aBlock = sub_10003E8EC(v46, v47, &v112);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v114, v33 + 30);

        swift_bridgeObjectRelease(v47);
        _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v96, "Ending workout: %{BOOL}d with error %s,%s state: %s", (uint8_t *)v33, 0x26u);
        v15 = v95;
        swift_arrayDestroy(v95, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v15, -1, -1);
        swift_slowDealloc(v33, -1, -1);

        v44 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
        v45 = v44(v24, v108);
        v32 = &unk_10082F000;
        goto LABEL_12;
      default:
        goto LABEL_38;
    }
  }
  swift_errorRelease(a2);
  swift_errorRelease(a2);

  v44 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  v45 = v44(v24, v15);
  v39 = v109;
LABEL_12:
  v48 = (char *)v32[224];
  v49 = *(_QWORD *)&v48[(_QWORD)v28];
  if ((v110 & 1) != 0)
  {
    if (v49 == 3)
    {
      *(_QWORD *)&v48[(_QWORD)v28] = 0;
      v50 = v97;
      static WOLog.dataLink.getter(v45);
      v51 = (char *)v28;
      v52 = Logger.logObject.getter(v51);
      v53 = static os_log_type_t.default.getter(v52);
      if (os_log_type_enabled(v52, v53))
      {
        v110 = (void (*)(char *, uint64_t))v44;
        v54 = swift_slowAlloc(22, -1);
        v55 = swift_slowAlloc(64, -1);
        aBlock = v55;
        *(_DWORD *)v54 = 136315394;
        v112 = sub_10003E8EC(0xD000000000000012, 0x800000010069AC80, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &aBlock, v54 + 4);
        swift_bridgeObjectRelease(0x800000010069AC80);
        *(_WORD *)(v54 + 12) = 2080;
        v56 = *(_QWORD *)&v48[(_QWORD)v28];
        v57 = 0x657669746341;
        v58 = 0xE600000000000000;
        switch(v56)
        {
          case 0:
            goto LABEL_33;
          case 1:
            v57 = 0xD00000000000001ELL;
            v58 = 0x800000010069ACA0;
            goto LABEL_33;
          case 2:
            v57 = 0x726F576E49746F4ELL;
            v58 = 0xEC00000074756F6BLL;
            goto LABEL_33;
          case 3:
            v58 = 0x800000010069AC80;
            v57 = 0xD000000000000012;
LABEL_33:
            v112 = sub_10003E8EC(v57, v58, &aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &aBlock, v54 + 14);

            swift_bridgeObjectRelease(v58);
            _os_log_impl((void *)&_mh_execute_header, v52, v53, "Ending workout: success, changed state from %s to %s", (uint8_t *)v54, 0x16u);
            swift_arrayDestroy(v55, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v55, -1, -1);
            swift_slowDealloc(v54, -1, -1);

            v91 = &v117;
            goto LABEL_34;
          default:

            v112 = v56;
            goto LABEL_42;
        }
      }

      v44(v50, v108);
    }
    else
    {

    }
    return;
  }
  *(_QWORD *)&v48[(_QWORD)v28] = 3;
  if (__OFADD__(v39, 1))
  {
    __break(1u);
LABEL_38:

    aBlock = v15;
    p_aBlock = &aBlock;
LABEL_43:
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DataLinkWorkoutState, p_aBlock, &type metadata for DataLinkWorkoutState, &type metadata for Int);
    __break(1u);
    JUMPOUT(0x10035ACA8);
  }
  v96 = v49;
  v97 = v48;
  v110 = (void (*)(char *, uint64_t))v44;
  sub_10002FB54();
  v60 = (void *)static OS_dispatch_queue.main.getter(v59);
  static DispatchTime.now()(v60);
  v61 = (char *)v28;
  v62 = v102;
  + infix(_:_:)(v12, 3.0);
  v109 = *(_QWORD *)(v101 + 8);
  v63 = v103;
  ((void (*)(char *, uint64_t))v109)(v12, v103);
  v64 = swift_allocObject(&unk_100797F98, 24, 7);
  swift_unknownObjectWeakInit(v64 + 16, v61);
  v65 = swift_allocObject(&unk_1007980B0, 32, 7);
  *(_QWORD *)(v65 + 16) = v64;
  *(_QWORD *)(v65 + 24) = v39 + 1;
  v101 = v39 + 1;
  v114[3] = sub_10035B858;
  v115 = v65;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v114[0] = 1107296256;
  v114[1] = sub_10002D0F8;
  v114[2] = &unk_1007980C8;
  v66 = _Block_copy(&aBlock);
  swift_release(v115);
  v67 = v104;
  static DispatchQoS.unspecified.getter(v68);
  aBlock = (uint64_t)_swiftEmptyArrayStorage;
  v69 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v70 = sub_100047110(&qword_100828C80);
  v71 = sub_10002FB08();
  v72 = v107;
  v73 = v99;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v70, v71, v99, v69);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v62, v67, v72, v66);
  _Block_release(v66);

  (*(void (**)(char *, uint64_t))(v98 + 8))(v72, v73);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v67, v106);
  v74 = v62;
  v75 = v61;
  v76 = ((uint64_t (*)(char *, uint64_t))v109)(v74, v63);
  v77 = v100;
  static WOLog.dataLink.getter(v76);
  v78 = v61;
  v79 = Logger.logObject.getter(v78);
  v80 = static os_log_type_t.default.getter(v79);
  if (os_log_type_enabled(v79, v80))
  {
    v81 = swift_slowAlloc(42, -1);
    v82 = swift_slowAlloc(64, -1);
    *(_DWORD *)v81 = 134218754;
    v112 = v101;
    aBlock = v82;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &aBlock, v81 + 4);
    *(_WORD *)(v81 + 12) = 2048;
    v112 = 0x4008000000000000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &aBlock, v81 + 14);
    *(_WORD *)(v81 + 22) = 2080;
    v83 = v96;
    v84 = 0x657669746341;
    v85 = 0xE600000000000000;
    v86 = 0x657669746341;
    v87 = v97;
    switch(v96)
    {
      case 0:
        goto LABEL_26;
      case 1:
        v86 = 0xD00000000000001ELL;
        v85 = 0x800000010069ACA0;
        goto LABEL_26;
      case 2:
        v86 = 0x726F576E49746F4ELL;
        v85 = 0xEC00000074756F6BLL;
        goto LABEL_26;
      case 3:
        v85 = 0x800000010069AC80;
        v86 = 0xD000000000000012;
LABEL_26:
        v112 = sub_10003E8EC(v86, v85, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &aBlock, v81 + 24);
        swift_bridgeObjectRelease(v85);
        *(_WORD *)(v81 + 32) = 2080;
        v89 = *(_QWORD *)&v87[(_QWORD)v75];
        v90 = 0xE600000000000000;
        switch(v89)
        {
          case 0:
            goto LABEL_30;
          case 1:
            v84 = 0xD00000000000001ELL;
            v90 = 0x800000010069ACA0;
            goto LABEL_30;
          case 2:
            v84 = 0x726F576E49746F4ELL;
            v90 = 0xEC00000074756F6BLL;
            goto LABEL_30;
          case 3:
            v90 = 0x800000010069AC80;
            v84 = 0xD000000000000012;
LABEL_30:
            v112 = sub_10003E8EC(v84, v90, &aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &aBlock, v81 + 34);

            swift_bridgeObjectRelease(v90);
            _os_log_impl((void *)&_mh_execute_header, v79, v80, "Ending workout: failed, retry attempt %ld scheduled in %f seconds, state changed from %s to %s", (uint8_t *)v81, 0x2Au);
            swift_arrayDestroy(v82, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v82, -1, -1);
            swift_slowDealloc(v81, -1, -1);

            v91 = &v118;
LABEL_34:
            v88 = (char *)*(v91 - 32);
            goto LABEL_35;
          default:

            v112 = v89;
            goto LABEL_42;
        }
      default:

        v112 = v83;
LABEL_42:
        p_aBlock = &v112;
        break;
    }
    goto LABEL_43;
  }

  v88 = v77;
LABEL_35:
  v110(v88, v108);
}

void sub_10035ACE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  char *v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56[24];

  v4 = type metadata accessor for DataLinkCommand(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - v16;
  a1 += 16;
  swift_beginAccess(a1, v56, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v19 = (char *)Strong;
    v53 = OBJC_IVAR___WODataLinkMonitor_currentWorkoutState;
    if (*(_QWORD *)(Strong + OBJC_IVAR___WODataLinkMonitor_currentWorkoutState) == 3)
    {
      if (a2 <= 5)
      {
        static WOLog.dataLink.getter(Strong);
        v35 = v19;
        v36 = Logger.logObject.getter(v35);
        LODWORD(v50) = static os_log_type_t.default.getter(v36);
        if (os_log_type_enabled(v36, (os_log_type_t)v50))
        {
          v51 = v9;
          v52 = v8;
          v37 = a2;
          v38 = swift_slowAlloc(42, -1);
          v48 = swift_slowAlloc(32, -1);
          v54 = v37;
          v55 = v48;
          *(_DWORD *)v38 = 134218754;
          v49 = v37;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v38 + 4);
          *(_WORD *)(v38 + 12) = 2048;
          v54 = 5;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v38 + 14);
          *(_WORD *)(v38 + 22) = 2048;
          v54 = 0x4008000000000000;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v38 + 24);
          *(_WORD *)(v38 + 32) = 2080;
          v27 = *(_QWORD *)&v19[v53];
          v39 = 0x657669746341;
          v40 = 0xE600000000000000;
          switch(v27)
          {
            case 0:
              break;
            case 1:
              v39 = 0xD00000000000001ELL;
              v40 = 0x800000010069ACA0;
              break;
            case 2:
              v39 = 0x726F576E49746F4ELL;
              v40 = 0xEC00000074756F6BLL;
              break;
            case 3:
              v40 = 0x800000010069AC80;
              v39 = 0xD000000000000012;
              break;
            default:

              goto LABEL_33;
          }
          v54 = sub_10003E8EC(v39, v40, &v55);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v38 + 34);

          swift_bridgeObjectRelease(v40);
          _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v50, "Ending workout: retry (attempt: %ld, max: %ld, seconds: %f), state: %s", (uint8_t *)v38, 0x2Au);
          v42 = v48;
          swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v42, -1, -1);
          swift_slowDealloc(v38, -1, -1);

          (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v52);
          a2 = v49;
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
        }
        (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DataLinkCommand.end(_:), v4);
        v43 = swift_allocObject(&unk_100797F98, 24, 7);
        swift_unknownObjectWeakInit(v43 + 16, v35);
        v44 = swift_allocObject(&unk_100798100, 32, 7);
        *(_QWORD *)(v44 + 16) = v43;
        *(_QWORD *)(v44 + 24) = a2;
        swift_retain(v43);
        dispatch thunk of DataLinkClient.send(command:acknowledged:)(v7, sub_100233D48, v44);
        v45 = swift_release(v44);
        (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v45);

        swift_release(v43);
      }
      else
      {
        static WOLog.dataLink.getter(Strong);
        v20 = v19;
        v21 = Logger.logObject.getter(v20);
        v22 = static os_log_type_t.default.getter(v21);
        if (os_log_type_enabled(v21, v22))
        {
          v51 = v9;
          v23 = swift_slowAlloc(42, -1);
          v24 = swift_slowAlloc(32, -1);
          v25 = a2;
          v26 = v24;
          v54 = v25;
          v55 = v24;
          *(_DWORD *)v23 = 134218754;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v23 + 4);
          *(_WORD *)(v23 + 12) = 2048;
          v54 = 5;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v23 + 14);
          *(_WORD *)(v23 + 22) = 2048;
          v54 = 0x4008000000000000;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v23 + 24);
          *(_WORD *)(v23 + 32) = 2080;
          v27 = *(_QWORD *)&v19[v53];
          v52 = v8;
          v28 = 0x657669746341;
          v29 = 0xE600000000000000;
          switch(v27)
          {
            case 0:
              break;
            case 1:
              v28 = 0xD00000000000001ELL;
              v29 = 0x800000010069ACA0;
              break;
            case 2:
              v28 = 0x726F576E49746F4ELL;
              v29 = 0xEC00000074756F6BLL;
              break;
            case 3:
              v29 = 0x800000010069AC80;
              v28 = 0xD000000000000012;
              break;
            default:
              goto LABEL_30;
          }
          v54 = sub_10003E8EC(v28, v29, &v55);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v23 + 34);

          swift_bridgeObjectRelease(v29);
          _os_log_impl((void *)&_mh_execute_header, v21, v22, "Ending workout: reached max retry count, changing presence to false, retry (attempt: %ld, max: %ld, seconds: %f), state: %s", (uint8_t *)v23, 0x2Au);
          swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v26, -1, -1);
          swift_slowDealloc(v23, -1, -1);

          (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v52);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        }
        if (*(_QWORD *)&v19[v53] >= 4uLL)
        {
          v55 = *(_QWORD *)&v19[v53];
          v46 = &v55;
LABEL_34:
          _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DataLinkWorkoutState, v46, &type metadata for DataLinkWorkoutState, &type metadata for Int);
          __break(1u);
        }
        else
        {
          sub_100005374(2, (*(_QWORD *)&v19[v53] & 0xFLL) == 3);

        }
      }
    }
    else
    {
      static WOLog.dataLink.getter(Strong);
      v20 = v19;
      v30 = Logger.logObject.getter(v20);
      v31 = static os_log_type_t.default.getter(v30);
      if (os_log_type_enabled(v30, v31))
      {
        v51 = v9;
        v52 = v8;
        v32 = swift_slowAlloc(52, -1);
        v50 = swift_slowAlloc(64, -1);
        v55 = v50;
        *(_DWORD *)v32 = 136316162;
        v33 = 0x800000010069AC80;
        v54 = sub_10003E8EC(0xD000000000000012, 0x800000010069AC80, &v55);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v32 + 4);
        *(_WORD *)(v32 + 12) = 2048;
        v54 = a2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v32 + 14);
        *(_WORD *)(v32 + 22) = 2048;
        v54 = 5;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v32 + 24);
        *(_WORD *)(v32 + 32) = 2048;
        v54 = 0x4008000000000000;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v32 + 34);
        *(_WORD *)(v32 + 42) = 2080;
        v27 = *(_QWORD *)&v19[v53];
        v34 = 0xD000000000000012;
        switch(v27)
        {
          case 0:
            v33 = 0xE600000000000000;
            v34 = 0x657669746341;
            break;
          case 1:
            v34 = 0xD00000000000001ELL;
            v33 = 0x800000010069ACA0;
            break;
          case 2:
            v34 = 0x726F576E49746F4ELL;
            v33 = 0xEC00000074756F6BLL;
            break;
          case 3:
            break;
          default:
LABEL_30:

LABEL_33:
            v54 = v27;
            v46 = &v54;
            goto LABEL_34;
        }
        v54 = sub_10003E8EC(v34, v33, &v55);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v32 + 44);

        swift_bridgeObjectRelease(v33);
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Ending workout: stopped retry, current state is not %s anymore, retry (attempt: %ld, max: %ld, seconds: %f), state: %s", (uint8_t *)v32, 0x34u);
        v41 = v50;
        swift_arrayDestroy(v50, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v41, -1, -1);
        swift_slowDealloc(v32, -1, -1);

        (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v52);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      }
    }
  }
}

uint64_t sub_10035B628@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for DataLinkMonitor();
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_10035B660()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10035B684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for DataLinkCommand(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10035B6F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DataLinkCommand(0) - 8) + 80);
  sub_100359838(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_10035B738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for DataLinkCommand(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10035B798(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DataLinkCommand(0) - 8) + 80);
  return sub_100359950(a1, a2, v2 + ((v5 + 16) & ~v5));
}

void sub_10035B7E4()
{
  uint64_t v0;

  sub_100359704(v0);
}

void sub_10035B7EC(uint64_t a1)
{
  uint64_t v1;

  sub_100358B6C(a1, v1);
}

uint64_t sub_10035B7F4(int a1)
{
  uint64_t v1;

  return sub_100358BBC(a1, v1);
}

void sub_10035B7FC(void *a1)
{
  uint64_t v1;

  sub_100358FB4(a1, v1);
}

uint64_t sub_10035B804()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_10035B828()
{
  uint64_t v0;

  sub_100358EE8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_10035B834()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10035B858()
{
  uint64_t v0;

  sub_10035ACE8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10035B870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FitnessApp31DailyGoalChartPointDataProvider__dailyGoals;
  v2 = sub_100047110(&qword_10082F870);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10035B8C4()
{
  return type metadata accessor for DailyGoalChartPointDataProvider(0);
}

uint64_t type metadata accessor for DailyGoalChartPointDataProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_10082F7A8;
  if (!qword_10082F7A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DailyGoalChartPointDataProvider);
  return result;
}

void sub_10035B908(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_10035B974(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

void sub_10035B974(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10082F7B8)
  {
    v2 = sub_100007050((uint64_t *)&unk_10082F7C0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10082F7B8);
  }
}

uint64_t sub_10035B9CC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for DailyGoalChartPointDataProvider(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

char *sub_10035BA08(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  NSString v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  char *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  Class isa;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  objc_super v35;

  v6 = OBJC_IVAR____TtC10FitnessApp60ActivitySharingFriendDetailCompetitionTotalWinsTableViewCell_totalWinsView;
  v7 = objc_allocWithZone((Class)ASCompetitionScoreView);
  v8 = v3;
  v9 = objc_msgSend(v7, "init");
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v6] = v9;

  if (a3)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v11, v12, v13, v14, v15, v16, v17);
  }
  else
  {
    v10 = 0;
  }
  v35.receiver = v8;
  v35.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailCompetitionTotalWinsTableViewCell();
  v18 = objc_msgSendSuper2(&v35, "initWithStyle:reuseIdentifier:", a1, v10);

  v19 = (char *)v18;
  v20 = objc_msgSend(v19, "contentView");
  v21 = OBJC_IVAR____TtC10FitnessApp60ActivitySharingFriendDetailCompetitionTotalWinsTableViewCell_totalWinsView;
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC10FitnessApp60ActivitySharingFriendDetailCompetitionTotalWinsTableViewCell_totalWinsView]);

  v22 = (void *)objc_opt_self(NSLayoutConstraint);
  v23 = *(id *)&v19[v21];
  v24 = objc_msgSend(v19, "contentView");
  v25 = (CHWorkoutDetailHeartRateTableViewCell *)UIView.constraintsPinningToEdgesOfView(_:supportingRTL:insets:leadingPriority:trailingPriority:topPriority:bottomPriority:)(0.0, 16.0, 0.0, 16.0, 1000.0, 1000.0, 1000.0, 1000.0);

  sub_100039898();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v25, v27, v28, v29, v30, v31, v32, v33);
  objc_msgSend(v22, "activateConstraints:", isa);

  return v19;
}

void sub_10035BC10(void *a1)
{
  char *v1;
  uint64_t v3;
  unsigned int v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  Class isa;

  v3 = OBJC_IVAR____TtC10FitnessApp60ActivitySharingFriendDetailCompetitionTotalWinsTableViewCell_totalWinsView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp60ActivitySharingFriendDetailCompetitionTotalWinsTableViewCell_totalWinsView], "removeFromSuperview");
  v4 = objc_msgSend(a1, "isCompetitionActive");
  v5 = (void *)objc_opt_self(ASCompetitionScoreViewConfiguration);
  if (v4)
  {
    v6 = objc_msgSend(v5, "companionTotalWinsFriendDetailConfiguration");
    if (!v6)
    {
LABEL_9:
      __break(1u);
      goto LABEL_10;
    }
    v7 = v6;
    objc_msgSend(v7, "setPrimaryScoreBaselineOffset:", 9.0);
    objc_msgSend(v7, "setBottomMargin:", 7.0);

LABEL_6:
    objc_msgSend(v7, "setNameBaselineOffset:", 15.0);
    v9 = objc_msgSend(objc_allocWithZone((Class)ASCompetitionScoreView), "initWithConfiguration:", v7);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v11 = *(void **)&v1[v3];
      *(_QWORD *)&v1[v3] = v10;

      v12 = *(id *)&v1[v3];
      v13 = objc_msgSend(a1, "currentCompetition");
      objc_msgSend(v12, "setFriend:competition:", a1, v13);

      v14 = objc_msgSend(v1, "contentView");
      objc_msgSend(v14, "addSubview:", *(_QWORD *)&v1[v3]);

      v15 = (void *)objc_opt_self(NSLayoutConstraint);
      v16 = *(id *)&v1[v3];
      v17 = objc_msgSend(v1, "contentView");
      v18 = (CHWorkoutDetailHeartRateTableViewCell *)UIView.constraintsPinningToEdgesOfView(_:supportingRTL:insets:leadingPriority:trailingPriority:topPriority:bottomPriority:)(0.0, 16.0, 0.0, 16.0, 1000.0, 1000.0, 1000.0, 1000.0);

      sub_100039898();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v18, v19, v20, v21, v22, v23, v24, v25);
      objc_msgSend(v15, "activateConstraints:", isa);

      return;
    }
    __break(1u);
    goto LABEL_9;
  }
  v8 = objc_msgSend(v5, "companionTotalWinsStandaloneFriendDetailConfiguration");
  if (v8)
  {
    v7 = v8;
    objc_msgSend(v8, "setPrimaryScoreBaselineOffset:", 12.0);
    goto LABEL_6;
  }
LABEL_10:
  __break(1u);
}

id sub_10035BF5C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailCompetitionTotalWinsTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivitySharingFriendDetailCompetitionTotalWinsTableViewCell()
{
  return objc_opt_self(_TtC10FitnessApp60ActivitySharingFriendDetailCompetitionTotalWinsTableViewCell);
}

unint64_t sub_10035BFBC()
{
  return 0xD00000000000003CLL;
}

CHWorkoutDetailHeartRateTableViewCell *sub_10035BFD8()
{
  uint64_t v0;
  CHWorkoutDetailHeartRateTableViewCell *v1;
  CHWorkoutDetailHeartRateTableViewCell **v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  char v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  _QWORD *v75;
  void (*v76)(_QWORD *);
  _QWORD *v77;
  _QWORD *v78;
  char v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  SEL v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94[2];
  _QWORD v95[4];
  __int128 v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[5];
  _QWORD v102[3];
  uint64_t v103;
  uint64_t v104;
  char v105[24];
  CHWorkoutDetailHeartRateTableViewCell *v106;

  v1 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10035FF38(18);
  v106 = v1;
  v2 = (CHWorkoutDetailHeartRateTableViewCell **)(v0 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards, v105, 0, 0);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2)->cellPadding;
  if (v4)
  {
    v5 = (uint64_t)&v3[1];
    v91 = *v2;
    swift_bridgeObjectRetain(v3);
    do
    {
      sub_1000252E0(v5, (uint64_t)v102);
      v13 = v103;
      v14 = v104;
      sub_100016804(v102, v103);
      v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
      v17 = v16;
      v19 = v18;
      sub_1000EB41C(v15, v16, v18);
      if (v19 != 3 || (v15 | v17) != 0)
      {
        v92 = v5;
        v93 = v4;
        v21 = v103;
        v22 = v104;
        sub_100016804(v102, v103);
        v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
        v25 = v24;
        v27 = v26;
        v28 = sub_10054FEFC(v23, v24, v26);
        sub_1000EB41C(v23, v25, v27);
        v29 = v106;
        if (!*(_QWORD *)v106->cellPadding || (sub_100049DE0(v28), (v30 & 1) == 0))
        {
          v31 = v103;
          v32 = v104;
          sub_100016804(v102, v103);
          v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
          v35 = v34;
          LOBYTE(v32) = v36;
          v37 = sub_10054FEFC(v33, v34, v36);
          sub_1000EB41C(v33, v35, v32);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v29);
          v101[0] = v29;
          sub_1003FEB18((uint64_t)&_swiftEmptyArrayStorage, v37, isUniquelyReferenced_nonNull_native);
          v106 = (CHWorkoutDetailHeartRateTableViewCell *)v101[0];
          swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v39, v40, v41, v42, v43, v44, v45);
        }
        v46 = v103;
        v47 = v104;
        sub_100016804(v102, v103);
        v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 16))(v46, v47);
        v50 = v49;
        v52 = v51;
        sub_10035E8C0(v48, v49, v51);
        sub_1000EB41C(v48, v50, v52);
        v53 = v99;
        v54 = v100;
        sub_100016804(&v98, v99);
        v55 = v103;
        v56 = v104;
        sub_100016804(v102, v103);
        v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 16))(v55, v56);
        v59 = v58;
        v61 = v60;
        v62 = v103;
        v63 = v104;
        sub_100016804(v102, v103);
        v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 24))(v62, v63) & 1;
        sub_1000252E0((uint64_t)v102, (uint64_t)&v96);
        v66 = v103;
        v65 = v104;
        sub_100016804(v102, v103);
        v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 32))(v66, v65);
        (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, __int128 *, _QWORD, uint64_t, uint64_t, CHWorkoutDetailHeartRateTableViewCell *))(v54 + 16))(v101, v57, v59, v61, v64, &v96, v67 & 1, v53, v54, v91);
        sub_1000EB41C(v57, v59, v61);
        sub_10001BE90((uint64_t)&v96, &qword_100832410);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(&v98);
        v68 = v103;
        v69 = v104;
        sub_100016804(v102, v103);
        v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 16))(v68, v69);
        v72 = v71;
        LOBYTE(v69) = v73;
        v74 = sub_10054FEFC(v70, v71, v73);
        sub_1000EB41C(v70, v72, v69);
        v76 = sub_1004A2128(v95, v74);
        if (*v75)
        {
          v77 = v75;
          sub_1001B7120((uint64_t)v101, (uint64_t)&v96);
          sub_1000252E0((uint64_t)v102, (uint64_t)v94);
          v5 = v92;
          v4 = v93;
          if (v97)
          {
            _s10FitnessApp24HistoryViewActionContextVwxx_0(v94);
            sub_10002411C(&v96, (uint64_t)&v98);
          }
          else
          {
            sub_10002411C(v94, (uint64_t)&v98);
            sub_10001BE90((uint64_t)&v96, &qword_100832410);
          }
          v78 = (_QWORD *)*v77;
          v79 = swift_isUniquelyReferenced_nonNull_native(*v77);
          *v77 = v78;
          if ((v79 & 1) == 0)
          {
            v78 = sub_10013FD04(0, v78[2] + 1, 1, v78);
            *v77 = v78;
          }
          v81 = v78[2];
          v80 = v78[3];
          if (v81 >= v80 >> 1)
          {
            v78 = sub_10013FD04((_QWORD *)(v80 > 1), v81 + 1, 1, v78);
            *v77 = v78;
          }
          v78[2] = v81 + 1;
          sub_10002411C(&v98, (uint64_t)&v78[5 * v81 + 4]);
          ((void (*)(_QWORD *, _QWORD))v76)(v95, 0);
          sub_10001BE90((uint64_t)v101, &qword_100832410);
        }
        else
        {
          ((void (*)(_QWORD *, _QWORD))v76)(v95, 0);
          sub_10001BE90((uint64_t)v101, &qword_100832410);
          v5 = v92;
          v4 = v93;
        }
      }
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v102);
      v5 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v91, v6, v7, v8, v9, v10, v11, v12);
    v1 = v106;
  }
  __chkstk_darwin(v3);
  swift_bridgeObjectRetain(v1);
  sub_100364504(v82, (void (*)(uint64_t, uint64_t))sub_100364980);
  swift_bridgeObjectRelease(v1, v83, v84, v85, v86, v87, v88, v89);
  return v106;
}

double sub_10035C4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  uint64_t v26;
  __int128 v27[2];
  __int128 v28[3];

  ObjectType = swift_getObjectType(v2);
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
  v13 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v2);
  sub_1000252E0(a1, (uint64_t)v28);
  sub_1000252E0(a2, (uint64_t)v27);
  v14 = swift_allocObject(&unk_1007987B0, 112, 7);
  *(_QWORD *)(v14 + 16) = v13;
  sub_10002411C(v28, v14 + 24);
  sub_10002411C(v27, v14 + 64);
  *(_QWORD *)(v14 + 104) = ObjectType;
  aBlock[4] = sub_100365688;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007987C8;
  v15 = _Block_copy(aBlock);
  swift_retain(v13);
  static DispatchQoS.unspecified.getter(v16);
  v24 = _swiftEmptyArrayStorage;
  v17 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_100047110(&qword_100828C80);
  v19 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v18, v19, v6, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v20 = v26;
  swift_release(v13);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

double sub_10035C744()
{
  return sub_10035FB24((uint64_t)sub_100364988, (uint64_t)&unk_100798430);
}

id sub_10035C758()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  objc_super v10;
  _QWORD v11[3];
  uint64_t v12;

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context]+ OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDataProvider)+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers), "removeObject:", v0);
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_notificationCenterObservers];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (void *)objc_opt_self(NSNotificationCenter);
    v4 = v1 + 32;
    swift_bridgeObjectRetain_n(v1, 2);
    do
    {
      sub_10003E9BC(v4, (uint64_t)v11);
      v5 = objc_msgSend(v3, "defaultCenter");
      v6 = v12;
      v7 = sub_100016804(v11, v12);
      v8 = _bridgeAnythingToObjectiveC<A>(_:)(v7, v6);
      objc_msgSend(v5, "removeObserver:", v8);
      swift_unknownObjectRelease(v8);

      _s10FitnessApp24HistoryViewActionContextVwxx_0(v11);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n(v1, 2);
  }
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for SummaryCoordinator();
  return objc_msgSendSuper2(&v10, "dealloc");
}

double sub_10035CADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  _QWORD v15[2];
  uint64_t v16;
  _QWORD *v17;
  _QWORD aBlock[5];
  uint64_t v19;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v16 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
  v8 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v0);
  aBlock[4] = sub_1003655E4;
  v19 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_100798778;
  v9 = _Block_copy(aBlock);
  swift_retain(v8);
  static DispatchQoS.unspecified.getter(v10);
  v17 = _swiftEmptyArrayStorage;
  v11 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = sub_100047110(&qword_100828C80);
  v13 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v17, v12, v13, v1, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release(v19);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

void sub_10035CCF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  char *v12;
  CHWorkoutDetailHeartRateTableViewCell **v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  __n128 v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  char v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  char *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t i;
  uint64_t v30;
  Class isa;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  const char *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  char *v54;
  void (*v55)(_QWORD *, _QWORD, uint64_t, __n128);
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  CHWorkoutDetailHeartRateTableViewCell **v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  Class *v67;
  char v68[24];
  char v69[32];

  v2 = type metadata accessor for UUID(0);
  v65 = *(_QWORD *)(v2 - 8);
  v66 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - v6;
  v8 = type metadata accessor for DispatchPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  v62 = v9;
  __chkstk_darwin(v8);
  v60 = (uint64_t *)((char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  a1 += 16;
  swift_beginAccess(a1, v69, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v12 = (char *)Strong;
    v13 = (CHWorkoutDetailHeartRateTableViewCell **)(Strong
                                                   + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards);
    swift_beginAccess(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards, v68, 0, 0);
    v14 = *v13;
    v58 = *(_QWORD *)(*v13)->cellPadding;
    v59 = v13;
    if (v58)
    {
      v15 = v14 + 1;
      v57 = OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue;
      v56 = enum case for DispatchPredicate.onQueue(_:);
      v55 = *(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v62 + 104);
      v52 = v14;
      v16 = swift_bridgeObjectRetain(v14);
      v17 = 0;
      v53 = v15;
      v54 = v12;
      while (1)
      {
        v18 = *(void **)&v12[v57];
        v20 = v60;
        v19 = v61;
        *v60 = v18;
        v55(v20, v56, v19, v16);
        v21 = v18;
        v22 = _dispatchPreconditionTest(_:)(v20);
        (*(void (**)(_QWORD *, uint64_t))(v62 + 8))(v20, v19);
        if ((v22 & 1) == 0)
          break;
        v67 = &v15->super.super.super.super.isa + 5 * v17;
        v23 = *v59;
        v24 = *(_QWORD *)(*v59)->cellPadding;
        v64 = v17;
        if (v24)
        {
          v25 = v23 + 1;
          v26 = (char *)v15 + 40 * v17;
          v27 = (uint64_t *)(v26 + 24);
          v28 = (uint64_t *)(v26 + 32);
          v63 = v23;
          swift_bridgeObjectRetain(v23);
          for (i = 0; i != v24; ++i)
          {
            v30 = *(_QWORD *)v25->cellInset;
            isa = v25[1].super.super.super.super.isa;
            sub_100016804(v25, v30);
            (*((void (**)(uint64_t, Class))isa + 1))(v30, isa);
            v32 = *v27;
            v33 = *v28;
            sub_100016804(v67, *v27);
            (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
            v34 = static UUID.== infix(_:_:)(v7, v4);
            v35 = v66;
            v36 = *(void (**)(char *, uint64_t))(v65 + 8);
            v36(v4, v66);
            v36(v7, v35);
            if ((v34 & 1) != 0)
              break;
            v25 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)v25 + 40);
          }
          v15 = v53;
          v12 = v54;
          swift_bridgeObjectRelease(v63, v37, v38, v39, v40, v41, v42, v43);
        }
        v17 = v64 + 1;
        sub_10058C418(v67);
        if (v17 == v58)
        {

          swift_bridgeObjectRelease(v52, v44, v45, v46, v47, v48, v49, v50);
          return;
        }
      }
      __break(1u);
    }
    else
    {

    }
  }
}

uint64_t sub_10035D018(unint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _BOOL8 v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  void (*v40)(char *, uint64_t, __n128);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  __n128 v58;
  void *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  void *v83;
  id v84;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  _QWORD aBlock[5];
  uint64_t v97;
  uint64_t v98;

  v2 = v1;
  v89 = a1;
  v3 = sub_100047110(&qword_10082F990);
  v92 = *(_QWORD *)(v3 - 8);
  v93 = v3;
  __chkstk_darwin(v3);
  v91 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_100047110(&qword_10082F998);
  v90 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v7);
  v95 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context];
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v9 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDataProvider)+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers), "addObject:", v1);
  v10 = *(char **)(v9 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_historyDataProvider);
  v11 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v2);
  v12 = swift_allocObject(&unk_1007986C0, 32, 7);
  *(_QWORD *)(v12 + 16) = sub_100365450;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = &v10[OBJC_IVAR___CHHistoryDataProvider_onChangeHandlers];
  swift_beginAccess(&v10[OBJC_IVAR___CHHistoryDataProvider_onChangeHandlers], aBlock, 33, 0);
  v14 = *(_QWORD **)v13;
  v15 = v10;
  swift_retain_n(v11, 2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
  *(_QWORD *)v13 = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v14 = sub_10004C908(0, v14[2] + 1, 1, v14);
    *(_QWORD *)v13 = v14;
  }
  v18 = v14[2];
  v17 = v14[3];
  if (v18 >= v17 >> 1)
  {
    v14 = sub_10004C908((_QWORD *)(v17 > 1), v18 + 1, 1, v14);
    *(_QWORD *)v13 = v14;
  }
  v14[2] = v18 + 1;
  v19 = &v14[2 * v18];
  v19[4] = sub_10003BD6C;
  v19[5] = v12;
  swift_endAccess(aBlock);
  swift_release_n(v11, 2);

  v20 = OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider;
  v21 = *(void **)(v9 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider);
  v23 = sub_100028404(&qword_10082F9A0, v22, (uint64_t (*)(uint64_t))type metadata accessor for SummaryCoordinator, (uint64_t)&unk_100628930);
  v24 = v21;
  AAUIAwardsDataProvider.add(observer:)(v2, v23);

  v25 = (v89 >> 2) & 1;
  v26 = *(id *)(v9 + v20);
  AAUIAwardsDataProvider.activate(isFitnessPlusSubscriber:)(v25);
  if (v27)
    swift_errorRelease(v27);

  v28 = type metadata accessor for TaskPriority(0);
  v88 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v89 = v28;
  v29 = (uint64_t)v95;
  v88(v95, 1, 1, v28);
  v30 = (_QWORD *)swift_allocObject(&unk_1007986E8, 40, 7);
  v30[2] = 0;
  v30[3] = 0;
  v30[4] = v2;
  v31 = v2;
  v32 = sub_10020D9C0(v29, (uint64_t)&unk_10082F9B0, (uint64_t)v30);
  swift_release(v32);
  v33 = *(char **)(v9 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendsSetupCoordinator);
  swift_beginAccess(&v33[OBJC_IVAR____TtC10FitnessApp23FriendsSetupCoordinator__activitySharingIsSetup], aBlock, 33, 0);
  v34 = v33;
  v87 = sub_100047110(&qword_10083B500);
  v35 = v6;
  Published.projectedValue.getter(v87);
  swift_endAccess(aBlock);

  v36 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, v31);
  v86 = sub_100028384(&qword_10082F9B8, &qword_10082F998, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v37 = v94;
  v38 = Publisher<>.sink(receiveValue:)(sub_1003654C8, v36, v94, v86);
  v39 = swift_release(v36);
  v40 = *(void (**)(char *, uint64_t, __n128))(v90 + 8);
  v40(v6, v37, v39);
  v41 = *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsSetupStateCancellable];
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsSetupStateCancellable] = v38;
  swift_release(v41);
  v42 = OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusCardDataProvider;
  v43 = *(char **)(v9 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusCardDataProvider);
  swift_beginAccess(&v43[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider__state], aBlock, 33, 0);
  v44 = v43;
  v45 = sub_100047110(&qword_10082F9C0);
  v46 = v91;
  Published.projectedValue.getter(v45);
  swift_endAccess(aBlock);

  v47 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v47 + 16, v31);
  v48 = sub_100028384(&qword_10082F9C8, &qword_10082F990, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v49 = v93;
  v50 = Publisher<>.sink(receiveValue:)(sub_1003654E4, v47, v93, v48);
  v51 = swift_release(v47);
  (*(void (**)(char *, uint64_t, __n128))(v92 + 8))(v46, v49, v51);
  v52 = &v31[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_fitnessPlusDataProviderCancellables];
  swift_beginAccess(&v31[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_fitnessPlusDataProviderCancellables], aBlock, 33, 0);
  AnyCancellable.store(in:)(v52);
  swift_endAccess(aBlock);
  swift_release(v50);
  v53 = *(char **)(v9 + v42);
  swift_beginAccess(&v53[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider__pendingUpdates], aBlock, 33, 0);
  v54 = v53;
  Published.projectedValue.getter(v87);
  swift_endAccess(aBlock);

  v55 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v55 + 16, v31);
  v56 = Publisher<>.sink(receiveValue:)(sub_1003654EC, v55, v37, v86);
  v57 = swift_release(v55);
  v40(v35, v37, v57);
  swift_beginAccess(v52, aBlock, 33, 0);
  AnyCancellable.store(in:)(v52);
  swift_endAccess(aBlock);
  v58 = swift_release(v56);
  v59 = *(void **)(v9 + v42);
  v60 = (uint64_t)v95;
  ((void (*)(char *, uint64_t, uint64_t, unint64_t, __n128))v88)(v95, 1, 1, v89, v58);
  type metadata accessor for MainActor(0);
  v61 = v59;
  v62 = static MainActor.shared.getter(v61);
  v63 = (_QWORD *)swift_allocObject(&unk_100798710, 40, 7);
  v63[2] = v62;
  v63[3] = &protocol witness table for MainActor;
  v63[4] = v61;
  v64 = sub_10020D9C0(v60, (uint64_t)&unk_10082F9D0, (uint64_t)v63);
  swift_release(v64);

  v65 = *(_QWORD *)(v9 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_catalogTipDataProvider);
  v66 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v66 + 16, v31);
  v67 = *(_QWORD *)(v65 + 32);
  v68 = *(_QWORD *)(v65 + 40);
  *(_QWORD *)(v65 + 32) = sub_100365578;
  *(_QWORD *)(v65 + 40) = v66;
  sub_100022BA4(v67, v68);
  v69 = *(char **)(v9 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsDataProvider);
  v70 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v70 + 16, v31);
  v71 = swift_allocObject(&unk_100798738, 32, 7);
  *(_QWORD *)(v71 + 16) = sub_100365594;
  *(_QWORD *)(v71 + 24) = v70;
  v72 = &v69[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_observers];
  swift_beginAccess(&v69[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_observers], aBlock, 33, 0);
  v73 = v69;
  swift_retain_n(v70, 2);
  v74 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v72);
  v98 = *(_QWORD *)v72;
  *(_QWORD *)v72 = 0x8000000000000000;
  sub_100030CA0((uint64_t)sub_10003A294, v71, (uint64_t)v31, v74);
  v75 = *(_QWORD *)v72;
  *(_QWORD *)v72 = v98;
  swift_bridgeObjectRelease(v75);
  swift_endAccess(aBlock);
  swift_release_n(v70, 2);

  v76 = *(char **)(v9 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_metricsDataProvider);
  v77 = &v76[OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_delegate];
  *((_QWORD *)v77 + 1) = &off_1007958D8;
  swift_unknownObjectWeakAssign(v77, v31);
  v78 = v76;
  sub_100347434();

  objc_msgSend(*(id *)(*(_QWORD *)(v9 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext)+ OBJC_IVAR___CHFitnessAppContext_pregnancyStateProvider), "addObserver:", v31);
  v79 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v80 = objc_msgSend((id)objc_opt_self(FIPauseRingsCoordinator), "didUpdatePauseStateNotification");
  v81 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v82 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v82 + 16, v31);
  aBlock[4] = sub_1003655D4;
  v97 = v82;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000398D4;
  aBlock[3] = &unk_100798750;
  v83 = _Block_copy(aBlock);
  v84 = objc_msgSend(v79, "addObserverForName:object:queue:usingBlock:", v80, 0, v81, v83, swift_release(v97).n128_f64[0]);
  _Block_release(v83);

  return swift_unknownObjectRelease(v84);
}

void sub_10035D984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10035DDA4(0x2Eu);

  }
}

uint64_t sub_10035D9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[5] = a4;
  v5 = sub_100047110(&qword_10082F9D8);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10035DA3C, 0, 0);
}

uint64_t sub_10035DA3C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context)
                 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_highlightDataProvider);
  *(_QWORD *)(v0 + 72) = v1;
  swift_retain(v1);
  return swift_task_switch(sub_10035DA9C, v1, 0);
}

uint64_t sub_10035DA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  swift_beginAccess(v1 + OBJC_IVAR____TtC10FitnessApp36ActivitySharingHighlightDataProvider__state, v0 + 16, 33, 0);
  v2 = sub_100047110(&qword_10082D408);
  Published.projectedValue.getter(v2);
  swift_endAccess(v0 + 16);
  swift_release(v1);
  return swift_task_switch(sub_10035DB28, 0, 0);
}

uint64_t sub_10035DB28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v4);
  v6 = sub_100028384(&qword_10082F9E0, &qword_10082F9D8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v7 = Publisher<>.sink(receiveValue:)(sub_1003655DC, v5, v3, v6);
  v8 = swift_release(v5);
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v1, v3, v8);
  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsHighlightStateCancellable);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsHighlightStateCancellable) = v7;
  swift_release(v9);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10035DBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10035DDA4(0x29u);

  }
}

void sub_10035DC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10035DDA4(0x2Cu);

  }
}

void sub_10035DCA0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_10035DDA4(a3);

  }
}

void sub_10035DCF8(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10035DDA4(a2);

  }
}

void sub_10035DD50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10035DDA4(0x2Fu);

  }
}

double sub_10035DDA4(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_log_type_t v12;
  void *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  os_log_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double result;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t aBlock[5];
  uint64_t v40;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static os_log_type_t.default.getter(v9);
  v13 = (void *)HKLogActivity;
  v14 = v12;
  if (os_log_type_enabled(HKLogActivity, v12))
  {
    v33 = v13;
    v15 = swift_slowAlloc(12, -1);
    v34 = v2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc(32, -1);
    v35 = v5;
    v18 = v17;
    aBlock[0] = v17;
    *(_DWORD *)v16 = 136315138;
    v19 = sub_1005E2DFC(a1);
    v21 = v20;
    v38 = (_QWORD *)sub_10003E8EC(v19, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, aBlock, v16 + 4);
    swift_bridgeObjectRelease(v21);
    v22 = v33;
    _os_log_impl((void *)&_mh_execute_header, v33, v14, "[SummaryCoordinator] Processing event %s", v16, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    v23 = v18;
    v5 = v35;
    swift_slowDealloc(v23, -1, -1);
    v24 = v16;
    v2 = v34;
    swift_slowDealloc(v24, -1, -1);

  }
  v25 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16, v2);
  v26 = swift_allocObject(&unk_100798648, 25, 7);
  *(_QWORD *)(v26 + 16) = v25;
  *(_BYTE *)(v26 + 24) = a1;
  aBlock[4] = (uint64_t)sub_100365440;
  v40 = v26;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10002D0F8;
  aBlock[3] = (uint64_t)&unk_100798660;
  v27 = _Block_copy(aBlock);
  swift_retain(v25);
  static DispatchQoS.unspecified.getter(v28);
  v38 = _swiftEmptyArrayStorage;
  v29 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v30 = sub_100047110(&qword_100828C80);
  v31 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v38, v30, v31, v4, v29);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v37);
  swift_release(v40);
  *(_QWORD *)&result = swift_release(v25).n128_u64[0];
  return result;
}

void sub_10035E0E4(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __n128 v30;
  void *v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unsigned int v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;
  char v61[24];
  char v62[8];

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v62, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v45 = v7;
    v46 = v5;
    v47 = v4;
    v48 = (char *)Strong;
    v9 = (_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards);
    swift_beginAccess(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards, v61, 0, 0);
    v44 = &v42;
    v10 = *(_QWORD *)(*v9 + 16);
    swift_bridgeObjectRetain(*v9);
    v43 = v11;
    if (v10)
    {
      v12 = 0;
      v13 = a2;
      v50 = v11 + 32;
      v49 = a2 - 51;
      v14 = _swiftEmptyArrayStorage;
      while (1)
      {
        sub_1000252E0(v50 + 40 * v12, (uint64_t)&v54 + 8);
        v57 = v12;
        sub_10002411C((__int128 *)((char *)&v54 + 8), (uint64_t)v58);
        v15 = v59;
        v16 = v60;
        sub_100016804(v58, v59);
        v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
        if (v19)
        {
          sub_1000EB41C(v17, v18, v19);
          v20 = v59;
          v21 = v60;
          sub_100016804(v58, v59);
          v22 = sub_1002ACA3C(v20, v21);
          v23 = *(_QWORD *)(v22 + 16);
          if (v23)
          {
            v24 = 0;
            while (1)
            {
              switch(*(_BYTE *)(v22 + v24 + 32))
              {
                case '\'':
                  if (v13 != 39)
                    goto LABEL_10;
                  goto LABEL_36;
                case '(':
                  if (v13 == 40)
                    goto LABEL_36;
                  goto LABEL_10;
                case ')':
                  if (v13 == 41)
                    goto LABEL_36;
                  goto LABEL_10;
                case '*':
                  if (v13 == 42)
                    goto LABEL_36;
                  goto LABEL_10;
                case '+':
                  if (v13 == 43)
                    goto LABEL_36;
                  goto LABEL_10;
                case ',':
                  if (v13 == 44)
                    goto LABEL_36;
                  goto LABEL_10;
                case '-':
                  if (v13 == 45)
                    goto LABEL_36;
                  goto LABEL_10;
                case '.':
                  if (v13 == 46)
                    goto LABEL_36;
                  goto LABEL_10;
                case '/':
                  if (v13 == 47)
                    goto LABEL_36;
                  goto LABEL_10;
                case '0':
                  if (v13 == 48)
                    goto LABEL_36;
                  goto LABEL_10;
                case '1':
                  if (v13 == 49)
                    goto LABEL_36;
                  goto LABEL_10;
                case '2':
                  if (v13 != 50)
                    goto LABEL_10;
                  goto LABEL_36;
                default:
                  if (v49 <= 0xFFFFFFF3 && *(unsigned __int8 *)(v22 + v24 + 32) == v13)
                  {
LABEL_36:
                    swift_bridgeObjectRelease(v22);
                    goto LABEL_41;
                  }
LABEL_10:
                  if (v23 == ++v24)
                    goto LABEL_37;
                  break;
              }
            }
          }
LABEL_37:
          swift_bridgeObjectRelease(v22);
        }
        else if (v49 <= 0xFFFFFFF3 && v17 == v13)
        {
LABEL_41:
          *(_QWORD *)&v54 = v12;
          sub_1000252E0((uint64_t)v58, (uint64_t)&v54 + 8);
          goto LABEL_42;
        }
        v55 = 0u;
        v56 = 0u;
        v54 = 0u;
LABEL_42:
        sub_10001BE90((uint64_t)&v57, &qword_100822138);
        if ((_QWORD)v56)
        {
          v51 = v54;
          v52 = v55;
          v53 = v56;
          if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
            v14 = sub_100140DB0(0, v14[2] + 1, 1, v14);
          v26 = v14[2];
          v25 = v14[3];
          if (v26 >= v25 >> 1)
            v14 = sub_100140DB0((_QWORD *)(v25 > 1), v26 + 1, 1, v14);
          v14[2] = v26 + 1;
          v27 = &v14[6 * v26];
          v28 = v51;
          v29 = v53;
          v27[3] = v52;
          v27[4] = v29;
          v27[2] = v28;
        }
        else
        {
          sub_10001BE90((uint64_t)&v54, &qword_10082F988);
        }
        if (++v12 == v10)
          goto LABEL_49;
      }
    }
    v14 = _swiftEmptyArrayStorage;
LABEL_49:
    v30 = swift_bridgeObjectRelease(v43);
    v31 = v48;
    v32 = *(void **)&v48[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue];
    v33 = v45;
    *v45 = v32;
    v34 = v46;
    v35 = v47;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v46 + 104))(v33, enum case for DispatchPredicate.onQueue(_:), v47, v30);
    v36 = v32;
    v37 = _dispatchPreconditionTest(_:)(v33);
    v38 = (*(uint64_t (**)(_QWORD *, uint64_t))(v34 + 8))(v33, v35);
    if ((v37 & 1) == 0)
    {
      __break(1u);
      JUMPOUT(0x10035E5E0);
    }
    __chkstk_darwin(v38);
    *(&v42 - 2) = (uint64_t)v31;
    v39 = sub_100363AC4((uint64_t)v14, (void (*)(__int128 *__return_ptr, _QWORD, uint64_t, __n128))sub_100365718);
    swift_bridgeObjectRelease(v14);
    if (v39[2])
    {
      v40 = swift_allocObject(&unk_100798698, 32, 7);
      *(_QWORD *)(v40 + 16) = v31;
      *(_QWORD *)(v40 + 24) = v39;
      v41 = v31;
      sub_10035F374((uint64_t)sub_1003656C0, v40);
      swift_release(v40);
    }
    else
    {
      swift_bridgeObjectRelease(v39);
    }

  }
}

uint64_t sub_10035E610@<X0>(unint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t result;
  uint64_t *v31;
  _QWORD *v32;
  unint64_t v33;
  _BYTE v37[40];
  __int128 v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;

  v5 = a2[3];
  v6 = a2[4];
  sub_100016804(a2, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  v9 = v8;
  v11 = v10;
  sub_10035E8C0(v7, v8, v10);
  sub_1000EB41C(v7, v9, v11);
  v12 = v41;
  v13 = v42;
  sub_100016804(v40, v41);
  v14 = a2[3];
  v15 = a2[4];
  sub_100016804(a2, v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  v18 = v17;
  v20 = v19;
  v21 = a2[3];
  v22 = a2[4];
  sub_100016804(a2, v21);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22) & 1;
  sub_1000252E0((uint64_t)a2, (uint64_t)v37);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 8))(&v38, v16, v18, v20, v23, v37, *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode), v12, v13);
  sub_1000EB41C(v16, v18, v20);
  sub_10001BE90((uint64_t)v37, &qword_100832410);
  if (!v39)
  {
    sub_10001BE90((uint64_t)&v38, &qword_100832410);
    v29 = v40;
    goto LABEL_5;
  }
  sub_10002411C(&v38, (uint64_t)v43);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v40);
  v24 = v44;
  v25 = v45;
  sub_100016804(v43, v44);
  v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 48))(v24, v25);
  v27 = a2[3];
  v28 = a2[4];
  sub_100016804(a2, v27);
  if (v26 == (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 48))(v27, v28))
  {
    v29 = v43;
LABEL_5:
    result = _s10FitnessApp24HistoryViewActionContextVwxx_0(v29);
    *(_QWORD *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    return result;
  }
  v31 = (uint64_t *)(a3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards);
  swift_beginAccess(a3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards, v40, 33, 0);
  v32 = (_QWORD *)*v31;
  result = swift_isUniquelyReferenced_nonNull_native(*v31);
  *v31 = (uint64_t)v32;
  if ((result & 1) != 0)
  {
    v33 = a1;
    if ((a1 & 0x8000000000000000) == 0)
      goto LABEL_8;
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  result = (uint64_t)sub_1004DEF10(v32);
  v32 = (_QWORD *)result;
  *v31 = result;
  v33 = a1;
  if ((a1 & 0x8000000000000000) != 0)
    goto LABEL_12;
LABEL_8:
  if (v32[2] <= v33)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  sub_1000F1A58(&v32[5 * v33 + 4], v43);
  swift_endAccess(v40);
  sub_1000252E0((uint64_t)v43, a4);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v43);
}

void sub_10035E8C0(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

id sub_10035E900(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void *v30;

  v24 = v23 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_metricsCardFactory;
  v25 = *(void **)(v23 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_metricsCardFactory);
  v26 = *(void **)(v23 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_metricsCardFactory + 8);
  v30 = *(void **)(v24 + 16);
  v22[3] = &type metadata for MetricsCardFactory;
  v22[4] = &off_100798C50;
  *v22 = v25;
  v22[1] = v26;
  v22[2] = v30;
  v27 = v25;
  v28 = v26;
  return v30;
}

void sub_10035EAA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_loadCardFactory);
  v0[3] = &type metadata for LoadCardFactory;
  v0[4] = &off_1007A9CA0;
  *v0 = v2;
  JUMPOUT(0x10035EA84);
}

void sub_10035EACC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;

  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_historyCardFactory);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_historyCardFactory);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_historyCardFactory + 8);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_historyCardFactory + 16);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_historyCardFactory + 24);
  v7 = (void *)v2[4];
  v8 = (void *)v2[5];
  v9 = (void *)v2[6];
  v17 = v2[7];
  v0[3] = &type metadata for HistoryCardFactory;
  v0[4] = &off_100793780;
  v10 = (_QWORD *)swift_allocObject(&unk_100798620, 80, 7);
  *v0 = v10;
  v10[2] = v3;
  v10[3] = v4;
  v10[4] = v6;
  v10[5] = v5;
  v10[6] = v7;
  v10[7] = v8;
  v10[8] = v9;
  v10[9] = v17;
  v11 = v3;
  v12 = v4;
  v13 = v6;
  swift_retain(v5);
  v14 = v7;
  v15 = v8;
  v16 = v9;
  JUMPOUT(0x10035EA80);
}

uint64_t sub_10035EB50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_awardCardFactory;
  v0[3] = (uint64_t)&type metadata for AwardsCardFactory;
  v0[4] = (uint64_t)&off_1007A6108;
  v3 = swift_allocObject(&unk_1007985F8, 80, 7);
  *v0 = v3;
  return sub_100365384(v2, v3 + 16);
}

uint64_t sub_10035EBB0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_fitnessPlusCardFactory;
  v0[3] = (uint64_t)&type metadata for FitnessPlusCardFactory;
  v0[4] = (uint64_t)&off_10078C570;
  v3 = swift_allocObject(&unk_1007985A8, 104, 7);
  *v0 = v3;
  return sub_1003652B8(v2, v3 + 16);
}

uint64_t sub_10035EC10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_catalogTipCardFactory);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_catalogTipCardFactory + 8);
  v0[3] = &type metadata for CatalogTipCardFactory;
  v0[4] = &off_1007AAB68;
  *v0 = v2;
  v0[1] = v3;
  swift_retain(v2);
  return swift_retain(v3);
}

double sub_10035EC60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  _QWORD v18[2];
  uint64_t v19;
  _QWORD *v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v19 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
  v10 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, v1);
  v11 = swift_allocObject(&unk_100798508, 32, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_10036522C;
  v22 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_100798520;
  v12 = _Block_copy(aBlock);
  swift_retain(v10);
  static DispatchQoS.unspecified.getter(v13);
  v20 = _swiftEmptyArrayStorage;
  v14 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100047110(&qword_100828C80);
  v16 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release(v22);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

void sub_10035EE90(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void *v48;
  uint64_t v49;
  __int128 v50[2];
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;
  char v54[24];
  char v55[32];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v55, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    return;
  v5 = (char *)Strong;
  v6 = OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context;
  v7 = objc_retain(*(id *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context)
                         + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider));
  sub_1000EBD50(a2);

  v8 = *(void **)(*(_QWORD *)&v5[v6] + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider);
  KeyPath = swift_getKeyPath(&unk_100636F18);
  v10 = swift_getKeyPath(&unk_100636F40);
  v11 = v8;
  static Published.subscript.getter(v51, v11, KeyPath, v10);
  swift_release(v10);
  swift_release(KeyPath);

  v46 = v51[0];
  v48 = v5;
  v12 = &v5[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards];
  swift_beginAccess(&v5[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards], v54, 1, 0);
  v47 = v12;
  v13 = *(_QWORD *)v12;
  v14 = *(_QWORD *)(*(_QWORD *)v12 + 16);
  v45 = v13;
  if (!v14)
  {
    swift_bridgeObjectRetain(v13);
LABEL_18:
    swift_bridgeObjectRelease(v45);
    swift_bridgeObjectRetain(_swiftEmptyDictionarySingleton);
    v40 = v48;
    v41 = sub_100363C14(v46, (uint64_t)_swiftEmptyDictionarySingleton);

    swift_bridgeObjectRelease_n(_swiftEmptyDictionarySingleton, 2);
    swift_bridgeObjectRelease(v46);
    v42 = *(_QWORD *)v47;
    *(_QWORD *)v47 = v41;
    swift_bridgeObjectRetain(v41);
    swift_bridgeObjectRelease(v42);
    v43 = swift_allocObject(&unk_100798558, 32, 7);
    *(_QWORD *)(v43 + 16) = v40;
    *(_QWORD *)(v43 + 24) = v41;
    v44 = v40;
    sub_10035F374((uint64_t)sub_100365238, v43);
    swift_release(v43);

    return;
  }
  v15 = v13 + 32;
  swift_bridgeObjectRetain(v13);
  while (1)
  {
    v49 = v14;
    sub_1000252E0(v15, (uint64_t)v51);
    v17 = v52;
    v18 = v53;
    sub_100016804(v51, v52);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    v21 = v20;
    v23 = v22;
    v24 = v52;
    v25 = v53;
    sub_100016804(v51, v52);
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 24))(v24, v25);
    sub_1000252E0((uint64_t)v51, (uint64_t)v50);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
    v29 = sub_100439944(v19, v21, v23 | ((v26 & 1) << 8));
    v30 = _swiftEmptyDictionarySingleton[2];
    v31 = (v28 & 1) == 0;
    v32 = v30 + v31;
    if (__OFADD__(v30, v31))
      break;
    v33 = v28;
    if (_swiftEmptyDictionarySingleton[3] >= v32)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v28 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_100403138();
        if ((v33 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1003FB268(v32, isUniquelyReferenced_nonNull_native);
      v34 = sub_100439944(v19, v21, v23 | ((v26 & 1) << 8));
      if ((v33 & 1) != (v35 & 1))
        goto LABEL_22;
      v29 = v34;
      if ((v33 & 1) != 0)
      {
LABEL_4:
        v16 = (_QWORD *)(_swiftEmptyDictionarySingleton[7] + 40 * v29);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v16);
        sub_10002411C(v50, (uint64_t)v16);
        goto LABEL_5;
      }
    }
    _swiftEmptyDictionarySingleton[(v29 >> 6) + 8] |= 1 << v29;
    v36 = _swiftEmptyDictionarySingleton[6] + 24 * v29;
    *(_QWORD *)v36 = v19;
    *(_QWORD *)(v36 + 8) = v21;
    *(_BYTE *)(v36 + 16) = v23;
    *(_BYTE *)(v36 + 17) = v26 & 1;
    sub_10002411C(v50, _swiftEmptyDictionarySingleton[7] + 40 * v29);
    v37 = _swiftEmptyDictionarySingleton[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_21;
    _swiftEmptyDictionarySingleton[2] = v39;
    sub_1000EB3F4(v19, v21, v23);
LABEL_5:
    swift_bridgeObjectRelease(0x8000000000000000);
    sub_1000EB41C(v19, v21, v23);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v51);
    v15 += 40;
    v14 = v49 - 1;
    if (v49 == 1)
      goto LABEL_18;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CardTemplate);
  __break(1u);
}

uint64_t sub_10035F28C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_100047110(&qword_100832420);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_delegate);
  if (Strong)
  {
    v9 = Strong;
    v10 = type metadata accessor for OSSignposter(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
    sub_1003E16E4((uint64_t)v6, 0);
    swift_unknownObjectRelease(v9);
    sub_10001BE90((uint64_t)v6, &qword_100832420);
  }
  result = swift_unknownObjectWeakLoadStrong(v7);
  if (result)
  {
    v12 = result;
    sub_1003E59D8(a2);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

uint64_t sub_10035F374(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  _QWORD *v26;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v3);
  v15 = (_QWORD *)swift_allocObject(&unk_1007984B8, 40, 7);
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  aBlock[4] = sub_100365220;
  v26 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007984D0;
  v16 = _Block_copy(aBlock);
  v17 = v26;
  sub_10003AFE0(a1, a2);
  swift_release(v17);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_100047110(&qword_100828C80);
  v21 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v6, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v23);
}

void sub_10035F5C4(uint64_t a1, void (*a2)(__n128), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  NSObject **v15;
  uint64_t v16;
  os_log_type_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSObject **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  os_log_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  void (*v58)(__n128);
  char *v59;
  char *v60;
  __n128 v61;
  os_log_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;
  char v72[24];
  char v73[32];

  v6 = type metadata accessor for UUID(0);
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v73, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (!Strong)
    return;
  v57 = a3;
  v58 = a2;
  v59 = (char *)Strong;
  v10 = (_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards);
  swift_beginAccess(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards, v72, 0, 0);
  v11 = *v10;
  v12 = *(_QWORD *)(*v10 + 16);
  if (v12)
  {
    v56 = v10;
    v13 = v11 + 32;
    v55 = v11;
    v14 = swift_bridgeObjectRetain(v11);
    v15 = (NSObject **)&HKLogActivity;
    v14.n128_u64[0] = 136315138;
    v61 = v14;
    v60 = (char *)&type metadata for Any + 8;
    do
    {
      v16 = sub_1000252E0(v13, (uint64_t)v69);
      v17 = static os_log_type_t.default.getter(v16);
      v18 = *v15;
      sub_1000252E0((uint64_t)v69, (uint64_t)&v66);
      v19 = v17;
      if (os_log_type_enabled(v18, v17))
      {
        v62 = v18;
        v20 = swift_slowAlloc(12, -1);
        v21 = swift_slowAlloc(32, -1);
        v65 = (_QWORD *)v21;
        *(_DWORD *)v20 = v61.n128_u32[0];
        v22 = v8;
        v23 = v15;
        v25 = v67;
        v24 = v68;
        sub_100016804(&v66, v67);
        v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 40))(v25, v24);
        v28 = v27;
        *(_QWORD *)(v20 + 4) = sub_10003E8EC(v26, v27, (uint64_t *)&v65);
        v29 = v28;
        v15 = v23;
        v8 = v22;
        swift_bridgeObjectRelease(v29);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(&v66);
        v30 = v62;
        _os_log_impl((void *)&_mh_execute_header, v62, v19, "[SummaryCoordinator] Updating card: %s", (uint8_t *)v20, 0xCu);
        swift_arrayDestroy(v21, 1, v60);
        swift_slowDealloc(v21, -1, -1);
        swift_slowDealloc(v20, -1, -1);

      }
      else
      {
        _s10FitnessApp24HistoryViewActionContextVwxx_0(&v66);
      }
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v69);
      v13 += 40;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease(v55);
    v10 = v56;
    v11 = *v56;
  }
  v31 = v59;
  v32 = *(_QWORD *)&v59[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  *(_QWORD *)&v59[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v32);
  v33 = *v10;
  v34 = *(_QWORD *)(*v10 + 16);
  v62 = (os_log_t)*v10;
  if (!v34)
  {
    swift_bridgeObjectRetain(v33);
    v36 = &_swiftEmptyDictionarySingleton;
LABEL_25:
    swift_bridgeObjectRelease(v62);
    v53 = *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_cardForId];
    *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_cardForId] = v36;
    v54 = swift_bridgeObjectRelease(v53);
    if (v58)
      v58(v54);

    return;
  }
  v35 = v33 + 32;
  swift_bridgeObjectRetain(v33);
  v36 = &_swiftEmptyDictionarySingleton;
  while (1)
  {
    sub_1000252E0(v35, (uint64_t)v69);
    v39 = v70;
    v40 = v71;
    sub_100016804(v69, v70);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
    sub_1000252E0((uint64_t)v69, (uint64_t)&v66);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
    v65 = v36;
    v43 = sub_100439A1C((uint64_t)v8);
    v44 = v36[2];
    v45 = (v42 & 1) == 0;
    v46 = v44 + v45;
    if (__OFADD__(v44, v45))
      break;
    v47 = v42;
    if (v36[3] >= v46)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v36 = v65;
        if ((v42 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        sub_10040333C();
        v36 = v65;
        if ((v47 & 1) != 0)
          goto LABEL_11;
      }
    }
    else
    {
      sub_1003FB4A8(v46, isUniquelyReferenced_nonNull_native);
      v48 = sub_100439A1C((uint64_t)v8);
      if ((v47 & 1) != (v49 & 1))
        goto LABEL_31;
      v43 = v48;
      v36 = v65;
      if ((v47 & 1) != 0)
      {
LABEL_11:
        v37 = (_QWORD *)(v36[7] + 40 * v43);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v37);
        sub_10002411C(&v66, (uint64_t)v37);
        goto LABEL_12;
      }
    }
    v36[(v43 >> 6) + 8] |= 1 << v43;
    (*(void (**)(unint64_t, char *, uint64_t))(v63 + 16))(v36[6] + *(_QWORD *)(v63 + 72) * v43, v8, v64);
    sub_10002411C(&v66, v36[7] + 40 * v43);
    v50 = v36[2];
    v51 = __OFADD__(v50, 1);
    v52 = v50 + 1;
    if (v51)
      goto LABEL_30;
    v36[2] = v52;
    v36 = v65;
LABEL_12:
    v38 = swift_bridgeObjectRelease(0x8000000000000000);
    (*(void (**)(char *, uint64_t, __n128))(v63 + 8))(v8, v64, v38);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v69);
    v35 += 40;
    if (!--v34)
      goto LABEL_25;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v64);
  __break(1u);
}

uint64_t type metadata accessor for SummaryCoordinator()
{
  return objc_opt_self(_TtC10FitnessApp18SummaryCoordinator);
}

ValueMetadata *type metadata accessor for SummaryCoordinator.State()
{
  return &type metadata for SummaryCoordinator.State;
}

uint64_t sub_10035FAD8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for SummaryCoordinator();
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

double sub_10035FB10()
{
  return sub_10035FB24((uint64_t)sub_1003649B4, (uint64_t)&unk_100798480);
}

double sub_10035FB24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  _QWORD v20[2];
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
  v12 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v2);
  aBlock[4] = a1;
  v24 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = a2;
  v13 = _Block_copy(aBlock);
  swift_retain(v12);
  static DispatchQoS.unspecified.getter(v14);
  v22 = &_swiftEmptyArrayStorage;
  v15 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v16 = sub_100047110(&qword_100828C80);
  v17 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v16, v17, v5, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = v24;
  swift_release(v12);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

void sub_10035FD34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t Strong;
  char *v7;
  char *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  void *v18;
  id v19;
  char *v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25[24];

  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  a1 += 16;
  swift_beginAccess(a1, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v7 = (char *)Strong;
    v8 = *(char **)(*(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context)
                  + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_summaryUserProfileProvider);
    v9 = *(os_unfair_lock_s **)&v8[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_protectedState];
    v10 = (uint64_t)&v9[4];
    v11 = v9 + 7;
    v12 = v8;
    os_unfair_lock_lock(v11);
    sub_1001524A4(v10, (uint64_t)&v23);
    os_unfair_lock_unlock(v11);
    v13 = v23;
    LOBYTE(v10) = v24;

    if ((v10 & 1) != 0)
    {
      v15 = static os_log_type_t.default.getter(v14);
      v16 = HKLogActivity;
      os_log(_:dso:log:_:_:)(v15, &_mh_execute_header, v16, "[SummaryCoordinator] Waiting for user profile", 45, 2, &_swiftEmptyArrayStorage);

      v17 = &v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_state];
      *(_QWORD *)v17 = 1;
      v17[8] = 1;
    }
    else
    {
      v18 = *(void **)&v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue];
      *v5 = v18;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
      v19 = v18;
      LOBYTE(v18) = _dispatchPreconditionTest(_:)(v5);
      (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
      if ((v18 & 1) == 0)
      {
        __break(1u);
        return;
      }
      v20 = &v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_state];
      v21 = v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_state + 8];
      sub_10035EC60(v13);
      if (v21 == 1)
      {
        sub_10035D018(v13);
        sub_100343FC8();
      }
      *(_QWORD *)v20 = v13;
      v20[8] = 0;
    }

  }
}

unint64_t sub_10035FF38(int a1)
{
  char **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t result;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  char **v27;
  uint64_t *v28;
  id v29;
  char **v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  uint64_t v43;
  void (*v44)(char *, char *, char *);
  char *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  int64_t v68;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v70;
  char *v71;
  unint64_t v72;
  char *v74;
  BOOL v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  void *v83;
  _DWORD v84[4];
  char **v85;
  uint64_t **v86;
  char *v87;
  char *v88;
  uint64_t v89;
  id v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  uint64_t *v96;
  uint64_t v97[3];
  char v98[24];
  uint64_t v99[4];

  LODWORD(v2) = a1;
  v3 = sub_100047110((uint64_t *)&unk_10082E690);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)v84 - v7;
  v9 = (char *)type metadata accessor for UUID(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = __chkstk_darwin(v9);
  v91 = (char *)v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v88 = (char *)v84 - v14;
  if ((*((_BYTE *)v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_state + 8) & 1) != 0)
  {
    v15 = static os_log_type_t.error.getter(v13);
    v16 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v15, &_mh_execute_header, v16, "[SummaryCoordinator] Failed to generate inactive cards, summary coordinator not active", 86, 2, _swiftEmptyArrayStorage);

    return sub_10043D5F8((uint64_t)_swiftEmptyArrayStorage);
  }
  v87 = v6;
  v89 = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_state);
  v18 = (uint64_t)_swiftEmptyArrayStorage;
  if (v2 == 18 || (v19 = (uint64_t)_swiftEmptyArrayStorage, v2 == 8))
  {
    v20 = objc_msgSend(*(id *)&(*(char **)((char *)v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context))[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager], "allFriends");
    if (v20)
    {
      v21 = v20;
      v22 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
      v23 = sub_100364684();
      v24 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v21, v22, v23);

      goto LABEL_9;
    }
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      goto LABEL_86;
LABEL_8:
    v24 = &_swiftEmptySetSingleton;
    goto LABEL_9;
  }
LABEL_10:
  v99[0] = v18;
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0)
      v48 = v19;
    else
      v48 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v19);
    v18 = _CocoaArrayWrapper.endIndex.getter(v48);
    swift_bridgeObjectRelease(v19);
  }
  else
  {
    v18 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v85 = v1;
  v84[3] = (_DWORD)v2;
  if (v18)
  {
    if (v18 < 1)
      goto LABEL_84;
    v25 = 0;
    v26 = v19 & 0xC000000000000001;
    v1 = &selRef_setRightBarButtonItems_animated_;
    v27 = &selRef_headerStringForSection_isRecentAndRelevant_;
    v90 = (id)v18;
    v86 = (uint64_t **)v19;
    do
    {
      if (v26)
        v28 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v19);
      else
        v28 = (uint64_t *)*(id *)(v19 + 8 * v25 + 32);
      v2 = v28;
      if (!objc_msgSend(v28, "isFriendshipCurrentlyActive")
        || (v29 = objc_msgSend(v2, v27[272]), (v29 & 1) != 0))
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v29);
        v30 = v27;
        v31 = v26;
        v32 = *(_QWORD *)(v99[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
        v33 = v32;
        v26 = v31;
        v27 = v30;
        v34 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v2);
        specialized ContiguousArray._endMutation()(v34);
        v19 = (uint64_t)v86;
        v18 = (uint64_t)v90;
      }
      ++v25;
    }
    while (v18 != v25);
    swift_bridgeObjectRelease(v19);
    v35 = v99[0];
    v18 = (uint64_t)v87;
    if (v99[0] < 0)
    {
LABEL_48:
      v49 = swift_retain(v35);
      v36 = _CocoaArrayWrapper.endIndex.getter(v49);
      if (!v36)
        goto LABEL_49;
      goto LABEL_28;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v19);
    v35 = (unint64_t)_swiftEmptyArrayStorage;
    v18 = (uint64_t)v87;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_48;
  }
  if ((v35 & 0x4000000000000000) != 0)
    goto LABEL_48;
  v36 = *(_QWORD *)(v35 + 16);
  swift_retain(v35);
  if (!v36)
  {
LABEL_49:
    v38 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_50;
  }
LABEL_28:
  if (v36 < 1)
    goto LABEL_85;
  v90 = (id)v36;
  v37 = 0;
  v38 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if ((v35 & 0xC000000000000001) != 0)
      v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v35);
    else
      v39 = *(id *)(v35 + 8 * (_QWORD)v37 + 32);
    v40 = v39;
    v41 = objc_msgSend(v39, "UUID");
    if (v41)
    {
      v42 = v41;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v43 = 0;
    }
    else
    {
      v43 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(v10 + 56))(v18, v43, 1, v9);
    sub_100045AD4(v18, (uint64_t)v8, (uint64_t *)&unk_10082E690);

    if ((*(unsigned int (**)(char *, uint64_t, char *))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_10001BE90((uint64_t)v8, (uint64_t *)&unk_10082E690);
    }
    else
    {
      v44 = *(void (**)(char *, char *, char *))(v10 + 32);
      v45 = v88;
      v44(v88, v8, v9);
      v44(v91, v45, v9);
      if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
        v38 = (char *)sub_10013FCF0(0, *((_QWORD *)v38 + 2) + 1, 1, (unint64_t)v38);
      v47 = *((_QWORD *)v38 + 2);
      v46 = *((_QWORD *)v38 + 3);
      if (v47 >= v46 >> 1)
        v38 = (char *)sub_10013FCF0(v46 > 1, v47 + 1, 1, (unint64_t)v38);
      *((_QWORD *)v38 + 2) = v47 + 1;
      v44(&v38[((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v47], v91, v9);
      v18 = (uint64_t)v87;
    }
    v37 = (char *)v37 + 1;
  }
  while (v90 != v37);
LABEL_50:
  swift_release_n(v35, 2);
  v50 = *(uint64_t *)((char *)v85 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context);
  v51 = *(char **)(v50 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsDataProvider);
  v52 = &v51[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends];
  swift_beginAccess(&v51[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends], v99, 0, 0);
  v53 = *(_QWORD *)v52;
  v54 = (uint64_t *)&v51[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidDownTrends];
  swift_beginAccess(&v51[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidDownTrends], v98, 0, 0);
  v55 = *v54;
  v97[0] = v53;
  v56 = v51;
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRetain(v55);
  sub_10013C130(v55);
  v57 = v97[0];
  v90 = v56;
  v58 = &v56[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedInvalidTrends];
  swift_beginAccess(&v56[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedInvalidTrends], v97, 0, 0);
  v59 = *(_QWORD *)v58;
  v92 = v57;
  swift_bridgeObjectRetain(v59);
  sub_10013C130(v60);
  v61 = v92;
  v91 = (char *)*(id *)(v50 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider);
  v62 = (char *)sub_100551424();
  v63 = v62;
  v64 = (char *)*((_QWORD *)v62 + 2);
  if (v64)
  {
    swift_bridgeObjectRetain(v62);
    v10 = 0;
    v88 = v63;
    v9 = v63 + 48;
    v1 = (char **)_swiftEmptyArrayStorage;
    while (1)
    {
      v66 = *((_QWORD *)v9 - 2);
      v65 = *((_QWORD *)v9 - 1);
      v67 = *v9;
      v92 = v66;
      v93 = v65;
      v94 = v67;
      sub_1000EB3F4(v66, v65, v67);
      sub_1000EB638((uint64_t)&v92, v89, v61, &v96);
      sub_1000EB41C(v66, v65, v67);
      v2 = v96;
      v68 = v96[2];
      v8 = v1[2];
      v18 = (uint64_t)&v8[v68];
      if (__OFADD__(v8, v68))
      {
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
          goto LABEL_8;
        sub_1002305A8((uint64_t)_swiftEmptyArrayStorage);
        v24 = v83;
LABEL_9:
        v19 = (uint64_t)sub_100295A4C((uint64_t)v24);
        swift_bridgeObjectRelease(v24);
        goto LABEL_10;
      }
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v1);
      if ((_DWORD)isUniquelyReferenced_nonNull_native && v18 <= (uint64_t)((unint64_t)v1[3] >> 1))
      {
        if (v2[2])
          goto LABEL_63;
      }
      else
      {
        if ((uint64_t)v8 <= v18)
          v70 = (int64_t)&v8[v68];
        else
          v70 = (int64_t)v8;
        v1 = (char **)sub_10013FABC(isUniquelyReferenced_nonNull_native, v70, 1, v1);
        if (v2[2])
        {
LABEL_63:
          v71 = v1[2];
          if ((uint64_t)(((unint64_t)v1[3] >> 1) - (_QWORD)v71) < v68)
            goto LABEL_82;
          v72 = (unint64_t)&v1[3 * (_QWORD)v71 + 4];
          if ((unint64_t)(v2 + 4) < v72 + 24 * v68 && v72 < (unint64_t)&v2[3 * v68 + 4])
          {
            result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy(v72);
          if (v68)
          {
            v74 = v1[2];
            v75 = __OFADD__(v74, v68);
            v76 = &v74[v68];
            if (v75)
              goto LABEL_83;
            v1[2] = v76;
          }
          goto LABEL_53;
        }
      }
      if (v68)
        goto LABEL_81;
LABEL_53:
      v9 += 24;
      swift_bridgeObjectRelease(v2);
      if (!--v64)
      {
        swift_bridgeObjectRelease(v61);
        swift_bridgeObjectRelease(v38);
        v63 = v88;
        swift_bridgeObjectRelease(v88);
        goto LABEL_74;
      }
    }
  }
  swift_bridgeObjectRelease(v61);
  swift_bridgeObjectRelease(v38);
  v1 = (char **)_swiftEmptyArrayStorage;
LABEL_74:
  swift_bridgeObjectRelease(v63);

  v96 = (uint64_t *)&_swiftEmptyDictionarySingleton;
  v77 = v1[2];
  if (v77)
  {
    swift_bridgeObjectRetain(v1);
    v78 = (char *)v1 + 49;
    do
    {
      v79 = *(_QWORD *)(v78 - 17);
      v80 = *(_QWORD *)(v78 - 9);
      v81 = *(v78 - 1);
      v82 = *v78;
      v92 = v79;
      v93 = v80;
      v94 = v81;
      v95 = v82;
      sub_1000EB3F4(v79, v80, v81);
      sub_10036089C((uint64_t)&v96, (uint64_t)&v92);
      v78 += 24;
      sub_1000EB41C(v79, v80, v81);
      --v77;
    }
    while (v77);

    swift_bridgeObjectRelease_n(v1, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v1);

  }
  return (unint64_t)v96;
}

void sub_10036089C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

void sub_1003608FC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  unsigned int v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unsigned int v23;
  uint64_t v24;
  _BYTE v25[32];
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  v10 = byte_100636F62[(char)v5];
  if (a3 == 18 || byte_100636F62[(char)v5] == a3)
  {
    v23 = v3;
    v11 = *v4;
    if (*(_QWORD *)(*v4 + 16) && (v12 = sub_100049DE0(v10), (v13 & 1) != 0))
    {
      v22 = *(_QWORD **)(*(_QWORD *)(v11 + 56) + 8 * v12);
      swift_bridgeObjectRetain(v22);
    }
    else
    {
      v22 = _swiftEmptyArrayStorage;
    }
    sub_10035E8C0(v5, v6, v7);
    v14 = v30;
    v15 = v31;
    sub_100016804(v29, v30);
    v26 = 0;
    memset(v25, 0, sizeof(v25));
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, _QWORD, _BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 16))(&v27, v5, v6, v7, v23, v25, *(unsigned __int8 *)(v8 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode), v14, v15);
    sub_10001BE90((uint64_t)v25, &qword_100832410);
    if (v28)
    {
      sub_10002411C(&v27, v9 - 136);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v29);
      v16 = sub_100047110(&qword_100821010);
      inited = swift_initStackObject(v16, &v24);
      *(_OWORD *)(inited + 16) = xmmword_100622F90;
      sub_1000252E0(v9 - 136, inited + 32);
      v29[0] = v22;
      sub_10013C280(inited);
      v18 = v29[0];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
      v29[0] = *v4;
      *v4 = 0x8000000000000000;
      sub_1003FEB18(v18, v10, isUniquelyReferenced_nonNull_native);
      v20 = *v4;
      *v4 = v29[0];
      swift_bridgeObjectRelease(v20);
      v21 = (_QWORD *)(v9 - 136);
    }
    else
    {
      swift_bridgeObjectRelease(v22);
      sub_10001BE90((uint64_t)&v27, &qword_100832410);
      v21 = v29;
    }
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v21);
  }
}

void sub_100360B0C(uint64_t a1, CHWorkoutDetailHeartRateTableViewCell *a2, uint64_t a3, CHWorkoutDetailHeartRateTableViewCell **a4)
{
  void *v7;
  id v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  char isUniquelyReferenced_nonNull_native;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;

  v7 = *(void **)(a3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context);
  v19 = a2;
  v8 = v7;
  swift_bridgeObjectRetain(a2);
  sub_100419154((_QWORD **)&v19, v8);

  v9 = v19;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a4);
  v19 = *a4;
  *a4 = (CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000;
  sub_1003FEB18((uint64_t)v9, a1, isUniquelyReferenced_nonNull_native);
  v11 = *a4;
  *a4 = v19;
  swift_bridgeObjectRelease(v11, v12, v13, v14, v15, v16, v17, v18);
}

void sub_100360BC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t Strong;
  char *v7;
  CHWorkoutDetailHeartRateTableViewCell **v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  __n128 v21;
  void *v22;
  id v23;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  char *v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  _BYTE v42[16];
  char v43[24];
  char v44[24];

  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v42[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v44, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v7 = (char *)Strong;
    v8 = (CHWorkoutDetailHeartRateTableViewCell **)(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards);
    swift_beginAccess(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards, v43, 0, 0);
    v9 = *v8;
    swift_bridgeObjectRetain(v9);
    sub_100363738(v10, (void (*)(_BYTE *, char *))sub_10002411C, &qword_10082F980);
    v12 = v11;
    swift_bridgeObjectRelease(v9, v13, v14, v15, v16, v17, v18, v19);
    v20 = sub_10013DDCC(v12);
    v21 = swift_release(v12);
    v22 = *(void **)&v7[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue];
    *v5 = v22;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2, v21);
    v23 = v22;
    LOBYTE(v22) = _dispatchPreconditionTest(_:)(v5);
    v24 = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
    if ((v22 & 1) != 0)
    {
      __chkstk_darwin(v24);
      *(_QWORD *)&v42[-16] = v7;
      v25 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100363AC4((uint64_t)v20, (void (*)(__int128 *__return_ptr, _QWORD, uint64_t, __n128))sub_100364990);
      swift_bridgeObjectRelease(v20, v26, v27, v28, v29, v30, v31, v32);
      if (*(_QWORD *)v25->cellPadding)
      {
        v33 = swift_allocObject(&unk_100798468, 32, 7);
        *(_QWORD *)(v33 + 16) = v7;
        *(_QWORD *)(v33 + 24) = v25;
        v34 = v7;
        sub_10035F374((uint64_t)sub_10036499C, v33);

        swift_release(v33);
      }
      else
      {

        swift_bridgeObjectRelease(v25, v35, v36, v37, v38, v39, v40, v41);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100360DB0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_delegate);
  if (result)
  {
    v4 = result;
    sub_1003E59D8(a2);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

double sub_100360DFC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double result;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t ObjectType;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD aBlock[5];
  uint64_t v45;
  __int128 v46[3];

  v36 = a3;
  v34 = a1;
  v35 = a2;
  ObjectType = swift_getObjectType(v3);
  v39 = type metadata accessor for DispatchWorkItemFlags(0);
  v42 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v40 = *(_QWORD *)(v6 - 8);
  v41 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10082F978);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  v13 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v34 - v15;
  v17 = *(int *)(v14 + 48);
  v18 = sub_10036114C();
  *(_QWORD *)&v16[v17] = v18;
  v38 = *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
  v19 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v3);
  sub_1000252E0(v34, (uint64_t)v46);
  v20 = *(int *)(v9 + 48);
  v21 = type metadata accessor for OSSignposter(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v13, v16, v21);
  *(_QWORD *)&v13[v20] = v18;
  v22 = *(unsigned __int8 *)(v10 + 80);
  v23 = (v22 + 73) & ~v22;
  v24 = (v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject(&unk_1007982B0, v24 + 8, v22 | 7);
  *(_QWORD *)(v25 + 16) = v19;
  sub_10002411C(v46, v25 + 24);
  *(_QWORD *)(v25 + 64) = v35;
  *(_BYTE *)(v25 + 72) = v36 & 1;
  sub_100045AD4((uint64_t)v13, v25 + v23, &qword_10082F978);
  *(_QWORD *)(v25 + v24) = ObjectType;
  aBlock[4] = sub_1003647A8;
  v45 = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007982C8;
  v26 = _Block_copy(aBlock);
  swift_retain(v18);
  swift_retain(v19);
  static DispatchQoS.unspecified.getter(v27);
  v43 = _swiftEmptyArrayStorage;
  v28 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v29 = sub_100047110(&qword_100828C80);
  v30 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  v31 = v39;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v43, v29, v30, v39, v28);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v26);
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v5, v31);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_10001BE90((uint64_t)v16, &qword_10082F978);
  v32 = v45;
  swift_release(v19);
  *(_QWORD *)&result = swift_release(v32).n128_u64[0];
  return result;
}

uint64_t sub_10036114C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_signpost_type_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint8_t *v13;
  os_signpost_id_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v0 = type metadata accessor for OSSignpostID(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v18 - v5;
  v7 = OSSignposter.init(subsystem:category:)(0xD00000000000001BLL, 0x800000010069B030, 0x567972616D6D7573, 0xEB00000000776569);
  v8 = OSSignposter.logHandle.getter(v7);
  v9 = OSSignpostID.init(log:)(v8);
  v10 = OSSignposter.logHandle.getter(v9);
  v11 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v12 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
    v12(v4, v6, v0);
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    v14 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, v11, v14, "addCardTest", "", v13, 2u);
    swift_slowDealloc(v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  }
  else
  {

    v12 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  }
  v12(v4, v6, v0);
  v15 = type metadata accessor for OSSignpostIntervalState(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = OSSignpostIntervalState.init(id:isOpen:)(v4, 1);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v16;
}

uint64_t sub_100361320(uint64_t a1, _QWORD *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unsigned __int8 *v14;
  void *v15;
  uint64_t KeyPath;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 *v58;
  unsigned __int8 *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  __int128 *v83;
  unsigned __int8 *v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  _BYTE v98[24];
  char v99[24];
  _OWORD v100[2];
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110[12];

  v95 = a6;
  v96 = a2;
  v10 = sub_100047110(&qword_10082F978);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  a1 += 16;
  swift_beginAccess(a1, v110, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1);
  if (result)
  {
    v14 = (unsigned __int8 *)result;
    v91 = v10;
    v92 = v11;
    v93 = a4;
    v88 = v12;
    v89 = a5;
    v90 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    v87 = OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context;
    v15 = *(void **)(*(_QWORD *)(result + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context)
                   + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider);
    KeyPath = swift_getKeyPath(&unk_100636F18);
    v17 = swift_getKeyPath(&unk_100636F40);
    v18 = v15;
    static Published.subscript.getter(&v107, v18, KeyPath, v17);
    swift_release(KeyPath);
    swift_release(v17);
    v19 = v107;
    v20 = *(_QWORD **)(v107 + 16);
    v94 = a3;
    if (v20)
    {
      v86 = v18;
      v84 = v14;
      swift_bridgeObjectRetain(v107);
      v85 = v19;
      v21 = (unsigned __int8 *)(v19 + 49);
      do
      {
        v97 = v20;
        v22 = *(_QWORD *)(v21 - 17);
        v23 = *(_QWORD *)(v21 - 9);
        v24 = *(v21 - 1);
        v25 = *v21;
        v26 = v96;
        v27 = v96[3];
        v28 = v96[4];
        sub_100016804(v96, v27);
        v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 24);
        sub_1000EB3F4(v22, v23, v24);
        v30 = (v29(v27, v28) & 1) == 0;
        sub_1000252E0((uint64_t)v26, (uint64_t)&v107);
        if (v25 != v30)
        {
          v31 = v108;
          v32 = v109;
          sub_100016804(&v107, v108);
          (*(void (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
          __asm { BR              X8 }
        }
        _s10FitnessApp24HistoryViewActionContextVwxx_0(&v107);
        sub_1000EB41C(v22, v23, v24);
        v21 += 24;
        v20 = (_QWORD *)((char *)v97 - 1);
      }
      while (v97 != (_QWORD *)1);

      swift_bridgeObjectRelease_n(v85, 2);
      v14 = v84;
    }
    else
    {

      swift_bridgeObjectRelease(v19);
    }
    v33 = v96;
    v34 = v96[3];
    v35 = v96[4];
    sub_100016804(v96, v34);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
    v38 = v37;
    v40 = v39;
    sub_10035E8C0(v36, v37, v39);
    sub_1000EB41C(v36, v38, v40);
    v41 = v105;
    v42 = v106;
    v97 = sub_100016804(&v104, v105);
    v43 = v33[3];
    v44 = v33[4];
    sub_100016804(v33, v43);
    v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 16))(v43, v44);
    v47 = v46;
    v49 = v48;
    v50 = v14;
    v52 = v33[3];
    v51 = v33[4];
    sub_100016804(v33, v52);
    v53 = v50;
    v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 24))(v52, v51);
    v101 = 0;
    memset(v100, 0, sizeof(v100));
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, _QWORD, _OWORD *, _QWORD, uint64_t, uint64_t))(v42 + 8))(&v102, v45, v47, v49, v54 & 1, v100, v50[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode], v41, v42);
    sub_1000EB41C(v45, v47, v49);
    sub_10001BE90((uint64_t)v100, &qword_100832410);
    if (v103)
    {
      sub_10002411C(&v102, (uint64_t)&v107);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(&v104);
      v55 = v94;
      v56 = v92;
      v57 = v91;
      if ((v93 & 1) != 0)
      {
        v58 = &v50[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards];
        swift_beginAccess(&v50[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards], v100, 0, 0);
        v55 = *(_QWORD *)(*(_QWORD *)v58 + 16);
      }
      sub_1000252E0((uint64_t)&v107, (uint64_t)&v104);
      v59 = &v50[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards];
      swift_beginAccess(&v50[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards], v99, 0, 0);
      if (v55 >= *(_QWORD *)(*(_QWORD *)v59 + 16))
        v60 = *(_QWORD *)(*(_QWORD *)v59 + 16);
      else
        v60 = v55;
      swift_beginAccess(v59, v98, 33, 0);
      if (*(_QWORD *)(*(_QWORD *)v59 + 16) < v60)
      {
        __break(1u);
      }
      else if ((v60 & 0x8000000000000000) == 0)
      {
        sub_10002411C(&v104, (uint64_t)&v102);
        sub_10011ED78(v60, v60, (uint64_t)&v102);
        swift_endAccess(v98);
        v61 = v87;
        v62 = *(_QWORD *)v59;
        v63 = objc_retain(*(id *)(*(_QWORD *)&v50[v87]
                                + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider));
        swift_bridgeObjectRetain(v62);
        sub_1000EBA5C(v64);

        swift_bridgeObjectRelease(v62);
        v65 = *(void **)(*(_QWORD *)&v50[v61]
                       + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider);
        v66 = v108;
        v67 = v109;
        sub_100016804(&v107, v108);
        v68 = *(uint64_t (**)(uint64_t, uint64_t))(v67 + 16);
        v69 = v65;
        v70 = v68(v66, v67);
        v72 = v71;
        LOBYTE(v68) = v73;
        sub_1000ED6A8(v70, v71, v73);
        sub_1000EB41C(v70, v72, (char)v68);

        v74 = *(int *)(v57 + 48);
        v75 = type metadata accessor for OSSignposter(0);
        v76 = (uint64_t)v90;
        v77 = v89;
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v90, v89, v75);
        v78 = *(_QWORD *)(v77 + v74);
        *(_QWORD *)(v76 + v74) = v78;
        v79 = *(unsigned __int8 *)(v56 + 80);
        v80 = (v79 + 24) & ~v79;
        v81 = swift_allocObject(&unk_100798300, v80 + v88, v79 | 7);
        *(_QWORD *)(v81 + 16) = v53;
        sub_100045AD4(v76, v81 + v80, &qword_10082F978);
        v82 = v53;
        swift_retain(v78);
        sub_10035F374((uint64_t)sub_100364898, v81);
        swift_release(v81);

        v83 = (__int128 *)&v107;
        return _s10FitnessApp24HistoryViewActionContextVwxx_0(v83);
      }
      __break(1u);
      JUMPOUT(0x100361CE8);
    }

    sub_10001BE90((uint64_t)&v102, &qword_100832410);
    v83 = &v104;
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v83);
  }
  return result;
}

uint64_t sub_100361D18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v4 = sub_100047110(&qword_10082F978);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v23 - v8;
  v10 = sub_100047110(&qword_100832420);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_delegate);
  if (result)
  {
    v14 = result;
    v15 = *(int *)(v4 + 48);
    v16 = type metadata accessor for OSSignposter(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v18(v9, a2, v16);
    v24 = v7;
    v19 = a2;
    v20 = *(_QWORD *)(a2 + v15);
    *(_QWORD *)&v9[v15] = v20;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v9, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    v21 = *(int *)(v4 + 48);
    v22 = v24;
    v18(v24, v19, v16);
    *(_QWORD *)&v22[v21] = v20;
    swift_retain(v20);
    sub_1003E16E4((uint64_t)v12, v20);
    swift_unknownObjectRelease(v14);
    swift_release(v20);
    sub_10001BE90((uint64_t)v12, &qword_100832420);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  }
  return result;
}

double sub_100361ED0(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[5];
  uint64_t v24;
  __int128 v25[2];

  ObjectType = swift_getObjectType(v1);
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
  v11 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v1);
  sub_1000252E0(a1, (uint64_t)v25);
  v12 = swift_allocObject(&unk_100798378, 72, 7);
  *(_QWORD *)(v12 + 16) = v11;
  sub_10002411C(v25, v12 + 24);
  *(_QWORD *)(v12 + 64) = ObjectType;
  aBlock[4] = sub_10036492C;
  v24 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_100798390;
  v13 = _Block_copy(aBlock);
  swift_retain(v11);
  static DispatchQoS.unspecified.getter(v14);
  v22 = _swiftEmptyArrayStorage;
  v15 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v16 = sub_100047110(&qword_100828C80);
  v17 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v16, v17, v4, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v18 = v24;
  swift_release(v11);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

void sub_100362130(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t Strong;
  char *v17;
  void *v18;
  id v19;
  char v20;
  CHWorkoutDetailHeartRateTableViewCell **v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  uint64_t v25;
  Class isa;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  const char *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  os_log_type_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  CHWorkoutDetailHeartRateTableViewCell *v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t);
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  CHWorkoutDetailHeartRateTableViewCell *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81[5];
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  char v86[24];
  char v87[32];

  v6 = type metadata accessor for UUID(0);
  v80 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v77 - v10;
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (CHWorkoutDetailHeartRateTableViewCell **)((char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  a1 += 16;
  swift_beginAccess(a1, v87, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v17 = (char *)Strong;
    v78 = a3;
    v18 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
    *v15 = v18;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
    v19 = v18;
    v20 = _dispatchPreconditionTest(_:)(v15);
    (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
    if ((v20 & 1) != 0)
    {
      v21 = (CHWorkoutDetailHeartRateTableViewCell **)&v17[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards];
      swift_beginAccess(&v17[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards], v86, 0, 0);
      v22 = *v21;
      v23 = *(_QWORD *)(*v21)->cellPadding;
      v79 = v17;
      if (v23)
      {
        v24 = v22 + 1;
        v77 = v22;
        swift_bridgeObjectRetain(v22);
        v25 = 0;
        while (1)
        {
          v27 = *(_QWORD *)v24->cellInset;
          isa = v24[1].super.super.super.super.isa;
          sub_100016804(v24, v27);
          (*((void (**)(uint64_t, Class))isa + 1))(v27, isa);
          v28 = a2[3];
          v29 = a2[4];
          sub_100016804(a2, v28);
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
          LOBYTE(v28) = static UUID.== infix(_:_:)(v11, v8);
          v30 = *(void (**)(char *, uint64_t))(v80 + 8);
          v30(v8, v6);
          v30(v11, v6);
          if ((v28 & 1) != 0)
            break;
          ++v25;
          v24 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)v24 + 40);
          if (v23 == v25)
          {
            swift_bridgeObjectRelease(v77, v31, v32, v33, v34, v35, v36, v37);
            v17 = v79;
            goto LABEL_8;
          }
        }
        swift_bridgeObjectRelease(v77, v31, v32, v33, v34, v35, v36, v37);
        v85 = 0;
        v83 = 0u;
        v84 = 0u;
        sub_1000252E0((uint64_t)a2, (uint64_t)v81);
        sub_10058C67C(1, (uint64_t)&v83, (uint64_t)v81);
        sub_10001BE90((uint64_t)v81, &qword_100832410);
        sub_10001BE90((uint64_t)&v83, &qword_100832410);
        v67 = v79;
        v68 = *(void **)(*(_QWORD *)&v79[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context]
                       + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider);
        v69 = a2[3];
        v70 = a2[4];
        sub_100016804(a2, v69);
        v71 = *(uint64_t (**)(uint64_t, uint64_t))(v70 + 16);
        v72 = v68;
        v73 = v71(v69, v70);
        v75 = v74;
        LOBYTE(v71) = v76;
        sub_1000ED318(v73, v74, v76);
        sub_1000EB41C(v73, v75, (char)v71);

        sub_100362630(v25);
      }
      else
      {
LABEL_8:
        v38 = static os_log_type_t.default.getter(v22);
        v39 = HKLogActivity;
        sub_1000252E0((uint64_t)a2, (uint64_t)&v83);
        v40 = v38;
        if (os_log_type_enabled(v39, v38))
        {
          v77 = v39;
          v41 = swift_slowAlloc(22, -1);
          v42 = swift_slowAlloc(64, -1);
          v81[0] = v42;
          *(_DWORD *)v41 = 136315394;
          v43 = _typeName(_:qualified:)(v78, 0);
          v45 = (CHWorkoutDetailHeartRateTableViewCell *)v44;
          v82 = sub_10003E8EC(v43, v44, v81);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83, v41 + 4);
          swift_bridgeObjectRelease(v45, v46, v47, v48, v49, v50, v51, v52);
          *(_WORD *)(v41 + 12) = 2080;
          v54 = *((_QWORD *)&v84 + 1);
          v53 = v85;
          sub_100016804(&v83, *((uint64_t *)&v84 + 1));
          (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v53);
          v55 = sub_100028404((unint64_t *)&qword_100821498, 255, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v56 = dispatch thunk of CustomStringConvertible.description.getter(v6, v55);
          v58 = v57;
          (*(void (**)(char *, uint64_t))(v80 + 8))(v11, v6);
          v82 = sub_10003E8EC(v56, (unint64_t)v58, v81);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83, v41 + 14);
          swift_bridgeObjectRelease(v58, v59, v60, v61, v62, v63, v64, v65);
          _s10FitnessApp24HistoryViewActionContextVwxx_0(&v83);
          v66 = v77;
          _os_log_impl((void *)&_mh_execute_header, &v77->super.super.super.super, v40, "%s Unable to remove card with uuid: %s", (uint8_t *)v41, 0x16u);
          swift_arrayDestroy(v42, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v42, -1, -1);
          swift_slowDealloc(v41, -1, -1);

        }
        else
        {

          _s10FitnessApp24HistoryViewActionContextVwxx_0(&v83);
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
}

double sub_100362630(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  _QWORD v19[2];
  uint64_t v20;
  _QWORD *v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
  v10 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, v1);
  v11 = swift_allocObject(&unk_1007983C8, 32, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_100364960;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007983E0;
  v12 = _Block_copy(aBlock);
  swift_retain(v10);
  static DispatchQoS.unspecified.getter(v13);
  v21 = _swiftEmptyArrayStorage;
  v14 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100047110(&qword_100828C80);
  v16 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v17 = v23;
  swift_release(v10);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

double sub_100362864(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  char *v6;
  CHWorkoutDetailHeartRateTableViewCell **v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  id v9;
  uint64_t v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  char *v19;
  _BYTE v20[24];
  _QWORD v21[5];
  char v22[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = (CHWorkoutDetailHeartRateTableViewCell **)(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards);
    swift_beginAccess(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards, v20, 33, 0);
    sub_10044A148(a2, (uint64_t)v21);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v21);
    swift_endAccess(v20);
    v8 = *v7;
    v9 = objc_retain(*(id *)(*(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context]
                           + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider));
    swift_bridgeObjectRetain(v8);
    sub_1000EBA5C(v10);

    swift_bridgeObjectRelease(v8, v11, v12, v13, v14, v15, v16, v17);
    v18 = swift_allocObject(&unk_100798418, 24, 7);
    *(_QWORD *)(v18 + 16) = v6;
    v19 = v6;
    sub_10035F374((uint64_t)sub_100364968, v18);

    *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  }
  return result;
}

void sub_100362978(uint64_t a1, _QWORD *a2, NSObject *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t Strong;
  char *v18;
  void *v19;
  id v20;
  char v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  os_log_type_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  os_log_t v46;
  os_log_t v47;
  char *v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char *v55;
  uint64_t v56;
  os_log_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61[5];
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  char v66[24];
  char v67[32];

  v58 = a4;
  v7 = type metadata accessor for UUID(0);
  v60 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v55 - v11;
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char **)((char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  a1 += 16;
  swift_beginAccess(a1, v67, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v18 = (char *)Strong;
    v57 = a3;
    v19 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
    *v16 = v19;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
    v20 = v19;
    v21 = _dispatchPreconditionTest(_:)(v16);
    (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
    if ((v21 & 1) == 0)
    {
      __break(1u);
      goto LABEL_15;
    }
    v22 = &v18[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards];
    swift_beginAccess(&v18[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards], v66, 0, 0);
    v23 = *(_QWORD *)v22;
    v24 = *(_QWORD *)(*(_QWORD *)v22 + 16);
    v59 = v18;
    if (v24)
    {
      v55 = v22;
      v25 = (_QWORD *)(v23 + 32);
      v56 = v23;
      swift_bridgeObjectRetain(v23);
      v26 = 0;
      while (1)
      {
        v27 = v25[3];
        v28 = v25[4];
        sub_100016804(v25, v27);
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
        v29 = a2[3];
        v30 = a2[4];
        sub_100016804(a2, v29);
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
        LOBYTE(v29) = static UUID.== infix(_:_:)(v12, v10);
        v31 = *(void (**)(char *, uint64_t))(v60 + 8);
        v31(v10, v7);
        v31(v12, v7);
        if ((v29 & 1) != 0)
          break;
        ++v26;
        v25 += 5;
        if (v24 == v26)
        {
          swift_bridgeObjectRelease(v56);
          v18 = v59;
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRelease(v56);
      v47 = v57;
      sub_1000252E0((uint64_t)v57, (uint64_t)v63);
      sub_1000252E0((uint64_t)a2, (uint64_t)v61);
      sub_10058C67C(2, (uint64_t)v63, (uint64_t)v61);
      sub_10001BE90((uint64_t)v61, &qword_100832410);
      sub_10001BE90((uint64_t)v63, &qword_100832410);
      v48 = v55;
      swift_beginAccess(v55, v61, 33, 0);
      sub_10044A148(v26, (uint64_t)v63);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v63);
      if (*(_QWORD *)(*(_QWORD *)v48 + 16) >= v26)
      {
        sub_1000252E0((uint64_t)v47, (uint64_t)v63);
        sub_10011ED78(v26, v26, (uint64_t)v63);
        swift_endAccess(v61);
        v49 = v59;
        v50 = *(_QWORD *)v48;
        v51 = objc_retain(*(id *)(*(_QWORD *)&v59[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context]
                                + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider));
        swift_bridgeObjectRetain(v50);
        sub_1000EBA5C(v52);

        swift_bridgeObjectRelease(v50);
        v53 = swift_allocObject(&unk_100798800, 24, 7);
        *(_QWORD *)(v53 + 16) = v49;
        v54 = v49;
        sub_10035F374((uint64_t)sub_100365714, v53);

        swift_release(v53);
        return;
      }
LABEL_15:
      __break(1u);
      return;
    }
LABEL_8:
    v32 = static os_log_type_t.default.getter(v23);
    v33 = HKLogActivity;
    sub_1000252E0((uint64_t)a2, (uint64_t)v63);
    v34 = v32;
    if (os_log_type_enabled(v33, v32))
    {
      v57 = v33;
      v35 = swift_slowAlloc(22, -1);
      v36 = swift_slowAlloc(64, -1);
      v61[0] = v36;
      *(_DWORD *)v35 = 136315394;
      v37 = _typeName(_:qualified:)(v58, 0);
      v39 = v38;
      v62 = sub_10003E8EC(v37, v38, v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, v63, v35 + 4);
      swift_bridgeObjectRelease(v39);
      *(_WORD *)(v35 + 12) = 2080;
      v41 = v64;
      v40 = v65;
      sub_100016804(v63, v64);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v40);
      v42 = sub_100028404((unint64_t *)&qword_100821498, 255, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v43 = dispatch thunk of CustomStringConvertible.description.getter(v7, v42);
      v45 = v44;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v12, v7);
      v62 = sub_10003E8EC(v43, v45, v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, v63, v35 + 14);
      swift_bridgeObjectRelease(v45);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v63);
      v46 = v57;
      _os_log_impl((void *)&_mh_execute_header, v57, v34, "%s Unable to remove card with uuid: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);

    }
    else
    {

      _s10FitnessApp24HistoryViewActionContextVwxx_0(v63);
    }
  }
}

uint64_t sub_100362EFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_100047110(&qword_100832420);
  __chkstk_darwin(v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_delegate);
  if (result)
  {
    v6 = result;
    v7 = type metadata accessor for OSSignposter(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
    sub_1003E16E4((uint64_t)v4, 0);
    swift_unknownObjectRelease(v6);
    return sub_10001BE90((uint64_t)v4, &qword_100832420);
  }
  return result;
}

double sub_100362FB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  _QWORD v19[2];
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue);
  v10 = swift_allocObject(&unk_100798288, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, v1);
  v11 = swift_allocObject(&unk_100798328, 32, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_1003648F8;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_100798340;
  v12 = _Block_copy(aBlock);
  swift_retain(v10);
  swift_bridgeObjectRetain(a1);
  static DispatchQoS.unspecified.getter(v13);
  v21 = &_swiftEmptyArrayStorage;
  v14 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100047110(&qword_100828C80);
  v16 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v17 = v23;
  swift_release(v10);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

void sub_1003631F0(uint64_t a1, CHWorkoutDetailHeartRateTableViewCell *a2)
{
  uint64_t v3;
  void *Strong;
  char *v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell **v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  id v17;
  uint64_t v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  _BYTE v26[32];
  _BYTE v27[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v27, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = sub_100364224(a2, (uint64_t)v5);

    v7 = (CHWorkoutDetailHeartRateTableViewCell **)&v5[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards];
    swift_beginAccess(&v5[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards], v26, 1, 0);
    v8 = *v7;
    *v7 = v6;
    swift_bridgeObjectRelease(v8, v9, v10, v11, v12, v13, v14, v15);
    v16 = *v7;
    v17 = objc_retain(*(id *)(*(_QWORD *)&v5[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context]
                            + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider));
    swift_bridgeObjectRetain(v16);
    sub_1000EBA5C(v18);

    swift_bridgeObjectRelease(v16, v19, v20, v21, v22, v23, v24, v25);
    sub_10035F374(0, 0);

  }
}

void sub_1003632E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    swift_bridgeObjectRetain(a1);
    v4 = 0;
    v5 = 0;
    v6 = &_swiftEmptyArrayStorage[4];
    while (1)
    {
      v7 = *(_QWORD *)(a1 + 8 * v5 + 32);
      if (!v4)
      {
        v8 = v2[3];
        if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_28;
        v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
        if (v9 <= 1)
          v10 = 1;
        else
          v10 = v9;
        v11 = sub_100047110(&qword_10082F9F8);
        v12 = (_QWORD *)swift_allocObject(v11, 16 * v10 + 32, 7);
        v13 = j__malloc_size(v12);
        v14 = v13 - 32;
        if (v13 < 32)
          v14 = v13 - 17;
        v15 = v14 >> 4;
        v12[2] = v10;
        v12[3] = 2 * (v14 >> 4);
        v16 = (unint64_t)(v12 + 4);
        v17 = v2[3] >> 1;
        if (v2[2])
        {
          if (v12 != v2 || v16 >= (unint64_t)&v2[2 * v17 + 4])
            memmove(v12 + 4, v2 + 4, 16 * v17);
          v2[2] = 0;
        }
        v6 = (_QWORD *)(v16 + 16 * v17);
        v4 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
        swift_release(v2);
        v2 = v12;
      }
      v19 = __OFSUB__(v4--, 1);
      if (v19)
        break;
      *v6 = v5;
      v6[1] = v7;
      v6 += 2;
      if (v1 == ++v5)
      {
        swift_bridgeObjectRelease(a1);
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v4 = 0;
LABEL_23:
  v20 = v2[3];
  if (v20 >= 2)
  {
    v21 = v20 >> 1;
    v19 = __OFSUB__(v21, v4);
    v22 = v21 - v4;
    if (v19)
    {
LABEL_29:
      __break(1u);
      return;
    }
    v2[2] = v22;
  }
}

void sub_100363444(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;

  if ((unint64_t)a1 >> 62)
    goto LABEL_52;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v2)
  {
    while (1)
    {
      if (v2 < 1)
      {
        __break(1u);
        goto LABEL_62;
      }
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v3 = 0;
      v4 = 0;
      v5 = _swiftEmptyArrayStorage;
      v6 = &_swiftEmptyArrayStorage[4];
      while (1)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
        if (!v3)
        {
          v8 = v5[3];
          if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_50;
          v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
          if (v9 <= 1)
            v10 = 1;
          else
            v10 = v9;
          v11 = sub_100047110(&qword_10082F9F0);
          v12 = (_QWORD *)swift_allocObject(v11, 16 * v10 + 32, 7);
          v13 = j__malloc_size(v12);
          v14 = v13 - 32;
          if (v13 < 32)
            v14 = v13 - 17;
          v15 = v14 >> 4;
          v12[2] = v10;
          v12[3] = 2 * (v14 >> 4);
          v16 = (unint64_t)(v12 + 4);
          v17 = v5[3] >> 1;
          if (v5[2])
          {
            if (v12 != v5 || v16 >= (unint64_t)&v5[2 * v17 + 4])
              memmove(v12 + 4, v5 + 4, 16 * v17);
            v5[2] = 0;
          }
          v6 = (_QWORD *)(v16 + 16 * v17);
          v3 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
          swift_release(v5);
          v5 = v12;
        }
        v19 = __OFSUB__(v3--, 1);
        if (v19)
          break;
        *v6 = v4;
        v6[1] = v7;
        v6 += 2;
        if (v2 == ++v4)
          goto LABEL_47;
      }
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      if (a1 < 0)
        v38 = a1;
      else
        v38 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v2 = _CocoaArrayWrapper.endIndex.getter(v38);
      if (!v2)
        goto LABEL_56;
    }
    v3 = 0;
    v20 = 0;
    v5 = _swiftEmptyArrayStorage;
    v21 = &_swiftEmptyArrayStorage[4];
    do
    {
      v22 = *(void **)(a1 + 8 * v20 + 32);
      if (v3)
      {
        v23 = v22;
        v19 = __OFSUB__(v3--, 1);
        if (v19)
          goto LABEL_49;
      }
      else
      {
        v24 = v5[3];
        if ((uint64_t)((v24 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_51;
        v25 = v24 & 0xFFFFFFFFFFFFFFFELL;
        if (v25 <= 1)
          v26 = 1;
        else
          v26 = v25;
        v27 = sub_100047110(&qword_10082F9F0);
        v28 = (_QWORD *)swift_allocObject(v27, 16 * v26 + 32, 7);
        v29 = j__malloc_size(v28);
        v30 = v29 - 32;
        if (v29 < 32)
          v30 = v29 - 17;
        v31 = v30 >> 4;
        v28[2] = v26;
        v28[3] = 2 * (v30 >> 4);
        v32 = v28 + 4;
        v33 = v5[3] >> 1;
        v21 = &v28[2 * v33 + 4];
        v34 = (v31 & 0x7FFFFFFFFFFFFFFFLL) - v33;
        if (v5[2])
        {
          if (v28 != v5 || v32 >= &v5[2 * v33 + 4])
            memmove(v32, v5 + 4, 16 * v33);
          v36 = v22;
          v5[2] = 0;
        }
        else
        {
          v37 = v22;
        }
        swift_release(v5);
        v5 = v28;
        v19 = __OFSUB__(v34, 1);
        v3 = v34 - 1;
        if (v19)
          goto LABEL_49;
      }
      *v21 = v20;
      v21[1] = v22;
      v21 += 2;
      ++v20;
    }
    while (v2 != v20);
LABEL_47:
    swift_bridgeObjectRelease(a1);
  }
  else
  {
LABEL_56:
    swift_bridgeObjectRelease(a1);
    v3 = 0;
    v5 = _swiftEmptyArrayStorage;
  }
  v39 = v5[3];
  if (v39 >= 2)
  {
    v40 = v39 >> 1;
    v19 = __OFSUB__(v40, v3);
    v41 = v40 - v3;
    if (v19)
LABEL_62:
      __break(1u);
    else
      v5[2] = v41;
  }
}

void sub_100363710(uint64_t a1)
{
  sub_100363738(a1, (void (*)(_BYTE *, char *))sub_10002411C, &qword_10082F9E8);
}

void sub_100363724(uint64_t a1)
{
  sub_100363738(a1, (void (*)(_BYTE *, char *))sub_10002411C, &qword_10082F980);
}

void sub_100363738(uint64_t a1, void (*a2)(_BYTE *, char *), uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  void (*v12)(_BYTE *, char *);
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  BOOL v21;
  __int128 v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[40];
  _OWORD v31[3];
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  v6 = _swiftEmptyArrayStorage;
  v27 = v5;
  if (v4)
  {
    v7 = 0;
    v8 = 0;
    v9 = v5 + 32;
    v10 = &_swiftEmptyArrayStorage[4];
    v28 = v4;
    while (1)
    {
      sub_1000252E0(v9, (uint64_t)v30);
      *(_QWORD *)&v31[0] = v7;
      a2(v30, (char *)v31 + 8);
      v32 = v31[0];
      v33 = v31[1];
      v34 = v31[2];
      if (!v8)
      {
        v11 = v6[3];
        if ((uint64_t)((v11 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v12 = a2;
        v13 = v11 & 0xFFFFFFFFFFFFFFFELL;
        if (v13 <= 1)
          v14 = 1;
        else
          v14 = v13;
        v15 = sub_100047110(a3);
        v16 = (_QWORD *)swift_allocObject(v15, 48 * v14 + 32, 7);
        v17 = (uint64_t)(j__malloc_size(v16) - 32) / 48;
        v16[2] = v14;
        v16[3] = 2 * v17;
        v18 = (unint64_t)(v16 + 4);
        v19 = v6[3] >> 1;
        if (v6[2])
        {
          if (v16 != v6 || v18 >= (unint64_t)&v6[6 * v19 + 4])
            memmove(v16 + 4, v6 + 4, 48 * v19);
          v6[2] = 0;
        }
        v10 = (_OWORD *)(v18 + 48 * v19);
        v8 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
        swift_release(v6);
        v6 = v16;
        a2 = v12;
        v4 = v28;
      }
      v21 = __OFSUB__(v8--, 1);
      if (v21)
        break;
      ++v7;
      v22 = v32;
      v23 = v34;
      v10[1] = v33;
      v10[2] = v23;
      *v10 = v22;
      v10 += 3;
      v9 += 40;
      if (v4 == v7)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v8 = 0;
LABEL_21:
  swift_bridgeObjectRelease(v27);
  v24 = v6[3];
  if (v24 >= 2)
  {
    v25 = v24 >> 1;
    v21 = __OFSUB__(v25, v8);
    v26 = v25 - v8;
    if (v21)
    {
LABEL_27:
      __break(1u);
      return;
    }
    v6[2] = v26;
  }
}

void sub_100363920(CHWorkoutDetailHeartRateTableViewCell *a1, uint64_t a2)
{
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  const char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  objc_class *v13;
  uint64_t v14;
  objc_class *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  objc_class *v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  BOOL v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  objc_class *v34;

  if (a2)
  {
    v3 = *(_QWORD *)a1->cellPadding;
    v4 = &_swiftEmptyArrayStorage;
    if (v3)
    {
      swift_bridgeObjectRetain(a1);
      v13 = 0;
      v14 = 0;
      v15 = (objc_class *)(v3 - 1);
      v16 = &_swiftEmptyArrayStorage + 1;
      v17 = (objc_class *)(a2 - 1);
      v34 = (objc_class *)(a2 - 1);
      while (1)
      {
        v18 = *((_QWORD *)&a1[1].super.super.super.super.isa + (_QWORD)v13);
        if (!v14)
        {
          v19 = *(_QWORD *)v4->cellInset;
          if ((uint64_t)((v19 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_32;
          v20 = v19 & 0xFFFFFFFFFFFFFFFELL;
          if (v20 <= 1)
            v21 = 1;
          else
            v21 = v20;
          v22 = sub_100047110(&qword_10082F9F8);
          v23 = (CHWorkoutDetailHeartRateTableViewCell *)swift_allocObject(v22, 16 * v21 + 32, 7);
          v24 = j__malloc_size(v23);
          v25 = v24 - 32;
          if (v24 < 32)
            v25 = v24 - 17;
          v26 = v25 >> 4;
          *(_QWORD *)v23->cellPadding = v21;
          *(_QWORD *)v23->cellInset = 2 * (v25 >> 4);
          v27 = (unint64_t)&v23[1];
          v28 = *(_QWORD *)v4->cellInset >> 1;
          if (*(_QWORD *)v4->cellPadding)
          {
            if (v23 != v4 || v27 >= (unint64_t)&v4[1] + 16 * v28)
              memmove(&v23[1], &v4[1], 16 * v28);
            *(_QWORD *)v4->cellPadding = 0;
          }
          v16 = (CHWorkoutDetailHeartRateTableViewCell *)(v27 + 16 * v28);
          v14 = (v26 & 0x7FFFFFFFFFFFFFFFLL) - v28;
          swift_release(v4);
          v4 = v23;
          v17 = v34;
        }
        v30 = __OFSUB__(v14--, 1);
        if (v30)
          break;
        v16->super.super.super.super.isa = v13;
        *(_QWORD *)v16->heartRateController = v18;
        if (v17 == v13 || v15 == v13)
        {
          swift_bridgeObjectRelease(a1, v6, v7, v8, v9, v10, v11, v12);
          goto LABEL_27;
        }
        v16 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)v16 + 16);
        v13 = (objc_class *)((char *)v13 + 1);
      }
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v14 = 0;
  }
  else
  {
    v14 = 0;
    v4 = &_swiftEmptyArrayStorage;
  }
LABEL_27:
  v31 = *(_QWORD *)v4->cellInset;
  if (v31 >= 2)
  {
    v32 = v31 >> 1;
    v30 = __OFSUB__(v32, v14);
    v33 = v32 - v14;
    if (v30)
    {
LABEL_33:
      __break(1u);
      return;
    }
    *(_QWORD *)v4->cellPadding = v33;
  }
}

_QWORD *sub_100363AC4(uint64_t a1, void (*a2)(__int128 *__return_ptr, _QWORD, uint64_t, __n128))
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = swift_bridgeObjectRetain(a1);
  v11 = v5;
  v6 = v5 + 40;
  v7 = _swiftEmptyArrayStorage;
  do
  {
    a2(&v12, *(_QWORD *)(v6 - 8), v6, v4);
    if (v13)
    {
      sub_10002411C(&v12, (uint64_t)v14);
      sub_10002411C(v14, (uint64_t)&v12);
      if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
        v7 = sub_10013FD04(0, v7[2] + 1, 1, v7);
      v9 = v7[2];
      v8 = v7[3];
      if (v9 >= v8 >> 1)
        v7 = sub_10013FD04((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
      v7[2] = v9 + 1;
      sub_10002411C(&v12, (uint64_t)&v7[5 * v9 + 4]);
    }
    else
    {
      sub_10001BE90((uint64_t)&v12, &qword_100832410);
    }
    v6 += 48;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease(v11);
  return v7;
}

_QWORD *sub_100363C14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char v10;
  char *v11;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain(a1);
    v3 = v2 + 49;
    v4 = *(_QWORD *)(v2 + 32);
    v5 = *(_QWORD *)(v2 + 40);
    v6 = *(unsigned __int8 *)(v2 + 48);
    v7 = *(unsigned __int8 *)(v2 + 49);
    if (*(_QWORD *)(a2 + 16))
    {
      sub_1000EB3F4(*(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_BYTE *)(v2 + 48));
      if (v7)
        v8 = 256;
      else
        v8 = 0;
      v9 = sub_100439944(v4, v5, v8 | v6);
      if ((v10 & 1) != 0)
      {
        sub_1000252E0(*(_QWORD *)(a2 + 56) + 40 * v9, (uint64_t)&v14);
      }
      else
      {
        v16 = 0;
        v14 = 0u;
        v15 = 0u;
      }
    }
    else
    {
      v16 = 0;
      v14 = 0u;
      v15 = 0u;
      sub_1000EB3F4(v4, v5, v6);
    }
    v11 = (char *)&loc_100363DD0 + 4 * byte_100636E70[v6];
    v17 = v3 + 24;
    __asm { BR              X8 }
  }
  return _swiftEmptyArrayStorage;
}

CHWorkoutDetailHeartRateTableViewCell *sub_100364224(CHWorkoutDetailHeartRateTableViewCell *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t, __n128);
  const char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  unint64_t v24;
  const char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v35;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t, __n128);
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45[2];
  uint64_t v46;

  v46 = a2;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v38 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v7);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)a1->cellPadding;
  if (v10)
  {
    v37[0] = a1;
    v37[1] = v2;
    v11 = (char *)a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v39 = *(_QWORD *)(v5 + 72);
    v40 = OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_cardForId;
    v41 = *(void (**)(char *, char *, uint64_t, __n128))(v5 + 16);
    v12 = swift_bridgeObjectRetain(a1);
    v13 = &_swiftEmptyArrayStorage;
    v14 = (uint64_t)v38;
    do
    {
      v41(v9, v11, v4, v12);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v15)(v9, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
      {
        a1 = (CHWorkoutDetailHeartRateTableViewCell *)v37[0];
        goto LABEL_21;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v14, v9, v4);
      v23 = *(CHWorkoutDetailHeartRateTableViewCell **)(v46 + v40);
      if (*(_QWORD *)v23->cellPadding)
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v46 + v40));
        v24 = sub_100439A1C(v14);
        if ((v25 & 1) != 0)
        {
          sub_1000252E0(*(_QWORD *)v23[1].cellInset + 40 * v24, (uint64_t)&v42);
        }
        else
        {
          v44 = 0;
          v42 = 0u;
          v43 = 0u;
        }
        swift_bridgeObjectRelease(v23, v25, v26, v27, v28, v29, v30, v31);
      }
      else
      {
        v44 = 0;
        v42 = 0u;
        v43 = 0u;
      }
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v4);
      if (*((_QWORD *)&v43 + 1))
      {
        sub_10002411C(&v42, (uint64_t)v45);
        sub_10002411C(v45, (uint64_t)&v42);
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
          v13 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD04(0, *(_QWORD *)v13->cellPadding + 1, 1, v13);
        v33 = *(_QWORD *)v13->cellPadding;
        v32 = *(_QWORD *)v13->cellInset;
        if (v33 >= v32 >> 1)
          v13 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD04((_QWORD *)(v32 > 1), v33 + 1, 1, v13);
        *(_QWORD *)v13->cellPadding = v33 + 1;
        sub_10002411C(&v42, (uint64_t)&v13[1] + 40 * v33);
        v14 = (uint64_t)v38;
      }
      else
      {
        sub_10001BE90((uint64_t)&v42, &qword_100832410);
      }
      v11 += v39;
      --v10;
    }
    while (v10);
    a1 = (CHWorkoutDetailHeartRateTableViewCell *)v37[0];
    v15(v9, 1, 1, v4, v12);
  }
  else
  {
    v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
    v35 = swift_bridgeObjectRetain(a1);
    v13 = &_swiftEmptyArrayStorage;
    v34(v9, 1, 1, v4, v35);
  }
LABEL_21:
  swift_bridgeObjectRelease(a1, v16, v17, v18, v19, v20, v21, v22);
  return v13;
}

uint64_t sub_100364504(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v8)
      return swift_release(a1);
    v16 = *(_QWORD *)(v4 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v8)
        return swift_release(a1);
      v16 = *(_QWORD *)(v4 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v8)
          return swift_release(a1);
        v16 = *(_QWORD *)(v4 + 8 * v10);
        if (!v16)
        {
          v10 = v15 + 3;
          if (v15 + 3 >= v8)
            return swift_release(a1);
          v16 = *(_QWORD *)(v4 + 8 * v10);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    v14 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v12);
    swift_bridgeObjectRetain(v13);
    a2(v14, v13);
    result = swift_bridgeObjectRelease(v13);
  }
  v17 = v15 + 4;
  if (v17 >= v8)
    return swift_release(a1);
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v8)
      return swift_release(a1);
    v16 = *(_QWORD *)(v4 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_100364684()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E5A0;
  if (!qword_10082E5A0)
  {
    v1 = sub_10001E724(255, (unint64_t *)&qword_100821A60, ASFriend_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10082E5A0);
  }
  return result;
}

uint64_t sub_1003646DC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100364700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_100047110(&qword_10082F978);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 73) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release(*(_QWORD *)(v0 + 16));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 24));
  v7 = v0 + v4;
  v8 = type metadata accessor for OSSignposter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 48)));
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1003647A8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_100047110(&qword_10082F978) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 73) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100361320(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 64), *(unsigned __int8 *)(v0 + 72), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100364804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_100047110(&qword_10082F978);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  v7 = v0 + v4;
  v8 = type metadata accessor for OSSignposter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 48)));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100364898()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100047110(&qword_10082F978) - 8) + 80);
  return sub_100361D18(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1003648CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003648F8()
{
  uint64_t v0;

  sub_1003631F0(*(_QWORD *)(v0 + 16), *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 24));
}

uint64_t sub_100364900()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 72, 7);
}

void sub_10036492C()
{
  uint64_t *v0;

  sub_100362130(v0[2], v0 + 3, v0[8]);
}

uint64_t sub_10036493C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100364960()
{
  uint64_t v0;

  return sub_100362864(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100364968()
{
  uint64_t v0;

  return sub_100362EFC(*(_QWORD *)(v0 + 16));
}

void sub_100364980(uint64_t a1, CHWorkoutDetailHeartRateTableViewCell *a2)
{
  uint64_t v2;

  sub_100360B0C(a1, a2, *(_QWORD *)(v2 + 16), *(CHWorkoutDetailHeartRateTableViewCell ***)(v2 + 24));
}

void sub_100364988()
{
  uint64_t v0;

  sub_100360BC8(v0);
}

uint64_t sub_100364990@<X0>(unint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_10035E610(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_10036499C()
{
  uint64_t v0;

  return sub_100360DB0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1003649B4()
{
  uint64_t v0;

  sub_10035FD34(v0);
}

char *sub_1003649BC(char *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  char *v23;
  void *v24;
  void *v25;
  void (**v26)(_QWORD, _QWORD, _QWORD);
  _QWORD *v27;
  id v28;
  _QWORD *v29;
  id v30;
  _QWORD *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  _QWORD *v38;
  _QWORD *v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  char *v52;
  char *v53;
  void (**v54)(_QWORD, _QWORD, _QWORD);
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  char *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  char *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  void *v78;
  void *v79;
  void *v80;
  char *v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  char *v86;
  __int128 v87;
  id v88;
  id v89;
  id v90;
  id v91;
  objc_class *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  id v99;
  id v100;
  uint64_t v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  uint64_t v107;
  id v108;
  char *v109;
  void (**v110)(_QWORD, _QWORD, _QWORD);
  uint64_t v111;
  objc_super v112;
  _OWORD v113[3];
  _OWORD v114[2];
  uint64_t v115;
  _QWORD v116[6];

  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v110 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 - 8);
  v111 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = (char *)OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_internalQueue;
  v107 = sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v12 = v1;
  static DispatchQoS.userInitiated.getter();
  *(_QWORD *)&v113[0] = &_swiftEmptyArrayStorage;
  v13 = sub_100028404(&qword_10082DEA0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v14 = sub_100047110(&qword_10082DEA8);
  v15 = sub_100028384(&qword_10082DEB0, &qword_10082DEA8, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v113, v14, v15, v6, v13);
  ((void (**)(char *, _QWORD, uint64_t))v110)[13](v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v111);
  v16 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000022, 0x800000010069B090, v11, v8, v5, 0);
  *(_QWORD *)&v109[(_QWORD)v108] = v16;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_notificationCenterObservers] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_activeCards] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_cardForId] = _swiftEmptyDictionarySingleton;
  v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode] = 0;
  v17 = &v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_delegate];
  *((_QWORD *)v17 + 1) = 0;
  swift_unknownObjectWeakInit(v17, 0);
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(&_swiftEmptyArrayStorage))
  {
    sub_100230F98((uint64_t)&_swiftEmptyArrayStorage);
  }
  else
  {
    v18 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_fitnessPlusDataProviderCancellables] = v18;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsSetupStateCancellable] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsHighlightStateCancellable] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context] = a1;
  v19 = &v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_state];
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  v109 = *(char **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager];
  v111 = *(_QWORD *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_highlightDataProvider];
  v20 = v111;
  v21 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementLocalizationProvider];
  v22 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_badgeImageFactory];
  v23 = *(char **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext];
  v24 = *(void **)&v23[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
  v25 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager];
  v110 = *(void (***)(_QWORD, _QWORD, _QWORD))&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendsSetupCoordinator];
  v26 = v110;
  v27 = &v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_friendsCardsFactory];
  *v27 = v109;
  v27[1] = v20;
  v27[2] = v21;
  v27[3] = v22;
  v27[4] = v24;
  v27[5] = v25;
  v27[6] = v26;
  v106 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_metricsDataProvider];
  v108 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_healthStore];
  v28 = v108;
  v29 = &v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_metricsCardFactory];
  *v29 = v106;
  v29[1] = v25;
  v29[2] = v28;
  v104 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDataProvider];
  v105 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator];
  v30 = v105;
  v31 = &v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_ringsCardFactory];
  *v31 = v104;
  v31[1] = v30;
  v31[2] = v25;
  v32 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider];
  v99 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_historyDataProvider];
  v33 = v99;
  v100 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager];
  v34 = v100;
  v101 = *(_QWORD *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutImageProvider];
  v35 = v101;
  v102 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionFormattingManager];
  v36 = v102;
  v103 = *(id *)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_stackFormattingManager];
  v37 = v103;
  v38 = &v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_historyCardFactory];
  *v38 = v32;
  v38[1] = v33;
  v38[2] = v34;
  v38[3] = v35;
  v38[4] = v36;
  v38[5] = v37;
  v38[6] = v24;
  v38[7] = v23;
  v39 = &v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_awardCardFactory];
  v39[3] = type metadata accessor for AAUIAwardsDataProvider(0);
  v39[4] = &protocol witness table for AAUIAwardsDataProvider;
  *v39 = v32;
  v39[5] = v21;
  v39[6] = v22;
  v39[7] = v25;
  v40 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_balanceDataProvider];
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_loadCardFactory] = v40;
  v107 = OBJC_IVAR___CHFitnessAppContext_dependencies;
  v41 = *(_QWORD *)&v23[OBJC_IVAR___CHFitnessAppContext_dependencies];
  v42 = v25;
  v43 = v21;
  v44 = v22;
  v45 = v32;
  v46 = v24;
  v47 = v42;
  v48 = v45;
  v49 = v43;
  v50 = v44;
  v51 = v46;
  v52 = a1;
  v53 = v109;
  swift_retain(v111);
  v54 = v110;
  v55 = v106;
  v56 = v108;
  v57 = v104;
  v58 = v105;
  v59 = v99;
  v60 = v100;
  swift_retain(v101);
  v61 = v102;
  v62 = v103;
  v63 = v23;
  v64 = v40;
  swift_retain(v41);
  v65 = sub_100047110((uint64_t *)&unk_1008397B0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v116, 0, 0, v65);
  swift_release(v41);
  v66 = v107;
  v67 = *(_QWORD *)&v23[v107];
  v68 = *(id *)&v52[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusCardDataProvider];
  swift_retain(v67);
  v69 = sub_100047110((uint64_t *)&unk_1008282C0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)((_QWORD *)v113 + 1, 0, 0, v69);
  swift_release(v67);
  sub_1000252E0((uint64_t)v116, (uint64_t)v114);
  *(_QWORD *)&v113[0] = v68;
  v70 = &v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_fitnessPlusCardFactory];
  v71 = v113[1];
  *(_OWORD *)v70 = v113[0];
  *((_OWORD *)v70 + 1) = v71;
  v72 = v113[2];
  v73 = v114[0];
  v74 = v114[1];
  *((_QWORD *)v70 + 10) = v115;
  *((_OWORD *)v70 + 4) = v74;
  *((_OWORD *)v70 + 2) = v72;
  *((_OWORD *)v70 + 3) = v73;
  v75 = *(_QWORD *)&v52[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_catalogTipDataProvider];
  v76 = *(_QWORD *)&v23[v66];
  v77 = &v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_catalogTipCardFactory];
  *v77 = v75;
  v77[1] = v76;
  v78 = *(void **)&v52[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsDataProvider];
  v79 = *(void **)&v52[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsAvailabilityManager];
  v80 = *(void **)&v52[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsFormattingManager];
  v81 = &v52[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsUserCharacteristics];
  v82 = v52[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsUserCharacteristics + 16];
  v84 = *(_QWORD *)&v52[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsUserFirstName];
  v83 = *(_QWORD *)&v52[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsUserFirstName + 8];
  v85 = *(void **)&v52[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_wheelchairUseCache];
  v86 = &v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_trendsCardFactory];
  v87 = *(_OWORD *)v81;
  *(_QWORD *)v86 = v78;
  *((_QWORD *)v86 + 1) = v79;
  *((_QWORD *)v86 + 2) = v80;
  *(_OWORD *)(v86 + 24) = v87;
  v86[40] = v82;
  *((_QWORD *)v86 + 6) = v84;
  *((_QWORD *)v86 + 7) = v83;
  *((_QWORD *)v86 + 8) = v85;
  swift_bridgeObjectRetain(v83);
  v88 = v85;
  swift_retain(v75);
  swift_retain(v76);
  v89 = v78;
  v90 = v79;
  v91 = v80;

  v92 = (objc_class *)type metadata accessor for SummaryCoordinator();
  v112.receiver = v12;
  v112.super_class = v92;
  v93 = (char *)objc_msgSendSuper2(&v112, "init");
  v94 = *(char **)(*(_QWORD *)&v93[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_context]
                 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_summaryUserProfileProvider);
  v95 = &v94[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_delegate];
  *((_QWORD *)v95 + 1) = &off_1007A4C08;
  swift_unknownObjectWeakAssign(v95, v93);
  v96 = v93;
  v97 = v94;
  sub_100152860();

  _s10FitnessApp24HistoryViewActionContextVwxx_0(v116);
  return v96;
}

uint64_t sub_1003651EC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_100365220()
{
  uint64_t v0;

  sub_10035F5C4(*(_QWORD *)(v0 + 16), *(void (**)(__n128))(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_10036522C()
{
  uint64_t v0;

  sub_10035EE90(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100365238()
{
  uint64_t v0;

  return sub_10035F28C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100365240()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100365284()
{
  uint64_t v0;

  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 24));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1003652B8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FitnessPlusCardFactory(a2, a1);
  return a2;
}

uint64_t sub_1003652F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100365348()
{
  uint64_t v0;

  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100365384(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AwardsCardFactory(a2, a1);
  return a2;
}

uint64_t sub_1003653C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10036541C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_100365440()
{
  uint64_t v0;

  sub_10035E0E4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_100365450(uint64_t a1)
{
  uint64_t v1;

  sub_10035D984(a1, v1);
}

uint64_t sub_10036545C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10082F9AC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_10035D9D8(a1, v4, v5, v6);
}

void sub_1003654C8(uint64_t a1)
{
  uint64_t v1;

  sub_10035DCA0(a1, v1, 0x29u);
}

void sub_1003654E4(uint64_t a1)
{
  uint64_t v1;

  sub_10035DC4C(a1, v1);
}

void sub_1003654EC(uint64_t a1)
{
  uint64_t v1;

  sub_10035DCA0(a1, v1, 0x2Cu);
}

uint64_t sub_10036550C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1008399AC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000DA0E4;
  return sub_10053E31C(a1, v4, v5, v6);
}

void sub_100365578()
{
  uint64_t v0;

  sub_10035DCF8(v0, 0x2Bu);
}

void sub_100365594()
{
  uint64_t v0;

  sub_10035DCF8(v0, 0x31u);
}

uint64_t sub_1003655B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003655D4(uint64_t a1)
{
  uint64_t v1;

  sub_10035DD50(a1, v1);
}

void sub_1003655DC(uint64_t a1)
{
  uint64_t v1;

  sub_10035DBF8(a1, v1);
}

void sub_1003655E4()
{
  uint64_t v0;

  sub_10035CCF0(v0);
}

uint64_t sub_1003655EC(uint64_t a1)
{
  destroy for AwardsCardFactory(a1);
  return a1;
}

uint64_t sub_100365620(uint64_t a1)
{
  destroy for FitnessPlusCardFactory(a1);
  return a1;
}

uint64_t sub_100365654()
{
  _QWORD *v0;

  swift_release(v0[2]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 3);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 8);
  return swift_deallocObject(v0, 112, 7);
}

void sub_100365688()
{
  uint64_t v0;

  sub_100362978(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24), (v0 + 64), *(_QWORD *)(v0 + 104));
}

uint64_t sub_10036569C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

Swift::Int sub_10036571C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[9];

  v1 = v0;
  Hasher.init(_seed:)(v11, 0);
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v11, v2, v3);
  swift_bridgeObjectRelease(v3);
  v4 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v11, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = v1[5];
  if (v6)
  {
    v7 = v1[4];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v6);
    String.hash(into:)(v11, v7, v6);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v9 = v1[6];
  v8 = v1[7];
  swift_bridgeObjectRetain(v8);
  String.hash(into:)(v11, v9, v8);
  swift_bridgeObjectRelease(v8);
  return Hasher._finalize()();
}

uint64_t sub_100365818(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v8 = v1[4];
  v7 = v1[5];
  v10 = v1[6];
  v9 = v1[7];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRetain(v6);
  String.hash(into:)(a1, v5, v6);
  swift_bridgeObjectRelease(v6);
  if (v7)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v7);
    String.hash(into:)(a1, v8, v7);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(a1, v10, v9);
  return swift_bridgeObjectRelease(v9);
}

ValueMetadata *type metadata accessor for WorkoutDetailWeatherElementView()
{
  return &type metadata for WorkoutDetailWeatherElementView;
}

uint64_t _s10FitnessApp31WorkoutDetailWeatherElementViewVwxx_0(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  return swift_bridgeObjectRelease(a1[7]);
}

uint64_t _s10FitnessApp31WorkoutDetailWeatherElementViewVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t _s10FitnessApp31WorkoutDetailWeatherElementViewVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t _s10FitnessApp31WorkoutDetailWeatherElementViewVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t _s10FitnessApp31WorkoutDetailWeatherElementViewVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_100365B34(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailWeatherElementView.ViewModel()
{
  return &type metadata for WorkoutDetailWeatherElementView.ViewModel;
}

Swift::Int sub_100365B98(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  Hasher.init(_seed:)(v11, a1);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v11, v2, v3);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v11, v4, v5);
  swift_bridgeObjectRelease(v5);
  if (v6)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v6);
    String.hash(into:)(v11, v7, v6);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRetain(v8);
  String.hash(into:)(v11, v9, v8);
  swift_bridgeObjectRelease(v8);
  return Hasher._finalize()();
}

uint64_t sub_100365C94(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  char v8;
  _OWORD v9[4];
  char v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v8 = *(_BYTE *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v10 = *(_BYTE *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_100366E58((uint64_t *)v7, v9) & 1;
}

unint64_t sub_100365CF0()
{
  unint64_t result;

  result = qword_10082FA00;
  if (!qword_10082FA00)
  {
    result = swift_getWitnessTable(&unk_100636FCC, &type metadata for WorkoutDetailWeatherElementView.ViewModel);
    atomic_store(result, (unint64_t *)&qword_10082FA00);
  }
  return result;
}

uint64_t sub_100365D34(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B5244, 1);
}

uint64_t sub_100365D44@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;

  v35 = a2;
  v3 = sub_100047110(&qword_10082FA10);
  __chkstk_darwin(v3);
  v34 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v33 = (char *)&v32 - v6;
  v7 = type metadata accessor for DynamicTypeSize(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100047110(&qword_10082FA18);
  __chkstk_darwin(v32);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10082FA20);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v32 - v18;
  *(_QWORD *)v12 = static VerticalAlignment.top.getter(v20);
  *((_QWORD *)v12 + 1) = 0x4010000000000000;
  v12[16] = 0;
  v21 = sub_100047110(&qword_10082FA28);
  sub_1003662BC(a1, (uint64_t)&v12[*(int *)(v21 + 44)]);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DynamicTypeSize.large(_:), v7);
  v22 = sub_100028384(&qword_10082FA30, &qword_10082FA18, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.dynamicTypeSize(_:)(v10, v32, v22);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_10001BE90((uint64_t)v12, &qword_10082FA18);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v16, v13);
  v23 = v33;
  sub_100366008();
  v24 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v24(v16, v19, v13);
  v25 = (uint64_t)v23;
  v26 = (uint64_t)v23;
  v27 = v34;
  sub_100021CC0(v25, v34, &qword_10082FA10);
  v28 = v35;
  v24(v35, v16, v13);
  v29 = sub_100047110(&qword_10082FA38);
  sub_100021CC0(v27, (uint64_t)&v28[*(int *)(v29 + 48)], &qword_10082FA10);
  sub_10001BE90(v26, &qword_10082FA10);
  v30 = *(void (**)(char *, uint64_t))(v14 + 8);
  v30(v19, v13);
  sub_10001BE90(v27, &qword_10082FA10);
  return ((uint64_t (*)(char *, uint64_t))v30)(v16, v13);
}

uint64_t sub_100366008()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t OpaqueTypeConformance2;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];
  char v27;
  _BYTE v28[16];
  uint64_t v29;
  uint64_t v30;

  v1 = sub_100047110(&qword_100820D90);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10082FA40);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_10082FA48);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v0[3];
  v26[0] = v0[2];
  v26[1] = v11;
  v27 = *((_BYTE *)v0 + 64);
  v12 = v0[1];
  v24 = *v0;
  v25 = v12;
  sub_100045AD4((uint64_t)v26, (uint64_t)v28, &qword_10082B520);
  v13 = sub_100045AD4((uint64_t)v28, (uint64_t)&v29, &qword_10082B520);
  v14 = v30;
  if (v30)
  {
    v15 = v29;
    *(_QWORD *)v10 = static VerticalAlignment.center.getter(v13);
    *((_QWORD *)v10 + 1) = 0x4000000000000000;
    v10[16] = 0;
    v16 = sub_100047110(&qword_10082FA58);
    sub_100366764(v15, v14, &v10[*(int *)(v16 + 44)]);
    sub_100021CC0((uint64_t)v10, (uint64_t)v7, &qword_10082FA48);
    swift_storeEnumTagMultiPayload(v7, v5, 0);
    v17 = sub_100028384(&qword_10082FA50, &qword_10082FA48, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v22 = &type metadata for Text;
    v23 = &protocol witness table for Text;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v22, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v7, v8, v1, v17, OpaqueTypeConformance2);
    return sub_10001BE90((uint64_t)v10, &qword_10082FA48);
  }
  else
  {
    sub_100366AE8((uint64_t)v4);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v7, v4, v1);
    swift_storeEnumTagMultiPayload(v7, v5, 1);
    v20 = sub_100028384(&qword_10082FA50, &qword_10082FA48, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v22 = &type metadata for Text;
    v23 = &protocol witness table for Text;
    v21 = swift_getOpaqueTypeConformance2(&v22, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v7, v8, v1, v20, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_1003662BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  char v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  CHWorkoutDetailHeartRateTableViewCell *v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  char v58;
  char v59;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[2];

  v88 = a2;
  v84 = sub_100047110(&qword_10082CBF0);
  __chkstk_darwin(v84);
  v4 = (uint64_t *)((char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for Image.Scale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100047110(&qword_10082CBF8);
  __chkstk_darwin(v81);
  v10 = (uint64_t *)((char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v85 = sub_100047110(&qword_10082FA70);
  __chkstk_darwin(v85);
  v12 = (uint64_t)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_100047110(&qword_10082FA78);
  __chkstk_darwin(v86);
  v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v89 = (uint64_t)&v80 - v16;
  v18 = *a1;
  v17 = a1[1];
  v19 = a1[2];
  v82 = a1[3];
  v83 = v19;
  v87 = *((unsigned __int8 *)a1 + 64);
  swift_bridgeObjectRetain(v17);
  v20 = Image.init(systemName:)(v18, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.small(_:), v5);
  KeyPath = swift_getKeyPath(&unk_1006370B8);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v84 + 28), v8, v5);
  *v4 = KeyPath;
  sub_100021CC0((uint64_t)v4, (uint64_t)v10 + *(int *)(v81 + 36), &qword_10082CBF0);
  *v10 = v20;
  swift_retain(v20);
  sub_10001BE90((uint64_t)v4, &qword_10082CBF0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v22 = swift_release(v20);
  v23 = static Font.caption.getter(v22);
  v24 = swift_getKeyPath(&unk_100637088);
  sub_100021CC0((uint64_t)v10, v12, &qword_10082CBF8);
  v25 = (uint64_t *)(v12 + *(int *)(v85 + 36));
  *v25 = v24;
  v25[1] = v23;
  v26 = sub_10001BE90((uint64_t)v10, &qword_10082CBF8);
  LODWORD(v23) = static HierarchicalShapeStyle.tertiary.getter(v26);
  sub_100021CC0(v12, (uint64_t)v14, &qword_10082FA70);
  *(_DWORD *)&v14[*(int *)(v86 + 36)] = v23;
  sub_10001BE90(v12, &qword_10082FA70);
  sub_100045AD4((uint64_t)v14, v89, &qword_10082FA78);
  v27 = v82;
  v90[0] = v83;
  v90[1] = v82;
  v28 = sub_100038CA0();
  swift_bridgeObjectRetain(v27);
  v29 = Text.init<A>(_:)(v90, &type metadata for String, v28);
  v31 = v30;
  v33 = v32;
  v35 = v34 & 1;
  v37 = static Font.caption.getter(v36);
  v39 = Text.font(_:)(v37, v29, v31, v35, v33, v38);
  v41 = v40;
  LOBYTE(v12) = v42;
  v44 = v43;
  swift_release(v37);
  sub_1000E4458(v29, v31, v35);
  swift_bridgeObjectRelease(v33, v45, v46, v47, v48, v49, v50, v51);
  LODWORD(v90[0]) = static HierarchicalShapeStyle.tertiary.getter(v52);
  v53 = Text.foregroundStyle<A>(_:)(v90, v39, v41, v12 & 1, v44, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v55 = v54;
  v57 = v56;
  v59 = v58 & 1;
  sub_1000E4458(v39, v41, v12 & 1);
  swift_bridgeObjectRelease(v44, v60, v61, v62, v63, v64, v65, v66);
  if ((v87 & 1) != 0)
    v67 = 2;
  else
    v67 = 1;
  v68 = swift_getKeyPath(&unk_1006370E8);
  v69 = v89;
  sub_100021CC0(v89, (uint64_t)v14, &qword_10082FA78);
  v70 = v88;
  sub_100021CC0((uint64_t)v14, v88, &qword_10082FA78);
  v71 = v70 + *(int *)(sub_100047110(&qword_10082FA80) + 48);
  *(_QWORD *)v71 = v53;
  *(_QWORD *)(v71 + 8) = v55;
  *(_BYTE *)(v71 + 16) = v59;
  *(_QWORD *)(v71 + 24) = v57;
  *(_QWORD *)(v71 + 32) = v68;
  *(_QWORD *)(v71 + 40) = v67;
  *(_BYTE *)(v71 + 48) = 0;
  sub_1000E439C(v53, v55, v59);
  swift_bridgeObjectRetain(v57);
  swift_retain(v68);
  sub_10001BE90(v69, &qword_10082FA78);
  sub_1000E4458(v53, v55, v59);
  swift_release(v68);
  swift_bridgeObjectRelease(v57, v72, v73, v74, v75, v76, v77, v78);
  return sub_10001BE90((uint64_t)v14, &qword_10082FA78);
}

uint64_t sub_100366764@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v27 = a1;
  v28 = a3;
  v4 = sub_100047110(&qword_100820D90);
  v26 = *(_QWORD *)(v4 - 8);
  v5 = v26;
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - v9;
  v11 = sub_100047110(&qword_10082FA60);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v25 - v16;
  sub_100366918(v27, a2);
  sub_100366AE8((uint64_t)v10);
  v18 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v18(v14, v17, v11);
  v19 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v19(v7, v10, v4);
  v20 = v28;
  v18(v28, v14, v11);
  v21 = sub_100047110(&qword_10082FA68);
  v19(&v20[*(int *)(v21 + 48)], v7, v4);
  v22 = *(void (**)(char *, uint64_t))(v26 + 8);
  v22(v10, v4);
  v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v17, v11);
  v22(v7, v4);
  return ((uint64_t (*)(char *, uint64_t))v23)(v14, v11);
}

double sub_100366918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  unint64_t v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for DynamicTypeSize(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100823AE8);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a2);
  v11 = Image.init(systemName:)(a1, a2);
  v12 = enum case for Image.TemplateRenderingMode.original(_:);
  v13 = type metadata accessor for Image.TemplateRenderingMode(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v10, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
  v15 = Image.renderingMode(_:)(v10, v11);
  swift_release(v11);
  sub_10001BE90((uint64_t)v10, &qword_100823AE8);
  v17 = static Font.subheadline.getter(v16);
  KeyPath = swift_getKeyPath(&unk_100637088);
  v23 = v15;
  v24 = KeyPath;
  v25 = v17;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DynamicTypeSize.large(_:), v4);
  v19 = sub_100047110(&qword_100826050);
  v20 = sub_1001D2DD0();
  View.dynamicTypeSize(_:)(v7, v19, v20);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release(v23);
  swift_release(v24);
  *(_QWORD *)&result = swift_release(v25).n128_u64[0];
  return result;
}

void sub_100366AE8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  char v42;
  uint64_t v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  CHWorkoutDetailHeartRateTableViewCell *v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  char v58;
  uint64_t v59;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  SEL v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  SEL v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  CHWorkoutDetailHeartRateTableViewCell *v98;

  v94 = a1;
  v2 = type metadata accessor for DynamicTypeSize(0);
  v92 = *(_QWORD *)(v2 - 8);
  v93 = v2;
  __chkstk_darwin(v2);
  v91 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v95 = v7;
  v96 = v8;
  v9 = sub_100038CA0();
  swift_bridgeObjectRetain(v8);
  v10 = Text.init<A>(_:)(&v95, &type metadata for String, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  v17 = static Font.title.getter(v10);
  v19 = Text.font(_:)(v17, v10, v12, v16, v14, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_release(v17);
  v26 = v23 & 1;
  sub_1000E4458(v10, v12, v16);
  swift_bridgeObjectRelease(v14, v27, v28, v29, v30, v31, v32, v33);
  v34 = enum case for Font.Design.rounded(_:);
  v35 = type metadata accessor for Font.Design(0);
  v36 = *(_QWORD *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 104))(v6, v34, v35);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v6, 0, 1, v35);
  v37 = Text.fontDesign(_:)(v6, v19, v21, v26, v25);
  v39 = v38;
  v41 = v40;
  v43 = v42 & 1;
  sub_1000E4458(v19, v21, v26);
  swift_bridgeObjectRelease(v25, v44, v45, v46, v47, v48, v49, v50);
  v51 = sub_10001BE90((uint64_t)v6, &qword_10081F2F8);
  v52 = static Font.Weight.medium.getter(v51);
  v53 = Text.fontWeight(_:)(*(_QWORD *)&v52, 0, v37, v39, v43, v41);
  v55 = v54;
  v57 = v56;
  v59 = v58 & 1;
  sub_1000E4458(v37, v39, v43);
  swift_bridgeObjectRelease(v41, v60, v61, v62, v63, v64, v65, v66);
  LODWORD(v95) = static HierarchicalShapeStyle.secondary.getter(v67);
  v68 = Text.foregroundStyle<A>(_:)(&v95, v53, v55, v59, v57, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v70 = v69;
  LOBYTE(v19) = v71;
  v73 = v72;
  sub_1000E4458(v53, v55, v59);
  swift_bridgeObjectRelease(v57, v74, v75, v76, v77, v78, v79, v80);
  v95 = v68;
  v96 = v70;
  v97 = v19 & 1;
  v98 = v73;
  v82 = v91;
  v81 = v92;
  v83 = v93;
  (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v91, enum case for DynamicTypeSize.large(_:), v93);
  View.dynamicTypeSize(_:)(v82, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v83);
  sub_1000E4458(v95, v96, v97);
  swift_bridgeObjectRelease(v98, v84, v85, v86, v87, v88, v89, v90);
}

uint64_t sub_100366DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _OWORD v8[4];
  char v9;

  v4 = *(_OWORD *)(v2 + 48);
  v8[2] = *(_OWORD *)(v2 + 32);
  v8[3] = v4;
  v9 = *(_BYTE *)(v2 + 64);
  v5 = *(_OWORD *)(v2 + 16);
  v8[0] = *(_OWORD *)v2;
  v8[1] = v5;
  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v6 = sub_100047110(&qword_10082FA08);
  return sub_100365D44((uint64_t *)v8, (char *)(a2 + *(int *)(v6 + 44)));
}

uint64_t sub_100366E58(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    v14 = v10 == v12 && v11 == v13;
    if (v14
      || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
    {
      v16 = a1[5];
      v17 = a2[5];
      if (v16)
      {
        if (v17)
        {
          v18 = a1[4];
          v19 = a2[4];
          if (v18 != v19 || v16 != v17)
          {
            v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v16, v19, v17, 0);
            result = 0;
            if ((v20 & 1) == 0)
              return result;
          }
LABEL_19:
          v21 = a1[6];
          v22 = a1[7];
          v23 = a2[6];
          v24 = a2[7];
          if (v21 == v23 && v22 == v24)
            return 1;
          else
            return _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 0);
        }
      }
      else if (!v17)
      {
        goto LABEL_19;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_100366F44()
{
  return sub_100028384(&qword_10082FA88, &qword_10082FA90, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_100366F70()
{
  uint64_t result;

  sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  result = static UIFont.systemFont(ofSize:weight:design:)(*(_QWORD *)&UIFontWeightRegular, 0, UIFontDescriptorSystemDesignRounded, 24.0);
  qword_10082FA98 = result;
  return result;
}

id sub_100366FD0()
{
  id result;

  result = sub_100366FEC();
  qword_10082FAA0 = (uint64_t)result;
  return result;
}

id sub_100366FEC()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  NSString *v8;
  id v9;
  id v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  id v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  Class isa;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  double v31;
  id v32;
  _BYTE v34[64];
  _BYTE v35[48];

  v0 = sub_100047110(&qword_10082FB08);
  inited = swift_initStackObject(v0, v35);
  *(_OWORD *)(inited + 16) = xmmword_100622F90;
  *(_QWORD *)(inited + 32) = UIFontDescriptorFeatureSettingsAttribute;
  v2 = sub_100047110(&qword_10082FB10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100622F90;
  v4 = sub_100047110(&qword_10082FB18);
  v5 = swift_initStackObject(v4, v34);
  *(_OWORD *)(v5 + 16) = xmmword_100620BC0;
  v6 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 40) = 38;
  v7 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 48) = UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 56) = 1;
  v8 = UIFontDescriptorFeatureSettingsAttribute;
  v9 = v6;
  v10 = v7;
  *(_QWORD *)(v3 + 32) = sub_100038DB0(v5);
  *(_QWORD *)(inited + 40) = v3;
  v11 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435C18(inited);
  if (qword_10081DAE0 != -1)
    swift_once(&qword_10081DAE0, sub_100366F70);
  v12 = objc_msgSend((id)qword_10082FA98, "fontDescriptor", 1, 2);
  sub_1002F74FC((uint64_t)v11);
  v14 = v13;
  swift_bridgeObjectRelease(v11, v15, v16, v17, v18, v19, v20, v21);
  type metadata accessor for AttributeName(0);
  sub_1000083D8((unint64_t *)&qword_10081E830, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10062267C);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14, v23, v24, v25, v26, v27, v28, v29);
  v30 = objc_msgSend(v12, "fontDescriptorByAddingAttributes:", isa);

  objc_msgSend((id)qword_10082FA98, "pointSize");
  v32 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v30, v31);

  return v32;
}

char *sub_100367210(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  double v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  NSString v47;
  id v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  NSString v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  objc_super v60;

  v9 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_insetContentView;
  v10 = objc_allocWithZone((Class)UIView);
  v11 = v4;
  v12 = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v4[v9] = v12;
  v13 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutView;
  v14 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v13] = v14;
  v15 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutIconView;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v15] = v16;
  v17 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutBackgroundView;
  v18 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v17] = v18;
  v19 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_labelStackView;
  v20 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v20, "setAxis:", 1);
  objc_msgSend(v20, "setDistribution:", 3);
  objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v19] = v20;
  v21 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_timeLabel;
  v22 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  LODWORD(v23) = 1148846080;
  objc_msgSend(v22, "setContentCompressionResistancePriority:forAxis:", 1, v23);
  objc_msgSend(v22, "setLineBreakMode:", 0);
  objc_msgSend(v22, "setNumberOfLines:", 0);
  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v21] = v22;
  v24 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_descriptionLabel;
  v25 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v26 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v27 = (void *)UILabel.withFont(_:)(v26);

  v28 = (void *)objc_opt_self(UIColor);
  v29 = objc_msgSend(v28, "secondaryLabelColor");
  v30 = UILabel.withTextColor(_:)(v29);

  *(_QWORD *)&v11[v24] = v30;
  v60.receiver = v11;
  v60.super_class = (Class)type metadata accessor for WalkSuggestionCollectionViewCell();
  v31 = (char *)objc_msgSendSuper2(&v60, "initWithFrame:", a1, a2, a3, a4);
  v32 = objc_msgSend(v31, "contentView");
  v33 = objc_msgSend(v28, "blackColor");
  objc_msgSend(v32, "setBackgroundColor:", v33);

  v34 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_insetContentView;
  v35 = *(id *)&v31[OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_insetContentView];
  v36 = objc_msgSend(v28, "blackColor");
  objc_msgSend(v35, "setBackgroundColor:", v36);

  v37 = *(void **)&v31[v34];
  v38 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutView;
  objc_msgSend(v37, "addSubview:", *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutView]);
  v39 = *(void **)&v31[OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_labelStackView];
  objc_msgSend(v39, "addArrangedSubview:", *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_timeLabel]);
  v40 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_descriptionLabel;
  objc_msgSend(v39, "addArrangedSubview:", *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_descriptionLabel]);
  objc_msgSend(v37, "addSubview:", v39);
  v41 = objc_msgSend(v31, "contentView");
  objc_msgSend(v41, "addSubview:", v37);

  v42 = *(void **)&v31[v38];
  objc_msgSend(v42, "addSubview:", *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutBackgroundView]);
  objc_msgSend(v42, "addSubview:", *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutIconView]);
  sub_100367B3C();
  sub_10036857C();
  v43 = *(void **)&v31[v40];
  v44 = (void *)objc_opt_self(NSBundle);
  v45 = v43;
  v46 = objc_msgSend(v44, "mainBundle");
  v47 = String._bridgeToObjectiveC()();
  v48 = objc_msgSend(v46, "localizedStringForKey:value:table:", v47, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
  v50 = v49;

  v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v50, v52, v53, v54, v55, v56, v57, v58);
  objc_msgSend(v45, "setText:", v51);

  return v31;
}

uint64_t sub_1003677A8(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  double v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v3 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_insetContentView;
  v29 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_insetContentView;
  v4 = objc_allocWithZone((Class)UIView);
  v5 = v2;
  v6 = objc_msgSend(v4, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v2[v3] = v6;
  v7 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutView;
  v28 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutView;
  v8 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v7] = v8;
  v9 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutIconView;
  v27 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutIconView;
  v10 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v9] = v10;
  v11 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutBackgroundView;
  v12 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v11] = v12;
  v13 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_labelStackView;
  v14 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v14, "setAxis:", 1);
  objc_msgSend(v14, "setDistribution:", 3);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v13] = v14;
  v15 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_timeLabel;
  v16 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  LODWORD(v17) = 1148846080;
  objc_msgSend(v16, "setContentCompressionResistancePriority:forAxis:", 1, v17);
  objc_msgSend(v16, "setLineBreakMode:", 0);
  objc_msgSend(v16, "setNumberOfLines:", 0);
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v15] = v16;
  v18 = OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_descriptionLabel;
  v19 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v20 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v21 = (void *)UILabel.withFont(_:)(v20);

  v22 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v23 = UILabel.withTextColor(_:)(v22);

  *(_QWORD *)&v5[v18] = v23;
  v24 = *(void **)&v5[v18];

  v25 = type metadata accessor for WalkSuggestionCollectionViewCell();
  swift_deallocPartialClassInstance(v5, v25, 64, 7);
  return 0;
}

void sub_100367B3C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  SEL v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  void *v93;
  Class isa;

  v1 = v0;
  v93 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = sub_100047110((uint64_t *)&unk_100828340);
  v3 = swift_allocObject(v2, 224, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1006315C0;
  v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_insetContentView];
  v5 = objc_msgSend(v4, "topAnchor");
  v6 = objc_msgSend(v1, "contentView");
  v7 = objc_msgSend(v6, "topAnchor");

  v8 = objc_msgSend(v5, "constraintEqualToAnchor:", v7);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = objc_msgSend(v4, "leadingAnchor");
  v10 = objc_msgSend(v1, "contentView");
  v11 = objc_msgSend(v10, "leadingAnchor");

  v12 = objc_msgSend(v9, "constraintEqualToAnchor:", v11);
  *(_QWORD *)(v3 + 40) = v12;
  v13 = objc_msgSend(v4, "trailingAnchor");
  v14 = objc_msgSend(v1, "contentView");
  v15 = objc_msgSend(v14, "trailingAnchor");

  v16 = objc_msgSend(v13, "constraintEqualToAnchor:", v15);
  *(_QWORD *)(v3 + 48) = v16;
  v17 = objc_msgSend(v4, "bottomAnchor");
  v18 = objc_msgSend(v1, "contentView");
  v19 = objc_msgSend(v18, "bottomAnchor");

  v20 = objc_msgSend(v17, "constraintEqualToAnchor:", v19);
  *(_QWORD *)(v3 + 56) = v20;
  v21 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutView];
  v22 = objc_msgSend(v21, "leadingAnchor");
  v23 = objc_msgSend(v4, "leadingAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v23, 12.0);

  *(_QWORD *)(v3 + 64) = v24;
  v25 = objc_msgSend(v21, "topAnchor");
  v26 = objc_msgSend(v4, "topAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v3 + 72) = v27;
  v28 = objc_msgSend(v21, "bottomAnchor");
  v29 = objc_msgSend(v4, "bottomAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, -10.0);

  *(_QWORD *)(v3 + 80) = v30;
  v31 = objc_msgSend(v21, "heightAnchor");
  v32 = objc_msgSend(v31, "constraintEqualToConstant:", 46.0);

  *(_QWORD *)(v3 + 88) = v32;
  v33 = objc_msgSend(v21, "widthAnchor");
  v34 = objc_msgSend(v33, "constraintEqualToConstant:", 46.0);

  *(_QWORD *)(v3 + 96) = v34;
  v35 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutIconView];
  v36 = objc_msgSend(v35, "leadingAnchor");
  v37 = objc_msgSend(v21, "leadingAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:constant:", v37, 10.0);

  *(_QWORD *)(v3 + 104) = v38;
  v39 = objc_msgSend(v35, "topAnchor");
  v40 = objc_msgSend(v21, "topAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:constant:", v40, 10.0);

  *(_QWORD *)(v3 + 112) = v41;
  v42 = objc_msgSend(v35, "bottomAnchor");
  v43 = objc_msgSend(v21, "bottomAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, -10.0);

  *(_QWORD *)(v3 + 120) = v44;
  v45 = objc_msgSend(v35, "trailingAnchor");
  v46 = objc_msgSend(v21, "trailingAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v46, -10.0);

  *(_QWORD *)(v3 + 128) = v47;
  v48 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutBackgroundView];
  v49 = objc_msgSend(v48, "leadingAnchor");
  v50 = objc_msgSend(v21, "leadingAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

  *(_QWORD *)(v3 + 136) = v51;
  v52 = objc_msgSend(v48, "topAnchor");
  v53 = objc_msgSend(v21, "topAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  *(_QWORD *)(v3 + 144) = v54;
  v55 = objc_msgSend(v48, "bottomAnchor");
  v56 = objc_msgSend(v21, "bottomAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

  *(_QWORD *)(v3 + 152) = v57;
  v58 = objc_msgSend(v48, "trailingAnchor");
  v59 = objc_msgSend(v21, "trailingAnchor");
  v60 = objc_msgSend(v58, "constraintLessThanOrEqualToAnchor:", v59);

  *(_QWORD *)(v3 + 160) = v60;
  v61 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_labelStackView];
  v62 = objc_msgSend(v61, "topAnchor");
  v63 = objc_msgSend(v21, "topAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

  *(_QWORD *)(v3 + 168) = v64;
  v65 = objc_msgSend(v61, "leadingAnchor");
  v66 = objc_msgSend(v21, "trailingAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:constant:", v66, 14.0);

  *(_QWORD *)(v3 + 176) = v67;
  v68 = objc_msgSend(v61, "trailingAnchor");
  v69 = objc_msgSend(v4, "trailingAnchor");
  v70 = objc_msgSend(v68, "constraintEqualToAnchor:constant:", v69, -28.0);

  *(_QWORD *)(v3 + 184) = v70;
  v71 = objc_msgSend(v61, "bottomAnchor");
  v72 = objc_msgSend(v21, "bottomAnchor");
  v73 = objc_msgSend(v71, "constraintEqualToAnchor:", v72);

  *(_QWORD *)(v3 + 192) = v73;
  v74 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_descriptionLabel];
  v75 = objc_msgSend(v74, "topAnchor");
  v76 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_timeLabel];
  v77 = objc_msgSend(v76, "bottomAnchor");
  v78 = objc_msgSend(v75, "constraintEqualToAnchor:", v77);

  *(_QWORD *)(v3 + 200) = v78;
  v79 = objc_msgSend(v74, "trailingAnchor");
  v80 = objc_msgSend(v61, "trailingAnchor");
  v81 = objc_msgSend(v79, "constraintEqualToAnchor:", v80);

  *(_QWORD *)(v3 + 208) = v81;
  v82 = objc_msgSend(v76, "trailingAnchor");
  v83 = objc_msgSend(v61, "trailingAnchor");
  v84 = objc_msgSend(v82, "constraintEqualToAnchor:", v83);

  *(_QWORD *)(v3 + 216) = v84;
  specialized Array._endMutation()(v85);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v3, v86, v87, v88, v89, v90, v91, v92);
  objc_msgSend(v93, "activateConstraints:", isa);

}

void sub_10036857C()
{
  uint64_t v0;
  CHWorkoutDetailHeartRateTableViewCell *v1;
  Class isa;
  SEL v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;

  v1 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435AC8((uint64_t)_swiftEmptyArrayStorage);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v1, v3, v4, v5, v6, v7, v8, v9);
  v10 = objc_msgSend((id)objc_opt_self(FIUIWorkoutActivityType), "activityTypeWithHKWorkoutActivityTypeIdentifier:isIndoor:metadata:", 52, 0, isa);

  v11 = (id)FIUIStaticWorkoutIconImage(v10, 2);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, "imageWithRenderingMode:", 2);

    v14 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "metricColorsForGoalTypeIdentifier:", 0);
    v15 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
    v18 = (id)FIUICircularImage(v15, 46.0);

    v16 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutIconView);
    v17 = objc_msgSend(v14, "nonGradientTextColor");
    objc_msgSend(v16, "setTintColor:", v17);

    objc_msgSend(v16, "setImage:", v13);
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_workoutBackgroundView), "setImage:", v18);

  }
  else
  {
    __break(1u);
  }
}

void sub_100368740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  unint64_t v16;
  const char *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  NSString v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  __n128 v36;
  void *v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  uint64_t v40;
  uint64_t inited;
  void *v42;
  NSString *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  NSString *v47;
  void *v48;
  id v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  id v51;
  NSString v52;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  Class isa;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  NSString v69;
  SEL v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE v81[112];
  uint64_t v82;
  CHWorkoutDetailHeartRateTableViewCell *v83;

  v0 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v2 = v1;
  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, 0, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = objc_msgSend(v3, "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, 0, 0);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v82 = v13;
  v83 = v15;
  v16 = sub_100038CA0();
  StringProtocol.localizedUppercase.getter(&type metadata for String, v16);
  v18 = (CHWorkoutDetailHeartRateTableViewCell *)v17;
  swift_bridgeObjectRelease(v15, v17, v19, v20, v21, v22, v23, v24);
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18, v26, v27, v28, v29, v30, v31, v32);
  sub_10001E724(0, &qword_10081E628, NSString_ptr);
  v33 = sub_100047110((uint64_t *)&unk_100827460);
  v34 = swift_allocObject(v33, 112, 7);
  *(_OWORD *)(v34 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v34 + 56) = &type metadata for String;
  v35 = sub_100038CF8();
  *(_QWORD *)(v34 + 32) = v0;
  *(_QWORD *)(v34 + 40) = v2;
  *(_QWORD *)(v34 + 96) = &type metadata for String;
  *(_QWORD *)(v34 + 104) = v35;
  *(_QWORD *)(v34 + 64) = v35;
  *(_QWORD *)(v34 + 72) = v7;
  *(_QWORD *)(v34 + 80) = v9;
  v36 = swift_bridgeObjectRetain(v9);
  v37 = (void *)NSString.init(format:_:)(v25, v34, v36);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v39 = v38;
  v40 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v40, v81);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v42 = (void *)objc_opt_self(UIColor);
  v43 = NSForegroundColorAttributeName;
  v44 = objc_msgSend(v42, "whiteColor");
  v45 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v44;
  *(_QWORD *)(inited + 64) = v45;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v46 = qword_10081DAE0;
  v47 = NSFontAttributeName;
  if (v46 != -1)
    swift_once(&qword_10081DAE0, sub_100366F70);
  v48 = (void *)qword_10082FA98;
  *(_QWORD *)(inited + 104) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  *(_QWORD *)(inited + 80) = v48;
  v49 = v48;
  v50 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(inited);
  v51 = objc_allocWithZone((Class)NSMutableAttributedString);
  v52 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v39, v53, v54, v55, v56, v57, v58, v59);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v50, v61, v62, v63, v64, v65, v66, v67);
  v68 = objc_msgSend(v51, "initWithString:attributes:", v52, isa);

  v69 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9, v70, v71, v72, v73, v74, v75, v76);
  v77 = objc_msgSend(v37, "rangeOfString:", v69);
  v79 = v78;

  if (qword_10081DAE8 != -1)
    swift_once(&qword_10081DAE8, sub_100366FD0);
  objc_msgSend(v68, "addAttribute:value:range:", v47, qword_10082FAA0, v77, v79, 2, 4);
  objc_msgSend(*(id *)(v80 + OBJC_IVAR____TtC10FitnessApp32WalkSuggestionCollectionViewCell_timeLabel), "setAttributedText:", v68);

}

id sub_100368C14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WalkSuggestionCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WalkSuggestionCollectionViewCell()
{
  return objc_opt_self(_TtC10FitnessApp32WalkSuggestionCollectionViewCell);
}

uint64_t sub_100368CEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_100047110(&qword_10082FD18);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10082FC00);
  sub_1000F0610(&qword_10082FBF8, &qword_10082FC00, (void (*)(void))sub_10036F2D4, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 16))(v6, *a1, v7);
  sub_1000F0610(&qword_10082FC18, &qword_10082FC20, (void (*)(void))sub_10036F3C8, (uint64_t)&protocol conformance descriptor for <A> A?);
  v9 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_100021CC0(a1[1], v9, &qword_10082FC20);
  sub_10036F5C8();
  v10 = (uint64_t)&v6[*(int *)(v4 + 64)];
  sub_100021CC0(a1[2], v10, &qword_10082FC50);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  sub_100045AD4(v9, a2 + *(int *)(v4 + 48), &qword_10082FC20);
  return sub_100045AD4(v10, a2 + *(int *)(v4 + 64), &qword_10082FC50);
}

_QWORD *sub_100368E58(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  _QWORD *v17;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v17 = _swiftEmptyArrayStorage;
    sub_1001214E0(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    v9 = *(_QWORD *)(type metadata accessor for MetricChartData(0) - 8);
    v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    while (1)
    {
      a1(&v16, v10);
      if (v4)
        break;
      v4 = 0;
      v12 = v16;
      v17 = v6;
      v14 = v6[2];
      v13 = v6[3];
      if (v14 >= v13 >> 1)
      {
        sub_1001214E0(v13 > 1, v14 + 1, 1);
        v6 = v17;
      }
      v6[2] = v14 + 1;
      v6[v14 + 4] = v12;
      v10 += v11;
      if (!--v5)
        return v6;
    }
    swift_release(v6);
  }
  return v6;
}

void sub_100368F80(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  void (*v43)(char *, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v44;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t, __n128);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;

  v4 = v3;
  v5 = v2;
  v61 = a1;
  v62 = a2;
  v6 = type metadata accessor for DayIndex(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v56 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v64 = (char *)&v54 - v10;
  __chkstk_darwin(v11);
  v60 = (char *)&v54 - v12;
  v13 = type metadata accessor for Date(0);
  v58 = *(_QWORD *)(v13 - 8);
  v59 = v13;
  __chkstk_darwin(v13);
  v69 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100823520);
  __chkstk_darwin(v15);
  v57 = (uint64_t)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v54 - v18;
  __chkstk_darwin(v20);
  v63 = (uint64_t)&v54 - v21;
  __chkstk_darwin(v22);
  v70 = (uint64_t)&v54 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v54 - v25;
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v54 - v29;
  v68 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
  v68((char *)&v54 - v29, v5, v6, v28);
  v65 = v7;
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v31(v30, 0, 1, v6);
  v31(v26, 1, 1, v6);
  v32 = sub_10036E2E0((uint64_t)v30, (uint64_t)v26);
  sub_10001BE90((uint64_t)v26, &qword_100823520);
  sub_10001BE90((uint64_t)v30, &qword_100823520);
  if (v32)
  {
    v72 = &_swiftEmptyArrayStorage;
    sub_1000476AC(0, v32 & ~(v32 >> 63), 0);
    v33 = v70;
    ((void (*)(uint64_t, uint64_t, uint64_t))v68)(v70, v5, v6);
    v31((char *)v33, 0, 1, v6);
    if ((v32 & 0x8000000000000000) == 0)
    {
      v34 = v32;
      v36 = v64;
      v35 = v65;
      v54 = v5;
      v55 = v19;
      while (v34)
      {
        v67 = v34;
        v40 = v63;
        sub_100021CC0(v33, v63, &qword_100823520);
        v68 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v35 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v68)(v40, 1, v6) == 1)
          goto LABEL_21;
        v41 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 32);
        v42 = v60;
        v41(v60, v40, v6);
        v41(v36, (uint64_t)v42, v6);
        v61(v36);
        if (v4)
        {
          (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v6);
          sub_10001BE90(v70, &qword_100823520);
          swift_release(v72);
          return;
        }
        v43 = *(void (**)(char *, uint64_t))(v35 + 8);
        v43(v36, v6);
        v44 = v72;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v72);
        v66 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000476AC(0, *(_QWORD *)v44->cellPadding + 1, 1);
          v44 = v72;
        }
        v47 = *(_QWORD *)v44->cellPadding;
        v46 = *(_QWORD *)v44->cellInset;
        if (v47 >= v46 >> 1)
        {
          sub_1000476AC(v46 > 1, v47 + 1, 1);
          v44 = v72;
        }
        *(_QWORD *)v44->cellPadding = v47 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))((unint64_t)v44+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(_QWORD *)(v58 + 72) * v47, v69, v59);
        v72 = v44;
        v48 = v57;
        sub_100021CC0(v70, v57, &qword_100823520);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v68)(v48, 1, v6) == 1)
          goto LABEL_22;
        v49 = v56;
        v41(v56, v48, v6);
        v50 = sub_100047110(&qword_100823530);
        v51 = v54 + *(int *)(v50 + 36);
        v52 = sub_1000083D8(&qword_100823538, (uint64_t (*)(uint64_t))&type metadata accessor for DayIndex, (uint64_t)&protocol conformance descriptor for DayIndex);
        v53 = dispatch thunk of static Equatable.== infix(_:_:)(v49, v51, v6, v52);
        v4 = v66;
        if ((v53 & 1) != 0)
        {
          v43(v49, v6);
          v39 = 1;
          v38 = (uint64_t)v55;
        }
        else
        {
          v71 = 1;
          v37 = sub_1000083D8(&qword_100823540, (uint64_t (*)(uint64_t))&type metadata accessor for DayIndex, (uint64_t)&protocol conformance descriptor for DayIndex);
          v38 = (uint64_t)v55;
          dispatch thunk of Strideable.advanced(by:)(&v71, v6, v37);
          v43(v49, v6);
          v39 = 0;
        }
        v31((char *)v38, v39, 1, v6);
        v33 = v70;
        sub_10001BE90(v70, &qword_100823520);
        sub_100045AD4(v38, v33, &qword_100823520);
        v34 = v67 - 1;
        v36 = v64;
        v35 = v65;
        if (v67 == 1)
        {
          sub_10001BE90(v33, &qword_100823520);
          return;
        }
      }
      __break(1u);
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
}

_QWORD *sub_100369504(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t *i;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  void (*v16)(uint64_t *);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v4 = v3;
  v16 = a1;
  v17 = a2;
  v15 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v19 = _swiftEmptyArrayStorage;
    sub_1000476AC(0, v9, 0);
    v10 = v19;
    for (i = (uint64_t *)(a3 + 32); ; ++i)
    {
      v18 = *i;
      v16(&v18);
      if (v4)
        break;
      v4 = 0;
      v19 = v10;
      v13 = v10[2];
      v12 = v10[3];
      if (v13 >= v12 >> 1)
      {
        sub_1000476AC(v12 > 1, v13 + 1, 1);
        v10 = v19;
      }
      v10[2] = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v13, v8, v15);
      if (!--v9)
        return v10;
    }
    swift_release(v10);
  }
  return v10;
}

uint64_t sub_100369660(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v5 = v4;
  v21 = a1;
  v22 = a2;
  v8 = sub_100047110(&qword_100821648);
  v9 = *(_QWORD *)(v8 - 8);
  result = __chkstk_darwin(v8);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a3;
  v13 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v14 = _swiftEmptyArrayStorage;
  if (!v13)
    return (uint64_t)v14;
  v25 = _swiftEmptyArrayStorage;
  result = sub_100045B18(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v14 = v25;
    v15 = v23;
    if (a4 <= v23)
      v16 = v23;
    else
      v16 = a4;
    v20 = v16;
    while (a4 != v15)
    {
      v24 = v15;
      v21(&v24);
      if (v5)
      {
        swift_release(v14);
        return (uint64_t)v14;
      }
      v5 = 0;
      v25 = v14;
      v18 = v14[2];
      v17 = v14[3];
      if (v18 >= v17 >> 1)
      {
        sub_100045B18(v17 > 1, v18 + 1, 1);
        v14 = v25;
      }
      v14[2] = v18 + 1;
      result = sub_100045AD4((uint64_t)v12, (uint64_t)v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v18, &qword_100821648);
      if (a4 < v23)
        goto LABEL_19;
      if (v20 == v15)
        goto LABEL_20;
      if (a4 == ++v15)
        return (uint64_t)v14;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

_QWORD *sub_100369808(void (*a1)(_QWORD *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  _QWORD v18[2];
  _QWORD *v19;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v19 = _swiftEmptyArrayStorage;
    sub_1001214C4(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    v8 = *(_QWORD *)(type metadata accessor for WorkoutChartDataElement(0) - 8);
    v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v16 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      a1(v18, v9);
      if (v4)
        break;
      v4 = 0;
      v10 = v18[0];
      v11 = v18[1];
      v19 = v6;
      v13 = v6[2];
      v12 = v6[3];
      if (v13 >= v12 >> 1)
      {
        sub_1001214C4(v12 > 1, v13 + 1, 1);
        v6 = v19;
      }
      v6[2] = v13 + 1;
      v14 = &v6[2 * v13];
      v14[4] = v10;
      v14[5] = v11;
      v9 += v16;
      if (!--v5)
        return v6;
    }
    swift_release(v6);
  }
  return v6;
}

void sub_10036992C(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = v3;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v16 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v6);
    v8 = *(_QWORD *)(type metadata accessor for WorkoutChartDataElement(0) - 8);
    v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      v11 = a1(&v15, v9);
      if (v4)
        break;
      v4 = 0;
      v12 = v15;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v13 = v16[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v12);
      specialized ContiguousArray._endMutation()(v14);
      v9 += v10;
      if (!--v6)
        return;
    }
    swift_release(v16);
  }
}

uint64_t sub_100369A34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  char *v52;
  char *v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t OpaqueTypeConformance2;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  _QWORD *v94;
  char *v95;
  char v96[16];
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v2 = v1;
  v91 = a1;
  v3 = sub_100047110(&qword_100824C50);
  __chkstk_darwin(v3);
  v90 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100047110(&qword_100824B80);
  __chkstk_darwin(v82);
  v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v79 = (char *)&v74 - v8;
  v9 = type metadata accessor for Date(0);
  v94 = *(_QWORD **)(v9 - 8);
  __chkstk_darwin(v9);
  v95 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v93 = (char *)&v74 - v12;
  __chkstk_darwin(v13);
  v92 = (char *)&v74 - v14;
  v88 = sub_100047110(&qword_100824B88);
  __chkstk_darwin(v88);
  v77 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v83 = (uint64_t)&v74 - v17;
  v18 = sub_100047110(&qword_10082FBD0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100047110(&qword_10082FBD8);
  v81 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100047110(&qword_10082FBE0);
  v86 = *(_QWORD *)(v24 - 8);
  v87 = v24;
  __chkstk_darwin(v24);
  v85 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = v2;
  v26 = sub_100047110(&qword_10082FBE8);
  v27 = sub_10036F218();
  Chart.init(content:)(sub_10036F210, v96, v26, v27);
  v28 = type metadata accessor for WorkoutChart(0);
  v29 = sub_100028384(&qword_10082FCF0, &qword_10082FBD0, (uint64_t)&protocol conformance descriptor for Chart<A>);
  v30 = sub_1000083D8(&qword_10082FCF8, type metadata accessor for WorkoutChart, (uint64_t)&unk_100637164);
  v80 = v23;
  v75 = v29;
  v74 = v30;
  View.accessibilityChartDescriptor<A>(_:)(v2, v18, v28, v29);
  v31 = *(void (**)(char *, uint64_t))(v19 + 8);
  v78 = v18;
  v31(v21, v18);
  v76 = v28;
  v32 = *(int *)(v28 + 20);
  v33 = v92;
  v89 = v2;
  v34 = v2 + v32;
  v35 = *(_QWORD *)(v34 + 8);
  KeyPath = swift_getKeyPath(&unk_100637290);
  v37 = swift_getKeyPath(&unk_1006372B8);
  swift_retain(v35);
  static Published.subscript.getter(v33, v38, KeyPath, v37);
  swift_release(v35);
  swift_release(KeyPath);
  v39 = v37;
  v40 = v93;
  swift_release(v39);
  v41 = *(_QWORD *)(v34 + 8);
  v42 = v94;
  v43 = swift_getKeyPath(&unk_100637290);
  v44 = swift_getKeyPath(&unk_1006372B8);
  swift_retain(v41);
  v45 = v95;
  static Published.subscript.getter(v95, v46, v43, v44);
  swift_release(v43);
  swift_release(v44);
  Date.addingTimeInterval(_:)(v47, *(double *)(v41 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets)* *(double *)(v41 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration));
  v48 = (void (*)(char *, uint64_t))v42[1];
  v48(v45, v9);
  swift_release(v41);
  v49 = sub_1000083D8((unint64_t *)&qword_1008274E0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v33, v40, v9, v49);
  if ((result & 1) != 0)
  {
    v51 = v82;
    v52 = v79;
    v53 = &v79[*(int *)(v82 + 48)];
    v54 = (void (*)(char *, char *, uint64_t))v42[4];
    v54(v79, v33, v9);
    v54(v53, v40, v9);
    v55 = &v6[*(int *)(v51 + 48)];
    v56 = (void (*)(char *, char *, uint64_t))v42[2];
    v56(v6, v52, v9);
    v56(v55, v53, v9);
    v57 = v77;
    v54(v77, v6, v9);
    v48(v55, v9);
    v58 = &v6[*(int *)(v51 + 48)];
    v54(v6, v52, v9);
    v54(v58, v53, v9);
    v59 = v88;
    v54(&v57[*(int *)(v88 + 36)], v58, v9);
    v48(v6, v9);
    v60 = (uint64_t)v57;
    v61 = v83;
    sub_100045AD4(v60, v83, &qword_100824B88);
    v62 = type metadata accessor for ScaleType(0);
    v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56);
    v64 = (uint64_t)v90;
    v63(v90, 1, 1, v62);
    v99 = v78;
    v100 = v76;
    v101 = v75;
    v102 = v74;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v99, &opaque type descriptor for <<opaque return type of View.accessibilityChartDescriptor<A>(_:)>>, 1);
    v66 = sub_10036FB10(&qword_10082FD00, &qword_100824B88);
    v67 = v85;
    v68 = v84;
    v69 = v80;
    View.chartXScale<A>(domain:type:)(v61, v64, v84, v59, OpaqueTypeConformance2, v66);
    sub_10001BE90(v64, &qword_100824C50);
    sub_10001BE90(v61, &qword_100824B88);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v69, v68);
    v98 = *(_OWORD *)(v89 + *(int *)(type metadata accessor for WorkoutChartViewModel(0) + 68));
    v63((char *)v64, 1, 1, v62);
    v70 = sub_100047110(&qword_100825DE8);
    v99 = v68;
    v100 = v59;
    v101 = OpaqueTypeConformance2;
    v102 = v66;
    v71 = swift_getOpaqueTypeConformance2(&v99, &opaque type descriptor for <<opaque return type of View.chartXScale<A>(domain:type:)>>, 1);
    v72 = sub_10036FB10(&qword_100825DF0, &qword_100825DE8);
    v73 = v87;
    View.chartYScale<A>(domain:type:)(&v98, v64, v87, v70, v71, v72);
    sub_10001BE90(v64, &qword_100824C50);
    return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v67, v73);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10036A190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t KeyPath;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[4];

  v74 = a2;
  v3 = sub_100047110(&qword_10082FC98);
  __chkstk_darwin(v3);
  v61 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10082FC60);
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  __chkstk_darwin(v5);
  v62 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10082FC50);
  __chkstk_darwin(v7);
  v73 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v71 = (uint64_t)&v57 - v10;
  v11 = sub_100047110(&qword_10082FC20);
  __chkstk_darwin(v11);
  v72 = (uint64_t)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v66 = (char *)&v57 - v14;
  v15 = type metadata accessor for WorkoutChart(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100047110(&qword_10082FC00);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v69 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v57 - v21;
  v23 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  v60 = v23[15];
  v24 = *(_QWORD *)(a1 + v60);
  v75[0] = *(_QWORD *)(a1 + v23[12]);
  v25 = v75[0];
  KeyPath = swift_getKeyPath(&unk_1006372D8);
  sub_10004F8C8(a1, (uint64_t)v18, type metadata accessor for WorkoutChart);
  v26 = *(unsigned __int8 *)(v16 + 80);
  v27 = (v26 + 16) & ~v26;
  v28 = (v17 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v58 = v28 + 8;
  v59 = v26 | 7;
  v29 = swift_allocObject(&unk_100798AA8, v28 + 8, v26 | 7);
  sub_100047C88((uint64_t)v18, v29 + v27, type metadata accessor for WorkoutChart);
  *(_QWORD *)(v29 + v28) = v24;
  swift_bridgeObjectRetain(v25);
  v30 = sub_100047110(&qword_100824DA0);
  v31 = sub_100047110(&qword_10082FC10);
  v32 = sub_100028384(&qword_100824DB0, &qword_100824DA0, (uint64_t)&protocol conformance descriptor for [A]);
  v33 = sub_10036F2D4();
  v67 = v22;
  v34 = KeyPath;
  v35 = (uint64_t)v66;
  KeyPath = v30;
  ForEach<>.init(_:id:content:)(v75, v34, sub_10036FB90, v29, v30, v31, v32, &protocol witness table for Int, v33);
  sub_10036A700(v35);
  if ((*(_BYTE *)(a1 + v23[9]) & 1) != 0)
  {
    v36 = v61;
    sub_10036B7B8(v61);
    v37 = v71;
    sub_100021CC0(v36, v71, &qword_10082FC98);
    v38 = sub_100047110(&qword_10082FD08);
    swift_storeEnumTagMultiPayload(v37, v38, 1);
    sub_10001BE90(v36, &qword_10082FC98);
  }
  else
  {
    v39 = *(_QWORD *)(a1 + v60);
    v75[0] = *(_QWORD *)(a1 + v23[8]);
    v40 = v75[0];
    v41 = swift_getKeyPath(&unk_1006372D8);
    sub_10004F8C8(a1, (uint64_t)v18, type metadata accessor for WorkoutChart);
    v42 = swift_allocObject(&unk_100798AD0, v58, v59);
    sub_100047C88((uint64_t)v18, v42 + v27, type metadata accessor for WorkoutChart);
    *(_QWORD *)(v42 + v28) = v39;
    swift_bridgeObjectRetain(v40);
    v43 = sub_100047110(&qword_10082FC70);
    v44 = sub_10036F654();
    v45 = v62;
    ForEach<>.init(_:id:content:)(v75, v41, sub_10036FCF0, v42, KeyPath, v43, v32, &protocol witness table for Int, v44);
    v47 = v63;
    v46 = v64;
    v37 = v71;
    (*(void (**)(uint64_t, char *, uint64_t))(v63 + 16))(v71, v45, v64);
    v48 = sub_100047110(&qword_10082FD08);
    swift_storeEnumTagMultiPayload(v37, v48, 0);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v46);
  }
  v50 = v68;
  v49 = v69;
  v51 = v67;
  v52 = v70;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v69, v67, v70);
  v75[0] = v49;
  v53 = v72;
  sub_100021CC0(v35, v72, &qword_10082FC20);
  v75[1] = v53;
  v54 = v73;
  sub_100021CC0(v37, v73, &qword_10082FC50);
  v75[2] = v54;
  sub_100368CEC(v75, v74);
  sub_10001BE90(v37, &qword_10082FC50);
  sub_10001BE90(v35, &qword_10082FC20);
  v55 = *(void (**)(char *, uint64_t))(v50 + 8);
  v55(v51, v52);
  sub_10001BE90(v54, &qword_10082FC50);
  sub_10001BE90(v53, &qword_10082FC20);
  return ((uint64_t (*)(char *, uint64_t))v55)(v49, v52);
}

uint64_t sub_10036A700@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int *v40;
  double v41;
  double v42;
  uint64_t v43;
  char *v44;
  double v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  const char *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  char v63;
  char *v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  CHWorkoutDetailHeartRateTableViewCell *v80;
  CHWorkoutDetailHeartRateTableViewCell *v81;
  CHWorkoutDetailHeartRateTableViewCell *v82;
  CHWorkoutDetailHeartRateTableViewCell *v83;
  char v84;
  char *v85;
  SEL v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  SEL v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  uint64_t v100;
  CHWorkoutDetailHeartRateTableViewCell *v101;
  CHWorkoutDetailHeartRateTableViewCell *v102;
  CHWorkoutDetailHeartRateTableViewCell *v103;
  CHWorkoutDetailHeartRateTableViewCell *v104;
  char v105;
  char *v106;
  SEL v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  SEL v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  char *v121;
  __n128 v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  double v126;
  __n128 v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  double v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  void (**v135)(char *, uint64_t);
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  double v140;
  double v141;
  uint64_t v142;
  CHWorkoutDetailHeartRateTableViewCell *v143;
  CHWorkoutDetailHeartRateTableViewCell *v144;
  CHWorkoutDetailHeartRateTableViewCell *v145;
  CHWorkoutDetailHeartRateTableViewCell *v146;
  char v147;
  char *v148;
  SEL v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  SEL v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  uint64_t v163;
  CHWorkoutDetailHeartRateTableViewCell *v164;
  CHWorkoutDetailHeartRateTableViewCell *v165;
  CHWorkoutDetailHeartRateTableViewCell *v166;
  CHWorkoutDetailHeartRateTableViewCell *v167;
  char v168;
  char *v169;
  SEL v170;
  id v171;
  id v172;
  id v173;
  id v174;
  id v175;
  id v176;
  SEL v177;
  id v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  uint64_t v184;
  CHWorkoutDetailHeartRateTableViewCell *v185;
  CHWorkoutDetailHeartRateTableViewCell *v186;
  CHWorkoutDetailHeartRateTableViewCell *v187;
  CHWorkoutDetailHeartRateTableViewCell *v188;
  char v189;
  char *v190;
  SEL v191;
  id v192;
  id v193;
  id v194;
  id v195;
  id v196;
  id v197;
  SEL v198;
  id v199;
  id v200;
  id v201;
  id v202;
  id v203;
  id v204;
  char *v205;
  __n128 v206;
  __n128 v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  __n128 v211;
  uint64_t OpaqueTypeConformance2;
  char *v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  CHWorkoutDetailHeartRateTableViewCell *v224;
  CHWorkoutDetailHeartRateTableViewCell *v225;
  CHWorkoutDetailHeartRateTableViewCell *v226;
  CHWorkoutDetailHeartRateTableViewCell *v227;
  char v228;
  uint64_t v229;
  SEL v230;
  id v231;
  id v232;
  id v233;
  id v234;
  id v235;
  id v236;
  SEL v237;
  id v238;
  id v239;
  id v240;
  id v241;
  id v242;
  id v243;
  uint64_t v244;
  CHWorkoutDetailHeartRateTableViewCell *v245;
  CHWorkoutDetailHeartRateTableViewCell *v246;
  CHWorkoutDetailHeartRateTableViewCell *v247;
  CHWorkoutDetailHeartRateTableViewCell *v248;
  char v249;
  char *v250;
  SEL v251;
  id v252;
  id v253;
  id v254;
  id v255;
  id v256;
  id v257;
  SEL v258;
  id v259;
  id v260;
  id v261;
  id v262;
  id v263;
  id v264;
  uint64_t v265;
  CHWorkoutDetailHeartRateTableViewCell *v266;
  CHWorkoutDetailHeartRateTableViewCell *v267;
  CHWorkoutDetailHeartRateTableViewCell *v268;
  CHWorkoutDetailHeartRateTableViewCell *v269;
  char v270;
  char *v271;
  CHWorkoutDetailHeartRateTableViewCell *v272;
  SEL v273;
  id v274;
  id v275;
  id v276;
  id v277;
  id v278;
  id v279;
  SEL v280;
  id v281;
  id v282;
  id v283;
  id v284;
  id v285;
  id v286;
  char *v287;
  __n128 v288;
  __n128 v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  __n128 v294;
  char *v295;
  uint64_t v296;
  char *v297;
  uint64_t v298;
  void (*v299)(char *, char *, uint64_t);
  uint64_t v300;
  char *v301;
  uint64_t v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  void (*v307)(char *, uint64_t);
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  uint64_t v317;
  char *v318;
  uint64_t v319;
  char *v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  void (**v325)(char *, uint64_t);
  uint64_t v326;
  uint64_t v327;
  char *v328;
  char *v329;
  char *v330;
  uint64_t v331;
  char *v332;
  uint64_t v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  char *v339;
  char *v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  char v344[8];
  uint64_t v345;
  void *v346;
  void *v347;
  void *v348;
  double v349;
  void *v350;
  void *v351;
  void *v352;

  v342 = a1;
  v319 = sub_100047110(&qword_10082FD38);
  __chkstk_darwin(v319);
  v318 = (char *)&v312 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_10082FC40);
  __chkstk_darwin(v3);
  v320 = (char *)&v312 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10082FC10);
  __chkstk_darwin(v5);
  v317 = (uint64_t)&v312 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v321 = (char *)&v312 - v8;
  v9 = sub_100047110(&qword_100824DC0);
  __chkstk_darwin(v9);
  v329 = (char *)&v312 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v328 = (char *)&v312 - v12;
  v13 = sub_100047110(&qword_100824DC8);
  __chkstk_darwin(v13);
  v338 = (char *)&v312 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v331 = type metadata accessor for RuleMark(0);
  v323 = *(_QWORD *)(v331 - 8);
  __chkstk_darwin(v331);
  v330 = (char *)&v312 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v333 = sub_100047110(&qword_100824CC8);
  v324 = *(_QWORD *)(v333 - 8);
  __chkstk_darwin(v333);
  v332 = (char *)&v312 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v326 = sub_100047110(&qword_100824DA8);
  v325 = *(void (***)(char *, uint64_t))(v326 - 8);
  __chkstk_darwin(v326);
  v334 = (char *)&v312 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v336 = sub_100047110(&qword_10082FD40);
  v335 = *(_QWORD *)(v336 - 8);
  __chkstk_darwin(v336);
  v316 = (char *)&v312 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v339 = (char *)&v312 - v20;
  __chkstk_darwin(v21);
  v340 = (char *)&v312 - v22;
  v23 = sub_100047110(&qword_10082BFA8);
  __chkstk_darwin(v23);
  v25 = (char *)&v312 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v341 = type metadata accessor for WorkoutChartDataElement(0);
  v322 = *(_QWORD *)(v341 - 8);
  __chkstk_darwin(v341);
  v337 = (uint64_t)&v312 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100047110(&qword_10082FC30);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v327 = (uint64_t)&v312 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v30);
  v32 = (char *)&v312 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for Date(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v36 = (char *)&v312 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *(int *)(type metadata accessor for WorkoutChart(0) + 20);
  v343 = v1;
  v38 = *(_QWORD *)&v1[v37 + 8] + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  swift_beginAccess(v38, v344, 0, 0);
  sub_100021CC0(v38, (uint64_t)v32, (uint64_t *)&unk_100828370);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
  {
    sub_10001BE90((uint64_t)v32, (uint64_t *)&unk_100828370);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v342, 1, 1, v27);
  }
  else
  {
    v314 = v28;
    v315 = v27;
    v313 = v34;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v36, v32, v33);
    v40 = (int *)type metadata accessor for WorkoutChartViewModel(0);
    v41 = *(double *)&v343[v40[17] + 8];
    v42 = *(double *)&v343[v40[18]] * 4.0;
    sub_1002A2C58((uint64_t)v36, (uint64_t)v25);
    v43 = v322;
    v44 = v36;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v322 + 48))(v25, 1, v341) == 1)
    {
      sub_10001BE90((uint64_t)v25, &qword_10082BFA8);
      v45 = *(double *)&v343[v40[15]];
      v46 = *(CHWorkoutDetailHeartRateTableViewCell **)&v343[v40[12]];
      v47 = *(_QWORD *)v46->cellPadding;
      if (v47)
      {
        v48 = (char *)v46
            + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
        v49 = *(_QWORD *)(v43 + 72);
        swift_bridgeObjectRetain(v46);
        while ((static Date.== infix(_:_:)(v48, v36) & 1) == 0)
        {
          v48 += v49;
          if (!--v47)
          {
            v42 = 0.0;
            break;
          }
        }
        swift_bridgeObjectRelease(v46, v50, v51, v52, v53, v54, v55, v56);
      }
      else
      {
        v42 = 0.0;
      }
      v142 = LocalizedStringKey.init(stringLiteral:)(1701669204, 0xE400000000000000);
      v144 = v143;
      v146 = v145;
      v148 = v338;
      static PlottableValue.value(_:_:)(v142, v143, v147 & 1, v145, v44, v33, &protocol witness table for Date);
      swift_bridgeObjectRelease(v146, v149, v150, v151, v152, v153, v154, v155);
      swift_bridgeObjectRelease(v144, v156, v157, v158, v159, v160, v161, v162);
      v163 = LocalizedStringKey.init(stringLiteral:)(7235917, 0xE300000000000000);
      v165 = v164;
      v167 = v166;
      v349 = v45 + v42;
      v169 = v328;
      static PlottableValue.value(_:_:)(v163, v164, v168 & 1, v166, &v349, &type metadata for Double, &protocol witness table for Double);
      swift_bridgeObjectRelease(v167, v170, v171, v172, v173, v174, v175, v176);
      swift_bridgeObjectRelease(v165, v177, v178, v179, v180, v181, v182, v183);
      v184 = LocalizedStringKey.init(stringLiteral:)(7889229, 0xE300000000000000);
      v186 = v185;
      v188 = v187;
      v349 = v41;
      v190 = v329;
      static PlottableValue.value(_:_:)(v184, v185, v189 & 1, v187, &v349, &type metadata for Double, &protocol witness table for Double);
      swift_bridgeObjectRelease(v188, v191, v192, v193, v194, v195, v196, v197);
      swift_bridgeObjectRelease(v186, v198, v199, v200, v201, v202, v203, v204);
      v205 = v330;
      RuleMark.init<A, B>(x:yStart:yEnd:)(v148, v169, v190, v33, &type metadata for Double, &protocol witness table for Date, &protocol witness table for Double, v206);
      *(double *)&v208 = COERCE_DOUBLE(static Color.gray.getter(v207));
      v349 = *(double *)&v208;
      v209 = v332;
      v210 = v331;
      ChartContent.foregroundStyle<A>(_:)(&v349, v331, &type metadata for Color, &protocol witness table for RuleMark, &protocol witness table for Color);
      v211 = swift_release(v208);
      (*(void (**)(char *, uint64_t, __n128))(v323 + 8))(v205, v210, v211);
      StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v349, 1, 0, _swiftEmptyArrayStorage, 2.0, 10.0, 0.0);
      v345 = v210;
      v346 = &type metadata for Color;
      v347 = &protocol witness table for RuleMark;
      v348 = &protocol witness table for Color;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v345, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
      v213 = v334;
      v214 = v333;
      ChartContent.lineStyle(_:)(&v349, v333, OpaqueTypeConformance2);
      sub_1001B57E8((uint64_t)&v349);
      (*(void (**)(char *, uint64_t))(v324 + 8))(v209, v214);
      v345 = v214;
      v346 = (void *)OpaqueTypeConformance2;
      swift_getOpaqueTypeConformance2(&v345, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
      v215 = v316;
      v216 = v326;
      ChartContent.accessibilityHidden(_:)(1, v326);
      v325[1](v213, v216);
      v217 = v335;
      v218 = v339;
      v219 = v33;
      v220 = v336;
      (*(void (**)(char *, char *, uint64_t))(v335 + 32))(v339, v215, v336);
      v221 = v327;
      (*(void (**)(uint64_t, char *, uint64_t))(v217 + 16))(v327, v218, v220);
      v222 = sub_100047110(&qword_10082FD48);
      swift_storeEnumTagMultiPayload(v221, v222, 1);
      (*(void (**)(char *, uint64_t))(v217 + 8))(v218, v220);
      (*(void (**)(char *, uint64_t))(v313 + 8))(v44, v219);
    }
    else
    {
      v57 = v337;
      sub_100047C88((uint64_t)v25, v337, type metadata accessor for WorkoutChartDataElement);
      v58 = LocalizedStringKey.init(stringLiteral:)(1701669204, 0xE400000000000000);
      v60 = v59;
      v62 = v61;
      v64 = v338;
      static PlottableValue.value(_:_:)(v58, v59, v63 & 1, v61, v36, v33, &protocol witness table for Date);
      swift_bridgeObjectRelease(v62, v65, v66, v67, v68, v69, v70, v71);
      swift_bridgeObjectRelease(v60, v72, v73, v74, v75, v76, v77, v78);
      v79 = LocalizedStringKey.init(stringLiteral:)(7235917, 0xE300000000000000);
      v81 = v80;
      v83 = v82;
      v349 = v42 + *(double *)(v57 + *(int *)(v341 + 28));
      v85 = v328;
      static PlottableValue.value(_:_:)(v79, v80, v84 & 1, v82, &v349, &type metadata for Double, &protocol witness table for Double);
      swift_bridgeObjectRelease(v83, v86, v87, v88, v89, v90, v91, v92);
      swift_bridgeObjectRelease(v81, v93, v94, v95, v96, v97, v98, v99);
      v100 = LocalizedStringKey.init(stringLiteral:)(7889229, 0xE300000000000000);
      v102 = v101;
      v104 = v103;
      v349 = v41;
      v106 = v329;
      static PlottableValue.value(_:_:)(v100, v101, v105 & 1, v103, &v349, &type metadata for Double, &protocol witness table for Double);
      swift_bridgeObjectRelease(v104, v107, v108, v109, v110, v111, v112, v113);
      swift_bridgeObjectRelease(v102, v114, v115, v116, v117, v118, v119, v120);
      v121 = v330;
      v322 = v33;
      RuleMark.init<A, B>(x:yStart:yEnd:)(v64, v85, v106, v33, &type metadata for Double, &protocol witness table for Date, &protocol witness table for Double, v122);
      sub_100538FFC(v343[v40[5]]);
      *(double *)&v124 = COERCE_DOUBLE(Color.init(_:)(v123));
      v349 = *(double *)&v124;
      v125 = v332;
      v126 = *(double *)&v331;
      ChartContent.foregroundStyle<A>(_:)(&v349, v331, &type metadata for Color, &protocol witness table for RuleMark, &protocol witness table for Color);
      v127 = swift_release(v124);
      v323 = *(_QWORD *)(v323 + 8);
      ((void (*)(char *, _QWORD, __n128))v323)(v121, *(_QWORD *)&v126, v127);
      v128 = 1;
      StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v345, 1, 0, _swiftEmptyArrayStorage, 2.0, 10.0, 0.0);
      v349 = v126;
      v350 = &type metadata for Color;
      v351 = &protocol witness table for RuleMark;
      v352 = &protocol witness table for Color;
      v129 = swift_getOpaqueTypeConformance2(&v349, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
      v130 = v334;
      v131 = *(double *)&v333;
      ChartContent.lineStyle(_:)(&v345, v333, v129);
      sub_1001B57E8((uint64_t)&v345);
      v324 = *(_QWORD *)(v324 + 8);
      ((void (*)(char *, _QWORD))v324)(v125, *(_QWORD *)&v131);
      v349 = v131;
      v350 = (void *)v129;
      v132 = swift_getOpaqueTypeConformance2(&v349, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
      v133 = v339;
      v134 = v326;
      v316 = (char *)v132;
      ChartContent.accessibilityHidden(_:)(1, v326);
      v135 = (void (**)(char *, uint64_t))v325[1];
      ((void (*)(char *, uint64_t))v135)(v130, v134);
      v136 = v335;
      v137 = *(char **)(v335 + 32);
      v138 = v336;
      ((void (*)(char *, char *, uint64_t))v137)(v340, v133, v336);
      if (v343[v40[9]] == 1)
      {
        v325 = v135;
        v139 = v322;
        v140 = *(double *)&v343[v40[15]];
        v141 = *(double *)(v337 + *(int *)(v341 + 24)) - v42;
        if (v140 <= v141)
        {
          v223 = LocalizedStringKey.init(stringLiteral:)(1701669204, 0xE400000000000000);
          v225 = v224;
          v343 = v137;
          v227 = v226;
          v229 = v139;
          static PlottableValue.value(_:_:)(v223, v224, v228 & 1, v226, v44, v139, &protocol witness table for Date);
          swift_bridgeObjectRelease(v227, v230, v231, v232, v233, v234, v235, v236);
          swift_bridgeObjectRelease(v225, v237, v238, v239, v240, v241, v242, v243);
          v244 = LocalizedStringKey.init(stringLiteral:)(7235917, 0xE300000000000000);
          v246 = v245;
          v248 = v247;
          v349 = v140;
          v250 = v328;
          static PlottableValue.value(_:_:)(v244, v245, v249 & 1, v247, &v349, &type metadata for Double, &protocol witness table for Double);
          swift_bridgeObjectRelease(v248, v251, v252, v253, v254, v255, v256, v257);
          swift_bridgeObjectRelease(v246, v258, v259, v260, v261, v262, v263, v264);
          v265 = LocalizedStringKey.init(stringLiteral:)(7889229, 0xE300000000000000);
          v267 = v266;
          v269 = v268;
          v349 = v141;
          v271 = v329;
          static PlottableValue.value(_:_:)(v265, v266, v270 & 1, v268, &v349, &type metadata for Double, &protocol witness table for Double);
          v272 = v269;
          v138 = v336;
          swift_bridgeObjectRelease(v272, v273, v274, v275, v276, v277, v278, v279);
          swift_bridgeObjectRelease(v267, v280, v281, v282, v283, v284, v285, v286);
          v287 = v330;
          RuleMark.init<A, B>(x:yStart:yEnd:)(v338, v250, v271, v229, &type metadata for Double, &protocol witness table for Date, &protocol witness table for Double, v288);
          *(double *)&v290 = COERCE_DOUBLE(static Color.gray.getter(v289));
          v349 = *(double *)&v290;
          v291 = v332;
          v292 = v331;
          ChartContent.foregroundStyle<A>(_:)(&v349, v331, &type metadata for Color, &protocol witness table for RuleMark, &protocol witness table for Color);
          v293 = v290;
          v136 = v335;
          v294 = swift_release(v293);
          ((void (*)(char *, uint64_t, __n128))v323)(v287, v292, v294);
          StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v349, 1, 0, _swiftEmptyArrayStorage, 2.0, 10.0, 0.0);
          v295 = v334;
          v296 = v333;
          ChartContent.lineStyle(_:)(&v349, v333, v129);
          sub_1001B57E8((uint64_t)&v349);
          ((void (*)(char *, uint64_t))v324)(v291, v296);
          v133 = v339;
          ChartContent.accessibilityHidden(_:)(1, v134);
          v297 = v295;
          v137 = v343;
          ((void (*)(char *, uint64_t))v325)(v297, v134);
          ((void (*)(char *, char *, uint64_t))v137)(v321, v133, v138);
          v128 = 0;
        }
        else
        {
          v128 = 1;
          v133 = v339;
        }
      }
      v298 = (uint64_t)v321;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v136 + 56))(v321, v128, 1, v138);
      v299 = *(void (**)(char *, char *, uint64_t))(v136 + 16);
      v299(v133, v340, v138);
      v343 = v44;
      v300 = v317;
      sub_100021CC0(v298, v317, &qword_10082FC10);
      v301 = v318;
      v299(v318, v133, v138);
      sub_10036F2D4();
      v302 = v136;
      v303 = v137;
      v304 = v319;
      v305 = (uint64_t)&v301[*(int *)(v319 + 48)];
      sub_100021CC0(v300, v305, &qword_10082FC10);
      v306 = (uint64_t)v320;
      ((void (*)(char *, char *, uint64_t))v303)(v320, v301, v138);
      sub_100045AD4(v305, v306 + *(int *)(v304 + 48), &qword_10082FC10);
      sub_10001BE90(v300, &qword_10082FC10);
      v307 = *(void (**)(char *, uint64_t))(v302 + 8);
      v307(v133, v138);
      v221 = v327;
      sub_100021CC0(v306, v327, &qword_10082FC40);
      v308 = sub_100047110(&qword_10082FD48);
      swift_storeEnumTagMultiPayload(v221, v308, 0);
      sub_10001BE90(v306, &qword_10082FC40);
      sub_10001BE90(v298, &qword_10082FC10);
      v307(v340, v138);
      sub_100011F54(v337, type metadata accessor for WorkoutChartDataElement);
      (*(void (**)(char *, uint64_t))(v313 + 8))(v343, v322);
    }
    v309 = v342;
    v310 = v315;
    v311 = v314;
    sub_100045AD4(v221, v342, &qword_10082FC30);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v311 + 56))(v309, 0, 1, v310);
  }
}

uint64_t sub_10036B7B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  int *v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t OpaqueTypeConformance2;
  char *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t KeyPath;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  _OWORD v77[2];
  uint64_t v78;

  v2 = v1;
  v73 = a1;
  KeyPath = sub_100047110(&qword_10082FCD0);
  v64 = *(_QWORD *)(KeyPath - 8);
  __chkstk_darwin(KeyPath);
  v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WorkoutChart(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10082FCA8);
  v66 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100047110(&qword_10082FCA0);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_10082FD20);
  v71 = *(_QWORD *)(v14 - 8);
  v72 = v14;
  __chkstk_darwin(v14);
  v67 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v69 = (char *)&v64 - v17;
  v18 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  v19 = v18;
  v20 = *(_QWORD *)(v2 + v18[13]);
  if (v20)
  {
    v21 = *(double *)(v2 + v18[15]);
    v22 = *(double *)(v2 + v18[16]);
    swift_retain(v20);
    sub_10029F998(v21, v22, 1.0);
    v24 = v23;
    v26 = static UnitPoint.bottom.getter(v25);
    v28 = v27;
    v30 = static UnitPoint.top.getter(v29);
    LinearGradient.init(gradient:startPoint:endPoint:)(v77, v24, v26, v28, v30, v31);
    *(_QWORD *)&v74 = *(_QWORD *)(v2 + v19[8]);
    v32 = v74;
    KeyPath = swift_getKeyPath(&unk_1006372D8);
    sub_10004F8C8(v2, (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for WorkoutChart);
    v33 = *(unsigned __int8 *)(v6 + 80);
    v34 = (v33 + 16) & ~v33;
    v35 = swift_allocObject(&unk_100798B20, v34 + v7, v33 | 7);
    sub_100047C88((uint64_t)v8, v35 + v34, type metadata accessor for WorkoutChart);
    swift_bridgeObjectRetain(v32);
    v36 = sub_100047110(&qword_100824DA0);
    v37 = sub_100047110(&qword_10082FCC0);
    v38 = sub_100028384(&qword_100824DB0, &qword_100824DA0, (uint64_t)&protocol conformance descriptor for [A]);
    v39 = sub_10036F8BC();
    ForEach<>.init(_:id:content:)(&v74, KeyPath, sub_10036FEC4, v35, v36, v37, v38, &protocol witness table for Int, v39);
    v74 = v77[0];
    v75 = v77[1];
    v76 = v78;
    v40 = sub_1000F0610(&qword_10082FCB0, &qword_10082FCA8, (void (*)(void))sub_10036F8BC, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
    ChartContent.foregroundStyle<A>(_:)(&v74, v9, &type metadata for LinearGradient, v40, &protocol witness table for LinearGradient);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v11, v9);
    sub_1000478F4(v77);
    *(_QWORD *)&v74 = v9;
    *((_QWORD *)&v74 + 1) = &type metadata for LinearGradient;
    *(_QWORD *)&v75 = v40;
    *((_QWORD *)&v75 + 1) = &protocol witness table for LinearGradient;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v74, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    v42 = v67;
    v43 = v70;
    ChartContent.alignsMarkStylesWithPlotArea(_:)(1, v70, OpaqueTypeConformance2);
    v44 = swift_release(v20);
    (*(void (**)(char *, uint64_t, __n128))(v68 + 8))(v13, v43, v44);
    v46 = v71;
    v45 = v72;
    v47 = v69;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v69, v42, v72);
    v48 = v73;
    (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v73, v47, v45);
    v49 = sub_100047110(&qword_10082FD28);
    swift_storeEnumTagMultiPayload(v48, v49, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v45);
  }
  else
  {
    *(_QWORD *)&v77[0] = *(_QWORD *)(v2 + v18[8]);
    v51 = *(_QWORD *)&v77[0];
    v52 = swift_getKeyPath(&unk_1006372D8);
    sub_10004F8C8(v2, (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for WorkoutChart);
    v53 = *(unsigned __int8 *)(v6 + 80);
    v54 = (v53 + 16) & ~v53;
    v55 = swift_allocObject(&unk_100798AF8, v54 + v7, v53 | 7);
    sub_100047C88((uint64_t)v8, v55 + v54, type metadata accessor for WorkoutChart);
    swift_bridgeObjectRetain(v51);
    v56 = sub_100047110(&qword_100824DA0);
    v57 = sub_100047110(&qword_10082FCE0);
    v58 = sub_100028384(&qword_100824DB0, &qword_100824DA0, (uint64_t)&protocol conformance descriptor for [A]);
    v59 = sub_10036F9C0();
    ForEach<>.init(_:id:content:)(v77, v52, sub_10036FD70, v55, v56, v57, v58, &protocol witness table for Int, v59);
    v60 = v64;
    v61 = v73;
    v62 = KeyPath;
    (*(void (**)(uint64_t, char *, uint64_t))(v64 + 16))(v73, v4, KeyPath);
    v63 = sub_100047110(&qword_10082FD28);
    swift_storeEnumTagMultiPayload(v61, v63, 1);
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v4, v62);
  }
}

uint64_t sub_10036BD48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  char v33;
  char v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  uint64_t v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  CHWorkoutDetailHeartRateTableViewCell *v56;
  char v57;
  SEL v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  char v75;
  char v76;
  CHWorkoutDetailHeartRateTableViewCell *v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  uint64_t v79;
  char *v80;
  SEL v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  SEL v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  char *v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  id v99;
  void *v100;
  uint64_t v101;
  CHWorkoutDetailHeartRateTableViewCell *v102;
  CHWorkoutDetailHeartRateTableViewCell *v103;
  unint64_t v105;
  char *v106;
  double v107;
  SEL v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  CHWorkoutDetailHeartRateTableViewCell *v120;
  CHWorkoutDetailHeartRateTableViewCell *v121;
  uint64_t OpaqueTypeConformance2;
  char *v123;
  double v124;
  SEL v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t);
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  CHWorkoutDetailHeartRateTableViewCell *v167;
  uint64_t v168;
  void *v169;
  double v170;
  CHWorkoutDetailHeartRateTableViewCell *v171;
  void *v172;
  unint64_t v173;

  v8 = sub_100047110(&qword_100824DC0);
  __chkstk_darwin(v8);
  v155 = (char *)&v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v146 - v11;
  v13 = sub_100047110(&qword_100824DC8);
  __chkstk_darwin(v13);
  v15 = (char *)&v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RuleMark(0);
  v156 = *(_QWORD *)(v16 - 8);
  v157 = v16;
  __chkstk_darwin(v16);
  v154 = (char *)&v146 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100047110(&qword_10082FC88);
  v159 = *(_QWORD *)(v18 - 8);
  v160 = v18;
  __chkstk_darwin(v18);
  v158 = (char *)&v146 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_100047110(&qword_10082FC80);
  v162 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v161 = (char *)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100047110(&qword_10082FC78);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v146 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100047110(&qword_10082FD10);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v164 = (char *)&v146 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v163 = (char *)&v146 - v29;
  if ((sub_10036C47C(a1) & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(a3, 1, 1, v25);
  v147 = v24;
  v148 = v22;
  v149 = v26;
  v150 = v21;
  v151 = v25;
  v153 = a3;
  v30 = LocalizedStringKey.init(stringLiteral:)(1701669204, 0xE400000000000000);
  v152 = a2;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v37 = type metadata accessor for Date(0);
  static PlottableValue.value(_:_:)(v30, v32, v34 & 1, v36, a1, v37, &protocol witness table for Date);
  swift_bridgeObjectRelease(v36, v38, v39, v40, v41, v42, v43, v44);
  swift_bridgeObjectRelease(v32, v45, v46, v47, v48, v49, v50, v51);
  v52 = LocalizedStringKey.init(stringLiteral:)(7235917, 0xE300000000000000);
  v54 = v53;
  v56 = v55;
  v170 = a4;
  static PlottableValue.value(_:_:)(v52, v53, v57 & 1, v55, &v170, &type metadata for Double, &protocol witness table for Double);
  swift_bridgeObjectRelease(v56, v58, v59, v60, v61, v62, v63, v64);
  swift_bridgeObjectRelease(v54, v65, v66, v67, v68, v69, v70, v71);
  v72 = LocalizedStringKey.init(stringLiteral:)(0x65756C6156, 0xE500000000000000);
  v74 = v73;
  v76 = v75;
  v78 = v77;
  v170 = *(double *)(a1 + *(int *)(type metadata accessor for WorkoutChartDataElement(0) + 20));
  v79 = v76 & 1;
  v80 = v155;
  static PlottableValue.value(_:_:)(v72, v74, v79, v78, &v170, &type metadata for Double, &protocol witness table for Double);
  swift_bridgeObjectRelease(v78, v81, v82, v83, v84, v85, v86, v87);
  swift_bridgeObjectRelease(v74, v88, v89, v90, v91, v92, v93, v94);
  v95 = v154;
  v96 = v152;
  RuleMark.init<A, B>(x:yStart:yEnd:)(v15, v12, v80, v37, &type metadata for Double, &protocol witness table for Date, &protocol witness table for Double, v97);
  v98 = type metadata accessor for WorkoutChartViewModel(0);
  v99 = objc_msgSend(*(id *)(v96 + *(int *)(v98 + 80)), "stringFromTimeInterval:", Date.timeIntervalSince(_:)(v96 + *(int *)(v98 + 40)));
  if (v99)
  {
    v100 = v99;
    *(double *)&v101 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)(v99));
    v103 = v102;

  }
  else
  {
    *(double *)&v101 = 0.0;
    v103 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
  }
  v170 = *(double *)&v101;
  v171 = v103;
  v105 = sub_100038CA0();
  v107 = *(double *)&v157;
  v106 = v158;
  ChartContent.accessibilityLabel<A>(_:)(&v170, v157, &type metadata for String, &protocol witness table for RuleMark, v105);
  swift_bridgeObjectRelease(v103, v108, v109, v110, v111, v112, v113, v114);
  (*(void (**)(char *, double))(v156 + 8))(v95, COERCE_DOUBLE(*(_QWORD *)&v107));
  v115 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v116 = sub_1002A2E68(a1, v115);

  v117 = objc_msgSend(v116, "string");
  v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(v117);
  v119 = a1;
  v121 = v120;

  v166 = v118;
  v167 = v121;
  v170 = v107;
  v171 = (CHWorkoutDetailHeartRateTableViewCell *)&type metadata for String;
  v172 = &protocol witness table for RuleMark;
  v173 = v105;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v170, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityLabel<A>(_:)>>, 1);
  v124 = *(double *)&v160;
  v123 = v161;
  ChartContent.accessibilityValue<A>(_:)(&v166, v160, &type metadata for String, OpaqueTypeConformance2, v105);
  swift_bridgeObjectRelease(v121, v125, v126, v127, v128, v129, v130, v131);
  (*(void (**)(char *, double))(v159 + 8))(v106, COERCE_DOUBLE(*(_QWORD *)&v124));
  v132 = sub_10036C76C(v119);
  v166 = v132;
  v170 = v124;
  v171 = (CHWorkoutDetailHeartRateTableViewCell *)&type metadata for String;
  v172 = (void *)OpaqueTypeConformance2;
  v173 = v105;
  v133 = swift_getOpaqueTypeConformance2(&v170, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityValue<A>(_:)>>, 1);
  v134 = v147;
  v135 = v165;
  ChartContent.foregroundStyle<A>(_:)(&v166, v165, &type metadata for Color, v133, &protocol witness table for Color);
  v136 = swift_release(v132);
  (*(void (**)(char *, uint64_t, __n128))(v162 + 8))(v123, v135, v136);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v170, 1, 0, _swiftEmptyArrayStorage, 2.0, 10.0, 0.0);
  v166 = v135;
  v167 = (CHWorkoutDetailHeartRateTableViewCell *)&type metadata for Color;
  v168 = v133;
  v169 = &protocol witness table for Color;
  v137 = swift_getOpaqueTypeConformance2(&v166, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
  v138 = v164;
  v139 = v150;
  ChartContent.lineStyle(_:)(&v170, v150, v137);
  sub_1001B57E8((uint64_t)&v170);
  (*(void (**)(char *, uint64_t))(v148 + 8))(v134, v139);
  v140 = v149;
  v141 = *(void (**)(char *, char *, uint64_t))(v149 + 32);
  v142 = v163;
  v143 = v138;
  v144 = v151;
  v141(v163, v143, v151);
  v145 = v153;
  v141(v153, v142, v144);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v145, 0, 1, v144);
}

uint64_t sub_10036C47C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD *, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a1;
  v2 = type metadata accessor for WorkoutChartDataElement(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WorkoutChart(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v32 - v13);
  v33 = v5;
  v15 = *(_QWORD *)(v1 + *(int *)(v5 + 20) + 8);
  KeyPath = swift_getKeyPath(&unk_100637290);
  v17 = swift_getKeyPath(&unk_1006372B8);
  swift_retain(v15);
  static Published.subscript.getter(v14, v18, KeyPath, v17);
  swift_release(v15);
  swift_release(KeyPath);
  swift_release(v17);
  v19 = v35;
  Date.addingTimeInterval(_:)(v20, *(double *)(v15 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration) * 0.5);
  LOBYTE(v17) = static Date.< infix(_:_:)(v14, v11);
  v21 = *(void (**)(_QWORD *, uint64_t))(v9 + 8);
  v21(v11, v8);
  v21(v14, v8);
  sub_10004F8C8(v34, (uint64_t)v7, type metadata accessor for WorkoutChart);
  v22 = (uint64_t)v4;
  sub_10004F8C8(v19, (uint64_t)v4, type metadata accessor for WorkoutChartDataElement);
  if ((v17 & 1) != 0)
  {
    v23 = &v7[*(int *)(v33 + 20)];
    v24 = *((_QWORD *)v23 + 1);
    v25 = swift_getKeyPath(&unk_100637290);
    v26 = swift_getKeyPath(&unk_1006372B8);
    swift_retain(v24);
    static Published.subscript.getter(v11, v27, v25, v26);
    swift_release(v25);
    swift_release(v26);
    Date.addingTimeInterval(_:)(v28, *(double *)(v24 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets)* *(double *)(v24 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration));
    v21(v11, v8);
    swift_release(v24);
    Date.addingTimeInterval(_:)(v29, *(double *)(*((_QWORD *)v23 + 1) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration) * -0.5);
    v30 = static Date.> infix(_:_:)(v14, v11);
    v21(v11, v8);
    v21(v14, v8);
  }
  else
  {
    v30 = 0;
  }
  sub_100011F54(v22, type metadata accessor for WorkoutChartDataElement);
  sub_100011F54((uint64_t)v7, type metadata accessor for WorkoutChart);
  return v30 & 1;
}

uint64_t sub_10036C76C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v20[24];

  v3 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v3);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WorkoutChart(0) + 20) + 8)
      + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  swift_beginAccess(v10, v20, 0, 0);
  sub_100021CC0(v10, (uint64_t)v5, (uint64_t *)&unk_100828370);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10001BE90((uint64_t)v5, (uint64_t *)&unk_100828370);
    v11 = type metadata accessor for WorkoutChartViewModel(0);
    sub_100538FFC(*(_BYTE *)(v1 + *(int *)(v11 + 20)));
    return Color.init(_:)(v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v14 = static Date.== infix(_:_:)(v9, a1);
    v15 = type metadata accessor for WorkoutChartViewModel(0);
    sub_100538FFC(*(_BYTE *)(v1 + *(int *)(v15 + 20)));
    v13 = Color.init(_:)(v16);
    if ((v14 & 1) == 0)
    {
      v17 = Color.opacity(_:)(0.2);
      swift_release(v13);
      v13 = v17;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v13;
}

uint64_t sub_10036C928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  if ((sub_10036C47C(a1) & 1) != 0)
  {
    sub_10036C9B0(a1, a2);
    v4 = sub_100047110(&qword_10082FCE8);
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
    v6 = a2;
    v7 = 0;
  }
  else
  {
    v4 = sub_100047110(&qword_10082FCE8);
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
    v6 = a2;
    v7 = 1;
  }
  return v5(v6, v7, 1, v4);
}

uint64_t sub_10036C9B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  char v19;
  char v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  uint64_t v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  char v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  uint64_t v44;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  char v64;
  char *v65;
  SEL v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  uint64_t v74;
  SEL v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  id v85;
  void *v86;
  uint64_t v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;
  CHWorkoutDetailHeartRateTableViewCell *v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  SEL v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  uint64_t v104;
  CHWorkoutDetailHeartRateTableViewCell *v105;
  CHWorkoutDetailHeartRateTableViewCell *v106;
  uint64_t OpaqueTypeConformance2;
  uint64_t v108;
  char *v109;
  SEL v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  CHWorkoutDetailHeartRateTableViewCell *v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  CHWorkoutDetailHeartRateTableViewCell *v139;
  void *v140;
  unint64_t v141;

  v133 = a2;
  v3 = sub_100047110(&qword_100824DC0);
  __chkstk_darwin(v3);
  v122 = (char *)&v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v120 - v6;
  v8 = sub_100047110(&qword_100824DC8);
  __chkstk_darwin(v8);
  v121 = (char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RuleMark(0);
  v125 = *(_QWORD *)(v10 - 8);
  v126 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_100047110(&qword_10082FC88);
  v128 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v127 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_10082FC80);
  v131 = *(_QWORD *)(v14 - 8);
  v132 = v14;
  __chkstk_darwin(v14);
  v129 = (char *)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = LocalizedStringKey.init(stringLiteral:)(1701669204, 0xE400000000000000);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v23 = type metadata accessor for Date(0);
  static PlottableValue.value(_:_:)(v16, v18, v20 & 1, v22, a1, v23, &protocol witness table for Date);
  swift_bridgeObjectRelease(v22, v24, v25, v26, v27, v28, v29, v30);
  swift_bridgeObjectRelease(v18, v31, v32, v33, v34, v35, v36, v37);
  v38 = LocalizedStringKey.init(stringLiteral:)(7235917, 0xE300000000000000);
  v40 = v39;
  LOBYTE(v16) = v41;
  v43 = v42;
  v44 = type metadata accessor for WorkoutChartDataElement(0);
  v138 = *(_QWORD *)(a1 + *(int *)(v44 + 24));
  static PlottableValue.value(_:_:)(v38, v40, v16 & 1, v43, &v138, &type metadata for Double, &protocol witness table for Double);
  swift_bridgeObjectRelease(v43, v45, v46, v47, v48, v49, v50, v51);
  swift_bridgeObjectRelease(v40, v52, v53, v54, v55, v56, v57, v58);
  v59 = LocalizedStringKey.init(stringLiteral:)(7889229, 0xE300000000000000);
  v61 = v60;
  v63 = v62;
  v138 = *(_QWORD *)(a1 + *(int *)(v44 + 28));
  v65 = v122;
  static PlottableValue.value(_:_:)(v59, v60, v64 & 1, v62, &v138, &type metadata for Double, &protocol witness table for Double);
  swift_bridgeObjectRelease(v63, v66, v67, v68, v69, v70, v71, v72);
  v73 = v61;
  v74 = a1;
  swift_bridgeObjectRelease(v73, v75, v76, v77, v78, v79, v80, v81);
  v123 = v12;
  v82 = v124;
  RuleMark.init<A, B>(x:yStart:yEnd:)(v121, v7, v65, v23, &type metadata for Double, &protocol witness table for Date, &protocol witness table for Double, v83);
  v84 = type metadata accessor for WorkoutChartViewModel(0);
  v85 = objc_msgSend(*(id *)(v82 + *(int *)(v84 + 80)), "stringFromTimeInterval:", Date.timeIntervalSince(_:)(v82 + *(int *)(v84 + 40)));
  if (v85)
  {
    v86 = v85;
    v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
    v89 = v88;

  }
  else
  {
    v87 = 0;
    v89 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
  }
  v138 = v87;
  v139 = v89;
  v90 = sub_100038CA0();
  v92 = v126;
  v91 = v127;
  v93 = v123;
  ChartContent.accessibilityLabel<A>(_:)(&v138, v126, &type metadata for String, &protocol witness table for RuleMark, v90);
  swift_bridgeObjectRelease(v89, v94, v95, v96, v97, v98, v99, v100);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v93, v92);
  v101 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v102 = sub_1002A2E68(v74, v101);

  v103 = objc_msgSend(v102, "string");
  v104 = static String._unconditionallyBridgeFromObjectiveC(_:)(v103);
  v106 = v105;

  v134 = v104;
  v135 = v106;
  v138 = v92;
  v139 = (CHWorkoutDetailHeartRateTableViewCell *)&type metadata for String;
  v140 = &protocol witness table for RuleMark;
  v141 = v90;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v138, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityLabel<A>(_:)>>, 1);
  v109 = v129;
  v108 = v130;
  ChartContent.accessibilityValue<A>(_:)(&v134, v130, &type metadata for String, OpaqueTypeConformance2, v90);
  swift_bridgeObjectRelease(v106, v110, v111, v112, v113, v114, v115, v116);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v91, v108);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v138, 1, 0, _swiftEmptyArrayStorage, 2.0, 10.0, 0.0);
  v134 = v108;
  v135 = (CHWorkoutDetailHeartRateTableViewCell *)&type metadata for String;
  v136 = OpaqueTypeConformance2;
  v137 = v90;
  v117 = swift_getOpaqueTypeConformance2(&v134, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityValue<A>(_:)>>, 1);
  v118 = v132;
  ChartContent.lineStyle(_:)(&v138, v132, v117);
  sub_1001B57E8((uint64_t)&v138);
  return (*(uint64_t (**)(char *, uint64_t))(v131 + 8))(v109, v118);
}

uint64_t sub_10036CEC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;

  v4 = sub_100047110(&qword_10082FCE8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_10082FD30);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10036C47C(a1) & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
  sub_10036C9B0(a1, (uint64_t)v7);
  v12 = sub_10036C76C(a1);
  v31 = v12;
  v24 = sub_100007050(&qword_10082FC80);
  v13 = sub_100007050(&qword_10082FC88);
  v26 = a2;
  v14 = v13;
  v15 = type metadata accessor for RuleMark(255);
  v25 = v5;
  v16 = v15;
  v17 = sub_100038CA0();
  v27 = v16;
  v28 = &type metadata for String;
  v29 = &protocol witness table for RuleMark;
  v30 = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v27, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityLabel<A>(_:)>>, 1);
  v27 = v14;
  v28 = &type metadata for String;
  v29 = (void *)OpaqueTypeConformance2;
  v30 = v17;
  v19 = swift_getOpaqueTypeConformance2(&v27, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityValue<A>(_:)>>, 1);
  v27 = v24;
  v28 = (void *)v19;
  v20 = swift_getOpaqueTypeConformance2(&v27, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
  ChartContent.foregroundStyle<A>(_:)(&v31, v4, &type metadata for Color, v20, &protocol witness table for Color);
  v21 = swift_release(v12);
  (*(void (**)(char *, uint64_t, __n128))(v25 + 8))(v7, v4, v21);
  v22 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v26, v11, v8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v22, 0, 1, v8);
}

uint64_t sub_10036D0F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  char v28;
  char v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  char v55;
  char *v56;
  SEL v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  SEL v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  char v76;
  char *v77;
  SEL v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  __n128 v92;
  uint64_t v93;
  char *v94;
  __n128 v95;
  uint64_t OpaqueTypeConformance2;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  void *v123;
  void *v124;
  _QWORD v125[6];

  v119 = a3;
  v7 = sub_100047110(&qword_100824DC0);
  __chkstk_darwin(v7);
  v113 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v111 = (char *)&v105 - v10;
  v11 = sub_100047110(&qword_100824DC8);
  __chkstk_darwin(v11);
  v13 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RuleMark(0);
  v112 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110(&qword_100824CC8);
  v117 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v115 = (char *)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_100824DA8);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v118 = (char *)&v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100047110(&qword_10082FD40);
  v120 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v114 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1;
  v116 = a2;
  if ((sub_10036C47C(a1) & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v120 + 56))(v119, 1, 1, v22);
  v25 = LocalizedStringKey.init(stringLiteral:)(1701669204, 0xE400000000000000);
  v108 = v19;
  v27 = v26;
  v109 = v20;
  v29 = v28;
  v107 = v17;
  v31 = v30;
  v32 = type metadata accessor for Date(0);
  v110 = v22;
  v33 = v32;
  v106 = v32;
  v34 = v25;
  v35 = v24;
  static PlottableValue.value(_:_:)(v34, v27, v29 & 1, v31, v24, v33, &protocol witness table for Date);
  swift_bridgeObjectRelease(v31, v36, v37, v38, v39, v40, v41, v42);
  swift_bridgeObjectRelease(v27, v43, v44, v45, v46, v47, v48, v49);
  v50 = LocalizedStringKey.init(stringLiteral:)(0x6573756150, 0xE500000000000000);
  v52 = v51;
  v54 = v53;
  *(double *)v125 = a4;
  v56 = v111;
  static PlottableValue.value(_:_:)(v50, v51, v55 & 1, v53, v125, &type metadata for Double, &protocol witness table for Double);
  swift_bridgeObjectRelease(v54, v57, v58, v59, v60, v61, v62, v63);
  swift_bridgeObjectRelease(v52, v64, v65, v66, v67, v68, v69, v70);
  v71 = LocalizedStringKey.init(stringLiteral:)(0x6573756150, 0xE500000000000000);
  v73 = v72;
  v75 = v74;
  *(double *)v125 = a4;
  v77 = v113;
  static PlottableValue.value(_:_:)(v71, v72, v76 & 1, v74, v125, &type metadata for Double, &protocol witness table for Double);
  swift_bridgeObjectRelease(v75, v78, v79, v80, v81, v82, v83, v84);
  swift_bridgeObjectRelease(v73, v85, v86, v87, v88, v89, v90, v91);
  RuleMark.init<A, B>(x:yStart:yEnd:)(v13, v56, v77, v106, &type metadata for Double, &protocol witness table for Date, &protocol witness table for Double, v92);
  v93 = sub_10036D610(v35);
  v125[0] = v93;
  v94 = v115;
  ChartContent.foregroundStyle<A>(_:)(v125, v14, &type metadata for Color, &protocol witness table for RuleMark, &protocol witness table for Color);
  v95 = swift_release(v93);
  (*(void (**)(char *, uint64_t, __n128))(v112 + 8))(v16, v14, v95);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v125, 1, 0, _swiftEmptyArrayStorage, 2.0, 10.0, 0.0);
  v121 = v14;
  v122 = &type metadata for Color;
  v123 = &protocol witness table for RuleMark;
  v124 = &protocol witness table for Color;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v121, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
  v97 = v118;
  v98 = v107;
  ChartContent.lineStyle(_:)(v125, v107, OpaqueTypeConformance2);
  sub_1001B57E8((uint64_t)v125);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v94, v98);
  v121 = v98;
  v122 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2(&v121, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
  v99 = v114;
  v100 = v108;
  ChartContent.accessibilityHidden(_:)(1, v108);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v97, v100);
  v102 = v119;
  v101 = v120;
  v103 = v110;
  (*(void (**)(uint64_t, char *, uint64_t))(v120 + 32))(v119, v99, v110);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v101 + 56))(v102, 0, 1, v103);
}

uint64_t sub_10036D610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  __n128 v16;
  id v18;
  uint64_t v19;
  char v20;
  __n128 v21;
  uint64_t v22;
  _BYTE v25[24];

  v3 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v3);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_100047110(&qword_10082BFA8);
  __chkstk_darwin(v10);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1002A2C58(a1, (uint64_t)v12);
  v13 = type metadata accessor for WorkoutChartDataElement(0);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13);
  sub_10001BE90((uint64_t)v12, &qword_10082BFA8);
  if (v14 != 1)
  {
    v18 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    return Color.init(_:)(v18);
  }
  v15 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WorkoutChart(0) + 20) + 8)
      + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  swift_beginAccess(v15, v25, 0, 0);
  sub_100021CC0(v15, (uint64_t)v5, (uint64_t *)&unk_100828370);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10001BE90((uint64_t)v5, (uint64_t *)&unk_100828370);
    return static Color.gray.getter(v16);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  v20 = static Date.== infix(_:_:)(v9, a1);
  v19 = static Color.gray.getter(v21);
  if ((v20 & 1) == 0)
  {
    v22 = Color.opacity(_:)(0.2);
    swift_release(v19);
    v19 = v22;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v19;
}

uint64_t sub_10036D858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  NSString v6;
  id v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  int *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  NSString v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  Class isa;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  double *v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  NSString v59;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  Class v67;
  SEL v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  _BYTE v89[16];
  uint64_t (*v90)();
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v1 = v0;
  v2 = type metadata accessor for WorkoutChart(0);
  v87 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v87 + 64);
  __chkstk_darwin(v2);
  v4 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  v10 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  v86 = v10[8];
  v11 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + v86);
  swift_bridgeObjectRetain(v11);
  v12 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100369808((void (*)(_QWORD *__return_ptr, uint64_t))sub_10036DD3C, 0, (uint64_t)v11);
  swift_bridgeObjectRelease(v11, v13, v14, v15, v16, v17, v18, v19);
  v20 = objc_allocWithZone((Class)AXCategoricalDataAxisDescriptor);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9, v22, v23, v24, v25, v26, v27, v28);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12, v30, v31, v32, v33, v34, v35, v36);
  v88 = objc_msgSend(v20, "initWithTitle:categoryOrder:", v21, isa);

  sub_10001E724(0, &qword_10082FB20, AXNumericDataAxisDescriptor_ptr);
  v37 = (uint64_t *)(v1 + v10[6]);
  v38 = *v37;
  v39 = v37[1];
  v40 = (double *)(v1 + v10[17]);
  v41 = *v40;
  v42 = v40[1];
  sub_10004F8C8(v1, (uint64_t)v4, type metadata accessor for WorkoutChart);
  v43 = *(unsigned __int8 *)(v87 + 80);
  v44 = (v43 + 16) & ~v43;
  v45 = swift_allocObject(&unk_1007989F0, v44 + v3, v43 | 7);
  sub_100047C88((uint64_t)v4, v45 + v44, type metadata accessor for WorkoutChart);
  swift_bridgeObjectRetain(v39);
  v46 = (void *)AXNumericDataAxisDescriptor.init(title:range:gridlinePositions:valueDescriptionProvider:)(v38, v39, _swiftEmptyArrayStorage, sub_10036E284, v45, v41, v42);
  v47 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + v86);
  v48 = (CHWorkoutDetailHeartRateTableViewCell *)v37[1];
  v90 = sub_10036DC48;
  v91 = 0;
  v92 = v1;
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRetain(v47);
  sub_10036992C((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_10036E2C0, (uint64_t)v89, (uint64_t)v47);
  v50 = v49;
  swift_bridgeObjectRelease(v47, v51, v52, v53, v54, v55, v56, v57);
  v58 = objc_allocWithZone((Class)AXDataSeriesDescriptor);
  v59 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v48, v60, v61, v62, v63, v64, v65, v66);
  sub_10001E724(0, &qword_10082FB28, AXDataPoint_ptr);
  v67 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v50, v68, v69, v70, v71, v72, v73, v74);
  v75 = objc_msgSend(v58, "initWithName:isContinuous:dataPoints:", v59, 0, v67);

  sub_10001E724(0, &qword_10082FB30, AXChartDescriptor_ptr);
  v76 = *v37;
  v77 = v37[1];
  v78 = sub_100047110((uint64_t *)&unk_100828340);
  v79 = swift_allocObject(v78, 40, 7);
  *(_OWORD *)(v79 + 16) = xmmword_100623630;
  *(_QWORD *)(v79 + 32) = v75;
  v93 = v79;
  swift_bridgeObjectRetain(v77);
  v80 = v88;
  v81 = v46;
  v82 = specialized Array._endMutation()(v81);
  v83 = AXChartDescriptor.init(title:summary:xAxis:yAxis:additionalAxes:series:)(v76, v77, 0, 0, v80, v46, _swiftEmptyArrayStorage, v93, v82);

  return v83;
}

uint64_t sub_10036DC48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = type metadata accessor for Date.FormatStyle.TimeStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date.FormatStyle.DateStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = static Date.FormatStyle.DateStyle.omitted.getter(v6);
  static Date.FormatStyle.TimeStyle.standard.getter(v9);
  v10 = Date.formatted(date:time:)(v8, v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v10;
}

uint64_t sub_10036DD3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v2 = type metadata accessor for Date.FormatStyle.TimeStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date.FormatStyle.DateStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = static Date.FormatStyle.DateStyle.omitted.getter(v8);
  static Date.FormatStyle.TimeStyle.standard.getter(v11);
  v12 = Date.formatted(date:time:)(v10, v5);
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  *a1 = v12;
  a1[1] = v14;
  return result;
}

void sub_10036DE40(uint64_t a1, double a2)
{
  int *v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  v4 = (int *)type metadata accessor for WorkoutChartDataElement(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date.now.getter(v5);
  *(double *)&v7[v4[5]] = a2;
  *(double *)&v7[v4[6]] = a2;
  *(double *)&v7[v4[7]] = a2;
  v8 = type metadata accessor for WorkoutChartViewModel(0);
  v9 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  __asm { BR              X10 }
}

uint64_t sub_10036DF1C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;

  v2 = sub_100134554(v0, v1);

  v3 = objc_msgSend(v2, "string");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);

  sub_100011F54(v0, type metadata accessor for WorkoutChartDataElement);
  return v4;
}

void sub_10036E034(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  id v6;

  a2();
  type metadata accessor for WorkoutChartDataElement(0);
  v5 = type metadata accessor for WorkoutChartViewModel(0);
  v6 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  __asm { BR              X10 }
}

AXDataPoint sub_10036E0E8()
{
  AXDataPoint *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  Swift::String_optional v8;
  Swift::String v9;
  AXDataPoint result;
  Swift::Bool v11;
  Swift::Double_optional v12;

  v5 = sub_100134554(v4, v3);

  sub_10001E724(0, &qword_10082FB28, AXDataPoint_ptr);
  v6 = objc_msgSend(v5, "string");

  v7 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8.value._countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
  v9._countAndFlagsBits = v1;
  v9._object = v2;
  v12.is_nil = v11;
  v8.value._object = v7;
  result.super.isa = AXDataPoint.init(x:y:additionalValues:label:)(v9, v12, 0, v8).super.isa;
  v0->super.isa = result.super.isa;
  return result;
}

uint64_t type metadata accessor for WorkoutChart(uint64_t a1)
{
  uint64_t result;

  result = qword_10082FB90;
  if (!qword_10082FB90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutChart);
  return result;
}

void sub_10036E284(double a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutChart(0) - 8) + 80);
  sub_10036DE40(v1 + ((v3 + 16) & ~v3), a1);
}

void sub_10036E2C0(uint64_t a1)
{
  uint64_t v1;

  sub_10036E034(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10036E2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, char *, uint64_t);
  int v19;
  int v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v5 = type metadata accessor for DayIndex(0);
  v6 = *(_QWORD **)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_100047110(&qword_100823510);
  __chkstk_darwin(v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t)&v14[*(int *)(v15 + 48)];
  sub_100021CC0(a1, (uint64_t)v14, &qword_100823520);
  sub_100021CC0(a2, v16, &qword_100823520);
  v17 = (uint64_t (*)(char *, uint64_t, uint64_t))v6[6];
  v18 = (void (*)(char *, char *, uint64_t))v17(v14, 1, v5);
  v19 = v17((char *)v16, 1, v5);
  v20 = v19;
  if ((_DWORD)v18 == 1)
  {
    if (v19 == 1)
      return 0;
  }
  else
  {
    v18 = (void (*)(char *, char *, uint64_t))v6[4];
    v18(v11, v14, v5);
    if (v20 != 1)
    {
LABEL_11:
      v18(v8, (char *)v16, v5);
      v25 = sub_1000083D8(&qword_100823540, (uint64_t (*)(uint64_t))&type metadata accessor for DayIndex, (uint64_t)&protocol conformance descriptor for DayIndex);
      dispatch thunk of Strideable.distance(to:)(&v28, v8, v5, v25);
      v26 = (void (*)(char *, uint64_t))v6[1];
      v26(v8, v5);
      v26(v11, v5);
      return v28;
    }
    v22 = v2 + *(int *)(sub_100047110(&qword_100823530) + 36);
    v23 = sub_1000083D8(&qword_100823540, (uint64_t (*)(uint64_t))&type metadata accessor for DayIndex, (uint64_t)&protocol conformance descriptor for DayIndex);
    dispatch thunk of Strideable.distance(to:)(&v28, v22, v5, v23);
    ((void (*)(char *, uint64_t))v6[1])(v11, v5);
    result = v28 + 1;
    if (!__OFADD__(v28, 1))
      return result;
    __break(1u);
  }
  ((void (*)(char *, uint64_t, uint64_t))v6[4])(v11, v16, v5);
  sub_100047110(&qword_100823530);
  v24 = sub_1000083D8(&qword_100823540, (uint64_t (*)(uint64_t))&type metadata accessor for DayIndex, (uint64_t)&protocol conformance descriptor for DayIndex);
  dispatch thunk of Strideable.distance(to:)(&v28, v11, v5, v24);
  ((void (*)(char *, uint64_t))v6[1])(v11, v5);
  result = v28 - 1;
  if (__OFSUB__(v28, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

_QWORD *sub_10036E588(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t, __n128);
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  id v38;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, a2, v6);
    v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
    *((_BYTE *)v4 + v7[5]) = *((_BYTE *)a2 + v7[5]);
    v8 = v7[6];
    v9 = (_QWORD *)((char *)v4 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = v7[7];
    v13 = *(void **)((char *)a2 + v12);
    *(_QWORD *)((char *)v4 + v12) = v13;
    v14 = v7[8];
    v15 = *(_QWORD *)((char *)a2 + v14);
    *(_QWORD *)((char *)v4 + v14) = v15;
    *((_BYTE *)v4 + v7[9]) = *((_BYTE *)a2 + v7[9]);
    v16 = v7[10];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for Date(0);
    v20 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 16);
    swift_bridgeObjectRetain(v11);
    v21 = v13;
    v22 = swift_bridgeObjectRetain(v15);
    v20(v17, v18, v19, v22);
    ((void (*)(char *, char *, uint64_t))v20)((char *)v4 + v7[11], (char *)a2 + v7[11], v19);
    v23 = v7[12];
    v24 = *(_QWORD *)((char *)a2 + v23);
    *(_QWORD *)((char *)v4 + v23) = v24;
    v25 = v7[13];
    v26 = *(_QWORD *)((char *)a2 + v25);
    *(_QWORD *)((char *)v4 + v25) = v26;
    v27 = v7[14];
    v28 = *(_QWORD *)((char *)a2 + v27);
    *(_QWORD *)((char *)v4 + v27) = v28;
    *(_QWORD *)((char *)v4 + v7[15]) = *(_QWORD *)((char *)a2 + v7[15]);
    *(_QWORD *)((char *)v4 + v7[16]) = *(_QWORD *)((char *)a2 + v7[16]);
    *(_OWORD *)((char *)v4 + v7[17]) = *(_OWORD *)((char *)a2 + v7[17]);
    *(_QWORD *)((char *)v4 + v7[18]) = *(_QWORD *)((char *)a2 + v7[18]);
    v29 = v7[19];
    v30 = *(void **)((char *)a2 + v29);
    *(_QWORD *)((char *)v4 + v29) = v30;
    v31 = v7[20];
    v32 = *(void **)((char *)a2 + v31);
    *(_QWORD *)((char *)v4 + v31) = v32;
    v33 = *(int *)(a3 + 20);
    v34 = (_QWORD *)((char *)v4 + v33);
    v35 = (_QWORD *)((char *)a2 + v33);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    swift_bridgeObjectRetain(v24);
    swift_retain(v26);
    swift_retain(v28);
    v37 = v30;
    v38 = v32;
  }
  swift_retain(v36);
  return v4;
}

double sub_10036E770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  double result;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v5[6] + 8), v6, v7, v8, v9, v10, v11, v12);

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v5[8]), v13, v14, v15, v16, v17, v18, v19);
  v20 = a1 + v5[10];
  v21 = type metadata accessor for Date(0);
  v22 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8);
  v22(v20, v21);
  v22(a1 + v5[11], v21);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v5[12]), v23, v24, v25, v26, v27, v28, v29);
  swift_release(*(_QWORD *)(a1 + v5[13]));
  swift_release(*(_QWORD *)(a1 + v5[14]));

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8)).n128_u64[0];
  return result;
}

uint64_t sub_10036E870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, __n128);
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  id v37;

  v5 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  v6 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(_BYTE *)(a1 + v6[5]) = *(_BYTE *)(a2 + v6[5]);
  v7 = v6[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v6[7];
  v12 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v13 = v6[8];
  v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
  v15 = v6[10];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Date(0);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain(v10);
  v20 = v12;
  v21 = swift_bridgeObjectRetain(v14);
  v19(v16, v17, v18, v21);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(a1 + v6[11], a2 + v6[11], v18);
  v22 = v6[12];
  v23 = *(_QWORD *)(a2 + v22);
  *(_QWORD *)(a1 + v22) = v23;
  v24 = v6[13];
  v25 = *(_QWORD *)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  v26 = v6[14];
  v27 = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v27;
  *(_QWORD *)(a1 + v6[15]) = *(_QWORD *)(a2 + v6[15]);
  *(_QWORD *)(a1 + v6[16]) = *(_QWORD *)(a2 + v6[16]);
  *(_OWORD *)(a1 + v6[17]) = *(_OWORD *)(a2 + v6[17]);
  *(_QWORD *)(a1 + v6[18]) = *(_QWORD *)(a2 + v6[18]);
  v28 = v6[19];
  v29 = *(void **)(a2 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v30 = v6[20];
  v31 = *(void **)(a2 + v30);
  *(_QWORD *)(a1 + v30) = v31;
  v32 = *(int *)(a3 + 20);
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  swift_bridgeObjectRetain(v23);
  swift_retain(v25);
  swift_retain(v27);
  v36 = v29;
  v37 = v31;
  swift_retain(v35);
  return a1;
}

uint64_t sub_10036EA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
  v8 = v7[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v11 = v10[1];
  v12 = (CHWorkoutDetailHeartRateTableViewCell *)v9[1];
  v9[1] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12, v13, v14, v15, v16, v17, v18, v19);
  v20 = v7[7];
  v21 = *(void **)(a2 + v20);
  v22 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = v21;
  v23 = v21;

  v24 = v7[8];
  v25 = *(_QWORD *)(a2 + v24);
  v26 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26, v27, v28, v29, v30, v31, v32, v33);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v34 = v7[10];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = type metadata accessor for Date(0);
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 24);
  v38(v35, v36, v37);
  v38(a1 + v7[11], a2 + v7[11], v37);
  v39 = v7[12];
  v40 = *(_QWORD *)(a2 + v39);
  v41 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v39);
  *(_QWORD *)(a1 + v39) = v40;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRelease(v41, v42, v43, v44, v45, v46, v47, v48);
  v49 = v7[13];
  v50 = *(_QWORD *)(a1 + v49);
  v51 = *(_QWORD *)(a2 + v49);
  *(_QWORD *)(a1 + v49) = v51;
  swift_retain(v51);
  swift_release(v50);
  v52 = v7[14];
  v53 = *(_QWORD *)(a2 + v52);
  v54 = *(_QWORD *)(a1 + v52);
  *(_QWORD *)(a1 + v52) = v53;
  swift_retain(v53);
  swift_release(v54);
  *(_QWORD *)(a1 + v7[15]) = *(_QWORD *)(a2 + v7[15]);
  *(_QWORD *)(a1 + v7[16]) = *(_QWORD *)(a2 + v7[16]);
  v55 = v7[17];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (_QWORD *)(a2 + v55);
  *v56 = *v57;
  v56[1] = v57[1];
  *(_QWORD *)(a1 + v7[18]) = *(_QWORD *)(a2 + v7[18]);
  v58 = v7[19];
  v59 = *(void **)(a2 + v58);
  v60 = *(void **)(a1 + v58);
  *(_QWORD *)(a1 + v58) = v59;
  v61 = v59;

  v62 = v7[20];
  v63 = *(void **)(a2 + v62);
  v64 = *(void **)(a1 + v62);
  *(_QWORD *)(a1 + v62) = v63;
  v65 = v63;

  v66 = *(int *)(a3 + 20);
  v67 = (_QWORD *)(a1 + v66);
  v68 = (_QWORD *)(a2 + v66);
  *v67 = *v68;
  v69 = v68[1];
  v70 = v67[1];
  v67[1] = v69;
  swift_retain(v69);
  swift_release(v70);
  return a1;
}

uint64_t sub_10036EC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v8 = v7[10];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + v7[11], a2 + v7[11], v11);
  *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(a2 + v7[12]);
  *(_QWORD *)(a1 + v7[13]) = *(_QWORD *)(a2 + v7[13]);
  *(_QWORD *)(a1 + v7[14]) = *(_QWORD *)(a2 + v7[14]);
  *(_QWORD *)(a1 + v7[15]) = *(_QWORD *)(a2 + v7[15]);
  *(_QWORD *)(a1 + v7[16]) = *(_QWORD *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(_QWORD *)(a1 + v7[18]) = *(_QWORD *)(a2 + v7[18]);
  *(_QWORD *)(a1 + v7[19]) = *(_QWORD *)(a2 + v7[19]);
  *(_QWORD *)(a1 + v7[20]) = *(_QWORD *)(a2 + v7[20]);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10036EDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
  v8 = v7[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  v13 = (CHWorkoutDetailHeartRateTableViewCell *)v9[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
  v21 = v7[7];
  v22 = *(void **)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);

  v23 = v7[8];
  v24 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v23);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  swift_bridgeObjectRelease(v24, v25, v26, v27, v28, v29, v30, v31);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v32 = v7[10];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = type metadata accessor for Date(0);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 40);
  v36(v33, v34, v35);
  v36(a1 + v7[11], a2 + v7[11], v35);
  v37 = v7[12];
  v38 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v37);
  *(_QWORD *)(a1 + v37) = *(_QWORD *)(a2 + v37);
  swift_bridgeObjectRelease(v38, v39, v40, v41, v42, v43, v44, v45);
  v46 = v7[13];
  v47 = *(_QWORD *)(a1 + v46);
  *(_QWORD *)(a1 + v46) = *(_QWORD *)(a2 + v46);
  swift_release(v47);
  v48 = v7[14];
  v49 = *(_QWORD *)(a1 + v48);
  *(_QWORD *)(a1 + v48) = *(_QWORD *)(a2 + v48);
  swift_release(v49);
  *(_QWORD *)(a1 + v7[15]) = *(_QWORD *)(a2 + v7[15]);
  *(_QWORD *)(a1 + v7[16]) = *(_QWORD *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(_QWORD *)(a1 + v7[18]) = *(_QWORD *)(a2 + v7[18]);
  v50 = v7[19];
  v51 = *(void **)(a1 + v50);
  *(_QWORD *)(a1 + v50) = *(_QWORD *)(a2 + v50);

  v52 = v7[20];
  v53 = *(void **)(a1 + v52);
  *(_QWORD *)(a1 + v52) = *(_QWORD *)(a2 + v52);

  v54 = *(int *)(a3 + 20);
  v55 = (_QWORD *)(a1 + v54);
  v56 = (uint64_t *)(a2 + v54);
  v58 = *v56;
  v57 = v56[1];
  v59 = v55[1];
  *v55 = v58;
  v55[1] = v57;
  swift_release(v59);
  return a1;
}

uint64_t sub_10036EF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036EF74);
}

uint64_t sub_10036EF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for WorkoutChartViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10036EFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10036F000);
}

uint64_t sub_10036F000(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for WorkoutChartViewModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_10036F07C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for WorkoutChartViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1006371B0;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WorkoutChart.ChartType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10036F138 + 4 * byte_10063715D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10036F16C + 4 * asc_100637158[v4]))();
}

uint64_t sub_10036F16C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10036F174(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10036F17CLL);
  return result;
}

uint64_t sub_10036F188(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10036F190);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10036F194(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10036F19C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutChart.ChartType()
{
  return &type metadata for WorkoutChart.ChartType;
}

unint64_t sub_10036F1BC()
{
  unint64_t result;

  result = qword_10082FBC8;
  if (!qword_10082FBC8)
  {
    result = swift_getWitnessTable(&unk_100637214, &type metadata for WorkoutChart.ChartType);
    atomic_store(result, (unint64_t *)&qword_10082FBC8);
  }
  return result;
}

uint64_t sub_10036F200(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B5304, 1);
}

uint64_t sub_10036F210@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10036A190(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10036F218()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082FBF0;
  if (!qword_10082FBF0)
  {
    v1 = sub_100007050(&qword_10082FBE8);
    sub_1000F0610(&qword_10082FBF8, &qword_10082FC00, (void (*)(void))sub_10036F2D4, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
    sub_1000F0610(&qword_10082FC18, &qword_10082FC20, (void (*)(void))sub_10036F3C8, (uint64_t)&protocol conformance descriptor for <A> A?);
    sub_10036F5C8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <each A> BuilderTuple<Pack{repeat A}>, v1);
    atomic_store(result, (unint64_t *)&qword_10082FBF0);
  }
  return result;
}

unint64_t sub_10036F2D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;

  result = qword_10082FC08;
  if (!qword_10082FC08)
  {
    v1 = sub_100007050(&qword_10082FC10);
    v2 = sub_100007050(&qword_100824DA8);
    v3 = sub_100007050(&qword_100824CC8);
    v6 = type metadata accessor for RuleMark(255);
    v7 = &type metadata for Color;
    v8 = &protocol witness table for RuleMark;
    v9 = &protocol witness table for Color;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    v6 = v3;
    v7 = (void *)OpaqueTypeConformance2;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
    v6 = v2;
    v7 = (void *)v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityHidden(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10082FC08);
  }
  return result;
}

unint64_t sub_10036F3C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;

  result = qword_10082FC28;
  if (!qword_10082FC28)
  {
    v1 = sub_100007050(&qword_10082FC30);
    sub_10036F4C4();
    v2 = sub_100007050(&qword_100824DA8);
    v3 = sub_100007050(&qword_100824CC8);
    v6 = type metadata accessor for RuleMark(255);
    v7 = &type metadata for Color;
    v8 = &protocol witness table for RuleMark;
    v9 = &protocol witness table for Color;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    v6 = v3;
    v7 = (void *)OpaqueTypeConformance2;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
    v6 = v2;
    v7 = (void *)v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityHidden(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> BuilderConditional<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082FC28);
  }
  return result;
}

unint64_t sub_10036F4C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;

  result = qword_10082FC38;
  if (!qword_10082FC38)
  {
    v1 = sub_100007050(&qword_10082FC40);
    v2 = sub_100007050(&qword_100824DA8);
    v3 = sub_100007050(&qword_100824CC8);
    v6 = type metadata accessor for RuleMark(255);
    v7 = &type metadata for Color;
    v8 = &protocol witness table for RuleMark;
    v9 = &protocol witness table for Color;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    v6 = v3;
    v7 = (void *)OpaqueTypeConformance2;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
    v6 = v2;
    v7 = (void *)v5;
    v6 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityHidden(_:)>>, 1);
    v7 = (void *)sub_10036F2D4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <each A> BuilderTuple<Pack{repeat A}>, v1);
    atomic_store(result, (unint64_t *)&qword_10082FC38);
  }
  return result;
}

unint64_t sub_10036F5C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082FC48;
  if (!qword_10082FC48)
  {
    v1 = sub_100007050(&qword_10082FC50);
    sub_1000F0610(&qword_10082FC58, &qword_10082FC60, (void (*)(void))sub_10036F654, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
    sub_10036F79C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> BuilderConditional<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082FC48);
  }
  return result;
}

unint64_t sub_10036F654()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t OpaqueTypeConformance2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;

  result = qword_10082FC68;
  if (!qword_10082FC68)
  {
    v1 = sub_100007050(&qword_10082FC70);
    v2 = sub_100007050(&qword_10082FC78);
    v3 = sub_100007050(&qword_10082FC80);
    v4 = sub_100007050(&qword_10082FC88);
    v5 = type metadata accessor for RuleMark(255);
    v6 = sub_100038CA0();
    v10 = v5;
    v11 = &type metadata for String;
    v12 = &protocol witness table for RuleMark;
    v13 = (void *)v6;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityLabel<A>(_:)>>, 1);
    v10 = v4;
    v11 = &type metadata for String;
    v12 = (void *)OpaqueTypeConformance2;
    v13 = (void *)v6;
    v8 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityValue<A>(_:)>>, 1);
    v10 = v3;
    v11 = &type metadata for Color;
    v12 = (void *)v8;
    v13 = &protocol witness table for Color;
    v9 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    v10 = v2;
    v11 = (void *)v9;
    swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10082FC68);
  }
  return result;
}

unint64_t sub_10036F79C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;

  result = qword_10082FC90;
  if (!qword_10082FC90)
  {
    v1 = sub_100007050(&qword_10082FC98);
    v2 = sub_100007050(&qword_10082FCA0);
    v4 = sub_100007050(&qword_10082FCA8);
    v5 = &type metadata for LinearGradient;
    v6 = sub_1000F0610(&qword_10082FCB0, &qword_10082FCA8, (void (*)(void))sub_10036F8BC, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
    v7 = &protocol witness table for LinearGradient;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    v4 = v2;
    v5 = (void *)OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of ChartContent.alignsMarkStylesWithPlotArea(_:)>>, 1);
    sub_1000F0610(&qword_10082FCC8, &qword_10082FCD0, (void (*)(void))sub_10036F9C0, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> BuilderConditional<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082FC90);
  }
  return result;
}

unint64_t sub_10036F8BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  unint64_t v11;

  result = qword_10082FCB8;
  if (!qword_10082FCB8)
  {
    v1 = sub_100007050(&qword_10082FCC0);
    v2 = sub_100007050(&qword_10082FC80);
    v3 = sub_100007050(&qword_10082FC88);
    v4 = type metadata accessor for RuleMark(255);
    v5 = sub_100038CA0();
    v8 = v4;
    v9 = &type metadata for String;
    v10 = &protocol witness table for RuleMark;
    v11 = v5;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityLabel<A>(_:)>>, 1);
    v8 = v3;
    v9 = &type metadata for String;
    v10 = (void *)OpaqueTypeConformance2;
    v11 = v5;
    v7 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityValue<A>(_:)>>, 1);
    v8 = v2;
    v9 = (void *)v7;
    swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10082FCB8);
  }
  return result;
}

unint64_t sub_10036F9C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t OpaqueTypeConformance2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;

  result = qword_10082FCD8;
  if (!qword_10082FCD8)
  {
    v1 = sub_100007050(&qword_10082FCE0);
    v2 = sub_100007050(&qword_10082FCE8);
    v3 = sub_100007050(&qword_10082FC80);
    v4 = sub_100007050(&qword_10082FC88);
    v5 = type metadata accessor for RuleMark(255);
    v6 = sub_100038CA0();
    v10 = v5;
    v11 = &type metadata for String;
    v12 = &protocol witness table for RuleMark;
    v13 = (void *)v6;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityLabel<A>(_:)>>, 1);
    v10 = v4;
    v11 = &type metadata for String;
    v12 = (void *)OpaqueTypeConformance2;
    v13 = (void *)v6;
    v8 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of ChartContent.accessibilityValue<A>(_:)>>, 1);
    v10 = v3;
    v11 = (void *)v8;
    v9 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
    v10 = v2;
    v11 = &type metadata for Color;
    v12 = (void *)v9;
    v13 = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10082FCD8);
  }
  return result;
}

uint64_t sub_10036FB10(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100007050(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ClosedRange<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10036FB64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Date.hashValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10036FB90(uint64_t a1)
{
  return sub_10036FCFC(a1, (uint64_t (*)(uint64_t, unint64_t, double))sub_10036D0F8);
}

uint64_t sub_10036FBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;

  v1 = type metadata accessor for WorkoutChart(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v7 = v0 + v4;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v9[6] + 8), v10, v11, v12, v13, v14, v15, v16);

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v9[8]), v17, v18, v19, v20, v21, v22, v23);
  v24 = v7 + v9[10];
  v25 = type metadata accessor for Date(0);
  v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
  v26(v24, v25);
  v26(v7 + v9[11], v25);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v9[12]), v27, v28, v29, v30, v31, v32, v33);
  swift_release(*(_QWORD *)(v7 + v9[13]));
  swift_release(*(_QWORD *)(v7 + v9[14]));

  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 20) + 8));
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10036FCF0(uint64_t a1)
{
  return sub_10036FCFC(a1, (uint64_t (*)(uint64_t, unint64_t, double))sub_10036BD48);
}

uint64_t sub_10036FCFC(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, double))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(type metadata accessor for WorkoutChart(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return a2(a1, v2 + v5, *(double *)(v2 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10036FD70(uint64_t a1)
{
  return sub_10036FED0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10036CEC4);
}

uint64_t sub_10036FD80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;

  v1 = type metadata accessor for WorkoutChart(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v9[6] + 8), v10, v11, v12, v13, v14, v15, v16);

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v9[8]), v17, v18, v19, v20, v21, v22, v23);
  v24 = v7 + v9[10];
  v25 = type metadata accessor for Date(0);
  v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
  v26(v24, v25);
  v26(v7 + v9[11], v25);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v9[12]), v27, v28, v29, v30, v31, v32, v33);
  swift_release(*(_QWORD *)(v7 + v9[13]));
  swift_release(*(_QWORD *)(v7 + v9[14]));

  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 20) + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10036FEC4(uint64_t a1)
{
  return sub_10036FED0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10036C928);
}

uint64_t sub_10036FED0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutChart(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_10036FF2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_100007050(&qword_10082FBE0);
  v1 = sub_100007050(&qword_100825DE8);
  v2 = sub_100007050(&qword_10082FBD8);
  v3 = sub_100007050(&qword_100824B88);
  v9 = sub_100007050(&qword_10082FBD0);
  v10 = type metadata accessor for WorkoutChart(255);
  v11 = sub_100028384(&qword_10082FCF0, &qword_10082FBD0, (uint64_t)&protocol conformance descriptor for Chart<A>);
  v12 = sub_1000083D8(&qword_10082FCF8, type metadata accessor for WorkoutChart, (uint64_t)&unk_100637164);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.accessibilityChartDescriptor<A>(_:)>>, 1);
  v5 = sub_10036FB10(&qword_10082FD00, &qword_100824B88);
  v9 = v2;
  v10 = v3;
  v11 = OpaqueTypeConformance2;
  v12 = v5;
  v6 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.chartXScale<A>(domain:type:)>>, 1);
  v7 = sub_10036FB10(&qword_100825DF0, &qword_100825DE8);
  v9 = v0;
  v10 = v1;
  v11 = v6;
  v12 = v7;
  return swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.chartYScale<A>(domain:type:)>>, 1);
}

ValueMetadata *type metadata accessor for MetricsCardFactory()
{
  return &type metadata for MetricsCardFactory;
}

void sub_1003700AC(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, void *a7@<X7>, uint64_t a8@<X8>)
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  id v33;
  uint64_t v34;
  id v35;
  char *v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  _QWORD *v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;

  v54 = a4;
  v55 = a7;
  v53 = a6;
  v52 = a5;
  v51 = a2;
  v10 = a3;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - v19;
  v21 = (int *)type metadata accessor for MetricCard(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for MetricDetailViewModel(0);
  __chkstk_darwin(v24);
  __chkstk_darwin(v25);
  if (v10)
  {
    *(_QWORD *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    v49 = (uint64_t)&v45 - v26;
    v50 = v27;
    v45 = (_QWORD *)a8;
    v46 = v14;
    v47 = v11;
    v48 = a1;
    sub_100347FA8(a1, (char *)(a1 > 3u), 1, (uint64_t)&v45 - v26);
    sub_100021CC0(v54, (uint64_t)v56, &qword_100832410);
    v28 = v57;
    if (v57)
    {
      v29 = v58;
      sub_100016804(v56, v57);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
      v30 = v12;
      v31 = v47;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v47);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v56);
    }
    else
    {
      sub_10001BE90((uint64_t)v56, &qword_100832410);
      v30 = v12;
      v31 = v47;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v20, 1, 1, v47);
    }
    sub_100353DCC(v49, v50);
    v23[v21[6]] = 0;
    sub_100021CC0((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_10082E690);
    v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v17, 1, v31);
    v33 = v55;
    v34 = v48;
    v35 = v33;
    if (v32 == 1)
    {
      v36 = v46;
      UUID.init()(v33);
      sub_10001BE90((uint64_t)v20, (uint64_t *)&unk_10082E690);
      sub_10001BE90((uint64_t)v17, (uint64_t *)&unk_10082E690);
      v37 = v36;
      v38 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    }
    else
    {
      sub_10001BE90((uint64_t)v20, (uint64_t *)&unk_10082E690);
      v38 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
      v39 = v46;
      v38(v46, v17, v31);
      v37 = v39;
    }
    v40 = v52;
    v41 = v51;
    v42 = v45;
    v38(v23, v37, v31);
    v43 = &v23[v21[5]];
    *(_QWORD *)v43 = v34;
    *((_QWORD *)v43 + 1) = v41;
    v43[16] = 0;
    v23[v21[7]] = v40 & 1;
    v23[v21[8]] = 1;
    sub_100047C88(v50, (uint64_t)&v23[v21[9]], type metadata accessor for MetricDetailViewModel);
    v23[v21[10]] = v34;
    *(_QWORD *)&v23[v21[11]] = v35;
    v42[3] = v21;
    v42[4] = &off_1007A7580;
    v44 = sub_10004C480(v42);
    sub_100047C88((uint64_t)v23, (uint64_t)v44, type metadata accessor for MetricCard);
    sub_10037083C(v49);
  }
}

void sub_100370448(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X4>, int a5@<W5>, void *a6@<X7>, uint64_t a7@<X8>)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  unsigned __int8 v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  id v36;
  id v37;
  char v38;
  char *v39;
  void (*v40)(char *, uint64_t, uint64_t);
  _QWORD *v41;
  char *v42;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;

  v54 = a5;
  v52 = a4;
  v53 = a2;
  v56 = a1;
  v9 = a3;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v46 - v18;
  v20 = (int *)type metadata accessor for MetricCard(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for MetricDetailViewModel(0);
  __chkstk_darwin(v23);
  *(_QWORD *)&v27 = __chkstk_darwin(v24).n128_u64[0];
  if (v9)
  {
    *(_QWORD *)(a7 + 32) = 0;
    *(_OWORD *)a7 = 0u;
    *(_OWORD *)(a7 + 16) = 0u;
  }
  else
  {
    v47 = v16;
    v48 = (_QWORD *)a7;
    v28 = v56;
    v50 = v10;
    v51 = v26;
    v55 = (uint64_t)&v46 - v25;
    v49 = v13;
    v29 = objc_msgSend(a6, "unitManager", v27);
    if (v29)
    {
      v30 = v29;
      sub_10022EAE4(v28, v29, v55);

      sub_100021CC0(v52, (uint64_t)v57, &qword_100832410);
      v31 = v58;
      if (v58)
      {
        v32 = v59;
        sub_100016804(v57, v58);
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
        v33 = v50;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v50);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v57);
      }
      else
      {
        sub_10001BE90((uint64_t)v57, &qword_100832410);
        v33 = v50;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v19, 1, 1, v50);
      }
      v34 = (uint64_t)v47;
      sub_100353DCC(v55, v51);
      v22[v20[6]] = 0;
      sub_100021CC0((uint64_t)v19, v34, (uint64_t *)&unk_10082E690);
      v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v34, 1, v33);
      v36 = a6;
      v37 = v36;
      v38 = v54;
      if (v35 == 1)
      {
        v39 = v49;
        UUID.init()(v36);
        sub_10001BE90((uint64_t)v19, (uint64_t *)&unk_10082E690);
        sub_10001BE90(v34, (uint64_t *)&unk_10082E690);
        v40 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
      }
      else
      {
        sub_10001BE90((uint64_t)v19, (uint64_t *)&unk_10082E690);
        v40 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
        v39 = v49;
        v40(v49, v34, v33);
      }
      v41 = v48;
      v40(v22, (uint64_t)v39, v33);
      v42 = &v22[v20[5]];
      v43 = v56;
      v44 = v53;
      *(_QWORD *)v42 = v56;
      *((_QWORD *)v42 + 1) = v44;
      v42[16] = 0;
      v22[v20[7]] = v38 & 1;
      v22[v20[8]] = 1;
      sub_100047C88(v51, (uint64_t)&v22[v20[9]], type metadata accessor for MetricDetailViewModel);
      v22[v20[10]] = v43;
      *(_QWORD *)&v22[v20[11]] = v37;
      v41[3] = v20;
      v41[4] = &off_1007A7580;
      v45 = sub_10004C480(v41);
      sub_100047C88((uint64_t)v22, (uint64_t)v45, type metadata accessor for MetricCard);
      sub_10037083C(v55);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1003707FC(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X8>)
{
  uint64_t v6;

  sub_1003700AC(a1, a2, a3, a4, a5, *(_QWORD *)v6, *(void **)(v6 + 8), a6);
}

void sub_10037081C(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X8>)
{
  uint64_t v6;

  sub_100370448(a1, a2, a3, a4, a5, *(void **)(v6 + 8), a6);
}

uint64_t sub_10037083C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MetricDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_100370878(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  id v27;
  uint64_t v28;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v28);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[1];
    v8 = a2[2];
    a1[1] = v7;
    a1[2] = v8;
    v9 = a3[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v12;
    v13 = type metadata accessor for MetricFormattingHelper(0);
    v14 = *(int *)(v13 + 20);
    v31 = &v11[v14];
    v32 = &v10[v14];
    v15 = type metadata accessor for AttributedString(0);
    v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    swift_retain(v8);
    v16 = v12;
    v30(v32, v31, v15);
    v17 = *(int *)(v13 + 24);
    v18 = *(void **)&v11[v17];
    *(_QWORD *)&v10[v17] = v18;
    v19 = a3[8];
    v20 = a3[9];
    v21 = (char *)v4 + v19;
    v22 = (char *)a2 + v19;
    v21[8] = v22[8];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v23 = (char *)v4 + v20;
    v24 = (char *)a2 + v20;
    v25 = type metadata accessor for Date(0);
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v27 = v18;
    v26(v23, v24, v25);
  }
  return v4;
}

uint64_t sub_1003709C8(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  id *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 8), (SEL)a2, a3, a4, a5, a6, a7, a8);
  swift_release(*(_QWORD *)(a1 + 16));
  v10 = (id *)(a1 + *(int *)(a2 + 28));

  v11 = type metadata accessor for MetricFormattingHelper(0);
  v12 = (char *)v10 + *(int *)(v11 + 20);
  v13 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);

  v14 = a1 + *(int *)(a2 + 36);
  v15 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
}

uint64_t sub_100370A74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  id v26;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v11;
  v12 = type metadata accessor for MetricFormattingHelper(0);
  v13 = *(int *)(v12 + 20);
  v29 = v10 + v13;
  v30 = v9 + v13;
  v14 = type metadata accessor for AttributedString(0);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  swift_retain(v7);
  v15 = v11;
  v28(v30, v29, v14);
  v16 = *(int *)(v12 + 24);
  v17 = *(void **)(v10 + v16);
  *(_QWORD *)(v9 + v16) = v17;
  v18 = a3[8];
  v19 = a3[9];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v22 = a1 + v19;
  v23 = a2 + v19;
  v24 = type metadata accessor for Date(0);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  v26 = v17;
  v25(v22, v23, v24);
  return a1;
}

uint64_t sub_100370B98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7, v8, v9, v10, v11, v12, v13, v14);
  v15 = *(_QWORD *)(a2 + 16);
  v16 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v15;
  swift_retain(v15);
  swift_release(v16);
  v17 = a3[7];
  v18 = (void **)(a1 + v17);
  v19 = a2 + v17;
  v20 = *(void **)(a2 + v17);
  v21 = *v18;
  *v18 = v20;
  v22 = v20;

  v23 = type metadata accessor for MetricFormattingHelper(0);
  v24 = *(int *)(v23 + 20);
  v25 = (char *)v18 + v24;
  v26 = v19 + v24;
  v27 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  v28 = *(int *)(v23 + 24);
  v29 = *(void **)(v19 + v28);
  v30 = *(void **)((char *)v18 + v28);
  *(void **)((char *)v18 + v28) = v29;
  v31 = v29;

  v32 = a3[8];
  v33 = a1 + v32;
  v34 = (uint64_t *)(a2 + v32);
  v35 = *v34;
  *(_BYTE *)(v33 + 8) = *((_BYTE *)v34 + 8);
  *(_QWORD *)v33 = v35;
  v36 = a3[9];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
  return a1;
}

uint64_t sub_100370CC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);
  v9 = type metadata accessor for MetricFormattingHelper(0);
  v10 = *(int *)(v9 + 20);
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_QWORD *)(v7 + *(int *)(v9 + 24)) = *(_QWORD *)(v8 + *(int *)(v9 + 24));
  v14 = a3[8];
  v15 = a3[9];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v18 = a1 + v15;
  v19 = a2 + v15;
  v20 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t sub_100370DB4(uint64_t a1, uint64_t a2, int *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  CHWorkoutDetailHeartRateTableViewCell *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v11 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v11, (SEL)a2, a3, a4, a5, a6, a7, a8);
  v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v12);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(void **)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);

  v17 = type metadata accessor for MetricFormattingHelper(0);
  v18 = *(int *)(v17 + 20);
  v19 = v14 + v18;
  v20 = v15 + v18;
  v21 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = *(int *)(v17 + 24);
  v23 = *(void **)(v14 + v22);
  *(_QWORD *)(v14 + v22) = *(_QWORD *)(v15 + v22);

  v24 = a3[8];
  v25 = a3[9];
  v26 = a1 + v24;
  v27 = a2 + v24;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  v28 = a1 + v25;
  v29 = a2 + v25;
  v30 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t sub_100370EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100370ED4);
}

uint64_t sub_100370ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for MetricFormattingHelper(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = type metadata accessor for Date(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100370F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100370F80);
}

uint64_t sub_100370F80(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for MetricFormattingHelper(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = type metadata accessor for Date(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for MetricCardLineChartView(uint64_t a1)
{
  uint64_t result;

  result = qword_10082FDC0;
  if (!qword_10082FDC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetricCardLineChartView);
  return result;
}

uint64_t sub_100371058(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[6];

  v5[0] = &unk_100637368;
  v5[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v5[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for MetricFormattingHelper(319);
  if (v3 <= 0x3F)
  {
    v5[3] = *(_QWORD *)(result - 8) + 64;
    v5[4] = &unk_100637380;
    result = type metadata accessor for Date(319);
    if (v4 <= 0x3F)
    {
      v5[5] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 6, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_10037110C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B5370, 1);
}

uint64_t sub_10037111C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v0 = type metadata accessor for FormatStyleCapitalizationContext(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TimeZone(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Calendar(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100825CB8);
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100825CC0);
  __chkstk_darwin(v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Date.FormatStyle(0);
  sub_100008398(v18, qword_10082FD50);
  sub_10003CE9C(v18, (uint64_t)qword_10082FD50);
  v19 = type metadata accessor for Date.FormatStyle.DateStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 1, 1, v19);
  v20 = type metadata accessor for Date.FormatStyle.TimeStyle(0);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 1, 1, v20);
  v22 = static Locale.autoupdatingCurrent.getter(v21);
  v23 = static Calendar.autoupdatingCurrent.getter(v22);
  v24 = static TimeZone.autoupdatingCurrent.getter(v23);
  static FormatStyleCapitalizationContext.unknown.getter(v24);
  return Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)(v17, v14, v11, v8, v5, v2);
}

uint64_t sub_100371344@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeConformance2;
  unint64_t v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57[16];
  uint64_t v58;
  char v59[16];
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  CHWorkoutDetailHeartRateTableViewCell *v65;

  v2 = v1;
  v56 = a1;
  v3 = sub_100047110(&qword_100824C50);
  __chkstk_darwin(v3);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10082FE08);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10082FE10);
  v50 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10082FE18);
  v14 = *(_QWORD *)(v13 - 8);
  v52 = v13;
  v53 = v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110(&qword_10082FE20);
  v54 = *(_QWORD *)(v17 - 8);
  v55 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_10082FE28);
  __chkstk_darwin(v20);
  v51 = (uint64_t)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = v2;
  v22 = sub_100047110(&qword_10082FE30);
  v23 = sub_100372BC8();
  Chart.init(content:)(sub_100372BC0, v59, v22, v23);
  v24 = sub_100028384(&qword_10082FE90, &qword_10082FE08, (uint64_t)&protocol conformance descriptor for Chart<A>);
  View.chartYAxis<A>(content:)(ASFriendListDisplayMode.id.getter, 0, v6, &type metadata for BuilderEmpty, v24, &protocol witness table for BuilderEmpty);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v25 = type metadata accessor for MetricCardLineChartView(0);
  v26 = sub_10041D6FC(*(char **)(v2 + *(int *)(v25 + 32)), *(_BYTE *)(v2 + *(int *)(v25 + 32) + 8), 1.0);
  v27 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
  if (v26)
    v27 = (CHWorkoutDetailHeartRateTableViewCell *)v26;
  v65 = v27;
  v28 = type metadata accessor for ScaleType(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v5, 1, 1, v28);
  v29 = sub_100047110(&qword_100824CE8);
  v61 = v6;
  v62 = &type metadata for BuilderEmpty;
  v63 = v24;
  v64 = &protocol witness table for BuilderEmpty;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v61, &opaque type descriptor for <<opaque return type of View.chartYAxis<A>(content:)>>, 1);
  v31 = sub_100372E34();
  View.chartXScale<A>(domain:type:)(&v65, v5, v10, v29, OpaqueTypeConformance2, v31);
  sub_10001BE90((uint64_t)v5, &qword_100824C50);
  swift_bridgeObjectRelease(v65, v32, v33, v34, v35, v36, v37, v38);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v10);
  v58 = v2;
  v39 = sub_100047110(&qword_10082FE98);
  v61 = v10;
  v62 = (void *)v29;
  v63 = OpaqueTypeConformance2;
  v64 = (void *)v31;
  v40 = swift_getOpaqueTypeConformance2(&v61, &opaque type descriptor for <<opaque return type of View.chartXScale<A>(domain:type:)>>, 1);
  v41 = sub_100028384(&qword_10082FEA0, &qword_10082FE98, (uint64_t)&protocol conformance descriptor for AxisMarks<A>);
  v42 = v52;
  View.chartXAxis<A>(content:)(sub_100372E90, v57, v52, v39, v40, v41);
  v43 = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v16, v42);
  v44 = static Alignment.center.getter(v43);
  v45 = v51;
  v47 = sub_1003EC69C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v51, 0.0, 1, INFINITY, 0, v44, v46);
  (*(void (**)(char *, uint64_t, double))(v54 + 8))(v19, v55, v47);
  return sub_100372E98(v45, v56);
}

uint64_t sub_100371784(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for MetricCardLineChartView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v17 = *(_QWORD *)(a1 + 8);
  v5 = v17;
  KeyPath = swift_getKeyPath(&unk_1006373E8);
  sub_100372EE0(a1, (uint64_t)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(unsigned __int8 *)(v3 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_100798CA8, v8 + v4, v7 | 7);
  sub_100372F28((uint64_t)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  swift_bridgeObjectRetain(v5);
  v10 = sub_100047110(&qword_100825EA8);
  v11 = sub_100047110(&qword_10082FE48);
  v12 = sub_100028384(&qword_100825EB0, &qword_100825EA8, (uint64_t)&protocol conformance descriptor for [A]);
  v13 = sub_1000083D8((unint64_t *)&qword_1008214E8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v14 = sub_100372C2C();
  return ForEach<>.init(_:id:content:)(&v17, KeyPath, sub_1003731B0, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1003718EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  char v28;
  char v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  char v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  SEL v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  SEL v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t OpaqueTypeConformance2;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  _QWORD v121[6];

  v104 = a2;
  v5 = sub_100047110(&qword_100824DC0);
  __chkstk_darwin(v5);
  v107 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110((uint64_t *)&unk_100827450);
  __chkstk_darwin(v7);
  v9 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for Calendar.Component(0);
  v10 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v12 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100824DC8);
  __chkstk_darwin(v13);
  v103 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for LineMark(0);
  v106 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v105 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_100047110(&qword_10082FE58);
  v110 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v109 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110(&qword_10082FE50);
  v114 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v113 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_10082FED8);
  v115 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v111 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for MetricChartData(0);
  v22 = *(int *)(v21 + 24);
  v23 = a1;
  objc_msgSend(*(id *)((char *)a1 + v22), "doubleValueForUnit:", *a1);
  if ((v24 & 0x7FFFFFFFFFFFFFFFLL) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 56))(a3, 1, 1, v19);
  v25 = LocalizedStringKey.init(stringLiteral:)(1702125892, 0xE400000000000000);
  v101 = v19;
  v27 = v26;
  v99 = v17;
  v29 = v28;
  v100 = a3;
  v31 = v30;
  v32 = (char *)v23 + *(int *)(v21 + 20);
  v98 = v22;
  v33 = v10;
  v34 = *(void (**)(char *, _QWORD, uint64_t))(v10 + 104);
  v35 = v102;
  v34(v12, enum case for Calendar.Component.day(_:), v102);
  v36 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v9, 1, 1, v36);
  v37 = v29 & 1;
  v38 = v103;
  static PlottableValue.value<>(_:_:unit:calendar:)(v25, v27, v37, v31, v32, v12, v9);
  swift_bridgeObjectRelease(v31, v39, v40, v41, v42, v43, v44, v45);
  swift_bridgeObjectRelease(v27, v46, v47, v48, v49, v50, v51, v52);
  sub_10001BE90((uint64_t)v9, (uint64_t *)&unk_100827450);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v35);
  v53 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
  v55 = v54;
  LOBYTE(v31) = v56;
  v58 = v57;
  type metadata accessor for MetricCardLineChartView(0);
  v59 = v104;
  objc_msgSend(*(id *)((char *)v23 + v98), "doubleValueForUnit:", *v23);
  sub_100443B08(*(_BYTE *)v59, v60);
  v121[0] = v61;
  v62 = v31 & 1;
  v63 = v107;
  static PlottableValue.value(_:_:)(v53, v55, v62, v58, v121, &type metadata for Double, &protocol witness table for Double);
  swift_bridgeObjectRelease(v58, v64, v65, v66, v67, v68, v69, v70);
  swift_bridgeObjectRelease(v55, v71, v72, v73, v74, v75, v76, v77);
  v78 = type metadata accessor for Date(0);
  v79 = v105;
  LineMark.init<A, B>(x:y:)(v38, v63, v78, &type metadata for Double, &protocol witness table for Date, &protocol witness table for Double);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v121, 0, 0, _swiftEmptyArrayStorage, 1.0, 10.0, 0.0);
  v80 = v108;
  v81 = v109;
  ChartContent.lineStyle(_:)(v121, v108, &protocol witness table for LineMark);
  sub_1001B57E8((uint64_t)v121);
  v82 = (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v79, v80);
  __chkstk_darwin(v82);
  *(&v97 - 2) = v59;
  v83 = sub_100047110(&qword_10082FE60);
  v116 = v80;
  v117 = &protocol witness table for LineMark;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v116, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
  v85 = sub_100372D44();
  v87 = v112;
  v86 = v113;
  ChartContent.symbol<A>(symbol:)(sub_100373218, &v97 - 4, v112, v83, OpaqueTypeConformance2, v85);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v81, v87);
  v88 = Color.gradient.getter(*(_QWORD *)(v59 + 16));
  v119 = v85;
  v120 = v88;
  v116 = v87;
  v117 = (void *)v83;
  v118 = OpaqueTypeConformance2;
  v89 = swift_getOpaqueTypeConformance2(&v116, &opaque type descriptor for <<opaque return type of ChartContent.symbol<A>(symbol:)>>, 1);
  v90 = v111;
  v91 = v99;
  ChartContent.foregroundStyle<A>(_:)(&v120, v99, &type metadata for AnyGradient, v89, &protocol witness table for AnyGradient);
  v92 = swift_release(v88);
  (*(void (**)(char *, uint64_t, __n128))(v114 + 8))(v86, v91, v92);
  v93 = v115;
  v94 = v100;
  v95 = v101;
  (*(void (**)(uint64_t, char *, uint64_t))(v115 + 32))(v100, v90, v101);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v93 + 56))(v94, 0, 1, v95);
}

double sub_100371F28@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  double result;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  __int128 v15;

  v3 = Color.gradient.getter(*(_QWORD *)(a1 + 16));
  v4 = static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)(&v11, 0x4018000000000000, 0, 0, 1, v4, v5);
  v6 = v11;
  v7 = v12;
  v8 = v13;
  v9 = v14;
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v8;
  *(_BYTE *)(a2 + 32) = v9;
  result = *(double *)&v15;
  *(_OWORD *)(a2 + 40) = v15;
  return result;
}

uint64_t sub_100371FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31[2];

  v31[0] = a1;
  v31[1] = a2;
  v2 = type metadata accessor for AxisMarkPosition(0);
  __chkstk_darwin(v2);
  v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AxisMarkPreset(0);
  __chkstk_darwin(v5);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MetricCardLineChartView(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = sub_100047110((uint64_t *)&unk_100827450);
  __chkstk_darwin(v11);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Calendar.Component(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for AxisMarkValues(0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v15 + 104))(v17, enum case for Calendar.Component.day(_:), v14, v19);
  v22 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v13, 1, 1, v22);
  static AxisMarkValues.stride(by:count:roundLowerBound:roundUpperBound:calendar:)(v17, 1, 2, 2, v13);
  sub_10001BE90((uint64_t)v13, (uint64_t *)&unk_100827450);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_100372EE0(v31[0], (uint64_t)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = *(unsigned __int8 *)(v9 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = swift_allocObject(&unk_100798C80, v24 + v10, v23 | 7);
  v26 = sub_100372F28((uint64_t)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24);
  v27 = static AxisMarkPreset.automatic.getter(v26);
  static AxisMarkPosition.automatic.getter(v27);
  v28 = sub_100047110(&qword_10082FEA8);
  v29 = sub_100372F78();
  return AxisMarks.init(preset:position:values:content:)(v7, v4, v21, sub_100372F6C, v25, v28, v29);
}

uint64_t sub_10037222C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  void (*v46)(char *, uint64_t);
  char v48;
  char v49;
  char v50;
  _QWORD v51[4];
  _QWORD v52[3];
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[3];
  _OWORD v64[2];
  uint64_t v65;
  _OWORD v66[2];
  uint64_t v67;
  _OWORD v68[2];
  uint64_t v69;
  _OWORD v70[2];
  uint64_t v71;

  v52[2] = a1;
  v62 = a2;
  v2 = type metadata accessor for AxisTick.Length(0);
  __chkstk_darwin(v2);
  v55 = (char *)v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for AxisTick(0);
  v59 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v60 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v56 = (char *)v52 - v6;
  v58 = type metadata accessor for AxisGridLine(0);
  v54 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v57 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v53 = (char *)v52 - v9;
  v10 = type metadata accessor for AxisValueLabelOrientation(0);
  __chkstk_darwin(v10);
  v12 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AxisValueLabelCollisionResolution(0);
  __chkstk_darwin(v13);
  v15 = (char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v16);
  v18 = (char *)v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Date(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100047110(&qword_10082FEC0);
  __chkstk_darwin(v23);
  v25 = (char *)v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)v52 - v27;
  AxisValue.as<A>(_:)(v19, v19, &protocol witness table for Date);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_10001BE90((uint64_t)v18, (uint64_t *)&unk_100828370);
    v29 = sub_100047110(&qword_10082FED0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  }
  else
  {
    v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    v52[1] = v52;
    __chkstk_darwin(v30);
    v32 = static AxisValueLabelCollisionResolution.automatic.getter(v31);
    static AxisValueLabelOrientation.automatic.getter(v32);
    v51[2] = sub_100047110(&qword_100825E98);
    v51[3] = sub_1001CE054();
    v51[1] = v51;
    v50 = 1;
    v49 = 1;
    v48 = 2;
    ((void (*)(uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, char *, char, char *, _QWORD, char, _QWORD, char, uint64_t (*)@<X0>(uint64_t *@<X8>)))AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:))(1, 0, 0, 1, 0, 0, 1, v15, v48, v12, 0, v49, 0, v50, sub_1003730BC);
    v33 = sub_100047110(&qword_10082FED0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v28, 0, 1, v33);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v64, 0, 0, _swiftEmptyArrayStorage, 0.5, 10.0, 0.0);
  v70[0] = v64[0];
  v70[1] = v64[1];
  v71 = v65;
  v34 = v53;
  AxisGridLine.init(centered:stroke:)(2, v70);
  v35 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v66, 0, 0, _swiftEmptyArrayStorage, 0.5, 10.0, 0.0);
  v68[0] = v66[0];
  v68[1] = v66[1];
  v69 = v67;
  v36 = (uint64_t)v55;
  static AxisTick.Length.automatic.getter(v35);
  v37 = v56;
  AxisTick.init(centered:length:stroke:)(2, v36, v68);
  sub_100373074((uint64_t)v28, (uint64_t)v25);
  v63[0] = (uint64_t)v25;
  v55 = v25;
  v38 = v34;
  v39 = v54;
  v40 = (uint64_t)v57;
  v41 = v58;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v57, v34, v58);
  v63[1] = v40;
  v42 = v59;
  v43 = (uint64_t)v60;
  v44 = v61;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v60, v37, v61);
  v63[2] = v43;
  sub_1005AC398(v63, v62);
  v45 = *(void (**)(char *, uint64_t))(v42 + 8);
  v45(v37, v44);
  v46 = *(void (**)(char *, uint64_t))(v39 + 8);
  v46(v38, v41);
  sub_10001BE90((uint64_t)v28, &qword_10082FEC0);
  v45((char *)v43, v44);
  v46((char *)v40, v41);
  return sub_10001BE90((uint64_t)v55, &qword_10082FEC0);
}

uint64_t sub_1003727F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  char v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  __n128 v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  char *v68;
  void (*v69)(char *, uint64_t);
  uint64_t result;
  double v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t *v78;
  _QWORD v79[2];
  _QWORD v80[2];

  v74 = a2;
  v78 = a3;
  v4 = type metadata accessor for Date(0);
  v77 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v76 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v75 = (char *)&v73 - v7;
  v8 = type metadata accessor for Date.FormatStyle.Symbol.Weekday(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date.FormatStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v73 - v17;
  if (qword_10081DAF0 != -1)
    swift_once(&qword_10081DAF0, sub_10037111C);
  v19 = sub_10003CE9C(v12, (uint64_t)qword_10082FD50);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v19, v12);
  static Date.FormatStyle.Symbol.Weekday.narrow.getter(v20);
  Date.FormatStyle.weekday(_:)(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v15, v12);
  v22 = sub_1000083D8(&qword_100825EA0, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  Date.formatted<A>(_:)(v80, v18, v12, v22);
  v21(v18, v12);
  v79[0] = v80[0];
  v79[1] = v80[1];
  v23 = sub_100038CA0();
  v24 = Text.init<A>(_:)(v79, &type metadata for String, v23);
  v26 = v25;
  v28 = v27;
  v73 = a1;
  v30 = v29 & 1;
  v32 = static Color.white.getter(v31);
  v80[0] = v32;
  v33 = Text.foregroundStyle<A>(_:)(v80, v24, v26, v30, v28, &type metadata for Color, &protocol witness table for Color);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  sub_1000E4458(v24, v26, v30);
  swift_release(v32);
  swift_bridgeObjectRelease(v28, v40, v41, v42, v43, v44, v45, v46);
  if (qword_10081D698 != -1)
    swift_once(&qword_10081D698, sub_1001A826C);
  v48 = v37 & 1;
  v49 = Text.font(_:)(qword_10086A000, v33, v35, v37 & 1, v39, v47);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  sub_1000E4458(v33, v35, v48);
  swift_bridgeObjectRelease(v39, v56, v57, v58, v59, v60, v61, v62);
  v63 = type metadata accessor for MetricCardLineChartView(0);
  v64 = v75;
  v65 = v74 + *(int *)(v63 + 36);
  v66 = v77;
  v67 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
  v67(v75, v73, v4);
  v68 = v76;
  v67(v76, v65, v4);
  sub_1000083D8((unint64_t *)&qword_1008274E0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  LOBYTE(v65) = dispatch thunk of static Comparable.< infix(_:_:)(v68, v64, v4);
  v69 = *(void (**)(char *, uint64_t))(v66 + 8);
  v69(v68, v4);
  result = ((uint64_t (*)(char *, uint64_t))v69)(v64, v4);
  v71 = 0.3;
  v72 = v78;
  *v78 = v49;
  v72[1] = v51;
  *((_BYTE *)v72 + 16) = v53 & 1;
  if ((v65 & 1) == 0)
    v71 = 1.0;
  v72[3] = v55;
  *((double *)v72 + 4) = v71;
  return result;
}

uint64_t sub_100372BC0()
{
  uint64_t v0;

  return sub_100371784(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100372BC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082FE38;
  if (!qword_10082FE38)
  {
    v1 = sub_100007050(&qword_10082FE30);
    sub_100372C2C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10082FE38);
  }
  return result;
}

unint64_t sub_100372C2C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;

  result = qword_10082FE40;
  if (!qword_10082FE40)
  {
    v1 = sub_100007050(&qword_10082FE48);
    v2 = sub_100007050(&qword_10082FE50);
    v3 = sub_100007050(&qword_10082FE58);
    v4 = sub_100007050(&qword_10082FE60);
    v8 = type metadata accessor for LineMark(255);
    v9 = &protocol witness table for LineMark;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
    v6 = sub_100372D44();
    v8 = v3;
    v9 = (void *)v4;
    v10 = OpaqueTypeConformance2;
    v11 = (void *)v6;
    v7 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of ChartContent.symbol<A>(symbol:)>>, 1);
    v8 = v2;
    v9 = &type metadata for AnyGradient;
    v10 = v7;
    v11 = &protocol witness table for AnyGradient;
    swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10082FE40);
  }
  return result;
}

unint64_t sub_100372D44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082FE68;
  if (!qword_10082FE68)
  {
    v1 = sub_100007050(&qword_10082FE60);
    sub_100372DB0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082FE68);
  }
  return result;
}

unint64_t sub_100372DB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082FE70;
  if (!qword_10082FE70)
  {
    v1 = sub_100007050(&qword_10082FE78);
    sub_100340BB4();
    sub_100028384(&qword_10082FE80, &qword_10082FE88, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082FE70);
  }
  return result;
}

unint64_t sub_100372E34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100824CF0;
  if (!qword_100824CF0)
  {
    v1 = sub_100007050(&qword_100824CE8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_100824CF0);
  }
  return result;
}

uint64_t sub_100372E90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100371FA4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100372E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10082FE28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100372EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MetricCardLineChartView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100372F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MetricCardLineChartView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100372F6C(uint64_t a1)
{
  return sub_1003731BC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10037222C);
}

unint64_t sub_100372F78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082FEB0;
  if (!qword_10082FEB0)
  {
    v1 = sub_100007050(&qword_10082FEA8);
    sub_100372FF8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <each A> BuilderTuple<Pack{repeat A}>, v1);
    atomic_store(result, (unint64_t *)&qword_10082FEB0);
  }
  return result;
}

unint64_t sub_100372FF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082FEB8;
  if (!qword_10082FEB8)
  {
    v1 = sub_100007050(&qword_10082FEC0);
    sub_100028384(&qword_10082FEC8, &qword_10082FED0, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10082FEB8);
  }
  return result;
}

uint64_t sub_100373074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10082FEC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003730BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1003727F8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1003730C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = type metadata accessor for MetricCardLineChartView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + v4 + 8), v8, v9, v10, v11, v12, v13, v14);
  swift_release(*(_QWORD *)(v7 + 16));
  v15 = (id *)(v7 + *(int *)(v1 + 28));

  v16 = type metadata accessor for MetricFormattingHelper(0);
  v17 = (char *)v15 + *(int *)(v16 + 20);
  v18 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);

  v19 = v7 + *(int *)(v1 + 36);
  v20 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003731B0(uint64_t a1)
{
  return sub_1003731BC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1003718EC);
}

uint64_t sub_1003731BC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MetricCardLineChartView(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

double sub_100373218@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100371F28(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100373224()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;

  result = qword_10082FEE0;
  if (!qword_10082FEE0)
  {
    v1 = sub_100007050(&qword_10082FE28);
    v2 = sub_100007050(&qword_10082FE18);
    v3 = sub_100007050(&qword_10082FE98);
    v4 = sub_100007050(&qword_10082FE10);
    v5 = sub_100007050(&qword_100824CE8);
    v10 = sub_100007050(&qword_10082FE08);
    v11 = &type metadata for BuilderEmpty;
    v12 = sub_100028384(&qword_10082FE90, &qword_10082FE08, (uint64_t)&protocol conformance descriptor for Chart<A>);
    v13 = &protocol witness table for BuilderEmpty;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.chartYAxis<A>(content:)>>, 1);
    v7 = sub_100372E34();
    v10 = v4;
    v11 = (void *)v5;
    v12 = OpaqueTypeConformance2;
    v13 = (void *)v7;
    v8 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.chartXScale<A>(domain:type:)>>, 1);
    v9 = sub_100028384(&qword_10082FEA0, &qword_10082FE98, (uint64_t)&protocol conformance descriptor for AxisMarks<A>);
    v10 = v2;
    v11 = (void *)v3;
    v12 = v8;
    v13 = (void *)v9;
    swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.chartXAxis<A>(content:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082FEE0);
  }
  return result;
}

uint64_t sub_10037339C(uint64_t a1)
{
  uint64_t result;

  result = 0x7972616D6D7573;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x7365756C6176;
      break;
    case 2:
      result = 0x74726F666665;
      break;
    case 3:
      result = 1701011824;
      break;
    case 4:
      result = 0x6F705369746C756DLL;
      break;
    case 5:
      result = 0x6C61767265746E69;
      break;
    case 6:
      result = 0x70614C6B63617274;
      break;
    case 7:
      result = 0x737465536D697773;
      break;
    case 8:
      result = 0x7374696C7073;
      break;
    case 9:
      result = 0x6C6C69686E776F64;
      break;
    case 10:
      result = 0x73746E656D676573;
      break;
    case 11:
      result = 0x7261426E727562;
      break;
    case 12:
      result = 0x7461527472616568;
      break;
    case 13:
      result = 0x7265776F70;
      break;
    case 14:
      result = 0x646E416574756F72;
      break;
    case 15:
      result = 0xD000000000000015;
      break;
    case 16:
      result = 0x736472617761;
      break;
    case 17:
      result = 0x6C6F686563616C70;
      break;
    default:
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000040, 0x800000010069B200, "FitnessApp/CHWorkoutDetailSection+Analytics.swift", 49, 2, 51, 0);
      __break(1u);
      break;
  }
  return result;
}

id sub_100373664()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutNotificationBridge();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutNotificationBridge()
{
  return objc_opt_self(WOWorkoutNotification);
}

uint64_t storeEnumTagSinglePayload for UnitSettingsTrackDistanceUnit(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100373710 + 4 * byte_100637455[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100373744 + 4 * asc_100637450[v4]))();
}

uint64_t sub_100373744(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10037374C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100373754);
  return result;
}

uint64_t sub_100373760(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100373768);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10037376C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100373774(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnitSettingsTrackDistanceUnit()
{
  return &type metadata for UnitSettingsTrackDistanceUnit;
}

void sub_100373790(_QWORD *a1@<X8>)
{
  *a1 = &off_100782A70;
}

void sub_1003737A0(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000029;
  else
    v2 = 0xD000000000000028;
  v3 = 0x800000010069B360;
  if (*v1)
    v3 = 0x800000010069B330;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1003737E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082FF18;
  if (!qword_10082FF18)
  {
    v1 = sub_100007050(&qword_10082FF20);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10082FF18);
  }
  return result;
}

unint64_t sub_100373838()
{
  unint64_t result;

  result = qword_10082FF28;
  if (!qword_10082FF28)
  {
    result = swift_getWitnessTable(&unk_100637578, &type metadata for UnitSettingsTrackDistanceUnit);
    atomic_store(result, (unint64_t *)&qword_10082FF28);
  }
  return result;
}

uint64_t sub_10037387C(void *a1, void *a2)
{
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;

  switch(sub_100374338())
  {
    case 0:
      if (objc_msgSend(a1, "_activityMoveMode") != (id)2)
        return sub_100374A64(a1, a2);
      if (qword_10081DAF8 != -1)
LABEL_23:
        swift_once(&qword_10081DAF8, sub_1003754B8);
LABEL_15:
      v21 = (id)qword_10082FF30;
      objc_msgSend(a1, "duration");
      v22 = objc_msgSend(v21, "stringFromTimeInterval:");

      if (!v22)
        return 0;
      v4 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v22);

      return (uint64_t)v4;
    case 1:
      v5 = objc_msgSend(a1, "fiui_activityType");
      if (!v5)
      {
        __break(1u);
LABEL_26:
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000040, 0x800000010069B200, "FitnessApp/WorkoutFormattingUtilities.swift", 43, 2, 89, 0);
        __break(1u);
        JUMPOUT(0x100373C94);
      }
      v6 = v5;
      v7 = FIUIDistanceTypeForActivityType(v5);

      v8 = objc_msgSend(a2, "userDistanceHKUnitForDistanceType:", v7);
      v9 = objc_msgSend(a1, "totalDistance");
      if (!v9)
        goto LABEL_18;
      v10 = v9;
      objc_msgSend(v9, "doubleValueForUnit:", v8);
      v12 = v11;

      if (objc_msgSend(a1, "workoutActivityType") != (id)46
        || (v13 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v12),
            v4 = sub_1003747A4(v13, v8),
            v15 = v14,
            v13,
            !v15))
      {
        if (qword_10081DB20 != -1)
          swift_once(&qword_10081DB20, sub_1003755EC);
        v16 = (void *)qword_10082FF58;
        v17 = objc_allocWithZone((Class)NSNumber);
        v18 = v16;
        v19 = objc_msgSend(v17, "initWithDouble:", v12);
        v20 = objc_msgSend(v18, "stringFromNumber:", v19);

        if (v20)
        {
          v4 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v20);

        }
        else
        {
LABEL_18:
          v4 = (id)Double.description.getter(0.0);
        }
      }
      v23 = objc_msgSend((id)objc_opt_self(HKUnit), "lengthFormatterUnitFromUnit:", v8);
      if (qword_10081DB10 != -1)
        swift_once(&qword_10081DB10, sub_100375574);
      v24 = (id)qword_10082FF48;
      v25 = objc_msgSend(v24, "unitStringFromValue:unit:", v23, 100.0);
      static String._unconditionallyBridgeFromObjectiveC(_:)(v25);

      return (uint64_t)v4;
    case 2:
      if (qword_10081DAF8 == -1)
        goto LABEL_15;
      goto LABEL_23;
    case 3:
      return sub_100374A64(a1, a2);
    default:
      goto LABEL_26;
  }
}

id sub_100373CA4(void *a1, unsigned __int8 a2)
{
  id v4;
  void *v5;
  unsigned int v6;
  double v7;
  id v8;
  void *v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double v17;
  double v18;
  id v19;
  double v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  double v25;
  double v26;
  id v27;
  double v28;
  id v29;
  void *v30;
  double v31;
  id result;
  id v33;
  id v34;
  double v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  id v47;
  double v48;
  uint64_t v49;
  double v50;

  sub_100374CC8(a2, (uint64_t)&v46);
  v4 = objc_msgSend(a1, "device");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "_isConnectedGymDevice");

    if (v6)
    {
      v7 = v46;
      v8 = objc_msgSend(a1, "device");
      if (!v8
        || ((v9 = v8, v7 <= 60.0) ? (v10 = v7) : (v10 = 60.0),
            v11 = objc_msgSend((id)objc_opt_self(HKUIConnectedGymIconUtilties), "iconForConnectedGymDevice:preferredIconWidth:", v8, v10), v9, !v11))
      {
        sub_100374DB8(a1, 0, v7, v7 / 10.0);
      }
      goto LABEL_34;
    }
  }
  v12 = objc_msgSend(a1, "sourceRevision");
  v13 = objc_msgSend(v12, "source");

  LODWORD(v12) = objc_msgSend(v13, "_hasFirstPartyBundleID");
  if ((_DWORD)v12)
  {
    v14 = objc_msgSend(a1, "sourceRevision");
    v15 = objc_msgSend(v14, "source");

    LOBYTE(v14) = objc_msgSend(v15, "_isAppleWatch");
    if ((v14 & 1) != 0 || objc_msgSend(a1, "_isWatchWorkout"))
    {
      v16 = v47;
      v17 = v46;
      v18 = v48;
      v19 = v47;
      if (objc_msgSend(a1, "_goalType"))
      {
        v20 = sub_100374F2C();
        v21 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "metricColorsForGoalTypeIdentifier:", objc_msgSend(a1, "_goalType"));
        v22 = (void *)objc_opt_self(CATransaction);
        objc_msgSend(v22, "lock");
        objc_msgSend(v22, "begin");
        objc_msgSend(v22, "setDisableActions:", 1);
        v23 = objc_msgSend((id)objc_opt_self(RingViewFactory), "workoutRingWithPercent:colors:diameter:thickness:", v21, v20, v17, v18);
        objc_msgSend(v22, "unlock");
        objc_msgSend(v22, "commit");

LABEL_22:
        sub_100375724((uint64_t)&v46);
LABEL_23:
        v33 = objc_msgSend(a1, "fiui_activityType");
        (id)FIUIStaticWorkoutIconImage(v33, v49);

        sub_100375724((uint64_t)&v46);
        return v23;
      }
      if (v16)
      {
        result = (id)FIUICircularImage(v19, v17);
        if (result)
        {
          v23 = result;
          sub_100375724((uint64_t)&v46);
          goto LABEL_22;
        }
        goto LABEL_40;
      }
      v23 = (id)FIUICircularWorkoutGradientImage(0);
      if (v23)
        goto LABEL_23;
      __break(1u);
      goto LABEL_38;
    }
    sub_1003751F8(v46);
LABEL_34:
    sub_100375724((uint64_t)&v46);
    return 0;
  }
  if (!a2)
  {
    v31 = v46;
    if ((objc_msgSend(a1, "_isWatchWorkout") & 1) != 0)
    {
      sub_10037531C(a1, v31);
    }
    else
    {
      v41 = objc_msgSend(a1, "sourceRevision");
      v42 = objc_msgSend(v41, "source");

      v43 = objc_msgSend(v42, "bundleIdentifier");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      v45 = v44;

      sub_1003751F8(v31);
      swift_bridgeObjectRelease(v45);
    }
    goto LABEL_34;
  }
  v24 = v47;
  v25 = v46;
  v26 = v48;
  v27 = v47;
  if (objc_msgSend(a1, "_goalType"))
  {
    v28 = sub_100374F2C();
    v29 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "metricColorsForGoalTypeIdentifier:", objc_msgSend(a1, "_goalType"));
    v30 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v30, "lock");
    objc_msgSend(v30, "begin");
    objc_msgSend(v30, "setDisableActions:", 1);
    v23 = objc_msgSend((id)objc_opt_self(RingViewFactory), "workoutRingWithPercent:colors:diameter:thickness:", v29, v28, v25, v26);
    objc_msgSend(v30, "unlock");
    objc_msgSend(v30, "commit");

LABEL_28:
    sub_100375724((uint64_t)&v46);
    goto LABEL_29;
  }
  if (!v24)
  {
LABEL_38:
    result = (id)FIUICircularWorkoutGradientImage(0);
    v23 = result;
    if (!result)
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
LABEL_29:
    v34 = objc_msgSend(a1, "fiui_activityType");
    (id)FIUIStaticWorkoutIconImage(v34, v49);

    v35 = v50;
    if ((objc_msgSend(a1, "_isWatchWorkout") & 1) != 0)
    {
      sub_10037531C(a1, v35);
    }
    else
    {
      v36 = objc_msgSend(a1, "sourceRevision");
      v37 = objc_msgSend(v36, "source");

      v38 = objc_msgSend(v37, "bundleIdentifier");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v40 = v39;

      sub_1003751F8(v35);
      swift_bridgeObjectRelease(v40);
    }
    sub_100375724((uint64_t)&v46);
    return v23;
  }
  result = (id)FIUICircularImage(v27, v25);
  if (result)
  {
    v23 = result;
    sub_100375724((uint64_t)&v46);
    goto LABEL_28;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100374338()
{
  void *v0;
  id v1;
  id v2;
  unsigned int v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  id v19;
  _BOOL4 v20;
  id v21;
  void *v22;
  id v23;
  double v24;
  double v25;
  double v26;

  v1 = objc_msgSend(v0, "sourceRevision");
  v2 = objc_msgSend(v1, "source");

  LOBYTE(v1) = objc_msgSend(v2, "_isAppleWatch");
  if ((v1 & 1) != 0)
  {
    v3 = 1;
  }
  else if (objc_msgSend(v0, "_isWatchWorkout"))
  {
    v4 = objc_msgSend(v0, "sourceRevision");
    v5 = objc_msgSend(v4, "source");

    v3 = objc_msgSend(v5, "_hasFirstPartyBundleID");
  }
  else
  {
    v3 = 0;
  }
  v6 = objc_msgSend(v0, "_goalType");
  v7 = objc_msgSend(v0, "totalDistance");
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
    objc_msgSend(v8, "doubleValueForUnit:", v9);
    v11 = v10;

    if (v3)
    {
      v12 = (void *)objc_opt_self(HKWorkout);
      v13 = objc_msgSend(v0, "fiui_activityType");
      v14 = objc_msgSend(v12, "fiui_supportedGoalTypesForActivityType:activityMoveMode:", v13, objc_msgSend(v0, "_activityMoveMode"));

      if (v14)
      {
        v15 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
        v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

        v17 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", 1);
        v18 = sub_1002D37C4((uint64_t)v17, v16);
        swift_bridgeObjectRelease(v16);

        if ((v18 & 1) != 0 && !v6)
          return v11 > 2.22044605e-16;
      }
    }
  }
  else if (v3)
  {
    if (!v6)
    {
      v19 = objc_msgSend(v0, "totalEnergyBurned");
      v20 = v19 == 0;

      return 2 * v20;
    }
  }
  else
  {
    v21 = objc_msgSend(v0, "totalDistance");
    if (v21)
    {
      v22 = v21;
      v23 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
      objc_msgSend(v22, "doubleValueForUnit:", v23);
      v25 = v24;

      if (v25 > 2.22044605e-16)
        return 1;
    }
    else
    {
      objc_msgSend(v0, "duration");
      if (v26 <= 2.22044605e-16)
        return 3;
      else
        return 2;
    }
  }
  return (uint64_t)v6;
}

id sub_100374664()
{
  void *v0;
  id v1;
  id v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  unint64_t v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v38;
  __int128 v39;
  __int128 v40;

  v1 = objc_msgSend(v0, "metadata");
  v2 = v1;
  if (v1)
  {
    v3 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(HKMetadataKeySwimmingLocationType);
    v12 = (CHWorkoutDetailHeartRateTableViewCell *)v5;
    if (*(_QWORD *)v3->cellPadding && (v13 = sub_100438F74(v4, v5), (v5 & 1) != 0))
    {
      sub_10003E9BC(*(_QWORD *)v3[1].cellInset + 32 * v13, (uint64_t)&v39);
      swift_bridgeObjectRelease(v12, v14, v15, v16, v17, v18, v19, v20);
      swift_bridgeObjectRelease(v3, v21, v22, v23, v24, v25, v26, v27);
      if (*((_QWORD *)&v40 + 1))
      {
        v28 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
        if ((swift_dynamicCast(&v38, &v39, (char *)&type metadata for Any + 8, v28, 6) & 1) != 0)
        {
          v29 = v38;
          v2 = objc_msgSend(v38, "integerValue");

          return v2;
        }
        return 0;
      }
    }
    else
    {
      v39 = 0u;
      v40 = 0u;
      swift_bridgeObjectRelease(v12, (SEL)v5, v6, v7, v8, v9, v10, v11);
      swift_bridgeObjectRelease(v3, v30, v31, v32, v33, v34, v35, v36);
    }
    sub_1000F996C((uint64_t)&v39);
    return 0;
  }
  return v2;
}

id sub_1003747A4(void *a1, void *a2)
{
  id v4;
  double v5;
  id result;
  void *v7;
  NSString v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  unsigned __int8 v13;
  id v14;
  unsigned int v15;
  id v16;
  id v17;
  unsigned __int8 v18;
  id v19;
  unsigned __int8 v20;
  id v21;
  unsigned int v22;

  v4 = objc_msgSend(a1, "doubleValue");
  if (fabs(v5 + -33.3333333) >= 0.01)
  {
    v11 = (void *)objc_opt_self(HKUnit);
    v12 = objc_msgSend(v11, "meterUnitWithMetricPrefix:", 9);
    v13 = objc_msgSend(a2, "isEqual:", v12);

    if ((v13 & 1) == 0)
    {
      v14 = objc_msgSend(v11, "mileUnit");
      v15 = objc_msgSend(a2, "isEqual:", v14);

      if (!v15)
        goto LABEL_22;
    }
    if (qword_10081DB28 != -1)
      swift_once(&qword_10081DB28, sub_100375674);
    v16 = objc_msgSend((id)qword_10082FF60, "stringFromNumber:", a1);
    if (!v16)
    {
LABEL_22:
      v17 = objc_msgSend(v11, "footUnit");
      v18 = objc_msgSend(a2, "isEqual:", v17);

      if ((v18 & 1) == 0)
      {
        v19 = objc_msgSend(v11, "yardUnit");
        v20 = objc_msgSend(a2, "isEqual:", v19);

        if ((v20 & 1) == 0)
        {
          v21 = objc_msgSend(v11, "meterUnit");
          v22 = objc_msgSend(a2, "isEqual:", v21);

          if (!v22)
            return 0;
        }
      }
      if (qword_10081DB30 != -1)
        swift_once(&qword_10081DB30, sub_100375690);
      v16 = objc_msgSend((id)qword_10082FF68, "stringFromNumber:", a1);
      if (!v16)
        return 0;
    }
    v9 = v16;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
LABEL_16:

    return (id)v10;
  }
  result = (id)FIUIBundle(v4);
  if (result)
  {
    v7 = result;
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, 0, 0);

    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_100374A64(void *a1, id a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  id v16;

  v3 = objc_msgSend(a2, "userActiveEnergyBurnedUnit");
  v4 = objc_msgSend(a1, "totalEnergyBurned");
  if (v4)
  {
    v5 = v4;
    if (qword_10081DB18 != -1)
      swift_once(&qword_10081DB18, sub_1003755D0);
    v6 = (id)qword_10082FF50;
    v7 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInt:", _HKWorkoutFlooredValueForQuantity(v5, v3));
    v8 = objc_msgSend(v6, "stringFromNumber:", v7);

    if (v8)
    {
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);

      goto LABEL_8;
    }

  }
  v9 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
LABEL_8:
  v10 = (void *)objc_opt_self(HKUnit);
  v11 = objc_msgSend(v10, "energyFormatterUnitFromUnit:", v3);
  if (qword_10081DB08 != -1)
    swift_once(&qword_10081DB08, sub_100375560);
  v12 = (void *)qword_10082FF40;
  sub_10001E724(0, (unint64_t *)&qword_10081E630, NSObject_ptr);
  v13 = v12;
  v14 = objc_msgSend(v10, "largeCalorieUnit");
  v15 = static NSObject.== infix(_:_:)(v3, v14);

  objc_msgSend(v13, "setForFoodEnergyUse:", v15 & 1);
  v16 = objc_msgSend(v13, "unitStringFromValue:unit:", v11, 100.0);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v16);

  return v9;
}

void sub_100374CC8(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  double v3;
  double v4;
  double v5;
  id v6;
  unint64_t v7;
  uint64_t v8;

  if (a1)
  {
    if (a1 == 1)
      v3 = 165.0;
    else
      v3 = 100.0;
    if (a1 == 1)
      v4 = 20.0;
    else
      v4 = 10.0;
    if (a1 == 1)
      v5 = 60.0;
    else
      v5 = 30.0;
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    v7 = (unint64_t)objc_msgSend(v6, "colorWithAlphaComponent:", 0.28);

    v8 = 6;
  }
  else
  {
    v7 = a1;
    v5 = 0.0;
    v4 = 4.0;
    v8 = 2;
    v3 = 40.0;
  }
  *(double *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v7;
  *(double *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v8;
  *(double *)(a2 + 32) = v5;
}

id sub_100374DB8(void *a1, void *a2, double a3, double a4)
{
  double v8;
  id v9;
  void *v10;
  id v11;
  id result;

  if (objc_msgSend(a1, "_goalType"))
  {
    v8 = sub_100374F2C();
    v9 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "metricColorsForGoalTypeIdentifier:", objc_msgSend(a1, "_goalType"));
    v10 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v10, "lock");
    objc_msgSend(v10, "begin");
    objc_msgSend(v10, "setDisableActions:", 1);
    v11 = objc_msgSend((id)objc_opt_self(RingViewFactory), "workoutRingWithPercent:colors:diameter:thickness:", v9, v8, a3, a4);
    objc_msgSend(v10, "unlock");
    objc_msgSend(v10, "commit");
LABEL_6:

    return v11;
  }
  if (a2)
  {
    v9 = a2;
    result = (id)FIUICircularImage(v9, a3);
    if (result)
    {
      v11 = result;
      goto LABEL_6;
    }
  }
  else
  {
    result = (id)FIUICircularWorkoutGradientImage(0);
    v11 = result;
    if (result)
      return v11;
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_100374F2C()
{
  void *v0;
  double v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  double v8;
  double v9;
  id v10;
  id v11;
  void *v12;
  double v13;
  id v14;
  double v15;
  double v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  double v21;
  id v22;
  double v23;

  v1 = 1.0;
  switch((unint64_t)objc_msgSend(v0, "_goalType"))
  {
    case 0uLL:
      return v1;
    case 1uLL:
      v2 = objc_msgSend(v0, "totalDistance");
      v1 = 0.0;
      if (!v2)
        return v1;
      v3 = v2;
      v4 = objc_msgSend(v0, "_goal");
      if (!v4)
        goto LABEL_14;
      v5 = v4;
      v6 = (void *)objc_opt_self(HKUnit);
      v7 = objc_msgSend(v6, "meterUnit");
      objc_msgSend(v3, "doubleValueForUnit:", v7);
      v9 = v8;

      v10 = objc_msgSend(v6, "meterUnit");
      goto LABEL_10;
    case 2uLL:
      v11 = objc_msgSend(v0, "_goal");
      if (v11)
      {
        v12 = v11;
        objc_msgSend(v0, "duration");
        v9 = v13;
        v14 = objc_msgSend((id)objc_opt_self(HKUnit), "secondUnit");
        objc_msgSend(v12, "doubleValueForUnit:", v14);
        v16 = v15;

        goto LABEL_11;
      }
      v1 = 0.0;
      break;
    case 3uLL:
      v17 = objc_msgSend(v0, "totalEnergyBurned");
      v1 = 0.0;
      if (!v17)
        return v1;
      v3 = v17;
      v18 = objc_msgSend(v0, "_goal");
      if (v18)
      {
        v5 = v18;
        v19 = (void *)objc_opt_self(HKUnit);
        v20 = objc_msgSend(v19, "kilocalorieUnit");
        objc_msgSend(v3, "doubleValueForUnit:", v20);
        v9 = v21;

        v10 = objc_msgSend(v19, "kilocalorieUnit");
LABEL_10:
        v22 = v10;
        objc_msgSend(v5, "doubleValueForUnit:", v22);
        v16 = v23;

LABEL_11:
        if (v16 <= 2.22044605e-16)
          v1 = 0.0;
        else
          v1 = v9 / v16;
      }
      else
      {
LABEL_14:

      }
      break;
    default:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000040, 0x800000010069B200, "FitnessApp/WorkoutFormattingUtilities.swift", 43, 2, 423, 0);
      __break(1u);
      JUMPOUT(0x1003751E8);
  }
  return v1;
}

id sub_1003751F8(double a1)
{
  id v2;
  NSString v3;
  void *v4;
  id v5;
  id v6;
  double v7;
  double v8;
  id v9;

  v2 = objc_msgSend(objc_allocWithZone((Class)CHPhoneIconParameters), "init");
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setBundleID:", v3);

  v4 = (void *)objc_opt_self(UIScreen);
  v5 = v2;
  v6 = objc_msgSend(v4, "mainScreen");
  objc_msgSend(v6, "scale");
  v8 = v7;

  objc_msgSend(v5, "setPreferredAppStoreIconWidth:", v8 * a1);
  objc_msgSend(v5, "setAppIconFormat:", 2);
  v9 = objc_msgSend((id)objc_opt_self(CHIconCache), "fetchPhoneIconWithParameters:", v5);

  return v9;
}

id sub_10037531C(void *a1, double a2)
{
  id v4;
  id v5;
  id v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  double v13;
  double v14;
  id v15;

  v4 = objc_msgSend(objc_allocWithZone((Class)CHWatchIconParameters), "init");
  v5 = objc_msgSend(a1, "sourceRevision");
  v6 = objc_msgSend(v5, "source");

  v7 = objc_msgSend(v6, "bundleIdentifier");
  if (!v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v9 = v8;
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }
  objc_msgSend(v4, "setBundleID:", v7);

  v10 = (void *)objc_opt_self(UIScreen);
  v11 = v4;
  v12 = objc_msgSend(v10, "mainScreen");
  objc_msgSend(v12, "scale");
  v14 = v13;

  objc_msgSend(v11, "setPreferredAppStoreIconWidth:", v14 * a2);
  objc_msgSend(v11, "setIconVariant2x:", 50);
  objc_msgSend(v11, "setIconVariant3x:", 50);
  v15 = objc_msgSend((id)objc_opt_self(CHIconCache), "fetchWatchIconWithParameters:", v11);

  return v15;
}

void sub_1003754B8(uint64_t a1)
{
  sub_1003754D8(a1, 96, &qword_10082FF30);
}

void sub_1003754C8(uint64_t a1)
{
  sub_1003754D8(a1, 224, &qword_10082FF38);
}

void sub_1003754D8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id v5;

  v5 = objc_msgSend(objc_allocWithZone((Class)NSDateComponentsFormatter), "init");
  objc_msgSend(v5, "setUnitsStyle:", 0);
  objc_msgSend(v5, "setAllowedUnits:", a2);
  objc_msgSend(v5, "setZeroFormattingBehavior:", 0);

  *a3 = v5;
}

id sub_100375560(uint64_t a1)
{
  return sub_100375588(a1, (Class *)NSEnergyFormatter_ptr, &qword_10082FF40);
}

id sub_100375574(uint64_t a1)
{
  return sub_100375588(a1, (Class *)NSLengthFormatter_ptr, &qword_10082FF48);
}

id sub_100375588(uint64_t a1, Class *a2, _QWORD *a3)
{
  id v4;
  id result;

  v4 = objc_msgSend(objc_allocWithZone(*a2), "init");
  result = objc_msgSend(v4, "setUnitStyle:", 2);
  *a3 = v4;
  return result;
}

id sub_1003755D0(uint64_t a1)
{
  return sub_1003756AC(a1, 1, (SEL *)&selRef_setMaximumFractionDigits_, 0, &qword_10082FF50);
}

id sub_1003755EC()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v0, "setNumberStyle:", 1);
  objc_msgSend(v0, "setMinimumFractionDigits:", 2);
  objc_msgSend(v0, "setMaximumFractionDigits:", 2);
  result = objc_msgSend(v0, "setRoundingMode:", 2);
  qword_10082FF58 = (uint64_t)v0;
  return result;
}

id sub_100375674(uint64_t a1)
{
  return sub_1003756AC(a1, 1, (SEL *)&selRef_setRoundingMode_, 2, &qword_10082FF60);
}

id sub_100375690(uint64_t a1)
{
  return sub_1003756AC(a1, 0, (SEL *)&selRef_setRoundingMode_, 2, &qword_10082FF68);
}

id sub_1003756AC(uint64_t a1, uint64_t a2, SEL *a3, uint64_t a4, _QWORD *a5)
{
  id v9;
  id result;

  v9 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v9, "setNumberStyle:", a2);
  result = objc_msgSend(v9, *a3, a4);
  *a5 = v9;
  return result;
}

uint64_t sub_100375724(uint64_t a1)
{

  return a1;
}

uint64_t sub_10037574C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5[33] = a4;
  v5[34] = v4;
  v5[31] = a2;
  v5[32] = a3;
  v5[30] = a1;
  v6 = type metadata accessor for ScalarDictionary(0);
  v5[35] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics.ID(0);
  v5[36] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[37] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[38] = swift_task_alloc(v9);
  v5[39] = swift_task_alloc(v9);
  v10 = type metadata accessor for MetricClickElement(0);
  v5[40] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[41] = v11;
  v5[42] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v5[43] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v5[44] = v13;
  v5[45] = v14;
  return swift_task_switch(sub_100375840, v13, v14);
}

uint64_t sub_100375840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = v1 + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_recommendation;
  *(_QWORD *)(v0 + 368) = *(_QWORD *)(v1
                                    + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_recommendation);
  v3 = *(_QWORD *)(v2 + 8);
  *(_QWORD *)(v0 + 376) = v3;
  if (v3
    && (v4 = *(_QWORD *)(v1
                       + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_configurationTask),
        (*(_QWORD *)(v0 + 384) = v4) != 0))
  {
    v5 = async function pointer to Task.value.getter[1];
    swift_bridgeObjectRetain(v3);
    swift_retain(v4);
    v6 = (_QWORD *)swift_task_alloc(v5);
    *(_QWORD *)(v0 + 392) = v6;
    v7 = sub_100047110(&qword_10082EEA0);
    *v6 = v0;
    v6[1] = sub_100375980;
    return Task.value.getter(v7, v4, (char *)&type metadata for () + 8, v7, &protocol self-conformance witness table for Error);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 240);
    swift_release(*(_QWORD *)(v0 + 344));
    v10 = type metadata accessor for ImpressionMetrics(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    v11 = *(_QWORD *)(v0 + 304);
    v12 = *(_QWORD *)(v0 + 312);
    v13 = *(_QWORD *)(v0 + 280);
    swift_task_dealloc(*(_QWORD *)(v0 + 336));
    swift_task_dealloc(v12);
    swift_task_dealloc(v11);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100375980()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 392);
  *(_QWORD *)(*(_QWORD *)v1 + 400) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_bridgeObjectRelease(v2[47]);
    v4 = v2[44];
    v5 = v2[45];
    v6 = sub_100375CBC;
  }
  else
  {
    v4 = v2[44];
    v5 = v2[45];
    v6 = sub_1003759EC;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1003759EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = *(_QWORD *)(v0 + 384);
  v1 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  v34 = *(_QWORD *)(v0 + 368);
  v35 = *(_QWORD *)(v0 + 304);
  v32 = *(_QWORD *)(v0 + 312);
  v33 = *(_QWORD *)(v0 + 296);
  v36 = *(_QWORD *)(v0 + 288);
  v37 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 272);
  v30 = *(_QWORD *)(v0 + 256);
  v31 = *(_QWORD *)(v0 + 248);
  v38 = *(_QWORD *)(v0 + 280);
  v39 = *(_QWORD *)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 344));
  v5 = sub_100047110(&qword_100820A50);
  inited = swift_initStackObject(v5, v0 + 16);
  v7 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100624D00;
  *(_QWORD *)(inited + 32) = 1701667182;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v8 = *(_QWORD *)(v4 + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_title);
  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_title + 8);
  if (v9)
    v10 = v8;
  else
    v10 = 0;
  v11 = 0xE000000000000000;
  if (v9)
    v11 = v9;
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = v11;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x657079546469;
  *(_QWORD *)(inited + 88) = 0xE600000000000000;
  *(_QWORD *)(inited + 96) = 0x64695F737469;
  *(_QWORD *)(inited + 104) = 0xE600000000000000;
  *(_QWORD *)(inited + 120) = &type metadata for String;
  strcpy((char *)(inited + 128), "impressionType");
  *(_BYTE *)(inited + 143) = -18;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for MetricClickElement.lockup(_:), v3);
  v12 = swift_bridgeObjectRetain(v9);
  v13 = MetricClickElement.rawValue.getter(v12);
  v15 = v14;
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7[18] = v13;
  v7[19] = v15;
  v7[21] = &type metadata for String;
  v7[22] = 0x6973736572706D69;
  v7[23] = 0xEF7865646E496E6FLL;
  v17 = IndexPath.row.getter(v16);
  v7[27] = &type metadata for Int;
  v7[24] = v17;
  v18 = sub_100435AC8((uint64_t)v7);
  v19 = IndexPath.row.getter(v18);
  v20 = swift_bridgeObjectRetain(v30);
  ImpressionMetrics.ID.init(parent:element:index:)(v31, v30, v34, v37, v19, v20);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v35, v32, v36);
  ScalarDictionary.init()(v21);
  v22 = sub_100030A4C((uint64_t)_swiftEmptyArrayStorage);
  v23 = sub_100030A4C((uint64_t)_swiftEmptyArrayStorage);
  ImpressionMetrics.init(id:fields:custom:commonFields:clickLocationFields:)(v35, v18, v38, v22, v23);
  v24 = swift_release(v40);
  (*(void (**)(uint64_t, uint64_t, __n128))(v33 + 8))(v32, v36, v24);
  v25 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v39, 0, 1, v25);
  v26 = *(_QWORD *)(v0 + 304);
  v27 = *(_QWORD *)(v0 + 312);
  v28 = *(_QWORD *)(v0 + 280);
  swift_task_dealloc(*(_QWORD *)(v0 + 336));
  swift_task_dealloc(v27);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100375CBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 280);
  swift_release(*(_QWORD *)(v0 + 344));
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

char *sub_100375D34(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  uint64_t v6;
  objc_class *v7;
  id v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  NSString v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  _QWORD v29[5];
  objc_super v30;

  v6 = OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_leadingDetailItemView;
  v7 = (objc_class *)type metadata accessor for MindfulnessSessionDetailItemView();
  v8 = objc_allocWithZone(v7);
  v9 = v3;
  v10 = objc_msgSend(v8, "init");
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v6] = v10;
  v11 = OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_trailingDetailItemView;
  v12 = objc_msgSend(objc_allocWithZone(v7), "init");
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v9[v11] = v12;
  v13 = OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_bottomDetailItemView;
  v14 = objc_msgSend(objc_allocWithZone(v7), "init");
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v9[v13] = v14;

  if (a3)
  {
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v16, v17, v18, v19, v20, v21, v22);
  }
  else
  {
    v15 = 0;
  }
  v30.receiver = v9;
  v30.super_class = (Class)type metadata accessor for MindfulnessSessionDetailSideBySideItemsCell();
  v23 = objc_msgSendSuper2(&v30, "initWithStyle:reuseIdentifier:", a1, v15);

  v24 = (char *)v23;
  v25 = objc_msgSend(v24, "contentView");
  objc_msgSend(v25, "addSubview:", *(_QWORD *)&v24[OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_leadingDetailItemView]);

  v26 = objc_msgSend(v24, "contentView");
  objc_msgSend(v26, "addSubview:", *(_QWORD *)&v24[OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_trailingDetailItemView]);

  v29[3] = &type metadata for Health;
  v29[4] = sub_1002C4448();
  LOBYTE(v26) = isFeatureEnabled(_:)(v29);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v29);
  if ((v26 & 1) != 0)
  {
    v27 = objc_msgSend(v24, "contentView");
    objc_msgSend(v27, "addSubview:", *(_QWORD *)&v24[OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_bottomDetailItemView]);

    sub_100376418();
  }
  else
  {
    sub_100375F94();
  }

  return v24;
}

void sub_100375F94()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  Class isa;

  v1 = v0;
  v45 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = sub_100047110((uint64_t *)&unk_100828340);
  v3 = swift_allocObject(v2, 96, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100624C80;
  v4 = OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_leadingDetailItemView;
  v5 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_leadingDetailItemView], "topAnchor");
  v6 = objc_msgSend(v1, "contentView");
  v7 = objc_msgSend(v6, "topAnchor");

  v8 = objc_msgSend(v5, "constraintEqualToAnchor:", v7);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = objc_msgSend(*(id *)&v1[v4], "leadingAnchor");
  v10 = objc_msgSend(v1, "contentView");
  v11 = objc_msgSend(v10, "leadingAnchor");

  v12 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v11, 16.0);
  *(_QWORD *)(v3 + 40) = v12;
  v13 = objc_msgSend(*(id *)&v1[v4], "trailingAnchor");
  v14 = objc_msgSend(v1, "contentView");
  v15 = objc_msgSend(v14, "leadingAnchor");

  v16 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v15, sub_10005F150());
  *(_QWORD *)(v3 + 48) = v16;
  v17 = objc_msgSend(*(id *)&v1[v4], "bottomAnchor");
  v18 = objc_msgSend(v1, "contentView");
  v19 = objc_msgSend(v18, "bottomAnchor");

  v20 = objc_msgSend(v17, "constraintLessThanOrEqualToAnchor:", v19);
  *(_QWORD *)(v3 + 56) = v20;
  v21 = OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_trailingDetailItemView;
  v22 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_trailingDetailItemView], "topAnchor");
  v23 = objc_msgSend(*(id *)&v1[v4], "topAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v3 + 64) = v24;
  v25 = objc_msgSend(*(id *)&v1[v21], "leadingAnchor");
  v26 = objc_msgSend(v1, "contentView");
  v27 = objc_msgSend(v26, "leadingAnchor");

  v28 = objc_msgSend(v25, "constraintEqualToAnchor:constant:", v27, sub_10005F150());
  *(_QWORD *)(v3 + 72) = v28;
  v29 = objc_msgSend(*(id *)&v1[v21], "trailingAnchor");
  v30 = objc_msgSend(v1, "contentView");
  v31 = objc_msgSend(v30, "trailingAnchor");

  v32 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v31, -16.0);
  *(_QWORD *)(v3 + 80) = v32;
  v33 = objc_msgSend(*(id *)&v1[v21], "bottomAnchor");
  v34 = objc_msgSend(v1, "contentView");
  v35 = objc_msgSend(v34, "bottomAnchor");

  v36 = objc_msgSend(v33, "constraintLessThanOrEqualToAnchor:", v35);
  *(_QWORD *)(v3 + 88) = v36;
  specialized Array._endMutation()(v37);
  sub_100039898();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v3, v38, v39, v40, v41, v42, v43, v44);
  objc_msgSend(v45, "activateConstraints:", isa);

}

void sub_100376418()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  Class isa;

  v1 = v0;
  v57 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = sub_100047110((uint64_t *)&unk_100828340);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1006375B0;
  v4 = OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_leadingDetailItemView;
  v5 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_leadingDetailItemView], "topAnchor");
  v6 = objc_msgSend(v1, "contentView");
  v7 = objc_msgSend(v6, "topAnchor");

  v8 = objc_msgSend(v5, "constraintEqualToAnchor:", v7);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = objc_msgSend(*(id *)&v1[v4], "leadingAnchor");
  v10 = objc_msgSend(v1, "contentView");
  v11 = objc_msgSend(v10, "leadingAnchor");

  v12 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v11, 16.0);
  *(_QWORD *)(v3 + 40) = v12;
  v13 = objc_msgSend(*(id *)&v1[v4], "trailingAnchor");
  v14 = objc_msgSend(v1, "contentView");
  v15 = objc_msgSend(v14, "leadingAnchor");

  v16 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v15, sub_10005F150());
  *(_QWORD *)(v3 + 48) = v16;
  v17 = OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_trailingDetailItemView;
  v18 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_trailingDetailItemView], "topAnchor");
  v19 = objc_msgSend(*(id *)&v1[v4], "topAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v3 + 56) = v20;
  v21 = objc_msgSend(*(id *)&v1[v17], "leadingAnchor");
  v22 = objc_msgSend(v1, "contentView");
  v23 = objc_msgSend(v22, "leadingAnchor");

  v24 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v23, sub_10005F150());
  *(_QWORD *)(v3 + 64) = v24;
  v25 = objc_msgSend(*(id *)&v1[v17], "trailingAnchor");
  v26 = objc_msgSend(v1, "contentView");
  v27 = objc_msgSend(v26, "trailingAnchor");

  v28 = objc_msgSend(v25, "constraintEqualToAnchor:constant:", v27, -16.0);
  *(_QWORD *)(v3 + 72) = v28;
  v29 = objc_msgSend(*(id *)&v1[v17], "bottomAnchor");
  v30 = objc_msgSend(v1, "contentView");
  v31 = objc_msgSend(v30, "bottomAnchor");

  v32 = objc_msgSend(v29, "constraintLessThanOrEqualToAnchor:", v31);
  *(_QWORD *)(v3 + 80) = v32;
  v33 = OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_bottomDetailItemView;
  v34 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_bottomDetailItemView], "topAnchor");
  v35 = objc_msgSend(*(id *)&v1[v4], "bottomAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v35, 16.0);

  *(_QWORD *)(v3 + 88) = v36;
  v37 = objc_msgSend(*(id *)&v1[v33], "leadingAnchor");
  v38 = objc_msgSend(v1, "contentView");
  v39 = objc_msgSend(v38, "leadingAnchor");

  v40 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v39, 16.0);
  *(_QWORD *)(v3 + 96) = v40;
  v41 = objc_msgSend(*(id *)&v1[v33], "trailingAnchor");
  v42 = objc_msgSend(v1, "contentView");
  v43 = objc_msgSend(v42, "trailingAnchor");

  v44 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v43, -16.0);
  *(_QWORD *)(v3 + 104) = v44;
  v45 = objc_msgSend(*(id *)&v1[v33], "bottomAnchor");
  v46 = objc_msgSend(v1, "contentView");
  v47 = objc_msgSend(v46, "bottomAnchor");

  v48 = objc_msgSend(v45, "constraintLessThanOrEqualToAnchor:", v47);
  *(_QWORD *)(v3 + 112) = v48;
  specialized Array._endMutation()(v49);
  sub_100039898();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v3, v50, v51, v52, v53, v54, v55, v56);
  objc_msgSend(v57, "activateConstraints:", isa);

}

void sub_100376A04(uint64_t a1, char *a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  unsigned int v8;
  id v9;
  id v10;
  uint64_t v11;
  char *v12;
  char v13;
  int v14;
  id v15;
  id v16;
  id v17;

  v4 = v3;
  v5 = a3;
  v8 = a3 >> 8;
  if ((a3 & 0x800000) != 0)
  {
    v14 = HIWORD(a3) & 0x7F;
    v15 = objc_retain(*(id *)(v4
                            + OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_leadingDetailItemView));
    sub_1005E6DA0(a1, a2, v5);

    v16 = objc_retain(*(id *)(v4
                            + OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_trailingDetailItemView));
    sub_1005E6DA0(a1, a2, v8);

    v10 = objc_retain(*(id *)(v4
                            + OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_bottomDetailItemView));
    v11 = a1;
    v12 = a2;
    v13 = v14;
  }
  else
  {
    v9 = objc_retain(*(id *)(v4
                           + OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_leadingDetailItemView));
    sub_1005E6DA0(a1, a2, v5);

    v10 = objc_retain(*(id *)(v4
                            + OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_trailingDetailItemView));
    v11 = a1;
    v12 = a2;
    v13 = v8;
  }
  v17 = v10;
  sub_1005E6DA0(v11, v12, v13);

}

void sub_100376B2C()
{
  char *v0;
  char *v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  char *v6;
  char *v7;
  void *v8;
  char *v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for MindfulnessSessionDetailSideBySideItemsCell();
  objc_msgSendSuper2(&v10, "prepareForReuse");
  v1 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_leadingDetailItemView];
  v2 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel];
  v3 = v1;
  objc_msgSend(v2, "setText:", 0);
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel], "setAttributedText:", 0);
  ++*(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID];

  v4 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_trailingDetailItemView];
  v5 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel];
  v6 = v4;
  objc_msgSend(v5, "setText:", 0);
  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel], "setAttributedText:", 0);
  ++*(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID];

  v7 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_bottomDetailItemView];
  v8 = *(void **)&v7[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel];
  v9 = v7;
  objc_msgSend(v8, "setText:", 0);
  objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel], "setAttributedText:", 0);
  ++*(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID];

}

id sub_100376CE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MindfulnessSessionDetailSideBySideItemsCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MindfulnessSessionDetailSideBySideItemsCell()
{
  return objc_opt_self(_TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell);
}

void sub_100376D7C()
{
  char *v0;
  uint64_t v1;
  objc_class *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;

  v1 = OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_leadingDetailItemView;
  v2 = (objc_class *)type metadata accessor for MindfulnessSessionDetailItemView();
  v3 = objc_msgSend(objc_allocWithZone(v2), "init");
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v1] = v3;
  v4 = OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_trailingDetailItemView;
  v5 = objc_msgSend(objc_allocWithZone(v2), "init");
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v4] = v5;
  v6 = OBJC_IVAR____TtC10FitnessApp43MindfulnessSessionDetailSideBySideItemsCell_bottomDetailItemView;
  v7 = objc_msgSend(objc_allocWithZone(v2), "init");
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v6] = v7;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/MindfulnessSessionDetailSideBySideItemsCell.swift", 60, 2, 113, 0);
  __break(1u);
}

uint64_t sub_100376F64()
{
  uint64_t v0;
  uint64_t v1;
  CHWorkoutDetailHeartRateTableViewCell **v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  const char *v8;
  unint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  CHWorkoutDetailHeartRateTableViewCell **v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  _BYTE v29[24];
  _BYTE v30[24];
  _QWORD v31[4];

  v1 = v0;
  v2 = (CHWorkoutDetailHeartRateTableViewCell **)(v0 + OBJC_IVAR___CHWorkoutDetailAnalyticsEventBuilder_presentedDetails);
  swift_beginAccess(v2, v30, 0, 0);
  v3 = *v2;
  if (*(_QWORD *)(*v2)->cellPadding)
  {
    v31[0] = *v2;
    swift_bridgeObjectRetain(v3);
    v4 = sub_100047110(&qword_100830000);
    v5 = sub_100377A60();
    v6 = sub_100038CA0();
    v7 = Sequence<>.joined(separator:)(44, 0xE100000000000000, v4, v5, v6);
    v9 = (unint64_t)v8;
    swift_bridgeObjectRelease(v3, v8, v10, v11, v12, v13, v14, v15);
  }
  else
  {
    v9 = 0xE400000000000000;
    v7 = 1701736302;
  }
  v31[3] = &type metadata for String;
  v31[0] = v7;
  v31[1] = v9;
  v16 = (CHWorkoutDetailHeartRateTableViewCell **)(v1 + OBJC_IVAR___CHWorkoutDetailAnalyticsEventBuilder_events);
  swift_beginAccess(v1 + OBJC_IVAR___CHWorkoutDetailAnalyticsEventBuilder_events, v29, 33, 0);
  sub_1004C61D8((uint64_t)v31, 0x6465646E61707865, (CHWorkoutDetailHeartRateTableViewCell *)0xEF736C6961746544);
  swift_endAccess(v29);
  v17 = *v16;
  swift_bridgeObjectRetain(*v16);
  sub_1003770A8(v18);
  v20 = v19;
  swift_bridgeObjectRelease(v17, v21, v22, v23, v24, v25, v26, v27);
  return v20;
}

void sub_1003770A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  int64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  uint64_t v24;
  unint64_t v25;
  const char *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  unint64_t v34;
  const char *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  _BYTE v51[32];
  _QWORD v52[2];
  uint64_t v53;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100047110(&qword_10082DC98);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v48 = v1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v1 + 64);
  v7 = &v53;
  v47 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain(v1);
  v8 = 0;
  v9 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v6)
    {
      v16 = (v6 - 1) & v6;
      v17 = __clz(__rbit64(v6)) | (v8 << 6);
      v18 = v8;
    }
    else
    {
      v19 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_36;
      if (v19 >= v47)
      {
LABEL_33:
        sub_100133140(v1);
        return;
      }
      v20 = *(_QWORD *)(v48 + 8 * v19);
      v18 = v8 + 1;
      if (!v20)
      {
        v18 = v8 + 2;
        if (v8 + 2 >= v47)
          goto LABEL_33;
        v20 = *(_QWORD *)(v48 + 8 * v18);
        if (!v20)
        {
          v18 = v8 + 3;
          if (v8 + 3 >= v47)
            goto LABEL_33;
          v20 = *(_QWORD *)(v48 + 8 * v18);
          if (!v20)
          {
            v18 = v8 + 4;
            if (v8 + 4 >= v47)
              goto LABEL_33;
            v20 = *(_QWORD *)(v48 + 8 * v18);
            if (!v20)
            {
              v21 = v8 + 5;
              if (v8 + 5 >= v47)
                goto LABEL_33;
              v20 = *(_QWORD *)(v48 + 8 * v21);
              if (!v20)
              {
                while (1)
                {
                  v18 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_37;
                  if (v18 >= v47)
                    goto LABEL_33;
                  v20 = *(_QWORD *)(v48 + 8 * v18);
                  ++v21;
                  if (v20)
                    goto LABEL_26;
                }
              }
              v18 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      v16 = (v20 - 1) & v20;
      v17 = __clz(__rbit64(v20)) + (v18 << 6);
    }
    v22 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v17);
    v24 = *v22;
    v23 = (CHWorkoutDetailHeartRateTableViewCell *)v22[1];
    sub_10003E9BC(*(_QWORD *)(v1 + 56) + 32 * v17, (uint64_t)v7);
    v52[0] = v24;
    v52[1] = v23;
    sub_10003E9BC((uint64_t)v7, (uint64_t)v51);
    swift_bridgeObjectRetain_n(v23, 2);
    sub_100377AAC((uint64_t)v52);
    v25 = sub_100139CE8();
    if (!swift_dynamicCast(&v50, v51, v9, v25, 6))
    {
      v50 = 0;
      swift_bridgeObjectRelease(v23, v26, v27, v28, v29, v30, v31, v32);

      sub_100133140(v1);
      swift_release(v3);
      return;
    }
    v49 = v16;
    v33 = v50;
    v34 = sub_100438F74(v24, (uint64_t)v23);
    v42 = v34;
    if ((v35 & 1) != 0)
    {
      v10 = v7;
      v11 = v1;
      v12 = v9;
      v13 = v3[6] + 16 * v34;
      swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v13 + 8), v35, v36, v37, v38, v39, v40, v41);
      *(_QWORD *)v13 = v24;
      *(_QWORD *)(v13 + 8) = v23;
      v14 = v3[7];
      v15 = 8 * v42;

      *(_QWORD *)(v14 + v15) = v33;
      v9 = v12;
      v1 = v11;
      v7 = v10;
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v34;
    v43 = (uint64_t *)(v3[6] + 16 * v34);
    *v43 = v24;
    v43[1] = (uint64_t)v23;
    *(_QWORD *)(v3[7] + 8 * v34) = v33;
    v44 = v3[2];
    v45 = __OFADD__(v44, 1);
    v46 = v44 + 1;
    if (v45)
      goto LABEL_35;
    v3[2] = v46;
LABEL_8:
    v8 = v18;
    v6 = v49;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

id sub_10037742C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailAnalyticsEventBuilder();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailAnalyticsEventBuilder()
{
  return objc_opt_self(CHWorkoutDetailAnalyticsEventBuilder);
}

void sub_1003775A8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _BYTE v16[24];
  uint64_t v17[2];

  swift_beginAccess(&a1[OBJC_IVAR___CHWorkoutDetailAnalyticsEventBuilder_presentedDetails], v16, 33, 0);
  v7 = a1;
  sub_100142388(v17, a3, a4);
  v8 = (CHWorkoutDetailHeartRateTableViewCell *)v17[1];
  swift_endAccess(v16);

  swift_bridgeObjectRelease(v8, v9, v10, v11, v12, v13, v14, v15);
}

id sub_100377630(uint64_t a1, void *a2)
{
  char *v2;
  char *v4;
  char *v5;
  unint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  unint64_t v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id result;
  objc_super v30;
  _BYTE v31[24];
  uint64_t v32;
  unint64_t v33;
  void *v34;

  v4 = &v2[OBJC_IVAR___CHWorkoutDetailAnalyticsEventBuilder_events];
  *(_QWORD *)&v2[OBJC_IVAR___CHWorkoutDetailAnalyticsEventBuilder_events] = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v2[OBJC_IVAR___CHWorkoutDetailAnalyticsEventBuilder_presentedDetails] = &_swiftEmptySetSingleton;
  v5 = v2;
  v34 = &type metadata for String;
  v32 = sub_10051E32C();
  v33 = v6;
  swift_beginAccess(v4, v31, 33, 0);
  sub_1004C61D8((uint64_t)&v32, 0xD000000000000011, (CHWorkoutDetailHeartRateTableViewCell *)0x80000001006945E0);
  swift_endAccess(v31);
  if (!a2)
  {
    v16 = sub_10051E44C();
    v34 = &type metadata for String;
    v32 = v16;
    v33 = v17;
    swift_beginAccess(v4, v31, 33, 0);
    sub_1004C61D8((uint64_t)&v32, 0x7974697669746361, (CHWorkoutDetailHeartRateTableViewCell *)0xEC00000065707954);
    swift_endAccess(v31);
    v18 = sub_10051E56C();
    v34 = &type metadata for String;
    v32 = v18;
    v33 = v19;
    swift_beginAccess(v4, v31, 33, 0);
    sub_1004C61D8((uint64_t)&v32, 0x6E6F697461636F6CLL, (CHWorkoutDetailHeartRateTableViewCell *)0xEC00000065707954);
    swift_endAccess(v31);
    v20 = sub_10051E690();
    v34 = &type metadata for String;
    v32 = (uint64_t)v20;
    v33 = v21;
    swift_beginAccess(v4, v31, 33, 0);
    sub_1004C61D8((uint64_t)&v32, 0xD000000000000014, (CHWorkoutDetailHeartRateTableViewCell *)0x800000010069B560);
    swift_endAccess(v31);
LABEL_11:

    v30.receiver = v5;
    v30.super_class = (Class)type metadata accessor for WorkoutDetailAnalyticsEventBuilder();
    return objc_msgSendSuper2(&v30, "init");
  }
  v7 = a2;
  v8 = objc_msgSend(v7, "workoutConfiguration");
  v9 = objc_msgSend(v8, "activityType");

  v10 = HKWorkoutActivityType.shortenedAnalyticsKey.getter(v9);
  v34 = &type metadata for String;
  v32 = v10;
  v33 = v11;
  swift_beginAccess(v4, v31, 33, 0);
  sub_1004C61D8((uint64_t)&v32, 0x7974697669746361, (CHWorkoutDetailHeartRateTableViewCell *)0xEC00000065707954);
  swift_endAccess(v31);
  v12 = objc_msgSend(v7, "workoutConfiguration");
  v13 = objc_msgSend(v12, "locationType");

  if (v13 == (id)1)
  {
    v14 = 0xE700000000000000;
    v15 = 0x6E776F6E6B6E75;
  }
  else if (v13 == (id)2)
  {
    v14 = 0xE600000000000000;
    v15 = 0x726F6F646E69;
  }
  else
  {
    if (v13 != (id)3)
      goto LABEL_13;
    v14 = 0xE700000000000000;
    v15 = 0x726F6F6474756FLL;
  }
  v34 = &type metadata for String;
  v32 = v15;
  v33 = v14;
  swift_beginAccess(v4, v31, 33, 0);
  sub_1004C61D8((uint64_t)&v32, 0x6E6F697461636F6CLL, (CHWorkoutDetailHeartRateTableViewCell *)0xEC00000065707954);
  swift_endAccess(v31);
  v22 = objc_msgSend(v7, "workoutConfiguration");
  v23 = objc_msgSend(v22, "swimmingLocationType");

  v24 = (id)_HKWorkoutSwimmingLocationTypeName(v23);
  if (v24)
  {
    v25 = v24;
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v28 = v27;

    v34 = &type metadata for String;
    v32 = v26;
    v33 = v28;
    swift_beginAccess(v4, v31, 33, 0);
    sub_1004C61D8((uint64_t)&v32, 0xD000000000000014, (CHWorkoutDetailHeartRateTableViewCell *)0x800000010069B560);
    swift_endAccess(v31);

    goto LABEL_11;
  }
  __break(1u);
LABEL_13:
  result = (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000040, 0x800000010069B200, "FitnessApp/HKWorkoutActivity+Analytics.swift", 44, 2, 28, 0);
  __break(1u);
  return result;
}

unint64_t sub_100377A60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100830008;
  if (!qword_100830008)
  {
    v1 = sub_100007050(&qword_100830000);
    result = swift_getWitnessTable(&protocol conformance descriptor for Set<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100830008);
  }
  return result;
}

uint64_t sub_100377AAC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_100830010);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for CelebrationSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100377B38 + 4 * byte_100637645[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100377B6C + 4 * asc_100637640[v4]))();
}

uint64_t sub_100377B6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100377B74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100377B7CLL);
  return result;
}

uint64_t sub_100377B88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100377B90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100377B94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100377B9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CelebrationSource()
{
  return &type metadata for CelebrationSource;
}

unint64_t sub_100377BBC()
{
  unint64_t result;

  result = qword_100830018;
  if (!qword_100830018)
  {
    result = swift_getWitnessTable(&unk_1006376B4, &type metadata for CelebrationSource);
    atomic_store(result, (unint64_t *)&qword_100830018);
  }
  return result;
}

unint64_t sub_100377C04()
{
  unint64_t result;

  result = qword_100830020;
  if (!qword_100830020)
  {
    result = swift_getWitnessTable(&unk_100637764, &type metadata for OpenUnifiedWorkoutIntent);
    atomic_store(result, (unint64_t *)&qword_100830020);
  }
  return result;
}

double sub_100377C4C@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  double result;
  __int128 v10;
  _OWORD v11[2];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  IntentParameter.wrappedValue.getter(v11);
  v2 = v23;
  a1[12] = v22;
  a1[13] = v2;
  v3 = v25;
  a1[14] = v24;
  a1[15] = v3;
  v4 = v19;
  a1[8] = v18;
  a1[9] = v4;
  v5 = v21;
  a1[10] = v20;
  a1[11] = v5;
  v6 = v15;
  a1[4] = v14;
  a1[5] = v6;
  v7 = v17;
  a1[6] = v16;
  a1[7] = v7;
  v8 = v11[1];
  *a1 = v11[0];
  a1[1] = v8;
  result = *(double *)&v12;
  v10 = v13;
  a1[2] = v12;
  a1[3] = v10;
  return result;
}

uint64_t sub_100377CC4()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

_QWORD *sub_100377CF4@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_100377D14()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_100377D44()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

double sub_100377D74@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  double result;
  __int128 v10;
  _OWORD v11[2];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  IntentParameter.wrappedValue.getter(v11);
  v2 = v23;
  a1[12] = v22;
  a1[13] = v2;
  v3 = v25;
  a1[14] = v24;
  a1[15] = v3;
  v4 = v19;
  a1[8] = v18;
  a1[9] = v4;
  v5 = v21;
  a1[10] = v20;
  a1[11] = v5;
  v6 = v15;
  a1[4] = v14;
  a1[5] = v6;
  v7 = v17;
  a1[6] = v16;
  a1[7] = v7;
  v8 = v11[1];
  *a1 = v11[0];
  a1[1] = v8;
  result = *(double *)&v12;
  v10 = v13;
  a1[2] = v12;
  a1[3] = v10;
  return result;
}

_QWORD *sub_100377DEC@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_100377E0C(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A618, 0x726F57206E65704FLL, 0xEC00000074756F6BLL);
}

uint64_t sub_100377E34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  v1 = type metadata accessor for StringComparisonOperator(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100830490);
  v23 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - v9;
  KeyPath = swift_getKeyPath(&unk_1006389E8);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for StringComparisonOperator.contains(_:), v1);
  v11 = sub_100047110(&qword_1008304C8);
  v12 = sub_100047110(&qword_100830498);
  v13 = sub_1002EFAEC();
  v14 = sub_100028384(&qword_1008304D0, &qword_1008304C8, (uint64_t)&protocol conformance descriptor for ParameterSummaryWhenCondition<A, B, C>);
  v15 = sub_100028384(&qword_1008304A8, &qword_100830498, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  v16 = sub_100028384(&qword_100830368, &qword_100830280, (uint64_t)&protocol conformance descriptor for IntentParameter<A>);
  v17 = sub_100112214();
  ParameterSummaryWhenCondition.init<A>(_:identifier:_:_:otherwise:)(KeyPath, v4, 77, 0xE100000000000000, sub_100378084, 0, sub_100378604, 0, v11, v12, v13, v14, v15, v16, v17);
  v18 = sub_100028384(&qword_1008304A0, &qword_100830490, (uint64_t)&protocol conformance descriptor for ParameterSummaryWhenCondition<A, B, C>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v7, &type metadata for OpenUnifiedWorkoutIntent, v5, v18);
  v19 = *(void (**)(char *, uint64_t))(v23 + 8);
  v19(v7, v5);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v10, &type metadata for OpenUnifiedWorkoutIntent, v5, v18);
  return ((uint64_t (*)(char *, uint64_t))v19)(v10, v5);
}

uint64_t sub_100378084@<X0>(uint64_t a1@<X8>)
{
  uint64_t HasValueComparisonOperator;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  _QWORD v20[2];

  v20[1] = a1;
  HasValueComparisonOperator = type metadata accessor for HasValueComparisonOperator(0);
  v2 = *(_QWORD *)(HasValueComparisonOperator - 8);
  __chkstk_darwin(HasValueComparisonOperator);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_1008304C8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v20 - v10;
  KeyPath = swift_getKeyPath(&unk_100638A38);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for HasValueComparisonOperator.hasAnyValue(_:), HasValueComparisonOperator);
  v13 = sub_100047110(&qword_100830498);
  v14 = sub_1002EFAEC();
  v15 = sub_100028384(&qword_1008304A8, &qword_100830498, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  v16 = sub_100028384(&qword_1008304D8, &qword_100830290, (uint64_t)&protocol conformance descriptor for IntentParameter<A>);
  ParameterSummaryWhenCondition.init<A>(_:_:_:otherwise:)(KeyPath, v4, sub_1003782AC, 0, sub_1003783B4, 0, v13, v13, v14, v15, v15, v16);
  v17 = sub_100028384(&qword_1008304D0, &qword_1008304C8, (uint64_t)&protocol conformance descriptor for ParameterSummaryWhenCondition<A, B, C>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v8, &type metadata for OpenUnifiedWorkoutIntent, v5, v17);
  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v8, v5);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v11, &type metadata for OpenUnifiedWorkoutIntent, v5, v17);
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v5);
}

uint64_t sub_10037828C()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1003782AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1003783C0((uint64_t)sub_1003782B8, a1);
}

uint64_t sub_1003782B8()
{
  uint64_t KeyPath;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  CHWorkoutDetailHeartRateTableViewCell *v17;

  KeyPath = swift_getKeyPath(&unk_100638A38);
  v1 = sub_1002EFAEC();
  v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(KeyPath, v1);
  swift_release(KeyPath);
  v3 = swift_getKeyPath(&unk_100638A10);
  swift_retain(v2);
  v4 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(v3, v1);
  swift_release(v3);
  v5 = sub_100047110((uint64_t *)&unk_100828340);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100629280;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v4;
  v17 = (CHWorkoutDetailHeartRateTableViewCell *)v6;
  specialized Array._endMutation()(v6);
  v7 = swift_retain(v4);
  v8 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)(v17, &type metadata for OpenUnifiedWorkoutIntent, v1, v7);
  swift_bridgeObjectRelease(v17, v9, v10, v11, v12, v13, v14, v15);
  swift_release(v2);
  swift_release(v4);
  return v8;
}

uint64_t sub_1003783B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1003783C0((uint64_t)sub_1003785F8, a1);
}

uint64_t sub_1003783C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  Swift::String v16;
  uint64_t KeyPath;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  _QWORD v23[2];

  v23[0] = a1;
  v23[1] = a2;
  v2 = sub_100047110(&qword_1008304B0);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_1008304B8);
  __chkstk_darwin(v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100830498);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v23 - v13;
  v15 = sub_1002EFAEC();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for OpenUnifiedWorkoutIntent, v15);
  v16._countAndFlagsBits = 0x206E65704FLL;
  v16._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v16);
  KeyPath = swift_getKeyPath(&unk_1006389E8);
  v18 = sub_100047110(&qword_1008304C0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v5, v18);
  swift_release(KeyPath);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v19);
  ParameterSummaryString.init(stringInterpolation:)(v7, &type metadata for OpenUnifiedWorkoutIntent, v15);
  IntentParameterSummary.init(_:table:_:)(v4, 0, 0, v23[0], 0, &type metadata for OpenUnifiedWorkoutIntent, v15);
  v20 = sub_100028384(&qword_1008304A8, &qword_100830498, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v11, &type metadata for OpenUnifiedWorkoutIntent, v8, v20);
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v11, v8);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v14, &type metadata for OpenUnifiedWorkoutIntent, v8, v20);
  return ((uint64_t (*)(char *, uint64_t))v21)(v14, v8);
}

uint64_t sub_1003785F8()
{
  return sub_10037861C((uint64_t)&unk_100638A38);
}

uint64_t sub_100378604@<X0>(uint64_t a1@<X8>)
{
  return sub_1003783C0((uint64_t)sub_100378610, a1);
}

uint64_t sub_100378610()
{
  return sub_10037861C((uint64_t)&unk_100638A10);
}

uint64_t sub_10037861C(uint64_t a1)
{
  uint64_t KeyPath;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  CHWorkoutDetailHeartRateTableViewCell *v16;

  KeyPath = swift_getKeyPath(a1);
  v2 = sub_1002EFAEC();
  v3 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(KeyPath, v2);
  swift_release(KeyPath);
  v4 = sub_100047110((uint64_t *)&unk_100828340);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100623630;
  *(_QWORD *)(v5 + 32) = v3;
  v16 = (CHWorkoutDetailHeartRateTableViewCell *)v5;
  specialized Array._endMutation()(v5);
  v6 = swift_retain(v3);
  v7 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)(v16, &type metadata for OpenUnifiedWorkoutIntent, v2, v6);
  swift_bridgeObjectRelease(v16, v8, v9, v10, v11, v12, v13, v14);
  swift_release(v3);
  return v7;
}

void sub_1003786D8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v20;
  uint64_t v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  Swift::String v24;
  id v25;
  Swift::String v26;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  unsigned int v36;
  unsigned int v37;
  char v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  Swift::String v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  SEL v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  Swift::String v64;
  CHWorkoutDetailHeartRateTableViewCell *v65;
  SEL v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  _QWORD v73[4];
  char v74;
  unint64_t v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  uint64_t v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  id v79;

  v73[1] = a3;
  v73[2] = a1;
  v73[3] = a4;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WorkoutActivityEntity(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100829C48);
  __chkstk_darwin(v13);
  v15 = (char *)v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)v73 - v17;
  v73[0] = a2;
  IntentParameter.wrappedValue.getter((_QWORD *)((char *)v73 - v17));
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v19(v18, 1, v9))
  {
    sub_10001BE90((uint64_t)v18, &qword_100829C48);
    IntentParameter.wrappedValue.getter(&v77);
    v21 = v77;
    v20 = v78;
    swift_bridgeObjectRetain(v78);
    sub_100112258(&v77);
  }
  else
  {
    sub_10004F8C8((uint64_t)v18, (uint64_t)v12, type metadata accessor for WorkoutActivityEntity);
    sub_10001BE90((uint64_t)v18, &qword_100829C48);
    v22 = sub_1000083D8((unint64_t *)&qword_100821498, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v77 = dispatch thunk of CustomStringConvertible.description.getter(v5, v22);
    v78 = v23;
    v24._countAndFlagsBits = 47;
    v24._object = (void *)0xE100000000000000;
    String.append(_:)(v24);
    v25 = objc_msgSend(*(id *)&v12[*(int *)(v9 + 20)], "UUID");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v25);

    v26._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v5, v22);
    object = (CHWorkoutDetailHeartRateTableViewCell *)v26._object;
    String.append(_:)(v26);
    swift_bridgeObjectRelease(object, v28, v29, v30, v31, v32, v33, v34);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v21 = v77;
    v20 = v78;
    sub_100011F54((uint64_t)v12, type metadata accessor for WorkoutActivityEntity);
  }
  IntentParameter.wrappedValue.getter(&v77);
  v35 = v79;
  sub_100112258(&v77);
  v36 = objc_msgSend(v35, "isMultiSportWorkout");

  if (v36
    && (IntentParameter.wrappedValue.getter(v15),
        v37 = v19(v15, 1, v9),
        sub_10001BE90((uint64_t)v15, &qword_100829C48),
        v37 == 1)
    || (IntentParameter.wrappedValue.getter(&v75), v38 = v75, v75 == 10))
  {
    v75 = 0;
    v76 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease(v76, v39, v40, v41, v42, v43, v44, v45);
    v75 = 0xD00000000000001ELL;
    v76 = (CHWorkoutDetailHeartRateTableViewCell *)0x800000010068A770;
    v46._countAndFlagsBits = v21;
    v46._object = v20;
    String.append(_:)(v46);
    swift_bridgeObjectRelease(v20, v47, v48, v49, v50, v51, v52, v53);
  }
  else
  {
    v75 = 0;
    v76 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
    _StringGuts.grow(_:)(27);
    v54._countAndFlagsBits = 0x617373656E746966;
    v54._object = (void *)0xEA00000000007070;
    String.append(_:)(v54);
    v55._countAndFlagsBits = 0xD000000000000014;
    v55._object = (void *)0x800000010069B8F0;
    String.append(_:)(v55);
    v56._countAndFlagsBits = v21;
    v56._object = v20;
    String.append(_:)(v56);
    swift_bridgeObjectRelease(v20, v57, v58, v59, v60, v61, v62, v63);
    v64._countAndFlagsBits = 47;
    v64._object = (void *)0xE100000000000000;
    String.append(_:)(v64);
    v74 = v38;
    _print_unlocked<A, B>(_:_:)(&v74, &v75, &type metadata for WorkoutPage, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  }
  v65 = v76;
  URL.init(string:)(v75, v76);
  swift_bridgeObjectRelease(v65, v66, v67, v68, v69, v70, v71, v72);
}

uint64_t sub_100378AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_100047110(&qword_10081E640);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v4[7] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[8] = v7;
  v4[9] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100378B50, 0, 0);
}

uint64_t sub_100378B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  sub_1003786D8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = sub_10001BE90(*(_QWORD *)(v0 + 48), &qword_10081E640);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 32))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
    if (qword_10081DDA8 != -1)
      swift_once(&qword_10081DDA8, sub_10044A45C);
    v6 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 56);
    sub_10044AD80(v5);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  v8 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 48);
  static IntentResult.result<>()(v4);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_100378C48(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v19[16];
  _OWORD v20[2];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v1 = a1[13];
  v2 = a1[11];
  v31 = a1[12];
  v32 = v1;
  v3 = a1[13];
  v4 = a1[15];
  v33 = a1[14];
  v34 = v4;
  v5 = a1[9];
  v6 = a1[7];
  v27 = a1[8];
  v28 = v5;
  v7 = a1[9];
  v8 = a1[11];
  v29 = a1[10];
  v30 = v8;
  v9 = a1[5];
  v10 = a1[3];
  v23 = a1[4];
  v24 = v9;
  v11 = a1[5];
  v12 = a1[7];
  v25 = a1[6];
  v26 = v12;
  v13 = a1[1];
  v20[0] = *a1;
  v20[1] = v13;
  v14 = a1[3];
  v16 = *a1;
  v15 = a1[1];
  v21 = a1[2];
  v22 = v14;
  v19[12] = v31;
  v19[13] = v3;
  v17 = a1[15];
  v19[14] = v33;
  v19[15] = v17;
  v19[8] = v27;
  v19[9] = v7;
  v19[10] = v29;
  v19[11] = v2;
  v19[4] = v23;
  v19[5] = v11;
  v19[6] = v25;
  v19[7] = v6;
  v19[0] = v16;
  v19[1] = v15;
  v19[2] = v21;
  v19[3] = v10;
  sub_100112010(v20);
  IntentParameter.wrappedValue.setter(v19);
  return sub_100112258(v20);
}

void (*sub_100378D08(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_100378D50;
}

unint64_t sub_100378D5C()
{
  unint64_t result;

  result = qword_100830028;
  if (!qword_100830028)
  {
    result = swift_getWitnessTable(&unk_10063781C, &type metadata for OpenUnifiedWorkoutIntent);
    atomic_store(result, (unint64_t *)&qword_100830028);
  }
  return result;
}

unint64_t sub_100378DA4()
{
  unint64_t result;

  result = qword_100830030;
  if (!qword_100830030)
  {
    result = swift_getWitnessTable(&unk_100637844, &type metadata for OpenUnifiedWorkoutIntent);
    atomic_store(result, (unint64_t *)&qword_100830030);
  }
  return result;
}

uint64_t sub_100378DE8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B5780, 1);
}

uint64_t sub_100378DF8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B5758, 1);
}

uint64_t sub_100378E08@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081DB38, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A618, (uint64_t)sub_100377E0C, a1);
}

uint64_t sub_100378E2C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100386384();
  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_100378E54(uint64_t a1, uint64_t a2)
{
  uint64_t HasValueComparisonOperator;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  HasValueComparisonOperator = type metadata accessor for HasValueComparisonOperator(0);
  v4 = *(_QWORD *)(HasValueComparisonOperator - 8);
  __chkstk_darwin(HasValueComparisonOperator);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1006389E8);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for HasValueComparisonOperator.hasAnyValue(_:), HasValueComparisonOperator);
  v8 = sub_100047110(&qword_100830490);
  v9 = sub_100047110(&qword_100830498);
  v10 = sub_100028384(&qword_1008304A0, &qword_100830490, (uint64_t)&protocol conformance descriptor for ParameterSummaryWhenCondition<A, B, C>);
  v11 = sub_100028384(&qword_1008304A8, &qword_100830498, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  v12 = sub_100028384(&qword_100830368, &qword_100830280, (uint64_t)&protocol conformance descriptor for IntentParameter<A>);
  return ParameterSummaryWhenCondition.init<A>(_:_:_:otherwise:)(KeyPath, v6, sub_100377E34, 0, sub_100378604, 0, v8, v9, a2, v10, v11, v12);
}

uint64_t sub_100378FB0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_10083048C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_100378AC8(a1, v4, v5, v6);
}

uint64_t sub_10037901C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_100382D70();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_100379044(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002EFAEC();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_100379070()
{
  unint64_t result;

  result = qword_100830040;
  if (!qword_100830040)
  {
    result = swift_getWitnessTable(&unk_1006378E0, &type metadata for OpenWorkoutIntent);
    atomic_store(result, (unint64_t *)&qword_100830040);
  }
  return result;
}

uint64_t sub_1003790B4(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A630, 0x726F57206E65704FLL, 0xEC00000074756F6BLL);
}

uint64_t sub_1003790E0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100386284();
  v5 = sub_100166890();
  return static URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

unint64_t sub_100379138()
{
  unint64_t result;

  result = qword_100830048;
  if (!qword_100830048)
  {
    result = swift_getWitnessTable(&unk_100637998, &type metadata for OpenWorkoutIntent);
    atomic_store(result, (unint64_t *)&qword_100830048);
  }
  return result;
}

unint64_t sub_100379180()
{
  unint64_t result;

  result = qword_100830050;
  if (!qword_100830050)
  {
    result = swift_getWitnessTable(&unk_1006379C0, &type metadata for OpenWorkoutIntent);
    atomic_store(result, (unint64_t *)&qword_100830050);
  }
  return result;
}

uint64_t sub_1003791C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10023F804(a1, a2, a3, (uint64_t (*)(void))sub_1002EFB30, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_1003791D8@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081DB40, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A630, (uint64_t)sub_1003790B4, a1);
}

uint64_t sub_1003791FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100386284();
  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_100379224(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = (_QWORD *)swift_task_alloc(async function pointer to URLRepresentableIntent<>.perform()[1]);
  *(_QWORD *)(v2 + 16) = v4;
  v5 = sub_100386284();
  v6 = sub_1003862C8();
  v7 = sub_100166890();
  *v4 = v2;
  v4[1] = sub_1003863D0;
  return URLRepresentableIntent<>.perform()(a2, v5, v6, v7);
}

uint64_t sub_1003792A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100383220();
  *a1 = result;
  return result;
}

uint64_t sub_1003792CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002EFB30();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1003792F8()
{
  unint64_t result;

  result = qword_100830060;
  if (!qword_100830060)
  {
    result = swift_getWitnessTable(&unk_100637A5C, &type metadata for OpenWorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830060);
  }
  return result;
}

uint64_t sub_10037933C(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A648, 0xD000000000000011, 0x800000010069B8D0);
}

uint64_t sub_100379360()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t KeyPath;
  uint64_t v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;

  v0 = sub_100047110(&qword_100830460);
  __chkstk_darwin(v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_100830458);
  sub_100008398(v3, qword_10086A660);
  sub_10003CE9C(v3, (uint64_t)qword_10086A660);
  v4 = sub_1002EFB74();
  IntentURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 2, &type metadata for OpenWorkoutPage, v4);
  v5._object = (void *)0x800000010068A770;
  v5._countAndFlagsBits = 0xD00000000000001ELL;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v5);
  KeyPath = swift_getKeyPath(&unk_100638998);
  v7 = sub_100047110(&qword_100830468);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v0, v7);
  swift_release(KeyPath);
  v8._countAndFlagsBits = 47;
  v8._object = (void *)0xE100000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v8);
  v9 = swift_getKeyPath(&unk_1006389C0);
  v10 = sub_100047110(&qword_100830470);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)(v9, v0, v10);
  swift_release(v9);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v11);
  return IntentURLRepresentation.init(stringInterpolation:)(v2, &type metadata for OpenWorkoutPage, v4);
}

uint64_t sub_1003794E0@<X0>(uint64_t a1@<X8>)
{
  return sub_100381EC0(&qword_10081DB50, &qword_100830458, (uint64_t)qword_10086A660, (uint64_t)sub_100379360, a1);
}

unint64_t sub_100379508()
{
  unint64_t result;

  result = qword_100830068;
  if (!qword_100830068)
  {
    result = swift_getWitnessTable(&unk_100637B14, &type metadata for OpenWorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830068);
  }
  return result;
}

unint64_t sub_100379550()
{
  unint64_t result;

  result = qword_100830070;
  if (!qword_100830070)
  {
    result = swift_getWitnessTable(&unk_100637B3C, &type metadata for OpenWorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830070);
  }
  return result;
}

uint64_t sub_100379594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10023F804(a1, a2, a3, (uint64_t (*)(void))sub_1002EFB74, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_1003795A8@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081DB48, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A648, (uint64_t)sub_10037933C, a1);
}

uint64_t sub_1003795CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = (_QWORD *)swift_task_alloc(async function pointer to URLRepresentableIntent<>.perform()[1]);
  *(_QWORD *)(v2 + 16) = v4;
  v5 = sub_1003861FC();
  v6 = sub_100386240();
  v7 = sub_100166890();
  *v4 = v2;
  v4[1] = sub_10010123C;
  return URLRepresentableIntent<>.perform()(a2, v5, v6, v7);
}

uint64_t sub_100379650@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100383458();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100379674(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002EFB74();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1003796A0()
{
  unint64_t result;

  result = qword_100830080;
  if (!qword_100830080)
  {
    result = swift_getWitnessTable(&unk_100637BD8, &type metadata for OpenMultisportActivityIntent);
    atomic_store(result, (unint64_t *)&qword_100830080);
  }
  return result;
}

uint64_t sub_1003796E4()
{
  return sub_1000083D8(&qword_100821BF0, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625FC0);
}

uint64_t sub_100379710(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A678, 0xD000000000000018, 0x800000010069B8B0);
}

uint64_t sub_100379734(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for WorkoutActivityEntity(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004F8C8(a1, (uint64_t)v4, type metadata accessor for WorkoutActivityEntity);
  IntentParameter.wrappedValue.setter(v4);
  return sub_100011F54(a1, type metadata accessor for WorkoutActivityEntity);
}

uint64_t sub_1003797C4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;

  v4 = sub_100386174();
  v5 = sub_1000083D8(&qword_100821ED8, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625F88);
  return static URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

unint64_t sub_100379834()
{
  unint64_t result;

  result = qword_100830088;
  if (!qword_100830088)
  {
    result = swift_getWitnessTable(&unk_100637C90, &type metadata for OpenMultisportActivityIntent);
    atomic_store(result, (unint64_t *)&qword_100830088);
  }
  return result;
}

unint64_t sub_10037987C()
{
  unint64_t result;

  result = qword_100830090;
  if (!qword_100830090)
  {
    result = swift_getWitnessTable(&unk_100637CB8, &type metadata for OpenMultisportActivityIntent);
    atomic_store(result, (unint64_t *)&qword_100830090);
  }
  return result;
}

uint64_t sub_1003798C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10023F804(a1, a2, a3, (uint64_t (*)(void))sub_1002EFBB8, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_1003798D4@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081DB58, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A678, (uint64_t)sub_100379710, a1);
}

uint64_t sub_1003798F8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100386174();
  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_100379920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = (_QWORD *)swift_task_alloc(async function pointer to URLRepresentableIntent<>.perform()[1]);
  *(_QWORD *)(v2 + 16) = v4;
  v5 = sub_100386174();
  v6 = sub_1003861B8();
  v7 = sub_1000083D8(&qword_100821ED8, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625F88);
  *v4 = v2;
  v4[1] = sub_1003863D0;
  return URLRepresentableIntent<>.perform()(a2, v5, v6, v7);
}

uint64_t sub_1003799BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100383788();
  *a1 = result;
  return result;
}

uint64_t sub_1003799E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002EFBB8();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_100379A0C()
{
  unint64_t result;

  result = qword_1008300A0;
  if (!qword_1008300A0)
  {
    result = swift_getWitnessTable(&unk_100637D54, &type metadata for OpenMultisportActivityPageIntent);
    atomic_store(result, (unint64_t *)&qword_1008300A0);
  }
  return result;
}

uint64_t sub_100379A50(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A690, 0xD00000000000001CLL, 0x800000010069B860);
}

uint64_t sub_100379A74()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t KeyPath;
  uint64_t v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;

  v0 = sub_100047110(&qword_100830420);
  __chkstk_darwin(v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_100830418);
  sub_100008398(v3, qword_10086A6A8);
  sub_10003CE9C(v3, (uint64_t)qword_10086A6A8);
  v4 = sub_1002EFBFC();
  IntentURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 2, &type metadata for OpenMultisportActivityPageIntent, v4);
  v5._object = (void *)0x800000010068A770;
  v5._countAndFlagsBits = 0xD00000000000001ELL;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v5);
  KeyPath = swift_getKeyPath(&unk_100638948);
  v7 = sub_100047110(&qword_100830428);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v0, v7);
  swift_release(KeyPath);
  v8._countAndFlagsBits = 47;
  v8._object = (void *)0xE100000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v8);
  v9 = swift_getKeyPath(&unk_100638970);
  v10 = sub_100047110(&qword_100830430);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)(v9, v0, v10);
  swift_release(v9);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v11);
  return IntentURLRepresentation.init(stringInterpolation:)(v2, &type metadata for OpenMultisportActivityPageIntent, v4);
}

uint64_t sub_100379BF4@<X0>(uint64_t a1@<X8>)
{
  return sub_100381EC0(&qword_10081DB68, &qword_100830418, (uint64_t)qword_10086A6A8, (uint64_t)sub_100379A74, a1);
}

unint64_t sub_100379C1C()
{
  unint64_t result;

  result = qword_1008300A8;
  if (!qword_1008300A8)
  {
    result = swift_getWitnessTable(&unk_100637E0C, &type metadata for OpenMultisportActivityPageIntent);
    atomic_store(result, (unint64_t *)&qword_1008300A8);
  }
  return result;
}

unint64_t sub_100379C64()
{
  unint64_t result;

  result = qword_1008300B0;
  if (!qword_1008300B0)
  {
    result = swift_getWitnessTable(&unk_100637E34, &type metadata for OpenMultisportActivityPageIntent);
    atomic_store(result, (unint64_t *)&qword_1008300B0);
  }
  return result;
}

uint64_t sub_100379CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10023F804(a1, a2, a3, (uint64_t (*)(void))sub_1002EFBFC, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_100379CBC@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081DB60, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A690, (uint64_t)sub_100379A50, a1);
}

uint64_t sub_100379CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = (_QWORD *)swift_task_alloc(async function pointer to URLRepresentableIntent<>.perform()[1]);
  *(_QWORD *)(v2 + 16) = v4;
  v5 = sub_10038609C();
  v6 = sub_1003860E0();
  v7 = sub_1000083D8(&qword_100821ED8, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625F88);
  *v4 = v2;
  v4[1] = sub_1003863D0;
  return URLRepresentableIntent<>.perform()(a2, v5, v6, v7);
}

uint64_t sub_100379D7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100383A28();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100379DA0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002EFBFC();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_100379DCC()
{
  unint64_t result;

  result = qword_1008300C0;
  if (!qword_1008300C0)
  {
    result = swift_getWitnessTable(&unk_100637EE0, &type metadata for UpdateWorkoutEffortIntent);
    atomic_store(result, (unint64_t *)&qword_1008300C0);
  }
  return result;
}

unint64_t sub_100379E14()
{
  unint64_t result;

  result = qword_1008300C8;
  if (!qword_1008300C8)
  {
    result = swift_getWitnessTable(&unk_100637F08, &type metadata for UpdateWorkoutEffortIntent);
    atomic_store(result, (unint64_t *)&qword_1008300C8);
  }
  return result;
}

uint64_t sub_100379E58(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1006B5724, 1) + 8);
}

uint64_t sub_100379E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10023F804(a1, a2, a3, (uint64_t (*)(void))sub_1002EFCC8, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_100379E90(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A6C0, 0xD000000000000012, 0x800000010069B810);
}

uint64_t sub_100379EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[37] = a3;
  v4[38] = a4;
  v4[35] = a1;
  v4[36] = a2;
  return swift_task_switch(sub_100379ED0, 0, 0);
}

uint64_t sub_100379ED0()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  unint64_t v7;

  v1 = objc_msgSend((id)objc_opt_self(HKUnit), "appleEffortScoreUnit");
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 272));
  v2 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v1, (double)*(uint64_t *)(v0 + 272));

  type metadata accessor for EffortUtilities(0, v3);
  v4 = v2;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v5 = *(id *)(v0 + 240);
  sub_100112258((_QWORD *)(v0 + 16));
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 272));
  v6 = *(void **)(v0 + 272);
  static EffortUtilities.save(quantity:workout:healthStore:)(v2, v5, v6);

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 272));
  v7 = sub_10024A564();
  static IntentResult.result<A>(value:)(v0 + 272, &type metadata for Int, v7);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037A030@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081DB70, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A6C0, (uint64_t)sub_100379E90, a1);
}

uint64_t sub_10037A054(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = swift_task_alloc(dword_1008303F4);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1000EA380;
  *(_QWORD *)(v5 + 304) = v4;
  *(_OWORD *)(v5 + 288) = *(_OWORD *)v1;
  *(_QWORD *)(v5 + 280) = a1;
  return swift_task_switch(sub_100379ED0, 0, 0);
}

uint64_t sub_10037A0CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_100384390();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_10037A0F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002EFCC8();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10037A120()
{
  unint64_t result;

  result = qword_1008300D8;
  if (!qword_1008300D8)
  {
    result = swift_getWitnessTable(&unk_100637FB4, &type metadata for SetWorkoutEffortIntent);
    atomic_store(result, (unint64_t *)&qword_1008300D8);
  }
  return result;
}

unint64_t sub_10037A168()
{
  unint64_t result;

  result = qword_1008300E0;
  if (!qword_1008300E0)
  {
    result = swift_getWitnessTable(&unk_100637FDC, &type metadata for SetWorkoutEffortIntent);
    atomic_store(result, (unint64_t *)&qword_1008300E0);
  }
  return result;
}

uint64_t sub_10037A1AC(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1006B56F0, 1) + 8);
}

uint64_t sub_10037A1D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B56C8, 1);
}

uint64_t sub_10037A1E0(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A6D8, 0xD000000000000012, 0x800000010069B810);
}

uint64_t sub_10037A204@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  _QWORD v21[2];

  v21[1] = a1;
  v1 = type metadata accessor for StringComparisonOperator(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_1008303A8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v21 - v10;
  KeyPath = swift_getKeyPath(&unk_1006388D0);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for StringComparisonOperator.contains(_:), v1);
  v13 = sub_100047110(&qword_1008303B0);
  v14 = sub_1002EFD0C();
  v15 = sub_100028384(&qword_1008303C0, &qword_1008303B0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  v16 = sub_100028384(&qword_100830368, &qword_100830280, (uint64_t)&protocol conformance descriptor for IntentParameter<A>);
  v17 = sub_100112214();
  ParameterSummaryWhenCondition.init<A>(_:identifier:_:_:otherwise:)(KeyPath, v4, 77, 0xE100000000000000, sub_10037A41C, 0, sub_10037A6E8, 0, v13, v13, v14, v15, v15, v16, v17);
  v18 = sub_100028384(&qword_1008303B8, &qword_1008303A8, (uint64_t)&protocol conformance descriptor for ParameterSummaryWhenCondition<A, B, C>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v8, &type metadata for SetWorkoutEffortIntent, v5, v18);
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v11, &type metadata for SetWorkoutEffortIntent, v5, v18);
  return ((uint64_t (*)(char *, uint64_t))v19)(v11, v5);
}

uint64_t sub_10037A41C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  _QWORD v28[2];

  v28[1] = a1;
  v1 = sub_100047110(&qword_1008303C8);
  __chkstk_darwin(v1);
  v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_1008303D0);
  __chkstk_darwin(v4);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_1008303B0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v28 - v12;
  v14 = sub_1002EFD0C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 3, &type metadata for SetWorkoutEffortIntent, v14);
  v15._countAndFlagsBits = 0x6F66664520746553;
  v15._object = (void *)0xEF20726F66207472;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_1006388D0);
  v17 = sub_100047110(&qword_1008303D8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 32;
  v18._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_100638920);
  v20 = sub_100047110(&qword_1008303E8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v19, v4, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 544175136;
  v21._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_1006388F8);
  v23 = sub_100047110(&qword_1008303E0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v22, v4, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v24);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for SetWorkoutEffortIntent, v14);
  IntentParameterSummary.init(_:table:)(v3, 0, 0, &type metadata for SetWorkoutEffortIntent, v14);
  v25 = sub_100028384(&qword_1008303C0, &qword_1008303B0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v10, &type metadata for SetWorkoutEffortIntent, v7, v25);
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v10, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for SetWorkoutEffortIntent, v7, v25);
  return ((uint64_t (*)(char *, uint64_t))v26)(v13, v7);
}

uint64_t sub_10037A6EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  _QWORD v25[2];

  v25[1] = a1;
  v1 = sub_100047110(&qword_1008303C8);
  __chkstk_darwin(v1);
  v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_1008303D0);
  __chkstk_darwin(v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_1008303B0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v25 - v12;
  v14 = sub_1002EFD0C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 2, &type metadata for SetWorkoutEffortIntent, v14);
  v15._countAndFlagsBits = 0x6F66664520746553;
  v15._object = (void *)0xEF20726F66207472;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_1006388D0);
  v17 = sub_100047110(&qword_1008303D8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 544175136;
  v18._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_1006388F8);
  v20 = sub_100047110(&qword_1008303E0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v19, v4, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v21);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for SetWorkoutEffortIntent, v14);
  IntentParameterSummary.init(_:table:)(v3, 0, 0, &type metadata for SetWorkoutEffortIntent, v14);
  v22 = sub_100028384(&qword_1008303C0, &qword_1008303B0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v10, &type metadata for SetWorkoutEffortIntent, v7, v22);
  v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v10, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for SetWorkoutEffortIntent, v7, v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v13, v7);
}

uint64_t sub_10037A974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[106] = a5;
  v5[105] = a4;
  v5[104] = a3;
  v5[103] = a2;
  v5[102] = a1;
  v6 = sub_100047110(&qword_1008201C8);
  v5[107] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100829C48);
  v5[108] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WorkoutActivityEntity(0);
  v5[109] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[110] = v9;
  v5[111] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10037AA2C, 0, 0);
}

uint64_t sub_10037AA2C()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;

  v1 = objc_msgSend((id)objc_opt_self(HKUnit), "appleEffortScoreUnit");
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 800));
  v2 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v1, (double)*(uint64_t *)(v0 + 800));
  *(_QWORD *)(v0 + 896) = v2;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v3 = *(id *)(v0 + 240);
  sub_100112258((_QWORD *)(v0 + 16));
  v4 = objc_msgSend(v3, "isMultiSportWorkout");

  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 880);
    v7 = *(_QWORD *)(v0 + 872);
    v8 = *(_QWORD **)(v0 + 864);
    IntentParameter.wrappedValue.getter(v8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) == 1)
    {
      v9 = *(_QWORD *)(v0 + 888);
      v10 = *(_QWORD *)(v0 + 864);
      v11 = *(_QWORD *)(v0 + 856);
      sub_10001BE90(v10, &qword_100829C48);
      v13 = IntentParameter.projectedValue.getter(v12);
      IntentDialog.init(stringLiteral:)(0xD000000000000025, 0x800000010069B7E0);
      v14 = type metadata accessor for IntentDialog(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 0, 1, v14);
      v15 = type metadata accessor for AppIntentError(0);
      v16 = sub_1000083D8((unint64_t *)&qword_1008296C8, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
      swift_allocError(v15, v16, 0, 0);
      IntentParameter.needsValueError(_:)(v11);
      swift_release(v13);
      v17 = sub_10001BE90(v11, &qword_1008201C8);
      swift_willThrow(v17);

      swift_task_dealloc(v9);
      swift_task_dealloc(v10);
      swift_task_dealloc(v11);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v28 = *(_QWORD *)(v0 + 888);
    v29 = *(_QWORD *)(v0 + 872);
    sub_100253B3C(*(_QWORD *)(v0 + 864), v28);
    type metadata accessor for EffortUtilities(0, v30);
    v31 = v2;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 272));
    v32 = *(void **)(v0 + 496);
    *(_QWORD *)(v0 + 904) = v32;
    v33 = v32;
    sub_100112258((_QWORD *)(v0 + 272));
    v34 = *(void **)(v28 + *(int *)(v29 + 20));
    *(_QWORD *)(v0 + 912) = v34;
    v35 = v34;
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 808));
    v36 = *(_QWORD *)(v0 + 808);
    *(_QWORD *)(v0 + 920) = v36;
    v37 = (_QWORD *)swift_task_alloc(async function pointer to static EffortUtilities.save(quantity:workout:workoutActivity:healthStore:)[1]);
    *(_QWORD *)(v0 + 928) = v37;
    *v37 = v0;
    v37[1] = sub_10037ADC0;
    v24 = v2;
    v25 = v33;
    v26 = v34;
    v27 = v36;
  }
  else
  {
    type metadata accessor for EffortUtilities(0, v5);
    v19 = v2;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 528));
    v20 = *(void **)(v0 + 752);
    *(_QWORD *)(v0 + 936) = v20;
    v21 = v20;
    sub_100112258((_QWORD *)(v0 + 528));
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 784));
    v22 = *(_QWORD *)(v0 + 784);
    *(_QWORD *)(v0 + 944) = v22;
    v23 = (_QWORD *)swift_task_alloc(async function pointer to static EffortUtilities.save(quantity:workout:workoutActivity:healthStore:)[1]);
    *(_QWORD *)(v0 + 952) = v23;
    *v23 = v0;
    v23[1] = sub_10037AEEC;
    v24 = v2;
    v25 = v21;
    v26 = 0;
    v27 = v22;
  }
  return static EffortUtilities.save(quantity:workout:workoutActivity:healthStore:)(v24, v25, v26, v27);
}

uint64_t sub_10037ADC0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(*(_QWORD *)v0 + 920);
  v2 = *(void **)(*(_QWORD *)v0 + 912);
  v3 = *(void **)(*(_QWORD *)v0 + 904);
  v4 = *(void **)(*(_QWORD *)v0 + 896);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 928));

  return swift_task_switch(sub_10037AE3C, 0, 0);
}

uint64_t sub_10037AE3C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  sub_100011F54(*(_QWORD *)(v0 + 888), type metadata accessor for WorkoutActivityEntity);
  v1 = *(void **)(v0 + 896);
  v2 = *(_QWORD *)(v0 + 888);
  v3 = *(_QWORD *)(v0 + 864);
  v4 = *(_QWORD *)(v0 + 856);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 792));
  v5 = sub_10024A564();
  static IntentResult.result<A>(value:)(v0 + 792, &type metadata for Int, v5);

  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037AEEC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(*(_QWORD *)v0 + 944);
  v2 = *(void **)(*(_QWORD *)v0 + 936);
  v3 = *(void **)(*(_QWORD *)v0 + 896);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 952));

  return swift_task_switch(sub_10037AF60, 0, 0);
}

uint64_t sub_10037AF60()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(void **)(v0 + 896);
  v2 = *(_QWORD *)(v0 + 888);
  v3 = *(_QWORD *)(v0 + 864);
  v4 = *(_QWORD *)(v0 + 856);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 792));
  v5 = sub_10024A564();
  static IntentResult.result<A>(value:)(v0 + 792, &type metadata for Int, v5);

  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037B000@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081DB78, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A6D8, (uint64_t)sub_10037A1E0, a1);
}

uint64_t sub_10037B024(uint64_t a1, uint64_t a2)
{
  uint64_t HasValueComparisonOperator;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  HasValueComparisonOperator = type metadata accessor for HasValueComparisonOperator(0);
  v4 = *(_QWORD *)(HasValueComparisonOperator - 8);
  __chkstk_darwin(HasValueComparisonOperator);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1006388D0);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for HasValueComparisonOperator.hasAnyValue(_:), HasValueComparisonOperator);
  v8 = sub_100047110(&qword_1008303A8);
  v9 = sub_100047110(&qword_1008303B0);
  v10 = sub_100028384(&qword_1008303B8, &qword_1008303A8, (uint64_t)&protocol conformance descriptor for ParameterSummaryWhenCondition<A, B, C>);
  v11 = sub_100028384(&qword_1008303C0, &qword_1008303B0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  v12 = sub_100028384(&qword_100830368, &qword_100830280, (uint64_t)&protocol conformance descriptor for IntentParameter<A>);
  return ParameterSummaryWhenCondition.init<A>(_:_:_:otherwise:)(KeyPath, v6, sub_10037A204, 0, sub_10037A6E8, 0, v8, v9, a2, v10, v11, v12);
}

uint64_t sub_10037B180(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *v1;
  v5 = v1[1];
  v7 = v1[2];
  v6 = v1[3];
  v8 = (_QWORD *)swift_task_alloc(dword_1008303A4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1000DA0E4;
  return sub_10037A974(a1, v4, v5, v7, v6);
}

uint64_t sub_10037B1F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = sub_10038473C();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_10037B220(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002EFD0C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10037B24C()
{
  unint64_t result;

  result = qword_1008300F0;
  if (!qword_1008300F0)
  {
    result = swift_getWitnessTable(&unk_100638088, &type metadata for WorkoutExtremeStatIntent);
    atomic_store(result, (unint64_t *)&qword_1008300F0);
  }
  return result;
}

unint64_t sub_10037B294()
{
  unint64_t result;

  result = qword_1008300F8;
  if (!qword_1008300F8)
  {
    result = swift_getWitnessTable(&unk_1006380B0, &type metadata for WorkoutExtremeStatIntent);
    atomic_store(result, (unint64_t *)&qword_1008300F8);
  }
  return result;
}

uint64_t sub_10037B2D8(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1006B5664, 1) + 8);
}

uint64_t sub_10037B2FC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B563C, 1);
}

uint64_t sub_10037B30C(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A6F0, 0xD00000000000001FLL, 0x800000010069B780);
}

uint64_t sub_10037B330()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10037B350()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10037B370@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  _QWORD v21[2];

  v21[1] = a1;
  v1 = type metadata accessor for StringComparisonOperator(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100830348);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v21 - v10;
  KeyPath = swift_getKeyPath(&unk_100638830);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for StringComparisonOperator.contains(_:), v1);
  v13 = sub_100047110(&qword_100830350);
  v14 = sub_1002EFC40();
  v15 = sub_100028384(&qword_100830360, &qword_100830350, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  v16 = sub_100028384(&qword_100830368, &qword_100830280, (uint64_t)&protocol conformance descriptor for IntentParameter<A>);
  v17 = sub_100112214();
  ParameterSummaryWhenCondition.init<A>(_:identifier:_:_:otherwise:)(KeyPath, v4, 77, 0xE100000000000000, sub_10037B588, 0, sub_10037B888, 0, v13, v13, v14, v15, v15, v16, v17);
  v18 = sub_100028384(&qword_100830358, &qword_100830348, (uint64_t)&protocol conformance descriptor for ParameterSummaryWhenCondition<A, B, C>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v8, &type metadata for WorkoutExtremeStatIntent, v5, v18);
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v11, &type metadata for WorkoutExtremeStatIntent, v5, v18);
  return ((uint64_t (*)(char *, uint64_t))v19)(v11, v5);
}

uint64_t sub_10037B588@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  _QWORD v31[2];

  v31[1] = a1;
  v1 = sub_100047110(&qword_100830370);
  __chkstk_darwin(v1);
  v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100830378);
  __chkstk_darwin(v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100830350);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v31 - v12;
  v14 = sub_1002EFC40();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 4, &type metadata for WorkoutExtremeStatIntent, v14);
  v15._countAndFlagsBits = 544499015;
  v15._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_100638858);
  v17 = sub_100047110(&qword_100830380);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 32;
  v18._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_100638880);
  v20 = sub_100047110(&qword_100830388);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v19, v4, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 0x20726F6620;
  v21._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100638830);
  v23 = sub_100047110(&qword_100830390);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v22, v4, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 32;
  v24._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v24);
  v25 = swift_getKeyPath(&unk_1006388A8);
  v26 = sub_100047110(&qword_100830398);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v25, v4, v26);
  swift_release(v25);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v27);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for WorkoutExtremeStatIntent, v14);
  IntentParameterSummary.init(_:table:)(v3, 0, 0, &type metadata for WorkoutExtremeStatIntent, v14);
  v28 = sub_100028384(&qword_100830360, &qword_100830350, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v10, &type metadata for WorkoutExtremeStatIntent, v7, v28);
  v29 = *(void (**)(char *, uint64_t))(v8 + 8);
  v29(v10, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for WorkoutExtremeStatIntent, v7, v28);
  return ((uint64_t (*)(char *, uint64_t))v29)(v13, v7);
}

uint64_t sub_10037B88C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  _QWORD v28[2];

  v28[1] = a1;
  v1 = sub_100047110(&qword_100830370);
  __chkstk_darwin(v1);
  v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100830378);
  __chkstk_darwin(v4);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100830350);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v28 - v12;
  v14 = sub_1002EFC40();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 3, &type metadata for WorkoutExtremeStatIntent, v14);
  v15._countAndFlagsBits = 544499015;
  v15._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_100638858);
  v17 = sub_100047110(&qword_100830380);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 32;
  v18._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_100638880);
  v20 = sub_100047110(&qword_100830388);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v19, v4, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 0x20726F6620;
  v21._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100638830);
  v23 = sub_100047110(&qword_100830390);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v22, v4, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v24);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for WorkoutExtremeStatIntent, v14);
  IntentParameterSummary.init(_:table:)(v3, 0, 0, &type metadata for WorkoutExtremeStatIntent, v14);
  v25 = sub_100028384(&qword_100830360, &qword_100830350, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v10, &type metadata for WorkoutExtremeStatIntent, v7, v25);
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v10, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for WorkoutExtremeStatIntent, v7, v25);
  return ((uint64_t (*)(char *, uint64_t))v26)(v13, v7);
}

uint64_t sub_10037BB48(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v2[285] = v1;
  v2[284] = a1;
  v3 = sub_100047110(&qword_1008302B8);
  v2[286] = v3;
  v2[287] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ColorScheme(0);
  v2[288] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[289] = v5;
  v2[290] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WorkoutActivityEntity(0);
  v2[291] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[292] = v7;
  v2[293] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WorkoutStatView(0);
  v2[294] = v8;
  v2[295] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_1008302C0);
  v2[296] = v9;
  v2[297] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  v2[298] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_1008296A8);
  v2[299] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_1008296B0);
  v2[300] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_1008302C8);
  v2[301] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for IntentDialog(0);
  v2[302] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[303] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[304] = swift_task_alloc(v16);
  v2[305] = swift_task_alloc(v16);
  v17 = sub_100047110(&qword_1008201C8);
  v2[306] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (*(_QWORD *)(*(_QWORD *)(sub_100047110(&qword_100829C48) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[307] = swift_task_alloc(v18);
  v2[308] = swift_task_alloc(v18);
  v2[309] = swift_task_alloc(v18);
  return swift_task_switch(sub_10037BD70, 0, 0);
}

uint64_t sub_10037BD70()
{
  uint64_t v0;
  id v1;
  unsigned int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(v0 + 2480) = **(_QWORD **)(v0 + 2280);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(id *)(v0 + 240);
  sub_100112258((_QWORD *)(v0 + 16));
  v2 = objc_msgSend(v1, "isMultiSportWorkout");

  if (!v2
    || (v3 = *(_QWORD **)(v0 + 2472),
        v4 = *(_QWORD *)(v0 + 2336),
        v5 = *(_QWORD *)(v0 + 2328),
        IntentParameter.wrappedValue.getter(v3),
        LODWORD(v5) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v4 + 48))(v3, 1, v5),
        sub_10001BE90((uint64_t)v3, &qword_100829C48),
        (_DWORD)v5 != 1))
  {
    *(_QWORD *)(v0 + 2488) = *(_QWORD *)(*(_QWORD *)(v0 + 2280) + 24);
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 2529));
    __asm { BR              X10 }
  }
  v7 = *(_QWORD *)(v0 + 2448);
  v8 = *(_QWORD *)(v0 + 2424);
  v9 = *(_QWORD *)(v0 + 2416);
  v10 = IntentParameter.projectedValue.getter(v6);
  IntentDialog.init(stringLiteral:)(0xD00000000000001BLL, 0x800000010069B720);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v9);
  v11 = type metadata accessor for AppIntentError(0);
  v12 = sub_1000083D8((unint64_t *)&qword_1008296C8, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
  swift_allocError(v11, v12, 0, 0);
  IntentParameter.needsValueError(_:)(v7);
  swift_release(v10);
  v13 = sub_10001BE90(v7, &qword_1008201C8);
  swift_willThrow(v13);
  v14 = *(_QWORD *)(v0 + 2464);
  v15 = *(_QWORD *)(v0 + 2456);
  v16 = *(_QWORD *)(v0 + 2448);
  v17 = *(_QWORD *)(v0 + 2440);
  v18 = *(_QWORD *)(v0 + 2432);
  v19 = *(_QWORD *)(v0 + 2408);
  v20 = *(_QWORD *)(v0 + 2400);
  v21 = *(_QWORD *)(v0 + 2392);
  v22 = *(_QWORD *)(v0 + 2384);
  v24 = *(_QWORD *)(v0 + 2376);
  v25 = *(_QWORD *)(v0 + 2360);
  v26 = *(_QWORD *)(v0 + 2344);
  v27 = *(_QWORD *)(v0 + 2320);
  v28 = *(_QWORD *)(v0 + 2296);
  swift_task_dealloc(*(_QWORD *)(v0 + 2472));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037C008()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_100830304);
  *(_QWORD *)(v0 + 2496) = v2;
  *v2 = v0;
  v2[1] = sub_10037C124;
  return sub_10037EBA4(v1, 0);
}

uint64_t sub_10037C124()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = (_QWORD *)*v1;
  v3 = *(_QWORD *)(*v1 + 2496);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (!v0)
    return swift_task_switch(sub_10037C278, 0, 0);
  v5 = v2[309];
  v6 = v2[308];
  v7 = v2[307];
  v8 = v2[306];
  v9 = v2[305];
  v10 = v2[304];
  v11 = v2[301];
  v12 = v2[300];
  v15 = v2[299];
  v16 = v2[298];
  v17 = v2[297];
  v18 = v2[295];
  v19 = v2[293];
  v20 = v2[290];
  v13 = v2[287];
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_10037C278()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  double v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  double v25;
  id v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  unint64_t v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  Swift::String v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t KeyPath;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __n128 v75;
  id v77;
  uint64_t v78;
  unint64_t v79;
  __int128 *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v106 = (_QWORD *)(v0 + 1296);
  v99 = (_QWORD *)(v0 + 2256);
  v97 = (_QWORD *)(v0 + 2528);
  v1 = *(_QWORD **)(v0 + 2464);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 1040));
  IntentParameter.wrappedValue.getter(v1);
  v2 = sub_100384C3C(v0 + 1040, (uint64_t)v1, 1);
  v103 = v3;
  v104 = v2;
  v102 = v4;
  v5 = *(_QWORD *)(v0 + 1992);
  v6 = *(_QWORD *)(v0 + 1984);
  v7 = *(_QWORD *)(v0 + 1976);
  v8 = *(_QWORD *)(v0 + 1968);
  v9 = *(_QWORD *)(v0 + 1960);
  v10 = *(_QWORD *)(v0 + 1952);
  v11 = *(_QWORD *)(v0 + 1944);
  v12 = *(_QWORD *)(v0 + 1936);
  v13 = *(_QWORD *)(v0 + 1920);
  v14 = *(_QWORD *)(v0 + 1928);
  v15 = *(_QWORD *)(v0 + 1904);
  v16 = *(_QWORD *)(v0 + 1912);
  v17 = *(_QWORD *)(v0 + 1896);
  *(_QWORD *)(v0 + 2112) = *(_QWORD *)(v0 + 1888);
  v116 = v16;
  v117 = v17;
  *(_QWORD *)(v0 + 2120) = v17;
  *(_QWORD *)(v0 + 2128) = v15;
  *(_QWORD *)(v0 + 2136) = v16;
  *(_QWORD *)(v0 + 2144) = v13;
  v113 = v12;
  v114 = v14;
  *(_QWORD *)(v0 + 2152) = v14;
  *(_QWORD *)(v0 + 2160) = v12;
  v115 = v11;
  *(_QWORD *)(v0 + 2168) = v11;
  v111 = v8;
  v112 = v10;
  *(_QWORD *)(v0 + 2176) = v10;
  *(_QWORD *)(v0 + 2184) = v9;
  *(_QWORD *)(v0 + 2192) = v8;
  v109 = v6;
  v110 = v7;
  *(_QWORD *)(v0 + 2200) = v7;
  *(_QWORD *)(v0 + 2208) = v6;
  v108 = v5;
  *(_QWORD *)(v0 + 2216) = v5;
  v18 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
  v19 = sub_10024FF48();
  v20 = *(double *)(v19 + 32);
  LODWORD(v7) = *(unsigned __int8 *)(v19 + 40);
  swift_release(v19);
  if ((_DWORD)v7)
    v20 = 0.0;
  v21 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v18, v20);

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 2248));
  v22 = *(void **)(v0 + 2248);
  v23 = v21;
  v80 = (__int128 *)(v0 + 2112);
  v24 = sub_10024FF48();
  v25 = *(double *)(v24 + 64);
  swift_release(v24);
  v26 = objc_msgSend(v22, "localizedPaceStringWithDistance:overDuration:paceFormat:distanceType:", v23, FIUIPaceFormatForDistanceType(v9), v9, v25);

  v101 = v23;
  if (v26)
  {
    v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v28 = v27;

  }
  else
  {
    v28 = (CHWorkoutDetailHeartRateTableViewCell *)0xE200000000000000;
    v85 = 11565;
  }
  v29 = *(_QWORD **)(v0 + 2456);
  v30 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v31 = *(_QWORD *)(v0 + 2400);
  v32 = *(_QWORD *)(v0 + 2392);
  v33 = *(_QWORD *)(v0 + 2384);
  v92 = *(_QWORD *)(v0 + 2336);
  v94 = *(_QWORD *)(v0 + 2328);
  v34 = type metadata accessor for _GeneratedContentOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(3, 3);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v35);
  IntentParameter.wrappedValue.getter(v97);
  v36 = sub_1003827BC();
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:)(v97, &type metadata for WorkoutEventType, v36);
  v37._countAndFlagsBits = 32;
  v37._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
  EntityProperty.wrappedValue.getter(v99);
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v99, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v38._countAndFlagsBits = 8250;
  v38._object = (void *)0xE200000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v38);
  v39._countAndFlagsBits = v85;
  v39._object = v28;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v39);
  swift_bridgeObjectRelease(v28, v40, v41, v42, v43, v44, v45, v46);
  v47._countAndFlagsBits = 0;
  v47._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v47);
  IntentDialog.init(stringInterpolation:)(v33);
  _GeneratedContentFallback.init(_:localeIdentifier:)(v30, 0, 0);
  v48 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v32, 0, 1, v48);
  v49 = sub_1002EFC40();
  v50 = sub_10025036C();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_10037FE9C, 0, v31, v32, &type metadata for WorkoutExtremeStatIntent, &type metadata for WorkoutStat, v49, v50);
  v98 = v50;
  IntentDialog.init<A, B>(from:)(v87, &type metadata for WorkoutExtremeStatIntent, &type metadata for WorkoutStat, v49, v50);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 2264));
  v78 = *(_QWORD *)(v0 + 2264);
  IntentParameter.wrappedValue.getter(v106);
  v77 = *(id *)(v0 + 1520);
  sub_100112258(v106);
  IntentParameter.wrappedValue.getter(v29);
  v51 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v92 + 48))(v29, 1, v94);
  v52 = *(_QWORD *)(v0 + 2456);
  if (v51)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 2456), &qword_100829C48);
    v53 = 0;
  }
  else
  {
    v54 = *(_QWORD *)(v0 + 2344);
    v55 = *(_QWORD *)(v0 + 2328);
    sub_10004F8C8(*(_QWORD *)(v0 + 2456), v54, type metadata accessor for WorkoutActivityEntity);
    sub_10001BE90(v52, &qword_100829C48);
    v53 = *(id *)(v54 + *(int *)(v55 + 20));
    sub_100011F54(v54, type metadata accessor for WorkoutActivityEntity);
  }
  v84 = *(_QWORD *)(v0 + 2472);
  v86 = *(_QWORD *)(v0 + 2464);
  v88 = *(_QWORD *)(v0 + 2456);
  v89 = *(_QWORD *)(v0 + 2448);
  v107 = *(_QWORD *)(v0 + 2440);
  v82 = *(_QWORD *)(v0 + 2424);
  v83 = *(_QWORD *)(v0 + 2416);
  v90 = *(_QWORD *)(v0 + 2432);
  v91 = *(_QWORD *)(v0 + 2408);
  v93 = *(_QWORD *)(v0 + 2400);
  v95 = *(_QWORD *)(v0 + 2392);
  v96 = *(_QWORD *)(v0 + 2384);
  v105 = *(_QWORD *)(v0 + 2376);
  v56 = *(_QWORD *)(v0 + 2368);
  v57 = *(_QWORD **)(v0 + 2360);
  v58 = *(int **)(v0 + 2352);
  v100 = *(_QWORD *)(v0 + 2344);
  v59 = *(_QWORD *)(v0 + 2320);
  v60 = *(_QWORD *)(v0 + 2312);
  v61 = *(_QWORD *)(v0 + 2304);
  v62 = *(uint64_t **)(v0 + 2296);
  v63 = *(_QWORD *)(v0 + 2288);
  *v57 = swift_getKeyPath(&unk_100638780);
  v64 = sub_100047110(&qword_1008302D8);
  swift_storeEnumTagMultiPayload(v57, v64, 0);
  *(_QWORD *)((char *)v57 + v58[5]) = v78;
  *(_QWORD *)((char *)v57 + v58[6]) = v77;
  *(_QWORD *)((char *)v57 + v58[7]) = v53;
  v65 = (_OWORD *)((char *)v57 + v58[8]);
  v66 = *v80;
  v67 = *(_OWORD *)(v0 + 2144);
  v65[1] = *(_OWORD *)(v0 + 2128);
  v65[2] = v67;
  *v65 = v66;
  v68 = *(_OWORD *)(v0 + 2160);
  v69 = *(_OWORD *)(v0 + 2176);
  v70 = *(_OWORD *)(v0 + 2208);
  v65[5] = *(_OWORD *)(v0 + 2192);
  v65[6] = v70;
  v65[3] = v68;
  v65[4] = v69;
  KeyPath = swift_getKeyPath(&unk_1006387B0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v60 + 104))(v59, enum case for ColorScheme.dark(_:), v61);
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))((char *)v62 + *(int *)(v63 + 28), v59, v61);
  *v62 = KeyPath;
  sub_10004F8C8((uint64_t)v57, v105, type metadata accessor for WorkoutStatView);
  sub_100021CC0((uint64_t)v62, v105 + *(int *)(v56 + 36), &qword_1008302B8);
  swift_bridgeObjectRetain(v117);
  swift_bridgeObjectRetain(v116);
  swift_bridgeObjectRetain(v114);
  swift_retain(v113);
  swift_retain(v115);
  swift_retain(v112);
  swift_retain(v111);
  swift_retain(v110);
  swift_retain(v109);
  swift_retain(v108);
  sub_10001BE90((uint64_t)v62, &qword_1008302B8);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
  sub_100011F54((uint64_t)v57, type metadata accessor for WorkoutStatView);
  v72 = *(_OWORD *)(v0 + 2144);
  *(_OWORD *)(v0 + 2048) = *(_OWORD *)(v0 + 2160);
  v73 = *(_OWORD *)(v0 + 2192);
  *(_OWORD *)(v0 + 2064) = *(_OWORD *)(v0 + 2176);
  *(_OWORD *)(v0 + 2080) = v73;
  *(_OWORD *)(v0 + 2096) = *(_OWORD *)(v0 + 2208);
  v74 = *(_OWORD *)(v0 + 2128);
  *(_OWORD *)(v0 + 2000) = *v80;
  *(_OWORD *)(v0 + 2016) = v74;
  *(_OWORD *)(v0 + 2032) = v72;
  *(_QWORD *)(v0 + 2224) = v104;
  *(_QWORD *)(v0 + 2232) = v103;
  *(_QWORD *)(v0 + 2240) = v102;
  v81 = sub_1002EFAEC();
  v79 = sub_100385E38();
  swift_bridgeObjectRetain(v117);
  swift_bridgeObjectRetain(v116);
  swift_bridgeObjectRetain(v114);
  swift_retain(v113);
  swift_retain(v115);
  swift_retain(v112);
  swift_retain(v111);
  swift_retain(v110);
  swift_retain(v109);
  swift_retain(v108);
  swift_retain(v104);
  swift_retain(v103);
  v75 = swift_retain(v102);
  static IntentResult.result<A, B, C>(value:opensIntent:dialog:view:)(v0 + 2000, v0 + 2224, v107, v105, &type metadata for WorkoutStat, &type metadata for OpenUnifiedWorkoutIntent, v56, v98, v75, v81, v79);
  swift_release_n(v102, 2);
  swift_release_n(v103, 2);
  swift_release_n(v104, 2);
  swift_release_n(v108, 2);
  swift_release_n(v109, 2);
  swift_release_n(v110, 2);
  swift_release_n(v111, 2);
  swift_release_n(v112, 2);
  swift_release_n(v115, 2);
  swift_release_n(v113, 2);
  swift_bridgeObjectRelease_n(v114, 2);
  swift_bridgeObjectRelease_n(v116, 2);
  swift_bridgeObjectRelease_n(v117, 2);

  sub_10001BE90(v105, &qword_1008302C0);
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v107, v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v107);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v105);
  swift_task_dealloc(v57);
  swift_task_dealloc(v100);
  swift_task_dealloc(v59);
  swift_task_dealloc(v62);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037CBC4()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = (_QWORD *)*v1;
  v3 = *(_QWORD *)(*v1 + 2504);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (!v0)
    return swift_task_switch(sub_10037CD18, 0, 0);
  v5 = v2[309];
  v6 = v2[308];
  v7 = v2[307];
  v8 = v2[306];
  v9 = v2[305];
  v10 = v2[304];
  v11 = v2[301];
  v12 = v2[300];
  v15 = v2[299];
  v16 = v2[298];
  v17 = v2[297];
  v18 = v2[295];
  v19 = v2[293];
  v20 = v2[290];
  v13 = v2[287];
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_10037CD18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  double v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  double v25;
  id v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  unint64_t v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  Swift::String v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t KeyPath;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __n128 v75;
  id v77;
  uint64_t v78;
  unint64_t v79;
  __int128 *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v106 = (_QWORD *)(v0 + 1296);
  v99 = (_QWORD *)(v0 + 2256);
  v97 = (_QWORD *)(v0 + 2528);
  v1 = *(_QWORD **)(v0 + 2464);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 784));
  IntentParameter.wrappedValue.getter(v1);
  v2 = sub_100384C3C(v0 + 784, (uint64_t)v1, 1);
  v103 = v3;
  v104 = v2;
  v102 = v4;
  v5 = *(_QWORD *)(v0 + 1880);
  v6 = *(_QWORD *)(v0 + 1872);
  v7 = *(_QWORD *)(v0 + 1864);
  v8 = *(_QWORD *)(v0 + 1856);
  v9 = *(_QWORD *)(v0 + 1848);
  v10 = *(_QWORD *)(v0 + 1840);
  v11 = *(_QWORD *)(v0 + 1832);
  v12 = *(_QWORD *)(v0 + 1824);
  v13 = *(_QWORD *)(v0 + 1808);
  v14 = *(_QWORD *)(v0 + 1816);
  v15 = *(_QWORD *)(v0 + 1792);
  v16 = *(_QWORD *)(v0 + 1800);
  v17 = *(_QWORD *)(v0 + 1784);
  *(_QWORD *)(v0 + 2112) = *(_QWORD *)(v0 + 1776);
  v116 = v16;
  v117 = v17;
  *(_QWORD *)(v0 + 2120) = v17;
  *(_QWORD *)(v0 + 2128) = v15;
  *(_QWORD *)(v0 + 2136) = v16;
  *(_QWORD *)(v0 + 2144) = v13;
  v113 = v12;
  v114 = v14;
  *(_QWORD *)(v0 + 2152) = v14;
  *(_QWORD *)(v0 + 2160) = v12;
  v115 = v11;
  *(_QWORD *)(v0 + 2168) = v11;
  v111 = v8;
  v112 = v10;
  *(_QWORD *)(v0 + 2176) = v10;
  *(_QWORD *)(v0 + 2184) = v9;
  *(_QWORD *)(v0 + 2192) = v8;
  v109 = v6;
  v110 = v7;
  *(_QWORD *)(v0 + 2200) = v7;
  *(_QWORD *)(v0 + 2208) = v6;
  v108 = v5;
  *(_QWORD *)(v0 + 2216) = v5;
  v18 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
  v19 = sub_10024FF48();
  v20 = *(double *)(v19 + 32);
  LODWORD(v7) = *(unsigned __int8 *)(v19 + 40);
  swift_release(v19);
  if ((_DWORD)v7)
    v20 = 0.0;
  v21 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v18, v20);

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 2248));
  v22 = *(void **)(v0 + 2248);
  v23 = v21;
  v80 = (__int128 *)(v0 + 2112);
  v24 = sub_10024FF48();
  v25 = *(double *)(v24 + 64);
  swift_release(v24);
  v26 = objc_msgSend(v22, "localizedPaceStringWithDistance:overDuration:paceFormat:distanceType:", v23, FIUIPaceFormatForDistanceType(v9), v9, v25);

  v101 = v23;
  if (v26)
  {
    v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v28 = v27;

  }
  else
  {
    v28 = (CHWorkoutDetailHeartRateTableViewCell *)0xE200000000000000;
    v85 = 11565;
  }
  v29 = *(_QWORD **)(v0 + 2456);
  v30 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v31 = *(_QWORD *)(v0 + 2400);
  v32 = *(_QWORD *)(v0 + 2392);
  v33 = *(_QWORD *)(v0 + 2384);
  v92 = *(_QWORD *)(v0 + 2336);
  v94 = *(_QWORD *)(v0 + 2328);
  v34 = type metadata accessor for _GeneratedContentOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(3, 3);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v35);
  IntentParameter.wrappedValue.getter(v97);
  v36 = sub_1003827BC();
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:)(v97, &type metadata for WorkoutEventType, v36);
  v37._countAndFlagsBits = 32;
  v37._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
  EntityProperty.wrappedValue.getter(v99);
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v99, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v38._countAndFlagsBits = 8250;
  v38._object = (void *)0xE200000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v38);
  v39._countAndFlagsBits = v85;
  v39._object = v28;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v39);
  swift_bridgeObjectRelease(v28, v40, v41, v42, v43, v44, v45, v46);
  v47._countAndFlagsBits = 0;
  v47._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v47);
  IntentDialog.init(stringInterpolation:)(v33);
  _GeneratedContentFallback.init(_:localeIdentifier:)(v30, 0, 0);
  v48 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v32, 0, 1, v48);
  v49 = sub_1002EFC40();
  v50 = sub_10025036C();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_10037FE9C, 0, v31, v32, &type metadata for WorkoutExtremeStatIntent, &type metadata for WorkoutStat, v49, v50);
  v98 = v50;
  IntentDialog.init<A, B>(from:)(v87, &type metadata for WorkoutExtremeStatIntent, &type metadata for WorkoutStat, v49, v50);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 2264));
  v78 = *(_QWORD *)(v0 + 2264);
  IntentParameter.wrappedValue.getter(v106);
  v77 = *(id *)(v0 + 1520);
  sub_100112258(v106);
  IntentParameter.wrappedValue.getter(v29);
  v51 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v92 + 48))(v29, 1, v94);
  v52 = *(_QWORD *)(v0 + 2456);
  if (v51)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 2456), &qword_100829C48);
    v53 = 0;
  }
  else
  {
    v54 = *(_QWORD *)(v0 + 2344);
    v55 = *(_QWORD *)(v0 + 2328);
    sub_10004F8C8(*(_QWORD *)(v0 + 2456), v54, type metadata accessor for WorkoutActivityEntity);
    sub_10001BE90(v52, &qword_100829C48);
    v53 = *(id *)(v54 + *(int *)(v55 + 20));
    sub_100011F54(v54, type metadata accessor for WorkoutActivityEntity);
  }
  v84 = *(_QWORD *)(v0 + 2472);
  v86 = *(_QWORD *)(v0 + 2464);
  v88 = *(_QWORD *)(v0 + 2456);
  v89 = *(_QWORD *)(v0 + 2448);
  v107 = *(_QWORD *)(v0 + 2440);
  v82 = *(_QWORD *)(v0 + 2424);
  v83 = *(_QWORD *)(v0 + 2416);
  v90 = *(_QWORD *)(v0 + 2432);
  v91 = *(_QWORD *)(v0 + 2408);
  v93 = *(_QWORD *)(v0 + 2400);
  v95 = *(_QWORD *)(v0 + 2392);
  v96 = *(_QWORD *)(v0 + 2384);
  v105 = *(_QWORD *)(v0 + 2376);
  v56 = *(_QWORD *)(v0 + 2368);
  v57 = *(_QWORD **)(v0 + 2360);
  v58 = *(int **)(v0 + 2352);
  v100 = *(_QWORD *)(v0 + 2344);
  v59 = *(_QWORD *)(v0 + 2320);
  v60 = *(_QWORD *)(v0 + 2312);
  v61 = *(_QWORD *)(v0 + 2304);
  v62 = *(uint64_t **)(v0 + 2296);
  v63 = *(_QWORD *)(v0 + 2288);
  *v57 = swift_getKeyPath(&unk_100638780);
  v64 = sub_100047110(&qword_1008302D8);
  swift_storeEnumTagMultiPayload(v57, v64, 0);
  *(_QWORD *)((char *)v57 + v58[5]) = v78;
  *(_QWORD *)((char *)v57 + v58[6]) = v77;
  *(_QWORD *)((char *)v57 + v58[7]) = v53;
  v65 = (_OWORD *)((char *)v57 + v58[8]);
  v66 = *v80;
  v67 = *(_OWORD *)(v0 + 2144);
  v65[1] = *(_OWORD *)(v0 + 2128);
  v65[2] = v67;
  *v65 = v66;
  v68 = *(_OWORD *)(v0 + 2160);
  v69 = *(_OWORD *)(v0 + 2176);
  v70 = *(_OWORD *)(v0 + 2208);
  v65[5] = *(_OWORD *)(v0 + 2192);
  v65[6] = v70;
  v65[3] = v68;
  v65[4] = v69;
  KeyPath = swift_getKeyPath(&unk_1006387B0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v60 + 104))(v59, enum case for ColorScheme.dark(_:), v61);
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))((char *)v62 + *(int *)(v63 + 28), v59, v61);
  *v62 = KeyPath;
  sub_10004F8C8((uint64_t)v57, v105, type metadata accessor for WorkoutStatView);
  sub_100021CC0((uint64_t)v62, v105 + *(int *)(v56 + 36), &qword_1008302B8);
  swift_bridgeObjectRetain(v117);
  swift_bridgeObjectRetain(v116);
  swift_bridgeObjectRetain(v114);
  swift_retain(v113);
  swift_retain(v115);
  swift_retain(v112);
  swift_retain(v111);
  swift_retain(v110);
  swift_retain(v109);
  swift_retain(v108);
  sub_10001BE90((uint64_t)v62, &qword_1008302B8);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
  sub_100011F54((uint64_t)v57, type metadata accessor for WorkoutStatView);
  v72 = *(_OWORD *)(v0 + 2144);
  *(_OWORD *)(v0 + 2048) = *(_OWORD *)(v0 + 2160);
  v73 = *(_OWORD *)(v0 + 2192);
  *(_OWORD *)(v0 + 2064) = *(_OWORD *)(v0 + 2176);
  *(_OWORD *)(v0 + 2080) = v73;
  *(_OWORD *)(v0 + 2096) = *(_OWORD *)(v0 + 2208);
  v74 = *(_OWORD *)(v0 + 2128);
  *(_OWORD *)(v0 + 2000) = *v80;
  *(_OWORD *)(v0 + 2016) = v74;
  *(_OWORD *)(v0 + 2032) = v72;
  *(_QWORD *)(v0 + 2224) = v104;
  *(_QWORD *)(v0 + 2232) = v103;
  *(_QWORD *)(v0 + 2240) = v102;
  v81 = sub_1002EFAEC();
  v79 = sub_100385E38();
  swift_bridgeObjectRetain(v117);
  swift_bridgeObjectRetain(v116);
  swift_bridgeObjectRetain(v114);
  swift_retain(v113);
  swift_retain(v115);
  swift_retain(v112);
  swift_retain(v111);
  swift_retain(v110);
  swift_retain(v109);
  swift_retain(v108);
  swift_retain(v104);
  swift_retain(v103);
  v75 = swift_retain(v102);
  static IntentResult.result<A, B, C>(value:opensIntent:dialog:view:)(v0 + 2000, v0 + 2224, v107, v105, &type metadata for WorkoutStat, &type metadata for OpenUnifiedWorkoutIntent, v56, v98, v75, v81, v79);
  swift_release_n(v102, 2);
  swift_release_n(v103, 2);
  swift_release_n(v104, 2);
  swift_release_n(v108, 2);
  swift_release_n(v109, 2);
  swift_release_n(v110, 2);
  swift_release_n(v111, 2);
  swift_release_n(v112, 2);
  swift_release_n(v115, 2);
  swift_release_n(v113, 2);
  swift_bridgeObjectRelease_n(v114, 2);
  swift_bridgeObjectRelease_n(v116, 2);
  swift_bridgeObjectRelease_n(v117, 2);

  sub_10001BE90(v105, &qword_1008302C0);
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v107, v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v107);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v105);
  swift_task_dealloc(v57);
  swift_task_dealloc(v100);
  swift_task_dealloc(v59);
  swift_task_dealloc(v62);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037D664()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = (_QWORD *)*v1;
  v3 = *(_QWORD *)(*v1 + 2512);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (!v0)
    return swift_task_switch(sub_10037D7B8, 0, 0);
  v5 = v2[309];
  v6 = v2[308];
  v7 = v2[307];
  v8 = v2[306];
  v9 = v2[305];
  v10 = v2[304];
  v11 = v2[301];
  v12 = v2[300];
  v15 = v2[299];
  v16 = v2[298];
  v17 = v2[297];
  v18 = v2[295];
  v19 = v2[293];
  v20 = v2[290];
  v13 = v2[287];
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_10037D7B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  double v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  double v25;
  id v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  unint64_t v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  Swift::String v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t KeyPath;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __n128 v75;
  id v77;
  uint64_t v78;
  unint64_t v79;
  __int128 *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v106 = (_QWORD *)(v0 + 1296);
  v99 = (_QWORD *)(v0 + 2256);
  v97 = (_QWORD *)(v0 + 2528);
  v1 = *(_QWORD **)(v0 + 2464);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 528));
  IntentParameter.wrappedValue.getter(v1);
  v2 = sub_100384C3C(v0 + 528, (uint64_t)v1, 2);
  v103 = v3;
  v104 = v2;
  v102 = v4;
  v5 = *(_QWORD *)(v0 + 1768);
  v6 = *(_QWORD *)(v0 + 1760);
  v7 = *(_QWORD *)(v0 + 1752);
  v8 = *(_QWORD *)(v0 + 1744);
  v9 = *(_QWORD *)(v0 + 1736);
  v10 = *(_QWORD *)(v0 + 1728);
  v11 = *(_QWORD *)(v0 + 1720);
  v12 = *(_QWORD *)(v0 + 1712);
  v13 = *(_QWORD *)(v0 + 1696);
  v14 = *(_QWORD *)(v0 + 1704);
  v15 = *(_QWORD *)(v0 + 1680);
  v16 = *(_QWORD *)(v0 + 1688);
  v17 = *(_QWORD *)(v0 + 1672);
  *(_QWORD *)(v0 + 2112) = *(_QWORD *)(v0 + 1664);
  v116 = v16;
  v117 = v17;
  *(_QWORD *)(v0 + 2120) = v17;
  *(_QWORD *)(v0 + 2128) = v15;
  *(_QWORD *)(v0 + 2136) = v16;
  *(_QWORD *)(v0 + 2144) = v13;
  v113 = v12;
  v114 = v14;
  *(_QWORD *)(v0 + 2152) = v14;
  *(_QWORD *)(v0 + 2160) = v12;
  v115 = v11;
  *(_QWORD *)(v0 + 2168) = v11;
  v111 = v8;
  v112 = v10;
  *(_QWORD *)(v0 + 2176) = v10;
  *(_QWORD *)(v0 + 2184) = v9;
  *(_QWORD *)(v0 + 2192) = v8;
  v109 = v6;
  v110 = v7;
  *(_QWORD *)(v0 + 2200) = v7;
  *(_QWORD *)(v0 + 2208) = v6;
  v108 = v5;
  *(_QWORD *)(v0 + 2216) = v5;
  v18 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
  v19 = sub_10024FF48();
  v20 = *(double *)(v19 + 32);
  LODWORD(v7) = *(unsigned __int8 *)(v19 + 40);
  swift_release(v19);
  if ((_DWORD)v7)
    v20 = 0.0;
  v21 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v18, v20);

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 2248));
  v22 = *(void **)(v0 + 2248);
  v23 = v21;
  v80 = (__int128 *)(v0 + 2112);
  v24 = sub_10024FF48();
  v25 = *(double *)(v24 + 64);
  swift_release(v24);
  v26 = objc_msgSend(v22, "localizedPaceStringWithDistance:overDuration:paceFormat:distanceType:", v23, FIUIPaceFormatForDistanceType(v9), v9, v25);

  v101 = v23;
  if (v26)
  {
    v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v28 = v27;

  }
  else
  {
    v28 = (CHWorkoutDetailHeartRateTableViewCell *)0xE200000000000000;
    v85 = 11565;
  }
  v29 = *(_QWORD **)(v0 + 2456);
  v30 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v31 = *(_QWORD *)(v0 + 2400);
  v32 = *(_QWORD *)(v0 + 2392);
  v33 = *(_QWORD *)(v0 + 2384);
  v92 = *(_QWORD *)(v0 + 2336);
  v94 = *(_QWORD *)(v0 + 2328);
  v34 = type metadata accessor for _GeneratedContentOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(3, 3);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v35);
  IntentParameter.wrappedValue.getter(v97);
  v36 = sub_1003827BC();
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:)(v97, &type metadata for WorkoutEventType, v36);
  v37._countAndFlagsBits = 32;
  v37._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
  EntityProperty.wrappedValue.getter(v99);
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v99, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v38._countAndFlagsBits = 8250;
  v38._object = (void *)0xE200000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v38);
  v39._countAndFlagsBits = v85;
  v39._object = v28;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v39);
  swift_bridgeObjectRelease(v28, v40, v41, v42, v43, v44, v45, v46);
  v47._countAndFlagsBits = 0;
  v47._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v47);
  IntentDialog.init(stringInterpolation:)(v33);
  _GeneratedContentFallback.init(_:localeIdentifier:)(v30, 0, 0);
  v48 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v32, 0, 1, v48);
  v49 = sub_1002EFC40();
  v50 = sub_10025036C();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_10037FE9C, 0, v31, v32, &type metadata for WorkoutExtremeStatIntent, &type metadata for WorkoutStat, v49, v50);
  v98 = v50;
  IntentDialog.init<A, B>(from:)(v87, &type metadata for WorkoutExtremeStatIntent, &type metadata for WorkoutStat, v49, v50);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 2264));
  v78 = *(_QWORD *)(v0 + 2264);
  IntentParameter.wrappedValue.getter(v106);
  v77 = *(id *)(v0 + 1520);
  sub_100112258(v106);
  IntentParameter.wrappedValue.getter(v29);
  v51 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v92 + 48))(v29, 1, v94);
  v52 = *(_QWORD *)(v0 + 2456);
  if (v51)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 2456), &qword_100829C48);
    v53 = 0;
  }
  else
  {
    v54 = *(_QWORD *)(v0 + 2344);
    v55 = *(_QWORD *)(v0 + 2328);
    sub_10004F8C8(*(_QWORD *)(v0 + 2456), v54, type metadata accessor for WorkoutActivityEntity);
    sub_10001BE90(v52, &qword_100829C48);
    v53 = *(id *)(v54 + *(int *)(v55 + 20));
    sub_100011F54(v54, type metadata accessor for WorkoutActivityEntity);
  }
  v84 = *(_QWORD *)(v0 + 2472);
  v86 = *(_QWORD *)(v0 + 2464);
  v88 = *(_QWORD *)(v0 + 2456);
  v89 = *(_QWORD *)(v0 + 2448);
  v107 = *(_QWORD *)(v0 + 2440);
  v82 = *(_QWORD *)(v0 + 2424);
  v83 = *(_QWORD *)(v0 + 2416);
  v90 = *(_QWORD *)(v0 + 2432);
  v91 = *(_QWORD *)(v0 + 2408);
  v93 = *(_QWORD *)(v0 + 2400);
  v95 = *(_QWORD *)(v0 + 2392);
  v96 = *(_QWORD *)(v0 + 2384);
  v105 = *(_QWORD *)(v0 + 2376);
  v56 = *(_QWORD *)(v0 + 2368);
  v57 = *(_QWORD **)(v0 + 2360);
  v58 = *(int **)(v0 + 2352);
  v100 = *(_QWORD *)(v0 + 2344);
  v59 = *(_QWORD *)(v0 + 2320);
  v60 = *(_QWORD *)(v0 + 2312);
  v61 = *(_QWORD *)(v0 + 2304);
  v62 = *(uint64_t **)(v0 + 2296);
  v63 = *(_QWORD *)(v0 + 2288);
  *v57 = swift_getKeyPath(&unk_100638780);
  v64 = sub_100047110(&qword_1008302D8);
  swift_storeEnumTagMultiPayload(v57, v64, 0);
  *(_QWORD *)((char *)v57 + v58[5]) = v78;
  *(_QWORD *)((char *)v57 + v58[6]) = v77;
  *(_QWORD *)((char *)v57 + v58[7]) = v53;
  v65 = (_OWORD *)((char *)v57 + v58[8]);
  v66 = *v80;
  v67 = *(_OWORD *)(v0 + 2144);
  v65[1] = *(_OWORD *)(v0 + 2128);
  v65[2] = v67;
  *v65 = v66;
  v68 = *(_OWORD *)(v0 + 2160);
  v69 = *(_OWORD *)(v0 + 2176);
  v70 = *(_OWORD *)(v0 + 2208);
  v65[5] = *(_OWORD *)(v0 + 2192);
  v65[6] = v70;
  v65[3] = v68;
  v65[4] = v69;
  KeyPath = swift_getKeyPath(&unk_1006387B0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v60 + 104))(v59, enum case for ColorScheme.dark(_:), v61);
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))((char *)v62 + *(int *)(v63 + 28), v59, v61);
  *v62 = KeyPath;
  sub_10004F8C8((uint64_t)v57, v105, type metadata accessor for WorkoutStatView);
  sub_100021CC0((uint64_t)v62, v105 + *(int *)(v56 + 36), &qword_1008302B8);
  swift_bridgeObjectRetain(v117);
  swift_bridgeObjectRetain(v116);
  swift_bridgeObjectRetain(v114);
  swift_retain(v113);
  swift_retain(v115);
  swift_retain(v112);
  swift_retain(v111);
  swift_retain(v110);
  swift_retain(v109);
  swift_retain(v108);
  sub_10001BE90((uint64_t)v62, &qword_1008302B8);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
  sub_100011F54((uint64_t)v57, type metadata accessor for WorkoutStatView);
  v72 = *(_OWORD *)(v0 + 2144);
  *(_OWORD *)(v0 + 2048) = *(_OWORD *)(v0 + 2160);
  v73 = *(_OWORD *)(v0 + 2192);
  *(_OWORD *)(v0 + 2064) = *(_OWORD *)(v0 + 2176);
  *(_OWORD *)(v0 + 2080) = v73;
  *(_OWORD *)(v0 + 2096) = *(_OWORD *)(v0 + 2208);
  v74 = *(_OWORD *)(v0 + 2128);
  *(_OWORD *)(v0 + 2000) = *v80;
  *(_OWORD *)(v0 + 2016) = v74;
  *(_OWORD *)(v0 + 2032) = v72;
  *(_QWORD *)(v0 + 2224) = v104;
  *(_QWORD *)(v0 + 2232) = v103;
  *(_QWORD *)(v0 + 2240) = v102;
  v81 = sub_1002EFAEC();
  v79 = sub_100385E38();
  swift_bridgeObjectRetain(v117);
  swift_bridgeObjectRetain(v116);
  swift_bridgeObjectRetain(v114);
  swift_retain(v113);
  swift_retain(v115);
  swift_retain(v112);
  swift_retain(v111);
  swift_retain(v110);
  swift_retain(v109);
  swift_retain(v108);
  swift_retain(v104);
  swift_retain(v103);
  v75 = swift_retain(v102);
  static IntentResult.result<A, B, C>(value:opensIntent:dialog:view:)(v0 + 2000, v0 + 2224, v107, v105, &type metadata for WorkoutStat, &type metadata for OpenUnifiedWorkoutIntent, v56, v98, v75, v81, v79);
  swift_release_n(v102, 2);
  swift_release_n(v103, 2);
  swift_release_n(v104, 2);
  swift_release_n(v108, 2);
  swift_release_n(v109, 2);
  swift_release_n(v110, 2);
  swift_release_n(v111, 2);
  swift_release_n(v112, 2);
  swift_release_n(v115, 2);
  swift_release_n(v113, 2);
  swift_bridgeObjectRelease_n(v114, 2);
  swift_bridgeObjectRelease_n(v116, 2);
  swift_bridgeObjectRelease_n(v117, 2);

  sub_10001BE90(v105, &qword_1008302C0);
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v107, v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v107);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v105);
  swift_task_dealloc(v57);
  swift_task_dealloc(v100);
  swift_task_dealloc(v59);
  swift_task_dealloc(v62);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037E104()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = (_QWORD *)*v1;
  v3 = *(_QWORD *)(*v1 + 2520);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (!v0)
    return swift_task_switch(sub_10037E258, 0, 0);
  v5 = v2[309];
  v6 = v2[308];
  v7 = v2[307];
  v8 = v2[306];
  v9 = v2[305];
  v10 = v2[304];
  v11 = v2[301];
  v12 = v2[300];
  v15 = v2[299];
  v16 = v2[298];
  v17 = v2[297];
  v18 = v2[295];
  v19 = v2[293];
  v20 = v2[290];
  v13 = v2[287];
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_10037E258()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  double v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  double v25;
  id v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  unint64_t v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  Swift::String v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t KeyPath;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __n128 v75;
  id v77;
  uint64_t v78;
  unint64_t v79;
  __int128 *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v106 = (_QWORD *)(v0 + 1296);
  v99 = (_QWORD *)(v0 + 2256);
  v97 = (_QWORD *)(v0 + 2528);
  v1 = *(_QWORD **)(v0 + 2464);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 272));
  IntentParameter.wrappedValue.getter(v1);
  v2 = sub_100384C3C(v0 + 272, (uint64_t)v1, 3);
  v103 = v3;
  v104 = v2;
  v102 = v4;
  v5 = *(_QWORD *)(v0 + 1656);
  v6 = *(_QWORD *)(v0 + 1648);
  v7 = *(_QWORD *)(v0 + 1640);
  v8 = *(_QWORD *)(v0 + 1632);
  v9 = *(_QWORD *)(v0 + 1624);
  v10 = *(_QWORD *)(v0 + 1616);
  v11 = *(_QWORD *)(v0 + 1608);
  v12 = *(_QWORD *)(v0 + 1600);
  v13 = *(_QWORD *)(v0 + 1584);
  v14 = *(_QWORD *)(v0 + 1592);
  v15 = *(_QWORD *)(v0 + 1568);
  v16 = *(_QWORD *)(v0 + 1576);
  v17 = *(_QWORD *)(v0 + 1560);
  *(_QWORD *)(v0 + 2112) = *(_QWORD *)(v0 + 1552);
  v116 = v16;
  v117 = v17;
  *(_QWORD *)(v0 + 2120) = v17;
  *(_QWORD *)(v0 + 2128) = v15;
  *(_QWORD *)(v0 + 2136) = v16;
  *(_QWORD *)(v0 + 2144) = v13;
  v113 = v12;
  v114 = v14;
  *(_QWORD *)(v0 + 2152) = v14;
  *(_QWORD *)(v0 + 2160) = v12;
  v115 = v11;
  *(_QWORD *)(v0 + 2168) = v11;
  v111 = v8;
  v112 = v10;
  *(_QWORD *)(v0 + 2176) = v10;
  *(_QWORD *)(v0 + 2184) = v9;
  *(_QWORD *)(v0 + 2192) = v8;
  v109 = v6;
  v110 = v7;
  *(_QWORD *)(v0 + 2200) = v7;
  *(_QWORD *)(v0 + 2208) = v6;
  v108 = v5;
  *(_QWORD *)(v0 + 2216) = v5;
  v18 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
  v19 = sub_10024FF48();
  v20 = *(double *)(v19 + 32);
  LODWORD(v7) = *(unsigned __int8 *)(v19 + 40);
  swift_release(v19);
  if ((_DWORD)v7)
    v20 = 0.0;
  v21 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v18, v20);

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 2248));
  v22 = *(void **)(v0 + 2248);
  v23 = v21;
  v80 = (__int128 *)(v0 + 2112);
  v24 = sub_10024FF48();
  v25 = *(double *)(v24 + 64);
  swift_release(v24);
  v26 = objc_msgSend(v22, "localizedPaceStringWithDistance:overDuration:paceFormat:distanceType:", v23, FIUIPaceFormatForDistanceType(v9), v9, v25);

  v101 = v23;
  if (v26)
  {
    v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v28 = v27;

  }
  else
  {
    v28 = (CHWorkoutDetailHeartRateTableViewCell *)0xE200000000000000;
    v85 = 11565;
  }
  v29 = *(_QWORD **)(v0 + 2456);
  v30 = *(_QWORD *)(v0 + 2432);
  v87 = *(_QWORD *)(v0 + 2408);
  v31 = *(_QWORD *)(v0 + 2400);
  v32 = *(_QWORD *)(v0 + 2392);
  v33 = *(_QWORD *)(v0 + 2384);
  v92 = *(_QWORD *)(v0 + 2336);
  v94 = *(_QWORD *)(v0 + 2328);
  v34 = type metadata accessor for _GeneratedContentOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(3, 3);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v35);
  IntentParameter.wrappedValue.getter(v97);
  v36 = sub_1003827BC();
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:)(v97, &type metadata for WorkoutEventType, v36);
  v37._countAndFlagsBits = 32;
  v37._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
  EntityProperty.wrappedValue.getter(v99);
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v99, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v38._countAndFlagsBits = 8250;
  v38._object = (void *)0xE200000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v38);
  v39._countAndFlagsBits = v85;
  v39._object = v28;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v39);
  swift_bridgeObjectRelease(v28, v40, v41, v42, v43, v44, v45, v46);
  v47._countAndFlagsBits = 0;
  v47._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v47);
  IntentDialog.init(stringInterpolation:)(v33);
  _GeneratedContentFallback.init(_:localeIdentifier:)(v30, 0, 0);
  v48 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v32, 0, 1, v48);
  v49 = sub_1002EFC40();
  v50 = sub_10025036C();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_10037FE9C, 0, v31, v32, &type metadata for WorkoutExtremeStatIntent, &type metadata for WorkoutStat, v49, v50);
  v98 = v50;
  IntentDialog.init<A, B>(from:)(v87, &type metadata for WorkoutExtremeStatIntent, &type metadata for WorkoutStat, v49, v50);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 2264));
  v78 = *(_QWORD *)(v0 + 2264);
  IntentParameter.wrappedValue.getter(v106);
  v77 = *(id *)(v0 + 1520);
  sub_100112258(v106);
  IntentParameter.wrappedValue.getter(v29);
  v51 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v92 + 48))(v29, 1, v94);
  v52 = *(_QWORD *)(v0 + 2456);
  if (v51)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 2456), &qword_100829C48);
    v53 = 0;
  }
  else
  {
    v54 = *(_QWORD *)(v0 + 2344);
    v55 = *(_QWORD *)(v0 + 2328);
    sub_10004F8C8(*(_QWORD *)(v0 + 2456), v54, type metadata accessor for WorkoutActivityEntity);
    sub_10001BE90(v52, &qword_100829C48);
    v53 = *(id *)(v54 + *(int *)(v55 + 20));
    sub_100011F54(v54, type metadata accessor for WorkoutActivityEntity);
  }
  v84 = *(_QWORD *)(v0 + 2472);
  v86 = *(_QWORD *)(v0 + 2464);
  v88 = *(_QWORD *)(v0 + 2456);
  v89 = *(_QWORD *)(v0 + 2448);
  v107 = *(_QWORD *)(v0 + 2440);
  v82 = *(_QWORD *)(v0 + 2424);
  v83 = *(_QWORD *)(v0 + 2416);
  v90 = *(_QWORD *)(v0 + 2432);
  v91 = *(_QWORD *)(v0 + 2408);
  v93 = *(_QWORD *)(v0 + 2400);
  v95 = *(_QWORD *)(v0 + 2392);
  v96 = *(_QWORD *)(v0 + 2384);
  v105 = *(_QWORD *)(v0 + 2376);
  v56 = *(_QWORD *)(v0 + 2368);
  v57 = *(_QWORD **)(v0 + 2360);
  v58 = *(int **)(v0 + 2352);
  v100 = *(_QWORD *)(v0 + 2344);
  v59 = *(_QWORD *)(v0 + 2320);
  v60 = *(_QWORD *)(v0 + 2312);
  v61 = *(_QWORD *)(v0 + 2304);
  v62 = *(uint64_t **)(v0 + 2296);
  v63 = *(_QWORD *)(v0 + 2288);
  *v57 = swift_getKeyPath(&unk_100638780);
  v64 = sub_100047110(&qword_1008302D8);
  swift_storeEnumTagMultiPayload(v57, v64, 0);
  *(_QWORD *)((char *)v57 + v58[5]) = v78;
  *(_QWORD *)((char *)v57 + v58[6]) = v77;
  *(_QWORD *)((char *)v57 + v58[7]) = v53;
  v65 = (_OWORD *)((char *)v57 + v58[8]);
  v66 = *v80;
  v67 = *(_OWORD *)(v0 + 2144);
  v65[1] = *(_OWORD *)(v0 + 2128);
  v65[2] = v67;
  *v65 = v66;
  v68 = *(_OWORD *)(v0 + 2160);
  v69 = *(_OWORD *)(v0 + 2176);
  v70 = *(_OWORD *)(v0 + 2208);
  v65[5] = *(_OWORD *)(v0 + 2192);
  v65[6] = v70;
  v65[3] = v68;
  v65[4] = v69;
  KeyPath = swift_getKeyPath(&unk_1006387B0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v60 + 104))(v59, enum case for ColorScheme.dark(_:), v61);
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))((char *)v62 + *(int *)(v63 + 28), v59, v61);
  *v62 = KeyPath;
  sub_10004F8C8((uint64_t)v57, v105, type metadata accessor for WorkoutStatView);
  sub_100021CC0((uint64_t)v62, v105 + *(int *)(v56 + 36), &qword_1008302B8);
  swift_bridgeObjectRetain(v117);
  swift_bridgeObjectRetain(v116);
  swift_bridgeObjectRetain(v114);
  swift_retain(v113);
  swift_retain(v115);
  swift_retain(v112);
  swift_retain(v111);
  swift_retain(v110);
  swift_retain(v109);
  swift_retain(v108);
  sub_10001BE90((uint64_t)v62, &qword_1008302B8);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
  sub_100011F54((uint64_t)v57, type metadata accessor for WorkoutStatView);
  v72 = *(_OWORD *)(v0 + 2144);
  *(_OWORD *)(v0 + 2048) = *(_OWORD *)(v0 + 2160);
  v73 = *(_OWORD *)(v0 + 2192);
  *(_OWORD *)(v0 + 2064) = *(_OWORD *)(v0 + 2176);
  *(_OWORD *)(v0 + 2080) = v73;
  *(_OWORD *)(v0 + 2096) = *(_OWORD *)(v0 + 2208);
  v74 = *(_OWORD *)(v0 + 2128);
  *(_OWORD *)(v0 + 2000) = *v80;
  *(_OWORD *)(v0 + 2016) = v74;
  *(_OWORD *)(v0 + 2032) = v72;
  *(_QWORD *)(v0 + 2224) = v104;
  *(_QWORD *)(v0 + 2232) = v103;
  *(_QWORD *)(v0 + 2240) = v102;
  v81 = sub_1002EFAEC();
  v79 = sub_100385E38();
  swift_bridgeObjectRetain(v117);
  swift_bridgeObjectRetain(v116);
  swift_bridgeObjectRetain(v114);
  swift_retain(v113);
  swift_retain(v115);
  swift_retain(v112);
  swift_retain(v111);
  swift_retain(v110);
  swift_retain(v109);
  swift_retain(v108);
  swift_retain(v104);
  swift_retain(v103);
  v75 = swift_retain(v102);
  static IntentResult.result<A, B, C>(value:opensIntent:dialog:view:)(v0 + 2000, v0 + 2224, v107, v105, &type metadata for WorkoutStat, &type metadata for OpenUnifiedWorkoutIntent, v56, v98, v75, v81, v79);
  swift_release_n(v102, 2);
  swift_release_n(v103, 2);
  swift_release_n(v104, 2);
  swift_release_n(v108, 2);
  swift_release_n(v109, 2);
  swift_release_n(v110, 2);
  swift_release_n(v111, 2);
  swift_release_n(v112, 2);
  swift_release_n(v115, 2);
  swift_release_n(v113, 2);
  swift_bridgeObjectRelease_n(v114, 2);
  swift_bridgeObjectRelease_n(v116, 2);
  swift_bridgeObjectRelease_n(v117, 2);

  sub_10001BE90(v105, &qword_1008302C0);
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v107, v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v107);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v105);
  swift_task_dealloc(v57);
  swift_task_dealloc(v100);
  swift_task_dealloc(v59);
  swift_task_dealloc(v62);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037EBA4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 536) = v2;
  *(_BYTE *)(v3 + 584) = a2;
  *(_QWORD *)(v3 + 528) = a1;
  v4 = sub_100047110(&qword_100829C48);
  *(_QWORD *)(v3 + 544) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100821E38);
  *(_QWORD *)(v3 + 552) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100821E10);
  *(_QWORD *)(v3 + 560) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 568) = v7;
  *(_QWORD *)(v3 + 576) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10037EC58, 0, 0);
}

void sub_10037EC58()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  __n128 v11;
  _QWORD *v12;
  Class isa;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Class v17;
  uint64_t v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  const char *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;

  v1 = *(_BYTE *)(v0 + 584) & 1;
  sub_100047110(&qword_1008201E0);
  v2 = type metadata accessor for AppDependencyManager(0);
  v76 = 0u;
  v77 = 0u;
  *(_QWORD *)&v78 = 0;
  v3 = static AppDependencyManager.shared.getter(v2);
  v4 = AppDependency.__allocating_init(key:manager:)(&v76, v3);
  v5 = sub_100047110(&qword_1008201E8);
  *(_QWORD *)&v78 = 0;
  v76 = 0u;
  v77 = 0u;
  v6 = static AppDependencyManager.shared.getter(v5);
  v7 = AppDependency.__allocating_init(key:manager:)(&v76, v6);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v8 = *(id *)(v0 + 240);
  sub_100112258((_QWORD *)(v0 + 16));
  sub_1004891F4(v8, v1);
  v10 = v9;

  swift_release(v4);
  v11 = swift_release(v7);
  v75 = v10;
  v12 = *(_QWORD **)(v0 + 552);
  if (*(_QWORD *)v10->cellPadding)
  {
    isa = v10[1].super.super.super.super.isa;
    v14 = *(_QWORD *)v10[1].heartRateController;
    v15 = *(_QWORD *)v10[1].cellPadding;
    v16 = *(_QWORD *)v10[1].cellInset;
    v17 = v10[2].super.super.super.super.isa;
    v18 = *(_QWORD *)v10[2].cellPadding;
    v19 = (CHWorkoutDetailHeartRateTableViewCell *)v10[3].super.super.super.super.isa;
    v73 = *(_QWORD *)(v0 + 560);
    v71 = *(_QWORD *)(v0 + 568);
    swift_retain(isa);
    swift_retain(v14);
    swift_retain(v15);
    swift_retain(v16);
    swift_retain(v17);
    swift_retain(v18);
    swift_bridgeObjectRetain(v19);
    EntityProperty.wrappedValue.getter(v12);
    swift_release(isa);
    swift_release(v14);
    swift_release(v15);
    swift_release(v16);
    swift_release(v17);
    swift_release(v18);
    swift_bridgeObjectRelease(v19, v20, v21, v22, v23, v24, v25, v26);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v71 + 48))(v12, 1, v73) != 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 568) + 32))(*(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 552), *(_QWORD *)(v0 + 560));
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 568) + 56))(*(_QWORD *)(v0 + 552), 1, 1, *(_QWORD *)(v0 + 560), v11);
  }
  v27 = *(_QWORD *)(v0 + 552);
  v28 = objc_msgSend((id)objc_opt_self(NSUnitLength), "meters");
  v29 = sub_10001E724(0, &qword_100821EC8, NSUnitLength_ptr);
  Measurement.init(value:unit:)(v28, v29, 0.0);
  sub_10001BE90(v27, &qword_100821E38);
LABEL_6:
  v30 = *(_QWORD *)(v0 + 576);
  v31 = swift_task_alloc(32);
  *(_QWORD *)(v31 + 16) = v30;
  sub_10059FABC((uint64_t (*)(uint64_t *, __n128))sub_100385ED4);
  v33 = *(_QWORD *)v75->cellPadding;
  if (v33 < v32)
  {
    __break(1u);
  }
  else
  {
    sub_10011FB24(v32, v33);
    swift_task_dealloc(v31);
    if (*(_QWORD *)v75->cellPadding)
    {
      sub_10037FFEC(v75, &v76);
      v41 = *(_QWORD *)(v0 + 576);
      v42 = *(_QWORD *)(v0 + 568);
      v43 = *(_QWORD *)(v0 + 560);
      v74 = *(_QWORD *)(v0 + 552);
      v52 = *(_QWORD *)(v0 + 544);
      v53 = *(_OWORD **)(v0 + 528);
      swift_bridgeObjectRelease(v75, v54, v55, v56, v57, v58, v59, v60);
      v70 = v78;
      v72 = v77;
      v69 = v79;
      v61 = v80;
      v62 = type metadata accessor for WorkoutActivityEntity(0);
      v68 = v76;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v52, 1, 1, v62);
      *(_QWORD *)(v0 + 520) = 0;
      *(_OWORD *)(v0 + 488) = 0u;
      *(_OWORD *)(v0 + 504) = 0u;
      *(_OWORD *)(v0 + 456) = 0u;
      *(_OWORD *)(v0 + 472) = 0u;
      *(_OWORD *)(v0 + 384) = v68;
      *(_OWORD *)(v0 + 400) = v72;
      *(_OWORD *)(v0 + 416) = v70;
      *(_OWORD *)(v0 + 432) = v69;
      *(_QWORD *)(v0 + 448) = v61;
      sub_100251344(v52, (_QWORD *)(v0 + 456), (_QWORD *)(v0 + 384), (uint64_t *)(v0 + 272));
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
      v63 = *(_OWORD *)(v0 + 272);
      v64 = *(_OWORD *)(v0 + 304);
      v53[1] = *(_OWORD *)(v0 + 288);
      v53[2] = v64;
      *v53 = v63;
      v65 = *(_OWORD *)(v0 + 320);
      v66 = *(_OWORD *)(v0 + 336);
      v67 = *(_OWORD *)(v0 + 368);
      v53[5] = *(_OWORD *)(v0 + 352);
      v53[6] = v67;
      v53[3] = v65;
      v53[4] = v66;
      swift_task_dealloc(v41);
      swift_task_dealloc(v74);
      swift_task_dealloc(v52);
    }
    else
    {
      v44 = *(_QWORD *)(v0 + 576);
      v45 = *(_QWORD *)(v0 + 568);
      v46 = *(_QWORD *)(v0 + 560);
      swift_bridgeObjectRelease(v75, v34, v35, v36, v37, v38, v39, v40);
      v47 = sub_100385EF0();
      v48 = swift_allocError(&type metadata for WorkoutExtremeStatIntentError, v47, 0, 0);
      *v49 = 3;
      swift_willThrow(v48);
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
      v50 = *(_QWORD *)(v0 + 552);
      v51 = *(_QWORD *)(v0 + 544);
      swift_task_dealloc(*(_QWORD *)(v0 + 576));
      swift_task_dealloc(v50);
      swift_task_dealloc(v51);
    }
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10037F0EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[67] = v1;
  v2[66] = a1;
  v3 = sub_100047110(&qword_100829C48);
  v2[68] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10037F14C, 0, 0);
}

uint64_t sub_10037F14C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  sub_100047110(&qword_1008201E0);
  v1 = type metadata accessor for AppDependencyManager(0);
  v13 = 0u;
  v14 = 0u;
  v15 = 0;
  v2 = static AppDependencyManager.shared.getter(v1);
  v0[69] = AppDependency.__allocating_init(key:manager:)(&v13, v2);
  v3 = sub_100047110(&qword_1008201E8);
  v15 = 0;
  v13 = 0u;
  v14 = 0u;
  v4 = static AppDependencyManager.shared.getter(v3);
  v0[70] = AppDependency.__allocating_init(key:manager:)(&v13, v4);
  v5 = sub_100047110(&qword_100822D10);
  v15 = 0;
  v13 = 0u;
  v14 = 0u;
  v6 = static AppDependencyManager.shared.getter(v5);
  v7 = AppDependency.__allocating_init(key:manager:)(&v13, v6);
  v0[71] = v7;
  IntentParameter.wrappedValue.getter(v0 + 2);
  v8 = (void *)v0[30];
  v0[72] = v8;
  v9 = v8;
  sub_100112258(v0 + 2);
  v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1008322B0 + dword_1008322B0);
  v10 = (_QWORD *)swift_task_alloc(unk_1008322B4);
  v0[73] = v10;
  *v10 = v0;
  v10[1] = sub_10037F2A0;
  return v12((uint64_t)v9, v7);
}

uint64_t sub_10037F2A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 584);
  v3 = *(void **)(*(_QWORD *)v1 + 576);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 568);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 560);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 552);
  *(_QWORD *)(*(_QWORD *)v1 + 592) = a1;
  swift_task_dealloc(v2);

  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  return swift_task_switch(sub_10037F330, 0, 0);
}

uint64_t sub_10037F330(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _OWORD *v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[3];
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;

  v9 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 592);
  if (*(_QWORD *)v9->cellPadding)
  {
    sub_10038076C(v9, (uint64_t)v35);
    v13 = *(_QWORD *)(v8 + 544);
    v14 = *(_OWORD **)(v8 + 528);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 592), v15, v16, v17, v18, v19, v20, v21);
    v33 = v35[1];
    v34 = v35[2];
    v22 = v36;
    v23 = v37;
    v24 = v38;
    v25 = type metadata accessor for WorkoutActivityEntity(0);
    v32 = v35[0];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v13, 1, 1, v25);
    *(_OWORD *)(v8 + 456) = v32;
    *(_OWORD *)(v8 + 472) = v33;
    *(_OWORD *)(v8 + 488) = v34;
    *(_QWORD *)(v8 + 504) = v22;
    *(_QWORD *)(v8 + 512) = v23;
    *(_QWORD *)(v8 + 520) = v24;
    *(_OWORD *)(v8 + 384) = 0u;
    *(_OWORD *)(v8 + 400) = 0u;
    *(_OWORD *)(v8 + 416) = 0u;
    *(_OWORD *)(v8 + 432) = 0u;
    *(_QWORD *)(v8 + 448) = 0;
    sub_100251344(v13, (_QWORD *)(v8 + 456), (_QWORD *)(v8 + 384), (uint64_t *)(v8 + 272));
    v26 = *(_OWORD *)(v8 + 272);
    v27 = *(_OWORD *)(v8 + 304);
    v14[1] = *(_OWORD *)(v8 + 288);
    v14[2] = v27;
    *v14 = v26;
    v28 = *(_OWORD *)(v8 + 320);
    v29 = *(_OWORD *)(v8 + 336);
    v30 = *(_OWORD *)(v8 + 368);
    v14[5] = *(_OWORD *)(v8 + 352);
    v14[6] = v30;
    v14[3] = v28;
    v14[4] = v29;
    swift_task_dealloc(v13);
  }
  else
  {
    swift_bridgeObjectRelease(v9, a2, a3, a4, a5, a6, a7, a8);
    v10 = sub_100385EF0();
    v11 = swift_allocError(&type metadata for WorkoutExtremeStatIntentError, v10, 0, 0);
    *v12 = 2;
    swift_willThrow(v11);
    swift_task_dealloc(*(_QWORD *)(v8 + 544));
  }
  return (*(uint64_t (**)(void))(v8 + 8))();
}

uint64_t sub_10037F4C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v2[195] = v1;
  v2[194] = a1;
  v3 = type metadata accessor for StepType(0);
  v2[196] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[197] = v4;
  v2[198] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100830330);
  v2[199] = v5;
  v2[200] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100047110(&qword_100830338) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[201] = swift_task_alloc(v6);
  v2[202] = swift_task_alloc(v6);
  v2[203] = swift_task_alloc(v6);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100047110(&qword_100829C48) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[204] = swift_task_alloc(v7);
  v2[205] = swift_task_alloc(v7);
  v8 = type metadata accessor for WorkoutActivityEntity(0);
  v2[206] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[207] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[208] = swift_task_alloc(v10);
  v2[209] = swift_task_alloc(v10);
  v2[210] = swift_task_alloc(v10);
  v2[211] = swift_task_alloc(v10);
  return swift_task_switch(sub_10037F610, 0, 0);
}

uint64_t sub_10037F610()
{
  uint64_t v0;
  id v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  id v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  id v28;
  id v29;
  id v30;
  const char *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _OWORD *v103;
  SEL v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  uint64_t (*v116)(void);
  CHWorkoutDetailHeartRateTableViewCell *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  CHWorkoutDetailHeartRateTableViewCell *v135;
  uint64_t v136;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(id *)(v0 + 240);
  sub_100112258((_QWORD *)(v0 + 16));
  v2 = objc_msgSend(v1, "isIntervalWorkout");

  if (!v2)
    goto LABEL_34;
  v3 = sub_10038B950();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 528));
  v10 = *(_OWORD *)(v0 + 736);
  *(_OWORD *)(v0 + 976) = *(_OWORD *)(v0 + 720);
  *(_OWORD *)(v0 + 992) = v10;
  v11 = *(_OWORD *)(v0 + 768);
  *(_OWORD *)(v0 + 1008) = *(_OWORD *)(v0 + 752);
  *(_OWORD *)(v0 + 1024) = v11;
  v12 = *(_OWORD *)(v0 + 672);
  *(_OWORD *)(v0 + 912) = *(_OWORD *)(v0 + 656);
  *(_OWORD *)(v0 + 928) = v12;
  v13 = *(_OWORD *)(v0 + 704);
  *(_OWORD *)(v0 + 944) = *(_OWORD *)(v0 + 688);
  *(_OWORD *)(v0 + 960) = v13;
  v14 = *(_OWORD *)(v0 + 608);
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 592);
  *(_OWORD *)(v0 + 864) = v14;
  v15 = *(_OWORD *)(v0 + 640);
  *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 624);
  *(_OWORD *)(v0 + 896) = v15;
  v16 = *(_OWORD *)(v0 + 544);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v0 + 800) = v16;
  v17 = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 560);
  *(_OWORD *)(v0 + 832) = v17;
  v18 = *(id *)(v0 + 1008);
  sub_100112258((_QWORD *)(v0 + 784));
  sub_10038BA64(v18);
  v117 = v19;

  swift_release(v3);
  swift_release(v5);
  swift_release(v7);
  swift_release(v9);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 272));
  v20 = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v0 + 1232) = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 1248) = v20;
  v21 = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 1264) = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v0 + 1280) = v21;
  v22 = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v0 + 1168) = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v0 + 1184) = v22;
  v23 = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v0 + 1200) = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 1216) = v23;
  v24 = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v0 + 1104) = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v0 + 1120) = v24;
  v25 = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 1136) = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v0 + 1152) = v25;
  v26 = *(_OWORD *)(v0 + 288);
  *(_OWORD *)(v0 + 1040) = *(_OWORD *)(v0 + 272);
  *(_OWORD *)(v0 + 1056) = v26;
  v27 = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v0 + 1072) = *(_OWORD *)(v0 + 304);
  *(_OWORD *)(v0 + 1088) = v27;
  v28 = *(id *)(v0 + 1264);
  sub_100112258((_QWORD *)(v0 + 1040));
  v29 = objc_msgSend(v28, "sourceRevision");
  v30 = objc_msgSend(v29, "source");

  LODWORD(v29) = objc_msgSend(v30, "_hasFirstPartyBundleID");
  if (!(_DWORD)v29)
  {
    v135 = v117;
    goto LABEL_31;
  }
  v38 = v117;
  v39 = *(_QWORD *)v117->cellPadding;
  if (!v39)
  {
    v135 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
    goto LABEL_28;
  }
  v40 = *(_QWORD *)(v0 + 1656);
  v125 = *(_QWORD *)(v0 + 1592);
  v127 = *(_QWORD *)(v0 + 1648);
  v41 = *(_QWORD *)(v0 + 1576);
  v121 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v42 = (uint64_t)v117 + v121;
  v129 = v40;
  v43 = *(_QWORD *)(v40 + 72);
  v123 = enum case for StepType.work(_:);
  swift_bridgeObjectRetain(v117);
  v135 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
  v131 = v43;
  v133 = v41;
  do
  {
    v52 = *(_QWORD *)(v0 + 1688);
    v53 = sub_10004F8C8(v42, v52, type metadata accessor for WorkoutActivityEntity);
    v54 = *(_QWORD *)(v0 + 1624);
    v55 = *(_QWORD *)(v0 + 1568);
    if (*(_QWORD *)(v52 + *(int *)(v127 + 32)))
    {
      WorkoutStep.stepType.getter(v53);
      v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
      v56(v54, 0, 1, v55);
    }
    else
    {
      v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
      v56(*(_QWORD *)(v0 + 1624), 1, 1, v55);
    }
    v57 = *(_QWORD *)(v0 + 1624);
    v58 = *(_QWORD *)(v0 + 1616);
    v59 = *(_QWORD *)(v0 + 1600);
    v60 = *(_QWORD *)(v0 + 1568);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 104))(v58, v123, v60);
    v56(v58, 0, 1, v60);
    v61 = v59 + *(int *)(v125 + 48);
    sub_100021CC0(v57, v59, &qword_100830338);
    sub_100021CC0(v58, v61, &qword_100830338);
    v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
    if (v62(v59, 1, v60) == 1)
    {
      if (v62(v61, 1, *(_QWORD *)(v0 + 1568)) == 1)
      {
        v63 = *(_QWORD *)(v0 + 1624);
        v64 = *(_QWORD *)(v0 + 1616);
        sub_10001BE90(*(_QWORD *)(v0 + 1600), &qword_100830338);
        sub_10001BE90(v64, &qword_100830338);
        sub_10001BE90(v63, &qword_100830338);
LABEL_17:
        sub_10004F8C8(*(_QWORD *)(v0 + 1688), *(_QWORD *)(v0 + 1640), type metadata accessor for WorkoutActivityEntity);
        v76 = 0;
        goto LABEL_19;
      }
      goto LABEL_15;
    }
    v65 = *(_QWORD *)(v0 + 1568);
    sub_100021CC0(*(_QWORD *)(v0 + 1600), *(_QWORD *)(v0 + 1608), &qword_100830338);
    if (v62(v61, 1, v65) == 1)
    {
      (*(void (**)(_QWORD, _QWORD))(v133 + 8))(*(_QWORD *)(v0 + 1608), *(_QWORD *)(v0 + 1568));
LABEL_15:
      v66 = *(_QWORD *)(v0 + 1624);
      v67 = *(_QWORD *)(v0 + 1616);
      sub_10001BE90(*(_QWORD *)(v0 + 1600), &qword_100830330);
      sub_10001BE90(v67, &qword_100830338);
      sub_10001BE90(v66, &qword_100830338);
      goto LABEL_18;
    }
    v68 = *(_QWORD *)(v0 + 1624);
    v119 = *(_QWORD *)(v0 + 1616);
    v69 = *(_QWORD *)(v0 + 1608);
    v70 = *(_QWORD *)(v0 + 1600);
    v71 = *(_QWORD *)(v0 + 1584);
    v72 = *(_QWORD *)(v0 + 1568);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 32))(v71, v61, v72);
    v73 = sub_1000083D8(&qword_100830340, (uint64_t (*)(uint64_t))&type metadata accessor for StepType, (uint64_t)&protocol conformance descriptor for StepType);
    v74 = dispatch thunk of static Equatable.== infix(_:_:)(v69, v71, v72, v73);
    v75 = *(void (**)(uint64_t, uint64_t))(v133 + 8);
    v75(v69, v72);
    v75(v71, v72);
    sub_10001BE90(v70, &qword_100830338);
    sub_10001BE90(v119, &qword_100830338);
    sub_10001BE90(v68, &qword_100830338);
    if ((v74 & 1) != 0)
      goto LABEL_17;
LABEL_18:
    v76 = 1;
LABEL_19:
    v77 = *(_QWORD *)(v0 + 1688);
    v78 = *(_QWORD *)(v0 + 1648);
    v79 = *(_QWORD *)(v0 + 1640);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56))(v79, v76, 1, v78);
    sub_100011F54(v77, type metadata accessor for WorkoutActivityEntity);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v79, 1, v78) == 1)
    {
      sub_10001BE90(*(_QWORD *)(v0 + 1640), &qword_100829C48);
      v51 = v131;
      v41 = v133;
    }
    else
    {
      v80 = *(_QWORD *)(v0 + 1680);
      v81 = *(_QWORD *)(v0 + 1672);
      sub_100253B3C(*(_QWORD *)(v0 + 1640), v80);
      sub_100253B3C(v80, v81);
      if ((swift_isUniquelyReferenced_nonNull_native(v135) & 1) == 0)
        v135 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141124(0, *(_QWORD *)v135->cellPadding + 1, 1, (unint64_t)v135);
      v41 = v133;
      v83 = *(_QWORD *)v135->cellPadding;
      v82 = *(_QWORD *)v135->cellInset;
      if (v83 >= v82 >> 1)
        v135 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141124(v82 > 1, v83 + 1, 1, (unint64_t)v135);
      v84 = *(_QWORD *)(v0 + 1672);
      *(_QWORD *)v135->cellPadding = v83 + 1;
      v85 = (uint64_t)v135 + v121 + v83 * v131;
      v51 = v131;
      sub_100253B3C(v84, v85);
    }
    v42 += v51;
    --v39;
  }
  while (v39);
  v38 = v117;
  swift_bridgeObjectRelease(v117, v44, v45, v46, v47, v48, v49, v50);
LABEL_28:
  if (*(_QWORD *)v135->cellPadding)
  {
    swift_bridgeObjectRelease(v38, v31, v32, v33, v34, v35, v36, v37);
  }
  else
  {
    swift_bridgeObjectRelease(v135, v31, v32, v33, v34, v35, v36, v37);
    v135 = v38;
  }
LABEL_31:
  if (!*(_QWORD *)v135->cellPadding)
  {
    swift_bridgeObjectRelease(v135, v31, v32, v33, v34, v35, v36, v37);
LABEL_34:
    v86 = sub_100385EF0();
    v87 = swift_allocError(&type metadata for WorkoutExtremeStatIntentError, v86, 0, 0);
    *v88 = 1;
    swift_willThrow(v87);
    v89 = *(_QWORD *)(v0 + 1680);
    v90 = *(_QWORD *)(v0 + 1672);
    v91 = *(_QWORD *)(v0 + 1664);
    v92 = *(_QWORD *)(v0 + 1640);
    v93 = *(_QWORD *)(v0 + 1632);
    v94 = *(_QWORD *)(v0 + 1624);
    v95 = *(_QWORD *)(v0 + 1616);
    v96 = *(_QWORD *)(v0 + 1608);
    v97 = *(_QWORD *)(v0 + 1600);
    v136 = *(_QWORD *)(v0 + 1584);
    swift_task_dealloc(*(_QWORD *)(v0 + 1688));
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v91);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    swift_task_dealloc(v94);
    swift_task_dealloc(v95);
    swift_task_dealloc(v96);
    swift_task_dealloc(v97);
    swift_task_dealloc(v136);
    v116 = *(uint64_t (**)(void))(v0 + 8);
    return v116();
  }
  sub_100380EF4(v135, *(_QWORD *)(v0 + 1664));
  v118 = *(_QWORD *)(v0 + 1688);
  v120 = *(_QWORD *)(v0 + 1680);
  v99 = *(_QWORD *)(v0 + 1664);
  v100 = *(_QWORD *)(v0 + 1656);
  v101 = *(_QWORD *)(v0 + 1648);
  v122 = *(_QWORD *)(v0 + 1672);
  v124 = *(_QWORD *)(v0 + 1640);
  v102 = *(_QWORD *)(v0 + 1632);
  v126 = *(_QWORD *)(v0 + 1624);
  v128 = *(_QWORD *)(v0 + 1616);
  v130 = *(_QWORD *)(v0 + 1608);
  v132 = *(_QWORD *)(v0 + 1600);
  v134 = *(_QWORD *)(v0 + 1584);
  v103 = *(_OWORD **)(v0 + 1552);
  swift_bridgeObjectRelease(v135, v104, v105, v106, v107, v108, v109, v110);
  sub_10004F8C8(v99, v102, type metadata accessor for WorkoutActivityEntity);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v100 + 56))(v102, 0, 1, v101);
  *(_OWORD *)(v0 + 1520) = 0u;
  *(_OWORD *)(v0 + 1536) = 0u;
  *(_OWORD *)(v0 + 1488) = 0u;
  *(_OWORD *)(v0 + 1504) = 0u;
  *(_OWORD *)(v0 + 1456) = 0u;
  *(_OWORD *)(v0 + 1472) = 0u;
  *(_OWORD *)(v0 + 1424) = 0u;
  *(_OWORD *)(v0 + 1440) = 0u;
  *(_OWORD *)(v0 + 1408) = 0u;
  sub_100251344(v102, (_QWORD *)(v0 + 1408), (_QWORD *)(v0 + 1480), (uint64_t *)(v0 + 1296));
  sub_100011F54(v99, type metadata accessor for WorkoutActivityEntity);
  v112 = *(_OWORD *)(v0 + 1312);
  v111 = *(_OWORD *)(v0 + 1328);
  *v103 = *(_OWORD *)(v0 + 1296);
  v103[1] = v112;
  v103[2] = v111;
  v113 = *(_OWORD *)(v0 + 1392);
  v115 = *(_OWORD *)(v0 + 1344);
  v114 = *(_OWORD *)(v0 + 1360);
  v103[5] = *(_OWORD *)(v0 + 1376);
  v103[6] = v113;
  v103[3] = v115;
  v103[4] = v114;
  swift_task_dealloc(v118);
  swift_task_dealloc(v120);
  swift_task_dealloc(v122);
  swift_task_dealloc(v99);
  swift_task_dealloc(v124);
  swift_task_dealloc(v102);
  swift_task_dealloc(v126);
  swift_task_dealloc(v128);
  swift_task_dealloc(v130);
  swift_task_dealloc(v132);
  swift_task_dealloc(v134);
  v116 = *(uint64_t (**)(void))(v0 + 8);
  return v116();
}

uint64_t sub_10037FE9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v0 = sub_100047110(&qword_100830318);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - v5;
  KeyPath = swift_getKeyPath(&unk_1006387E0);
  v8 = sub_10024FB70();
  static _DialogBuilderEntity.buildExpression<A>(_:)(KeyPath, v8);
  swift_release(KeyPath);
  v9 = swift_getKeyPath(&unk_100638808);
  static _DialogBuilderEntity.buildExpression<A>(_:)(v9, v8);
  swift_release(v9);
  v10 = sub_10025036C();
  v11 = sub_100028384(&qword_100830320, &qword_100830318, (uint64_t)&protocol conformance descriptor for _NLGRepresentationEntity<A>);
  static _DialogBuilderEntity.buildBlock<A, B>(_:_:)(v6, v3, &type metadata for WorkoutStat, v0, v0, v10, v11, v11);
  v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v3, v0);
  return ((uint64_t (*)(char *, uint64_t))v12)(v6, v0);
}

void sub_10037FFEC(CHWorkoutDetailHeartRateTableViewCell *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *cellPadding;
  const char *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  _QWORD *v36;
  const char *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  _QWORD *v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  int v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  unsigned __int8 *v56;
  uint64_t v57;
  _QWORD *v58;
  unsigned int (*v59)(_QWORD *, uint64_t, uint64_t);
  const char *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  _QWORD *v75;
  uint64_t v76;
  const char *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  _QWORD *v84;
  void (*v85)(char *, _QWORD *, uint64_t);
  char *v86;
  _QWORD *v87;
  SEL v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char v98;
  char v99;
  void (*v100)(char *, uint64_t);
  const char *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  unint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  CHWorkoutDetailHeartRateTableViewCell *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  CHWorkoutDetailHeartRateTableViewCell *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  unsigned int (*v141)(_QWORD *, uint64_t, uint64_t);
  uint64_t v142;
  CHWorkoutDetailHeartRateTableViewCell *v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;

  v3 = v2;
  v142 = sub_100047110(&qword_100821EB0);
  v140 = *(_QWORD **)(v142 - 8);
  __chkstk_darwin(v142);
  v124 = (char *)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v116 - v8;
  v10 = sub_100047110(&qword_100821E38);
  __chkstk_darwin(v10);
  v136 = (uint64_t *)((char *)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_100047110(&qword_100821E18);
  __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  v135 = (uint64_t *)((char *)&v116 - v14);
  __chkstk_darwin(v15);
  v137 = (uint64_t *)((char *)&v116 - v17);
  v18 = *(_QWORD *)a1->cellPadding;
  if (v18)
  {
    v123 = v16;
    v126 = v9;
    v117 = a2;
    v118 = v3;
    swift_bridgeObjectRetain(a1);
    v119 = a1;
    v19 = v18;
    cellPadding = a1[1].cellPadding;
    v132 = v18;
    while (1)
    {
      v28 = (_QWORD *)*((_QWORD *)cellPadding - 2);
      v29 = (_QWORD *)*((_QWORD *)cellPadding - 1);
      v31 = *(_QWORD *)cellPadding;
      v30 = *((_QWORD *)cellPadding + 1);
      v33 = *((_QWORD *)cellPadding + 2);
      v32 = *((_QWORD *)cellPadding + 3);
      v34 = *((_QWORD *)cellPadding + 4);
      v138 = *((_QWORD *)cellPadding + 5);
      v139 = v32;
      v35 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)cellPadding + 6);
      v145 = v28;
      swift_retain(v28);
      v144 = v29;
      swift_retain(v29);
      swift_retain(v31);
      swift_retain(v30);
      swift_retain(v33);
      swift_retain(v34);
      v143 = v35;
      swift_bridgeObjectRetain(v35);
      v36 = v137;
      EntityProperty.wrappedValue.getter(v137);
      v141 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v140[6];
      LODWORD(v35) = v141(v36, 1, v142);
      sub_10001BE90((uint64_t)v36, &qword_100821E18);
      if ((_DWORD)v35 != 1)
      {
        swift_retain(v145);
        swift_retain(v144);
        swift_retain(v31);
        swift_retain(v30);
        swift_retain(v33);
        swift_retain(v34);
        v44 = v143;
        swift_bridgeObjectRetain(v143);
        v45 = v136;
        EntityProperty.wrappedValue.getter(v136);
        swift_bridgeObjectRelease(v44, v46, v47, v48, v49, v50, v51, v52);
        swift_release(v34);
        swift_release(v33);
        swift_release(v30);
        swift_release(v31);
        swift_release(v144);
        swift_release(v145);
        v53 = sub_100047110(&qword_100821E10);
        v54 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v45, 1, v53);
        sub_10001BE90((uint64_t)v45, &qword_100821E38);
        if (v54 != 1)
          break;
      }
      cellPadding += 72;
      swift_bridgeObjectRelease(v143, v37, v38, v39, v40, v41, v42, v43);
      swift_release(v34);
      swift_release(v33);
      swift_release(v30);
      swift_release(v31);
      swift_release(v144);
      swift_release(v145);
      if (!--v19)
      {
        swift_bridgeObjectRelease(v119, v21, v22, v23, v24, v25, v26, v27);
        goto LABEL_20;
      }
    }
    v121 = v30;
    v120 = v34;
    v55 = v119;
    swift_bridgeObjectRelease(v119, v37, v38, v39, v40, v41, v42, v43);
    swift_bridgeObjectRetain(v55);
    v56 = v55[1].cellPadding;
    v57 = v132;
    v122 = v31;
    v125 = v33;
    v58 = v135;
    v59 = v141;
    do
    {
      v67 = (_QWORD *)*((_QWORD *)v56 - 2);
      v68 = (_QWORD *)*((_QWORD *)v56 - 1);
      v69 = *(_QWORD *)v56;
      v70 = *((_QWORD *)v56 + 1);
      v71 = *((_QWORD *)v56 + 2);
      v73 = *((_QWORD *)v56 + 4);
      v72 = *((_QWORD *)v56 + 5);
      v133 = *((_QWORD *)v56 + 3);
      v134 = v72;
      v74 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v56 + 6);
      v137 = v67;
      swift_retain(v67);
      v136 = v68;
      swift_retain(v68);
      swift_retain(v69);
      swift_retain(v70);
      swift_retain(v71);
      swift_retain(v73);
      swift_bridgeObjectRetain(v74);
      EntityProperty.wrappedValue.getter(v58);
      v75 = v58;
      v76 = v142;
      if (v59(v75, 1, v142) == 1)
      {
        swift_bridgeObjectRelease(v74, v77, v78, v79, v80, v81, v82, v83);
        swift_release(v73);
        swift_release(v71);
        swift_release(v70);
        swift_release(v69);
        swift_release(v136);
        swift_release(v137);
        v58 = v135;
        sub_10001BE90((uint64_t)v135, &qword_100821E18);
      }
      else
      {
        v127 = v74;
        v128 = v73;
        v129 = v71;
        v130 = v70;
        v131 = v69;
        v132 = v57;
        v84 = v140;
        v85 = (void (*)(char *, _QWORD *, uint64_t))v140[4];
        v86 = v126;
        v85(v126, v135, v76);
        v87 = v123;
        EntityProperty.wrappedValue.getter(v123);
        if (v59(v87, 1, v76) == 1)
        {
          ((void (*)(char *, uint64_t))v84[1])(v86, v76);
          swift_bridgeObjectRelease(v127, v88, v89, v90, v91, v92, v93, v94);
          swift_release(v128);
          swift_release(v129);
          swift_release(v130);
          swift_release(v131);
          swift_release(v136);
          swift_release(v137);
          sub_10001BE90((uint64_t)v87, &qword_100821E18);
        }
        else
        {
          v85(v124, v87, v76);
          IntentParameter.wrappedValue.getter(&v146);
          if ((v146 & 1) != 0)
          {
            v95 = sub_10001E724(0, &qword_100821EA8, NSUnitSpeed_ptr);
            v96 = v126;
            v97 = v124;
            v98 = static Measurement.< infix<A, B>(_:_:)(v126, v124, v95, v95, v95);
          }
          else
          {
            sub_100028384(&qword_100830310, &qword_100821EB0, (uint64_t)&protocol conformance descriptor for Measurement<A>);
            v97 = v124;
            v96 = v126;
            v98 = dispatch thunk of static Comparable.< infix(_:_:)(v124, v126, v76);
          }
          v99 = v98;
          v100 = (void (*)(char *, uint64_t))v140[1];
          v100(v97, v76);
          v100(v96, v76);
          if ((v99 & 1) != 0)
          {
            swift_bridgeObjectRelease(v143, v101, v102, v103, v104, v105, v106, v107);
            swift_release(v120);
            swift_release(v125);
            swift_release(v121);
            swift_release(v122);
            swift_release(v144);
            swift_release(v145);
            v144 = v136;
            v145 = v137;
            v122 = v131;
            v121 = v130;
            v125 = v129;
            v139 = v133;
            v120 = v128;
            v138 = v134;
            v143 = v127;
          }
          else
          {
            swift_bridgeObjectRelease(v127, v101, v102, v103, v104, v105, v106, v107);
            swift_release(v128);
            swift_release(v129);
            swift_release(v130);
            swift_release(v131);
            swift_release(v136);
            swift_release(v137);
          }
        }
        v58 = v135;
        v57 = v132;
      }
      v56 += 72;
      --v57;
    }
    while (v57);
    swift_bridgeObjectRelease(v119, v60, v61, v62, v63, v64, v65, v66);
    v111 = v117;
    v112 = v144;
    *v117 = v145;
    v111[1] = v112;
    v113 = v121;
    v111[2] = v122;
    v111[3] = v113;
    v114 = v139;
    v111[4] = v125;
    v111[5] = v114;
    v115 = v138;
    v111[6] = v120;
    v111[7] = v115;
    v111[8] = v143;
  }
  else
  {
LABEL_20:
    v108 = sub_100385EF0();
    v109 = swift_allocError(&type metadata for WorkoutExtremeStatIntentError, v108, 0, 0);
    *v110 = 0;
    swift_willThrow(v109);
  }
}

void sub_10038076C(CHWorkoutDetailHeartRateTableViewCell *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unsigned __int8 *cellPadding;
  uint64_t v21;
  const char *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  const char *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  unsigned __int8 *v49;
  _QWORD *v50;
  unsigned int (*v51)(_QWORD *, uint64_t, uint64_t);
  const char *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  void (*v69)(char *, _QWORD *, uint64_t);
  char *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char v76;
  char v77;
  void (*v78)(char *, uint64_t);
  unint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[2];
  CHWorkoutDetailHeartRateTableViewCell *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  unsigned int (*v108)(_QWORD *, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  int v113;
  uint64_t v114;

  v3 = v2;
  v109 = sub_100047110(&qword_100821EB0);
  v107 = *(_QWORD **)(v109 - 8);
  __chkstk_darwin(v109);
  v92 = (char *)v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v86 - v8;
  v10 = sub_100047110(&qword_100821E38);
  __chkstk_darwin(v10);
  v104 = (_QWORD *)((char *)v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_100047110(&qword_100821E18);
  __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  v18 = (_QWORD *)((char *)v86 - v17);
  v19 = *(_QWORD *)a1->cellPadding;
  if (v19)
  {
    v103 = (_QWORD *)v16;
    v91 = v15;
    v94 = v9;
    v86[0] = a2;
    v86[1] = v3;
    swift_bridgeObjectRetain(a1);
    v87 = a1;
    cellPadding = a1[1].cellPadding;
    v21 = v19;
    v105 = v19;
    v102 = v18;
    while (1)
    {
      v29 = (_QWORD *)*((_QWORD *)cellPadding - 2);
      v30 = *((_QWORD *)cellPadding - 1);
      v32 = *(_QWORD *)cellPadding;
      v31 = *((_QWORD *)cellPadding + 1);
      v34 = *((_QWORD *)cellPadding + 2);
      v33 = *((_QWORD *)cellPadding + 3);
      v106 = *((_QWORD *)cellPadding + 4);
      v113 = cellPadding[40];
      v35 = *((_QWORD *)cellPadding + 6);
      v112 = v29;
      swift_retain(v29);
      v111 = v30;
      swift_retain(v30);
      swift_retain(v32);
      v110 = v31;
      swift_retain(v31);
      swift_retain(v34);
      swift_retain(v33);
      swift_retain(v35);
      EntityProperty.wrappedValue.getter(v18);
      v108 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v107[6];
      LODWORD(v31) = v108(v18, 1, v109);
      sub_10001BE90((uint64_t)v18, &qword_100821E18);
      if ((_DWORD)v31 != 1)
      {
        swift_retain(v112);
        swift_retain(v111);
        swift_retain(v32);
        v36 = v110;
        swift_retain(v110);
        swift_retain(v34);
        swift_retain(v33);
        swift_retain(v35);
        v37 = v104;
        EntityProperty.wrappedValue.getter(v104);
        swift_release(v35);
        swift_release(v33);
        swift_release(v34);
        swift_release(v36);
        swift_release(v32);
        swift_release(v111);
        swift_release(v112);
        v38 = sub_100047110(&qword_100821E10);
        v39 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38);
        v40 = (uint64_t)v37;
        v18 = v102;
        sub_10001BE90(v40, &qword_100821E38);
        if (v39 != 1)
          break;
      }
      swift_release(v35);
      swift_release(v33);
      swift_release(v34);
      swift_release(v110);
      swift_release(v32);
      swift_release(v111);
      swift_release(v112);
      cellPadding += 72;
      if (!--v21)
      {
        swift_bridgeObjectRelease(v87, v22, v23, v24, v25, v26, v27, v28);
        goto LABEL_20;
      }
    }
    v88 = v35;
    v93 = v33;
    v48 = v87;
    swift_bridgeObjectRelease(v87, v41, v42, v43, v44, v45, v46, v47);
    swift_bridgeObjectRetain(v48);
    v49 = v48[1].cellPadding;
    v50 = v103;
    v90 = v32;
    v89 = v34;
    v51 = v108;
    do
    {
      v59 = (_QWORD *)*((_QWORD *)v49 - 2);
      v60 = *((_QWORD *)v49 - 1);
      v62 = *(_QWORD *)v49;
      v61 = *((_QWORD *)v49 + 1);
      v63 = *((_QWORD *)v49 + 2);
      v64 = *((_QWORD *)v49 + 3);
      v101 = *((_QWORD *)v49 + 4);
      LODWORD(v102) = v49[40];
      v65 = *((_QWORD *)v49 + 6);
      v104 = v59;
      swift_retain(v59);
      swift_retain(v60);
      swift_retain(v62);
      swift_retain(v61);
      swift_retain(v63);
      swift_retain(v64);
      swift_retain(v65);
      EntityProperty.wrappedValue.getter(v50);
      v66 = v50;
      v67 = v109;
      if (v51(v66, 1, v109) == 1)
      {
        swift_release(v65);
        swift_release(v64);
        swift_release(v63);
        swift_release(v61);
        swift_release(v62);
        swift_release(v60);
        swift_release(v104);
        v50 = v103;
        sub_10001BE90((uint64_t)v103, &qword_100821E18);
      }
      else
      {
        v95 = v65;
        v96 = v64;
        v97 = v63;
        v98 = v61;
        v99 = v62;
        v100 = v60;
        v68 = v107;
        v69 = (void (*)(char *, _QWORD *, uint64_t))v107[4];
        v70 = v94;
        v69(v94, v103, v67);
        v71 = v91;
        v72 = v93;
        EntityProperty.wrappedValue.getter(v91);
        if (v51(v71, 1, v67) == 1)
        {
          ((void (*)(char *, uint64_t))v68[1])(v70, v67);
          swift_release(v95);
          swift_release(v96);
          swift_release(v97);
          swift_release(v98);
          swift_release(v99);
          swift_release(v100);
          swift_release(v104);
          sub_10001BE90((uint64_t)v71, &qword_100821E18);
        }
        else
        {
          v69(v92, v71, v67);
          IntentParameter.wrappedValue.getter(&v114);
          if ((v114 & 1) != 0)
          {
            v73 = sub_10001E724(0, &qword_100821EA8, NSUnitSpeed_ptr);
            v74 = v94;
            v75 = v92;
            v76 = static Measurement.< infix<A, B>(_:_:)(v94, v92, v73, v73, v73);
          }
          else
          {
            sub_100028384(&qword_100830310, &qword_100821EB0, (uint64_t)&protocol conformance descriptor for Measurement<A>);
            v75 = v92;
            v74 = v94;
            v76 = dispatch thunk of static Comparable.< infix(_:_:)(v92, v94, v67);
          }
          v77 = v76;
          v78 = (void (*)(char *, uint64_t))v107[1];
          v78(v75, v67);
          v78(v74, v67);
          if ((v77 & 1) != 0)
          {
            swift_release(v88);
            swift_release(v72);
            swift_release(v89);
            swift_release(v110);
            swift_release(v90);
            swift_release(v111);
            swift_release(v112);
            v111 = v100;
            v112 = v104;
            v90 = v99;
            v110 = v98;
            v89 = v97;
            v93 = v96;
            v106 = v101;
            v113 = (int)v102;
            v88 = v95;
          }
          else
          {
            swift_release(v95);
            swift_release(v96);
            swift_release(v97);
            swift_release(v98);
            swift_release(v99);
            swift_release(v100);
            swift_release(v104);
          }
        }
        v50 = v103;
      }
      v49 += 72;
      --v105;
    }
    while (v105);
    swift_bridgeObjectRelease(v87, v52, v53, v54, v55, v56, v57, v58);
    v82 = v86[0];
    v83 = v111;
    *(_QWORD *)v86[0] = v112;
    *(_QWORD *)(v82 + 8) = v83;
    v84 = v110;
    *(_QWORD *)(v82 + 16) = v90;
    *(_QWORD *)(v82 + 24) = v84;
    v85 = v93;
    *(_QWORD *)(v82 + 32) = v89;
    *(_QWORD *)(v82 + 40) = v85;
    *(_QWORD *)(v82 + 48) = v106;
    *(_BYTE *)(v82 + 56) = v113 & 1;
    *(_QWORD *)(v82 + 64) = v88;
  }
  else
  {
LABEL_20:
    v79 = sub_100385EF0();
    v80 = swift_allocError(&type metadata for WorkoutExtremeStatIntentError, v79, 0, 0);
    *v81 = 0;
    swift_willThrow(v80);
  }
}

void sub_100380EF4(CHWorkoutDetailHeartRateTableViewCell *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  unsigned int v42;
  _QWORD *v43;
  uint64_t v44;
  int v45;
  const char *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  const char *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  uint64_t (*v68)(uint64_t);
  unsigned int (*v69)(_QWORD *, uint64_t, uint64_t);
  void (*v70)(char *, _QWORD *, uint64_t);
  char *v71;
  _QWORD *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char v76;
  char v77;
  char *v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;
  uint64_t v89;
  char *v90;
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(_QWORD *, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;

  v4 = v3;
  v94 = a2;
  v6 = sub_100047110(&qword_100821EB0);
  v7 = *(_QWORD *)(v6 - 8);
  v97 = v6;
  v98 = v7;
  __chkstk_darwin(v6);
  v90 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v84 - v10;
  v12 = sub_100047110(&qword_100821E38);
  __chkstk_darwin(v12);
  v96 = (uint64_t *)((char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_100047110(&qword_100821E18);
  __chkstk_darwin(v14);
  v91 = (uint64_t *)((char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v93 = (char *)&v84 - v17;
  __chkstk_darwin(v18);
  v20 = (uint64_t *)((char *)&v84 - v19);
  v99 = type metadata accessor for WorkoutActivityEntity(0);
  __chkstk_darwin(v99);
  v92 = (uint64_t)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v84 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v84 - v26;
  __chkstk_darwin(v28);
  v31 = *(_QWORD *)a1->cellPadding;
  if (!v31)
  {
LABEL_22:
    v81 = sub_100385EF0();
    v82 = swift_allocError(&type metadata for WorkoutExtremeStatIntentError, v81, 0, 0);
    *v83 = 0;
    swift_willThrow(v82);
    return;
  }
  v85 = (uint64_t)&v84 - v30;
  v95 = v11;
  v88 = a1;
  v89 = v2;
  v87 = v4;
  v32 = (uint64_t)a1 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  v101 = *(_QWORD *)(v29 + 72);
  swift_bridgeObjectRetain(a1);
  v33 = v32;
  v86 = v31;
  v34 = v31;
  while (1)
  {
    sub_10004F8C8(v33, (uint64_t)v27, type metadata accessor for WorkoutActivityEntity);
    EntityProperty.wrappedValue.getter(v20);
    v100 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v98 + 48);
    v42 = v100(v20, 1, v97);
    sub_10001BE90((uint64_t)v20, &qword_100821E18);
    sub_10004F8C8((uint64_t)v27, (uint64_t)v24, type metadata accessor for WorkoutActivityEntity);
    if (v42 != 1)
      break;
    sub_100011F54((uint64_t)v24, type metadata accessor for WorkoutActivityEntity);
LABEL_4:
    sub_100011F54((uint64_t)v27, type metadata accessor for WorkoutActivityEntity);
    v33 += v101;
    if (!--v34)
    {
      swift_bridgeObjectRelease(v88, v35, v36, v37, v38, v39, v40, v41);
      goto LABEL_22;
    }
  }
  v43 = v96;
  EntityProperty.wrappedValue.getter(v96);
  sub_100011F54((uint64_t)v24, type metadata accessor for WorkoutActivityEntity);
  v44 = sub_100047110(&qword_100821E10);
  v45 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v43, 1, v44);
  sub_10001BE90((uint64_t)v43, &qword_100821E38);
  if (v45 == 1)
    goto LABEL_4;
  v53 = v88;
  swift_bridgeObjectRelease(v88, v46, v47, v48, v49, v50, v51, v52);
  v54 = v85;
  sub_100253B3C((uint64_t)v27, v85);
  sub_100253B3C(v54, v94);
  swift_bridgeObjectRetain(v53);
  v55 = type metadata accessor for WorkoutActivityEntity;
  v57 = v97;
  v56 = v98;
  v58 = v92;
  v59 = v93;
  v60 = v86;
  do
  {
    sub_10004F8C8(v32, v58, v55);
    EntityProperty.wrappedValue.getter(v59);
    v68 = v55;
    v69 = v100;
    if (v100(v59, 1, v57) == 1)
    {
      sub_100011F54(v58, v68);
      sub_10001BE90((uint64_t)v59, &qword_100821E18);
      v55 = v68;
    }
    else
    {
      v70 = *(void (**)(char *, _QWORD *, uint64_t))(v56 + 32);
      v71 = v95;
      v70(v95, v59, v57);
      v72 = v91;
      EntityProperty.wrappedValue.getter(v91);
      if (v69(v72, 1, v57) == 1)
      {
        (*(void (**)(char *, uint64_t))(v56 + 8))(v71, v57);
        v58 = v92;
        v55 = type metadata accessor for WorkoutActivityEntity;
        sub_100011F54(v92, type metadata accessor for WorkoutActivityEntity);
        sub_10001BE90((uint64_t)v72, &qword_100821E18);
      }
      else
      {
        v73 = v90;
        v70(v90, v72, v57);
        IntentParameter.wrappedValue.getter(&v102);
        if ((v102 & 1) != 0)
        {
          v74 = sub_10001E724(0, &qword_100821EA8, NSUnitSpeed_ptr);
          v75 = v95;
          v76 = static Measurement.< infix<A, B>(_:_:)(v95, v73, v74, v74, v74);
        }
        else
        {
          sub_100028384(&qword_100830310, &qword_100821EB0, (uint64_t)&protocol conformance descriptor for Measurement<A>);
          v75 = v95;
          v76 = dispatch thunk of static Comparable.< infix(_:_:)(v73, v95, v57);
        }
        v77 = v76;
        v78 = v73;
        v79 = *(void (**)(char *, uint64_t))(v98 + 8);
        v79(v78, v57);
        v79(v75, v57);
        if ((v77 & 1) != 0)
        {
          v80 = v94;
          v55 = type metadata accessor for WorkoutActivityEntity;
          sub_100011F54(v94, type metadata accessor for WorkoutActivityEntity);
          v58 = v92;
          sub_100253B3C(v92, v80);
        }
        else
        {
          v58 = v92;
          v55 = type metadata accessor for WorkoutActivityEntity;
          sub_100011F54(v92, type metadata accessor for WorkoutActivityEntity);
        }
        v56 = v98;
      }
      v59 = v93;
    }
    v32 += v101;
    --v60;
  }
  while (v60);
  swift_bridgeObjectRelease(v88, v61, v62, v63, v64, v65, v66, v67);
}

uint64_t sub_1003814C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  _QWORD v13[2];

  v3 = sub_100047110(&qword_100821E38);
  __chkstk_darwin(v3);
  v5 = (_QWORD *)((char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100047110(&qword_100821E10);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  EntityProperty.wrappedValue.getter(v5);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10001BE90((uint64_t)v5, &qword_100821E38);
    v10 = 1;
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v7 + 32))(v9, v5, v6);
    v11 = sub_10001E724(0, &qword_100821EC8, NSUnitLength_ptr);
    v10 = static Measurement.< infix<A, B>(_:_:)(v9, a2, v11, v11, v11);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v10 & 1;
}

uint64_t sub_100381618@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081DB80, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A6F0, (uint64_t)sub_10037B30C, a1);
}

uint64_t sub_10038163C(uint64_t a1, uint64_t a2)
{
  uint64_t HasValueComparisonOperator;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  HasValueComparisonOperator = type metadata accessor for HasValueComparisonOperator(0);
  v4 = *(_QWORD *)(HasValueComparisonOperator - 8);
  __chkstk_darwin(HasValueComparisonOperator);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100638830);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for HasValueComparisonOperator.hasAnyValue(_:), HasValueComparisonOperator);
  v8 = sub_100047110(&qword_100830348);
  v9 = sub_100047110(&qword_100830350);
  v10 = sub_100028384(&qword_100830358, &qword_100830348, (uint64_t)&protocol conformance descriptor for ParameterSummaryWhenCondition<A, B, C>);
  v11 = sub_100028384(&qword_100830360, &qword_100830350, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  v12 = sub_100028384(&qword_100830368, &qword_100830280, (uint64_t)&protocol conformance descriptor for IntentParameter<A>);
  return ParameterSummaryWhenCondition.init<A>(_:_:_:otherwise:)(KeyPath, v6, sub_10037B370, 0, sub_10037B888, 0, v8, v9, a2, v10, v11, v12);
}

uint64_t sub_100381798(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_1008302B4);
  *(_QWORD *)(v2 + 56) = v5;
  *v5 = v2;
  v5[1] = sub_10023AEA4;
  return sub_10037BB48(a1);
}

double sub_100381808@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  _OWORD v4[2];
  uint64_t v5;

  sub_100383DC8((uint64_t *)v4);
  result = *(double *)v4;
  v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_100381848(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002EFC40();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100381870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_100047110(&qword_100830270);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100830278);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100830268);
  sub_100008398(v7, qword_10086A708);
  sub_10003CE9C(v7, (uint64_t)qword_10086A708);
  v8 = sub_100381E10();
  EnumURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1, &type metadata for WorkoutPage, v8);
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  EnumURLRepresentation.StringInterpolation.appendLiteral(_:)(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for EnumURLRepresentation.StringInterpolation.Token.rawValue<A>(_:), v0);
  EnumURLRepresentation.StringInterpolation.appendInterpolation(_:)(v3, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  EnumURLRepresentation.StringInterpolation.appendLiteral(_:)(v10);
  return EnumURLRepresentation.init(stringInterpolation:)(v6, &type metadata for WorkoutPage, v8);
}

uint64_t sub_1003819E0(uint64_t a1)
{
  return sub_10023F26C(a1, qword_10086A720, 0x2074756F6B726F57, 0xEC00000065676150);
}

uint64_t sub_100381A08(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100381A3C + 4 * byte_1006376E4[a1]))(0x736C6961746564, 0xE700000000000000);
}

uint64_t sub_100381A3C()
{
  return 0x7374696C7073;
}

uint64_t sub_100381A50()
{
  return 0x73746E656D676573;
}

uint64_t sub_100381A68()
{
  return 0x6C61767265746E69;
}

uint64_t sub_100381AEC()
{
  return 0x737465536D697773;
}

uint64_t sub_100381B04()
{
  return 7364973;
}

uint64_t sub_100381B14(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  char v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;

  v2 = *a2;
  v3 = sub_100381A08(*a1);
  v5 = v4;
  v6 = sub_100381A08(v2);
  if (v3 == v6 && v5 == (CHWorkoutDetailHeartRateTableViewCell *)v7)
  {
    v16 = 1;
    v15 = v5;
  }
  else
  {
    v15 = (CHWorkoutDetailHeartRateTableViewCell *)v7;
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5, v7, v8, v9, v10, v11, v12, v13);
  swift_bridgeObjectRelease(v15, v17, v18, v19, v20, v21, v22, v23);
  return v16 & 1;
}

unint64_t sub_100381BA0()
{
  unint64_t result;

  result = qword_100830108;
  if (!qword_100830108)
  {
    result = swift_getWitnessTable(&unk_1006380CC, &type metadata for WorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830108);
  }
  return result;
}

Swift::Int sub_100381BE4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  _QWORD v13[9];

  v1 = *v0;
  Hasher.init(_seed:)(v13, 0);
  v2 = sub_100381A08(v1);
  v4 = v3;
  String.hash(into:)(v13, v2, v3);
  swift_bridgeObjectRelease(v4, v5, v6, v7, v8, v9, v10, v11);
  return Hasher._finalize()();
}

void sub_100381C44(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = sub_100381A08(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v5, v6, v7, v8, v9, v10, v11, v12);
}

Swift::Int sub_100381C84(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD v14[9];

  v2 = *v1;
  Hasher.init(_seed:)(v14, a1);
  v3 = sub_100381A08(v2);
  v5 = v4;
  String.hash(into:)(v14, v3, v4);
  swift_bridgeObjectRelease(v5, v6, v7, v8, v9, v10, v11, v12);
  return Hasher._finalize()();
}

unint64_t sub_100381CE0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100382D28(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100381D0C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100381A08(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100381D38()
{
  unint64_t result;

  result = qword_100830110;
  if (!qword_100830110)
  {
    result = swift_getWitnessTable(&unk_1006381E4, &type metadata for WorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830110);
  }
  return result;
}

unint64_t sub_100381D80()
{
  unint64_t result;

  result = qword_100830118;
  if (!qword_100830118)
  {
    result = swift_getWitnessTable(&unk_10063821C, &type metadata for WorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830118);
  }
  return result;
}

unint64_t sub_100381DC8()
{
  unint64_t result;

  result = qword_100830120;
  if (!qword_100830120)
  {
    result = swift_getWitnessTable(&unk_100638134, &type metadata for WorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830120);
  }
  return result;
}

unint64_t sub_100381E10()
{
  unint64_t result;

  result = qword_100830128;
  if (!qword_100830128)
  {
    result = swift_getWitnessTable(&unk_10063816C, &type metadata for WorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830128);
  }
  return result;
}

unint64_t sub_100381E58()
{
  unint64_t result;

  result = qword_100830130;
  if (!qword_100830130)
  {
    result = swift_getWitnessTable(&unk_10063824C, &type metadata for WorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830130);
  }
  return result;
}

uint64_t sub_100381E9C@<X0>(uint64_t a1@<X8>)
{
  return sub_100381EC0(&qword_10081DB88, &qword_100830268, (uint64_t)qword_10086A708, (uint64_t)sub_100381870, a1);
}

uint64_t sub_100381EC0@<X0>(_QWORD *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = sub_100047110(a2);
  v9 = sub_10003CE9C(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

unint64_t sub_100381F34()
{
  unint64_t result;

  result = qword_100830138;
  if (!qword_100830138)
  {
    result = swift_getWitnessTable(&unk_100638274, &type metadata for WorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830138);
  }
  return result;
}

unint64_t sub_100381F7C()
{
  unint64_t result;

  result = qword_100830140;
  if (!qword_100830140)
  {
    result = swift_getWitnessTable(&unk_10063829C, &type metadata for WorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830140);
  }
  return result;
}

unint64_t sub_100381FC8()
{
  unint64_t result;

  result = qword_100830148;
  if (!qword_100830148)
  {
    result = swift_getWitnessTable(&unk_10063831C, &type metadata for WorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830148);
  }
  return result;
}

uint64_t sub_10038200C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_100385D14();
  v4 = URLRepresentableEnum.urlRepresentationParameter.getter(a1, v3);
  return sub_100114BE8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

uint64_t sub_100382054@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081DB90, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10086A720, (uint64_t)sub_1003819E0, a1);
}

uint64_t sub_100382078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10023F804(a1, a2, a3, (uint64_t (*)(void))sub_100381E10, (uint64_t)&opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>);
}

uint64_t sub_10038208C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100381E10();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1003820C8()
{
  unint64_t result;

  result = qword_100830158;
  if (!qword_100830158)
  {
    result = swift_getWitnessTable(&unk_10063835C, &type metadata for WorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830158);
  }
  return result;
}

unint64_t sub_100382110()
{
  unint64_t result;

  result = qword_100830160;
  if (!qword_100830160)
  {
    result = swift_getWitnessTable(&unk_100638384, &type metadata for WorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830160);
  }
  return result;
}

unint64_t sub_100382158()
{
  unint64_t result;

  result = qword_100830168;
  if (!qword_100830168)
  {
    result = swift_getWitnessTable(&unk_1006380F4, &type metadata for WorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830168);
  }
  return result;
}

uint64_t sub_1003821A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100381FC8();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1003821D8()
{
  return sub_100028384(&qword_100830170, &qword_100830178, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_100382204(_QWORD *a1@<X8>)
{
  *a1 = &off_100782520;
}

uint64_t sub_100382214(uint64_t a1)
{
  return sub_10023F26C(a1, qword_10086A738, 0x746E657645, 0xE500000000000000);
}

void sub_100382230(char *a1)
{
  sub_1003908C8(*a1);
}

unint64_t sub_100382240()
{
  unint64_t result;

  result = qword_100830180;
  if (!qword_100830180)
  {
    result = swift_getWitnessTable(&unk_1006383BC, &type metadata for WorkoutEventType);
    atomic_store(result, (unint64_t *)&qword_100830180);
  }
  return result;
}

void sub_100382284()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1003822CC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x70536D6F74737563, 0xEB0000000074696CLL);
  swift_bridgeObjectRelease(0xEB0000000074696CLL);
  return Hasher._finalize()();
}

void sub_100382344()
{
  __asm { BR              X10 }
}

uint64_t sub_10038237C(uint64_t a1)
{
  String.hash(into:)(a1, 0x70536D6F74737563, 0xEB0000000074696CLL);
  return swift_bridgeObjectRelease(0xEB0000000074696CLL);
}

void sub_1003823E0(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_100382424()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x70536D6F74737563, 0xEB0000000074696CLL);
  swift_bridgeObjectRelease(0xEB0000000074696CLL);
  return Hasher._finalize()();
}

unint64_t sub_10038249C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100385CCC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003824C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1003824F4 + 4 * byte_1006376FA[*v0]))();
}

void sub_1003824F4(_QWORD *a1@<X8>)
{
  *a1 = 0x70536D6F74737563;
  a1[1] = 0xEB0000000074696CLL;
}

void sub_100382518(_QWORD *a1@<X8>)
{
  *a1 = 0x746E656D676573;
  a1[1] = 0xE700000000000000;
}

void sub_100382534(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61767265746E69;
  a1[1] = 0xE800000000000000;
}

unint64_t sub_100382554()
{
  unint64_t result;

  result = qword_100830188;
  if (!qword_100830188)
  {
    result = swift_getWitnessTable(&unk_10063849C, &type metadata for WorkoutEventType);
    atomic_store(result, (unint64_t *)&qword_100830188);
  }
  return result;
}

unint64_t sub_10038259C()
{
  unint64_t result;

  result = qword_100830190;
  if (!qword_100830190)
  {
    result = swift_getWitnessTable(&unk_1006384D4, &type metadata for WorkoutEventType);
    atomic_store(result, (unint64_t *)&qword_100830190);
  }
  return result;
}

unint64_t sub_1003825E4()
{
  unint64_t result;

  result = qword_100830198;
  if (!qword_100830198)
  {
    result = swift_getWitnessTable(&unk_100638424, &type metadata for WorkoutEventType);
    atomic_store(result, (unint64_t *)&qword_100830198);
  }
  return result;
}

unint64_t sub_10038262C()
{
  unint64_t result;

  result = qword_1008301A0;
  if (!qword_1008301A0)
  {
    result = swift_getWitnessTable(&unk_100638504, &type metadata for WorkoutEventType);
    atomic_store(result, (unint64_t *)&qword_1008301A0);
  }
  return result;
}

unint64_t sub_100382674()
{
  unint64_t result;

  result = qword_1008301A8;
  if (!qword_1008301A8)
  {
    result = swift_getWitnessTable(&unk_10063852C, &type metadata for WorkoutEventType);
    atomic_store(result, (unint64_t *)&qword_1008301A8);
  }
  return result;
}

unint64_t sub_1003826C0()
{
  unint64_t result;

  result = qword_1008301B0;
  if (!qword_1008301B0)
  {
    result = swift_getWitnessTable(&unk_1006385AC, &type metadata for WorkoutEventType);
    atomic_store(result, (unint64_t *)&qword_1008301B0);
  }
  return result;
}

uint64_t sub_100382704@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081DB98, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10086A738, (uint64_t)sub_100382214, a1);
}

uint64_t sub_100382728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10023F804(a1, a2, a3, (uint64_t (*)(void))sub_10038273C, (uint64_t)&opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>);
}

unint64_t sub_10038273C()
{
  unint64_t result;

  result = qword_1008301B8;
  if (!qword_1008301B8)
  {
    result = swift_getWitnessTable(&unk_10063845C, &type metadata for WorkoutEventType);
    atomic_store(result, (unint64_t *)&qword_1008301B8);
  }
  return result;
}

uint64_t sub_100382780(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10038273C();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1003827BC()
{
  unint64_t result;

  result = qword_1008301C0;
  if (!qword_1008301C0)
  {
    result = swift_getWitnessTable(&unk_1006385EC, &type metadata for WorkoutEventType);
    atomic_store(result, (unint64_t *)&qword_1008301C0);
  }
  return result;
}

unint64_t sub_100382804()
{
  unint64_t result;

  result = qword_1008301C8;
  if (!qword_1008301C8)
  {
    result = swift_getWitnessTable(&unk_100638614, &type metadata for WorkoutEventType);
    atomic_store(result, (unint64_t *)&qword_1008301C8);
  }
  return result;
}

unint64_t sub_10038284C()
{
  unint64_t result;

  result = qword_1008301D0;
  if (!qword_1008301D0)
  {
    result = swift_getWitnessTable(&unk_1006383E4, &type metadata for WorkoutEventType);
    atomic_store(result, (unint64_t *)&qword_1008301D0);
  }
  return result;
}

uint64_t sub_100382894(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003826C0();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1003828CC()
{
  return sub_100028384(&qword_1008301D8, &qword_1008301E0, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_1003828F8(_QWORD *a1@<X8>)
{
  *a1 = &off_100782B18;
}

uint64_t storeEnumTagSinglePayload for WorkoutEventType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100382954 + 4 * byte_100637703[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100382988 + 4 * byte_1006376FE[v4]))();
}

uint64_t sub_100382988(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100382990(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100382998);
  return result;
}

uint64_t sub_1003829A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003829ACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1003829B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003829B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutEventType()
{
  return &type metadata for WorkoutEventType;
}

uint64_t storeEnumTagSinglePayload for WorkoutPage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_100382A20 + 4 * byte_10063770D[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_100382A54 + 4 * byte_100637708[v4]))();
}

uint64_t sub_100382A54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100382A5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100382A64);
  return result;
}

uint64_t sub_100382A70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100382A78);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_100382A7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100382A84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPage()
{
  return &type metadata for WorkoutPage;
}

ValueMetadata *type metadata accessor for WorkoutExtremeStatIntent()
{
  return &type metadata for WorkoutExtremeStatIntent;
}

ValueMetadata *type metadata accessor for SetWorkoutEffortIntent()
{
  return &type metadata for SetWorkoutEffortIntent;
}

ValueMetadata *type metadata accessor for UpdateWorkoutEffortIntent()
{
  return &type metadata for UpdateWorkoutEffortIntent;
}

ValueMetadata *type metadata accessor for OpenMultisportActivityPageIntent()
{
  return &type metadata for OpenMultisportActivityPageIntent;
}

ValueMetadata *type metadata accessor for OpenMultisportActivityIntent()
{
  return &type metadata for OpenMultisportActivityIntent;
}

ValueMetadata *type metadata accessor for OpenWorkoutPage()
{
  return &type metadata for OpenWorkoutPage;
}

ValueMetadata *type metadata accessor for OpenWorkoutIntent()
{
  return &type metadata for OpenWorkoutIntent;
}

ValueMetadata *type metadata accessor for OpenUnifiedWorkoutIntent()
{
  return &type metadata for OpenUnifiedWorkoutIntent;
}

uint64_t sub_100382B20()
{
  return sub_100028384(&qword_1008301E8, &qword_1008301F0, (uint64_t)&protocol conformance descriptor for ParameterSummaryWhenCondition<A, B, C>);
}

uint64_t sub_100382B4C()
{
  return sub_100028384(&qword_1008301F8, &qword_100830200, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100382B78()
{
  return sub_100028384(&qword_100830208, &qword_100830200, (uint64_t)&protocol conformance descriptor for <> IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100382BA4()
{
  return sub_100028384(&qword_100830210, &qword_100830200, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100382BD0()
{
  return sub_100028384(&qword_100830218, &qword_100830200, (uint64_t)&protocol conformance descriptor for <> IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100382BFC()
{
  return sub_100028384(&qword_100830220, &qword_100830228, (uint64_t)&protocol conformance descriptor for ParameterSummaryWhenCondition<A, B, C>);
}

uint64_t sub_100382C28()
{
  return sub_100028384(&qword_1008295D8, &qword_1008295E0, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100382C54()
{
  return sub_100028384(&qword_100830230, &qword_100830238, (uint64_t)&protocol conformance descriptor for ParameterSummaryWhenCondition<A, B, C>);
}

uint64_t sub_100382C80()
{
  return sub_100028384((unint64_t *)&qword_100821350, &qword_100821358, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100382CAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for OpenURLAction(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.openURL.setter(v4);
}

unint64_t sub_100382D28(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10077ECE8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xA)
    return 10;
  else
    return v3;
}

uint64_t sub_100382D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  _BYTE v43[256];
  _OWORD v44[16];

  v0 = sub_100047110(&qword_100829C48);
  __chkstk_darwin(v0);
  v37 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for InputConnectionBehavior(0);
  v38 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - v8;
  v10 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v42 = v13;
  __chkstk_darwin(v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100047110(&qword_100830280);
  v17 = v16;
  LocalizedStringResource.init(stringLiteral:)(0x74756F6B726F57, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x800000010069B740);
  v41 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56);
  v41(v12, 0, 1, v13);
  sub_100385D58(v44);
  sub_100385D80((uint64_t)v44, (uint64_t)v43);
  v18 = type metadata accessor for IntentDialog(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v20 = v9;
  v19(v9, 1, 1, v18);
  v19(v6, 1, 1, v18);
  v39 = enum case for InputConnectionBehavior.default(_:);
  v38 = *(_QWORD *)(v38 + 104);
  v33 = v3;
  v21 = v40;
  ((void (*)(char *))v38)(v3);
  v22 = sub_100112214();
  v34 = v17;
  v36 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v17, v12, v43, v9, v6, v3, v22);
  v35 = sub_100047110(&qword_100830290);
  LocalizedStringResource.init(stringLiteral:)(0x7974697669746341, 0xE800000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000024, 0x800000010069B6B0);
  v41(v12, 0, 1, v42);
  v23 = type metadata accessor for WorkoutActivityEntity(0);
  v24 = v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v37, 1, 1, v23);
  v25 = v19;
  v19(v20, 1, 1, v18);
  v26 = v6;
  v25(v6, 1, 1, v18);
  v27 = v33;
  ((void (*)(char *, _QWORD, uint64_t))v38)(v33, v39, v21);
  v28 = sub_1000083D8(&qword_100821C10, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625F30);
  v29 = v34;
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v34, v12, v24, v20, v26, v27, v28);
  sub_100047110(&qword_100830328);
  LocalizedStringResource.init(stringLiteral:)(0x6E6F6974636553, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x800000010069B760);
  v41(v12, 0, 1, v42);
  v43[0] = 10;
  v25(v20, 1, 1, v18);
  v25(v26, 1, 1, v18);
  ((void (*)(char *, _QWORD, uint64_t))v38)(v27, v39, v40);
  v30 = sub_100381E10();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v29, v12, v43, v20, v26, v27, &off_100782520, v30);
  return v36;
}

uint64_t sub_100383220()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  void (*v17)(_BYTE *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v20;
  _BYTE v21[256];
  _OWORD v22[16];

  v20 = type metadata accessor for InputConnectionBehavior(0);
  v0 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v2 = &v21[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v3);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v21[-v7 - 8];
  v9 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v9);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v21[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100047110(&qword_100830280);
  LocalizedStringResource.init(stringLiteral:)(0x74756F6B726F57, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x800000010069B740);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  sub_100385D58(v22);
  sub_100385D80((uint64_t)v22, (uint64_t)v21);
  v16 = type metadata accessor for IntentDialog(0);
  v17 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v8, 1, 1, v16);
  v17(v5, 1, 1, v16);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v20);
  v18 = sub_100112214();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v15, v11, v21, v8, v5, v2, v18);
}

uint64_t sub_100383458()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void (*v23)(char *);
  unsigned int v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[256];
  _OWORD v31[16];

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v28 = *(_QWORD *)(v0 - 8);
  v29 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - v7;
  v9 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v27 = v12;
  __chkstk_darwin(v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100047110(&qword_100830280);
  LocalizedStringResource.init(stringLiteral:)(0x74756F6B726F57, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x800000010069B740);
  v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56);
  v26(v11, 0, 1, v12);
  sub_100385D58(v31);
  sub_100385D80((uint64_t)v31, (uint64_t)v30);
  v16 = type metadata accessor for IntentDialog(0);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v8, 1, 1, v16);
  v18 = v5;
  v17(v5, 1, 1, v16);
  v24 = enum case for InputConnectionBehavior.default(_:);
  v19 = v29;
  v23 = *(void (**)(char *))(v28 + 104);
  v23(v2);
  v20 = sub_100112214();
  v28 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v15, v11, v30, v8, v18, v2, v20);
  sub_100047110(&qword_100830400);
  LocalizedStringResource.init(stringLiteral:)(0x6E6F6974636553, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x800000010069B760);
  v26(v11, 0, 1, v27);
  v30[0] = 10;
  v17(v8, 1, 1, v16);
  v17(v18, 1, 1, v16);
  ((void (*)(char *, _QWORD, uint64_t))v23)(v2, v24, v19);
  v21 = sub_100381E10();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v15, v11, v30, v8, v18, v2, &off_100782520, v21);
  return v28;
}

uint64_t sub_100383788()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v24 = *(_QWORD *)(v0 - 8);
  v25 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - v7;
  v9 = sub_100047110(&qword_100829C48);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_1008303F8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000010, 0x800000010068A750);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000002CLL, 0x800000010069B880);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v19 = type metadata accessor for WorkoutActivityEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 1, 1);
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v8, 1, 1, v20);
  v21(v5, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v25);
  v22 = sub_1000083D8(&qword_100821C10, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625F30);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v18, v14, v11, v8, v5, v2, v22);
}

uint64_t sub_100383A28()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char v34;

  v33 = type metadata accessor for InputConnectionBehavior(0);
  v0 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - v7;
  v9 = sub_100047110(&qword_100829C48);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  v32 = v15;
  __chkstk_darwin(v15);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100047110(&qword_1008303F8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000010, 0x800000010068A750);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000024, 0x800000010069B6B0);
  v31 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56);
  v31(v14, 0, 1, v15);
  v19 = type metadata accessor for WorkoutActivityEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 1, 1, v19);
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v22 = v8;
  v21(v8, 1, 1, v20);
  v23 = v5;
  v21(v5, 1, 1, v20);
  v24 = enum case for InputConnectionBehavior.default(_:);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 104);
  v25 = v33;
  v29(v2, enum case for InputConnectionBehavior.default(_:), v33);
  v26 = sub_1000083D8(&qword_100821C10, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625F30);
  v30 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v18, v14, v11, v22, v23, v2, v26);
  sub_100047110(&qword_100830400);
  LocalizedStringResource.init(stringLiteral:)(0x6E6F6974636553, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000023, 0x800000010069B830);
  v31(v14, 0, 1, v32);
  v34 = 10;
  v21(v22, 1, 1, v20);
  v21(v23, 1, 1, v20);
  v29(v2, v24, v25);
  v27 = sub_100381E10();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v18, v14, &v34, v22, v23, v2, &off_100782520, v27);
  return v30;
}

uint64_t sub_100383DC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *);
  uint64_t v28;
  char *v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  char *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  void (*v43)(char *);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t *v47;
  void (*v48)(char *, _QWORD, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  _BYTE v53[32];
  uint64_t v54;
  _OWORD v55[16];

  v47 = a1;
  v1 = sub_100047110(&qword_100829C48);
  __chkstk_darwin(v1);
  v45 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for InputConnectionBehavior(0);
  v46 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v49 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - v8;
  v10 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v52 = v13;
  __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100047110(&qword_100830280);
  v17 = v16;
  LocalizedStringResource.init(stringLiteral:)(0x74756F6B726F57, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000016, 0x800000010069B690);
  v48 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56);
  v48(v12, 0, 1, v13);
  sub_100385D58(v55);
  sub_100385D80((uint64_t)v55, (uint64_t)v53);
  v18 = type metadata accessor for IntentDialog(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v9, 1, 1, v18);
  v19(v6, 1, 1, v18);
  v51 = enum case for InputConnectionBehavior.default(_:);
  v43 = *(void (**)(char *))(v46 + 104);
  v20 = v49;
  v21 = v50;
  v43(v49);
  v22 = sub_100112214();
  v46 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v17, v12, v53, v9, v6, v20, v22);
  v44 = sub_100047110(&qword_100830290);
  LocalizedStringResource.init(stringLiteral:)(0x7974697669746341, 0xE800000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000024, 0x800000010069B6B0);
  v48(v12, 0, 1, v52);
  v23 = type metadata accessor for WorkoutActivityEntity(0);
  v24 = v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v45, 1, 1, v23);
  v42 = v19;
  v19(v9, 1, 1, v18);
  v19(v6, 1, 1, v18);
  v25 = v49;
  v26 = v21;
  v27 = v43;
  ((void (*)(char *, _QWORD, uint64_t))v43)(v49, v51, v26);
  v28 = sub_1000083D8(&qword_100821C10, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625F30);
  v29 = v6;
  v45 = (char *)IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v17, v12, v24, v9, v6, v25, v28);
  v44 = sub_100047110(&qword_100830298);
  v30 = v17;
  LocalizedStringResource.init(stringLiteral:)(0x656D6572747845, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000016, 0x800000010069B6E0);
  v48(v12, 0, 1, v52);
  v53[0] = 0;
  v31 = v42;
  v42(v9, 1, 1, v18);
  v31(v29, 1, 1, v18);
  v32 = v49;
  ((void (*)(char *, _QWORD, uint64_t))v27)(v49, v51, v50);
  v33 = sub_100385DC8();
  v44 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v30, v12, v53, v9, v29, v32, &off_100782550, v33);
  sub_100047110(&qword_1008302A8);
  LocalizedStringResource.init(stringLiteral:)(0x746E657645, 0xE500000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000016, 0x800000010069B700);
  v48(v12, 0, 1, v52);
  v53[0] = 4;
  v31(v9, 1, 1, v18);
  v31(v29, 1, 1, v18);
  ((void (*)(char *, _QWORD, uint64_t))v27)(v32, v51, v50);
  v34 = sub_10038273C();
  v35 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v30, v12, v53, v9, v29, v32, &off_100782578, v34);
  sub_100047110(&qword_1008201E8);
  v36 = type metadata accessor for AppDependencyManager(0);
  memset(v53, 0, sizeof(v53));
  v54 = 0;
  v37 = static AppDependencyManager.shared.getter(v36);
  result = AppDependency.__allocating_init(key:manager:)(v53, v37);
  v39 = v47;
  v40 = v45;
  *v47 = v46;
  v39[1] = (uint64_t)v40;
  v39[2] = v44;
  v39[3] = v35;
  v39[4] = result;
  return result;
}

uint64_t sub_100384390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  void (*v27)(char *);
  unsigned int v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[33];
  _OWORD v37[16];

  v0 = sub_100047110(&qword_100829680);
  v34 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  __chkstk_darwin(v0);
  v33 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for InputConnectionBehavior(0);
  v2 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - v9;
  v11 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocalizedStringResource(0);
  v15 = *(_QWORD *)(v14 - 8);
  v30 = v14;
  __chkstk_darwin(v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100047110(&qword_100830280);
  LocalizedStringResource.init(stringLiteral:)(0x74756F6B726F57, 0xE700000000000000);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v29(v13, 1, 1, v14);
  sub_100385D58(v37);
  sub_100385D80((uint64_t)v37, (uint64_t)v36);
  v18 = type metadata accessor for IntentDialog(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v10, 1, 1, v18);
  v19(v7, 1, 1, v18);
  v28 = enum case for InputConnectionBehavior.default(_:);
  v27 = *(void (**)(char *))(v2 + 104);
  v20 = v32;
  v27(v4);
  v21 = sub_100112214();
  v31 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v17, v13, v36, v10, v7, v4, v21);
  sub_100047110(&qword_100829688);
  LocalizedStringResource.init(stringLiteral:)(0x2074756F6B726F57, 0xEE0074726F666645);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000031, 0x800000010069B7A0);
  v29(v13, 0, 1, v30);
  v36[0] = 0;
  LOBYTE(v36[1]) = 1;
  v19(v10, 1, 1, v18);
  v22 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, enum case for IntentParameter.IntControlStyle.stepper<A>(_:), v35);
  ((void (*)(char *, _QWORD, uint64_t))v27)(v4, v28, v20);
  IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)(v17, v13, v36, v22, 1, 10, 0, v10, v4);
  sub_100047110(&qword_1008201E0);
  v23 = type metadata accessor for AppDependencyManager(0);
  memset(v36, 0, 40);
  v24 = static AppDependencyManager.shared.getter(v23);
  AppDependency.__allocating_init(key:manager:)(v36, v24);
  return v31;
}

uint64_t sub_10038473C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  _QWORD v45[33];
  _OWORD v46[16];

  v0 = sub_100047110(&qword_100829680);
  v38 = *(_QWORD *)(v0 - 8);
  v39 = v0;
  __chkstk_darwin(v0);
  v37 = (char *)v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100047110(&qword_100829C48);
  __chkstk_darwin(v2);
  v36 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for InputConnectionBehavior(0);
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v7);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v34 - v11;
  v13 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v13);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0);
  v17 = *(_QWORD *)(v16 - 8);
  v44 = v16;
  __chkstk_darwin(v16);
  v19 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_100047110(&qword_100830280);
  LocalizedStringResource.init(stringLiteral:)(0x74756F6B726F57, 0xE700000000000000);
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v43(v15, 1, 1, v16);
  sub_100385D58(v46);
  sub_100385D80((uint64_t)v46, (uint64_t)v45);
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v12, 1, 1, v20);
  v21(v9, 1, 1, v20);
  v42 = enum case for InputConnectionBehavior.default(_:);
  v22 = v41;
  v40 = *(_QWORD *)(v40 + 104);
  v34[0] = v6;
  ((void (*)(char *))v40)(v6);
  v23 = sub_100112214();
  v35 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v19, v15, v45, v12, v9, v6, v23);
  v34[1] = sub_100047110(&qword_100830290);
  LocalizedStringResource.init(stringLiteral:)(0x7974697669746341, 0xE800000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000024, 0x800000010069B6B0);
  v43(v15, 0, 1, v44);
  v24 = type metadata accessor for WorkoutActivityEntity(0);
  v25 = v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v36, 1, 1, v24);
  v26 = v12;
  v21(v12, 1, 1, v20);
  v27 = v9;
  v21(v9, 1, 1, v20);
  v28 = v34[0];
  ((void (*)(_QWORD, _QWORD, uint64_t))v40)(v34[0], v42, v22);
  v29 = sub_1000083D8(&qword_100821C10, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625F30);
  v36 = (char *)IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v19, v15, v25, v26, v27, v28, v29);
  sub_100047110(&qword_100829688);
  LocalizedStringResource.init(stringLiteral:)(0x2074756F6B726F57, 0xEE0074726F666645);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000031, 0x800000010069B7A0);
  v43(v15, 0, 1, v44);
  v45[0] = 0;
  LOBYTE(v45[1]) = 1;
  v21(v26, 1, 1, v20);
  v30 = v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v37, enum case for IntentParameter.IntControlStyle.stepper<A>(_:), v39);
  ((void (*)(uint64_t, _QWORD, uint64_t))v40)(v28, v42, v41);
  IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)(v19, v15, v45, v30, 1, 10, 0, v26, v28);
  sub_100047110(&qword_1008201E0);
  v31 = type metadata accessor for AppDependencyManager(0);
  memset(v45, 0, 40);
  v32 = static AppDependencyManager.shared.getter(v31);
  AppDependency.__allocating_init(key:manager:)(v45, v32);
  return v35;
}

uint64_t sub_100384C3C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  char *v25;
  char *v26;
  char *v27;
  unint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  char *v64;
  char *v65;
  unsigned int v66;
  void (*v67)(char *);
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v71;
  _OWORD v72[16];
  _OWORD v73[16];

  v63 = a3;
  v62 = a2;
  v4 = sub_100047110(&qword_100829C48);
  __chkstk_darwin(v4);
  v61 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v71 = (uint64_t)&v56 - v7;
  v8 = type metadata accessor for InputConnectionBehavior(0);
  v9 = *(_QWORD *)(v8 - 8);
  v68 = v8;
  __chkstk_darwin(v8);
  v65 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v11);
  v64 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v56 - v14;
  v16 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v16);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocalizedStringResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  v69 = v19;
  __chkstk_darwin(v19);
  v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100047110(&qword_100830280);
  LocalizedStringResource.init(stringLiteral:)(0x74756F6B726F57, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x800000010069B740);
  v70 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v70(v18, 0, 1, v19);
  sub_100385D58(v73);
  sub_100385D80((uint64_t)v73, (uint64_t)v72);
  v23 = type metadata accessor for IntentDialog(0);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v25 = v15;
  v57 = v15;
  v24(v15, 1, 1, v23);
  v26 = v64;
  v24(v64, 1, 1, v23);
  v66 = enum case for InputConnectionBehavior.default(_:);
  v67 = *(void (**)(char *))(v9 + 104);
  v27 = v65;
  v67(v65);
  v28 = sub_100112214();
  v58 = v22;
  v29 = v26;
  v30 = v27;
  v31 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v22, v18, v72, v25, v29, v27, v28);
  v60 = v31;
  v59 = sub_100047110(&qword_100830290);
  swift_retain(v31);
  LocalizedStringResource.init(stringLiteral:)(0x7974697669746341, 0xE800000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000024, 0x800000010069B6B0);
  v70(v18, 0, 1, v69);
  v32 = type metadata accessor for WorkoutActivityEntity(0);
  v33 = v71;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v71, 1, 1, v32);
  v34 = v57;
  v24(v57, 1, 1, v23);
  v35 = v64;
  v24(v64, 1, 1, v23);
  v36 = v30;
  ((void (*)(char *, _QWORD, uint64_t))v67)(v30, v66, v68);
  v37 = sub_1000083D8(&qword_100821C10, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625F30);
  v38 = v58;
  v39 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v58, v18, v33, v34, v35, v36, v37);
  sub_100047110(&qword_100830328);
  swift_retain(v39);
  LocalizedStringResource.init(stringLiteral:)(0x6E6F6974636553, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x800000010069B760);
  v70(v18, 0, 1, v69);
  LOBYTE(v72[0]) = 10;
  v24(v34, 1, 1, v23);
  v24(v35, 1, 1, v23);
  v40 = v65;
  ((void (*)(char *, _QWORD, uint64_t))v67)(v65, v66, v68);
  v41 = sub_100381E10();
  v42 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v38, v18, v72, v34, v35, v40, &off_100782520, v41);
  v43 = *(_OWORD *)(a1 + 208);
  v72[12] = *(_OWORD *)(a1 + 192);
  v72[13] = v43;
  v44 = *(_OWORD *)(a1 + 240);
  v72[14] = *(_OWORD *)(a1 + 224);
  v72[15] = v44;
  v45 = *(_OWORD *)(a1 + 144);
  v72[8] = *(_OWORD *)(a1 + 128);
  v72[9] = v45;
  v46 = *(_OWORD *)(a1 + 176);
  v72[10] = *(_OWORD *)(a1 + 160);
  v72[11] = v46;
  v47 = *(_OWORD *)(a1 + 80);
  v72[4] = *(_OWORD *)(a1 + 64);
  v72[5] = v47;
  v48 = *(_OWORD *)(a1 + 112);
  v72[6] = *(_OWORD *)(a1 + 96);
  v72[7] = v48;
  v49 = *(_OWORD *)(a1 + 16);
  v72[0] = *(_OWORD *)a1;
  v72[1] = v49;
  v50 = *(_OWORD *)(a1 + 48);
  v72[2] = *(_OWORD *)(a1 + 32);
  v72[3] = v50;
  v51 = v60;
  swift_retain(v60);
  swift_retain(v39);
  swift_retain(v42);
  sub_100112010((_QWORD *)a1);
  IntentParameter.wrappedValue.setter(v72);
  swift_release(v39);
  swift_release(v51);
  v52 = v62;
  v53 = v71;
  sub_100021CC0(v62, v71, &qword_100829C48);
  v54 = v61;
  sub_100021CC0(v53, v61, &qword_100829C48);
  swift_retain(v51);
  swift_retain(v39);
  swift_retain(v42);
  IntentParameter.wrappedValue.setter(v54);
  sub_10001BE90(v53, &qword_100829C48);
  swift_release(v42);
  swift_release(v39);
  swift_release(v51);
  LOBYTE(v72[0]) = v63;
  swift_retain(v51);
  swift_retain(v39);
  swift_retain(v42);
  IntentParameter.wrappedValue.setter(v72);
  sub_100112258((_QWORD *)a1);
  swift_release(v42);
  swift_release(v39);
  swift_release(v51);
  sub_10001BE90(v52, &qword_100829C48);
  swift_release(v42);
  swift_release(v39);
  swift_release(v51);
  return v51;
}

unint64_t sub_10038528C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double (*v18)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  double (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  __n128 v29;
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;

  v0 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v0);
  v2 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = v6;
  __chkstk_darwin(v6);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100830250);
  v12 = *(_QWORD *)(sub_100047110(&qword_100830258) - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(v11, v15 + 10 * v13, v14 | 7);
  v38 = (CHWorkoutDetailHeartRateTableViewCell *)v16;
  *(_OWORD *)(v16 + 16) = xmmword_100634290;
  *(_BYTE *)(v16 + v15) = 0;
  v17 = v16 + v15;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000015, 0x800000010069B610);
  v18 = *(double (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v19.n128_f64[0] = v18(v5, 1, 1, v8);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x61622E7472616863, 0xEE006C6C69662E72, 0, 0, v19);
  DisplayRepresentation.init(title:subtitle:image:)(v10, v5, v2);
  *(_BYTE *)(v17 + v13) = 1;
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100692D70);
  v20.n128_f64[0] = v18(v5, 1, 1, v8);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000015, 0x800000010069B630, 0, 0, v20);
  DisplayRepresentation.init(title:subtitle:image:)(v10, v5, v2);
  v36 = v17;
  *(_BYTE *)(v17 + 2 * v13) = 2;
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001CLL, 0x8000000100692DD0);
  v35 = v8;
  v21.n128_f64[0] = v18(v5, 1, 1, v8);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x656C637269632E31, 0xE800000000000000, 0, 0, v21);
  DisplayRepresentation.init(title:subtitle:image:)(v10, v5, v2);
  *(_BYTE *)(v17 + 3 * v13) = 3;
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100692DB0);
  v22.n128_f64[0] = v18(v5, 1, 1, v8);
  v23 = v18;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x696C632E7473696CLL, 0xEE006472616F6270, 0, 0, v22);
  DisplayRepresentation.init(title:subtitle:image:)(v10, v5, v2);
  v24 = v36;
  *(_BYTE *)(v36 + 4 * v13) = 4;
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100688D10);
  v25 = v35;
  v26.n128_f64[0] = v18(v5, 1, 1, v35);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x69662E7472616568, 0xEA00000000006C6CLL, 0, 0, v26);
  DisplayRepresentation.init(title:subtitle:image:)(v10, v5, v2);
  *(_BYTE *)(v24 + 5 * v13) = 5;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000018, 0x80000001006890A0);
  v27 = v25;
  v28.n128_f64[0] = v23(v5, 1, 1, v25);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x6C69662E746C6F62, 0xE90000000000006CLL, 0, 0, v28);
  DisplayRepresentation.init(title:subtitle:image:)(v10, v5, v2);
  *(_BYTE *)(v24 + 6 * v13) = 6;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000022, 0x8000000100692D20);
  v29.n128_f64[0] = v23(v5, 1, 1, v25);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000016, 0x800000010069B650, 0, 0, v29);
  DisplayRepresentation.init(title:subtitle:image:)(v10, v5, v2);
  v37 = v13;
  v30 = 8 * v13;
  *(_BYTE *)(v24 + 7 * v13) = 7;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000012, 0x8000000100692D50);
  v31.n128_f64[0] = v23(v5, 1, 1, v27);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x636974656C687461, 0xEE006B636172742ELL, 0, 0, v31);
  DisplayRepresentation.init(title:subtitle:image:)(v10, v5, v2);
  *(_BYTE *)(v24 + v30) = 8;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000017, 0x8000000100692D90);
  v32.n128_f64[0] = v23(v5, 1, 1, v27);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000010, 0x80000001006899C0, 0, 0, v32);
  DisplayRepresentation.init(title:subtitle:image:)(v10, v5, v2);
  *(_BYTE *)(v24 + v30 + v37) = 9;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x800000010069B670);
  v33.n128_f64[0] = v23(v5, 1, 1, v27);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x6574756F72, 0xE500000000000000, 0, 0, v33);
  DisplayRepresentation.init(title:subtitle:image:)(v10, v5, v2);
  return sub_1004366D0(v38);
}

unint64_t sub_100385964()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double (*v17)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  uint64_t v23;
  uint64_t v24;

  v0 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v0);
  v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100830240);
  v11 = *(_QWORD *)(sub_100047110(&qword_100830248) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v10, v14 + 4 * v12, v13 | 7);
  v24 = v15;
  *(_OWORD *)(v15 + 16) = xmmword_100624D00;
  v16 = v15 + v14;
  *(_BYTE *)(v15 + v14) = 0;
  LocalizedStringResource.init(stringLiteral:)(0x647261646E617453, 0xEE0074696C705320);
  v17 = *(double (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v18.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000013, 0x800000010068FC40, 0, 0, v18);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v16 + v12) = 1;
  LocalizedStringResource.init(stringLiteral:)(0x53206D6F74737543, 0xEC00000074696C70);
  v19.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000018, 0x800000010068FC20, 0, 0, v19);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v16 + 2 * v12) = 2;
  LocalizedStringResource.init(stringLiteral:)(0x746E656D676553, 0xE700000000000000);
  v20.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x656C637269632E31, 0xE800000000000000, 0, 0, v20);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v16 + 3 * v12) = 3;
  LocalizedStringResource.init(stringLiteral:)(0x6C61767265746E49, 0xE800000000000000);
  v21.n128_f64[0] = v17(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x696C632E7473696CLL, 0xEE006472616F6270, 0, 0, v21);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  return sub_10043687C(v24);
}

unint64_t sub_100385CCC(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100782A98, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_100385D14()
{
  unint64_t result;

  result = qword_100830260;
  if (!qword_100830260)
  {
    result = swift_getWitnessTable(&unk_1006381AC, &type metadata for WorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830260);
  }
  return result;
}

double sub_100385D58(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_100385D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100830288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100385DC8()
{
  unint64_t result;

  result = qword_1008302A0;
  if (!qword_1008302A0)
  {
    result = swift_getWitnessTable(&unk_10063AB80, &type metadata for WorkoutExtreme);
    atomic_store(result, (unint64_t *)&qword_1008302A0);
  }
  return result;
}

uint64_t sub_100385E0C()
{
  return EnvironmentValues.openURL.getter();
}

unint64_t sub_100385E38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008302E0;
  if (!qword_1008302E0)
  {
    v1 = sub_100007050(&qword_1008302C0);
    sub_1000083D8(&qword_1008302E8, type metadata accessor for WorkoutStatView, (uint64_t)&unk_10063A218);
    sub_100028384(&qword_1008302F0, &qword_1008302B8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008302E0);
  }
  return result;
}

uint64_t sub_100385ED4(uint64_t a1)
{
  uint64_t v1;

  return sub_1003814C4(a1, *(_QWORD *)(v1 + 16)) & 1;
}

unint64_t sub_100385EF0()
{
  unint64_t result;

  result = qword_100830308;
  if (!qword_100830308)
  {
    result = swift_getWitnessTable(&unk_10063A934, &type metadata for WorkoutExtremeStatIntentError);
    atomic_store(result, (unint64_t *)&qword_100830308);
  }
  return result;
}

uint64_t sub_100385F34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100385F5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100385F84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100385FAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100385FD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100385FFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100386024@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10038604C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100386074@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_10038609C()
{
  unint64_t result;

  result = qword_100830408;
  if (!qword_100830408)
  {
    result = swift_getWitnessTable(&unk_100637CD4, &type metadata for OpenMultisportActivityPageIntent);
    atomic_store(result, (unint64_t *)&qword_100830408);
  }
  return result;
}

unint64_t sub_1003860E0()
{
  unint64_t result;

  result = qword_100830410;
  if (!qword_100830410)
  {
    result = swift_getWitnessTable(&unk_100637D24, &type metadata for OpenMultisportActivityPageIntent);
    atomic_store(result, (unint64_t *)&qword_100830410);
  }
  return result;
}

uint64_t sub_100386124@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10038614C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100386174()
{
  unint64_t result;

  result = qword_100830438;
  if (!qword_100830438)
  {
    result = swift_getWitnessTable(&unk_100637B58, &type metadata for OpenMultisportActivityIntent);
    atomic_store(result, (unint64_t *)&qword_100830438);
  }
  return result;
}

unint64_t sub_1003861B8()
{
  unint64_t result;

  result = qword_100830440;
  if (!qword_100830440)
  {
    result = swift_getWitnessTable(&unk_100637BA8, &type metadata for OpenMultisportActivityIntent);
    atomic_store(result, (unint64_t *)&qword_100830440);
  }
  return result;
}

unint64_t sub_1003861FC()
{
  unint64_t result;

  result = qword_100830448;
  if (!qword_100830448)
  {
    result = swift_getWitnessTable(&unk_1006379DC, &type metadata for OpenWorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830448);
  }
  return result;
}

unint64_t sub_100386240()
{
  unint64_t result;

  result = qword_100830450;
  if (!qword_100830450)
  {
    result = swift_getWitnessTable(&unk_100637A2C, &type metadata for OpenWorkoutPage);
    atomic_store(result, (unint64_t *)&qword_100830450);
  }
  return result;
}

unint64_t sub_100386284()
{
  unint64_t result;

  result = qword_100830478;
  if (!qword_100830478)
  {
    result = swift_getWitnessTable(&unk_100637860, &type metadata for OpenWorkoutIntent);
    atomic_store(result, (unint64_t *)&qword_100830478);
  }
  return result;
}

unint64_t sub_1003862C8()
{
  unint64_t result;

  result = qword_100830480;
  if (!qword_100830480)
  {
    result = swift_getWitnessTable(&unk_1006378B0, &type metadata for OpenWorkoutIntent);
    atomic_store(result, &qword_100830480);
  }
  return result;
}

uint64_t sub_10038630C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100386334@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10038635C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100386384()
{
  unint64_t result;

  result = qword_1008304E0;
  if (!qword_1008304E0)
  {
    result = swift_getWitnessTable(&unk_100637714, &type metadata for OpenUnifiedWorkoutIntent);
    atomic_store(result, (unint64_t *)&qword_1008304E0);
  }
  return result;
}

uint64_t type metadata accessor for MindfulnessActivityTileDataModel()
{
  return objc_opt_self(_TtC10FitnessApp32MindfulnessActivityTileDataModel);
}

id sub_1003864D4()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v0, "setFont:", v1);

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v0, "setTextColor:", v2);

  objc_msgSend(v0, "setScrollEnabled:", 0);
  objc_msgSend(v0, "setEditable:", 0);
  objc_msgSend(v0, "_setInteractiveTextSelectionDisabled:", 1);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  return objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
}

id sub_1003865D0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendsFooterTextView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrendsFooterTextView()
{
  return objc_opt_self(_TtC10FitnessApp20TrendsFooterTextView);
}

void sub_100386620(uint64_t a1)
{
  sub_1003868E8(a1, &UIFontTextStyleBody, &qword_100830630);
}

uint64_t sub_100386634()
{
  uint64_t result;

  sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  result = static UIFont.systemFont(ofSize:weight:design:)(*(_QWORD *)&UIFontWeightRegular, 0, UIFontDescriptorSystemDesignRounded, 28.0);
  qword_100830638 = result;
  return result;
}

id sub_100386694()
{
  id result;

  result = sub_1003866B0();
  qword_100830640 = (uint64_t)result;
  return result;
}

id sub_1003866B0()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  NSString *v8;
  id v9;
  id v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  Class isa;
  id v16;
  double v17;
  id v18;
  _BYTE v20[64];
  _BYTE v21[48];

  v0 = sub_100047110(&qword_10082FB08);
  inited = swift_initStackObject(v0, v21);
  *(_OWORD *)(inited + 16) = xmmword_100622F90;
  *(_QWORD *)(inited + 32) = UIFontDescriptorFeatureSettingsAttribute;
  v2 = sub_100047110(&qword_10082FB10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100622F90;
  v4 = sub_100047110(&qword_10082FB18);
  v5 = swift_initStackObject(v4, v20);
  *(_OWORD *)(v5 + 16) = xmmword_100620BC0;
  v6 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 40) = 38;
  v7 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 48) = UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v5 + 56) = 1;
  v8 = UIFontDescriptorFeatureSettingsAttribute;
  v9 = v6;
  v10 = v7;
  *(_QWORD *)(v3 + 32) = sub_100038DB0(v5);
  *(_QWORD *)(inited + 40) = v3;
  v11 = sub_100435C18(inited);
  if (qword_10081DBA8 != -1)
    swift_once(&qword_10081DBA8, sub_100386634);
  v12 = objc_msgSend((id)qword_100830638, "fontDescriptor", 1, 2);
  sub_1002F74FC(v11);
  v14 = v13;
  swift_bridgeObjectRelease(v11);
  type metadata accessor for AttributeName(0);
  sub_1000083D8((unint64_t *)&qword_10081E830, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10062267C);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v12, "fontDescriptorByAddingAttributes:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  objc_msgSend((id)qword_100830638, "pointSize");
  v18 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v16, v17);

  return v18;
}

void sub_1003868D4(uint64_t a1)
{
  sub_1003868E8(a1, &UIFontTextStyleFootnote, &qword_100830648);
}

void sub_1003868E8(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;

  v5 = (void *)objc_opt_self(UIFont);
  static String._unconditionallyBridgeFromObjectiveC(_:)(*a2);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v9 = objc_msgSend(v5, "defaultFontForTextStyle:", v8);

  *a3 = v9;
}

id sub_100386964(uint64_t a1)
{
  return sub_1003869E8(a1, &qword_10081DBA0, (void **)&qword_100830630, (void **)&qword_100830650, (uint64_t)sub_100386620);
}

id sub_100386988()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "fu_sausageFontOfSize:", 30.0);
  qword_100830658 = (uint64_t)result;
  return result;
}

id sub_1003869C4(uint64_t a1)
{
  return sub_1003869E8(a1, &qword_10081DBC8, (void **)&qword_100830658, (void **)&qword_100830660, (uint64_t)sub_100386988);
}

id sub_1003869E8(uint64_t a1, _QWORD *a2, void **a3, void **a4, uint64_t a5)
{
  void *v7;

  if (*a2 != -1)
    swift_once(a2, a5);
  v7 = *a3;
  *a4 = *a3;
  return v7;
}

id sub_100386A2C(double a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t inited;
  void *v9;
  NSString *v10;
  id result;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString *v16;
  void *v17;
  id v18;
  unint64_t v19;
  id v20;
  NSString v21;
  Class isa;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_fiuiFormattingManager), "stringWithDuration:durationFormat:", 3);
  if (v3)
  {
    v4 = v3;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

  }
  else
  {
    v25 = 0;
    v26 = 0xE000000000000000;
    Double.write<A>(to:)(&v25, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, a1);
    v6 = v26;
  }
  v7 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v7, &v24);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v9 = (void *)objc_opt_self(ARUIMetricColors);
  v10 = NSForegroundColorAttributeName;
  result = objc_msgSend(v9, "elapsedTimeColors");
  if (result)
  {
    v12 = result;
    v13 = objc_msgSend(result, "nonGradientTextColor");

    v14 = sub_100047110(&qword_1008306A0);
    *(_QWORD *)(inited + 40) = v13;
    *(_QWORD *)(inited + 64) = v14;
    *(_QWORD *)(inited + 72) = NSFontAttributeName;
    v15 = qword_10081DBC8;
    v16 = NSFontAttributeName;
    if (v15 != -1)
      swift_once(&qword_10081DBC8, sub_100386988);
    v17 = (void *)qword_100830658;
    *(_QWORD *)(inited + 104) = sub_100047110((uint64_t *)&unk_10082EE00);
    *(_QWORD *)(inited + 80) = v17;
    v18 = v17;
    v19 = sub_100038C84(inited);
    v20 = objc_allocWithZone((Class)NSAttributedString);
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    type metadata accessor for Key(0);
    sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v23 = objc_msgSend(v20, "initWithString:attributes:", v21, isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100386C70(double a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  id result;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t inited;
  void *v16;
  NSString *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSString *v22;
  void *v23;
  id v24;
  unint64_t v25;
  id v26;
  NSString v27;
  Class isa;
  id v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSString *v39;
  void *v40;
  id v41;
  uint64_t v42;
  NSString *v43;
  void *v44;
  id v45;
  unint64_t v46;
  id v47;
  NSString v48;
  Class v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  _BYTE v55[112];
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[120];

  v3 = (_QWORD *)swift_slowAlloc(8, -1);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_fiuiFormattingManager);
  result = objc_msgSend(v4, "unitManager");
  if (!result)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = result;
  v7 = objc_msgSend(result, "userDistanceUnitForDistanceType:", 1);

  *v3 = v7;
  sub_10001E724(0, (unint64_t *)&qword_10081F420, FIUIWorkoutActivityType_ptr);
  v8 = (void *)static FIUIWorkoutActivityType.indoorRun.getter();
  v9 = FIUIDistanceTypeForActivityType(v8);

  v10 = objc_msgSend(v4, "localizedNaturalScaleStringWithDistanceInMeters:distanceType:unitStyle:usedUnit:decimalTrimmingMode:", v9, 0, v3, 2, a1);
  if (v10)
  {
    v11 = v10;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

  }
  else
  {
    v13 = 0xE000000000000000;
  }
  v14 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v14, v58);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v16 = (void *)objc_opt_self(ARUIMetricColors);
  v17 = NSForegroundColorAttributeName;
  v54 = v16;
  result = objc_msgSend(v16, "distanceColors");
  if (!result)
    goto LABEL_14;
  v18 = result;
  v53 = v14;
  v19 = objc_msgSend(result, "nonGradientTextColor");

  v20 = sub_100047110(&qword_1008306A0);
  *(_QWORD *)(inited + 40) = v19;
  v52 = v20;
  *(_QWORD *)(inited + 64) = v20;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v21 = qword_10081DBD0;
  v22 = NSFontAttributeName;
  if (v21 != -1)
    swift_once(&qword_10081DBD0, sub_1003869C4);
  v23 = (void *)qword_100830660;
  *(_QWORD *)(inited + 104) = sub_100047110((uint64_t *)&unk_10082EE00);
  *(_QWORD *)(inited + 80) = v23;
  v24 = v23;
  v25 = sub_100038C84(inited);
  v26 = objc_allocWithZone((Class)NSAttributedString);
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v29 = objc_msgSend(v26, "initWithString:attributes:", v27, isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

  result = objc_msgSend(v4, "localizedShortUnitStringForDistanceUnit:", *v3);
  if (!result)
    goto LABEL_15;
  v30 = result;
  v31 = v29;
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v34 = v33;

  v56 = v32;
  v57 = v34;
  v35 = sub_100038CA0();
  StringProtocol.localizedUppercase.getter(&type metadata for String, v35);
  v37 = v36;
  swift_bridgeObjectRelease(v34);
  v38 = swift_initStackObject(v53, v55);
  *(_OWORD *)(v38 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v38 + 32) = v17;
  v39 = v17;
  result = objc_msgSend(v54, "distanceColors");
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v40 = result;
  v41 = objc_msgSend(result, "nonGradientTextColor");

  *(_QWORD *)(v38 + 40) = v41;
  *(_QWORD *)(v38 + 64) = v52;
  *(_QWORD *)(v38 + 72) = v22;
  v42 = qword_10081DBB0;
  v43 = v22;
  if (v42 != -1)
    swift_once(&qword_10081DBB0, sub_100386694);
  v44 = (void *)qword_100830640;
  *(_QWORD *)(v38 + 104) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  *(_QWORD *)(v38 + 80) = v44;
  v45 = v44;
  v46 = sub_100038C84(v38);
  v47 = objc_allocWithZone((Class)NSAttributedString);
  v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v37);
  v49 = Dictionary._bridgeToObjectiveC()().super.isa;
  v50 = objc_msgSend(v47, "initWithString:attributes:", v48, v49, swift_bridgeObjectRelease(v46).n128_f64[0]);

  v51 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v31);
  objc_msgSend(v51, "appendAttributedString:", v50);

  return v51;
}

void sub_100387144()
{
  sub_100387628();
}

id sub_100387160(double a1)
{
  uint64_t v1;
  void *v3;
  id result;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  uint64_t v12;
  uint64_t inited;
  void *v14;
  NSString *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString *v20;
  void *v21;
  id v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  id v24;
  NSString v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  Class isa;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  unint64_t v45;
  const char *v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  NSString *v55;
  void *v56;
  id v57;
  uint64_t v58;
  NSString *v59;
  void *v60;
  id v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  id v63;
  NSString v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  Class v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  void *v83;
  uint64_t v84;
  _BYTE v85[112];
  uint64_t v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  _BYTE v88[120];

  v3 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_fiuiFormattingManager);
  result = objc_msgSend(v3, "unitManager");
  if (!result)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v5 = result;
  v6 = objc_msgSend(result, "userActiveEnergyBurnedUnit");

  v7 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v6, a1);
  v8 = objc_msgSend(v3, "localizedStringWithActiveEnergy:", v7);
  if (v8)
  {
    v9 = v8;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

  }
  else
  {
    v11 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
  }
  v12 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v12, v88);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v14 = (void *)objc_opt_self(ARUIMetricColors);
  v15 = NSForegroundColorAttributeName;
  result = objc_msgSend(v14, "energyColors");
  if (!result)
    goto LABEL_14;
  v16 = result;
  v84 = v12;
  v83 = v7;
  v17 = objc_msgSend(result, "nonGradientTextColor");

  v18 = sub_100047110(&qword_1008306A0);
  *(_QWORD *)(inited + 40) = v17;
  *(_QWORD *)(inited + 64) = v18;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v19 = qword_10081DBD0;
  v20 = NSFontAttributeName;
  if (v19 != -1)
    swift_once(&qword_10081DBD0, sub_1003869C4);
  v21 = (void *)qword_100830660;
  *(_QWORD *)(inited + 104) = sub_100047110((uint64_t *)&unk_10082EE00);
  *(_QWORD *)(inited + 80) = v21;
  v22 = v21;
  v23 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(inited);
  v24 = objc_allocWithZone((Class)NSAttributedString);
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11, v26, v27, v28, v29, v30, v31, v32);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v23, v34, v35, v36, v37, v38, v39, v40);
  v82 = objc_msgSend(v24, "initWithString:attributes:", v25, isa);

  result = objc_msgSend(v3, "localizedShortActiveEnergyUnitString");
  if (!result)
    goto LABEL_15;
  v41 = result;
  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v44 = v43;

  v86 = v42;
  v87 = v44;
  v45 = sub_100038CA0();
  StringProtocol.localizedUppercase.getter(&type metadata for String, v45);
  v47 = (CHWorkoutDetailHeartRateTableViewCell *)v46;
  swift_bridgeObjectRelease(v44, v46, v48, v49, v50, v51, v52, v53);
  v54 = swift_initStackObject(v84, v85);
  *(_OWORD *)(v54 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v54 + 32) = v15;
  v55 = v15;
  result = objc_msgSend(v14, "energyColors");
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v56 = result;
  v57 = objc_msgSend(result, "nonGradientTextColor");

  *(_QWORD *)(v54 + 40) = v57;
  *(_QWORD *)(v54 + 64) = v18;
  *(_QWORD *)(v54 + 72) = v20;
  v58 = qword_10081DBB0;
  v59 = v20;
  if (v58 != -1)
    swift_once(&qword_10081DBB0, sub_100386694);
  v60 = (void *)qword_100830640;
  *(_QWORD *)(v54 + 104) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  *(_QWORD *)(v54 + 80) = v60;
  v61 = v60;
  v62 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(v54);
  v63 = objc_allocWithZone((Class)NSAttributedString);
  v64 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v47, v65, v66, v67, v68, v69, v70, v71);
  v72 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v62, v73, v74, v75, v76, v77, v78, v79);
  v80 = objc_msgSend(v63, "initWithString:attributes:", v64, v72);

  v81 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v82);
  objc_msgSend(v81, "appendAttributedString:", v80);

  return v81;
}

void sub_10038760C()
{
  sub_100387628();
}

void sub_100387628()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_fiuiFormattingManager);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "localizationKeyForEnergyBaseKey:", v2);

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v5 = v4;

    v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    swift_bridgeObjectRelease(v5);

  }
  else
  {
    __break(1u);
  }
}

id sub_100387758()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StackFormattingManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1003877C0()
{
  Class isa;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __n128 v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  void *v32;
  NSString *v33;
  id result;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  NSString *v39;
  void *v40;
  id v41;
  unint64_t v42;
  id v43;
  NSString v44;
  Class v45;
  id v46;
  NSString v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  Class v51;
  _BYTE v52[112];
  uint64_t v53;
  uint64_t v54;

  sub_1002F52D8();
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  v1 = objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "stringWithNumber:decimalPrecision:roundingMode:", isa, 1, 6);
  v51 = isa;
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

  }
  else
  {
    v5 = 0xE100000000000000;
    v3 = 48;
  }
  v6 = (void *)objc_opt_self(NSBundle);
  v7 = objc_msgSend(v6, "mainBundle");
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, 0, 0);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v13 = objc_msgSend(v6, "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, 0, 0);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v53 = v16;
  v54 = v18;
  v19 = sub_100038CA0();
  StringProtocol.localizedUppercase.getter(&type metadata for String, v19);
  v21 = v20;
  swift_bridgeObjectRelease(v18);
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  sub_10001E724(0, &qword_10081E628, NSString_ptr);
  v23 = sub_100047110((uint64_t *)&unk_100827460);
  v24 = swift_allocObject(v23, 112, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v24 + 56) = &type metadata for String;
  v25 = sub_100038CF8();
  *(_QWORD *)(v24 + 32) = v3;
  *(_QWORD *)(v24 + 40) = v5;
  *(_QWORD *)(v24 + 96) = &type metadata for String;
  *(_QWORD *)(v24 + 104) = v25;
  *(_QWORD *)(v24 + 64) = v25;
  *(_QWORD *)(v24 + 72) = v10;
  *(_QWORD *)(v24 + 80) = v12;
  v26 = swift_bridgeObjectRetain(v12);
  v27 = (void *)NSString.init(format:_:)(v22, v24, v26);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v29 = v28;
  v30 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v30, v52);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v32 = (void *)objc_opt_self(ARUIMetricColors);
  v33 = NSForegroundColorAttributeName;
  result = objc_msgSend(v32, "elapsedTimeColors");
  if (result)
  {
    v35 = result;
    v36 = objc_msgSend(result, "nonGradientTextColor");

    v37 = sub_100047110(&qword_1008306A0);
    *(_QWORD *)(inited + 40) = v36;
    *(_QWORD *)(inited + 64) = v37;
    *(_QWORD *)(inited + 72) = NSFontAttributeName;
    v38 = qword_10081DBA8;
    v39 = NSFontAttributeName;
    if (v38 != -1)
      swift_once(&qword_10081DBA8, sub_100386634);
    v40 = (void *)qword_100830638;
    *(_QWORD *)(inited + 104) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
    *(_QWORD *)(inited + 80) = v40;
    v41 = v40;
    v42 = sub_100038C84(inited);
    v43 = objc_allocWithZone((Class)NSMutableAttributedString);
    v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
    type metadata accessor for Key(0);
    sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
    v45 = Dictionary._bridgeToObjectiveC()().super.isa;
    v46 = objc_msgSend(v43, "initWithString:attributes:", v44, v45, swift_bridgeObjectRelease(v42).n128_f64[0]);

    v47 = String._bridgeToObjectiveC()();
    v48 = objc_msgSend(v27, "rangeOfString:", v47, swift_bridgeObjectRelease(v12).n128_f64[0]);
    v50 = v49;

    if (qword_10081DBB0 != -1)
      swift_once(&qword_10081DBB0, sub_100386694);
    objc_msgSend(v46, "addAttribute:value:range:", v39, qword_100830640, v48, v50);

    return v46;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100387C74()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  void *v7;
  NSString *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString *v12;
  void *v13;
  id v14;
  unint64_t v15;
  id v16;
  NSString v17;
  Class isa;
  id v19;
  uint64_t v21;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v4 = v3;

  v5 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v5, &v21);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v7 = (void *)objc_opt_self(UIColor);
  v8 = NSForegroundColorAttributeName;
  v9 = objc_msgSend(v7, "labelColor");
  v10 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v9;
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v11 = qword_10081DBA0;
  v12 = NSFontAttributeName;
  if (v11 != -1)
    swift_once(&qword_10081DBA0, sub_100386620);
  v13 = (void *)qword_100830630;
  *(_QWORD *)(inited + 104) = sub_100047110((uint64_t *)&unk_10082EE00);
  *(_QWORD *)(inited + 80) = v13;
  v14 = v13;
  v15 = sub_100038C84(inited);
  v16 = objc_allocWithZone((Class)NSAttributedString);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend(v16, "initWithString:attributes:", v17, isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

  return v19;
}

id sub_100387EB4()
{
  id v0;
  Class isa;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  void *v16;
  NSString *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSString *v21;
  void *v22;
  id v23;
  unint64_t v24;
  id v25;
  NSString v26;
  Class v27;
  id v28;
  _QWORD v30[16];

  v0 = objc_msgSend((id)objc_opt_self(CHListAndDetailViewDateFormatter), "timeDateFormatter");
  type metadata accessor for FitnessPlusStackViewModel(0);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v2 = objc_msgSend(v0, "stringFromDate:", isa);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6 = Date._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v0, "stringFromDate:", v6);

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v30[14] = v3;
  v30[15] = v5;
  v11._countAndFlagsBits = 9666786;
  v11._object = (void *)0xA300000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = v8;
  v12._object = v10;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v10);
  v13 = v5;
  v14 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v14, v30);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v16 = (void *)objc_opt_self(UIColor);
  v17 = NSForegroundColorAttributeName;
  v18 = objc_msgSend(v16, "secondaryLabelColor");
  v19 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v18;
  *(_QWORD *)(inited + 64) = v19;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v20 = qword_10081DBC0;
  v21 = NSFontAttributeName;
  if (v20 != -1)
    swift_once(&qword_10081DBC0, sub_100386964);
  v22 = (void *)qword_100830650;
  *(_QWORD *)(inited + 104) = sub_100047110((uint64_t *)&unk_10082EE00);
  *(_QWORD *)(inited + 80) = v22;
  v23 = v22;
  v24 = sub_100038C84(inited);
  v25 = objc_allocWithZone((Class)NSAttributedString);
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  v27 = Dictionary._bridgeToObjectiveC()().super.isa;
  v28 = objc_msgSend(v25, "initWithString:attributes:", v26, v27, swift_bridgeObjectRelease(v24).n128_f64[0]);

  return v28;
}

unint64_t sub_100388164()
{
  unint64_t result;

  result = qword_1008306A8;
  if (!qword_1008306A8)
  {
    result = swift_getWitnessTable(&unk_100638B8C, &type metadata for WorkoutSegmentEntity);
    atomic_store(result, (unint64_t *)&qword_1008306A8);
  }
  return result;
}

unint64_t sub_1003881AC()
{
  unint64_t result;

  result = qword_1008306B0;
  if (!qword_1008306B0)
  {
    result = swift_getWitnessTable(&unk_100638BC4, &type metadata for WorkoutSegmentEntity);
    atomic_store(result, (unint64_t *)&qword_1008306B0);
  }
  return result;
}

unint64_t sub_1003881F4()
{
  unint64_t result;

  result = qword_1008306B8;
  if (!qword_1008306B8)
  {
    result = swift_getWitnessTable(&unk_100638BF4, &type metadata for WorkoutSegmentEntity);
    atomic_store(result, (unint64_t *)&qword_1008306B8);
  }
  return result;
}

unint64_t sub_10038823C()
{
  unint64_t result;

  result = qword_1008306C0;
  if (!qword_1008306C0)
  {
    result = swift_getWitnessTable(&unk_10063B020, &type metadata for WorkoutSegmentEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1008306C0);
  }
  return result;
}

uint64_t sub_100388280()
{
  return sub_100388D44(&qword_1008306C8, (uint64_t)&unk_100638DB4);
}

uint64_t type metadata accessor for WorkoutSegmentIdentifier()
{
  return objc_opt_self(_TtC10FitnessApp24WorkoutSegmentIdentifier);
}

uint64_t sub_1003882C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  id v17;
  double v18;
  void (*v19)(_QWORD *, uint64_t);
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  char *v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  double v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  double v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  void *v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  id v56;
  char *v57;
  id v58;
  uint64_t v59;
  const char *v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  Swift::String v68;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  Swift::String v77;
  Swift::String v78;
  SEL v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  void *v88;
  uint64_t v89;
  char *v90;
  Swift::String v91;
  uint64_t v92;
  uint64_t v93;
  id v94[2];
  _BYTE v95[16];
  uint64_t v96;
  char v97;

  v1 = v0;
  v2 = sub_100047110(&qword_100821E38);
  __chkstk_darwin(v2);
  v4 = (CHWorkoutDetailHeartRateTableViewCell **)((char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100047110(&qword_100821E10);
  v92 = *(_QWORD *)(v5 - 8);
  v93 = v5;
  __chkstk_darwin(v5);
  v90 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100821E40);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (CHWorkoutDetailHeartRateTableViewCell **)((char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, 0, 0);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v89 = *(_QWORD *)(v1 + 64);
  AppDependency.wrappedValue.getter(v94);
  v17 = v94[0];
  EntityProperty.wrappedValue.getter(v10);
  v18 = Measurement.value.getter(v7);
  v19 = *(void (**)(_QWORD *, uint64_t))(v8 + 8);
  v19(v10, v7);
  v20 = objc_msgSend(v17, "stringWithDuration:durationFormat:", 3, v18);

  v88 = (void *)v14;
  if (v20)
  {
    v91._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v91._object = v21;

  }
  else
  {
    swift_bridgeObjectRetain(v16);
    v91._countAndFlagsBits = v14;
    v91._object = v16;
  }
  v23 = v92;
  v22 = v93;
  EntityProperty.wrappedValue.getter(v4);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v4, 1, v22) == 1)
  {
    swift_bridgeObjectRelease(v16, v24, v25, v26, v27, v28, v29, v30);
    sub_10001BE90((uint64_t)v4, &qword_100821E38);
    return v91._countAndFlagsBits;
  }
  v87 = v16;
  v31 = v90;
  (*(void (**)(char *, _QWORD *, uint64_t))(v23 + 32))(v90, v4, v22);
  sub_100045AD4(v1 + 48, (uint64_t)v95, &qword_100830810);
  sub_100045AD4((uint64_t)v95, (uint64_t)&v96, &qword_100830810);
  if (v97 == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v31, v22);
    swift_bridgeObjectRelease(v87, v32, v33, v34, v35, v36, v37, v38);
    return v91._countAndFlagsBits;
  }
  v40 = v96;
  v41 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
  v42 = Measurement.value.getter(v22);
  v43 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v41, v42);

  v44 = v40;
  v45 = FIUIPaceFormatForDistanceType(v40);
  AppDependency.wrappedValue.getter(v94);
  v46 = v94[0];
  v47 = v43;
  EntityProperty.wrappedValue.getter(v10);
  v48 = Measurement.value.getter(v7);
  v19(v10, v7);
  v49 = v44;
  v50 = objc_msgSend(v46, "localizedPaceStringWithDistance:overDuration:paceFormat:distanceType:", v47, v45, v44, v48);

  if (v50)
  {
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v53 = v52;

    v55 = v87;
    v54 = v88;
  }
  else
  {
    v55 = v87;
    swift_bridgeObjectRetain(v87);
    v54 = v88;
    v51 = (uint64_t)v88;
    v53 = v55;
  }
  AppDependency.wrappedValue.getter(v94);
  v56 = v94[0];
  v57 = v90;
  v58 = objc_msgSend(v94[0], "localizedStringWithDistanceInMeters:distanceType:unitStyle:", v49, 1, Measurement.value.getter(v93));

  v59 = v92;
  if (v58)
  {
    v54 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v61 = (CHWorkoutDetailHeartRateTableViewCell *)v60;
    swift_bridgeObjectRelease(v55, v60, v62, v63, v64, v65, v66, v67);

    v55 = v61;
  }
  v94[0] = v54;
  v94[1] = v55;
  v68._countAndFlagsBits = 548913696;
  v68._object = (void *)0xA400000000000000;
  String.append(_:)(v68);
  object = (CHWorkoutDetailHeartRateTableViewCell *)v91._object;
  String.append(_:)(v91);
  swift_bridgeObjectRelease(object, v70, v71, v72, v73, v74, v75, v76);
  v77._countAndFlagsBits = 548913696;
  v77._object = (void *)0xA400000000000000;
  String.append(_:)(v77);
  v78._countAndFlagsBits = v51;
  v78._object = v53;
  String.append(_:)(v78);

  swift_bridgeObjectRelease(v53, v79, v80, v81, v82, v83, v84, v85);
  v39 = v94[0];
  (*(void (**)(char *, uint64_t))(v59 + 8))(v57, v93);
  return (uint64_t)v39;
}

uint64_t sub_100388798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  sub_100047110(&qword_1008201E0);
  v0 = type metadata accessor for AppDependencyManager(0);
  v9 = 0u;
  v10 = 0u;
  v11 = 0;
  v1 = static AppDependencyManager.shared.getter(v0);
  v2 = AppDependency.__allocating_init(key:manager:)(&v9, v1);
  v3 = sub_100047110(&qword_1008201E8);
  v11 = 0;
  v9 = 0u;
  v10 = 0u;
  v4 = static AppDependencyManager.shared.getter(v3);
  v5 = AppDependency.__allocating_init(key:manager:)(&v9, v4);
  v6 = sub_100047110(&qword_100822D10);
  v11 = 0;
  v9 = 0u;
  v10 = 0u;
  v7 = static AppDependencyManager.shared.getter(v6);
  result = AppDependency.__allocating_init(key:manager:)(&v9, v7);
  qword_10086A750 = v2;
  *(_QWORD *)algn_10086A758 = v5;
  qword_10086A760 = result;
  return result;
}

uint64_t sub_100388888()
{
  uint64_t v0;

  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_100008398(v0, qword_10086A768);
  sub_10003CE9C(v0, (uint64_t)qword_10086A768);
  return TypeDisplayRepresentation.init(stringLiteral:)(0x2074756F6B726F57, 0xEF746E656D676553);
}

_QWORD *sub_1003888F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  Swift::String v18;
  _QWORD *result;
  Swift::String v20;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  Swift::String v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;

  v2 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v50 - v16;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
  v52._countAndFlagsBits = 0x20746E656D676553;
  v52._object = (void *)0xE800000000000000;
  result = EntityProperty.wrappedValue.getter(&v51);
  if (__OFADD__(v51, 1))
  {
    __break(1u);
  }
  else
  {
    ++v51;
    v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v50 = a1;
    object = (CHWorkoutDetailHeartRateTableViewCell *)v20._object;
    String.append(_:)(v20);
    swift_bridgeObjectRelease(object, v22, v23, v24, v25, v26, v27, v28);
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)v52._object;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v52);
    swift_bridgeObjectRelease(v29, v30, v31, v32, v33, v34, v35, v36);
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
    LocalizedStringResource.init(stringInterpolation:)(v17);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v38._countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v38);
    v39._countAndFlagsBits = sub_1003882C4();
    v40 = (CHWorkoutDetailHeartRateTableViewCell *)v39._object;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v39);
    swift_bridgeObjectRelease(v40, v41, v42, v43, v44, v45, v46, v47);
    v48._countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v48);
    LocalizedStringResource.init(stringInterpolation:)(v14);
    v49.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x656C637269632E31, 0xE800000000000000, 0, 0, v49);
    return (_QWORD *)DisplayRepresentation.init(title:subtitle:image:)(v11, v7, v4);
  }
  return result;
}

double sub_100388B8C@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  if (qword_10081DBD8 != -1)
    swift_once(&qword_10081DBD8, sub_100388798);
  v2 = qword_10086A750;
  v3 = *(_QWORD *)algn_10086A758;
  v4 = qword_10086A760;
  *a1 = qword_10086A750;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain(v2);
  swift_retain(v3);
  *(_QWORD *)&result = swift_retain(v4).n128_u64[0];
  return result;
}

unint64_t sub_100388C04()
{
  unint64_t result;

  result = qword_1008306D0;
  if (!qword_1008306D0)
  {
    result = swift_getWitnessTable(&unk_100638C2C, &type metadata for WorkoutSegmentEntity);
    atomic_store(result, (unint64_t *)&qword_1008306D0);
  }
  return result;
}

unint64_t sub_100388C4C()
{
  unint64_t result;

  result = qword_1008306D8;
  if (!qword_1008306D8)
  {
    result = swift_getWitnessTable(&unk_100638C54, &type metadata for WorkoutSegmentEntity);
    atomic_store(result, (unint64_t *)&qword_1008306D8);
  }
  return result;
}

unint64_t sub_100388C94()
{
  unint64_t result;

  result = qword_1008306E0;
  if (!qword_1008306E0)
  {
    result = swift_getWitnessTable(&unk_100638C7C, &type metadata for WorkoutSegmentEntity);
    atomic_store(result, (unint64_t *)&qword_1008306E0);
  }
  return result;
}

unint64_t sub_100388CDC()
{
  unint64_t result;

  result = qword_1008306E8;
  if (!qword_1008306E8)
  {
    result = swift_getWitnessTable(&unk_100638CD4, &type metadata for WorkoutSegmentEntity);
    atomic_store(result, (unint64_t *)&qword_1008306E8);
  }
  return result;
}

uint64_t sub_100388D20()
{
  return sub_100388D44(&qword_1008306F0, (uint64_t)&unk_100638DE4);
}

uint64_t sub_100388D44(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for WorkoutSegmentIdentifier();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100388D80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10081DBE0 != -1)
    swift_once(&qword_10081DBE0, sub_100388888);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_10003CE9C(v2, (uint64_t)qword_10086A768);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_100388DF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008306F8;
  if (!qword_1008306F8)
  {
    v1 = sub_100007050(&qword_100830700);
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyResolverSpecification<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1008306F8);
  }
  return result;
}

uint64_t sub_100388E40(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100253888();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100388E7C()
{
  unint64_t result;

  result = qword_100830708;
  if (!qword_100830708)
  {
    result = swift_getWitnessTable(&unk_100638D04, &type metadata for WorkoutSegmentEntity);
    atomic_store(result, (unint64_t *)&qword_100830708);
  }
  return result;
}

_QWORD *sub_100388EC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1003888F0(a1);
}

uint64_t sub_100388F00(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100388CDC();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100388F38(char *a1, char *a2)
{
  return sub_10038FE14(*a1, *a2);
}

Swift::Int sub_100388F44()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x7865646E69;
  else
    v2 = 0x4974756F6B726F77;
  if (v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE900000000000064;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100388FC4(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7865646E69;
  else
    v2 = 0x4974756F6B726F77;
  if (*v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE900000000000064;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100389020(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x7865646E69;
  else
    v3 = 0x4974756F6B726F77;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE900000000000064;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_10038909C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100782B40, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1003890F8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x4974756F6B726F77;
  if (*v1)
    v2 = 0x7865646E69;
  v3 = 0xE900000000000064;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100389138()
{
  _BYTE *v0;

  if (*v0)
    return 0x7865646E69;
  else
    return 0x4974756F6B726F77;
}

uint64_t sub_100389174@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  uint64_t result;
  char v7;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100782B40, v3);
  result = swift_bridgeObjectRelease(object);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1003891D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10038AFB0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003891FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10038AFB0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100389224()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = *v0;
  v3 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7 = JSONEncoder.init()();
  v33 = v1;
  v8 = sub_100388D44(&qword_1008307E8, (uint64_t)&unk_100638D54);
  v22 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v33, v2, v8);
  v24 = v23;
  static String.Encoding.utf8.getter(v22);
  v25 = String.init(data:encoding:)(v22, v24, v5);
  if (v26)
  {
    v27 = v25;
    sub_10004D9E4(v22, v24);
  }
  else
  {
    v29 = sub_10038AF6C();
    v30 = swift_allocError(&type metadata for WorkoutSegmentIdentifier.JSONError, v29, 0, 0);
    swift_willThrow(v30);
    v31 = sub_10004D9E4(v22, v24);
    v9 = static os_log_type_t.error.getter(v31);
    v10 = (void *)HKLogActivity;
    v11 = sub_100047110((uint64_t *)&unk_100827460);
    v12 = swift_allocObject(v11, 112, 7);
    *(_OWORD *)(v12 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v12 + 56) = &type metadata for String;
    *(_QWORD *)(v12 + 64) = sub_100038CF8();
    *(_QWORD *)(v12 + 32) = 0xD000000000000016;
    *(_QWORD *)(v12 + 40) = 0x800000010068FD40;
    v13 = v10;
    v14 = _convertErrorToNSError(_:)(v30);
    *(_QWORD *)(v12 + 96) = sub_10001E724(0, (unint64_t *)&qword_1008274A0, NSError_ptr);
    *(_QWORD *)(v12 + 104) = sub_100221950();
    *(_QWORD *)(v12 + 72) = v14;
    os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v13, "%@ Error creating JSON data. error=%@", 37, 2, v12);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v12, v15, v16, v17, v18, v19, v20, v21);
    swift_errorRelease(v30);
    v27 = 0;
  }
  swift_release(v7);
  return v27;
}

_QWORD *sub_100389454(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = v1;
  v5 = *v1;
  v18 = sub_100047110(&qword_100830808);
  v6 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100016804(a1, v9);
  v11 = sub_10038AFB0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WorkoutSegmentIdentifier.Key, &type metadata for WorkoutSegmentIdentifier.Key, v11, v9, v10);
  if (v2)
  {
    swift_deallocPartialClassInstance(v1, v5, 40, 7);
  }
  else
  {
    v12 = v6;
    v20 = 0;
    v13 = v18;
    v1[2] = KeyedDecodingContainer.decode(_:forKey:)(&v20, v18);
    v1[3] = v14;
    v19 = 1;
    v15 = KeyedDecodingContainer.decode(_:forKey:)(&v19, v13);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v13);
    v3[4] = v15;
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  return v3;
}

uint64_t sub_1003895D0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  char v18;

  v3 = v1;
  v5 = sub_100047110(&qword_1008307F8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100016804(a1, v9);
  v11 = sub_10038AFB0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WorkoutSegmentIdentifier.Key, &type metadata for WorkoutSegmentIdentifier.Key, v11, v9, v10);
  v12 = v3[2];
  v13 = v3[3];
  v18 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v18, v5);
  if (!v2)
  {
    v14 = v3[4];
    v17 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, &v17, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1003896E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = type metadata accessor for String.Encoding(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String.Encoding.utf8.getter(v10);
  v11 = String.data(using:allowLossyConversion:)(v9, 0, a1, a2);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v13 >> 60 == 15)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010068FC90, "FitnessApp/WorkoutSegmentEntity.swift", 37, 2, 181, 0);
    __break(1u);
  }
  else
  {
    v14 = type metadata accessor for JSONDecoder(0);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    v15 = JSONDecoder.init()();
    v16 = sub_100388D44(&qword_1008307E0, (uint64_t)&unk_100638D2C);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v20, v3, v11, v13, v3, v16);
    swift_release(v15);
    sub_1000DC774(v11, v13);
    v17 = v20;
    result = swift_dynamicCastClass(v20, v3);
    if (!result)
    {
      swift_release(v17);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100389984@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100782B90, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

uint64_t sub_1003899D4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 40, 7);
}

_QWORD *sub_1003899F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *result;

  v6 = swift_allocObject(v2, 40, 7);
  result = sub_100389454(a1);
  if (!v3)
    *a2 = v6;
  return result;
}

uint64_t sub_100389A4C(_QWORD *a1)
{
  return sub_1003895D0(a1);
}

uint64_t sub_100389A6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100389224();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100389A94()
{
  return sub_100389224();
}

uint64_t sub_100389AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_1003896E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100389AD8()
{
  return sub_100388D44(&qword_100830710, (uint64_t)&unk_100638E24);
}

Swift::Int sub_100389AFC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = (_QWORD *)*v0;
  Hasher.init(_seed:)(v5, 0);
  v2 = v1[2];
  v3 = v1[3];
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  Hasher._combine(_:)(v1[4]);
  return Hasher._finalize()();
}

void sub_100389B6C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  Hasher._combine(_:)(*(_QWORD *)(v3 + 32));
}

Swift::Int sub_100389BC4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v2 = (_QWORD *)*v1;
  Hasher.init(_seed:)(v6, a1);
  v3 = v2[2];
  v4 = v2[3];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  Hasher._combine(_:)(v2[4]);
  return Hasher._finalize()();
}

BOOL sub_100389C30(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  _BOOL8 result;

  v2 = *a1;
  v3 = (_QWORD *)*a2;
  v4 = *(_QWORD *)(*a1 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = v3[2];
  v7 = v3[3];
  if (v4 == v6 && v5 == v7)
    return *(_QWORD *)(v2 + 32) == v3[4];
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0);
  result = 0;
  if ((v9 & 1) != 0)
    return *(_QWORD *)(v2 + 32) == v3[4];
  return result;
}

uint64_t destroy for WorkoutSegmentEntity(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  return swift_release(a1[8]);
}

uint64_t initializeWithCopy for WorkoutSegmentEntity(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = a2[4];
  v8 = a2[5];
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  v9 = a2[8];
  *(_QWORD *)(a1 + 64) = v9;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  return a1;
}

uint64_t *assignWithCopy for WorkoutSegmentEntity(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[4];
  v13 = a1[4];
  a1[4] = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = a2[5];
  v15 = a1[5];
  a1[5] = v14;
  swift_retain(v14);
  swift_release(v15);
  v16 = a2[6];
  *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
  a1[6] = v16;
  v17 = a2[8];
  v18 = a1[8];
  a1[8] = v17;
  swift_retain(v17);
  swift_release(v18);
  return a1;
}

uint64_t assignWithTake for WorkoutSegmentEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  swift_release(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  swift_release(*(_QWORD *)(a1 + 32));
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(v6);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release(v7);
  return a1;
}

ValueMetadata *type metadata accessor for WorkoutSegmentEntity()
{
  return &type metadata for WorkoutSegmentEntity;
}

void sub_100389EF4(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, void (*a8)(char *, uint64_t)@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, __n128);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  _OWORD v102[2];
  uint64_t v103;

  v85 = a8;
  v92 = a7;
  v93 = a9;
  v95 = a6;
  v94 = a5;
  v98 = a4;
  v99 = a3;
  v100 = a2;
  v84 = a10;
  v11 = sub_100047110(&qword_100821E28);
  v12 = __chkstk_darwin(v11);
  v91 = (uint64_t)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v90 = (uint64_t)&v80 - v14;
  v15 = sub_100047110(&qword_100821E18);
  v16 = __chkstk_darwin(v15);
  v89 = (uint64_t)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v88 = (uint64_t)&v80 - v18;
  v19 = sub_100047110(&qword_100821E38);
  v20 = __chkstk_darwin(v19);
  v87 = (uint64_t)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v86 = (uint64_t)&v80 - v22;
  v97 = sub_100047110(&qword_100821E40);
  v82 = *(_QWORD *)(v97 - 8);
  v23 = __chkstk_darwin(v97);
  v83 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v26 = (char *)&v80 - v25;
  v27 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v27);
  v29 = (char *)&v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_100821E48);
  LocalizedStringResource.init(stringLiteral:)(0x7865646E49, 0xE500000000000000);
  v30 = EntityProperty<>.init(title:)(v29);
  sub_100047110(&qword_100821E50);
  swift_retain(v30);
  LocalizedStringResource.init(stringLiteral:)(0x6E6F697461727544, 0xE800000000000000);
  v31 = EntityProperty<>.init(title:)(v29);
  sub_100047110(&qword_100821E60);
  v32 = v31;
  swift_retain(v31);
  LocalizedStringResource.init(stringLiteral:)(0x4520657669746341, 0xED0000796772656ELL);
  v33 = EntityProperty<>.init(title:)(v29);
  sub_100047110(&qword_100821E58);
  v34 = v33;
  swift_retain(v33);
  LocalizedStringResource.init(stringLiteral:)(0x65636E6174736944, 0xE800000000000000);
  v35 = EntityProperty<>.init(title:)(v29);
  sub_100047110(&qword_100821E80);
  swift_retain(v35);
  LocalizedStringResource.init(stringLiteral:)(0x2065676172657641, 0xED00006465657053);
  v36 = EntityProperty<>.init(title:)(v29);
  sub_100047110(&qword_1008201E8);
  type metadata accessor for AppDependencyManager(0);
  memset(v102, 0, sizeof(v102));
  v103 = 0;
  swift_retain(v36);
  v38 = static AppDependencyManager.shared.getter(v37);
  v39 = AppDependency.__allocating_init(key:manager:)(v102, v38);
  v40 = type metadata accessor for WorkoutSegmentIdentifier();
  v41 = (_QWORD *)swift_allocObject(v40, 40, 7);
  v42 = v84;
  v41[2] = v85;
  v41[3] = v42;
  v41[4] = a1;
  v101 = v39;
  *(_QWORD *)&v102[0] = a1;
  swift_retain_n(v39, 2);
  swift_retain(v41);
  swift_retain(v30);
  v43 = v32;
  swift_retain(v32);
  v44 = v34;
  swift_retain(v34);
  v45 = v35;
  swift_retain(v35);
  v81 = v36;
  swift_retain(v36);
  EntityProperty.wrappedValue.setter(v102);
  swift_release(v39);
  swift_release(v36);
  swift_release(v35);
  swift_release(v44);
  v46 = v43;
  swift_release(v43);
  v47 = v30;
  v96 = v30;
  v48 = swift_release(v30);
  v49 = v82;
  v50 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v82 + 16);
  v51 = v97;
  v50(v26, (uint64_t)v100, v97, v48);
  v52 = v83;
  ((void (*)(char *, char *, uint64_t))v50)(v83, v26, v51);
  swift_retain(v41);
  swift_retain(v47);
  v53 = v46;
  swift_retain(v46);
  v54 = v44;
  swift_retain(v44);
  swift_retain(v45);
  v55 = v81;
  swift_retain(v81);
  v56 = v101;
  swift_retain(v101);
  v57 = v52;
  v58 = v53;
  EntityProperty.wrappedValue.setter(v57);
  v85 = *(void (**)(char *, uint64_t))(v49 + 8);
  v85(v26, v51);
  swift_release(v56);
  v59 = v55;
  swift_release(v55);
  swift_release(v45);
  v60 = v54;
  swift_release(v54);
  swift_release(v53);
  v61 = v96;
  swift_release(v96);
  swift_release(v41);
  v62 = v86;
  sub_100021CC0(v99, v86, &qword_100821E38);
  v63 = v87;
  sub_100021CC0(v62, v87, &qword_100821E38);
  swift_retain(v41);
  swift_retain(v61);
  swift_retain(v58);
  swift_retain(v60);
  v64 = v45;
  swift_retain(v45);
  v65 = v59;
  swift_retain(v59);
  v66 = v101;
  swift_retain(v101);
  EntityProperty.wrappedValue.setter(v63);
  sub_10001BE90(v62, &qword_100821E38);
  swift_release(v66);
  swift_release(v65);
  swift_release(v64);
  swift_release(v60);
  swift_release(v58);
  v67 = v61;
  swift_release(v61);
  swift_release(v41);
  v68 = v88;
  sub_100021CC0(v98, v88, &qword_100821E18);
  v69 = v89;
  sub_100021CC0(v68, v89, &qword_100821E18);
  swift_retain(v41);
  swift_retain(v61);
  swift_retain(v58);
  swift_retain(v60);
  swift_retain(v64);
  swift_retain(v65);
  v70 = v101;
  swift_retain(v101);
  v71 = v65;
  EntityProperty.wrappedValue.setter(v69);
  sub_10001BE90(v68, &qword_100821E18);
  swift_release(v70);
  swift_release(v65);
  swift_release(v64);
  swift_release(v60);
  swift_release(v58);
  v72 = v67;
  swift_release(v67);
  swift_release(v41);
  v73 = v92;
  v74 = v90;
  sub_100021CC0(v92, v90, &qword_100821E28);
  v75 = v91;
  sub_100021CC0(v74, v91, &qword_100821E28);
  swift_retain(v41);
  swift_retain(v72);
  swift_retain(v58);
  swift_retain(v60);
  swift_retain(v64);
  swift_retain(v71);
  v76 = v101;
  swift_retain(v101);
  EntityProperty.wrappedValue.setter(v75);
  sub_10001BE90(v74, &qword_100821E28);
  swift_release(v76);
  swift_release(v71);
  swift_release(v64);
  swift_release(v60);
  swift_release(v58);
  v77 = v96;
  swift_release(v96);
  swift_release(v41);
  sub_10001BE90(v73, &qword_100821E28);
  sub_10001BE90(v98, &qword_100821E18);
  sub_10001BE90(v99, &qword_100821E38);
  v85(v100, v97);
  swift_release(v76);
  swift_release(v71);
  swift_release(v64);
  swift_release(v60);
  swift_release(v58);
  swift_release(v77);
  swift_release(v41);
  v79 = v93;
  v78 = v94;
  *v93 = v41;
  v79[1] = v77;
  v79[2] = v58;
  v79[3] = v60;
  v79[4] = v64;
  v79[5] = v71;
  v79[6] = v78;
  *((_BYTE *)v79 + 56) = v95 & 1;
  v79[8] = v76;
}

__n128 sub_10038A760@<Q0>(id a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  id v34;
  void *v35;
  id v36;
  double v37;
  double v38;
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  double v47;
  double v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  double v74;
  id v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  __n128 result;
  uint64_t v88;
  id v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  _OWORD v104[4];
  uint64_t v105;

  v94 = a5;
  v95 = a6;
  v98 = a3;
  v99 = a4;
  v97 = a2;
  v7 = sub_100047110(&qword_100821E40);
  __chkstk_darwin(v7);
  v96 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_1008307C8);
  v10 = __chkstk_darwin(v9);
  v90 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v92 = (char *)&v88 - v12;
  v13 = sub_100047110(&qword_1008307D0);
  v93 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v91 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100821E28);
  v16 = __chkstk_darwin(v15);
  v100 = (uint64_t)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v103 = (uint64_t)&v88 - v18;
  v19 = sub_100047110(&qword_100821E18);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v24 = (char *)&v88 - v23;
  v25 = sub_100047110(&qword_100821E38);
  v26 = __chkstk_darwin(v25);
  v102 = (uint64_t)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v29 = (char *)&v88 - v28;
  v30 = sub_100047110(&qword_100821E10);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v31(v29, 1, 1, v30);
  v32 = sub_100047110(&qword_100821EB0);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v101 = v24;
  v33(v24, 1, 1, v32);
  v34 = objc_msgSend(a1, "distance");
  if (v34)
  {
    v35 = v34;
    v89 = a1;
    v36 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
    objc_msgSend(v35, "doubleValueForUnit:", v36);
    v38 = v37;

    if (v38 <= 0.0)
    {

      a1 = v89;
    }
    else
    {
      v39 = v22;
      v40 = objc_msgSend((id)objc_opt_self(NSUnitLength), "meters");
      v41 = sub_10001E724(0, &qword_100821EC8, NSUnitLength_ptr);
      v42 = v13;
      v43 = v102;
      v44 = v40;
      v22 = v39;
      Measurement.init(value:unit:)(v44, v41, v38);
      sub_10001BE90((uint64_t)v29, &qword_100821E38);
      v31((char *)v43, 0, 1, v30);
      v45 = v43;
      v13 = v42;
      sub_100045AD4(v45, (uint64_t)v29, &qword_100821E38);
      v46 = v89;
      objc_msgSend(v89, "elapsedTime");
      v48 = v38 / v47;
      v49 = objc_msgSend((id)objc_opt_self(NSUnitSpeed), "metersPerSecond");
      v50 = sub_10001E724(0, &qword_100821EA8, NSUnitSpeed_ptr);
      Measurement.init(value:unit:)(v49, v50, v48);

      v51 = (uint64_t)v101;
      sub_10001BE90((uint64_t)v101, &qword_100821E18);
      v33(v39, 0, 1, v32);
      a1 = v46;
      sub_100045AD4((uint64_t)v22, v51, &qword_100821E18);
    }
  }
  v52 = sub_100047110(&qword_100821E30);
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56);
  v53(v103, 1, 1, v52);
  v54 = objc_msgSend(a1, "activeEnergy");
  if (!v54)
  {
    v62 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v92, 1, 1, v13);
LABEL_11:
    sub_10001BE90(v62, &qword_1008307C8);
    goto LABEL_15;
  }
  v55 = v54;
  v56 = objc_msgSend(v54, "_foundationMeasurement");

  if (v56)
  {
    v57 = sub_10001E724(0, &qword_1008307D8, NSUnit_ptr);
    v58 = (uint64_t)v90;
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v56, v57);

    v59 = 0;
    v60 = v93;
    v61 = v91;
    v62 = (uint64_t)v92;
  }
  else
  {
    v59 = 1;
    v60 = v93;
    v61 = v91;
    v62 = (uint64_t)v92;
    v58 = (uint64_t)v90;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v58, v59, 1, v13);
  sub_100045AD4(v58, v62, &qword_1008307C8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v62, 1, v13) == 1)
    goto LABEL_11;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v61, v62, v13);
  v63 = v13;
  v64 = (void *)Measurement.unit.getter(v13);
  v65 = objc_opt_self(NSUnitEnergy);
  v66 = swift_dynamicCastObjCClass(v64, v65);
  if (v66)
  {
    v67 = v66;
    v68 = Measurement.value.getter(v63);
    v69 = sub_10001E724(0, &qword_100821ED0, NSUnitEnergy_ptr);
    v70 = v100;
    Measurement.init(value:unit:)(v67, v69, v68);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v63);
    v71 = v103;
    sub_10001BE90(v103, &qword_100821E28);
    v53(v70, 0, 1, v52);
    sub_100045AD4(v70, v71, &qword_100821E28);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v63);
  }
LABEL_15:
  v72 = v94;
  objc_msgSend(a1, "elapsedTime");
  v74 = v73;
  v75 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "seconds");
  v76 = sub_10001E724(0, &qword_100821E88, NSUnitDuration_ptr);
  v77 = v96;
  Measurement.init(value:unit:)(v75, v76, v74);
  v78 = v102;
  sub_100021CC0((uint64_t)v29, v102, &qword_100821E38);
  v79 = (uint64_t)v101;
  sub_100021CC0((uint64_t)v101, (uint64_t)v22, &qword_100821E18);
  v80 = (uint64_t)v29;
  v81 = v79;
  v82 = (uint64_t)v22;
  v83 = v103;
  v84 = v100;
  sub_100021CC0(v103, v100, &qword_100821E28);
  sub_100389EF4(v97, v77, v78, v82, v98, 0, v84, v99, v104, v72);
  sub_10001BE90(v83, &qword_100821E28);
  sub_10001BE90(v81, &qword_100821E18);
  sub_10001BE90(v80, &qword_100821E38);
  v85 = v104[3];
  v86 = v95;
  *(_OWORD *)(v95 + 32) = v104[2];
  *(_OWORD *)(v86 + 48) = v85;
  *(_QWORD *)(v86 + 64) = v105;
  result = (__n128)v104[1];
  *(_OWORD *)v86 = v104[0];
  *(__n128 *)(v86 + 16) = result;
  return result;
}

unint64_t sub_10038AF6C()
{
  unint64_t result;

  result = qword_1008307F0;
  if (!qword_1008307F0)
  {
    result = swift_getWitnessTable(&unk_100639094, &type metadata for WorkoutSegmentIdentifier.JSONError);
    atomic_store(result, (unint64_t *)&qword_1008307F0);
  }
  return result;
}

unint64_t sub_10038AFB0()
{
  unint64_t result;

  result = qword_100830800;
  if (!qword_100830800)
  {
    result = swift_getWitnessTable(&unk_100639044, &type metadata for WorkoutSegmentIdentifier.Key);
    atomic_store(result, (unint64_t *)&qword_100830800);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WorkoutSegmentIdentifier.Key(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10038B040 + 4 * byte_100638B25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10038B074 + 4 * asc_100638B20[v4]))();
}

uint64_t sub_10038B074(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10038B07C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10038B084);
  return result;
}

uint64_t sub_10038B090(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10038B098);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10038B09C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10038B0A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutSegmentIdentifier.Key()
{
  return &type metadata for WorkoutSegmentIdentifier.Key;
}

uint64_t storeEnumTagSinglePayload for WorkoutSegmentIdentifier.JSONError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10038B100 + 4 * byte_100638B2A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10038B120 + 4 * byte_100638B2F[v4]))();
}

_BYTE *sub_10038B100(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10038B120(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10038B128(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10038B130(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10038B138(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10038B140(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutSegmentIdentifier.JSONError()
{
  return &type metadata for WorkoutSegmentIdentifier.JSONError;
}

unint64_t sub_10038B160()
{
  unint64_t result;

  result = qword_100830818;
  if (!qword_100830818)
  {
    result = swift_getWitnessTable(&unk_100638F2C, &type metadata for WorkoutSegmentIdentifier.JSONError);
    atomic_store(result, (unint64_t *)&qword_100830818);
  }
  return result;
}

unint64_t sub_10038B1A8()
{
  unint64_t result;

  result = qword_100830820;
  if (!qword_100830820)
  {
    result = swift_getWitnessTable(&unk_10063901C, &type metadata for WorkoutSegmentIdentifier.Key);
    atomic_store(result, (unint64_t *)&qword_100830820);
  }
  return result;
}

unint64_t sub_10038B1F0()
{
  unint64_t result;

  result = qword_100830828;
  if (!qword_100830828)
  {
    result = swift_getWitnessTable(&unk_100638F54, &type metadata for WorkoutSegmentIdentifier.Key);
    atomic_store(result, (unint64_t *)&qword_100830828);
  }
  return result;
}

unint64_t sub_10038B238()
{
  unint64_t result;

  result = qword_100830830;
  if (!qword_100830830)
  {
    result = swift_getWitnessTable(&unk_100638F7C, &type metadata for WorkoutSegmentIdentifier.Key);
    atomic_store(result, (unint64_t *)&qword_100830830);
  }
  return result;
}

unint64_t sub_10038B280()
{
  unint64_t result;

  result = qword_100830838;
  if (!qword_100830838)
  {
    result = swift_getWitnessTable(&unk_100639138, &type metadata for WorkoutActivityEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100830838);
  }
  return result;
}

unint64_t sub_10038B2C8()
{
  unint64_t result;

  result = qword_100830840[0];
  if (!qword_100830840[0])
  {
    result = swift_getWitnessTable(&unk_100639198, &type metadata for WorkoutActivityEntityQuery);
    atomic_store(result, qword_100830840);
  }
  return result;
}

uint64_t sub_10038B30C()
{
  return sub_1000083D8(&qword_100821C10, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625F30);
}

double sub_10038B338@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  double result;
  __int128 v10;
  _OWORD v11[2];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  IntentParameter.wrappedValue.getter(v11);
  v2 = v23;
  a1[12] = v22;
  a1[13] = v2;
  v3 = v25;
  a1[14] = v24;
  a1[15] = v3;
  v4 = v19;
  a1[8] = v18;
  a1[9] = v4;
  v5 = v21;
  a1[10] = v20;
  a1[11] = v5;
  v6 = v15;
  a1[4] = v14;
  a1[5] = v6;
  v7 = v17;
  a1[6] = v16;
  a1[7] = v7;
  v8 = v11[1];
  *a1 = v11[0];
  a1[1] = v8;
  result = *(double *)&v12;
  v10 = v13;
  a1[2] = v12;
  a1[3] = v10;
  return result;
}

uint64_t sub_10038B3B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = sub_10038B950();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_10038B3D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_100830890 + dword_100830890);
  v3 = (_QWORD *)swift_task_alloc(unk_100830894);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1001A48BC;
  return v5(a1);
}

uint64_t sub_10038B438(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *v1;
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_100830888 + dword_100830888);
  v4 = (_QWORD *)swift_task_alloc(unk_10083088C);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_100100D3C;
  return v6(v3);
}

unint64_t sub_10038B4A0()
{
  unint64_t result;

  result = qword_100830858;
  if (!qword_100830858)
  {
    result = swift_getWitnessTable(&unk_1006391C0, &type metadata for WorkoutActivityEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100830858);
  }
  return result;
}

uint64_t sub_10038B4E4()
{
  return sub_1000083D8(&qword_100821C30, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_1006260D8);
}

unint64_t sub_10038B514()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100830860;
  if (!qword_100830860)
  {
    v1 = sub_100007050(qword_100830868);
    sub_1000083D8(&qword_100821C30, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_1006260D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_100830860);
  }
  return result;
}

uint64_t sub_10038B590(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100135C94();
  *v5 = v2;
  v5[1] = sub_1000DA0E4;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for WorkoutActivityEntityQuery()
{
  return &type metadata for WorkoutActivityEntityQuery;
}

uint64_t sub_10038B60C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  Swift::String v18;
  id v19;
  char *v20;
  Swift::String v21;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  const char *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  const char **v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  _QWORD v50[2];
  const char **v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  _QWORD *v63;

  v5 = type metadata accessor for UUID(0);
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  __chkstk_darwin(v5);
  v56 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for WorkoutActivityEntity(0);
  __chkstk_darwin(v55);
  v59 = (uint64_t)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)v50 - v10;
  result = (uint64_t)_swiftEmptyArrayStorage;
  v63 = _swiftEmptyArrayStorage;
  v54 = *(_QWORD *)(a1 + 16);
  if (!v54)
    return result;
  v13 = 0;
  v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v60 = *(_QWORD *)(v9 + 72);
  v52 = v14;
  v53 = a1 + v14;
  v50[1] = v2;
  v51 = (const char **)(a2 + 7);
  while (1)
  {
    sub_10020B570(v53 + v60 * v13, (uint64_t)v11);
    v15 = sub_1000083D8((unint64_t *)&qword_100821498, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v16 = v58;
    v61 = dispatch thunk of CustomStringConvertible.description.getter(v58, v15);
    v62 = v17;
    v18._countAndFlagsBits = 47;
    v18._object = (void *)0xE100000000000000;
    String.append(_:)(v18);
    v19 = objc_msgSend(*(id *)&v11[*(int *)(v55 + 20)], "UUID");
    v20 = v56;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v19);

    v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v16, v15);
    object = (CHWorkoutDetailHeartRateTableViewCell *)v21._object;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(object, v23, v24, v25, v26, v27, v28, v29);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v20, v16);
    v37 = v62;
    v38 = a2[2];
    if (v38)
    {
      v39 = v61;
      v40 = a2[4];
      v30 = (const char *)a2[5];
      v41 = a2;
      if (v40 == v61 && v30 == (const char *)v62
        || (result = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v30, v61, v62, 0), (result & 1) != 0))
      {
LABEL_9:
        swift_bridgeObjectRelease(v37, v30, v31, v32, v33, v34, v35, v36);
        sub_100253B3C((uint64_t)v11, v59);
        v42 = v63;
        if ((swift_isUniquelyReferenced_nonNull_native(v63) & 1) == 0)
        {
          sub_100121B14(0, v42[2] + 1, 1);
          v42 = v63;
        }
        v44 = v42[2];
        v43 = v42[3];
        if (v44 >= v43 >> 1)
        {
          sub_100121B14(v43 > 1, v44 + 1, 1);
          v42 = v63;
        }
        v42[2] = v44 + 1;
        sub_100253B3C(v59, (uint64_t)v42 + v52 + v44 * v60);
        a2 = v41;
        goto LABEL_4;
      }
      if (v38 != 1)
        break;
    }
LABEL_3:
    swift_bridgeObjectRelease(v37, v30, v31, v32, v33, v34, v35, v36);
    sub_10020B5B4((uint64_t)v11);
LABEL_4:
    if (++v13 == v54)
      return (uint64_t)v63;
  }
  v45 = v51;
  v46 = 1;
  while (1)
  {
    v47 = v46 + 1;
    if (__OFADD__(v46, 1))
      break;
    v48 = (uint64_t)*(v45 - 1);
    v30 = *v45;
    v49 = v48 == v39 && v30 == (const char *)v37;
    if (v49)
      goto LABEL_9;
    result = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v30, v39, v37, 0);
    if ((result & 1) != 0)
      goto LABEL_9;
    v45 += 2;
    ++v46;
    v49 = v47 == v38;
    a2 = v41;
    if (v49)
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_10038B950()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  sub_100047110(&qword_100830880);
  KeyPath = swift_getKeyPath(&unk_100639210);
  v1 = IntentParameterDependency.__allocating_init<A, B>(_:)(KeyPath);
  sub_100047110(&qword_1008201E0);
  v2 = type metadata accessor for AppDependencyManager(0);
  v9 = 0u;
  v10 = 0u;
  v11 = 0;
  v3 = static AppDependencyManager.shared.getter(v2);
  AppDependency.__allocating_init(key:manager:)(&v9, v3);
  v4 = sub_100047110(&qword_1008201E8);
  v11 = 0;
  v9 = 0u;
  v10 = 0u;
  v5 = static AppDependencyManager.shared.getter(v4);
  AppDependency.__allocating_init(key:manager:)(&v9, v5);
  v6 = sub_100047110(&qword_100822D10);
  v11 = 0;
  v9 = 0u;
  v10 = 0u;
  v7 = static AppDependencyManager.shared.getter(v6);
  AppDependency.__allocating_init(key:manager:)(&v9, v7);
  return v1;
}

void sub_10038BA64(id a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unsigned int v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  id v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;

  v2 = type metadata accessor for WorkoutActivityEntity(0);
  v49 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v47 - v6;
  v8 = objc_msgSend(a1, "isMultiSportWorkout");
  v50 = a1;
  if (!v8)
  {
    if (!objc_msgSend(a1, "isIntervalWorkout"))
      return;
    v23 = objc_msgSend(a1, "workoutActivities");
    v24 = sub_10038BFFC();
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

    if (!((unint64_t)v11 >> 62))
    {
      v25 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v25)
      {
LABEL_60:
        v45 = v11;
        goto LABEL_61;
      }
      goto LABEL_22;
    }
LABEL_56:
    if (v11 < 0)
      v46 = v11;
    else
      v46 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v25 = _CocoaArrayWrapper.endIndex.getter(v46);
    swift_bridgeObjectRelease(v11);
    if (!v25)
      goto LABEL_60;
LABEL_22:
    if (v25 < 1)
    {
      __break(1u);
      return;
    }
    v26 = 0;
    v48 = v11 & 0xC000000000000001;
    v27 = _swiftEmptyArrayStorage;
    v47 = (char *)&type metadata for Any + 8;
    while (1)
    {
      if (v48)
        v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v11);
      else
        v28 = *(id *)(v11 + 8 * (_QWORD)v26 + 32);
      v29 = v28;
      v30 = objc_msgSend(v28, "metadata", v47);
      if (!v30)
      {
        v53 = 0u;
        v54 = 0u;
LABEL_40:
        sub_10001BE90((uint64_t)&v53, (uint64_t *)&unk_100828420);
LABEL_41:
        v38 = 0;
        goto LABEL_42;
      }
      v31 = v30;
      v32 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v30, &type metadata for String, v47, &protocol witness table for String);

      if (qword_10081DA90 == -1)
      {
        if (!*(_QWORD *)(v32 + 16))
          goto LABEL_36;
      }
      else
      {
        swift_once(&qword_10081DA90, sub_10032BE20);
        if (!*(_QWORD *)(v32 + 16))
        {
LABEL_36:
          v53 = 0u;
          v54 = 0u;
          goto LABEL_37;
        }
      }
      v33 = qword_10086A548;
      v34 = qword_10086A540;
      swift_bridgeObjectRetain(qword_10086A548);
      v35 = sub_100438F74(v34, v33);
      if ((v36 & 1) != 0)
      {
        sub_10003E9BC(*(_QWORD *)(v32 + 56) + 32 * v35, (uint64_t)&v53);
      }
      else
      {
        v53 = 0u;
        v54 = 0u;
      }
      swift_bridgeObjectRelease(v33);
LABEL_37:
      swift_bridgeObjectRelease(v32);
      if (!*((_QWORD *)&v54 + 1))
        goto LABEL_40;
      if ((swift_dynamicCast(&v51, &v53, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
        goto LABEL_41;
      v37 = v52;
      v38 = sub_10032FC08(v51, v52);
      swift_bridgeObjectRelease(v37);
LABEL_42:
      swift_retain(v38);
      v39 = a1;
      v40 = v29;
      sub_100136B14(v40, v38, v26, v39, (_BYTE *)v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
        v27 = (_QWORD *)sub_100141124(0, v27[2] + 1, 1, (unint64_t)v27);
      v42 = v27[2];
      v41 = v27[3];
      if (v42 >= v41 >> 1)
        v27 = (_QWORD *)sub_100141124(v41 > 1, v42 + 1, 1, (unint64_t)v27);
      v26 = (char *)v26 + 1;
      v27[2] = v42 + 1;
      sub_100253B3C(v5, (uint64_t)v27+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(_QWORD *)(v49 + 72) * v42);

      swift_release(v38);
      a1 = v50;
      if ((void *)v25 == v26)
      {
        v43 = v11;
        goto LABEL_49;
      }
    }
  }
  v9 = objc_msgSend(a1, "workoutActivities");
  v10 = sub_10038BFFC();
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  if (!((unint64_t)v5 >> 62))
  {
    v11 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11)
      goto LABEL_4;
LABEL_54:
    v45 = v5;
LABEL_61:
    swift_bridgeObjectRelease(v45);
    return;
  }
LABEL_50:
  if (v5 < 0)
    v44 = v5;
  else
    v44 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v11 = _CocoaArrayWrapper.endIndex.getter(v44);
  swift_bridgeObjectRelease(v5);
  if (!v11)
    goto LABEL_54;
LABEL_4:
  if (v11 < 1)
  {
    __break(1u);
    goto LABEL_56;
  }
  v12 = 0;
  v13 = 0;
  a1 = (id)(v5 & 0xC000000000000001);
  v14 = _swiftEmptyArrayStorage;
  do
  {
    if (a1)
      v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v5);
    else
      v15 = *(id *)(v5 + 8 * v13 + 32);
    v16 = v15;
    v17 = objc_msgSend(v15, "fiui_activityType");
    v18 = objc_msgSend(v17, "effectiveTypeIdentifier");

    if (v18 == (id)83)
    {

    }
    else
    {
      v19 = v16;
      sub_100136B14(v19, 0, v12, v50, v7);
      if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
        v14 = (_QWORD *)sub_100141124(0, v14[2] + 1, 1, (unint64_t)v14);
      v21 = v14[2];
      v20 = v14[3];
      if (v21 >= v20 >> 1)
        v14 = (_QWORD *)sub_100141124(v20 > 1, v21 + 1, 1, (unint64_t)v14);
      v14[2] = v21 + 1;
      sub_100253B3C((uint64_t)v7, (uint64_t)v14+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(_QWORD *)(v49 + 72) * v21);

      if (__OFADD__(v12++, 1))
      {
        __break(1u);
        goto LABEL_50;
      }
    }
    ++v13;
  }
  while (v11 != v13);
  v43 = v5;
LABEL_49:
  swift_bridgeObjectRelease(v43);
}

unint64_t sub_10038BFFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E6A0;
  if (!qword_10082E6A0)
  {
    v1 = objc_opt_self(HKWorkoutActivity);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10082E6A0);
  }
  return result;
}

uint64_t sub_10038C038@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10038C060(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[36] = a1;
  v2 = sub_100047110((uint64_t *)&unk_10082E690);
  v1[37] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  v1[38] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[39] = v4;
  v1[40] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10038C0E4, 0, 0);
}

uint64_t sub_10038C0E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell **v5;
  _QWORD *v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  const char *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  char *v23;
  unint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  const char *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  uint64_t v34;
  uint64_t v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  __n128 v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  const char *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  const char *v80;
  const char *v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  SEL v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  Class isa;
  uint64_t v116;
  CHWorkoutDetailHeartRateTableViewCell *v117;
  uint64_t v118;
  _QWORD *v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;

  v1 = v0[36];
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    v6 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  v3 = v0[39];
  v4 = type metadata accessor for WorkoutActivityIdentifier(0);
  swift_bridgeObjectRetain(v1);
  v5 = (CHWorkoutDetailHeartRateTableViewCell **)(v1 + 40);
  v6 = _swiftEmptyArrayStorage;
  v111 = v0;
  v112 = v4;
  do
  {
    v21 = (uint64_t)*(v5 - 1);
    v22 = *v5;
    v23 = (char *)swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    v0[34] = v21;
    v0[35] = v22;
    v24 = sub_100038CA0();
    swift_bridgeObjectRetain(v22);
    v25 = (CHWorkoutDetailHeartRateTableViewCell *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(47, 0xE100000000000000, 1, 1, &type metadata for String, v24);
    v33 = v25;
    v34 = *(_QWORD *)v25->cellPadding;
    if (!v34)
    {
      swift_bridgeObjectRelease(v25, v26, v27, v28, v29, v30, v31, v32);
LABEL_4:
      swift_deallocPartialClassInstance(v23, v4, *(unsigned int *)(*(_QWORD *)v23 + 48), *(unsigned __int16 *)(*(_QWORD *)v23 + 52));
      swift_bridgeObjectRelease(v22, v7, v8, v9, v10, v11, v12, v13);
      goto LABEL_5;
    }
    v117 = v22;
    v118 = v2;
    v119 = v6;
    v35 = v0[37];
    v116 = v0[38];
    v114 = *(_QWORD *)v25[1].heartRateController;
    isa = v25[1].super.super.super.super.isa;
    v36 = *(CHWorkoutDetailHeartRateTableViewCell **)v25[1].cellInset;
    v113 = *(_QWORD *)v25[1].cellPadding;
    v37 = (uint64_t)&v25[v34 + 1];
    v38 = v3;
    v39 = *(_QWORD *)(v37 - 32);
    v40 = *(_QWORD *)(v37 - 24);
    v41 = *(_QWORD *)(v37 - 16);
    v42 = *(CHWorkoutDetailHeartRateTableViewCell **)(v37 - 8);
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRelease(v33, v43, v44, v45, v46, v47, v48, v49);
    v50 = v40;
    v3 = v38;
    v51 = static String._fromSubstring(_:)(v39, v50, v41, v42);
    v53 = (CHWorkoutDetailHeartRateTableViewCell *)v52;
    swift_bridgeObjectRelease(v42, v52, v54, v55, v56, v57, v58, v59);
    UUID.init(uuidString:)(v51, v53, v60);
    swift_bridgeObjectRelease(v53, v61, v62, v63, v64, v65, v66, v67);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v35, 1, v116) == 1)
    {
      v0 = v111;
      v75 = v111[37];
      swift_bridgeObjectRelease(v36, v68, v69, v70, v71, v72, v73, v74);
      sub_10001BE90(v75, (uint64_t *)&unk_10082E690);
      v2 = v118;
      v6 = v119;
      v4 = v112;
      v22 = v117;
      goto LABEL_4;
    }
    v76 = (char *)v111[40];
    v77 = v111[38];
    v78 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    v78(v76, (char *)v111[37], v77);
    v79 = static String._fromSubstring(_:)(isa, v114, v113, v36);
    v81 = v80;
    swift_bridgeObjectRelease(v36, v80, v82, v83, v84, v85, v86, v87);
    *((_QWORD *)v23 + 2) = v79;
    *((_QWORD *)v23 + 3) = v81;
    v78(&v23[OBJC_IVAR____TtC10FitnessApp25WorkoutActivityIdentifier_activityId], v76, v77);
    v89 = *((_QWORD *)v23 + 2);
    v88 = *((_QWORD *)v23 + 3);
    swift_bridgeObjectRetain(v88);
    swift_release(v23);
    swift_bridgeObjectRelease(v117, v90, v91, v92, v93, v94, v95, v96);
    v6 = v119;
    v0 = v111;
    if ((swift_isUniquelyReferenced_nonNull_native(v119) & 1) == 0)
      v6 = sub_10013F75C(0, v119[2] + 1, 1, v119);
    v98 = v6[2];
    v97 = v6[3];
    if (v98 >= v97 >> 1)
      v6 = sub_10013F75C((_QWORD *)(v97 > 1), v98 + 1, 1, v6);
    v6[2] = v98 + 1;
    v99 = &v6[2 * v98];
    v99[4] = v89;
    v99[5] = v88;
    v2 = v118;
    v4 = v112;
LABEL_5:
    v5 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v0[36], v14, v15, v16, v17, v18, v19, v20);
LABEL_16:
  v0[41] = v6;
  sub_100047110(&qword_1008201E0);
  v100 = type metadata accessor for AppDependencyManager(0);
  v120 = 0u;
  v121 = 0u;
  v122 = 0;
  v101 = static AppDependencyManager.shared.getter(v100);
  v102 = AppDependency.__allocating_init(key:manager:)(&v120, v101);
  v0[42] = v102;
  v103 = sub_100047110(&qword_1008201E8);
  v122 = 0;
  v120 = 0u;
  v121 = 0u;
  v104 = static AppDependencyManager.shared.getter(v103);
  v105 = AppDependency.__allocating_init(key:manager:)(&v120, v104);
  v0[43] = v105;
  v106 = sub_100047110(&qword_100822D10);
  v122 = 0;
  v120 = 0u;
  v121 = 0u;
  v107 = static AppDependencyManager.shared.getter(v106);
  v108 = AppDependency.__allocating_init(key:manager:)(&v120, v107);
  v0[44] = v108;
  v109 = (_QWORD *)swift_task_alloc(dword_10082484C);
  v0[45] = v109;
  *v109 = v0;
  v109[1] = sub_10038C4D0;
  return sub_1001A347C((uint64_t)v6, v102, v105, v108);
}

uint64_t sub_10038C4D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 360);
  *(_QWORD *)(v3 + 368) = a1;
  *(_QWORD *)(v3 + 376) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v12 = sub_10038C6B4;
  }
  else
  {
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v3 + 328), v5, v6, v7, v8, v9, v10, v11);
    v12 = sub_10038C544;
  }
  return swift_task_switch(v12, 0, 0);
}

uint64_t sub_10038C544(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  uint64_t i;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  void *v25;
  uint64_t v26;
  const char *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  uint64_t v40;
  uint64_t v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;

  v9 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 368);
  v10 = *(_QWORD *)v9->cellPadding;
  if (v10)
  {
    v11 = v9 + 1;
    for (i = v10 - 1; ; --i)
    {
      v13 = *(_OWORD *)&v11->super.super.super.super.isa;
      v14 = *(_OWORD *)v11->cellPadding;
      v15 = *(_OWORD *)v11[1].cellPadding;
      *(_OWORD *)(v8 + 48) = *(_OWORD *)&v11[1].super.super.super.super.isa;
      *(_OWORD *)(v8 + 64) = v15;
      *(_OWORD *)(v8 + 16) = v13;
      *(_OWORD *)(v8 + 32) = v14;
      v16 = *(_OWORD *)&v11[2].super.super.super.super.isa;
      v17 = *(_OWORD *)v11[2].cellPadding;
      v18 = *(_OWORD *)v11[3].cellPadding;
      *(_OWORD *)(v8 + 112) = *(_OWORD *)&v11[3].super.super.super.super.isa;
      *(_OWORD *)(v8 + 128) = v18;
      *(_OWORD *)(v8 + 80) = v16;
      *(_OWORD *)(v8 + 96) = v17;
      v19 = *(_OWORD *)&v11[4].super.super.super.super.isa;
      v20 = *(_OWORD *)v11[4].cellPadding;
      v21 = *(_OWORD *)v11[5].cellPadding;
      *(_OWORD *)(v8 + 176) = *(_OWORD *)&v11[5].super.super.super.super.isa;
      *(_OWORD *)(v8 + 192) = v21;
      *(_OWORD *)(v8 + 144) = v19;
      *(_OWORD *)(v8 + 160) = v20;
      v22 = *(_OWORD *)&v11[6].super.super.super.super.isa;
      v23 = *(_OWORD *)v11[6].cellPadding;
      v24 = *(_OWORD *)v11[7].cellPadding;
      *(_OWORD *)(v8 + 240) = *(_OWORD *)&v11[7].super.super.super.super.isa;
      *(_OWORD *)(v8 + 256) = v24;
      *(_OWORD *)(v8 + 208) = v22;
      *(_OWORD *)(v8 + 224) = v23;
      v25 = *(void **)(v8 + 240);
      sub_100112010((_QWORD *)(v8 + 16));
      sub_10038BA64(v25);
      sub_10013D214(v26);
      sub_100112258((_QWORD *)(v8 + 16));
      if (!i)
        break;
      v11 += 8;
    }
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 368), v27, v28, v29, v30, v31, v32, v33);
  }
  else
  {
    swift_bridgeObjectRelease(v9, a2, a3, a4, a5, a6, a7, a8);
  }
  v35 = *(_QWORD *)(v8 + 344);
  v34 = *(_QWORD *)(v8 + 352);
  v36 = *(_QWORD *)(v8 + 336);
  v37 = *(_QWORD *)(v8 + 320);
  v39 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 288);
  v38 = *(_QWORD *)(v8 + 296);
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v41 = sub_10038B60C(v40, v39);
  swift_bridgeObjectRelease(v39, v42, v43, v44, v45, v46, v47, v48);
  swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2);
  swift_release(v36);
  swift_release(v35);
  swift_release(v34);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(uint64_t))(v8 + 8))(v41);
}

uint64_t sub_10038C6B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 320);
  v5 = *(_QWORD *)(v0 + 296);
  swift_release(*(_QWORD *)(v0 + 336));
  swift_release(v1);
  swift_release(v2);
  swift_bridgeObjectRelease(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10038C72C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 536) = a1;
  return swift_task_switch(sub_10038C744, 0, 0);
}

uint64_t sub_10038C744()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  const char *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  const char *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;

  *(_QWORD *)(v0 + 528) = _swiftEmptyArrayStorage;
  v2 = IntentParameterDependency.wrappedValue.getter();
  if (v2)
  {
    v3 = v2;
    v4 = (id)(v0 + 16);
    v5 = v0 + 528;
    KeyPath = swift_getKeyPath(&unk_100639238);
    v7 = sub_1001625AC();
    IntentProjection.subscript.getter(KeyPath, v7);
    swift_release(KeyPath);
    v8 = *(_OWORD *)(v0 + 480);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 464);
    *(_OWORD *)(v0 + 224) = v8;
    v9 = *(_OWORD *)(v0 + 512);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 496);
    *(_OWORD *)(v0 + 256) = v9;
    v10 = *(_OWORD *)(v0 + 416);
    *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 400);
    *(_OWORD *)(v0 + 160) = v10;
    v11 = *(_OWORD *)(v0 + 448);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 432);
    *(_OWORD *)(v0 + 192) = v11;
    v12 = *(_OWORD *)(v0 + 352);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 336);
    *(_OWORD *)(v0 + 96) = v12;
    v13 = *(_OWORD *)(v0 + 384);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 368);
    *(_OWORD *)(v0 + 128) = v13;
    v14 = *(_OWORD *)(v0 + 288);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 32) = v14;
    v15 = *(_OWORD *)(v0 + 320);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 304);
    *(_OWORD *)(v0 + 64) = v15;
    v16 = *(id *)(v0 + 240);
    sub_100112258((_QWORD *)(v0 + 16));
    if (objc_msgSend(v16, "workoutActivityType") != (id)82)
      goto LABEL_5;
    v4 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
    v1 = *(_QWORD *)((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v17 = *(_QWORD *)((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v1 >= v17 >> 1)
      goto LABEL_22;
    while (1)
    {
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v4);
      specialized Array._endMutation()(v18);
LABEL_5:

      swift_release(v3);
      *(_QWORD *)&v57 = _swiftEmptyArrayStorage;
      v3 = *(_QWORD *)v5;
      if (*(_QWORD *)v5 >> 62)
      {
        if (v3 < 0)
          v49 = *(_QWORD *)v5;
        else
          v49 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)v5);
        v5 = _CocoaArrayWrapper.endIndex.getter(v49);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v3, v50, v51, v52, v53, v54, v55, v56);
        if (!v5)
        {
LABEL_19:
          swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v3, v19, v20, v21, v22, v23, v24, v25);
          v37 = _swiftEmptyArrayStorage;
          return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v37);
        }
      }
      else
      {
        v17 = v3 & 0xFFFFFFFFFFFFF8;
        v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v5)
          goto LABEL_19;
      }
      if (v5 >= 1)
        break;
      __break(1u);
LABEL_22:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v1 + 1, 1);
    }
    v26 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v3);
      else
        v27 = *(id *)(v3 + 8 * v26 + 32);
      v28 = v27;
      ++v26;
      sub_10038BA64(v27);
      sub_10013D214(v29);

    }
    while (v5 != v26);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v3, v30, v31, v32, v33, v34, v35, v36);
    v37 = (_QWORD *)v57;
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v37);
  }
  else
  {
    sub_100047110(&qword_1008201E0);
    v38 = type metadata accessor for AppDependencyManager(0);
    v57 = 0u;
    v58 = 0u;
    v59 = 0;
    v39 = static AppDependencyManager.shared.getter(v38);
    v40 = AppDependency.__allocating_init(key:manager:)(&v57, v39);
    *(_QWORD *)(v0 + 544) = v40;
    v41 = sub_100047110(&qword_1008201E8);
    v59 = 0;
    v57 = 0u;
    v58 = 0u;
    v42 = static AppDependencyManager.shared.getter(v41);
    v43 = AppDependency.__allocating_init(key:manager:)(&v57, v42);
    *(_QWORD *)(v0 + 552) = v43;
    v44 = sub_100047110(&qword_100822D10);
    v59 = 0;
    v57 = 0u;
    v58 = 0u;
    v45 = static AppDependencyManager.shared.getter(v44);
    v46 = AppDependency.__allocating_init(key:manager:)(&v57, v45);
    *(_QWORD *)(v0 + 560) = v46;
    v47 = (_QWORD *)swift_task_alloc(dword_100824854);
    *(_QWORD *)(v0 + 568) = v47;
    *v47 = v0;
    v47[1] = sub_10038CA74;
    return sub_1001A43B8(v40, v43, v46);
  }
}

uint64_t sub_10038CA74(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 568);
  v5 = *(_QWORD *)(*v2 + 560);
  v6 = *(_QWORD *)(*v2 + 552);
  v7 = *(_QWORD *)(*v2 + 544);
  *(_QWORD *)(v3 + 576) = a1;
  *(_QWORD *)(v3 + 584) = v1;
  swift_task_dealloc(v4);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  if (v1)
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage, v8, v9, v10, v11, v12, v13, v14);
    v15 = sub_10038CCC4;
  }
  else
  {
    v15 = sub_10038CB1C;
  }
  return swift_task_switch(v15, 0, 0);
}

void sub_10038CB1C(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;

  v9 = *(_QWORD *)(v8 + 576);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v10);
    v11 = (id *)(v9 + 256);
    do
    {
      v12 = *v11;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v13 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v12);
      specialized ContiguousArray._endMutation()(v14);
      v11 += 32;
      --v10;
    }
    while (v10);
  }
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 576), a2, a3, a4, a5, a6, a7, a8);
  sub_10013BFBC((uint64_t)_swiftEmptyArrayStorage);
  v22 = *(_QWORD *)(v8 + 528);
  if (!((unint64_t)v22 >> 62))
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v23)
      goto LABEL_6;
LABEL_17:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v22, v15, v16, v17, v18, v19, v20, v21);
    (*(void (**)(_QWORD *))(v8 + 8))(_swiftEmptyArrayStorage);
    return;
  }
  if (v22 < 0)
    v28 = *(_QWORD *)(v8 + 528);
  else
    v28 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v22);
  v23 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v22, v29, v30, v31, v32, v33, v34, v35);
  if (!v23)
    goto LABEL_17;
LABEL_6:
  if (v23 >= 1)
  {
    v24 = 0;
    do
    {
      if ((v22 & 0xC000000000000001) != 0)
        v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v22);
      else
        v25 = *(id *)(v22 + 8 * v24 + 32);
      v26 = v25;
      ++v24;
      sub_10038BA64(v25);
      sub_10013D214(v27);

    }
    while (v23 != v24);
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t sub_10038CCC4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10038CCD0@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  double result;
  __int128 v10;
  _OWORD v11[2];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  IntentParameter.wrappedValue.getter(v11);
  v2 = v23;
  a1[12] = v22;
  a1[13] = v2;
  v3 = v25;
  a1[14] = v24;
  a1[15] = v3;
  v4 = v19;
  a1[8] = v18;
  a1[9] = v4;
  v5 = v21;
  a1[10] = v20;
  a1[11] = v5;
  v6 = v15;
  a1[4] = v14;
  a1[5] = v6;
  v7 = v17;
  a1[6] = v16;
  a1[7] = v7;
  v8 = v11[1];
  *a1 = v11[0];
  a1[1] = v8;
  result = *(double *)&v12;
  v10 = v13;
  a1[2] = v12;
  a1[3] = v10;
  return result;
}

uint64_t sub_10038CD48(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v19[16];
  _OWORD v20[2];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v1 = a1[13];
  v2 = a1[11];
  v31 = a1[12];
  v32 = v1;
  v3 = a1[13];
  v4 = a1[15];
  v33 = a1[14];
  v34 = v4;
  v5 = a1[9];
  v6 = a1[7];
  v27 = a1[8];
  v28 = v5;
  v7 = a1[9];
  v8 = a1[11];
  v29 = a1[10];
  v30 = v8;
  v9 = a1[5];
  v10 = a1[3];
  v23 = a1[4];
  v24 = v9;
  v11 = a1[5];
  v12 = a1[7];
  v25 = a1[6];
  v26 = v12;
  v13 = a1[1];
  v20[0] = *a1;
  v20[1] = v13;
  v14 = a1[3];
  v16 = *a1;
  v15 = a1[1];
  v21 = a1[2];
  v22 = v14;
  v19[12] = v31;
  v19[13] = v3;
  v17 = a1[15];
  v19[14] = v33;
  v19[15] = v17;
  v19[8] = v27;
  v19[9] = v7;
  v19[10] = v29;
  v19[11] = v2;
  v19[4] = v23;
  v19[5] = v11;
  v19[6] = v25;
  v19[7] = v6;
  v19[0] = v16;
  v19[1] = v15;
  v19[2] = v21;
  v19[3] = v10;
  sub_100112010(v20);
  return IntentParameter.wrappedValue.setter(v19);
}

id sub_10038CFF0(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  Class isa;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v8 = a3[3];
  v9 = sub_100016804(a3, v8);
  v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v8);
  v11 = (id)(*(uint64_t (**)(uint64_t, uint64_t, Class, uint64_t))(a4 + 16))(a4, a1, isa, v10);

  swift_unknownObjectRelease(v10);
  return v11;
}

id sub_10038D080()
{
  return sub_100111F3C(type metadata accessor for MoveModeSettingsViewControllerDiffableDataSource);
}

uint64_t type metadata accessor for MoveModeSettingsViewControllerDiffableDataSource()
{
  return objc_opt_self(_TtC10FitnessApp48MoveModeSettingsViewControllerDiffableDataSource);
}

char *sub_10038D0AC(void *a1, void *a2, char a3)
{
  _BYTE *v3;
  id v6;
  id v7;
  char *v8;
  char *result;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  NSString v20;
  _QWORD v21[5];
  uint64_t v22;
  objc_super v23;

  *(_QWORD *)&v3[OBJC_IVAR___CHMoveModeSettingsViewController_dataSource] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___CHMoveModeSettingsViewController_healthStore] = a1;
  *(_QWORD *)&v3[OBJC_IVAR___CHMoveModeSettingsViewController_formattingManager] = a2;
  v3[OBJC_IVAR___CHMoveModeSettingsViewController_isAppleMoveTime] = a3;
  v23.receiver = v3;
  v23.super_class = (Class)type metadata accessor for MoveModeSettingsViewController();
  v6 = a1;
  v7 = a2;
  v8 = (char *)objc_msgSendSuper2(&v23, "initWithStyle:", 2);
  result = (char *)objc_msgSend(v8, "tableView");
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v10 = result;
  objc_msgSend(result, "setSeparatorStyle:", 0);

  v11 = swift_allocObject(&unk_100799B70, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v8);
  result = (char *)objc_msgSend(v8, "tableView");
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v12 = result;
  v13 = objc_allocWithZone((Class)type metadata accessor for MoveModeSettingsViewControllerDiffableDataSource());
  v21[4] = sub_10038E274;
  v22 = v11;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = sub_1002C4250;
  v21[3] = &unk_100799B88;
  v14 = _Block_copy(v21);
  v15 = objc_msgSend(v13, "initWithTableView:cellProvider:", v12, v14, swift_retain(v11).n128_f64[0]);

  _Block_release(v14);
  swift_release(v22);
  v16 = *(void **)&v8[OBJC_IVAR___CHMoveModeSettingsViewController_dataSource];
  *(_QWORD *)&v8[OBJC_IVAR___CHMoveModeSettingsViewController_dataSource] = v15;

  result = (char *)objc_msgSend(v8, "tableView");
  if (result)
  {
    v17 = result;
    v18 = type metadata accessor for MoveModeSettingsCell();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
    v20 = String._bridgeToObjectiveC()();
    objc_msgSend(v17, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v20);

    sub_10038D344();
    swift_release(v11);

    return v8;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_10038D344()
{
  uint64_t v0;
  uint64_t ObjectType;
  os_log_type_t v2;
  void *v3;
  os_log_type_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  ObjectType = swift_getObjectType(v0);
  v2 = static os_log_type_t.default.getter(ObjectType);
  v3 = (void *)HKLogActivity;
  v4 = v2;
  if (os_log_type_enabled(HKLogActivity, v2))
  {
    v5 = v3;
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v15 = v7;
    *(_DWORD *)v6 = 136315394;
    v8 = _typeName(_:qualified:)(ObjectType, 0);
    v10 = v9;
    v14 = sub_10003E8EC(v8, v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v6 + 4);
    swift_bridgeObjectRelease(v10);
    *(_WORD *)(v6 + 12) = 2080;
    v14 = sub_10003E8EC(0xD000000000000012, 0x800000010068A130, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v6 + 14);
    _os_log_impl((void *)&_mh_execute_header, v5, v4, "%s::%s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  v11 = sub_10038D508();
  v12 = *(void **)(v0 + OBJC_IVAR___CHMoveModeSettingsViewController_dataSource);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v13, "applySnapshot:animatingDifferences:", v11, 1);

  }
}

id sub_10038D508()
{
  uint64_t v0;
  uint64_t ObjectType;
  id v2;
  uint64_t v3;
  uint64_t v4;
  Class isa;
  uint64_t v6;
  Class v7;
  uint64_t v8;
  os_log_type_t v9;
  void *v10;
  os_log_type_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  NSObject *log;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  ObjectType = swift_getObjectType(v0);
  v2 = objc_msgSend(objc_allocWithZone((Class)NSDiffableDataSourceSnapshot), "init");
  v3 = sub_100047110(&qword_10082CEC0);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100622F90;
  *(_QWORD *)(v4 + 56) = &type metadata for String;
  *(_QWORD *)(v4 + 32) = 0xD000000000000011;
  *(_QWORD *)(v4 + 40) = 0x80000001006920E0;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "appendSectionsWithIdentifiers:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

  v6 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100622F90;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  *(_QWORD *)(v6 + 32) = 0xD000000000000014;
  *(_QWORD *)(v6 + 40) = 0x800000010069BC10;
  v7 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "appendItemsWithIdentifiers:", v7, swift_bridgeObjectRelease(v6).n128_f64[0]);

  v9 = static os_log_type_t.default.getter(v8);
  v10 = (void *)HKLogActivity;
  v11 = v9;
  if (os_log_type_enabled(HKLogActivity, v9))
  {
    v12 = v2;
    log = v10;
    v13 = swift_slowAlloc(32, -1);
    v14 = (_QWORD *)swift_slowAlloc(8, -1);
    v22 = swift_slowAlloc(64, -1);
    v24 = v22;
    *(_DWORD *)v13 = 136315650;
    v15 = _typeName(_:qualified:)(ObjectType, 0);
    v17 = v16;
    v23 = sub_10003E8EC(v15, v16, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v13 + 4);
    swift_bridgeObjectRelease(v17);
    *(_WORD *)(v13 + 12) = 2080;
    v23 = sub_10003E8EC(0x70616E53656B616DLL, 0xEE002928746F6873, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v13 + 14);
    *(_WORD *)(v13 + 22) = 2112;
    v23 = (uint64_t)v12;
    v18 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v13 + 24);
    *v14 = v12;

    _os_log_impl((void *)&_mh_execute_header, log, v11, "%s::%s snapshot %@", (uint8_t *)v13, 0x20u);
    v19 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v14, 1, v19);
    swift_slowDealloc(v14, -1, -1);
    swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  return v2;
}

id sub_10038D838(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  NSString v6;
  Class isa;
  id v8;
  unsigned __int8 *Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  _UNKNOWN **v18;
  uint64_t v20;
  char v21[24];

  v5 = a4 + 16;
  v6 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v6, isa);

  swift_beginAccess(v5, v21, 0, 0);
  Strong = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v10 = Strong[OBJC_IVAR___CHMoveModeSettingsViewController_isAppleMoveTime];

  }
  else
  {
    v10 = 0;
  }
  v11 = type metadata accessor for MoveModeSettingsCell();
  v12 = swift_dynamicCastClass(v8, v11);
  if (v12)
  {
    v13 = v12;
    swift_beginAccess(v5, &v20, 0, 0);
    v14 = (void *)swift_unknownObjectWeakLoadStrong(v5);
    v15 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp20MoveModeSettingsCell_moveTimeSwitch);
    v16 = v8;
    objc_msgSend(v15, "setOn:", v10);
    v17 = v13 + OBJC_IVAR____TtC10FitnessApp20MoveModeSettingsCell_delegate;
    v18 = &off_100799B50;
    if (!v14)
      v18 = 0;
    *(_QWORD *)(v17 + 8) = v18;
    swift_unknownObjectWeakAssign(v17, v14);

  }
  return v8;
}

id sub_10038DB7C()
{
  return sub_100111F3C(type metadata accessor for MoveModeSettingsViewController);
}

uint64_t type metadata accessor for MoveModeSettingsViewController()
{
  return objc_opt_self(CHMoveModeSettingsViewController);
}

void sub_10038DBF0(char a1)
{
  void *v1;
  void *v2;
  void *v4;
  id v5;
  NSString v6;
  id v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  id v9;
  NSString v10;
  id v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  id v14;
  NSString v15;
  id v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  uint64_t v19;
  NSString v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  NSString v43;
  id v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  NSString v47;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  NSString v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  char v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  void **aBlock;
  uint64_t v70;
  void (*v71)(uint64_t, void *);
  void *v72;
  void (*v73)(uint64_t);
  uint64_t v74;

  v2 = v1;
  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v67 = a1;
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v68 = v8;

  v9 = objc_msgSend(v4, "mainBundle");
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v13 = v12;

  v66 = (id)objc_opt_self(NSBundle);
  v14 = objc_msgSend(v66, "mainBundle");
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v18 = v17;

  v19 = swift_allocObject(&unk_100799B70, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v2);
  swift_retain(v19);
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18, v21, v22, v23, v24, v25, v26, v27);
  v73 = sub_10038E2A8;
  v74 = v19;
  v64 = v2;
  aBlock = _NSConcreteStackBlock;
  v70 = 1107296256;
  v71 = sub_1000277E8;
  v72 = &unk_100799C00;
  v28 = _Block_copy(&aBlock);
  swift_release(v74);
  v29 = (void *)objc_opt_self(UIAlertAction);
  v65 = objc_msgSend(v29, "actionWithTitle:style:handler:", v20, 0, v28);
  _Block_release(v28);
  swift_release(v19);

  v30 = swift_allocObject(&unk_100799B70, 24, 7);
  swift_unknownObjectWeakInit(v30 + 16, v2);
  v31 = swift_allocObject(&unk_100799C38, 25, 7);
  *(_QWORD *)(v31 + 16) = v30;
  *(_BYTE *)(v31 + 24) = v67 & 1;
  swift_retain(v30);
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13, v33, v34, v35, v36, v37, v38, v39);
  v73 = sub_10038E2D4;
  v74 = v31;
  aBlock = _NSConcreteStackBlock;
  v70 = 1107296256;
  v71 = sub_1000277E8;
  v72 = &unk_100799C50;
  v40 = _Block_copy(&aBlock);
  v41 = objc_msgSend(v29, "actionWithTitle:style:handler:", v32, 0, v40, swift_release(v74).n128_f64[0]);
  _Block_release(v40);
  swift_release(v30);

  v42 = objc_msgSend(v66, "mainBundle");
  v43 = String._bridgeToObjectiveC()();
  v44 = objc_msgSend(v42, "localizedStringForKey:value:table:", v43, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
  v46 = v45;

  v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v68, v48, v49, v50, v51, v52, v53, v54);
  v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v46, v56, v57, v58, v59, v60, v61, v62);
  v63 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v47, v55, 1);

  objc_msgSend(v63, "addAction:", v65);
  objc_msgSend(v63, "addAction:", v41);
  objc_msgSend(v64, "presentViewController:animated:completion:", v63, 1, 0);

}

void sub_10038E134(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "tableView");

    if (v5)
    {
      objc_msgSend(v5, "reloadData");

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10038E1B4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR___CHMoveModeSettingsViewController_isAppleMoveTime) = a3 & 1;
    if ((a3 & 1) != 0)
      v7 = 2;
    else
      v7 = 1;
    objc_msgSend((id)objc_opt_self(CHMoveModeUtilities), "saveActivityMoveModeAndDefaultGoalSamplesForActivityMoveMode:healthStore:formattingManager:", v7, *(_QWORD *)(Strong + OBJC_IVAR___CHMoveModeSettingsViewController_healthStore), *(_QWORD *)(Strong + OBJC_IVAR___CHMoveModeSettingsViewController_formattingManager));

  }
}

uint64_t sub_10038E250()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

id sub_10038E274(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10038D838(a1, a2, a3, v3);
}

uint64_t sub_10038E27C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_10038E2A0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return sub_10038CFF0(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_10038E2A8(uint64_t a1)
{
  uint64_t v1;

  sub_10038E134(a1, v1);
}

uint64_t sub_10038E2B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_10038E2D4(uint64_t a1)
{
  uint64_t v1;

  sub_10038E1B4(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

char *sub_10038E2EC(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v25)(char *, uint64_t, uint64_t, __n128);
  char *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    v9 = a2[2];
    *((_QWORD *)a1 + 1) = v8;
    *((_QWORD *)a1 + 2) = v9;
    v11 = a2[3];
    v10 = a2[4];
    *((_QWORD *)a1 + 3) = v11;
    *((_QWORD *)a1 + 4) = v10;
    v12 = a3[9];
    __dst = &a1[v12];
    v13 = (char *)a2 + v12;
    a1[40] = *((_BYTE *)a2 + 40);
    v14 = type metadata accessor for DateInterval(0);
    v15 = *(_QWORD *)(v14 - 8);
    v25 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v15 + 48);
    v16 = v4;
    v17 = v8;
    swift_bridgeObjectRetain(v9);
    v18 = swift_bridgeObjectRetain(v11);
    if (v25(v13, 1, v14, v18))
    {
      v19 = sub_100047110((uint64_t *)&unk_100827440);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    v20 = a3[11];
    v7[a3[10]] = *((_BYTE *)a2 + a3[10]);
    v21 = &v7[v20];
    v22 = (uint64_t)a2 + v20;
    v23 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v7;
}

uint64_t sub_10038E464(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for DateInterval(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 44);
  v8 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_10038E514(uint64_t a1, uint64_t a2, int *a3)
{
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t, __n128);
  id v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *__dst;

  v6 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v10 = a3[9];
  __dst = (void *)(a1 + v10);
  v11 = (const void *)(a2 + v10);
  *(_QWORD *)(a1 + 16) = v7;
  v12 = type metadata accessor for DateInterval(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v13 + 48);
  v15 = v6;
  v16 = v5;
  swift_bridgeObjectRetain(v7);
  v17 = swift_bridgeObjectRetain(v8);
  if (v14(v11, 1, v12, v17))
  {
    v18 = sub_100047110((uint64_t *)&unk_100827440);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  v19 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t sub_10038E65C(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = *(_QWORD *)(a2 + 16);
  v13 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
  v21 = *(_QWORD *)(a2 + 24);
  v22 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22, v23, v24, v25, v26, v27, v28, v29);
  v30 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v30;
  v31 = a3[9];
  v32 = (void *)(a1 + v31);
  v33 = (void *)(a2 + v31);
  v34 = type metadata accessor for DateInterval(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v35 + 24))(v32, v33, v34);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v35 + 8))(v32, v34);
    goto LABEL_6;
  }
  if (v38)
  {
LABEL_6:
    v39 = sub_100047110((uint64_t *)&unk_100827440);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v35 + 16))(v32, v33, v34);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
LABEL_7:
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v40 = a3[11];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
  return a1;
}

uint64_t sub_10038E80C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = a3[9];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for DateInterval(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100047110((uint64_t *)&unk_100827440);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

uint64_t sub_10038E91C(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v8 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v8, v9, v10, v11, v12, v13, v14, v15);
  v16 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v16, v17, v18, v19, v20, v21, v22, v23);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v24 = a3[9];
  v25 = (void *)(a1 + v24);
  v26 = (void *)(a2 + v24);
  v27 = type metadata accessor for DateInterval(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v25, v26, v27);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_6;
  }
  if (v31)
  {
LABEL_6:
    v32 = sub_100047110((uint64_t *)&unk_100827440);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_7:
  v33 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v34, v35, v36);
  return a1;
}

uint64_t sub_10038EAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10038EABC);
}

uint64_t sub_10038EABC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100047110((uint64_t *)&unk_100827440);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      v10 = type metadata accessor for Date(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_10038EB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10038EB6C);
}

char *sub_10038EB6C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_100047110((uint64_t *)&unk_100827440);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      v10 = type metadata accessor for Date(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for MetricDetailViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100830960;
  if (!qword_100830960)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetricDetailViewModel);
  return result;
}

void sub_10038EC48(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[4] = "\t";
  sub_10038ED00(319);
  if (v3 <= 0x3F)
  {
    v6[5] = *(_QWORD *)(v2 - 8) + 64;
    v6[6] = &unk_100639320;
    v4 = type metadata accessor for Date(319);
    if (v5 <= 0x3F)
    {
      v6[7] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 8, v6, a1 + 16);
    }
  }
}

void sub_10038ED00(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100830970)
  {
    v2 = type metadata accessor for DateInterval(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100830970);
  }
}

uint64_t sub_10038ED54(char a1)
{
  id *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  uint64_t v9;

  if ((a1 & 1) != 0)
  {
    v9 = 0x3A65676172657661;
    v2 = v1[1];
  }
  else
  {
    v9 = 0x203A6C61746F74;
    v2 = *v1;
  }
  v3 = objc_msgSend(v2, "description");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);

  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_10038EE28(uint64_t a1)
{
  id *v1;
  id *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  Swift::UInt v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v2 = v1;
  v4 = type metadata accessor for DateInterval(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110((uint64_t *)&unk_100827440);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  NSObject.hash(into:)(a1);

  v12 = v2[1];
  NSObject.hash(into:)(a1);

  v13 = (uint64_t)v2[2];
  swift_bridgeObjectRetain(v13);
  sub_1001247EC(a1, v13);
  swift_bridgeObjectRelease(v13);
  v14 = (uint64_t)v2[3];
  swift_bridgeObjectRetain(v14);
  sub_1001247E8(a1, v14);
  swift_bridgeObjectRelease(v14);
  v15 = (Swift::UInt)v2[4];
  if (((_BYTE)v2[5] & 1) == 0)
    Hasher._combine(_:)(3uLL);
  Hasher._combine(_:)(v15);
  v16 = type metadata accessor for MetricDetailViewModel(0);
  sub_10038F108((uint64_t)v2 + *(int *)(v16 + 36), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1u);
    v17 = sub_1000083D8(&qword_1008309C0, (uint64_t (*)(uint64_t))&type metadata accessor for DateInterval, (uint64_t)&protocol conformance descriptor for DateInterval);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v17);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  Hasher._combine(_:)(*((_BYTE *)v2 + *(int *)(v16 + 40)));
  v18 = type metadata accessor for Date(0);
  v19 = sub_1000083D8((unint64_t *)&qword_1008214E8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  return dispatch thunk of Hashable.hash(into:)(a1, v18, v19);
}

Swift::Int sub_10038F060()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_10038EE28((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_10038F0A0(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_10038EE28((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_10038F0DC()
{
  return sub_1000083D8(&qword_1008309B8, type metadata accessor for MetricDetailViewModel, (uint64_t)&unk_100639338);
}

uint64_t sub_10038F108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110((uint64_t *)&unk_100827440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10038F150(uint64_t a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char v39;
  uint64_t v41;
  int *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v48 = type metadata accessor for DateInterval(0);
  v4 = *(char **)(v48 - 8);
  __chkstk_darwin(v48);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_1008309C8);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110((uint64_t *)&unk_100827440);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v41 - v17;
  sub_100139CE8();
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    goto LABEL_31;
  v46 = v15;
  v47 = (uint64_t)v18;
  v43 = v6;
  v44 = v12;
  v45 = v9;
  v19 = v48;
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8)) & 1) == 0
    || (sub_1002A0584(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & 1) == 0
    || (sub_1002A0734(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24)) & 1) == 0)
  {
    goto LABEL_31;
  }
  v20 = *(_QWORD *)(a1 + 32);
  v21 = *(_QWORD *)(a2 + 32);
  v22 = *(_BYTE *)(a2 + 40);
  if (*(_BYTE *)(a1 + 40) == 1)
  {
    if (v20)
    {
      v23 = (uint64_t)v46;
      v24 = v47;
      if (v20 == 1)
      {
        if (v21 != 1)
          v22 = 0;
        if ((v22 & 1) == 0)
          goto LABEL_31;
      }
      else
      {
        if (v21 <= 1)
          v22 = 0;
        if ((v22 & 1) == 0)
          goto LABEL_31;
      }
    }
    else
    {
      if (v21)
        v22 = 0;
      v23 = (uint64_t)v46;
      v24 = v47;
      if ((v22 & 1) == 0)
        goto LABEL_31;
    }
  }
  else
  {
    if (v20 != v21)
      v22 = 1;
    v23 = (uint64_t)v46;
    v24 = v47;
    if ((v22 & 1) != 0)
      goto LABEL_31;
  }
  v25 = (int *)type metadata accessor for MetricDetailViewModel(0);
  sub_10038F108(a1 + v25[9], v24);
  sub_10038F108(a2 + v25[9], v23);
  v26 = (uint64_t)v45;
  v27 = (uint64_t)&v45[*(int *)(v7 + 48)];
  sub_10038F108(v24, (uint64_t)v45);
  v47 = v27;
  sub_10038F108(v23, v27);
  v28 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v4 + 6);
  if (v28(v26, 1, v19) != 1)
  {
    v46 = v4;
    v30 = (uint64_t)v44;
    sub_10038F108(v26, (uint64_t)v44);
    v29 = v26;
    if (v28(v47, 1, v19) != 1)
    {
      v31 = v46;
      v32 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v46 + 4);
      v42 = v25;
      v33 = v30;
      v34 = v43;
      v35 = v19;
      v32(v43, v47, v19);
      v36 = sub_1000083D8(&qword_1008309D0, (uint64_t (*)(uint64_t))&type metadata accessor for DateInterval, (uint64_t)&protocol conformance descriptor for DateInterval);
      LODWORD(v47) = dispatch thunk of static Equatable.== infix(_:_:)(v33, v34, v19, v36);
      v37 = (void (*)(char *, uint64_t))*((_QWORD *)v31 + 1);
      v37(v34, v35);
      sub_10001BE90(v23, (uint64_t *)&unk_100827440);
      sub_10001BE90(v24, (uint64_t *)&unk_100827440);
      v38 = v33;
      v25 = v42;
      v37((char *)v38, v35);
      sub_10001BE90(v29, (uint64_t *)&unk_100827440);
      if ((v47 & 1) == 0)
        goto LABEL_31;
      goto LABEL_30;
    }
    sub_10001BE90(v23, (uint64_t *)&unk_100827440);
    sub_10001BE90(v24, (uint64_t *)&unk_100827440);
    (*((void (**)(uint64_t, uint64_t))v46 + 1))(v30, v19);
LABEL_28:
    sub_10001BE90(v29, &qword_1008309C8);
    goto LABEL_31;
  }
  sub_10001BE90(v23, (uint64_t *)&unk_100827440);
  sub_10001BE90(v24, (uint64_t *)&unk_100827440);
  v29 = v26;
  if (v28(v47, 1, v19) != 1)
    goto LABEL_28;
  sub_10001BE90(v26, (uint64_t *)&unk_100827440);
LABEL_30:
  if (*(unsigned __int8 *)(a1 + v25[10]) == *(unsigned __int8 *)(a2 + v25[10]))
  {
    v39 = static Date.== infix(_:_:)(a1 + v25[11], a2 + v25[11]);
    return v39 & 1;
  }
LABEL_31:
  v39 = 0;
  return v39 & 1;
}

double sub_10038F560()
{
  void *v0;
  id v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double Width;
  id v11;
  double v12;
  double v13;
  double result;
  CGRect v15;

  v0 = (void *)objc_opt_self(UIScreen);
  v1 = objc_msgSend(v0, "mainScreen");
  objc_msgSend(v1, "nativeBounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v15.origin.x = v3;
  v15.origin.y = v5;
  v15.size.width = v7;
  v15.size.height = v9;
  Width = CGRectGetWidth(v15);
  v11 = objc_msgSend(v0, "mainScreen");
  objc_msgSend(v11, "nativeScale");
  v13 = v12;

  result = Width / v13;
  *(double *)&qword_10086A780 = Width / v13;
  return result;
}

uint64_t sub_10038F628()
{
  uint64_t result;

  result = CTFontHasExuberatedLineHeight(0);
  byte_10086A788 = result;
  return result;
}

void sub_10038F648()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  id v4;
  double v5;
  double v6;

  v0 = (void *)objc_opt_self(UIScreen);
  v1 = objc_msgSend(v0, "mainScreen");
  objc_msgSend(v1, "scale");
  v3 = v2;

  v4 = objc_msgSend(v0, "mainScreen");
  objc_msgSend(v4, "nativeScale");
  v6 = v5;

  byte_10086A789 = v3 < v6;
}

uint64_t storeEnumTagSinglePayload for VO2MaxBucket(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_10038F734 + 4 * byte_1006393A5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10038F768 + 4 * byte_1006393A0[v4]))();
}

uint64_t sub_10038F768(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10038F770(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10038F778);
  return result;
}

uint64_t sub_10038F784(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10038F78CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_10038F790(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10038F798(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VO2MaxBucket()
{
  return &type metadata for VO2MaxBucket;
}

uint64_t sub_10038F7B4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7475626972747461;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xEA00000000007365;
  if ((a2 & 1) != 0)
    v5 = 0x7475626972747461;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000007365;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10038F850(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x77654E7374616857;
  else
    v3 = 0x6F72746E49;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x77654E7374616857;
  else
    v5 = 0x6F72746E49;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10038F8F0(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x68746E6F6DLL;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x6E6F4D6565726874;
    else
      v4 = 0x68746E6F4D786973;
    if (v3 == 1)
      v5 = 0xEB00000000736874;
    else
      v5 = 0xE900000000000073;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x6E6F4D6565726874;
      else
        v2 = 0x68746E6F4D786973;
      if (v6 == 1)
        v7 = 0xEB00000000736874;
      else
        v7 = 0xE900000000000073;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE500000000000000;
    v4 = 0x68746E6F6DLL;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v4 != 0x68746E6F6DLL)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_10038FA18(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 1801807223;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x68746E6F6DLL;
    else
      v4 = 1918985593;
    if (v3 == 1)
      v5 = 0xE500000000000000;
    else
      v5 = 0xE400000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x68746E6F6DLL;
      else
        v2 = 1918985593;
      if (v6 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE400000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE400000000000000;
    v4 = 1801807223;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v4 != 1801807223)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_10038FB08(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1953718636;
  else
    v3 = 0x746E6572727563;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1953718636;
  else
    v5 = 0x746E6572727563;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_10038FBA4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10038FBF4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10038FCD4 + 4 * byte_1006393B3[a2]))(0x676E696E6E7572);
}

uint64_t sub_10038FCD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x676E696E6E7572 && v1 == v2)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x676E696E6E7572, v2, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

uint64_t sub_10038FE14(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7865646E69;
  else
    v3 = 0x4974756F6B726F77;
  if (v2)
    v4 = 0xE900000000000064;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x7865646E69;
  else
    v5 = 0x4974756F6B726F77;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE900000000000064;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10038FEB8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6D6F74737563;
  else
    v3 = 0x647261646E617473;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6D6F74737563;
  else
    v5 = 0x647261646E617473;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_10038FF58(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10038FFB4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10039000C + 4 * byte_1006393C0[a2]))(1701869940);
}

uint64_t sub_10039000C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1701869940 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 1701869940, 0xE400000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE400000000000000);
  return v2 & 1;
}

void sub_1003900AC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1003900EC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100390188 + 4 * byte_1006393CC[a2]))(0x726574656DLL);
}

uint64_t sub_100390188(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x726574656DLL && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x726574656DLL, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

void sub_100390284(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1003902C4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1003903A8 + 4 * byte_1006393DC[a2]))(0x7449726F466F67);
}

uint64_t sub_1003903A8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7449726F466F67 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x7449726F466F67, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

void sub_1003904EC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10039053C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1003905D0 + 4 * byte_1006393E9[a2]))(0x61446D6F74737563);
}

uint64_t sub_1003905D0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x61446D6F74737563 && v1 == 0xEA00000000007379)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x61446D6F74737563, 0xEA00000000007379, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEA00000000007379);
  return v2 & 1;
}

uint64_t sub_1003906AC(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x747365676E6F6CLL;
  else
    v2 = 0x746E6572727563;
  if ((a2 & 1) != 0)
    v3 = 0x747365676E6F6CLL;
  else
    v3 = 0x746E6572727563;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE700000000000000, v3, 0xE700000000000000, 0);
  swift_bridgeObjectRelease_n(0xE700000000000000, 2);
  return v4 & 1;
}

uint64_t sub_100390728(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x4547444142;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0xD000000000000011;
    else
      v4 = 0xD00000000000001BLL;
    if (v3 == 1)
      v5 = 0x800000010069BEC0;
    else
      v5 = 0x800000010069BEA0;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0xD000000000000011;
      else
        v2 = 0xD00000000000001BLL;
      if (v6 == 1)
        v7 = 0x800000010069BEC0;
      else
        v7 = 0x800000010069BEA0;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE500000000000000;
    v4 = 0x4547444142;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v4 != 0x4547444142)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_100390828(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x65676172657661;
  else
    v3 = 0x6C61746F74;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x65676172657661;
  else
    v5 = 0x6C61746F74;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1003908C8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100390910(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10039097C + 4 * byte_1006393F2[a2]))(0x70536D6F74737563);
}

uint64_t sub_10039097C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x70536D6F74737563 && v1 == 0xEB0000000074696CLL)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x70536D6F74737563, 0xEB0000000074696CLL, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEB0000000074696CLL);
  return v2 & 1;
}

uint64_t sub_100390A2C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x747365776F6C73;
  else
    v2 = 0x74736574736166;
  if ((a2 & 1) != 0)
    v3 = 0x747365776F6C73;
  else
    v3 = 0x74736574736166;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE700000000000000, v3, 0xE700000000000000, 0);
  swift_bridgeObjectRelease_n(0xE700000000000000, 2);
  return v4 & 1;
}

uint64_t sub_100390AA8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E6F6974616C6572;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xED00007370696873;
  if ((a2 & 1) != 0)
    v5 = 0x6E6F6974616C6572;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xED00007370696873;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_100390B4C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_100390B9C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100390C18 + 4 * byte_1006393FC[a2]))(0xD000000000000012);
}

uint64_t sub_100390C18(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  char v3;

  v2 = 0x80000001006879F0;
  if (a1 == 0xD000000000000012 && v1 == 0x80000001006879F0)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0xD000000000000012, 0x80000001006879F0, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

void sub_100390CCC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100390D0C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100390D84 + 4 * byte_100639407[a2]))(0x736C616F67);
}

uint64_t sub_100390D84(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x736C616F67 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x736C616F67, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

uint64_t sub_100390E40(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEA0000000000656DLL;
  v3 = 0x614E747369747261;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000012;
    else
      v5 = 1701667182;
    if (v4 == 1)
      v6 = 0x8000000100687540;
    else
      v6 = 0xE400000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x614E747369747261;
  v6 = 0xEA0000000000656DLL;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD000000000000012;
    else
      v3 = 1701667182;
    if (v7 == 1)
      v2 = 0x8000000100687540;
    else
      v2 = 0xE400000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
  {
    v8 = 1;
    v2 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v3, v2, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v2);
  return v8 & 1;
}

uint64_t sub_100390F48(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x3434333734393431;
  else
    v3 = 0x3235333734393431;
  if (v2)
    v4 = 0xEA00000000003631;
  else
    v4 = 0xEA00000000003037;
  if ((a2 & 1) != 0)
    v5 = 0x3434333734393431;
  else
    v5 = 0x3235333734393431;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000003037;
  else
    v6 = 0xEA00000000003631;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_100390FF0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100391038(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10039110C + 4 * byte_100639414[a2]))(0x746867696568);
}

uint64_t sub_10039110C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x746867696568 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x746867696568, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE600000000000000);
  return v2 & 1;
}

uint64_t sub_100391240(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6863746177;
  else
    v3 = 0x656E6F687069;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6863746177;
  else
    v5 = 0x656E6F687069;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1003912DC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10039131C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1003913D8 + 4 * byte_100639423[a2]))(0x6F6C614365766F6DLL);
}

uint64_t sub_1003913D8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F6C614365766F6DLL && v1 == 0xEC00000073656972)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6F6C614365766F6DLL, 0xEC00000073656972, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEC00000073656972);
  return v2 & 1;
}

uint64_t sub_1003914EC(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x8000000100687440;
  else
    v2 = 0x8000000100687420;
  if ((a2 & 1) != 0)
    v3 = 0x8000000100687440;
  else
    v3 = 0x8000000100687420;
  if (v2 == v3)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000017, v2, 0xD000000000000017, v3, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

Swift::Int sub_100391588(char a1)
{
  unint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, 0);
  if ((a1 & 1) != 0)
    v2 = 0x8000000100687440;
  else
    v2 = 0x8000000100687420;
  String.hash(into:)(v4, 0xD000000000000017, v2);
  swift_bridgeObjectRelease(v2);
  return Hasher._finalize()();
}

void sub_100391604(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_100391664()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0xD000000000000012, 0x80000001006879F0);
  swift_bridgeObjectRelease(0x80000001006879F0);
  return Hasher._finalize()();
}

void sub_1003916EC(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_100391740()
{
  uint64_t v1;

  String.hash(into:)(&v1, 1701869940, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

void sub_1003917A8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1003917E8(uint64_t a1)
{
  uint64_t v1;

  String.hash(into:)(a1, 0x676E696E6E7572, v1);
  return swift_bridgeObjectRelease(v1);
}

void sub_1003918C0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1003918F8(uint64_t a1)
{
  String.hash(into:)(a1, 0x726574656DLL, 0xE500000000000000);
  return swift_bridgeObjectRelease(0xE500000000000000);
}

void sub_10039198C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1003919C4(uint64_t a1)
{
  String.hash(into:)(a1, 0x7449726F466F67, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

void sub_100391AA0(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_100391AEC(uint64_t a1)
{
  String.hash(into:)(a1, 0xD000000000000012, 0x80000001006879F0);
  return swift_bridgeObjectRelease(0x80000001006879F0);
}

void sub_100391B5C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_100391B98(uint64_t a1)
{
  String.hash(into:)(a1, 0x746867696568, 0xE600000000000000);
  return swift_bridgeObjectRelease(0xE600000000000000);
}

void sub_100391C64(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_100391CA8()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6F6C614365766F6DLL, 0xEC00000073656972);
  swift_bridgeObjectRelease(0xEC00000073656972);
  return Hasher._finalize()();
}

void sub_100391D70(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_100391DB8()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x746867696568, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

void sub_100391E98(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_100391EF4()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0xD000000000000012, 0x80000001006879F0);
  swift_bridgeObjectRelease(0x80000001006879F0);
  return Hasher._finalize()();
}

void sub_100391F7C(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_100391FC0()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x7449726F466F67, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

void sub_1003920B0(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_1003920F4()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x726574656DLL, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

void sub_10039219C(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_1003921EC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 1701869940, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

Swift::Int sub_100392254(uint64_t a1, char a2)
{
  unint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, a1);
  if ((a2 & 1) != 0)
    v3 = 0x8000000100687440;
  else
    v3 = 0x8000000100687420;
  String.hash(into:)(v5, 0xD000000000000017, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

unint64_t sub_1003922CC@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  _QWORD *v5;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  __int128 v18;
  double v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  double v23;
  Swift::UInt v25;
  Swift::UInt v26;
  char v27;
  __int128 v28;

  v5 = (_QWORD *)result;
  v8 = 0;
  v9 = result + 64;
  v10 = 1 << *(_BYTE *)(result + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(result + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v14 = 6;
  while (v12)
  {
    v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v16 = v15 | (v8 << 6);
LABEL_24:
    v22 = v5[6] + 32 * v16;
    v23 = *(double *)(v22 + 8);
    if (*(double *)v22 <= a4 && v23 > a4)
    {
      if (v5[2])
      {
        v25 = *(_QWORD *)(v22 + 16);
        v26 = *(_QWORD *)(v22 + 24);
        v28 = *(_OWORD *)v22;
        result = sub_100439224(v25, v26, *(double *)v22, v23);
        v18 = v28;
        if ((v27 & 1) != 0)
        {
          v14 = *(unsigned __int8 *)(v5[7] + result);
          v19 = a4;
LABEL_32:
          *(double *)a3 = v19;
          *(_QWORD *)(a3 + 8) = 0;
          *(_OWORD *)(a3 + 16) = v18;
          *(_QWORD *)(a3 + 32) = v25;
          *(_QWORD *)(a3 + 40) = v26;
          *(_QWORD *)(a3 + 48) = v14;
          *(_QWORD *)(a3 + 56) = a2;
          return result;
        }
      }
    }
  }
  v17 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  v18 = 0uLL;
  v19 = 0.0;
  if (v17 >= v13)
    goto LABEL_31;
  v20 = *(_QWORD *)(v9 + 8 * v17);
  ++v8;
  if (v20)
    goto LABEL_23;
  v8 = v17 + 1;
  if (v17 + 1 >= v13)
    goto LABEL_31;
  v20 = *(_QWORD *)(v9 + 8 * v8);
  if (v20)
    goto LABEL_23;
  v8 = v17 + 2;
  if (v17 + 2 >= v13)
    goto LABEL_31;
  v20 = *(_QWORD *)(v9 + 8 * v8);
  if (v20)
    goto LABEL_23;
  v8 = v17 + 3;
  if (v17 + 3 >= v13)
    goto LABEL_31;
  v20 = *(_QWORD *)(v9 + 8 * v8);
  if (v20)
    goto LABEL_23;
  v8 = v17 + 4;
  if (v17 + 4 >= v13)
    goto LABEL_31;
  v20 = *(_QWORD *)(v9 + 8 * v8);
  if (v20)
  {
LABEL_23:
    v12 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v8 << 6);
    goto LABEL_24;
  }
  v21 = v17 + 5;
  if (v21 >= v13)
  {
LABEL_31:
    v25 = 0;
    v26 = 0;
    a2 = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v9 + 8 * v21);
  if (v20)
  {
    v8 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v8 >= v13)
      goto LABEL_31;
    v20 = *(_QWORD *)(v9 + 8 * v8);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_34:
  __break(1u);
  return result;
}

void sub_1003924B0(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_100392500()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  swift_bridgeObjectRelease(0x80000001006879F0);

  return v3;
}

uint64_t sub_10039260C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10039264C + 4 * byte_100639484[a1]))(0xD000000000000017, 0x80000001006879D0);
}

unint64_t sub_10039264C()
{
  return 0xD000000000000012;
}

uint64_t sub_100392680()
{
  uint64_t v0;

  return v0 + 5;
}

void sub_1003926A8(char *a1)
{
  sub_100390B4C(*a1);
}

void sub_1003926B4()
{
  char *v0;

  sub_100391604(*v0);
}

void sub_1003926BC(uint64_t a1)
{
  char *v1;

  sub_100391AA0(a1, *v1);
}

void sub_1003926C4(uint64_t a1)
{
  char *v1;

  sub_100391E98(a1, *v1);
}

unint64_t sub_1003926CC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100393188(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003926F8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_10039260C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100392724()
{
  unint64_t result;

  result = qword_100830A38;
  if (!qword_100830A38)
  {
    result = swift_getWitnessTable(&unk_10063951C, &type metadata for VO2MaxBucket);
    atomic_store(result, (unint64_t *)&qword_100830A38);
  }
  return result;
}

unint64_t sub_10039276C()
{
  unint64_t result;

  result = qword_100830A40;
  if (!qword_100830A40)
  {
    result = swift_getWitnessTable(&unk_10063958C, &type metadata for VO2MaxRange);
    atomic_store(result, (unint64_t *)&qword_100830A40);
  }
  return result;
}

void sub_1003927B0(double a1, double a2, uint64_t a3, Swift::UInt a4, Swift::UInt a5)
{
  Swift::UInt64 v8;
  Swift::UInt64 v9;

  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = *(_QWORD *)&a1;
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  if ((*(_QWORD *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = *(_QWORD *)&a2;
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
  Hasher._combine(_:)(a4);
  Hasher._combine(_:)(a5);
}

Swift::Int sub_100392818()
{
  double *v0;
  double v1;
  double v2;
  Swift::UInt v3;
  Swift::UInt v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = *((_QWORD *)v0 + 2);
  v4 = *((_QWORD *)v0 + 3);
  Hasher.init(_seed:)(v6, 0);
  sub_1003927B0(v1, v2, (uint64_t)v6, v3, v4);
  return Hasher._finalize()();
}

void sub_100392874(uint64_t a1)
{
  uint64_t v1;

  sub_1003927B0(*(double *)v1, *(double *)(v1 + 8), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

Swift::Int sub_100392880(uint64_t a1)
{
  double *v1;
  double v2;
  double v3;
  Swift::UInt v4;
  Swift::UInt v5;
  _QWORD v7[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  Hasher.init(_seed:)(v7, a1);
  sub_1003927B0(v2, v3, (uint64_t)v7, v4, v5);
  return Hasher._finalize()();
}

BOOL sub_1003928D8(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)
      && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
}

BOOL sub_100392914(double *a1, double *a2)
{
  return *a2 >= *a1;
}

BOOL sub_100392928(double *a1, double *a2)
{
  return *a1 >= *a2;
}

unint64_t sub_10039293C()
{
  unint64_t result;

  result = sub_10043D7CC((uint64_t)&off_10077AA20);
  qword_1008309D8 = result;
  return result;
}

unint64_t sub_100392960()
{
  unint64_t result;

  result = sub_10043D7CC((uint64_t)&off_10077AC40);
  qword_1008309E0 = result;
  return result;
}

unint64_t sub_100392984()
{
  unint64_t result;

  result = sub_10043D7CC((uint64_t)&off_10077AE60);
  qword_1008309E8 = result;
  return result;
}

unint64_t sub_1003929A8()
{
  unint64_t result;

  result = sub_10043D7CC((uint64_t)&off_10077B080);
  qword_1008309F0 = result;
  return result;
}

unint64_t sub_1003929CC()
{
  unint64_t result;

  result = sub_10043D7CC((uint64_t)&off_10077B2A0);
  qword_1008309F8 = result;
  return result;
}

unint64_t sub_1003929F0()
{
  unint64_t result;

  result = sub_10043D7CC((uint64_t)&off_10077B4C0);
  qword_100830A00 = result;
  return result;
}

unint64_t sub_100392A14()
{
  unint64_t result;

  result = sub_10043D7CC((uint64_t)&off_10077A910);
  qword_100830A08 = result;
  return result;
}

unint64_t sub_100392A38()
{
  unint64_t result;

  result = sub_10043D7CC((uint64_t)&off_10077AB30);
  qword_100830A10 = result;
  return result;
}

unint64_t sub_100392A5C()
{
  unint64_t result;

  result = sub_10043D7CC((uint64_t)&off_10077AD50);
  qword_100830A18 = result;
  return result;
}

unint64_t sub_100392A80()
{
  unint64_t result;

  result = sub_10043D7CC((uint64_t)&off_10077AF70);
  qword_100830A20 = result;
  return result;
}

unint64_t sub_100392AA4()
{
  unint64_t result;

  result = sub_10043D7CC((uint64_t)&off_10077B190);
  qword_100830A28 = result;
  return result;
}

unint64_t sub_100392AC8()
{
  unint64_t result;

  result = sub_10043D7CC((uint64_t)&off_10077B3B0);
  qword_100830A30 = result;
  return result;
}

void sub_100392AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *v11;

  v11 = (_QWORD *)(a2 + 64);
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v10 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain(a2);
  if (v5)
  {
    v6 = __clz(__rbit64(v5));
    goto LABEL_18;
  }
  if (v10 > 1)
  {
    v7 = v11[1];
    v8 = 1;
    if (v7)
      goto LABEL_17;
    v8 = 2;
    if (v10 <= 2)
      goto LABEL_20;
    v7 = v11[2];
    if (v7)
      goto LABEL_17;
    v8 = 3;
    if (v10 <= 3)
      goto LABEL_20;
    v7 = v11[3];
    if (v7)
    {
LABEL_17:
      v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_18:
      __asm { BR              X8 }
    }
    v9 = 4;
    if (v10 > 4)
    {
      v7 = v11[4];
      if (v7)
      {
        v8 = 4;
        goto LABEL_17;
      }
      while (1)
      {
        v8 = v9 + 1;
        if (__OFADD__(v9, 1))
          break;
        if (v8 >= v10)
          goto LABEL_20;
        v7 = v11[v8];
        ++v9;
        if (v7)
          goto LABEL_17;
      }
      __break(1u);
    }
  }
LABEL_20:
  swift_release(a2);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000035, 0x800000010069BE60, "FitnessApp/TrendsVO2MaxClassifier.swift", 39, 2, 265, 0);
  __break(1u);
  JUMPOUT(0x100392E48);
}

double sub_100392E78(unint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  double result;

  if (a1 - 80 >= 0xFFFFFFFFFFFFFFC4 && (unint64_t)(a2 - 1) <= 1)
  {
    if (a1 > 0x1D)
    {
      if (a1 > 0x27)
      {
        if (a1 > 0x31)
        {
          if (a1 > 0x3B)
          {
            if (a1 > 0x45)
            {
              if (a2 == 1)
              {
                if (qword_10081DC58 != -1)
                  swift_once(&qword_10081DC58, sub_100392AC8);
                v2 = &qword_100830A30;
              }
              else
              {
                if (qword_10081DC28 != -1)
                  swift_once(&qword_10081DC28, sub_1003929F0);
                v2 = &qword_100830A00;
              }
            }
            else if (a2 == 1)
            {
              if (qword_10081DC50 != -1)
                swift_once(&qword_10081DC50, sub_100392AA4);
              v2 = &qword_100830A28;
            }
            else
            {
              if (qword_10081DC20 != -1)
                swift_once(&qword_10081DC20, sub_1003929CC);
              v2 = &qword_1008309F8;
            }
          }
          else if (a2 == 1)
          {
            if (qword_10081DC48 != -1)
              swift_once(&qword_10081DC48, sub_100392A80);
            v2 = &qword_100830A20;
          }
          else
          {
            if (qword_10081DC18 != -1)
              swift_once(&qword_10081DC18, sub_1003929A8);
            v2 = &qword_1008309F0;
          }
        }
        else if (a2 == 1)
        {
          if (qword_10081DC40 != -1)
            swift_once(&qword_10081DC40, sub_100392A5C);
          v2 = &qword_100830A18;
        }
        else
        {
          if (qword_10081DC10 != -1)
            swift_once(&qword_10081DC10, sub_100392984);
          v2 = &qword_1008309E8;
        }
      }
      else if (a2 == 1)
      {
        if (qword_10081DC38 != -1)
          swift_once(&qword_10081DC38, sub_100392A38);
        v2 = &qword_100830A10;
      }
      else
      {
        if (qword_10081DC08 != -1)
          swift_once(&qword_10081DC08, sub_100392960);
        v2 = &qword_1008309E0;
      }
    }
    else if (a2 == 1)
    {
      if (qword_10081DC30 != -1)
        swift_once(&qword_10081DC30, sub_100392A14);
      v2 = &qword_100830A08;
    }
    else
    {
      if (qword_10081DC00 != -1)
        swift_once(&qword_10081DC00, sub_10039293C);
      v2 = &qword_1008309D8;
    }
    *(_QWORD *)&result = swift_bridgeObjectRetain(*v2).n128_u64[0];
  }
  return result;
}

unint64_t sub_100393188(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100782BC8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

uint64_t getEnumTagSinglePayload for VO2MaxInfo(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 48);
  v4 = v3 >= 6;
  v5 = v3 - 6;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VO2MaxInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = a2 + 5;
  }
  return result;
}

ValueMetadata *type metadata accessor for VO2MaxInfo()
{
  return &type metadata for VO2MaxInfo;
}

ValueMetadata *type metadata accessor for VO2MaxRange()
{
  return &type metadata for VO2MaxRange;
}

_QWORD *sub_100393288(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v15 = type metadata accessor for Artwork(0);
  v3 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v14 = v1;
    v16 = _swiftEmptyArrayStorage;
    sub_100121B40(0, v6, 0);
    v7 = v16;
    v8 = *(_QWORD *)(type metadata accessor for MediaMoment(0) - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    do
    {
      MediaMoment.artwork.getter();
      v16 = v7;
      v12 = v7[2];
      v11 = v7[3];
      if (v12 >= v11 >> 1)
      {
        sub_100121B40(v11 > 1, v12 + 1, 1);
        v7 = v16;
      }
      v7[2] = v12 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v12, v5, v15);
      v9 += v10;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void *sub_1003933E0(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  return sub_1003936C4(a1, a2, a3);
}

uint64_t sub_1003933F4@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  return sub_100393410(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for MediaDuration, a3);
}

uint64_t sub_100393410@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(_QWORD)@<X3>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  unint64_t v22;
  int64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  int64_t v30;
  uint64_t (*v31)(char *);
  uint64_t v32;

  v31 = a1;
  v28 = a4;
  v6 = a3(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v28 - v11;
  v13 = *(_QWORD *)(a2 + 56);
  v29 = a2 + 56;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v30 = (unint64_t)(v14 + 63) >> 6;
  v32 = a2;
  result = swift_bridgeObjectRetain(a2);
  v18 = 0;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(v32 + 48) + *(_QWORD *)(v7 + 72) * i, v6);
    v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v24(v10, v12, v6);
    v25 = v31(v10);
    if (v4)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      return swift_release(v32);
    }
    if ((v25 & 1) != 0)
    {
      swift_release(v32);
      v26 = v28;
      v24(v28, v10, v6);
      v27 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v26, v27, 1, v6);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    if (v16)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v18++, 1))
      break;
    if (v18 >= v30)
      goto LABEL_28;
    v22 = *(_QWORD *)(v29 + 8 * v18);
    if (!v22)
    {
      v23 = v18 + 1;
      if (v18 + 1 >= v30)
        goto LABEL_28;
      v22 = *(_QWORD *)(v29 + 8 * v23);
      if (v22)
        goto LABEL_16;
      v23 = v18 + 2;
      if (v18 + 2 >= v30)
        goto LABEL_28;
      v22 = *(_QWORD *)(v29 + 8 * v23);
      if (v22)
        goto LABEL_16;
      v23 = v18 + 3;
      if (v18 + 3 >= v30)
        goto LABEL_28;
      v22 = *(_QWORD *)(v29 + 8 * v23);
      if (v22)
      {
LABEL_16:
        v18 = v23;
        goto LABEL_17;
      }
      v23 = v18 + 4;
      if (v18 + 4 < v30)
      {
        v22 = *(_QWORD *)(v29 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v18 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_31;
            if (v18 >= v30)
              goto LABEL_28;
            v22 = *(_QWORD *)(v29 + 8 * v18);
            ++v23;
            if (v22)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      v26 = v28;
      swift_release(v32);
      v27 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v26, v27, 1, v6);
    }
LABEL_17:
    v16 = (v22 - 1) & v22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void *sub_1003936C4(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  id v15;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v7; v7 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    v8 = 4;
    while (1)
    {
      v9 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, a3)
         : *(id *)(a3 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v15 = v9;
      v12 = a1(&v15);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return v10;
      }
      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease(a3);
        return v10;
      }

      ++v8;
      if (v11 == v7)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v14 = a3;
    else
      v14 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
LABEL_11:
  swift_bridgeObjectRelease(a3);
  return 0;
}

void sub_1003937E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_stackViewModelCache), "removeAllObjects");
    sub_10000CC5C();

  }
}

uint64_t sub_10039384C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), char *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  double v31;
  char *v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  _QWORD *v40;
  void (*v41)(_QWORD);
  char *v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  void (*v72)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  char *v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  _QWORD *v82;
  unint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  void (*v105)(_QWORD);
  char *v106;
  char v107[32];

  v105 = a3;
  v106 = a4;
  v6 = sub_100047110(&qword_100830B20);
  v97 = *(_QWORD *)(v6 - 8);
  v98 = v6;
  v7 = __chkstk_darwin(v6);
  v95 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = v8;
  __chkstk_darwin(v7);
  v94 = (char *)&v89 - v9;
  v103 = sub_100047110((uint64_t *)&unk_100836170);
  v101 = *(_QWORD *)(v103 - 8);
  v10 = __chkstk_darwin(v103);
  v99 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v100 = (char *)&v89 - v13;
  v96 = v14;
  __chkstk_darwin(v12);
  v102 = (char *)&v89 - v15;
  v16 = sub_100047110(&qword_1008239C0);
  v17 = __chkstk_darwin(v16);
  v92 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v20 = (char *)&v89 - v19;
  v22 = type metadata accessor for Trainer(0, v21);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v91 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = static os_log_type_t.default.getter(v24);
  v27 = (void *)HKLogActivity;
  v90 = sub_100047110((uint64_t *)&unk_100827460);
  v28 = swift_allocObject(v90, 112, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v28 + 56) = &type metadata for String;
  v29 = sub_100038CF8();
  v89 = (unint64_t)"tails for identifier: %@";
  *(_QWORD *)(v28 + 32) = 0xD000000000000024;
  *(_QWORD *)(v28 + 40) = 0x800000010069C3E0;
  *(_QWORD *)(v28 + 96) = &type metadata for String;
  *(_QWORD *)(v28 + 104) = v29;
  *(_QWORD *)(v28 + 64) = v29;
  *(_QWORD *)(v28 + 72) = a1;
  *(_QWORD *)(v28 + 80) = a2;
  v30 = v27;
  *(_QWORD *)&v31 = swift_bridgeObjectRetain(a2).n128_u64[0];
  os_log(_:dso:log:_:_:)(v26, &_mh_execute_header, v30, "[seymour] %@ fetching trainer details for identifier: %@", 56, 2, v28, v31);

  v32 = v104;
  swift_bridgeObjectRelease(v28);
  v33 = &v32[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_trainerCache];
  swift_beginAccess(&v32[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_trainerCache], v107, 0, 0);
  v34 = *(_QWORD *)v33;
  if (!*(_QWORD *)(v34 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v20, 1, 1, v22);
LABEL_7:
    sub_10001BE90((uint64_t)v20, &qword_1008239C0);
    v39 = swift_allocObject(&unk_100799F18, 24, 7);
    swift_unknownObjectWeakInit(v39 + 16, v32);
    v40 = (_QWORD *)swift_allocObject(&unk_10079B5E8, 56, 7);
    v40[2] = v39;
    v40[3] = a1;
    v41 = v105;
    v42 = v106;
    v40[4] = a2;
    v40[5] = v41;
    v40[6] = v42;
    v43 = (_QWORD *)swift_allocObject(&unk_10079B610, 48, 7);
    v43[2] = a1;
    v43[3] = a2;
    v43[4] = v41;
    v43[5] = v42;
    v44 = &v32[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient];
    v45 = *(_QWORD *)&v32[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24];
    v46 = *(_QWORD *)&v32[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 32];
    v47 = a1;
    sub_100016804(v44, v45);
    swift_bridgeObjectRetain_n(a2, 2);
    swift_retain_n(v42, 2);
    v48 = v94;
    dispatch thunk of CatalogClientProtocol.fetchRemoteTrainerDetail(_:)(v47, a2, v45, v46);
    v49 = swift_allocObject(&unk_10079B638, 32, 7);
    *(_QWORD *)(v49 + 16) = sub_1003A03C4;
    *(_QWORD *)(v49 + 24) = v40;
    v50 = swift_allocObject(&unk_10079B660, 32, 7);
    *(_QWORD *)(v50 + 16) = sub_1003A43D0;
    *(_QWORD *)(v50 + 24) = v49;
    v52 = v97;
    v51 = v98;
    v53 = v95;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v95, v48, v98);
    v54 = *(unsigned __int8 *)(v52 + 80);
    v55 = (v54 + 16) & ~v54;
    v56 = (v93 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
    v57 = swift_allocObject(&unk_10079B688, v56 + 16, v54 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v57 + v55, v53, v51);
    v58 = (_QWORD *)(v57 + v56);
    *v58 = sub_1003A4400;
    v58[1] = v50;
    swift_retain(v40);
    v106 = (char *)&type metadata for () + 8;
    v59 = v100;
    Promise.init(asyncOperation:)(sub_1003A0424, v57, (char *)&type metadata for () + 8);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v48, v51);
    v60 = swift_allocObject(&unk_10079B6B0, 32, 7);
    *(_QWORD *)(v60 + 16) = sub_1003A42C0;
    *(_QWORD *)(v60 + 24) = v43;
    v61 = swift_allocObject(&unk_10079B6D8, 32, 7);
    *(_QWORD *)(v61 + 16) = sub_1003A43D0;
    *(_QWORD *)(v61 + 24) = v60;
    v62 = v101;
    v63 = v99;
    v64 = v103;
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v99, v59, v103);
    v65 = *(unsigned __int8 *)(v62 + 80);
    v66 = (v65 + 16) & ~v65;
    v67 = (v96 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
    v68 = swift_allocObject(&unk_10079B700, v67 + 16, v65 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v68 + v66, v63, v64);
    v69 = (_QWORD *)(v68 + v67);
    *v69 = sub_1001104C4;
    v69[1] = v61;
    swift_retain(v43);
    v70 = v102;
    Promise.init(asyncOperation:)(sub_10039F50C, v68, v106);
    v71 = *(void (**)(char *, uint64_t))(v62 + 8);
    v71(v59, v64);
    v72 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v64);
    v74 = v73;
    v75 = swift_allocObject(&unk_10079B728, 32, 7);
    *(_QWORD *)(v75 + 16) = 0;
    *(_QWORD *)(v75 + 24) = 0;
    v72(sub_10039F514, v75);
    swift_release(v40);
    swift_release(v43);
    swift_release(v74);
    v76 = swift_release(v75);
    return ((uint64_t (*)(char *, uint64_t, __n128))v71)(v70, v64, v76);
  }
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(v34);
  v35 = sub_100438F74(a1, a2);
  if ((v36 & 1) != 0)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v20, *(_QWORD *)(v34 + 56) + *(_QWORD *)(v23 + 72) * v35, v22);
    v37 = *(char **)(v23 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v37)(v20, 0, 1, v22);
  }
  else
  {
    v37 = *(char **)(v23 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v37)(v20, 1, 1, v22);
  }
  swift_bridgeObjectRelease(a2);
  v38 = swift_bridgeObjectRelease(v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v23 + 48))(v20, 1, v22, v38) == 1)
    goto LABEL_7;
  v78 = v91;
  v79 = (*(uint64_t (**)(char *, char *, uint64_t))(v23 + 32))(v91, v20, v22);
  LODWORD(v103) = static os_log_type_t.default.getter(v79);
  v80 = (void *)HKLogActivity;
  v81 = swift_allocObject(v90, 152, 7);
  v104 = v37;
  v82 = (_QWORD *)v81;
  *(_OWORD *)(v81 + 16) = xmmword_100624A40;
  *(_QWORD *)(v81 + 56) = &type metadata for String;
  *(_QWORD *)(v81 + 64) = v29;
  v83 = v89 | 0x8000000000000000;
  *(_QWORD *)(v81 + 32) = 0xD000000000000024;
  *(_QWORD *)(v81 + 40) = v83;
  *(_QWORD *)(v81 + 96) = &type metadata for String;
  *(_QWORD *)(v81 + 104) = v29;
  *(_QWORD *)(v81 + 72) = a1;
  *(_QWORD *)(v81 + 80) = a2;
  swift_bridgeObjectRetain(a2);
  v84 = v80;
  v85 = Trainer.description.getter();
  v82[17] = &type metadata for String;
  v82[18] = v29;
  v82[14] = v85;
  v82[15] = v86;
  os_log(_:dso:log:_:_:)(v103, &_mh_execute_header, v84, "[seymour] %@ returning cached trainer for identifier: %@, trainer: %@", 69, 2, v82);

  v87 = swift_bridgeObjectRelease(v82);
  v88 = (uint64_t)v92;
  (*(void (**)(char *, char *, uint64_t, __n128))(v23 + 16))(v92, v78, v22, v87);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v104)(v88, 0, 1, v22);
  v105(v88);
  sub_10001BE90(v88, &qword_1008239C0);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v78, v22);
}

uint64_t sub_100394014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  uint64_t v21;
  void (*v22)(char *);
  _BYTE v23[24];
  _BYTE v24[24];

  v22 = a5;
  v8 = sub_100047110(&qword_1008239C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Trainer(0, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  TrainerDetail.trainer.getter(v14);
  swift_beginAccess(a2 + 16, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  v18 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  if (Strong)
  {
    v19 = (char *)Strong;
    v18(v10, v16, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    swift_beginAccess(&v19[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_trainerCache], v23, 33, 0);
    swift_bridgeObjectRetain(a4);
    sub_1004C62AC((uint64_t)v10, a3, a4);
    swift_endAccess(v23);

  }
  v18(v10, v16, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  v22(v10);
  sub_10001BE90((uint64_t)v10, &qword_1008239C0);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_1003941D8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  void (*v26)(char *);
  _QWORD v27[3];
  _BYTE v28[8];

  v25 = a5;
  v26 = a4;
  v8 = sub_100047110(&qword_1008239C0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static os_log_type_t.error.getter(v9);
  v13 = (void *)HKLogActivity;
  v14 = sub_100047110((uint64_t *)&unk_100827460);
  v15 = swift_allocObject(v14, 152, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100624A40;
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  v16 = sub_100038CF8();
  *(_QWORD *)(v15 + 32) = 0xD000000000000024;
  *(_QWORD *)(v15 + 40) = 0x800000010069C3E0;
  *(_QWORD *)(v15 + 96) = &type metadata for String;
  *(_QWORD *)(v15 + 104) = v16;
  *(_QWORD *)(v15 + 64) = v16;
  *(_QWORD *)(v15 + 72) = a2;
  *(_QWORD *)(v15 + 80) = a3;
  swift_getErrorValue(a1, v28, v27);
  v17 = v27[1];
  v18 = v27[2];
  v19 = v13;
  swift_bridgeObjectRetain(a3);
  v20 = Error.localizedDescription.getter(v17, v18);
  *(_QWORD *)(v15 + 136) = &type metadata for String;
  *(_QWORD *)(v15 + 144) = v16;
  *(_QWORD *)(v15 + 112) = v20;
  *(_QWORD *)(v15 + 120) = v21;
  os_log(_:dso:log:_:_:)(v12, &_mh_execute_header, v19, "[seymour] %@ failed to fetch trainer for identifier: %@ error: %@", 65, 2, v15, v25);

  swift_bridgeObjectRelease(v15);
  v23 = type metadata accessor for Trainer(0, v22);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v11, 1, 1, v23);
  v26(v11);
  return sub_10001BE90((uint64_t)v11, &qword_1008239C0);
}

uint64_t sub_100394388(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1003943A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, __n128), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  void (*v19)(_BYTE *, unint64_t, uint64_t);
  uint64_t Strong;
  void *v21;
  objc_class *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  NSString v36;
  id v37;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  __n128 v48;
  _BYTE v49[4];
  unsigned int v50;
  uint64_t v51;
  void (*v52)(_QWORD);
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[24];
  __int128 v56[2];
  _QWORD v57[5];

  v53 = a3;
  v54 = a4;
  v10 = type metadata accessor for CatalogLockup(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = &v49[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __chkstk_darwin(v12);
  v17 = &v49[-v16];
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_7;
  v52 = (void (*)(_QWORD))a5;
  v18 = a2 + 16;
  v19 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v11 + 16);
  v19(&v49[-v16], a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), v10);
  swift_beginAccess(v18, v55, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v18);
  if (!Strong)
  {
    v15 = (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v17, v10);
    a5 = (uint64_t (*)(_QWORD, __n128))v52;
LABEL_7:
    v39 = static os_log_type_t.error.getter(v15);
    v40 = (void *)HKLogActivity;
    v41 = sub_100047110((uint64_t *)&unk_100827460);
    v42 = swift_allocObject(v41, 152, 7);
    *(_OWORD *)(v42 + 16) = xmmword_100624A40;
    *(_QWORD *)(v42 + 56) = &type metadata for String;
    v43 = sub_100038CF8();
    *(_QWORD *)(v42 + 64) = v43;
    *(_QWORD *)(v42 + 32) = 0xD00000000000002ALL;
    *(_QWORD *)(v42 + 40) = 0x80000001006892D0;
    *(_QWORD *)(v42 + 96) = sub_100047110(&qword_100830B08);
    v44 = sub_100028384(&qword_100830B10, &qword_100830B08, (uint64_t)&protocol conformance descriptor for [A]);
    *(_QWORD *)(v42 + 72) = a1;
    *(_QWORD *)(v42 + 136) = &type metadata for String;
    *(_QWORD *)(v42 + 144) = v43;
    v45 = v53;
    *(_QWORD *)(v42 + 104) = v44;
    *(_QWORD *)(v42 + 112) = v45;
    v46 = v54;
    *(_QWORD *)(v42 + 120) = v54;
    swift_bridgeObjectRetain(v46);
    swift_bridgeObjectRetain(a1);
    v47 = v40;
    os_log(_:dso:log:_:_:)(v39, &_mh_execute_header, v47, "[seymour] %@ fetched catalog lockups %@ but did not find identifier: %@", 71, 2, v42);

    v48 = swift_bridgeObjectRelease(v42);
    return a5(0, v48);
  }
  v21 = (void *)Strong;
  v51 = a6;
  sub_1000252E0(Strong + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_mediaTagStringBuilder, (uint64_t)v56);

  sub_10002411C(v56, (uint64_t)v57);
  v19(v14, (unint64_t)v17, v10);
  sub_1000252E0((uint64_t)v57, (uint64_t)v56);
  v22 = (objc_class *)type metadata accessor for CatalogItemViewModel(0);
  v23 = objc_allocWithZone(v22);
  v24 = sub_1003268FC((uint64_t)v14, v56);
  v50 = static os_log_type_t.default.getter(v24);
  v25 = (void *)HKLogActivity;
  v26 = sub_100047110((uint64_t *)&unk_100827460);
  v27 = swift_allocObject(v26, 152, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100624A40;
  *(_QWORD *)(v27 + 56) = &type metadata for String;
  v28 = sub_100038CF8();
  *(_QWORD *)(v27 + 32) = 0xD00000000000002ALL;
  *(_QWORD *)(v27 + 40) = 0x80000001006892D0;
  *(_QWORD *)(v27 + 96) = &type metadata for String;
  *(_QWORD *)(v27 + 104) = v28;
  v30 = v53;
  v29 = v54;
  *(_QWORD *)(v27 + 64) = v28;
  *(_QWORD *)(v27 + 72) = v30;
  *(_QWORD *)(v27 + 80) = v29;
  *(_QWORD *)(v27 + 136) = v22;
  *(_QWORD *)(v27 + 144) = sub_1000083D8(&qword_100820A60, type metadata accessor for CatalogItemViewModel, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v27 + 112) = v24;
  v31 = v25;
  swift_bridgeObjectRetain(v29);
  v32 = v24;
  os_log(_:dso:log:_:_:)(v50, &_mh_execute_header, v31, "[seymour] %@ fetched catalog item view model for catalog item identifier: %@, catalog item view model: %@", 105, 2, v27);

  swift_bridgeObjectRelease(v27);
  swift_beginAccess(v18, v56, 0, 0);
  v33 = swift_unknownObjectWeakLoadStrong(v18);
  if (v33)
  {
    v34 = (void *)v33;
    v35 = objc_retain(*(id *)(v33
                            + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogItemViewModelCache));

    v36 = String._bridgeToObjectiveC()();
    objc_msgSend(v35, "setObject:forKey:", v32, v36);

  }
  v37 = v32;
  v52(v32);

  _s10FitnessApp24HistoryViewActionContextVwxx_0(v57);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v17, v10);
}

uint64_t sub_1003947B8(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD, __n128))
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  _QWORD v21[3];
  _BYTE v22[8];

  v5 = static os_log_type_t.error.getter(a1);
  v6 = (void *)HKLogActivity;
  v7 = sub_100047110((uint64_t *)&unk_100827460);
  v8 = swift_allocObject(v7, 152, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100624A40;
  *(_QWORD *)(v8 + 56) = &type metadata for String;
  v9 = sub_100038CF8();
  *(_QWORD *)(v8 + 64) = v9;
  *(_QWORD *)(v8 + 32) = 0xD00000000000002ALL;
  *(_QWORD *)(v8 + 40) = 0x80000001006892D0;
  v10 = a2[3];
  v11 = a2[4];
  sub_100016804(a2, v10);
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
  v13 = v6;
  v14 = v12(v10, v11);
  *(_QWORD *)(v8 + 96) = &type metadata for String;
  *(_QWORD *)(v8 + 104) = v9;
  *(_QWORD *)(v8 + 72) = v14;
  *(_QWORD *)(v8 + 80) = v15;
  swift_getErrorValue(a1, v22, v21);
  v16 = Error.localizedDescription.getter(v21[1], v21[2]);
  *(_QWORD *)(v8 + 136) = &type metadata for String;
  *(_QWORD *)(v8 + 144) = v9;
  *(_QWORD *)(v8 + 112) = v16;
  *(_QWORD *)(v8 + 120) = v17;
  os_log(_:dso:log:_:_:)(v5, &_mh_execute_header, v13, "[seymour] %@ failed to fetch catalog item view model for catalog item: %@ error: %@", 83, 2, v8);

  v18 = swift_bridgeObjectRelease(v8);
  return a3(0, v18);
}

uint64_t sub_10039490C(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

void sub_100394930(uint64_t a1, void (*a2)(char *), void (*a3)(char *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t CatalogWorkoutsRequest;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  NSString v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void (**v54)(char *);
  void (*v55)(char *);
  void (*v56)(char *);
  _QWORD *v57;
  uint64_t v58;
  void (**v59)(char *);
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  __n128 v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  void (*v92)(char *, uint64_t);
  void (*v93)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *);
  void (*v115)(char *);
  uint64_t v116;
  char *v117;

  v4 = v3;
  v114 = a2;
  v115 = a3;
  v6 = sub_100047110((uint64_t *)&unk_100839710);
  v103 = *(_QWORD *)(v6 - 8);
  v104 = v6;
  v7 = __chkstk_darwin(v6);
  v100 = v8;
  v101 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v102 = (char *)&v97 - v9;
  v112 = sub_100047110((uint64_t *)&unk_100836170);
  v108 = *(_QWORD *)(v112 - 8);
  v10 = __chkstk_darwin(v112);
  v106 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v107 = (char *)&v97 - v13;
  v105 = v14;
  __chkstk_darwin(v12);
  v111 = (char *)&v97 - v15;
  CatalogWorkoutsRequest = type metadata accessor for FetchCatalogWorkoutsRequest(0);
  v109 = *(_QWORD *)(CatalogWorkoutsRequest - 8);
  v110 = CatalogWorkoutsRequest;
  __chkstk_darwin(CatalogWorkoutsRequest);
  v117 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FitnessPlusStackViewModel(0);
  v99 = *(_QWORD *)(v18 - 8);
  v19 = __chkstk_darwin(v18);
  v116 = v20;
  v21 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = static os_log_type_t.default.getter(v19);
  v23 = (void *)HKLogActivity;
  v97 = sub_100047110((uint64_t *)&unk_100827460);
  v24 = swift_allocObject(v97, 112, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v24 + 56) = &type metadata for String;
  v25 = sub_100038CF8();
  *(_QWORD *)(v24 + 64) = v25;
  *(_QWORD *)(v24 + 32) = 0xD000000000000024;
  *(_QWORD *)(v24 + 40) = 0x800000010069C0E0;
  v26 = v23;
  v27 = sub_1002F5094();
  *(_QWORD *)(v24 + 96) = &type metadata for String;
  *(_QWORD *)(v24 + 104) = v25;
  *(_QWORD *)(v24 + 72) = v27;
  *(_QWORD *)(v24 + 80) = v28;
  os_log(_:dso:log:_:_:)(v22, &_mh_execute_header, v26, "[seymour] %@ fetching stack view model for stack: %@", 52, 2, v24);

  swift_bridgeObjectRelease(v24);
  v29 = (uint64_t *)(a1 + *(int *)(v18 + 28));
  v30 = *v29;
  v31 = v29[1];
  v32 = v4;
  v33 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_stackViewModelCache);
  swift_bridgeObjectRetain(v31);
  v113 = v30;
  v34 = String._bridgeToObjectiveC()();
  v35 = (char *)objc_msgSend(v33, "objectForKey:", v34);

  if (v35)
  {
    v36 = *(_QWORD *)(*(_QWORD *)&v35[OBJC_IVAR___CHCatalogItemViewModel_workouts] + 16);
    v37 = sub_1002F58DC();
    v38 = v37[2];
    swift_bridgeObjectRelease(v37);
    if (v36 == v38)
    {
      swift_bridgeObjectRelease(v31);
      v40 = static os_log_type_t.default.getter(v39);
      v41 = (void *)HKLogActivity;
      v42 = swift_allocObject(v97, 152, 7);
      *(_OWORD *)(v42 + 16) = xmmword_100624A40;
      *(_QWORD *)(v42 + 56) = &type metadata for String;
      *(_QWORD *)(v42 + 64) = v25;
      *(_QWORD *)(v42 + 32) = 0xD000000000000024;
      *(_QWORD *)(v42 + 40) = 0x800000010069C0E0;
      *(_QWORD *)(v42 + 96) = &type metadata for String;
      *(_QWORD *)(v42 + 104) = v25;
      *(_QWORD *)(v42 + 72) = v113;
      *(_QWORD *)(v42 + 80) = v31;
      *(_QWORD *)(v42 + 136) = type metadata accessor for CatalogItemViewModel(0);
      *(_QWORD *)(v42 + 144) = sub_1000083D8(&qword_100820A60, type metadata accessor for CatalogItemViewModel, (uint64_t)&protocol conformance descriptor for NSObject);
      *(_QWORD *)(v42 + 112) = v35;
      swift_bridgeObjectRetain(v31);
      v43 = v41;
      v44 = v35;
      os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v43, "[seymour] %@ returning cached stack view model for stack queue identifier: %@, stack view model: %@", 99, 2, v42);

      swift_bridgeObjectRelease(v42);
      v117 = v44;
      v114(v35);

      return;
    }

  }
  v45 = swift_allocObject(&unk_100799F18, 24, 7);
  v98 = v32;
  swift_unknownObjectWeakInit(v45 + 16, v32);
  sub_10004F8C8(a1, (uint64_t)v21, type metadata accessor for FitnessPlusStackViewModel);
  v46 = *(unsigned __int8 *)(v99 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = v46 | 7;
  v49 = (v116 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  v50 = (v49 + 15) & 0xFFFFFFFFFFFFFFF8;
  v51 = a1;
  v52 = (v50 + 23) & 0xFFFFFFFFFFFFFFF8;
  v53 = swift_allocObject(&unk_10079B480, v52 + 16, v46 | 7);
  sub_100047C88((uint64_t)v21, v53 + v47, type metadata accessor for FitnessPlusStackViewModel);
  v116 = v53;
  *(_QWORD *)(v53 + v49) = v45;
  v54 = (void (**)(char *))(v53 + v50);
  v56 = v114;
  v55 = v115;
  *v54 = v114;
  v54[1] = v55;
  v57 = (_QWORD *)(v53 + v52);
  *v57 = v113;
  v57[1] = v31;
  sub_10004F8C8(v51, (uint64_t)v21, type metadata accessor for FitnessPlusStackViewModel);
  v58 = swift_allocObject(&unk_10079B4A8, v49 + 16, v48);
  sub_100047C88((uint64_t)v21, v58 + v47, type metadata accessor for FitnessPlusStackViewModel);
  v59 = (void (**)(char *))(v58 + v49);
  v60 = v58;
  *v59 = v56;
  v59[1] = v55;
  swift_retain_n(v55, 2);
  v61 = sub_1002F58DC();
  v62 = sub_10004CEFC((uint64_t)v61);
  v63 = swift_bridgeObjectRelease(v61);
  v64 = v117;
  FetchCatalogWorkoutsRequest.init(identifiers:)(v62, v63);
  v65 = *(_QWORD *)(v98 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24);
  v66 = *(_QWORD *)(v98 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 32);
  sub_100016804((_QWORD *)(v98 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient), v65);
  v67 = v102;
  dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogWorkouts(_:)(v64, v65, v66);
  v68 = swift_allocObject(&unk_10079B4D0, 32, 7);
  v69 = v116;
  *(_QWORD *)(v68 + 16) = sub_10039F480;
  *(_QWORD *)(v68 + 24) = v69;
  v70 = swift_allocObject(&unk_10079B4F8, 32, 7);
  *(_QWORD *)(v70 + 16) = sub_1003A43E4;
  *(_QWORD *)(v70 + 24) = v68;
  v72 = v103;
  v71 = v104;
  v73 = v101;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v101, v67, v104);
  v74 = *(unsigned __int8 *)(v72 + 80);
  v75 = (v74 + 16) & ~v74;
  v76 = (v100 + v75 + 7) & 0xFFFFFFFFFFFFFFF8;
  v77 = swift_allocObject(&unk_10079B520, v76 + 16, v74 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 32))(v77 + v75, v73, v71);
  v78 = (_QWORD *)(v77 + v76);
  *v78 = sub_1003A4408;
  v78[1] = v70;
  swift_retain(v69);
  v79 = v107;
  Promise.init(asyncOperation:)(sub_10039F4E4, v77, (char *)&type metadata for () + 8);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v67, v71);
  v80 = swift_allocObject(&unk_10079B548, 32, 7);
  *(_QWORD *)(v80 + 16) = sub_10039F488;
  *(_QWORD *)(v80 + 24) = v60;
  v81 = v60;
  v82 = swift_allocObject(&unk_10079B570, 32, 7);
  *(_QWORD *)(v82 + 16) = sub_1003A43D0;
  *(_QWORD *)(v82 + 24) = v80;
  v83 = v108;
  v84 = v106;
  v85 = v112;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v106, v79, v112);
  v86 = *(unsigned __int8 *)(v83 + 80);
  v87 = (v86 + 16) & ~v86;
  v88 = (v105 + v87 + 7) & 0xFFFFFFFFFFFFFFF8;
  v89 = swift_allocObject(&unk_10079B598, v88 + 16, v86 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 32))(v89 + v87, v84, v85);
  v90 = (_QWORD *)(v89 + v88);
  *v90 = sub_1001104C4;
  v90[1] = v82;
  swift_retain(v81);
  v91 = v111;
  Promise.init(asyncOperation:)(sub_10039F50C, v89, (char *)&type metadata for () + 8);
  v92 = *(void (**)(char *, uint64_t))(v83 + 8);
  v92(v79, v85);
  v93 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v85);
  v95 = v94;
  v96 = swift_allocObject(&unk_10079B5C0, 32, 7);
  *(_QWORD *)(v96 + 16) = 0;
  *(_QWORD *)(v96 + 24) = 0;
  v93(sub_10039F514, v96);
  swift_release(v116);
  swift_release(v81);
  swift_release(v95);
  swift_release(v96);
  v92(v91, v85);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v117, v110);
}

uint64_t sub_100395144(CHWorkoutDetailHeartRateTableViewCell *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  const char *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  const char *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v73;
  unint64_t v74;
  uint64_t v75;
  _BOOL8 v76;
  uint64_t v77;
  char v78;
  unint64_t v79;
  char v80;
  _QWORD *v81;
  uint64_t *v82;
  unint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;
  SEL v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  const char *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  char *v103;
  uint64_t v104;
  SEL v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t Strong;
  const char *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  CHWorkoutDetailHeartRateTableViewCell *v131;
  SEL v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  CHWorkoutDetailHeartRateTableViewCell *v143;
  id v144;
  SEL v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  uint64_t result;
  uint64_t v153;
  uint64_t v154;
  const char *v155;
  void *v156;
  void *v157;
  void *v158;
  void *v159;
  void *v160;
  void *v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t (**v191)(uint64_t);
  char *v192;
  void (*v193)(char *, uint64_t);
  uint64_t v194;
  void (*v195)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  __n128 v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t (*v221)(_QWORD);
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  CHWorkoutDetailHeartRateTableViewCell *v229;
  uint64_t v230;
  void (*v231)(char *, char *, uint64_t);
  uint64_t v232;
  char *v233;
  char *v234;
  __int128 v235;
  char v236[8];
  char v237[8];
  char v238[8];
  __int128 v239;
  uint64_t v240;
  uint64_t v241;
  _QWORD *v242;

  v212 = a7;
  v206 = a6;
  v220 = a3;
  v228 = a2;
  v10 = type metadata accessor for FitnessPlusStackViewModel(0);
  v204 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v205 = v11;
  v217 = (uint64_t)&v201 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = sub_100047110(&qword_100830AE0);
  v209 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v208 = (char *)&v201 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = v12;
  __chkstk_darwin(v13);
  v219 = (char *)&v201 - v14;
  v214 = sub_100047110((uint64_t *)&unk_100836170);
  v213 = *(_QWORD *)(v214 - 8);
  __chkstk_darwin(v214);
  v211 = (char *)&v201 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_10082EAE0);
  v202 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v216 = (uint64_t)&v201 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = v17;
  __chkstk_darwin(v18);
  v218 = (char *)&v201 - v19;
  v20 = sub_100047110((uint64_t *)&unk_1008283A0);
  __chkstk_darwin(v20);
  v226 = (char *)&v201 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Artwork(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v215 = (char *)&v201 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = v24;
  __chkstk_darwin(v25);
  v222 = (char *)&v201 - v26;
  v27 = type metadata accessor for CatalogWorkout(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v201 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v233 = (char *)&v201 - v32;
  __chkstk_darwin(v33);
  v227 = (char *)&v201 - v34;
  v35 = sub_100436898((uint64_t)_swiftEmptyArrayStorage);
  v36 = *(char **)a1->cellPadding;
  v232 = v28;
  v229 = a1;
  if (!v36)
  {
LABEL_15:
    v87 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002F58DC();
    swift_bridgeObjectRetain(v35);
    v88 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10039C194((uint64_t)v87, v35);
    swift_bridgeObjectRelease(v87, v89, v90, v91, v92, v93, v94, v95);
    swift_bridgeObjectRelease_n(v35, 2);
    if (*(_QWORD *)v88->cellPadding)
    {
      v103 = v227;
      (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v227, (unint64_t)v88+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80)), v27);
      v104 = (uint64_t)v226;
      ArtworkFlavorMatching.artworkMatching(variant:)(4, v27, &protocol witness table for CatalogWorkout);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v104, 1, v22) == 1)
      {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v103, v27);
        swift_bridgeObjectRelease(v88, v105, v106, v107, v108, v109, v110, v111);
        v112 = sub_10001BE90(v104, (uint64_t *)&unk_1008283A0);
      }
      else
      {
        v113 = v220 + 16;
        v114 = v104;
        v115 = v222;
        v234 = *(char **)(v23 + 32);
        ((void (*)(char *, uint64_t, uint64_t))v234)(v222, v114, v22);
        swift_beginAccess(v113, v238, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(v113);
        if (Strong)
        {
          v124 = (void *)Strong;
          v233 = (char *)v27;
          sub_1000252E0(Strong + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_mediaTagStringBuilder, (uint64_t)&v239);

          sub_10002411C(&v239, (uint64_t)&v242);
          swift_beginAccess(v113, v237, 0, 0);
          v125 = swift_unknownObjectWeakLoadStrong(v113);
          if (v125)
          {
            v126 = (void *)v125;
            v127 = v23;
            v128 = *(_QWORD *)(v125 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_playlists);
            swift_bridgeObjectRetain(v128);

            __chkstk_darwin(v129);
            *(&v201 - 2) = v228;
            v130 = v218;
            sub_100393410((uint64_t (*)(char *))sub_10039F580, v128, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist, v218);
            v131 = (CHWorkoutDetailHeartRateTableViewCell *)v128;
            v23 = v127;
            v115 = v222;
            swift_bridgeObjectRelease(v131, v132, v133, v134, v135, v136, v137, v138);
          }
          else
          {
            v153 = type metadata accessor for Playlist(0);
            v130 = v218;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 56))(v218, 1, 1, v153);
          }
          swift_beginAccess(v113, v236, 0, 0);
          v154 = swift_unknownObjectWeakLoadStrong(v113);
          if (v154)
          {
            v162 = (void *)v154;
            sub_1000252E0(v154 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_configurationClient, (uint64_t)&v239);

            v163 = v240;
            v164 = v241;
            sub_100016804(&v239, v240);
            dispatch thunk of ConfigurationClientProtocol.queryConfiguration()(v163, v164);
            sub_100021CC0((uint64_t)v130, v216, &qword_10082EAE0);
            (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v215, v115, v22);
            sub_1000252E0((uint64_t)&v242, (uint64_t)&v235);
            sub_10004F8C8(v228, v217, type metadata accessor for FitnessPlusStackViewModel);
            v165 = *(unsigned __int8 *)(v202 + 80);
            v166 = (v165 + 16) & ~v165;
            v223 = v23;
            v167 = (v203 + v166 + 7) & 0xFFFFFFFFFFFFFFF8;
            v168 = *(unsigned __int8 *)(v223 + 80);
            v221 = a4;
            v169 = (v168 + v167 + 8) & ~v168;
            v170 = (v201 + v169 + 7) & 0xFFFFFFFFFFFFFFF8;
            v171 = *(unsigned __int8 *)(v204 + 80);
            v172 = (v171 + v170 + 40) & ~v171;
            v224 = v22;
            v173 = (v205 + v172 + 7) & 0xFFFFFFFFFFFFFFF8;
            v174 = (v173 + 15) & 0xFFFFFFFFFFFFFFF8;
            v225 = a5;
            v175 = (v174 + 23) & 0xFFFFFFFFFFFFFFF8;
            v176 = swift_allocObject(&unk_10079A198, v175 + 16, v165 | v168 | v171 | 7);
            sub_10039F7C0(v216, v176 + v166);
            *(_QWORD *)(v176 + v167) = v88;
            ((void (*)(uint64_t, char *, uint64_t))v234)(v176 + v169, v215, v224);
            sub_10002411C(&v235, v176 + v170);
            sub_100047C88(v217, v176 + v172, type metadata accessor for FitnessPlusStackViewModel);
            v177 = v220;
            *(_QWORD *)(v176 + v173) = v220;
            v22 = v224;
            v178 = (_QWORD *)(v176 + v174);
            v179 = v212;
            *v178 = v206;
            v178[1] = v179;
            v180 = (_QWORD *)(v176 + v175);
            v181 = v225;
            *v180 = v221;
            v180[1] = v181;
            v182 = swift_allocObject(&unk_10079A1C0, 32, 7);
            *(_QWORD *)(v182 + 16) = sub_10039F808;
            *(_QWORD *)(v182 + 24) = v176;
            v183 = v209;
            v184 = v208;
            v185 = v210;
            (*(void (**)(char *, char *, uint64_t))(v209 + 16))(v208, v219, v210);
            v186 = *(unsigned __int8 *)(v183 + 80);
            v187 = (v186 + 16) & ~v186;
            v188 = (v207 + v187 + 7) & 0xFFFFFFFFFFFFFFF8;
            v189 = swift_allocObject(&unk_10079A1E8, v188 + 16, v186 | 7);
            v190 = v184;
            v130 = v218;
            (*(void (**)(uint64_t, char *, uint64_t))(v183 + 32))(v189 + v187, v190, v185);
            v191 = (uint64_t (**)(uint64_t))(v189 + v188);
            *v191 = sub_10039F920;
            v191[1] = (uint64_t (*)(uint64_t))v182;
            swift_retain(v177);
            swift_bridgeObjectRetain(v179);
            swift_retain(v225);
            v192 = v211;
            Promise.init(asyncOperation:)(sub_10039F95C, v189, (char *)&type metadata for () + 8);
            v193 = *(void (**)(char *, uint64_t))(v183 + 8);
            v115 = v222;
            v193(v219, v185);
            _s10FitnessApp24HistoryViewActionContextVwxx_0(&v239);
            v194 = v214;
            v195 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v214);
            v197 = v196;
            v198 = swift_allocObject(&unk_10079A210, 32, 7);
            *(_QWORD *)(v198 + 16) = 0;
            *(_QWORD *)(v198 + 24) = 0;
            v195(sub_10039F514, v198);
            swift_release(v197);
            v199 = swift_release(v198);
            v200 = v192;
            v23 = v223;
            (*(void (**)(char *, uint64_t, __n128))(v213 + 8))(v200, v194, v199);
          }
          else
          {
            swift_bridgeObjectRelease(v88, v155, v156, v157, v158, v159, v160, v161);
          }
          sub_10001BE90((uint64_t)v130, &qword_10082EAE0);
          _s10FitnessApp24HistoryViewActionContextVwxx_0(&v242);
          (*(void (**)(char *, uint64_t))(v23 + 8))(v115, v22);
          return (*(uint64_t (**)(char *, char *))(v232 + 8))(v227, v233);
        }
        swift_bridgeObjectRelease(v88, v117, v118, v119, v120, v121, v122, v123);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v115, v22);
        v112 = (*(uint64_t (**)(char *, uint64_t))(v232 + 8))(v227, v27);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v88, v96, v97, v98, v99, v100, v101, v102);
    }
    v139 = static os_log_type_t.error.getter(v112);
    v140 = (void *)HKLogActivity;
    v141 = sub_100047110((uint64_t *)&unk_100827460);
    v142 = swift_allocObject(v141, 112, 7);
    *(_OWORD *)(v142 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v142 + 56) = &type metadata for String;
    *(_QWORD *)(v142 + 64) = sub_100038CF8();
    *(_QWORD *)(v142 + 32) = 0xD000000000000024;
    *(_QWORD *)(v142 + 40) = 0x800000010069C0E0;
    *(_QWORD *)(v142 + 96) = sub_100047110(&qword_100830AE8);
    *(_QWORD *)(v142 + 104) = sub_100028384(&qword_100830AF0, &qword_100830AE8, (uint64_t)&protocol conformance descriptor for [A]);
    v143 = v229;
    *(_QWORD *)(v142 + 72) = v229;
    swift_bridgeObjectRetain(v143);
    v144 = v140;
    os_log(_:dso:log:_:_:)(v139, &_mh_execute_header, v144, "[seymour] %@ fetched catalog workouts %@ but did not find identifier", 68, 2, v142);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v142, v145, v146, v147, v148, v149, v150, v151);
    return a4(0);
  }
  v234 = v36;
  v223 = v23;
  v224 = v22;
  v221 = a4;
  v225 = a5;
  v37 = (char *)a1 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  v38 = *(_QWORD *)(v28 + 72);
  v231 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  v39 = swift_bridgeObjectRetain(a1);
  v40 = v233;
  v230 = v38;
  while (1)
  {
    v64 = v231;
    v65 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v231)(v40, v37, v27, v39);
    v66 = CatalogWorkout.identifier.getter(v65);
    v68 = v67;
    v69 = v30;
    v70 = v30;
    v71 = v27;
    v64(v70, v40, v27);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v35);
    v242 = (_QWORD *)v35;
    v74 = sub_100438F74(v66, (uint64_t)v68);
    v75 = *(_QWORD *)(v35 + 16);
    v76 = (v73 & 1) == 0;
    v77 = v75 + v76;
    if (__OFADD__(v75, v76))
      break;
    v78 = v73;
    if (*(_QWORD *)(v35 + 24) >= v77)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_100403774();
    }
    else
    {
      sub_1003FBB4C(v77, isUniquelyReferenced_nonNull_native);
      v79 = sub_100438F74(v66, (uint64_t)v68);
      if ((v78 & 1) != (v80 & 1))
        goto LABEL_31;
      v74 = v79;
    }
    v27 = v71;
    v81 = v242;
    v30 = v69;
    if ((v78 & 1) != 0)
    {
      v41 = v230;
      v42 = v242[7] + v74 * v230;
      v28 = v232;
      (*(void (**)(unint64_t, char *, uint64_t))(v232 + 40))(v42, v69, v27);
    }
    else
    {
      v242[(v74 >> 6) + 8] |= 1 << v74;
      v82 = (uint64_t *)(v81[6] + 16 * v74);
      *v82 = v66;
      v82[1] = (uint64_t)v68;
      v41 = v230;
      v83 = v81[7] + v74 * v230;
      v28 = v232;
      (*(void (**)(unint64_t, char *, uint64_t))(v232 + 32))(v83, v69, v27);
      v84 = v81[2];
      v85 = __OFADD__(v84, 1);
      v86 = v84 + 1;
      if (v85)
        goto LABEL_30;
      v81[2] = v86;
      swift_bridgeObjectRetain(v68);
    }
    v35 = (unint64_t)v242;
    swift_bridgeObjectRelease(v68, v43, v44, v45, v46, v47, v48, v49);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v50, v51, v52, v53, v54, v55, v56);
    v40 = v233;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v233, v27);
    v37 += v41;
    if (!--v234)
    {
      swift_bridgeObjectRelease(v229, v57, v58, v59, v60, v61, v62, v63);
      a5 = v225;
      a4 = v221;
      v22 = v224;
      v23 = v223;
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_100395E64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  const char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  char v15;

  v3 = Playlist.identifier.getter(a1);
  v5 = v4;
  v12 = a2 + *(int *)(type metadata accessor for FitnessPlusStackViewModel(0) + 24);
  v13 = *(CHWorkoutDetailHeartRateTableViewCell **)(v12 + 8);
  if (v13)
  {
    v7 = *(void **)v12;
    if (v3 == *(_QWORD *)v12 && v13 == v5)
      v15 = 1;
    else
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v7, v13, 0);
  }
  else
  {
    v15 = 0;
  }
  swift_bridgeObjectRelease(v5, v6, v7, v13, v8, v9, v10, v11);
  return v15 & 1;
}

void sub_100395EF8(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(id), uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  objc_class *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t Strong;
  void *v45;
  id v46;
  NSString v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(id);
  uint64_t v57;
  _QWORD v58[5];

  v49 = a8;
  v50 = a4;
  v54 = a6;
  v55 = a7;
  v51 = a5;
  v52 = a1;
  v53 = a3;
  v56 = a10;
  v57 = a11;
  v12 = type metadata accessor for Configuration(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Artwork(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_10082EAE0);
  __chkstk_darwin(v20);
  v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 += 16;
  sub_100021CC0(a2, (uint64_t)v22, &qword_10082EAE0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v50, v16);
  sub_1000252E0(v51, (uint64_t)v58);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v52, v12);
  v23 = (objc_class *)type metadata accessor for CatalogItemViewModel(0);
  objc_allocWithZone(v23);
  v24 = v53;
  swift_bridgeObjectRetain(v53);
  v25 = sub_100326B64((uint64_t)v22, v24, (uint64_t)v19, v58, (uint64_t)v15);
  v26 = static os_log_type_t.default.getter(v25);
  v27 = (void *)HKLogActivity;
  v28 = sub_100047110((uint64_t *)&unk_100827460);
  v29 = swift_allocObject(v28, 152, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100624A40;
  *(_QWORD *)(v29 + 56) = &type metadata for String;
  v30 = sub_100038CF8();
  *(_QWORD *)(v29 + 64) = v30;
  *(_QWORD *)(v29 + 32) = 0xD000000000000024;
  *(_QWORD *)(v29 + 40) = 0x800000010069C0E0;
  v31 = (uint64_t *)(v54 + *(int *)(type metadata accessor for FitnessPlusStackViewModel(0) + 28));
  v32 = *v31;
  v33 = v31[1];
  *(_QWORD *)(v29 + 96) = &type metadata for String;
  *(_QWORD *)(v29 + 104) = v30;
  *(_QWORD *)(v29 + 72) = v32;
  *(_QWORD *)(v29 + 80) = v33;
  *(_QWORD *)(v29 + 136) = v23;
  *(_QWORD *)(v29 + 144) = sub_1000083D8(&qword_100820A60, type metadata accessor for CatalogItemViewModel, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v29 + 112) = v25;
  v34 = v27;
  swift_bridgeObjectRetain(v33);
  v35 = v25;
  os_log(_:dso:log:_:_:)(v26, &_mh_execute_header, v34, "[seymour] %@ fetched stack view model for queue identifier: %@, stack view model: %@", 84, 2, v29, v49);

  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v29, v36, v37, v38, v39, v40, v41, v42);
  v43 = v55;
  swift_beginAccess(v55, v58, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v43);
  if (Strong)
  {
    v45 = (void *)Strong;
    v46 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_stackViewModelCache);

    v47 = String._bridgeToObjectiveC()();
    objc_msgSend(v46, "setObject:forKey:", v35, v47);

  }
  v48 = v35;
  v56(v35);

}

uint64_t sub_100396234(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  _QWORD v23[3];
  _BYTE v24[8];

  v5 = static os_log_type_t.error.getter(a1);
  v6 = (void *)HKLogActivity;
  v7 = sub_100047110((uint64_t *)&unk_100827460);
  v8 = swift_allocObject(v7, 152, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100624A40;
  *(_QWORD *)(v8 + 56) = &type metadata for String;
  v9 = sub_100038CF8();
  *(_QWORD *)(v8 + 64) = v9;
  *(_QWORD *)(v8 + 32) = 0xD000000000000024;
  *(_QWORD *)(v8 + 40) = 0x800000010069C0E0;
  v10 = v6;
  v11 = sub_1002F5094();
  *(_QWORD *)(v8 + 96) = &type metadata for String;
  *(_QWORD *)(v8 + 104) = v9;
  *(_QWORD *)(v8 + 72) = v11;
  *(_QWORD *)(v8 + 80) = v12;
  swift_getErrorValue(a1, v24, v23);
  v13 = Error.localizedDescription.getter(v23[1], v23[2]);
  *(_QWORD *)(v8 + 136) = &type metadata for String;
  *(_QWORD *)(v8 + 144) = v9;
  *(_QWORD *)(v8 + 112) = v13;
  *(_QWORD *)(v8 + 120) = v14;
  os_log(_:dso:log:_:_:)(v5, &_mh_execute_header, v10, "[seymour] %@ failed to fetch stack view model for stack: %@ error: %@", 69, 2, v8);

  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v8, v15, v16, v17, v18, v19, v20, v21);
  return a3(0);
}

uint64_t sub_10039636C(char *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t (**v38)(void **);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void (*v57)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;

  v11 = sub_100047110(&qword_100822168);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v64 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v63 = (char *)&v62 - v15;
  v16 = sub_100047110((uint64_t *)&unk_100836170);
  v68 = *(_QWORD *)(v16 - 8);
  v69 = v16;
  v67 = *(_QWORD *)(v68 + 64);
  v17 = __chkstk_darwin(v16);
  v66 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v65 = (char *)&v62 - v20;
  __chkstk_darwin(v19);
  v70 = (char *)&v62 - v21;
  v22 = swift_allocObject(&unk_10079B2A0, 32, 7);
  v71 = v22;
  *(_QWORD *)(v22 + 16) = a2;
  *(_QWORD *)(v22 + 24) = a3;
  v23 = (_QWORD *)swift_allocObject(&unk_10079B2C8, 40, 7);
  v23[2] = a1;
  v23[3] = a2;
  v23[4] = a3;
  v25 = *(_QWORD *)(v5 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_artworkImageLoader + 24);
  v24 = *(_QWORD *)(v5 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_artworkImageLoader + 32);
  sub_100016804((_QWORD *)(v5 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_artworkImageLoader), v25);
  v26 = &a1[OBJC_IVAR___CHCatalogItemViewModel_artwork];
  swift_retain_n(a3, 2);
  v27 = a1;
  v28 = v63;
  dispatch thunk of ArtworkImageLoading.fetchArtwork(_:size:)(v26, v25, v24, a4, a5);
  v29 = swift_allocObject(&unk_10079B2F0, 32, 7);
  v30 = v71;
  *(_QWORD *)(v29 + 16) = sub_10003A294;
  *(_QWORD *)(v29 + 24) = v30;
  v31 = swift_allocObject(&unk_10079B318, 32, 7);
  *(_QWORD *)(v31 + 16) = sub_1003A43E4;
  *(_QWORD *)(v31 + 24) = v29;
  v32 = v64;
  v33 = v28;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v64, v28, v11);
  v34 = *(unsigned __int8 *)(v12 + 80);
  v35 = (v34 + 16) & ~v34;
  v36 = (v13 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = swift_allocObject(&unk_10079B340, v36 + 16, v34 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v37 + v35, v32, v11);
  v38 = (uint64_t (**)(void **))(v37 + v36);
  *v38 = sub_1003A356C;
  v38[1] = (uint64_t (*)(void **))v31;
  swift_retain(v30);
  v39 = v65;
  Promise.init(asyncOperation:)(sub_1003A3580, v37, (char *)&type metadata for () + 8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v33, v11);
  v40 = swift_allocObject(&unk_10079B368, 32, 7);
  *(_QWORD *)(v40 + 16) = sub_1003A3560;
  *(_QWORD *)(v40 + 24) = v23;
  v41 = swift_allocObject(&unk_10079B390, 32, 7);
  *(_QWORD *)(v41 + 16) = sub_1003A43D0;
  *(_QWORD *)(v41 + 24) = v40;
  v42 = v68;
  v43 = v69;
  v44 = v66;
  v45 = v39;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v66, v39, v69);
  v46 = *(unsigned __int8 *)(v42 + 80);
  v47 = v42;
  v48 = (v46 + 16) & ~v46;
  v49 = (v67 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
  v50 = swift_allocObject(&unk_10079B3B8, v49 + 16, v46 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v50 + v48, v44, v43);
  v51 = (_QWORD *)(v50 + v49);
  *v51 = sub_1001104C4;
  v51[1] = v41;
  swift_retain(v23);
  v52 = v70;
  Promise.init(asyncOperation:)(sub_10039F50C, v50, (char *)&type metadata for () + 8);
  v53 = *(void (**)(char *, uint64_t))(v47 + 8);
  v53(v45, v43);
  v54 = v43;
  v55 = v43;
  v56 = v52;
  v57 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v54);
  v59 = v58;
  v60 = swift_allocObject(&unk_10079B3E0, 32, 7);
  *(_QWORD *)(v60 + 16) = 0;
  *(_QWORD *)(v60 + 24) = 0;
  v57(sub_10039F514, v60);
  swift_release(v71);
  swift_release(v23);
  swift_release(v59);
  swift_release(v60);
  return ((uint64_t (*)(char *, uint64_t))v53)(v56, v55);
}

uint64_t sub_1003967AC(uint64_t a1, void *a2, uint64_t (*a3)(_QWORD, __n128))
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _QWORD v19[3];
  _BYTE v20[8];

  v5 = static os_log_type_t.error.getter(a1);
  v6 = (void *)HKLogActivity;
  v7 = sub_100047110((uint64_t *)&unk_100827460);
  v8 = swift_allocObject(v7, 152, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100624A40;
  *(_QWORD *)(v8 + 56) = &type metadata for String;
  v9 = sub_100038CF8();
  *(_QWORD *)(v8 + 64) = v9;
  *(_QWORD *)(v8 + 32) = 0xD00000000000002ELL;
  *(_QWORD *)(v8 + 40) = 0x800000010069C780;
  *(_QWORD *)(v8 + 96) = type metadata accessor for CatalogItemViewModel(0);
  *(_QWORD *)(v8 + 104) = sub_1000083D8(&qword_100820A60, type metadata accessor for CatalogItemViewModel, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v8 + 72) = a2;
  swift_getErrorValue(a1, v20, v19);
  v10 = v19[1];
  v11 = v19[2];
  v12 = v6;
  v13 = a2;
  v14 = Error.localizedDescription.getter(v10, v11);
  *(_QWORD *)(v8 + 136) = &type metadata for String;
  *(_QWORD *)(v8 + 144) = v9;
  *(_QWORD *)(v8 + 112) = v14;
  *(_QWORD *)(v8 + 120) = v15;
  os_log(_:dso:log:_:_:)(v5, &_mh_execute_header, v12, "[seymour] %@ failed to fetch catalog artwork for catalog item view model: %@ error: %@", 86, 2, v8);

  v16 = swift_bridgeObjectRelease(v8);
  return a3(0, v16);
}

void sub_1003969B0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  objc_class *v16;
  const char *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  objc_class *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  os_log_type_t v34;
  void *v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  _QWORD v60[3];
  char v61[8];
  uint64_t v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  uint64_t v64;

  if (!a2)
    goto LABEL_15;
  v7 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 >= 0)
      v31 = a2 & 0xFFFFFFFFFFFFFF8;
    else
      v31 = a2;
    swift_bridgeObjectRetain(a2);
    if (_CocoaArrayWrapper.endIndex.getter(v31))
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a2, v9, v10, v11, v12, v13, v14, v15);
    goto LABEL_15;
  }
  v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  if (!v8)
    goto LABEL_14;
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v16 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
  }
  else
  {
    if (!*(_QWORD *)(v7 + 16))
    {
      __break(1u);
      return;
    }
    v16 = (objc_class *)*(id *)(a2 + 32);
  }
  v24 = v16;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a2, v17, v18, v19, v20, v21, v22, v23);
  v25 = objc_opt_self(HKQuantitySample);
  v26 = swift_dynamicCastObjCClass(v24, v25);
  if (v26)
  {
    v27 = (void *)v26;
    v59 = objc_msgSend((id)objc_opt_self(HKUnit), "gramUnitWithMetricPrefix:", 9);
    v28 = objc_msgSend(v27, "quantity");
    objc_msgSend(v28, "doubleValueForUnit:", v59);
    v30 = v29;

    a4(v30, 0);
    return;
  }

LABEL_15:
  v32 = sub_1003A1E60();
  v34 = static os_log_type_t.error.getter(v33);
  v35 = (void *)HKLogActivity;
  if (os_log_type_enabled(HKLogActivity, v34))
  {
    swift_errorRetain(a3);
    swift_errorRetain(a3);
    v36 = v35;
    v37 = swift_slowAlloc(32, -1);
    v38 = swift_slowAlloc(64, -1);
    v64 = v38;
    *(_DWORD *)v37 = 136315650;
    v62 = sub_10003E8EC(0xD00000000000002CLL, 0x800000010069C820, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v37 + 4);
    *(_WORD *)(v37 + 12) = 2080;
    if (a3)
    {
      swift_getErrorValue(a3, v61, v60);
      v39 = Error.localizedDescription.getter(v60[1], v60[2]);
      v41 = v40;
    }
    else
    {
      v39 = 0;
      v41 = 0;
    }
    v62 = v39;
    v63 = v41;
    v42 = sub_100047110(&qword_10082B520);
    v43 = Optional.description.getter(v42);
    v45 = (CHWorkoutDetailHeartRateTableViewCell *)v44;
    swift_bridgeObjectRelease(v41, v44, v46, v47, v48, v49, v50, v51);
    v62 = sub_10003E8EC(v43, (unint64_t)v45, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v37 + 14);
    swift_bridgeObjectRelease(v45, v52, v53, v54, v55, v56, v57, v58);
    swift_errorRelease(a3);
    swift_errorRelease(a3);
    *(_WORD *)(v37 + 22) = 2048;
    v62 = *(_QWORD *)&v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v37 + 24);
    _os_log_impl((void *)&_mh_execute_header, v36, v34, "[seymour] %s failed to fetch weight with error %s. Defaulting to %f", (uint8_t *)v37, 0x20u);
    swift_arrayDestroy(v38, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v37, -1, -1);

  }
  a4(*(_QWORD *)&v32, 0);
}

double sub_100396D44(uint64_t a1, char a2, void (*a3)(_QWORD, __n128), uint64_t a4, void *a5, _QWORD *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  id v27;
  void *v28;
  void *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  unint64_t v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t Strong;
  void *v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t (**v85)(uint64_t);
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  void (*v99)(uint64_t, uint64_t);
  void (*v100)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  double result;
  SEL v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  void (*v113)(_QWORD);
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  id v119;
  SEL v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  SEL v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  _QWORD *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  _QWORD v151[4];

  v147 = a6;
  v11 = sub_100047110(&qword_100830B78);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v136 - v15;
  v17 = sub_100047110((uint64_t *)&unk_100836170);
  __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  v26 = __chkstk_darwin(v19);
  if ((a2 & 1) != 0)
  {
    a3(0, v26);
    return result;
  }
  v137 = v21;
  v138 = (char *)&v136 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = v16;
  v140 = v12;
  v141 = v25;
  v142 = v24;
  v145 = v20;
  v146 = a4;
  v143 = v23;
  v144 = (char *)&v136 - v22;
  v27 = objc_msgSend(a5, "metadata", v26.n128_f64[0]);
  v28 = a5;
  if (!v27)
  {
    v148 = 0u;
    v149 = 0u;
    goto LABEL_12;
  }
  v29 = v27;
  v30 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v27, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v31 = static HealthDataConstants.workoutSessionIdentifierProperty.getter();
  v39 = (CHWorkoutDetailHeartRateTableViewCell *)v32;
  if (!*(_QWORD *)v30->cellPadding || (v40 = sub_100438F74(v31, v32), (v32 & 1) == 0))
  {
    v148 = 0u;
    v149 = 0u;
    swift_bridgeObjectRelease(v39, (SEL)v32, v33, v34, v35, v36, v37, v38);
    swift_bridgeObjectRelease(v30, v106, v107, v108, v109, v110, v111, v112);
    goto LABEL_12;
  }
  sub_10003E9BC(*(_QWORD *)v30[1].cellInset + 32 * v40, (uint64_t)&v148);
  swift_bridgeObjectRelease(v39, v41, v42, v43, v44, v45, v46, v47);
  swift_bridgeObjectRelease(v30, v48, v49, v50, v51, v52, v53, v54);
  if (!*((_QWORD *)&v149 + 1))
  {
LABEL_12:
    v55 = sub_10001BE90((uint64_t)&v148, (uint64_t *)&unk_100828420);
    goto LABEL_13;
  }
  v55 = swift_dynamicCast(v151, &v148, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if ((v55 & 1) == 0)
  {
LABEL_13:
    v113 = (void (*)(_QWORD))a3;
    v114 = static os_log_type_t.error.getter(v55);
    v115 = (void *)HKLogActivity;
    v116 = sub_100047110((uint64_t *)&unk_100827460);
    v117 = swift_allocObject(v116, 112, 7);
    *(_OWORD *)(v117 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v117 + 56) = &type metadata for String;
    *(_QWORD *)(v117 + 64) = sub_100038CF8();
    *(_QWORD *)(v117 + 32) = 0xD00000000000002ELL;
    *(_QWORD *)(v117 + 40) = 0x800000010069C8A0;
    *(_QWORD *)(v117 + 96) = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
    *(_QWORD *)(v117 + 104) = sub_10018A478();
    *(_QWORD *)(v117 + 72) = a5;
    v118 = a5;
    v119 = v115;
    os_log(_:dso:log:_:_:)(v114, &_mh_execute_header, v119, "[seymour] %@ failed to load workout session identifier for workout: %@", 70, 2, v117);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v117, v120, v121, v122, v123, v124, v125, v126);
    v113(0);
    return result;
  }
  v56 = v147 + 2;
  v58 = v151[0];
  v57 = (CHWorkoutDetailHeartRateTableViewCell *)v151[1];
  v59 = (_QWORD *)swift_allocObject(&unk_10079B7F0, 48, 7);
  v59[2] = v28;
  v59[3] = a3;
  v60 = v146;
  v59[4] = v146;
  v59[5] = a1;
  v147 = v59;
  v61 = (_QWORD *)swift_allocObject(&unk_10079B818, 40, 7);
  v61[2] = v28;
  v61[3] = a3;
  v136 = v61;
  v61[4] = v60;
  swift_beginAccess(v56, v151, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v56);
  if (Strong)
  {
    v63 = (void *)Strong;
    sub_1000252E0(Strong + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_archivedSessionClient, (uint64_t)&v148);
    v64 = v28;
    swift_retain_n(v60, 2);
    v65 = v64;

    v66 = *((_QWORD *)&v149 + 1);
    v67 = v150;
    sub_100016804(&v148, *((uint64_t *)&v149 + 1));
    v68 = v139;
    dispatch thunk of ArchivedSessionClientProtocol.queryArchivedSession(sessionIdentifier:)(v58, v57, v66, v67);
    swift_bridgeObjectRelease(v57, v69, v70, v71, v72, v73, v74, v75);
    v76 = swift_allocObject(&unk_10079B840, 32, 7);
    v77 = v147;
    *(_QWORD *)(v76 + 16) = sub_1003A39C4;
    *(_QWORD *)(v76 + 24) = v77;
    v78 = swift_allocObject(&unk_10079B868, 32, 7);
    *(_QWORD *)(v78 + 16) = sub_1003A43D0;
    *(_QWORD *)(v78 + 24) = v76;
    v79 = v140;
    v80 = v138;
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v138, v68, v11);
    v81 = *(unsigned __int8 *)(v79 + 80);
    v82 = (v81 + 16) & ~v81;
    v83 = (v13 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
    v84 = swift_allocObject(&unk_10079B890, v83 + 16, v81 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v84 + v82, v80, v11);
    v85 = (uint64_t (**)(uint64_t))(v84 + v83);
    *v85 = sub_1003A3A54;
    v85[1] = (uint64_t (*)(uint64_t))v78;
    swift_retain(v77);
    v86 = v142;
    Promise.init(asyncOperation:)(sub_1003A3A90, v84, (char *)&type metadata for () + 8);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v68, v11);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v148);
    v87 = swift_allocObject(&unk_10079B8B8, 32, 7);
    v88 = v136;
    *(_QWORD *)(v87 + 16) = sub_1003A3A14;
    *(_QWORD *)(v87 + 24) = v88;
    v89 = swift_allocObject(&unk_10079B8E0, 32, 7);
    *(_QWORD *)(v89 + 16) = sub_1003A43D0;
    *(_QWORD *)(v89 + 24) = v87;
    v90 = v143;
    v91 = v141;
    v92 = v145;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v143 + 16))(v141, v86, v145);
    v93 = *(unsigned __int8 *)(v90 + 80);
    v94 = (v93 + 16) & ~v93;
    v95 = (v137 + v94 + 7) & 0xFFFFFFFFFFFFFFF8;
    v96 = swift_allocObject(&unk_10079B908, v95 + 16, v93 | 7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 32))(v96 + v94, v91, v92);
    v97 = (_QWORD *)(v96 + v95);
    *v97 = sub_1001104C4;
    v97[1] = v89;
    swift_retain(v88);
    v98 = v144;
    Promise.init(asyncOperation:)(sub_10039F50C, v96, (char *)&type metadata for () + 8);
    v99 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
    v99(v86, v92);
    v100 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v92);
    v102 = v101;
    v103 = swift_allocObject(&unk_10079B930, 32, 7);
    *(_QWORD *)(v103 + 16) = 0;
    *(_QWORD *)(v103 + 24) = 0;
    v100(sub_10039F514, v103);
    swift_release(v147);
    swift_release(v88);
    swift_release(v102);
    v104 = swift_release(v103);
    ((void (*)(char *, uint64_t, __n128))v99)(v98, v92, v104);
  }
  else
  {
    v127 = v28;
    swift_retain_n(v60, 2);
    v128 = v127;
    swift_bridgeObjectRelease(v57, v129, v130, v131, v132, v133, v134, v135);
    swift_release(v136);
    *(_QWORD *)&result = swift_release(v147).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003973D4(double a1, uint64_t a2, void *a3, uint64_t (*a4)(id), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v41;
  double v42;
  void (*v43)(char *, char *, uint64_t);
  objc_class *v44;
  char *v45;
  id v46;
  void (*v47)(char *, uint64_t);
  id v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t (*v52)(id);
  objc_super v53;

  v51 = a5;
  v52 = a4;
  v50 = a3;
  v6 = type metadata accessor for UserBodyMassMetric(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_1008240F0);
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ScoreSummary(0, v13);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v49 - v19;
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v49 - v23;
  ArchivedSession.scoreSummary.getter(v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    v25 = sub_10001BE90((uint64_t)v12, &qword_1008240F0);
    v26 = static os_log_type_t.default.getter(v25);
    v27 = (void *)HKLogActivity;
    v28 = sub_100047110((uint64_t *)&unk_100827460);
    v29 = swift_allocObject(v28, 112, 7);
    *(_OWORD *)(v29 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v29 + 56) = &type metadata for String;
    *(_QWORD *)(v29 + 64) = sub_100038CF8();
    *(_QWORD *)(v29 + 32) = 0xD00000000000002ELL;
    *(_QWORD *)(v29 + 40) = 0x800000010069C8A0;
    *(_QWORD *)(v29 + 96) = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
    *(_QWORD *)(v29 + 104) = sub_10018A478();
    v30 = v50;
    *(_QWORD *)(v29 + 72) = v50;
    v31 = v27;
    v32 = v30;
    os_log(_:dso:log:_:_:)(v26, &_mh_execute_header, v31, "[seymour] %@ didn't find final score summary for workout: %@", 60, 2, v29);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v29, v33, v34, v35, v36, v37, v38, v39);
    return v52(0);
  }
  else
  {
    v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v24, v12, v14);
    v42 = static Double.currentMachTimestamp()(v41);
    UserBodyMassMetric.init(massInKg:machTimestamp:)(a1, v42);
    ScoreSummary.scale(by:)(v9);
    v50 = (void *)v6;
    v43 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v43(v17, v20, v14);
    v44 = (objc_class *)type metadata accessor for ScoreSummaryWrapper(0);
    v45 = (char *)objc_allocWithZone(v44);
    v43(&v45[OBJC_IVAR___CHScoreSummaryWrapper_scoreSummary], v17, v14);
    v53.receiver = v45;
    v53.super_class = v44;
    v46 = objc_msgSendSuper2(&v53, "init");
    v47 = *(void (**)(char *, uint64_t))(v15 + 8);
    v47(v17, v14);
    v48 = v46;
    v52(v46);

    v47(v20, v14);
    (*(void (**)(char *, void *))(v7 + 8))(v9, v50);
    return ((uint64_t (*)(char *, uint64_t))v47)(v24, v14);
  }
}

uint64_t sub_100397714(uint64_t a1, void *a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5, uint64_t a6, const char *a7, uint64_t a8)
{
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  _QWORD v34[3];
  _BYTE v35[8];

  v12 = static os_log_type_t.error.getter(a1);
  v13 = (void *)HKLogActivity;
  v14 = sub_100047110((uint64_t *)&unk_100827460);
  v15 = swift_allocObject(v14, 152, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100624A40;
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  v16 = sub_100038CF8();
  *(_QWORD *)(v15 + 64) = v16;
  *(_QWORD *)(v15 + 32) = a5;
  *(_QWORD *)(v15 + 40) = a6;
  *(_QWORD *)(v15 + 96) = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  *(_QWORD *)(v15 + 104) = sub_10018A478();
  *(_QWORD *)(v15 + 72) = a2;
  swift_getErrorValue(a1, v35, v34);
  v17 = v34[1];
  v18 = v34[2];
  v19 = v13;
  v20 = a2;
  v21 = Error.localizedDescription.getter(v17, v18);
  *(_QWORD *)(v15 + 136) = &type metadata for String;
  *(_QWORD *)(v15 + 144) = v16;
  *(_QWORD *)(v15 + 112) = v21;
  *(_QWORD *)(v15 + 120) = v22;
  os_log(_:dso:log:_:_:)(v12, &_mh_execute_header, v19, a7, a8, 2, v15);

  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v15, v23, v24, v25, v26, v27, v28, v29);
  return a3(0);
}

uint64_t sub_100397938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  int EnumCaseMultiPayload;
  double v18;
  double v19;
  uint64_t Strong;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];

  v8 = type metadata accessor for ArtworkDimension(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SeymourArtworkSizingBehavior(0);
  __chkstk_darwin(v12);
  v14 = (double *)((char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = a3 + 16;
  sub_10004F8C8(a2, (uint64_t)v14, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v12);
  v19 = *v14;
  v18 = v14[1];
  if (EnumCaseMultiPayload == 1)
  {
    swift_beginAccess(v15, v35, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v15);
    if (Strong)
    {
      v21 = (void *)Strong;
      sub_1000252E0(Strong + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_artworkImageLoader, (uint64_t)v32);

      v22 = v33;
      v23 = v34;
      sub_100016804(v32, v33);
      dispatch thunk of ArtworkImageLoading.fetchArtwork(_:size:)(a1, v22, v23, v19, v18);
LABEL_6:
      v29 = sub_100047110(&qword_100822168);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a4, 0, 1, v29);
      return _s10FitnessApp24HistoryViewActionContextVwxx_0(v32);
    }
  }
  else
  {
    v24 = sub_100047110((uint64_t *)&unk_100839270);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, (char *)v14 + *(int *)(v24 + 48), v8);
    swift_beginAccess(v15, v35, 0, 0);
    v25 = swift_unknownObjectWeakLoadStrong(v15);
    if (v25)
    {
      v26 = (void *)v25;
      sub_1000252E0(v25 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_artworkImageLoader, (uint64_t)v32);

      v27 = v33;
      v28 = v34;
      sub_100016804(v32, v33);
      dispatch thunk of ArtworkImageLoading.fetchArtwork(_:thatFits:preservingPreferredDimension:)(a1, v11, v27, v28, v19, v18);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      goto LABEL_6;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v31 = sub_100047110(&qword_100822168);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a4, 1, 1, v31);
}

void sub_100397BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  uint64_t v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  __n128 v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;

  v7 = type metadata accessor for CatalogWorkout(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = CatalogWorkoutDetail.workout.getter(v9);
  v13 = (CHWorkoutDetailHeartRateTableViewCell *)CatalogWorkout.mediaMoments.getter(v12);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  swift_bridgeObjectRetain(v13);
  v15 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10029670C(v14);
  swift_bridgeObjectRelease(v13, v16, v17, v18, v19, v20, v21, v22);
  v54 = v15;
  sub_1003988BC((uint64_t *)&v54, (uint64_t (*)(_QWORD))&type metadata accessor for MediaMoment, (uint64_t (*)(uint64_t))sub_100147808, (uint64_t (*)(_QWORD *))sub_10039894C);
  swift_bridgeObjectRelease(v13, v23, v24, v25, v26, v27, v28, v29);
  v30 = (uint64_t)v54;
  v31 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100393288((uint64_t)v54);
  swift_release(v30);
  __chkstk_darwin(v32);
  *(&v53 - 4) = a2;
  *(&v53 - 3) = a3;
  *(&v53 - 2) = a4;
  v33 = sub_1005B98A8((void (*)(_QWORD, __n128))sub_1003A3330, (uint64_t)(&v53 - 6), v31);
  swift_bridgeObjectRelease(v31, v34, v35, v36, v37, v38, v39, v40);
  v54 = v33;
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v42 = (void *)static OS_dispatch_queue.main.getter(v41);
  v43 = sub_10001E724(0, (unint64_t *)&qword_1008284B0, UIImage_ptr);
  v44 = sub_100047110(&qword_100830B58);
  v45 = sub_100028384(&qword_100830B60, &qword_100830B58, (uint64_t)&protocol conformance descriptor for [A]);
  static Promise.serial<A>(queue:_:)(v42, &v54, v43, v44, v45);
  swift_bridgeObjectRelease(v33, v46, v47, v48, v49, v50, v51, v52);

}

double sub_100397DB4(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  unsigned int v17;
  _QWORD v18[3];
  _BYTE v19[8];

  v17 = static os_log_type_t.error.getter(a1);
  v4 = (void *)HKLogActivity;
  v5 = sub_100047110((uint64_t *)&unk_100827460);
  v6 = swift_allocObject(v5, 152, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100624A40;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  v7 = sub_100038CF8();
  *(_QWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 32) = 0xD00000000000001BLL;
  *(_QWORD *)(v6 + 40) = 0x800000010069C560;
  v8 = a2[3];
  v9 = a2[4];
  sub_100016804(a2, v8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
  v11 = v4;
  v12 = v10(v8, v9);
  *(_QWORD *)(v6 + 96) = &type metadata for String;
  *(_QWORD *)(v6 + 104) = v7;
  *(_QWORD *)(v6 + 72) = v12;
  *(_QWORD *)(v6 + 80) = v13;
  swift_getErrorValue(a1, v19, v18);
  v14 = Error.localizedDescription.getter(v18[1], v18[2]);
  *(_QWORD *)(v6 + 136) = &type metadata for String;
  *(_QWORD *)(v6 + 144) = v7;
  *(_QWORD *)(v6 + 112) = v14;
  *(_QWORD *)(v6 + 120) = v15;
  os_log(_:dso:log:_:_:)(v17, &_mh_execute_header, v11, "[seymour] %@ failed to delete archived session for catalog item: %@ error: %@", 77, 2, v6);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

uint64_t sub_100397F00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t (**v28)(uint64_t *);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t (**v47)(uint64_t *);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void (*v67)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;

  v88 = a1;
  v87 = sub_100047110(&qword_100830BA8);
  v79 = *(_QWORD *)(v87 - 8);
  v81 = *(_QWORD *)(v79 + 64);
  __chkstk_darwin(v87);
  v76 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100830BB0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v73 - v9;
  v80 = sub_100047110(&qword_100830BB8);
  v77 = *(_QWORD *)(v80 - 8);
  v11 = *(_QWORD *)(v77 + 64);
  v12 = __chkstk_darwin(v80);
  v75 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v73 - v13;
  v15 = sub_100047110((uint64_t *)&unk_100836170);
  v84 = *(_QWORD *)(v15 - 8);
  v85 = v15;
  v83 = *(_QWORD *)(v84 + 64);
  v16 = __chkstk_darwin(v15);
  v82 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v78 = (char *)&v73 - v19;
  __chkstk_darwin(v18);
  v86 = (char *)&v73 - v20;
  v22 = *(_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_recommendationClient + 24);
  v21 = *(_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_recommendationClient + 32);
  sub_100016804((_QWORD *)(a2 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_recommendationClient), v22);
  dispatch thunk of RecommendationClientProtocol.queryRecommendations(for:)(0, v22, v21);
  v23 = swift_allocObject(&unk_10079BF98, 32, 7);
  *(_QWORD *)(v23 + 16) = sub_10039846C;
  *(_QWORD *)(v23 + 24) = 0;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  v24 = *(unsigned __int8 *)(v5 + 80);
  v25 = (v24 + 16) & ~v24;
  v26 = (v6 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = swift_allocObject(&unk_10079BFC0, v26 + 16, v24 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v27 + v25, v8, v4);
  v28 = (uint64_t (**)(uint64_t *))(v27 + v26);
  *v28 = sub_1003A3E9C;
  v28[1] = (uint64_t (*)(uint64_t *))v23;
  v29 = sub_100047110(&qword_100820A88);
  v30 = v14;
  Promise.init(asyncOperation:)(sub_1003A3EB0, v27, v29);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  v31 = v79;
  v74 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
  v32 = v76;
  v33 = v87;
  v74(v76, v88, v87);
  v34 = *(unsigned __int8 *)(v31 + 80);
  v35 = v31;
  v36 = (v34 + 16) & ~v34;
  v81 += v36;
  v73 = v34 | 7;
  v37 = swift_allocObject(&unk_10079BFE8, v81, v34 | 7);
  v79 = *(_QWORD *)(v35 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v79)(v37 + v36, v32, v33);
  v38 = swift_allocObject(&unk_10079C010, 32, 7);
  *(_QWORD *)(v38 + 16) = sub_1003A3ED0;
  *(_QWORD *)(v38 + 24) = v37;
  v39 = v77;
  v40 = v75;
  v41 = v30;
  v42 = v80;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v75, v30, v80);
  v43 = *(unsigned __int8 *)(v39 + 80);
  v44 = (v43 + 16) & ~v43;
  v45 = (v11 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  v46 = swift_allocObject(&unk_10079C038, v45 + 16, v43 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v46 + v44, v40, v42);
  v47 = (uint64_t (**)(uint64_t *))(v46 + v45);
  *v47 = sub_1003A3F2C;
  v47[1] = (uint64_t (*)(uint64_t *))v38;
  v48 = v78;
  Promise.init(asyncOperation:)(sub_1003A3F60, v46, (char *)&type metadata for () + 8);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v42);
  v49 = v87;
  v74(v32, v88, v87);
  v50 = swift_allocObject(&unk_10079C060, v81, v73);
  ((void (*)(uint64_t, char *, uint64_t))v79)(v50 + v36, v32, v49);
  v51 = swift_allocObject(&unk_10079C088, 32, 7);
  *(_QWORD *)(v51 + 16) = sub_1003A406C;
  *(_QWORD *)(v51 + 24) = v50;
  v52 = v84;
  v53 = v85;
  v54 = v82;
  v55 = v48;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v82, v48, v85);
  v56 = *(unsigned __int8 *)(v52 + 80);
  v57 = v52;
  v58 = (v56 + 16) & ~v56;
  v59 = (v83 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
  v60 = swift_allocObject(&unk_10079C0B0, v59 + 16, v56 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v60 + v58, v54, v53);
  v61 = (_QWORD *)(v60 + v59);
  *v61 = sub_1001104C4;
  v61[1] = v51;
  v62 = v86;
  Promise.init(asyncOperation:)(sub_10039F50C, v60, (char *)&type metadata for () + 8);
  v63 = *(void (**)(char *, uint64_t))(v57 + 8);
  v63(v55, v53);
  v64 = v53;
  v65 = v53;
  v66 = v62;
  v67 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v64);
  v69 = v68;
  v70 = swift_allocObject(&unk_10079C0D8, 32, 7);
  *(_QWORD *)(v70 + 16) = 0;
  *(_QWORD *)(v70 + 24) = 0;
  v67(sub_10039F514, v70);
  swift_release(v69);
  v71 = swift_release(v70);
  return ((uint64_t (*)(char *, uint64_t, __n128))v63)(v66, v65, v71);
}

void sub_10039846C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD v24[2];
  _QWORD *v25;
  uint64_t (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v5 = type metadata accessor for Recommendation(0);
  v28 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  swift_bridgeObjectRetain(v8);
  v10 = sub_100296720(v9);
  swift_bridgeObjectRelease(v8);
  v29 = v10;
  sub_1003988BC((uint64_t *)&v29, (uint64_t (*)(_QWORD))&type metadata accessor for Recommendation, (uint64_t (*)(uint64_t))sub_10014781C, (uint64_t (*)(_QWORD *))sub_1003993C4);
  if (v2)
  {
    swift_release(v29);
    __break(1u);
  }
  else
  {
    v11 = v29;
    v12 = v29[2];
    if (v12)
    {
      v24[1] = 0;
      v25 = a2;
      v29 = _swiftEmptyArrayStorage;
      sub_100121B6C(0, v12, 0);
      v13 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      v24[0] = v11;
      v14 = (char *)v11 + v13;
      v15 = *(_QWORD *)(v28 + 72);
      v26 = *(uint64_t (**)(char *, char *, uint64_t))(v28 + 16);
      v27 = v15;
      do
      {
        v16 = v26(v7, v14, v5);
        v17 = Recommendation.referenceIdentifier.getter(v16);
        v19 = v18;
        (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
        v20 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
        {
          sub_100121B6C(0, v20[2] + 1, 1);
          v20 = v29;
        }
        v22 = v20[2];
        v21 = v20[3];
        if (v22 >= v21 >> 1)
        {
          sub_100121B6C(v21 > 1, v22 + 1, 1);
          v20 = v29;
        }
        v20[2] = v22 + 1;
        v23 = &v20[2 * v22];
        v23[4] = v17;
        v23[5] = v19;
        v14 += v27;
        --v12;
      }
      while (v12);
      swift_release(v24[0]);
      a2 = v25;
    }
    else
    {
      swift_release(v29);
      v20 = _swiftEmptyArrayStorage;
    }
    *a2 = v20;
  }
}

uint64_t sub_100398680(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *a1;
  swift_bridgeObjectRetain(v3);
  v1 = sub_100047110(&qword_100830BA8);
  return CheckedContinuation.resume(returning:)(&v3, v1);
}

uint64_t sub_1003986D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v4 = *a1;
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5);
  v7 = (void *)result;
  if (result)
  {
    v8 = *(_QWORD *)(result + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_playlists);
    *(_QWORD *)(result + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_playlists) = v4;
    swift_bridgeObjectRetain(v4);

    result = swift_bridgeObjectRelease(v8);
  }
  *a3 = v7 == 0;
  return result;
}

id sub_100398794()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeymourCatalogItemDataProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003988BC(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t), uint64_t (*a4)(_QWORD *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v7 = *(_QWORD *)(a2(0) - 8);
  v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v8 = a3(v8);
  v9 = *(_QWORD *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  result = a4(v11);
  *a1 = v8;
  return result;
}

void sub_10039894C(char **a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  const char *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  uint64_t v25;
  unint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int v45;
  uint64_t v46;
  Swift::Int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::Int v52;
  uint64_t v53;
  char **v54;
  uint64_t v55;
  char *v56;
  char *v57;
  Swift::Int v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char **v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  char *v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  char *v72;
  char *v73;
  void (*v74)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v76;
  unint64_t v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  Class *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  Class v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  unint64_t v93;
  Class *v94;
  Class v95;
  Class v96;
  uint64_t v97;
  uint64_t v98;
  Class *v99;
  Class v100;
  Class v101;
  BOOL v102;
  uint64_t v103;
  char v104;
  Class *v105;
  Class v106;
  Class v107;
  uint64_t v108;
  BOOL v109;
  Class isa;
  uint64_t v111;
  Class *v112;
  Class v113;
  Class v114;
  uint64_t v115;
  Class *v116;
  Class v117;
  Class v118;
  uint64_t v119;
  unint64_t v120;
  CHWorkoutDetailHeartRateTableViewCell *v121;
  uint64_t *v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  unint64_t v129;
  objc_class *v130;
  objc_class *v131;
  uint64_t v132;
  Class *v133;
  unint64_t v134;
  CHWorkoutDetailHeartRateTableViewCell *v135;
  SEL v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  CHWorkoutDetailHeartRateTableViewCell *v143;
  Swift::Int v144;
  CHWorkoutDetailHeartRateTableViewCell *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  void (*v153)(char *, char *, uint64_t);
  char *v154;
  char *v155;
  uint64_t v156;
  char **v157;
  char *v158;
  Swift::Int v159;
  uint64_t v160;
  uint64_t v161;

  v3 = type metadata accessor for MediaMoment(0);
  v161 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v147 = (char *)&v143 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v158 = (char *)&v143 - v6;
  __chkstk_darwin(v7);
  v155 = (char *)&v143 - v8;
  __chkstk_darwin(v9);
  v154 = (char *)&v143 - v10;
  v11 = (Swift::Int)a1[1];
  v12 = _minimumMergeRunLength(_:)(v11);
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_141;
    if (v11)
      sub_100399DFC(0, v11, 1, a1);
    return;
  }
  if (v11 >= 0)
    v20 = v11;
  else
    v20 = v11 + 1;
  if (v11 < -1)
    goto LABEL_149;
  v157 = a1;
  v144 = v12;
  v150 = v1;
  if (v11 < 2)
  {
    v24 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
    v149 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80));
    v143 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
    if (v11 != 1)
    {
      v26 = _swiftEmptyArrayStorage[2];
LABEL_107:
      if (v26 >= 2)
      {
        v128 = *v157;
        do
        {
          v129 = v26 - 2;
          if (v26 < 2)
            goto LABEL_136;
          if (!v128)
            goto LABEL_148;
          v130 = (objc_class *)*((_QWORD *)&v24[1].super.super.super.super.isa + 2 * v129);
          v131 = *(objc_class **)&v24->cellInset[16 * v26];
          v132 = v150;
          sub_10039A2DC((unint64_t)&v128[*(_QWORD *)(v161 + 72) * (_QWORD)v130], (unint64_t)&v128[*(_QWORD *)(v161 + 72) * *(_QWORD *)&v24->cellPadding[16 * v26]], (unint64_t)&v128[*(_QWORD *)(v161 + 72) * (_QWORD)v131], v149);
          v150 = v132;
          if (v132)
            break;
          if ((uint64_t)v131 < (uint64_t)v130)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
            v24 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147754((uint64_t)v24);
          if (v129 >= *(_QWORD *)v24->cellPadding)
            goto LABEL_138;
          v133 = &v24[1].super.super.super.super.isa + 2 * v129;
          *v133 = v130;
          v133[1] = v131;
          v134 = *(_QWORD *)v24->cellPadding;
          if (v26 > v134)
            goto LABEL_139;
          memmove(&v24->cellPadding[16 * v26], (char *)&v24[1] + 16 * v26, 16 * (v134 - v26));
          *(_QWORD *)v24->cellPadding = v134 - 1;
          v26 = v134 - 1;
        }
        while (v134 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease(v24, v13, v14, v15, v16, v17, v18, v19);
      v135 = v143;
      *(_QWORD *)v143->cellPadding = 0;
      swift_bridgeObjectRelease(v135, v136, v137, v138, v139, v140, v141, v142);
      return;
    }
  }
  else
  {
    v21 = v20 >> 1;
    v22 = static Array._allocateBufferUninitialized(minimumCapacity:)(v20 >> 1, v3);
    *(_QWORD *)(v22 + 16) = v21;
    v23 = *(unsigned __int8 *)(v161 + 80);
    v143 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
    v149 = v22 + ((v23 + 32) & ~v23);
  }
  v25 = 0;
  v24 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
  while (1)
  {
    v27 = v25;
    v28 = v25 + 1;
    v148 = v25;
    if (v25 + 1 >= v11)
    {
      v39 = v25 + 1;
      v48 = v150;
      goto LABEL_58;
    }
    v29 = *v157;
    v159 = v11;
    v30 = v161;
    v31 = *(_QWORD *)(v161 + 72);
    v32 = *(void (**)(_QWORD, _QWORD, _QWORD))(v161 + 16);
    v33 = v154;
    v32(v154, &v29[v31 * v28], v3);
    v34 = &v29[v31 * v27];
    v35 = v155;
    v32(v155, v34, v3);
    v156 = sub_1000083D8(&qword_100830B68, (uint64_t (*)(uint64_t))&type metadata accessor for MediaMoment, (uint64_t)&protocol conformance descriptor for MediaMoment);
    LODWORD(v153) = dispatch thunk of static Comparable.< infix(_:_:)(v33, v35, v3);
    v36 = *(void (**)(_QWORD, _QWORD))(v30 + 8);
    v37 = v35;
    v27 = v148;
    v36(v37, v3);
    v36(v33, v3);
    v38 = v29;
    v39 = v27 + 2;
    v151 = v38;
    v160 = v31;
    if (v27 + 2 >= v159)
    {
      v48 = v150;
      v47 = v159;
      v46 = v31;
      if ((v153 & 1) == 0)
        break;
    }
    else
    {
      v145 = v24;
      v152 = v31 * v28;
      v40 = v38;
      v41 = v31 * v39;
      do
      {
        v42 = v39;
        v43 = v154;
        v32(v154, &v40[v41], v3);
        v44 = v155;
        v32(v155, &v40[v152], v3);
        v45 = dispatch thunk of static Comparable.< infix(_:_:)(v43, v44, v3);
        v36(v44, v3);
        v36(v43, v3);
        if (((v153 ^ v45) & 1) != 0)
        {
          v48 = v150;
          v24 = v145;
          v39 = v42;
          v27 = v148;
          v47 = v159;
          v46 = v160;
          if ((v153 & 1) == 0)
            goto LABEL_38;
          goto LABEL_26;
        }
        v39 = v42 + 1;
        v46 = v160;
        v40 += v160;
      }
      while (v159 != v42 + 1);
      v47 = v159;
      v39 = v159;
      v48 = v150;
      v24 = v145;
      v27 = v148;
      if ((v153 & 1) == 0)
        break;
    }
LABEL_26:
    if (v39 < v27)
      goto LABEL_142;
    if (v27 >= v39)
      break;
    v145 = v24;
    v49 = 0;
    v50 = v46 * (v39 - 1);
    v51 = v39 * v46;
    v52 = v27;
    v53 = v27 * v46;
    v54 = v157;
    v156 = v39;
    do
    {
      if (v52 != v39 + v49 - 1)
      {
        if (!v151)
          goto LABEL_147;
        v55 = v48;
        v56 = &v151[v53];
        v57 = &v151[v50];
        v153 = *(char **)(v161 + 32);
        ((void (*)(char *, char *, uint64_t))v153)(v147, &v151[v53], v3);
        if (v53 < v50 || v56 >= &v151[v51])
        {
          swift_arrayInitWithTakeFrontToBack(v56);
        }
        else if (v53 != v50)
        {
          swift_arrayInitWithTakeBackToFront(v56);
        }
        ((void (*)(char *, char *, uint64_t))v153)(v57, v147, v3);
        v48 = v55;
        v39 = v156;
        v54 = v157;
        v46 = v160;
      }
      ++v52;
      --v49;
      v50 -= v46;
      v51 -= v46;
      v53 += v46;
    }
    while (v52 < v39 + v49);
    v24 = v145;
    v27 = v148;
    v47 = v159;
    if (v39 < v159)
      goto LABEL_41;
LABEL_58:
    if (v39 < v27)
      goto LABEL_135;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v24);
    v150 = v48;
    v156 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v24 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147150(0, *(_QWORD *)v24->cellPadding + 1, 1, (char *)v24);
    v77 = *(_QWORD *)v24->cellPadding;
    v76 = *(_QWORD *)v24->cellInset;
    v26 = v77 + 1;
    if (v77 >= v76 >> 1)
      v24 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147150((char *)(v76 > 1), v77 + 1, 1, (char *)v24);
    *(_QWORD *)v24->cellPadding = v26;
    v78 = v24 + 1;
    v79 = &v24[1].super.super.super.super.isa + 2 * v77;
    v80 = v156;
    *v79 = (Class)v27;
    v79[1] = (Class)v80;
    if (v77)
    {
      while (1)
      {
        v81 = v26 - 1;
        if (v26 >= 4)
        {
          v86 = (char *)v78 + 16 * v26;
          v87 = *((_QWORD *)v86 - 8);
          v88 = *((_QWORD *)v86 - 7);
          v92 = __OFSUB__(v88, v87);
          v89 = v88 - v87;
          if (v92)
            goto LABEL_124;
          v91 = *((_QWORD *)v86 - 6);
          v90 = *((_QWORD *)v86 - 5);
          v92 = __OFSUB__(v90, v91);
          v84 = v90 - v91;
          v85 = v92;
          if (v92)
            goto LABEL_125;
          v93 = v26 - 2;
          v94 = &v78[-1].super.super.super.super.isa + 2 * v26;
          v96 = *v94;
          v95 = v94[1];
          v92 = __OFSUB__(v95, v96);
          v97 = v95 - v96;
          if (v92)
            goto LABEL_127;
          v92 = __OFADD__(v84, v97);
          v98 = v84 + v97;
          if (v92)
            goto LABEL_130;
          if (v98 >= v89)
          {
            v116 = &v78->super.super.super.super.isa + 2 * v81;
            v118 = *v116;
            v117 = v116[1];
            v92 = __OFSUB__(v117, v118);
            v119 = v117 - v118;
            if (v92)
              goto LABEL_134;
            v109 = v84 < v119;
            goto LABEL_95;
          }
        }
        else
        {
          if (v26 != 3)
          {
            isa = v24[1].super.super.super.super.isa;
            v111 = *(_QWORD *)v24[1].heartRateController;
            v92 = __OFSUB__(v111, isa);
            v103 = v111 - (_QWORD)isa;
            v104 = v92;
            goto LABEL_89;
          }
          v83 = v24[1].super.super.super.super.isa;
          v82 = *(_QWORD *)v24[1].heartRateController;
          v92 = __OFSUB__(v82, v83);
          v84 = v82 - (_QWORD)v83;
          v85 = v92;
        }
        if ((v85 & 1) != 0)
          goto LABEL_126;
        v93 = v26 - 2;
        v99 = &v78[-1].super.super.super.super.isa + 2 * v26;
        v101 = *v99;
        v100 = v99[1];
        v102 = __OFSUB__(v100, v101);
        v103 = v100 - v101;
        v104 = v102;
        if (v102)
          goto LABEL_129;
        v105 = &v78->super.super.super.super.isa + 2 * v81;
        v107 = *v105;
        v106 = v105[1];
        v92 = __OFSUB__(v106, v107);
        v108 = v106 - v107;
        if (v92)
          goto LABEL_132;
        if (__OFADD__(v103, v108))
          goto LABEL_133;
        if (v103 + v108 >= v84)
        {
          v109 = v84 < v108;
LABEL_95:
          if (v109)
            v81 = v93;
          goto LABEL_97;
        }
LABEL_89:
        if ((v104 & 1) != 0)
          goto LABEL_128;
        v112 = &v78->super.super.super.super.isa + 2 * v81;
        v114 = *v112;
        v113 = v112[1];
        v92 = __OFSUB__(v113, v114);
        v115 = v113 - v114;
        if (v92)
          goto LABEL_131;
        if (v115 < v103)
          goto LABEL_14;
LABEL_97:
        v120 = v81 - 1;
        if (v81 - 1 >= v26)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!*v157)
          goto LABEL_146;
        v121 = v24;
        v122 = (uint64_t *)v78 + 2 * v120;
        v123 = *v122;
        v124 = &v78->super.super.super.super.isa + 2 * v81;
        v125 = v124[1];
        v126 = v150;
        sub_10039A2DC((unint64_t)&(*v157)[*(_QWORD *)(v161 + 72) * *v122], (unint64_t)&(*v157)[*(_QWORD *)(v161 + 72) * *v124], (unint64_t)&(*v157)[*(_QWORD *)(v161 + 72) * v125], v149);
        v150 = v126;
        if (v126)
        {
          v24 = v121;
          goto LABEL_118;
        }
        if (v125 < v123)
          goto LABEL_121;
        if (v81 > *(_QWORD *)v121->cellPadding)
          goto LABEL_122;
        *v122 = v123;
        *(_QWORD *)&v78->heartRateController[16 * v120] = v125;
        v127 = *(_QWORD *)v121->cellPadding;
        if (v81 >= v127)
          goto LABEL_123;
        v24 = v121;
        v26 = v127 - 1;
        memmove((char *)v78 + 16 * v81, v124 + 2, 16 * (v127 - 1 - v81));
        *(_QWORD *)v121->cellPadding = v127 - 1;
        if (v127 <= 2)
          goto LABEL_14;
      }
    }
    v26 = 1;
LABEL_14:
    v11 = (Swift::Int)v157[1];
    v25 = v156;
    if (v156 >= v11)
      goto LABEL_107;
  }
LABEL_38:
  v54 = v157;
  if (v39 >= v47)
    goto LABEL_58;
LABEL_41:
  if (__OFSUB__(v39, v27))
    goto LABEL_140;
  if (v39 - v27 >= v144)
    goto LABEL_58;
  if (__OFADD__(v27, v144))
    goto LABEL_143;
  if (v27 + v144 >= v47)
    v58 = v47;
  else
    v58 = v27 + v144;
  if (v58 >= v27)
  {
    if (v39 != v58)
    {
      v145 = v24;
      v146 = v58;
      v59 = *(_QWORD *)(v161 + 72);
      v60 = *(char **)(v161 + 16);
      v150 = v48;
      v151 = v60;
      v61 = v59 * (v39 - 1);
      v152 = v59;
      v160 = v39 * v59;
      do
      {
        v63 = 0;
        v156 = v39;
        v153 = (char *)v61;
        while (1)
        {
          v159 = v27;
          v64 = *v54;
          v65 = v154;
          v66 = v54;
          v67 = (void (*)(_QWORD, _QWORD, _QWORD))v151;
          ((void (*)(char *, char *, uint64_t))v151)(v154, &(*v54)[v160 + v63], v3);
          v68 = &v64[v61 + v63];
          v69 = v155;
          v67(v155, v68, v3);
          sub_1000083D8(&qword_100830B68, (uint64_t (*)(uint64_t))&type metadata accessor for MediaMoment, (uint64_t)&protocol conformance descriptor for MediaMoment);
          LOBYTE(v64) = dispatch thunk of static Comparable.< infix(_:_:)(v65, v69, v3);
          v70 = *(void (**)(_QWORD, _QWORD))(v161 + 8);
          v70(v69, v3);
          v70(v65, v3);
          if ((v64 & 1) == 0)
            break;
          v71 = *v66;
          if (!*v66)
            goto LABEL_145;
          v72 = &v71[v160 + v63];
          v61 = (uint64_t)v153;
          v73 = &v153[(_QWORD)v71 + v63];
          v74 = *(void (**)(_QWORD, _QWORD, _QWORD))(v161 + 32);
          v74(v158, v72, v3);
          swift_arrayInitWithTakeFrontToBack(v72);
          v74(v73, v158, v3);
          v63 -= v152;
          v27 = v159 + 1;
          v62 = v156;
          v54 = v157;
          if (v156 == v159 + 1)
            goto LABEL_51;
        }
        v62 = v156;
        v54 = v66;
        v61 = (uint64_t)v153;
LABEL_51:
        v39 = v62 + 1;
        v61 += v152;
        v160 += v152;
        v27 = v148;
      }
      while (v39 != v146);
      v39 = v146;
      v48 = v150;
      v24 = v145;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1003993C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(char *, uint64_t);
  char *v19;
  unint64_t v20;
  Swift::Int v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  Swift::Int v32;
  uint64_t v33;
  Swift::Int v34;
  Swift::Int v35;
  int v36;
  char *v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  Swift::Int v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  char *v63;
  uint64_t (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(char *, uint64_t, uint64_t);
  unint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  char v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  unint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  _QWORD *v132;
  Swift::Int v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  Swift::Int v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  void (*v144)(char *, uint64_t);
  uint64_t *v145;
  uint64_t v146;
  char *v147;
  void (*v148)(char *, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v2 = v1;
  v146 = type metadata accessor for Recommendation(0);
  v152 = *(_QWORD *)(v146 - 8);
  v4 = __chkstk_darwin(v146);
  v137 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v147 = (char *)&v131 - v7;
  v8 = __chkstk_darwin(v6);
  v142 = (char *)&v131 - v9;
  __chkstk_darwin(v8);
  v143 = (char *)&v131 - v10;
  v11 = a1[1];
  v12 = _minimumMergeRunLength(_:)(v11);
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_139;
    if (v11)
      sub_10039A074(0, v11, 1, a1);
    return;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_147;
  v133 = v12;
  if (v11 < 2)
  {
    v17 = _swiftEmptyArrayStorage;
    v139 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80));
    if (v11 != 1)
    {
      v20 = _swiftEmptyArrayStorage[2];
      v19 = (char *)_swiftEmptyArrayStorage;
LABEL_104:
      v132 = v17;
      if (v20 >= 2)
      {
        v124 = *a1;
        do
        {
          v125 = v20 - 2;
          if (v20 < 2)
            goto LABEL_134;
          if (!v124)
            goto LABEL_146;
          v126 = *(_QWORD *)&v19[16 * v125 + 32];
          v127 = *(_QWORD *)&v19[16 * v20 + 24];
          sub_10039A830(v124 + *(_QWORD *)(v152 + 72) * v126, v124 + *(_QWORD *)(v152 + 72) * *(_QWORD *)&v19[16 * v20 + 16], v124 + *(_QWORD *)(v152 + 72) * v127, v139);
          if (v2)
            break;
          if (v127 < v126)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
            v19 = sub_100147754((uint64_t)v19);
          if (v125 >= *((_QWORD *)v19 + 2))
            goto LABEL_136;
          v128 = &v19[16 * v125 + 32];
          *(_QWORD *)v128 = v126;
          *((_QWORD *)v128 + 1) = v127;
          v129 = *((_QWORD *)v19 + 2);
          if (v20 > v129)
            goto LABEL_137;
          memmove(&v19[16 * v20 + 16], &v19[16 * v20 + 32], 16 * (v129 - v20));
          *((_QWORD *)v19 + 2) = v129 - 1;
          v20 = v129 - 1;
        }
        while (v129 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease(v19);
      v130 = v132;
      v132[2] = 0;
      swift_bridgeObjectRelease(v130);
      return;
    }
    v132 = _swiftEmptyArrayStorage;
  }
  else
  {
    v14 = v13 >> 1;
    v15 = static Array._allocateBufferUninitialized(minimumCapacity:)(v13 >> 1, v146);
    *(_QWORD *)(v15 + 16) = v14;
    v16 = *(unsigned __int8 *)(v152 + 80);
    v132 = (_QWORD *)v15;
    v139 = v15 + ((v16 + 32) & ~v16);
  }
  v18 = 0;
  v19 = (char *)_swiftEmptyArrayStorage;
  v145 = a1;
  while (1)
  {
    v21 = (Swift::Int)v18;
    v22 = (char *)v18 + 1;
    if ((uint64_t)v18 + 1 >= v11)
    {
      v32 = (Swift::Int)v18 + 1;
    }
    else
    {
      v135 = v19;
      v23 = *a1;
      v24 = *(_QWORD *)(v152 + 72);
      v25 = *a1 + v24 * (_QWORD)v22;
      v151 = v24;
      v26 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 16);
      v138 = (Swift::Int)v18;
      v27 = v146;
      v26(v143, v25, v146);
      v28 = v142;
      v148 = v26;
      v29 = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(v142, v23 + v24 * v138, v27);
      v30 = v143;
      v150 = Recommendation.index.getter(v29);
      v149 = Recommendation.index.getter(v150);
      v31 = *(void (**)(char *, uint64_t))(v152 + 8);
      v31(v28, v27);
      v21 = v138;
      v144 = v31;
      v31(v30, v27);
      v32 = v21 + 2;
      v136 = v23;
      if (v21 + 2 < v11)
      {
        v134 = v2;
        v33 = v23;
        v140 = v151 * v32;
        v141 = v151 * (_QWORD)v22;
        while (1)
        {
          v34 = v11;
          v35 = v32;
          v36 = v150 < v149;
          v37 = v143;
          v38 = v146;
          v39 = (uint64_t (*)(char *, uint64_t, uint64_t))v148;
          v148(v143, v33 + v140, v146);
          v40 = v142;
          v41 = v39(v142, v33 + v141, v38);
          v42 = Recommendation.index.getter(v41);
          LODWORD(v42) = v42 >= Recommendation.index.getter(v42);
          v43 = v144;
          v144(v40, v38);
          v43(v37, v38);
          if (v36 == (_DWORD)v42)
            break;
          v32 = v35 + 1;
          v33 += v151;
          v11 = v34;
          if (v34 == v32)
          {
            v32 = v34;
            v2 = v134;
            a1 = v145;
            v21 = v138;
            goto LABEL_24;
          }
        }
        v2 = v134;
        a1 = v145;
        v32 = v35;
        v21 = v138;
        v11 = v34;
      }
LABEL_24:
      v19 = v135;
      if (v150 < v149)
      {
        if (v32 < v21)
          goto LABEL_140;
        if (v21 < v32)
        {
          v150 = v11;
          v134 = v2;
          v44 = 0;
          v45 = v151;
          v46 = v151 * (v32 - 1);
          v47 = v32 * v151;
          v48 = v21;
          v49 = v21 * v151;
          v144 = (void (*)(char *, uint64_t))v32;
          do
          {
            if (v48 != v32 + v44 - 1)
            {
              if (!v136)
                goto LABEL_145;
              v51 = v136 + v49;
              v52 = v136 + v46;
              v53 = v136;
              v54 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 32);
              v54(v137, v136 + v49, v146);
              if (v49 < v46 || v51 >= v53 + v47)
              {
                v50 = v146;
                swift_arrayInitWithTakeFrontToBack(v51);
              }
              else
              {
                v50 = v146;
                if (v49 != v46)
                  swift_arrayInitWithTakeBackToFront(v51);
              }
              v54((char *)v52, (uint64_t)v137, v50);
              v32 = (Swift::Int)v144;
              v45 = v151;
            }
            ++v48;
            --v44;
            v46 -= v45;
            v47 -= v45;
            v49 += v45;
          }
          while (v48 < v32 + v44);
          v2 = v134;
          v19 = v135;
          a1 = v145;
          v21 = v138;
          v11 = v150;
        }
      }
    }
    if (v32 >= v11)
      goto LABEL_56;
    if (__OFSUB__(v32, v21))
      goto LABEL_138;
    if (v32 - v21 >= v133)
      goto LABEL_56;
    if (__OFADD__(v21, v133))
      goto LABEL_141;
    v55 = v21 + v133 >= v11 ? v11 : v21 + v133;
    if (v55 < v21)
      break;
    if (v32 != v55)
    {
      v138 = v21;
      v134 = v2;
      v135 = v19;
      v56 = *(_QWORD *)(v152 + 72);
      v140 = *(_QWORD *)(v152 + 16);
      v141 = v56;
      v150 = v32 * v56;
      v151 = v56 * (v32 - 1);
      v136 = v55;
      do
      {
        v58 = 0;
        v59 = (void (*)(char *, uint64_t, uint64_t))v138;
        v60 = v146;
        v144 = (void (*)(char *, uint64_t))v32;
        while (1)
        {
          v148 = v59;
          v61 = v145;
          v62 = *v145;
          v63 = v143;
          v64 = (uint64_t (*)(char *, uint64_t, uint64_t))v140;
          ((void (*)(char *, uint64_t, uint64_t))v140)(v143, v150 + v58 + *v145, v60);
          v65 = v151 + v58 + v62;
          v66 = v142;
          v67 = v64(v142, v65, v60);
          v149 = Recommendation.index.getter(v67);
          v68 = Recommendation.index.getter(v149);
          v69 = *(void (**)(char *, uint64_t))(v152 + 8);
          v69(v66, v60);
          v69(v63, v60);
          if (v149 >= v68)
            break;
          v70 = *v61;
          if (!*v61)
            goto LABEL_143;
          v71 = v70 + v150 + v58;
          v72 = (char *)(v70 + v151 + v58);
          v73 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 32);
          v60 = v146;
          v73(v147, v71, v146);
          v57 = (char *)v144;
          swift_arrayInitWithTakeFrontToBack(v71);
          v73(v72, (uint64_t)v147, v60);
          v58 -= v141;
          v59 = (void (*)(char *, uint64_t, uint64_t))((char *)v148 + 1);
          if (v57 == (char *)v148 + 1)
            goto LABEL_49;
        }
        v57 = (char *)v144;
LABEL_49:
        v32 = (Swift::Int)(v57 + 1);
        v151 += v141;
        v150 += v141;
      }
      while (v32 != v136);
      v32 = v136;
      v2 = v134;
      v19 = v135;
      a1 = v145;
      v21 = v138;
    }
LABEL_56:
    if (v32 < v21)
      goto LABEL_133;
    if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      v19 = sub_100147150(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
    v75 = *((_QWORD *)v19 + 2);
    v74 = *((_QWORD *)v19 + 3);
    v20 = v75 + 1;
    if (v75 >= v74 >> 1)
      v19 = sub_100147150((char *)(v74 > 1), v75 + 1, 1, v19);
    *((_QWORD *)v19 + 2) = v20;
    v76 = v19 + 32;
    v77 = &v19[16 * v75 + 32];
    *(_QWORD *)v77 = v21;
    *((_QWORD *)v77 + 1) = v32;
    v144 = (void (*)(char *, uint64_t))v32;
    if (v75)
    {
      while (1)
      {
        v78 = v20 - 1;
        if (v20 >= 4)
        {
          v83 = &v76[16 * v20];
          v84 = *((_QWORD *)v83 - 8);
          v85 = *((_QWORD *)v83 - 7);
          v89 = __OFSUB__(v85, v84);
          v86 = v85 - v84;
          if (v89)
            goto LABEL_122;
          v88 = *((_QWORD *)v83 - 6);
          v87 = *((_QWORD *)v83 - 5);
          v89 = __OFSUB__(v87, v88);
          v81 = v87 - v88;
          v82 = v89;
          if (v89)
            goto LABEL_123;
          v90 = v20 - 2;
          v91 = &v76[16 * v20 - 32];
          v93 = *(_QWORD *)v91;
          v92 = *((_QWORD *)v91 + 1);
          v89 = __OFSUB__(v92, v93);
          v94 = v92 - v93;
          if (v89)
            goto LABEL_125;
          v89 = __OFADD__(v81, v94);
          v95 = v81 + v94;
          if (v89)
            goto LABEL_128;
          if (v95 >= v86)
          {
            v113 = &v76[16 * v78];
            v115 = *(_QWORD *)v113;
            v114 = *((_QWORD *)v113 + 1);
            v89 = __OFSUB__(v114, v115);
            v116 = v114 - v115;
            if (v89)
              goto LABEL_132;
            v106 = v81 < v116;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            v107 = *((_QWORD *)v19 + 4);
            v108 = *((_QWORD *)v19 + 5);
            v89 = __OFSUB__(v108, v107);
            v100 = v108 - v107;
            v101 = v89;
            goto LABEL_87;
          }
          v80 = *((_QWORD *)v19 + 4);
          v79 = *((_QWORD *)v19 + 5);
          v89 = __OFSUB__(v79, v80);
          v81 = v79 - v80;
          v82 = v89;
        }
        if ((v82 & 1) != 0)
          goto LABEL_124;
        v90 = v20 - 2;
        v96 = &v76[16 * v20 - 32];
        v98 = *(_QWORD *)v96;
        v97 = *((_QWORD *)v96 + 1);
        v99 = __OFSUB__(v97, v98);
        v100 = v97 - v98;
        v101 = v99;
        if (v99)
          goto LABEL_127;
        v102 = &v76[16 * v78];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v89 = __OFSUB__(v103, v104);
        v105 = v103 - v104;
        if (v89)
          goto LABEL_130;
        if (__OFADD__(v100, v105))
          goto LABEL_131;
        if (v100 + v105 >= v81)
        {
          v106 = v81 < v105;
LABEL_93:
          if (v106)
            v78 = v90;
          goto LABEL_95;
        }
LABEL_87:
        if ((v101 & 1) != 0)
          goto LABEL_126;
        v109 = &v76[16 * v78];
        v111 = *(_QWORD *)v109;
        v110 = *((_QWORD *)v109 + 1);
        v89 = __OFSUB__(v110, v111);
        v112 = v110 - v111;
        if (v89)
          goto LABEL_129;
        if (v112 < v100)
          goto LABEL_15;
LABEL_95:
        v117 = v78 - 1;
        if (v78 - 1 >= v20)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        v118 = *a1;
        if (!*a1)
          goto LABEL_144;
        v119 = &v76[16 * v117];
        v120 = *(_QWORD *)v119;
        v121 = &v76[16 * v78];
        v122 = *((_QWORD *)v121 + 1);
        sub_10039A830(v118 + *(_QWORD *)(v152 + 72) * *(_QWORD *)v119, v118 + *(_QWORD *)(v152 + 72) * *(_QWORD *)v121, v118 + *(_QWORD *)(v152 + 72) * v122, v139);
        if (v2)
          goto LABEL_115;
        if (v122 < v120)
          goto LABEL_119;
        if (v78 > *((_QWORD *)v19 + 2))
          goto LABEL_120;
        *(_QWORD *)v119 = v120;
        *(_QWORD *)&v76[16 * v117 + 8] = v122;
        v123 = *((_QWORD *)v19 + 2);
        if (v78 >= v123)
          goto LABEL_121;
        v20 = v123 - 1;
        memmove(&v76[16 * v78], v121 + 16, 16 * (v123 - 1 - v78));
        *((_QWORD *)v19 + 2) = v123 - 1;
        a1 = v145;
        if (v123 <= 2)
          goto LABEL_15;
      }
    }
    v20 = 1;
LABEL_15:
    v11 = a1[1];
    v18 = v144;
    if ((uint64_t)v144 >= v11)
    {
      v17 = v132;
      goto LABEL_104;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_100399DFC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  _QWORD *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;

  v29 = a1;
  v7 = type metadata accessor for MediaMoment(0);
  v37 = *(_QWORD **)(v7 - 8);
  __chkstk_darwin(v7);
  v36 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v33 = (char *)&v27 - v10;
  v12 = __chkstk_darwin(v11);
  v32 = (char *)&v27 - v13;
  v35 = a3;
  v28 = a2;
  if (a3 != a2)
  {
    v14 = v37[9];
    v30 = (void (*)(char *, uint64_t, uint64_t))v37[2];
    v31 = a4;
    v39 = v14 * (v35 - 1);
    v34 = v14;
    v38 = v14 * v35;
LABEL_5:
    v15 = 0;
    v16 = v29;
    while (1)
    {
      v17 = *a4;
      v18 = v32;
      v19 = v30;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v30)(v32, v38 + v15 + *a4, v7, v12);
      v20 = v33;
      v19(v33, v39 + v15 + v17, v7);
      sub_1000083D8(&qword_100830B68, (uint64_t (*)(uint64_t))&type metadata accessor for MediaMoment, (uint64_t)&protocol conformance descriptor for MediaMoment);
      LOBYTE(v17) = dispatch thunk of static Comparable.< infix(_:_:)(v18, v20, v7);
      v21 = (void (*)(char *, uint64_t))v37[1];
      v22 = v20;
      a4 = v31;
      v21(v22, v7);
      v21(v18, v7);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v39 += v34;
        v38 += v34;
        if (++v35 == v28)
          return;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = v23 + v38 + v15;
      v25 = (char *)(v23 + v39 + v15);
      v26 = (void (*)(char *, uint64_t, uint64_t))v37[4];
      v26(v36, v24, v7);
      swift_arrayInitWithTakeFrontToBack(v24);
      v26(v25, (uint64_t)v36, v7);
      v15 -= v34;
      if (v35 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_10039A074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;

  v35 = a1;
  v7 = type metadata accessor for Recommendation(0);
  v43 = *(_QWORD **)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v42 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v38 = (char *)&v33 - v11;
  result = __chkstk_darwin(v10);
  v37 = (char *)&v33 - v13;
  v41 = a3;
  v34 = a2;
  if (a3 != a2)
  {
    v14 = v43[9];
    v36 = (uint64_t (*)(char *, uint64_t, uint64_t))v43[2];
    v46 = v14 * (v41 - 1);
    v39 = v14;
    v15 = v14 * v41;
    v45 = a4;
LABEL_5:
    v16 = 0;
    v17 = v35;
    v40 = v15;
    while (1)
    {
      v18 = *v45;
      v19 = v15 + v16 + *v45;
      v21 = v36;
      v20 = v37;
      v36(v37, v19, v7);
      v22 = v7;
      v23 = v38;
      v24 = v21(v38, v46 + v16 + v18, v22);
      v44 = Recommendation.index.getter(v24);
      v25 = Recommendation.index.getter(v44);
      v26 = (void (*)(char *, uint64_t))v43[1];
      v27 = v23;
      v7 = v22;
      v26(v27, v22);
      v28 = v20;
      v15 = v40;
      result = ((uint64_t (*)(char *, uint64_t))v26)(v28, v22);
      if (v44 >= v25)
      {
LABEL_4:
        v46 += v39;
        v15 += v39;
        if (++v41 == v34)
          return result;
        goto LABEL_5;
      }
      v29 = *v45;
      if (!*v45)
        break;
      v30 = v29 + v15 + v16;
      v31 = v29 + v46 + v16;
      v32 = (void (*)(char *, uint64_t, uint64_t))v43[4];
      v32(v42, v30, v7);
      swift_arrayInitWithTakeFrontToBack(v30);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v32)(v31, v42, v7);
      v16 -= v39;
      if (v41 == ++v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10039A2DC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  char *v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t result;
  uint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;

  v8 = type metadata accessor for MediaMoment(0);
  v9 = *(_QWORD **)(v8 - 8);
  __chkstk_darwin(v8);
  v48 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v47 = (char *)&v42 - v12;
  v49 = v9[9];
  if (!v49)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v49 == -1)
    goto LABEL_62;
  v13 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v49 == -1)
    goto LABEL_63;
  v14 = (uint64_t)(a2 - a1) / v49;
  v52 = a1;
  v51 = a4;
  v15 = v13 / v49;
  if (v14 >= v13 / v49)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      v17 = v15 * v49;
      if (a4 < a2 || a2 + v17 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v28 = a4 + v17;
      v50 = a4 + v17;
      v52 = a2;
      if (v17 >= 1 && a1 < a2)
      {
        v30 = -v49;
        v43 = (void (*)(char *, unint64_t, uint64_t))v9[2];
        v44 = v9;
        v45 = a4;
        v46 = a1;
        do
        {
          v49 = a3 + v30;
          v31 = v47;
          v32 = v43;
          v43(v47, v28 + v30, v8);
          v33 = a2 + v30;
          v34 = v30;
          v35 = v48;
          v32(v48, v33, v8);
          sub_1000083D8(&qword_100830B68, (uint64_t (*)(uint64_t))&type metadata accessor for MediaMoment, (uint64_t)&protocol conformance descriptor for MediaMoment);
          LOBYTE(v32) = dispatch thunk of static Comparable.< infix(_:_:)(v31, v35, v8);
          v36 = (void (*)(char *, uint64_t))v9[1];
          v36(v35, v8);
          v36(v31, v8);
          if ((v32 & 1) != 0)
          {
            v30 = v34;
            v37 = v49;
            if (a3 < a2 || v49 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v49);
              v9 = v44;
              v38 = v45;
              v39 = v46;
            }
            else
            {
              v9 = v44;
              v38 = v45;
              v39 = v46;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront(v49);
            }
            v52 += v30;
          }
          else
          {
            v40 = v50;
            v50 += v34;
            v30 = v34;
            v37 = v49;
            if (a3 < v40 || v49 >= v40)
            {
              swift_arrayInitWithTakeFrontToBack(v49);
              v33 = a2;
              v9 = v44;
              v38 = v45;
              v39 = v46;
            }
            else
            {
              v9 = v44;
              v38 = v45;
              v39 = v46;
              if (a3 != v40)
                swift_arrayInitWithTakeBackToFront(v49);
              v33 = a2;
            }
          }
          v28 = v50;
          if (v50 <= v38)
            break;
          a2 = v33;
          a3 = v37;
        }
        while (v33 > v39);
      }
      goto LABEL_60;
    }
  }
  else if ((v14 & 0x8000000000000000) == 0)
  {
    v16 = v14 * v49;
    if (a4 < a1 || a1 + v16 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v46 = a4 + v16;
    v50 = a4 + v16;
    if (v16 >= 1 && a2 < a3)
    {
      v19 = (void (*)(char *, unint64_t, uint64_t))v9[2];
      do
      {
        v20 = a3;
        v21 = v47;
        v19(v47, a2, v8);
        v22 = v48;
        v19(v48, a4, v8);
        sub_1000083D8(&qword_100830B68, (uint64_t (*)(uint64_t))&type metadata accessor for MediaMoment, (uint64_t)&protocol conformance descriptor for MediaMoment);
        v23 = dispatch thunk of static Comparable.< infix(_:_:)(v21, v22, v8);
        v24 = (void (*)(char *, uint64_t))v9[1];
        v24(v22, v8);
        v24(v21, v8);
        v25 = v52;
        if ((v23 & 1) != 0)
        {
          v26 = a2 + v49;
          if (v52 < a2 || v52 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack(v52);
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v52 == a2)
              v25 = a2;
            else
              swift_arrayInitWithTakeBackToFront(v52);
          }
        }
        else
        {
          v27 = v51 + v49;
          if (v52 < v51 || v52 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack(v52);
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v52 != v51)
              swift_arrayInitWithTakeBackToFront(v52);
          }
          v51 = v27;
          v26 = a2;
        }
        v52 = v25 + v49;
        a4 = v51;
        if (v51 >= v46)
          break;
        a2 = v26;
      }
      while (v26 < a3);
    }
LABEL_60:
    sub_100147520(&v52, &v51, (uint64_t *)&v50);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10039A830(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t (*v27)(char *, unint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t (*v38)(char *);
  uint64_t (*v39)(char *);
  unint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  unint64_t v50;
  void (*v51)(_QWORD, _QWORD, _QWORD);
  unint64_t v52;
  unint64_t v53;
  uint64_t result;
  uint64_t v55;
  unint64_t v56;
  uint64_t (*v57)(char *);
  unint64_t v58;
  void (*v59)(_QWORD, _QWORD, _QWORD);
  unint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;

  v8 = type metadata accessor for Recommendation(0);
  v9 = __chkstk_darwin(v8);
  v61 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v55 - v11;
  v62 = v13;
  v14 = *(_QWORD *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_63;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_64;
  v16 = (uint64_t)(a2 - a1) / v14;
  v65 = a1;
  v64 = a4;
  v17 = v15 / v14;
  v58 = a4;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      v20 = v17 * v14;
      v21 = v58;
      if (v58 < a2 || a2 + v20 <= v58)
      {
        swift_arrayInitWithTakeFrontToBack(v58);
      }
      else if (v58 != a2)
      {
        swift_arrayInitWithTakeBackToFront(v58);
      }
      v35 = v21 + v20;
      v63 = v21 + v20;
      v65 = a2;
      if (v20 >= 1 && a1 < a2)
      {
        v37 = -v14;
        v38 = *(uint64_t (**)(char *))(v62 + 16);
        v56 = a1;
        v57 = v38;
        do
        {
          v60 = a3 + v37;
          v39 = v57;
          ((void (*)(char *, unint64_t, uint64_t))v57)(v12, v35 + v37, v8);
          v40 = a3;
          v41 = v8;
          v42 = v12;
          v43 = v61;
          v59 = (void (*)(_QWORD, _QWORD, _QWORD))(a2 + v37);
          v44 = v39(v61);
          v45 = v37;
          v46 = Recommendation.index.getter(v44);
          v47 = Recommendation.index.getter(v46);
          v48 = *(void (**)(char *, uint64_t))(v62 + 8);
          v49 = v43;
          v12 = v42;
          v8 = v41;
          v48(v49, v41);
          v48(v12, v41);
          if (v46 >= v47)
          {
            v53 = v63;
            v63 += v45;
            v37 = v45;
            a3 = v60;
            if (v40 < v53 || v60 >= v53)
            {
              swift_arrayInitWithTakeFrontToBack(v60);
              v51 = (void (*)(_QWORD, _QWORD, _QWORD))a2;
              v50 = v58;
            }
            else
            {
              v50 = v58;
              if (v40 != v53)
                swift_arrayInitWithTakeBackToFront(v60);
              v51 = (void (*)(_QWORD, _QWORD, _QWORD))a2;
            }
            v52 = v56;
          }
          else
          {
            v37 = v45;
            a3 = v60;
            if (v40 < a2 || v60 >= a2)
            {
              v51 = v59;
              swift_arrayInitWithTakeFrontToBack(v60);
              v50 = v58;
              v52 = v56;
            }
            else
            {
              v50 = v58;
              v51 = v59;
              v52 = v56;
              if (v40 != a2)
                swift_arrayInitWithTakeBackToFront(v60);
            }
            v65 += v37;
          }
          v35 = v63;
          if (v63 <= v50)
            break;
          a2 = (unint64_t)v51;
        }
        while ((unint64_t)v51 > v52);
      }
      goto LABEL_61;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = v16 * v14;
    v19 = v58;
    if (v58 < a1 || a1 + v18 <= v58)
    {
      swift_arrayInitWithTakeFrontToBack(v58);
    }
    else if (v58 != a1)
    {
      swift_arrayInitWithTakeBackToFront(v58);
    }
    v60 = v19 + v18;
    v63 = v19 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      v23 = v19;
      v24 = v61;
      v59 = *(void (**)(_QWORD, _QWORD, _QWORD))(v62 + 16);
      do
      {
        v25 = v14;
        v26 = a3;
        v27 = (uint64_t (*)(char *, unint64_t, uint64_t))v59;
        v59(v12, a2, v8);
        v28 = v27(v24, v23, v8);
        v29 = Recommendation.index.getter(v28);
        v30 = Recommendation.index.getter(v29);
        v31 = *(void (**)(char *, uint64_t))(v62 + 8);
        v31(v24, v8);
        v31(v12, v8);
        v32 = v65;
        if (v29 >= v30)
        {
          v14 = v25;
          v34 = v64 + v25;
          if (v65 < v64 || v65 >= v34)
          {
            swift_arrayInitWithTakeFrontToBack(v65);
            a3 = v26;
          }
          else
          {
            a3 = v26;
            if (v65 != v64)
              swift_arrayInitWithTakeBackToFront(v65);
          }
          v64 = v34;
          v33 = a2;
        }
        else
        {
          v14 = v25;
          v33 = a2 + v25;
          if (v65 < a2 || v65 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack(v65);
            a3 = v26;
          }
          else
          {
            a3 = v26;
            if (v65 == a2)
              v32 = a2;
            else
              swift_arrayInitWithTakeBackToFront(v65);
          }
        }
        v65 = v32 + v14;
        v23 = v64;
        if (v64 >= v60)
          break;
        a2 = v33;
      }
      while (v33 < a3);
    }
LABEL_61:
    sub_10014752C(&v65, &v64, (uint64_t *)&v63);
    return 1;
  }
LABEL_65:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10039AD60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t result;

  if (a2)
    return a2();
  return result;
}

uint64_t sub_10039AD84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10039AE10(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ServiceSubscription, (uint64_t)&unk_10079BF20, (uint64_t)sub_1003A3E5C);
}

uint64_t sub_10039ADA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10039AE10(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ContentAvailability, (uint64_t)&unk_10079BD18, (uint64_t)sub_1003A3D1C);
}

uint64_t sub_10039ADBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10039AE10(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for NoticePrivacyPreference, (uint64_t)&unk_10079BCA0, (uint64_t)sub_1003A3CAC);
}

uint64_t sub_10039ADD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10039AE10(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for IntroSheet, (uint64_t)&unk_10079BC28, (uint64_t)sub_1003A3C3C);
}

uint64_t sub_10039ADF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10039AE10(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for WhatsNewSheet, (uint64_t)&unk_10079BBB0, (uint64_t)sub_1003A3BCC);
}

uint64_t sub_10039AE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v11 = a4(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v15 = (char *)&v20 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v20 - v14, a1, v11);
  v16 = *(unsigned __int8 *)(v12 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = swift_allocObject(a5, v17 + v13, v16 | 7);
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v18 + v17, v15, v11);
  swift_retain(a3);
  return Promise.init(asyncOperation:)(a6, v18, (char *)&type metadata for () + 8);
}

uint64_t sub_10039AF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject(&unk_10079A0F8, 40, 7);
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain(a3);
  swift_errorRetain(a1);
  return Promise.init(asyncOperation:)(sub_1002AC8F0, v6, (char *)&type metadata for () + 8);
}

double sub_10039AF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  void (*v10)(uint64_t (*)(uint64_t), _QWORD *);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  double result;

  v9 = sub_100047110((uint64_t *)&unk_100836170);
  v10 = (void (*)(uint64_t (*)(uint64_t), _QWORD *))Promise.operation.getter(v9);
  v12 = v11;
  v13 = (_QWORD *)swift_allocObject(&unk_10079A0A8, 48, 7);
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = a4;
  v13[5] = a5;
  swift_retain(a2);
  swift_retain(a5);
  v10(sub_10039F524, v13);
  swift_release(v12);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_10039B038(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v15)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v10 = sub_100047110((uint64_t *)&unk_100836170);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    a5(a1);
    v15 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v10);
    v17 = v16;
    v18 = swift_allocObject(&unk_10079A0D0, 32, 7);
    *(_QWORD *)(v18 + 16) = a3;
    *(_QWORD *)(v18 + 24) = a4;
    swift_retain(a4);
    v15(sub_10039F514, v18);
    swift_release(v17);
    swift_release(v18);
    sub_100016864(a1, 1);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v19 = a1;
    v20 = 0;
    return a3(&v19);
  }
}

uint64_t sub_10039B170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, &qword_100822168, (uint64_t)&unk_10079B408, (uint64_t)sub_1003A35B8);
}

uint64_t sub_10039B18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, &qword_100820A48, (uint64_t)&unk_10079A440, (uint64_t)sub_10039FADC);
}

uint64_t sub_10039B1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  void (*v15)(uint64_t, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v14 = sub_100047110(a6);
  v15 = (void (*)(uint64_t, _QWORD *))Promise.operation.getter(v14);
  v17 = v16;
  v18 = (_QWORD *)swift_allocObject(a7, 48, 7);
  v18[2] = a4;
  v18[3] = a5;
  v18[4] = a1;
  v18[5] = a2;
  swift_retain(a5);
  swift_retain(a2);
  v15(a8, v18);
  swift_release(v17);
  return swift_release(v18);
}

uint64_t sub_10039B24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, &qword_100823048, (uint64_t)&unk_10079BF48, (uint64_t)sub_1003A3E74);
}

uint64_t sub_10039B268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, (uint64_t *)&unk_100836170, (uint64_t)&unk_10079A4B8, (uint64_t)sub_10039FB1C);
}

uint64_t sub_10039B284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, &qword_100823018, (uint64_t)&unk_10079BC50, (uint64_t)sub_1003A3C54);
}

uint64_t sub_10039B2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, &qword_100822E88, (uint64_t)&unk_10079BCC8, (uint64_t)sub_1003A3CC4);
}

uint64_t sub_10039B2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, (uint64_t *)&unk_100839710, (uint64_t)&unk_10079A120, (uint64_t)sub_10039F54C);
}

uint64_t sub_10039B2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, &qword_100824368, (uint64_t)&unk_10079BED0, (uint64_t)sub_1003A3D8C);
}

uint64_t sub_10039B2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, &qword_100830B18, (uint64_t)&unk_10079A508, (uint64_t)sub_10039FB38);
}

uint64_t sub_10039B310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, &qword_10082C3B0, (uint64_t)&unk_10079BBD8, (uint64_t)sub_1003A3BE4);
}

uint64_t sub_10039B32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, &qword_10082C3A8, (uint64_t)&unk_10079BB60, (uint64_t)sub_1003A3B74);
}

uint64_t sub_10039B348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, (uint64_t *)&unk_1008396A0, (uint64_t)&unk_10079A9E0, (uint64_t)sub_1003A1168);
}

uint64_t sub_10039B364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, (uint64_t *)&unk_1008364E0, (uint64_t)&unk_10079A8F0, (uint64_t)sub_1003A10C0);
}

uint64_t sub_10039B380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, (uint64_t *)&unk_1008364E0, (uint64_t)&unk_10079A940, (uint64_t)sub_1003A1118);
}

uint64_t sub_10039B39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, &qword_100822168, (uint64_t)&unk_10079B1D8, (uint64_t)sub_1003A34D8);
}

uint64_t sub_10039B3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10039B1A8(a1, a2, a3, a4, a5, (uint64_t *)&unk_100839690, (uint64_t)&unk_10079A990, (uint64_t)sub_1003A1134);
}

void sub_10039B3D4(uint64_t a1, char a2, void (*a3)(uint64_t *, __n128), uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __n128 v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v15 = sub_100047110(a7);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1;
  if ((a2 & 1) != 0)
  {
    v25 = 1;
    swift_errorRetain(a1);
    a5(&v24);
    sub_1003A425C(a1, 1);
  }
  else
  {
    v19 = swift_bridgeObjectRetain(a1);
    a3(&v24, v19);
    v20 = (void (*)(uint64_t, uint64_t))Promise.operation.getter(v15);
    v22 = v21;
    v23 = swift_allocObject(a8, 32, 7);
    *(_QWORD *)(v23 + 16) = a5;
    *(_QWORD *)(v23 + 24) = a6;
    swift_retain(a6);
    v20(a9, v23);
    swift_release(v22);
    swift_release(v23);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    swift_bridgeObjectRelease(v24);
  }
}

uint64_t sub_10039B520(uint64_t a1, char a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v11 = sub_100047110((uint64_t *)&unk_100836170);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v21 = a1;
    v22 = 1;
    swift_errorRetain(a1);
    a5(&v21);
    return sub_100016864(a1, 1);
  }
  else
  {
    a3(v13);
    v16 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v11);
    v18 = v17;
    v19 = swift_allocObject(&unk_10079A4E0, 32, 7);
    *(_QWORD *)(v19 + 16) = a5;
    *(_QWORD *)(v19 + 24) = a6;
    swift_retain(a6);
    v16(sub_10039F514, v19);
    swift_release(v18);
    swift_release(v19);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_10039B658(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t (*a6)(_QWORD), uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  void (*v31)(char *);
  uint64_t v32;
  void (*v33)(uint64_t *);
  uint64_t v34;
  uint64_t v35;
  char v36;

  v32 = a8;
  v33 = a4;
  v34 = a5;
  v30[1] = a3;
  v31 = a2;
  v12 = sub_100047110((uint64_t *)&unk_100836170);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a6(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v30 - v18;
  v20 = sub_100047110(a7);
  __chkstk_darwin(v20);
  v22 = (_QWORD *)((char *)v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100021CC0(a1, (uint64_t)v22, a7);
  if (swift_getEnumCaseMultiPayload(v22, v20) == 1)
  {
    v35 = *v22;
    v23 = v35;
    v36 = 1;
    swift_errorRetain(v35);
    v33(&v35);
    swift_errorRelease(v23);
    return swift_errorRelease(v23);
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v17 + 32))(v19, v22, v16);
    v31(v19);
    v25 = (void (*)(uint64_t, uint64_t))Promise.operation.getter(v12);
    v27 = v26;
    v28 = swift_allocObject(v32, 32, 7);
    *(_QWORD *)(v28 + 16) = v33;
    v29 = v34;
    *(_QWORD *)(v28 + 24) = v34;
    swift_retain(v29);
    v25(a9, v28);
    swift_release(v27);
    swift_release(v28);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
}

void sub_10039B854(uint64_t a1, char a2, void (*a3)(uint64_t *, __n128), uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  void (*v16)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  uint64_t v22;
  char v23;

  v11 = sub_100047110((uint64_t *)&unk_100836170);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1;
  if ((a2 & 1) != 0)
  {
    v23 = 1;
    swift_errorRetain(a1);
    a5(&v22);
    sub_1003A425C(a1, 1);
  }
  else
  {
    v15 = swift_bridgeObjectRetain(a1);
    a3(&v22, v15);
    v16 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v11);
    v18 = v17;
    v19 = swift_allocObject(&unk_10079A530, 32, 7);
    *(_QWORD *)(v19 + 16) = a5;
    *(_QWORD *)(v19 + 24) = a6;
    v20 = swift_retain(a6);
    v16(sub_10039F514, v19, v20);
    swift_release(v18);
    v21 = swift_release(v19);
    (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v21);
    swift_bridgeObjectRelease(v22);
  }
}

uint64_t sub_10039B9A4(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void (*v20)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  __n128 v26;
  uint64_t v27;
  void (*v28)(char *);
  void (*v29)(uint64_t *);
  uint64_t v30;
  uint64_t v31;
  char v32;

  v29 = a4;
  v30 = a5;
  v27 = a3;
  v28 = a2;
  v6 = sub_100047110(&qword_100830B40);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CatalogWorkoutDetail(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100830B50);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100021CC0(a1, (uint64_t)v17, &qword_100830B50);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    v31 = *v17;
    v18 = v31;
    v32 = 1;
    swift_errorRetain(v31);
    v29(&v31);
    swift_errorRelease(v18);
    return swift_errorRelease(v18);
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v12 + 32))(v14, v17, v11);
    v28(v14);
    v20 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v6);
    v22 = v21;
    v23 = swift_allocObject(&unk_10079AFD0, 32, 7);
    *(_QWORD *)(v23 + 16) = v29;
    v24 = v30;
    *(_QWORD *)(v23 + 24) = v30;
    v25 = swift_retain(v24);
    v20(sub_10039F514, v23, v25);
    swift_release(v22);
    v26 = swift_release(v23);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_10039BBA4(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  void (*v21)(uint64_t (*)(), uint64_t, __n128);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  _QWORD v28[2];
  void (*v29)(char *);
  uint64_t v30;
  void (*v31)(uint64_t *);
  uint64_t v32;

  v31 = a4;
  v32 = a5;
  v28[1] = a3;
  v29 = a2;
  v6 = sub_100047110((uint64_t *)&unk_1008364E0);
  v30 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NavigationRequest(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(qword_1008364F0);
  __chkstk_darwin(v13);
  v15 = (_QWORD *)((char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v18 = (_QWORD *)((char *)v28 - v17);
  sub_100021CC0(a1, (uint64_t)v28 - v17, qword_1008364F0);
  if (swift_getEnumCaseMultiPayload(v18, v13) == 1)
  {
    v19 = *v18;
    *v15 = *v18;
    swift_storeEnumTagMultiPayload(v15, v13, 1);
    swift_errorRetain(v19);
    v31(v15);
    swift_errorRelease(v19);
    return sub_10001BE90((uint64_t)v15, qword_1008364F0);
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 32))(v12, v18, v9);
    v29(v12);
    v21 = (void (*)(uint64_t (*)(), uint64_t, __n128))Promise.operation.getter(v6);
    v23 = v22;
    v24 = swift_allocObject(&unk_10079A968, 32, 7);
    *(_QWORD *)(v24 + 16) = v31;
    v25 = v32;
    *(_QWORD *)(v24 + 24) = v32;
    v26 = swift_retain(v25);
    v21(sub_100355F10, v24, v26);
    swift_release(v23);
    v27 = swift_release(v24);
    (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v8, v6, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void sub_10039BDD8(void *a1, char a2, void (*a3)(id *), uint64_t a4, void (*a5)(id *), uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char v25;

  v15 = sub_100047110(a7);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1;
  if ((a2 & 1) != 0)
  {
    v25 = 1;
    swift_errorRetain(a1);
    a5(&v24);
    sub_1003A34FC(a1, 1);
  }
  else
  {
    v19 = a1;
    a3(&v24);
    v20 = (void (*)(uint64_t, uint64_t))Promise.operation.getter(v15);
    v22 = v21;
    v23 = swift_allocObject(a8, 32, 7);
    *(_QWORD *)(v23 + 16) = a5;
    *(_QWORD *)(v23 + 24) = a6;
    swift_retain(a6);
    v20(a9, v23);
    swift_release(v22);
    swift_release(v23);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);

  }
}

uint64_t sub_10039BF20(uint64_t result, uint64_t (*a2)(uint64_t *))
{
  char v2;
  uint64_t v3;
  char v4;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_QWORD *)result;
  v4 = v2;
  if (a2)
    return a2(&v3);
  return result;
}

uint64_t sub_10039BF60(void **a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  _QWORD *v6;
  id v7;

  v5 = *a1;
  v6 = (_QWORD *)swift_allocObject(&unk_10079B458, 40, 7);
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  v7 = v5;
  swift_retain(a3);
  return Promise.init(asyncOperation:)(sub_10016B0AC, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_10039BFE0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10039C008(a1, a2, a3, (uint64_t)&unk_10079A490, (uint64_t)sub_1003A43CC);
}

uint64_t sub_10039BFF4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10039C008(a1, a2, a3, (uint64_t)&unk_10079A170, (uint64_t)sub_1003A43CC);
}

uint64_t sub_10039C008(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = *a1;
  v9 = (_QWORD *)swift_allocObject(a4, 40, 7);
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = v8;
  swift_bridgeObjectRetain(v8);
  swift_retain(a3);
  return Promise.init(asyncOperation:)(a5, v9, (char *)&type metadata for () + 8);
}

uint64_t sub_10039C088(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v5 = *a1;
  v6 = (_QWORD *)swift_allocObject(&unk_10079C1C8, 40, 7);
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  swift_bridgeObjectRetain(v5);
  swift_retain(a3);
  v7 = sub_100047110(&qword_100820A88);
  return Promise.init(asyncOperation:)(sub_1003A42B0, v6, v7);
}

uint64_t sub_10039C110(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t *), uint64_t a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v8 = *a5;
  a3(&v9, &v8);
  v6 = v9;
  v10 = 0;
  a1(&v9);
  return sub_1003A425C(v6, 0);
}

_QWORD *sub_10039C194(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  __n128 v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD v30[2];
  char *v31;
  char *v32;
  _QWORD *v33;

  v5 = sub_100047110(&qword_100830B00);
  __chkstk_darwin(v5);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CatalogWorkout(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v32 = (char *)v30 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v30[1] = v2;
    swift_bridgeObjectRetain(a1);
    v30[0] = a1;
    v15 = (uint64_t *)(a1 + 40);
    v33 = _swiftEmptyArrayStorage;
    v31 = v11;
    while (1)
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v17 = *(v15 - 1);
        v16 = *v15;
        swift_bridgeObjectRetain(*v15);
        v18 = sub_100438F74(v17, v16);
        if ((v19 & 1) != 0)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, *(_QWORD *)(a2 + 56) + *(_QWORD *)(v9 + 72) * v18, v8);
          v20 = 0;
        }
        else
        {
          v20 = 1;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v20, 1, v8);
        v21 = swift_bridgeObjectRelease(v16);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v21) != 1)
        {
          v22 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
          v23 = v32;
          v22(v32, v7, v8);
          v22(v11, v23, v8);
          if ((swift_isUniquelyReferenced_nonNull_native(v33) & 1) != 0)
            v24 = (unint64_t)v33;
          else
            v24 = sub_100141138(0, v33[2] + 1, 1, (unint64_t)v33);
          v26 = *(_QWORD *)(v24 + 16);
          v25 = *(_QWORD *)(v24 + 24);
          if (v26 >= v25 >> 1)
            v24 = sub_100141138(v25 > 1, v26 + 1, 1, v24);
          *(_QWORD *)(v24 + 16) = v26 + 1;
          v27 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
          v33 = (_QWORD *)v24;
          v28 = v24 + v27 + *(_QWORD *)(v9 + 72) * v26;
          v11 = v31;
          v22((char *)v28, v31, v8);
          goto LABEL_5;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
      }
      sub_10001BE90((uint64_t)v7, &qword_100830B00);
LABEL_5:
      v15 += 2;
      if (!--v14)
      {
        swift_bridgeObjectRelease(v30[0]);
        return v33;
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10039C43C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  NSString v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  void *v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t (**v91)(uint64_t *);
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  char *v105;
  void (*v106)(char *, uint64_t);
  void (*v107)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  uint64_t v133;
  _QWORD *v134;
  __int128 v135;
  __int128 v136;
  _QWORD v137[2];
  _QWORD v138[5];

  v131 = a2;
  v122 = sub_100047110(&qword_100820A48);
  v121 = *(_QWORD *)(v122 - 8);
  v11 = *(_QWORD *)(v121 + 64);
  v12 = __chkstk_darwin(v122);
  v13 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v127 = (char *)&v111 - v14;
  v15 = sub_100047110((uint64_t *)&unk_100836170);
  v125 = *(_QWORD *)(v15 - 8);
  v16 = *(_QWORD *)(v125 + 64);
  v17 = __chkstk_darwin(v15);
  v123 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v124 = (char *)&v111 - v19;
  __chkstk_darwin(v18);
  v126 = (char *)&v111 - v20;
  v21 = type metadata accessor for CatalogLockupPlaceholder(0);
  v129 = *(_QWORD *)(v21 - 8);
  v130 = v21;
  __chkstk_darwin(v21);
  v128 = (char *)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (_QWORD *)swift_allocObject(&unk_10079A2B0, 48, 7);
  v23[2] = a3;
  v23[3] = a4;
  v23[4] = a5;
  v23[5] = a6;
  v138[3] = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  v138[4] = &off_10078FAE8;
  v138[0] = a1;
  swift_retain(a3);
  v132 = a4;
  v24 = a1;
  v133 = a5;
  v134 = (_QWORD *)a6;
  sub_10003AFE0(a5, a6);
  v25 = objc_msgSend(v24, "metadata");
  if (!v25)
  {
    v135 = 0u;
    v136 = 0u;
    goto LABEL_10;
  }
  v26 = v25;
  v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v28 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  v30 = v29;
  if (!*(_QWORD *)(v27 + 16) || (v31 = sub_100438F74(v28, v29), (v32 & 1) == 0))
  {
    v135 = 0u;
    v136 = 0u;
    swift_bridgeObjectRelease(v30);
    swift_bridgeObjectRelease(v27);
    goto LABEL_10;
  }
  sub_10003E9BC(*(_QWORD *)(v27 + 56) + 32 * v31, (uint64_t)&v135);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v27);
  if (!*((_QWORD *)&v136 + 1))
  {
LABEL_10:
    v33 = sub_10001BE90((uint64_t)&v135, (uint64_t *)&unk_100828420);
    goto LABEL_11;
  }
  v33 = swift_dynamicCast(v137, &v135, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if (!(_DWORD)v33)
  {
LABEL_11:
    v56 = static os_log_type_t.error.getter(v33);
    v57 = (void *)HKLogActivity;
    v58 = sub_100047110((uint64_t *)&unk_100827460);
    v59 = swift_allocObject(v58, 112, 7);
    *(_OWORD *)(v59 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v59 + 56) = &type metadata for String;
    v60 = sub_100038CF8();
    *(_QWORD *)(v59 + 64) = v60;
    *(_QWORD *)(v59 + 32) = 0xD00000000000002ALL;
    *(_QWORD *)(v59 + 40) = 0x80000001006892D0;
    v61 = (void *)v138[0];
    v62 = v57;
    v63 = objc_msgSend(v61, "description");
    v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
    v66 = v65;

    *(_QWORD *)(v59 + 96) = &type metadata for String;
    *(_QWORD *)(v59 + 104) = v60;
    *(_QWORD *)(v59 + 72) = v64;
    *(_QWORD *)(v59 + 80) = v66;
    os_log(_:dso:log:_:_:)(v56, &_mh_execute_header, v62, "[seymour] %@ failed to load catalog workout identifier for catalog item: %@", 75, 2, v59);

    swift_bridgeObjectRelease(v59);
    sub_1005EDB6C(0, a3, v132, v133, (uint64_t)v134);
    goto LABEL_12;
  }
  v112 = v15;
  v120 = v137[0];
  v119 = v137[1];
  v118 = static os_log_type_t.default.getter(v33);
  v34 = (void *)HKLogActivity;
  v115 = sub_100047110((uint64_t *)&unk_100827460);
  v35 = swift_allocObject(v115, 112, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v35 + 56) = &type metadata for String;
  v36 = sub_100038CF8();
  *(_QWORD *)(v35 + 64) = v36;
  *(_QWORD *)(v35 + 32) = 0xD00000000000002ALL;
  *(_QWORD *)(v35 + 40) = 0x80000001006892D0;
  v113 = 0x80000001006892D0;
  v37 = (void *)v138[0];
  v38 = v34;
  v39 = objc_msgSend(v37, "description");
  v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v116 = v40;

  *(_QWORD *)(v35 + 96) = &type metadata for String;
  *(_QWORD *)(v35 + 104) = v36;
  v114 = v36;
  v41 = v116;
  *(_QWORD *)(v35 + 72) = v117;
  *(_QWORD *)(v35 + 80) = v41;
  os_log(_:dso:log:_:_:)(v118, &_mh_execute_header, v38, "[seymour] %@ fetching catalog item view model for catalog item: %@", 66, 2, v35);

  swift_bridgeObjectRelease(v35);
  v42 = v131;
  v43 = *(void **)(v131 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogItemViewModelCache);
  v44 = v119;
  v45 = String._bridgeToObjectiveC()();
  v46 = objc_msgSend(v43, "objectForKey:", v45);

  if (v46)
  {
    v48 = static os_log_type_t.default.getter(v47);
    v49 = (void *)HKLogActivity;
    v50 = swift_allocObject(v115, 152, 7);
    *(_OWORD *)(v50 + 16) = xmmword_100624A40;
    v51 = v114;
    *(_QWORD *)(v50 + 56) = &type metadata for String;
    *(_QWORD *)(v50 + 64) = v51;
    v52 = v113;
    *(_QWORD *)(v50 + 32) = 0xD00000000000002ALL;
    *(_QWORD *)(v50 + 40) = v52;
    *(_QWORD *)(v50 + 96) = &type metadata for String;
    *(_QWORD *)(v50 + 104) = v51;
    *(_QWORD *)(v50 + 72) = v120;
    *(_QWORD *)(v50 + 80) = v44;
    *(_QWORD *)(v50 + 136) = type metadata accessor for CatalogItemViewModel(0);
    *(_QWORD *)(v50 + 144) = sub_1000083D8(&qword_100820A60, type metadata accessor for CatalogItemViewModel, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v50 + 112) = v46;
    v53 = v49;
    v54 = v46;
    os_log(_:dso:log:_:_:)(v48, &_mh_execute_header, v53, "[seymour] %@ returning cached catalog item view model for catalog item identifier: %@, catalog item view model: %@", 114, 2, v50);

    swift_bridgeObjectRelease(v50);
    v55 = v54;
    sub_1005EDB6C((char *)v46, a3, v132, v133, (uint64_t)v134);

  }
  else
  {
    v68 = swift_allocObject(&unk_100799F18, 24, 7);
    swift_unknownObjectWeakInit(v68 + 16, v42);
    v69 = (_QWORD *)swift_allocObject(&unk_10079A2D8, 56, 7);
    v134 = v69;
    v70 = v120;
    v69[2] = v68;
    v69[3] = v70;
    v69[4] = v44;
    v69[5] = sub_10039FA2C;
    v69[6] = v23;
    sub_1000252E0((uint64_t)v138, (uint64_t)&v135);
    v71 = v44;
    v72 = swift_allocObject(&unk_10079A300, 72, 7);
    v133 = v72;
    sub_10002411C(&v135, v72 + 16);
    *(_QWORD *)(v72 + 56) = sub_10039FA2C;
    *(_QWORD *)(v72 + 64) = v23;
    swift_retain_n(v23, 2);
    v73 = swift_bridgeObjectRetain(v71);
    v74 = v128;
    CatalogLockupPlaceholder.init(identifier:referenceType:editorialCardIdentifier:)(v70, v71, 8, 0, 1, 0, 0, v73);
    v75 = *(_QWORD *)(v42 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24);
    v132 = *(id *)(v42 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 32);
    sub_100016804((_QWORD *)(v42 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient), v75);
    v76 = sub_100047110(&qword_100820A58);
    v77 = v129;
    v78 = *(unsigned __int8 *)(v129 + 80);
    v79 = (v78 + 32) & ~v78;
    v80 = swift_allocObject(v76, v79 + *(_QWORD *)(v129 + 72), v78 | 7);
    *(_OWORD *)(v80 + 16) = xmmword_100622F90;
    (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v80 + v79, v74, v130);
    v81 = v127;
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)(33, v80, v75, v132);
    swift_bridgeObjectRelease(v80);
    v82 = swift_allocObject(&unk_10079A328, 32, 7);
    v83 = (uint64_t)v134;
    *(_QWORD *)(v82 + 16) = sub_10039FA3C;
    *(_QWORD *)(v82 + 24) = v83;
    v84 = swift_allocObject(&unk_10079A350, 32, 7);
    *(_QWORD *)(v84 + 16) = sub_10039FA4C;
    *(_QWORD *)(v84 + 24) = v82;
    v85 = v121;
    v86 = v122;
    (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v13, v81, v122);
    v87 = *(unsigned __int8 *)(v85 + 80);
    v88 = (v87 + 16) & ~v87;
    v89 = (v11 + v88 + 7) & 0xFFFFFFFFFFFFFFF8;
    v90 = swift_allocObject(&unk_10079A378, v89 + 16, v87 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v85 + 32))(v90 + v88, v13, v86);
    v91 = (uint64_t (**)(uint64_t *))(v90 + v89);
    *v91 = sub_10039FA70;
    v91[1] = (uint64_t (*)(uint64_t *))v84;
    swift_retain(v83);
    v132 = (char *)&type metadata for () + 8;
    v92 = v124;
    Promise.init(asyncOperation:)(sub_10039FAA4, v90, (char *)&type metadata for () + 8);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v127, v86);
    v93 = swift_allocObject(&unk_10079A3A0, 32, 7);
    v94 = v133;
    *(_QWORD *)(v93 + 16) = sub_10010FF98;
    *(_QWORD *)(v93 + 24) = v94;
    v95 = swift_allocObject(&unk_10079A3C8, 32, 7);
    *(_QWORD *)(v95 + 16) = sub_1003A43D0;
    *(_QWORD *)(v95 + 24) = v93;
    v96 = v125;
    v97 = v123;
    v98 = v112;
    (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v123, v92, v112);
    v99 = *(unsigned __int8 *)(v96 + 80);
    v100 = (v99 + 16) & ~v99;
    v101 = (v16 + v100 + 7) & 0xFFFFFFFFFFFFFFF8;
    v102 = swift_allocObject(&unk_10079A3F0, v101 + 16, v99 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v96 + 32))(v102 + v100, v97, v98);
    v103 = (_QWORD *)(v102 + v101);
    *v103 = sub_1001104C4;
    v103[1] = v95;
    v104 = v94;
    swift_retain(v94);
    v105 = v126;
    Promise.init(asyncOperation:)(sub_10039F50C, v102, v132);
    v106 = *(void (**)(char *, uint64_t))(v96 + 8);
    v106(v92, v98);
    v107 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v98);
    v109 = v108;
    v110 = swift_allocObject(&unk_10079A418, 32, 7);
    *(_QWORD *)(v110 + 16) = 0;
    *(_QWORD *)(v110 + 24) = 0;
    v107(sub_10039F514, v110);
    swift_release(v134);
    swift_release(v104);
    swift_release(v109);
    swift_release(v110);
    v106(v105, v98);
    (*(void (**)(char *, uint64_t))(v129 + 8))(v128, v130);
  }
LABEL_12:
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v138);
  return swift_release(v23);
}

uint64_t sub_10039CEB0(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, void *a5, void *a6, void (*a7)(void), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  double v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v50;
  __n128 v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  void (*v82)(char *, uint64_t);
  void (*v83)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  unint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t, uint64_t);
  id v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  id v102;
  char *v103;
  char *v104;
  uint64_t v105;
  void (*v106)(void);
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  _QWORD *v120;
  char v121[32];

  v118 = a1;
  v119 = a3;
  v14 = sub_100047110(&qword_100830B20);
  v110 = *(_QWORD *)(v14 - 8);
  v111 = v14;
  v15 = __chkstk_darwin(v14);
  v107 = v16;
  v108 = (char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v109 = (char *)&v99 - v17;
  v117 = sub_100047110((uint64_t *)&unk_100836170);
  v115 = *(_QWORD *)(v117 - 8);
  v18 = __chkstk_darwin(v117);
  v113 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v114 = (char *)&v99 - v21;
  v112 = v22;
  __chkstk_darwin(v20);
  v116 = (char *)&v99 - v23;
  v24 = sub_100047110(&qword_1008239C0);
  v25 = __chkstk_darwin(v24);
  v104 = (char *)&v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)&v99 - v27;
  v30 = type metadata accessor for Trainer(0, v29);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v103 = (char *)&v99 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = (_QWORD *)swift_allocObject(&unk_10079AA30, 56, 7);
  v33[2] = a4;
  v33[3] = a5;
  v33[4] = a6;
  v33[5] = a7;
  v120 = v33;
  v33[6] = a8;
  v105 = a4;
  swift_retain(a4);
  v102 = a5;
  v34 = a6;
  v106 = a7;
  v35 = sub_10003AFE0((uint64_t)a7, a8);
  v36 = static os_log_type_t.default.getter(v35);
  v37 = (void *)HKLogActivity;
  v101 = sub_100047110((uint64_t *)&unk_100827460);
  v38 = swift_allocObject(v101, 112, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v38 + 56) = &type metadata for String;
  v39 = sub_100038CF8();
  v100 = (unint64_t)"tails for identifier: %@";
  *(_QWORD *)(v38 + 32) = 0xD000000000000024;
  *(_QWORD *)(v38 + 40) = 0x800000010069C3E0;
  *(_QWORD *)(v38 + 96) = &type metadata for String;
  *(_QWORD *)(v38 + 104) = v39;
  v40 = v118;
  *(_QWORD *)(v38 + 64) = v39;
  *(_QWORD *)(v38 + 72) = v40;
  *(_QWORD *)(v38 + 80) = a2;
  v41 = v37;
  *(_QWORD *)&v42 = swift_bridgeObjectRetain(a2).n128_u64[0];
  os_log(_:dso:log:_:_:)(v36, &_mh_execute_header, v41, "[seymour] %@ fetching trainer details for identifier: %@", 56, 2, v38, v42);

  swift_bridgeObjectRelease(v38);
  v43 = v119;
  v44 = &v119[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_trainerCache];
  swift_beginAccess(&v119[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_trainerCache], v121, 0, 0);
  v45 = *(_QWORD *)v44;
  if (*(_QWORD *)(v45 + 16))
  {
    v99 = a8;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(v45);
    v46 = v40;
    v47 = sub_100438F74(v40, a2);
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v31 + 16))(v28, *(_QWORD *)(v45 + 56) + *(_QWORD *)(v31 + 72) * v47, v30);
      v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v49(v28, 0, 1, v30);
    }
    else
    {
      v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v49(v28, 1, 1, v30);
    }
    v50 = v120;
    swift_bridgeObjectRelease(a2);
    v51 = swift_bridgeObjectRelease(v45);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v31 + 48))(v28, 1, v30, v51) != 1)
    {
      v87 = v103;
      v88 = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))(v103, v28, v30);
      LODWORD(v119) = static os_log_type_t.default.getter(v88);
      v89 = (void *)HKLogActivity;
      v90 = swift_allocObject(v101, 152, 7);
      *(_OWORD *)(v90 + 16) = xmmword_100624A40;
      *(_QWORD *)(v90 + 56) = &type metadata for String;
      *(_QWORD *)(v90 + 64) = v39;
      v91 = v100 | 0x8000000000000000;
      *(_QWORD *)(v90 + 32) = 0xD000000000000024;
      *(_QWORD *)(v90 + 40) = v91;
      *(_QWORD *)(v90 + 96) = &type metadata for String;
      *(_QWORD *)(v90 + 104) = v39;
      *(_QWORD *)(v90 + 72) = v46;
      *(_QWORD *)(v90 + 80) = a2;
      swift_bridgeObjectRetain(a2);
      v92 = v49;
      v93 = v89;
      v94 = Trainer.description.getter();
      *(_QWORD *)(v90 + 136) = &type metadata for String;
      *(_QWORD *)(v90 + 144) = v39;
      *(_QWORD *)(v90 + 112) = v94;
      *(_QWORD *)(v90 + 120) = v95;
      os_log(_:dso:log:_:_:)(v119, &_mh_execute_header, v93, "[seymour] %@ returning cached trainer for identifier: %@, trainer: %@", 69, 2, v90);

      v96 = swift_bridgeObjectRelease(v90);
      v97 = (uint64_t)v104;
      (*(void (**)(char *, char *, uint64_t, __n128))(v31 + 16))(v104, v87, v30, v96);
      v92((char *)v97, 0, 1, v30);
      sub_100448B7C(v97, v105, v102, v106, v99);
      sub_10001BE90(v97, &qword_1008239C0);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v87, v30);
      return swift_release(v120);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v28, 1, 1, v30);
    v50 = v120;
    v46 = v40;
  }
  sub_10001BE90((uint64_t)v28, &qword_1008239C0);
  v52 = swift_allocObject(&unk_100799F18, 24, 7);
  swift_unknownObjectWeakInit(v52 + 16, v43);
  v53 = (_QWORD *)swift_allocObject(&unk_10079AA58, 56, 7);
  v53[2] = v52;
  v53[3] = v46;
  v53[4] = a2;
  v53[5] = sub_1003A1194;
  v53[6] = v50;
  v54 = (_QWORD *)swift_allocObject(&unk_10079AA80, 48, 7);
  v54[2] = v46;
  v54[3] = a2;
  v54[4] = sub_1003A1194;
  v54[5] = v50;
  v55 = &v43[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient];
  v56 = *(_QWORD *)&v43[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24];
  v57 = *(_QWORD *)&v43[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 32];
  sub_100016804(v55, v56);
  swift_bridgeObjectRetain_n(a2, 2);
  swift_retain_n(v50, 2);
  v58 = v46;
  v59 = v109;
  dispatch thunk of CatalogClientProtocol.fetchRemoteTrainerDetail(_:)(v58, a2, v56, v57);
  v60 = swift_allocObject(&unk_10079AAA8, 32, 7);
  *(_QWORD *)(v60 + 16) = sub_1003A03C4;
  *(_QWORD *)(v60 + 24) = v53;
  v61 = swift_allocObject(&unk_10079AAD0, 32, 7);
  *(_QWORD *)(v61 + 16) = sub_1003A43D0;
  *(_QWORD *)(v61 + 24) = v60;
  v63 = v110;
  v62 = v111;
  v64 = v108;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v108, v59, v111);
  v65 = *(unsigned __int8 *)(v63 + 80);
  v66 = (v65 + 16) & ~v65;
  v67 = (v107 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
  v68 = swift_allocObject(&unk_10079AAF8, v67 + 16, v65 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v68 + v66, v64, v62);
  v69 = (_QWORD *)(v68 + v67);
  *v69 = sub_1003A4400;
  v69[1] = v61;
  swift_retain(v53);
  v119 = (char *)&type metadata for () + 8;
  v70 = v114;
  Promise.init(asyncOperation:)(sub_1003A0424, v68, (char *)&type metadata for () + 8);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v59, v62);
  v71 = swift_allocObject(&unk_10079AB20, 32, 7);
  *(_QWORD *)(v71 + 16) = sub_1003A42C0;
  *(_QWORD *)(v71 + 24) = v54;
  v72 = swift_allocObject(&unk_10079AB48, 32, 7);
  *(_QWORD *)(v72 + 16) = sub_1003A43D0;
  *(_QWORD *)(v72 + 24) = v71;
  v73 = v115;
  v74 = v113;
  v75 = v117;
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v113, v70, v117);
  v76 = *(unsigned __int8 *)(v73 + 80);
  v77 = (v76 + 16) & ~v76;
  v78 = (v112 + v77 + 7) & 0xFFFFFFFFFFFFFFF8;
  v79 = swift_allocObject(&unk_10079AB70, v78 + 16, v76 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v73 + 32))(v79 + v77, v74, v75);
  v80 = (_QWORD *)(v79 + v78);
  *v80 = sub_1001104C4;
  v80[1] = v72;
  swift_retain(v54);
  v81 = v116;
  Promise.init(asyncOperation:)(sub_10039F50C, v79, v119);
  v82 = *(void (**)(char *, uint64_t))(v73 + 8);
  v82(v70, v75);
  v83 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v75);
  v85 = v84;
  v86 = swift_allocObject(&unk_10079AB98, 32, 7);
  *(_QWORD *)(v86 + 16) = 0;
  *(_QWORD *)(v86 + 24) = 0;
  v83(sub_10039F514, v86);
  swift_release(v53);
  swift_release(v54);
  swift_release(v85);
  swift_release(v86);
  v82(v81, v75);
  return swift_release(v120);
}

uint64_t sub_10039D714(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  NSString v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  void *v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t (**v102)(uint64_t *);
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  char *v115;
  void (*v116)(char *, uint64_t);
  void (*v117)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  __int128 v145;
  __int128 v146;
  _QWORD v147[2];
  _QWORD v148[5];

  v140 = a2;
  v132 = sub_100047110(&qword_100820A48);
  v131 = *(_QWORD *)(v132 - 8);
  v13 = __chkstk_darwin(v132);
  v130 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = v14;
  __chkstk_darwin(v13);
  v136 = (char *)&v121 - v15;
  v16 = sub_100047110((uint64_t *)&unk_100836170);
  v135 = *(_QWORD *)(v16 - 8);
  v17 = *(_QWORD *)(v135 + 64);
  v18 = __chkstk_darwin(v16);
  v133 = (char *)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v134 = (char *)&v121 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v121 - v21;
  v23 = type metadata accessor for CatalogLockupPlaceholder(0);
  v138 = *(_QWORD *)(v23 - 8);
  v139 = v23;
  __chkstk_darwin(v23);
  v137 = (char *)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (_QWORD *)swift_allocObject(&unk_10079ABC0, 56, 7);
  v25[2] = a3;
  v25[3] = a4;
  v25[4] = a5;
  v25[5] = a6;
  v25[6] = a7;
  v148[3] = type metadata accessor for MindfulnessSessionViewModel(0);
  v148[4] = &off_10078FAD0;
  v148[0] = a1;
  v142 = a3;
  swift_retain(a3);
  v26 = a4;
  v27 = a5;
  v28 = a1;
  v143 = a6;
  v144 = (_QWORD *)a7;
  v29 = sub_10003AFE0(a6, a7);
  v30 = MindfulnessSessionViewModel.metadata.getter(v29);
  v141 = (uint64_t)v27;
  if (!v30)
  {
    v145 = 0u;
    v146 = 0u;
    goto LABEL_10;
  }
  v31 = v30;
  v128 = v22;
  v32 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  v34 = v33;
  if (!*(_QWORD *)(v31 + 16) || (v35 = sub_100438F74(v32, v33), (v36 & 1) == 0))
  {
    v145 = 0u;
    v146 = 0u;
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v31);
    goto LABEL_10;
  }
  sub_10003E9BC(*(_QWORD *)(v31 + 56) + 32 * v35, (uint64_t)&v145);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v31);
  if (!*((_QWORD *)&v146 + 1))
  {
LABEL_10:
    v65 = v26;
    v37 = sub_10001BE90((uint64_t)&v145, (uint64_t *)&unk_100828420);
LABEL_11:
    v66 = static os_log_type_t.error.getter(v37);
    v67 = (void *)HKLogActivity;
    v68 = sub_100047110((uint64_t *)&unk_100827460);
    v69 = swift_allocObject(v68, 112, 7);
    *(_OWORD *)(v69 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v69 + 56) = &type metadata for String;
    v70 = sub_100038CF8();
    *(_QWORD *)(v69 + 64) = v70;
    *(_QWORD *)(v69 + 32) = 0xD00000000000002ALL;
    *(_QWORD *)(v69 + 40) = 0x80000001006892D0;
    v71 = (void *)v148[0];
    v72 = v67;
    v73 = objc_msgSend(v71, "description");
    v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
    v76 = v75;

    *(_QWORD *)(v69 + 96) = &type metadata for String;
    *(_QWORD *)(v69 + 104) = v70;
    *(_QWORD *)(v69 + 72) = v74;
    *(_QWORD *)(v69 + 80) = v76;
    os_log(_:dso:log:_:_:)(v66, &_mh_execute_header, v72, "[seymour] %@ failed to load catalog workout identifier for catalog item: %@", 75, 2, v69);

    swift_bridgeObjectRelease(v69);
    sub_10044806C(0, v142, v65, v141, v143, (uint64_t)v144);
    goto LABEL_12;
  }
  v37 = swift_dynamicCast(v147, &v145, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if (!(_DWORD)v37)
  {
    v65 = v26;
    goto LABEL_11;
  }
  v122 = v16;
  v39 = v147[0];
  v38 = v147[1];
  LODWORD(v127) = static os_log_type_t.default.getter(v37);
  v40 = (void *)HKLogActivity;
  v124 = sub_100047110((uint64_t *)&unk_100827460);
  v41 = swift_allocObject(v124, 112, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v41 + 56) = &type metadata for String;
  v42 = sub_100038CF8();
  *(_QWORD *)(v41 + 64) = v42;
  *(_QWORD *)(v41 + 32) = 0xD00000000000002ALL;
  *(_QWORD *)(v41 + 40) = 0x80000001006892D0;
  v123 = 0x80000001006892D0;
  v43 = (void *)v148[0];
  v44 = v40;
  v45 = v39;
  v46 = v44;
  v47 = objc_msgSend(v43, "description");
  v126 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
  v125 = v48;

  *(_QWORD *)(v41 + 96) = &type metadata for String;
  *(_QWORD *)(v41 + 104) = v42;
  v49 = v42;
  v50 = v125;
  *(_QWORD *)(v41 + 72) = v126;
  *(_QWORD *)(v41 + 80) = v50;
  os_log(_:dso:log:_:_:)(v127, &_mh_execute_header, v46, "[seymour] %@ fetching catalog item view model for catalog item: %@", 66, 2, v41);

  swift_bridgeObjectRelease(v41);
  v51 = v140;
  v52 = *(void **)(v140 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogItemViewModelCache);
  v127 = v45;
  v53 = v38;
  v54 = String._bridgeToObjectiveC()();
  v55 = objc_msgSend(v52, "objectForKey:", v54);

  if (v55)
  {
    v57 = static os_log_type_t.default.getter(v56);
    v58 = (void *)HKLogActivity;
    v59 = swift_allocObject(v124, 152, 7);
    *(_OWORD *)(v59 + 16) = xmmword_100624A40;
    *(_QWORD *)(v59 + 56) = &type metadata for String;
    *(_QWORD *)(v59 + 64) = v49;
    *(_QWORD *)(v59 + 32) = 0xD00000000000002ALL;
    *(_QWORD *)(v59 + 40) = v123;
    *(_QWORD *)(v59 + 96) = &type metadata for String;
    *(_QWORD *)(v59 + 104) = v49;
    *(_QWORD *)(v59 + 72) = v127;
    *(_QWORD *)(v59 + 80) = v53;
    *(_QWORD *)(v59 + 136) = type metadata accessor for CatalogItemViewModel(0);
    *(_QWORD *)(v59 + 144) = sub_1000083D8(&qword_100820A60, type metadata accessor for CatalogItemViewModel, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v59 + 112) = v55;
    v60 = v58;
    v61 = v26;
    v62 = v60;
    v63 = v55;
    os_log(_:dso:log:_:_:)(v57, &_mh_execute_header, v62, "[seymour] %@ returning cached catalog item view model for catalog item identifier: %@, catalog item view model: %@", 114, 2, v59);

    swift_bridgeObjectRelease(v59);
    v64 = v63;
    sub_10044806C((char *)v55, v142, v61, v141, v143, (uint64_t)v144);

  }
  else
  {
    v78 = swift_allocObject(&unk_100799F18, 24, 7);
    swift_unknownObjectWeakInit(v78 + 16, v51);
    v79 = (_QWORD *)swift_allocObject(&unk_10079ABE8, 56, 7);
    v144 = v79;
    v80 = v127;
    v79[2] = v78;
    v79[3] = v80;
    v79[4] = v38;
    v79[5] = sub_1003A1214;
    v79[6] = v25;
    sub_1000252E0((uint64_t)v148, (uint64_t)&v145);
    v81 = swift_allocObject(&unk_10079AC10, 72, 7);
    v143 = v81;
    sub_10002411C(&v145, v81 + 16);
    *(_QWORD *)(v81 + 56) = sub_1003A1214;
    *(_QWORD *)(v81 + 64) = v25;
    swift_retain_n(v25, 2);
    v82 = swift_bridgeObjectRetain(v53);
    v83 = v137;
    CatalogLockupPlaceholder.init(identifier:referenceType:editorialCardIdentifier:)(v80, v53, 8, 0, 1, 0, 0, v82);
    v84 = *(_QWORD *)(v51 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24);
    v85 = *(_QWORD *)(v51 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 32);
    sub_100016804((_QWORD *)(v51 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient), v84);
    v86 = sub_100047110(&qword_100820A58);
    v87 = *(unsigned __int8 *)(v138 + 80);
    v88 = v138;
    v89 = (v87 + 32) & ~v87;
    v90 = swift_allocObject(v86, v89 + *(_QWORD *)(v138 + 72), v87 | 7);
    *(_OWORD *)(v90 + 16) = xmmword_100622F90;
    (*(void (**)(uint64_t, char *, uint64_t))(v88 + 16))(v90 + v89, v83, v139);
    v91 = v136;
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)(33, v90, v84, v85);
    swift_bridgeObjectRelease(v90);
    v92 = swift_allocObject(&unk_10079AC38, 32, 7);
    v93 = (uint64_t)v144;
    *(_QWORD *)(v92 + 16) = sub_10039FA3C;
    *(_QWORD *)(v92 + 24) = v93;
    v94 = swift_allocObject(&unk_10079AC60, 32, 7);
    *(_QWORD *)(v94 + 16) = sub_1003A43E4;
    *(_QWORD *)(v94 + 24) = v92;
    v95 = v131;
    v96 = v130;
    v97 = v132;
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v130, v91, v132);
    v98 = *(unsigned __int8 *)(v95 + 80);
    v99 = (v98 + 16) & ~v98;
    v100 = (v129 + v99 + 7) & 0xFFFFFFFFFFFFFFF8;
    v101 = swift_allocObject(&unk_10079AC88, v100 + 16, v98 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v95 + 32))(v101 + v99, v96, v97);
    v102 = (uint64_t (**)(uint64_t *))(v101 + v100);
    *v102 = sub_1003A43FC;
    v102[1] = (uint64_t (*)(uint64_t *))v94;
    swift_retain(v144);
    v142 = (uint64_t)&type metadata for () + 8;
    v103 = v134;
    Promise.init(asyncOperation:)(sub_10039FAA4, v101, (char *)&type metadata for () + 8);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v136, v97);
    v104 = swift_allocObject(&unk_10079ACB0, 32, 7);
    v105 = v143;
    *(_QWORD *)(v104 + 16) = sub_100110464;
    *(_QWORD *)(v104 + 24) = v105;
    v106 = swift_allocObject(&unk_10079ACD8, 32, 7);
    *(_QWORD *)(v106 + 16) = sub_1003A43D0;
    *(_QWORD *)(v106 + 24) = v104;
    v107 = v135;
    v108 = v133;
    v109 = v122;
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v133, v103, v122);
    v110 = *(unsigned __int8 *)(v107 + 80);
    v111 = (v110 + 16) & ~v110;
    v112 = (v17 + v111 + 7) & 0xFFFFFFFFFFFFFFF8;
    v113 = swift_allocObject(&unk_10079AD00, v112 + 16, v110 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v107 + 32))(v113 + v111, v108, v109);
    v114 = (_QWORD *)(v113 + v112);
    *v114 = sub_1001104C4;
    v114[1] = v106;
    swift_retain(v105);
    v115 = v128;
    Promise.init(asyncOperation:)(sub_10039F50C, v113, v142);
    v116 = *(void (**)(char *, uint64_t))(v107 + 8);
    v116(v103, v109);
    v117 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v109);
    v119 = v118;
    v120 = swift_allocObject(&unk_10079AD28, 32, 7);
    *(_QWORD *)(v120 + 16) = 0;
    *(_QWORD *)(v120 + 24) = 0;
    v117(sub_10039F514, v120);
    swift_release(v144);
    swift_release(v105);
    swift_release(v119);
    swift_release(v120);
    v116(v115, v109);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v137, v139);
  }
LABEL_12:
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v148);
  return swift_release(v25);
}

double sub_10039E178(void *a1, char *a2, void (**a3)(_QWORD, _QWORD, __n128))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  void *v39;
  NSString v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  __n128 v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  double result;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t (**v87)(uint64_t *);
  char *v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  id v100;
  char *v101;
  void (*v102)(char *, uint64_t);
  void (*v103)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  id v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  __int128 v129;
  __int128 v130;
  _QWORD v131[2];
  _QWORD v132[5];

  v127 = a2;
  v120 = sub_100047110(&qword_100820A48);
  v5 = *(_QWORD *)(v120 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v120);
  v8 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v109 - v9;
  v11 = sub_100047110((uint64_t *)&unk_100836170);
  v123 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v123 + 64);
  v13 = __chkstk_darwin(v11);
  v121 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v122 = (char *)&v109 - v15;
  __chkstk_darwin(v14);
  v17 = (char *)&v109 - v16;
  v18 = type metadata accessor for CatalogLockupPlaceholder(0);
  v125 = *(_QWORD *)(v18 - 8);
  v126 = v18;
  __chkstk_darwin(v18);
  v124 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = swift_allocObject(&unk_10079BD40, 24, 7);
  *(_QWORD *)(v128 + 16) = a3;
  v132[3] = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  v132[4] = &off_10078FAE8;
  v132[0] = a1;
  _Block_copy(a3);
  v20 = objc_msgSend(a1, "metadata");
  if (!v20)
  {
    v129 = 0u;
    v130 = 0u;
    goto LABEL_10;
  }
  v21 = v20;
  v119 = v17;
  v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v20, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v23 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  v25 = v24;
  if (!*(_QWORD *)(v22 + 16) || (v26 = sub_100438F74(v23, v24), (v27 & 1) == 0))
  {
    v129 = 0u;
    v130 = 0u;
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v22);
    goto LABEL_10;
  }
  sub_10003E9BC(*(_QWORD *)(v22 + 56) + 32 * v26, (uint64_t)&v129);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v22);
  if (!*((_QWORD *)&v130 + 1))
  {
LABEL_10:
    v28 = sub_10001BE90((uint64_t)&v129, (uint64_t *)&unk_100828420);
    goto LABEL_11;
  }
  v28 = swift_dynamicCast(v131, &v129, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if (!(_DWORD)v28)
  {
LABEL_11:
    v51 = static os_log_type_t.error.getter(v28);
    v52 = (void *)HKLogActivity;
    v53 = sub_100047110((uint64_t *)&unk_100827460);
    v54 = swift_allocObject(v53, 112, 7);
    *(_OWORD *)(v54 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v54 + 56) = &type metadata for String;
    v55 = sub_100038CF8();
    *(_QWORD *)(v54 + 64) = v55;
    *(_QWORD *)(v54 + 32) = 0xD00000000000002ALL;
    *(_QWORD *)(v54 + 40) = 0x80000001006892D0;
    v56 = (void *)v132[0];
    v57 = v52;
    v58 = objc_msgSend(v56, "description");
    v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v61 = v60;

    *(_QWORD *)(v54 + 96) = &type metadata for String;
    *(_QWORD *)(v54 + 104) = v55;
    *(_QWORD *)(v54 + 72) = v59;
    *(_QWORD *)(v54 + 80) = v61;
    os_log(_:dso:log:_:_:)(v51, &_mh_execute_header, v57, "[seymour] %@ failed to load catalog workout identifier for catalog item: %@", 75, 2, v54);

    v62 = swift_bridgeObjectRelease(v54);
    a3[2](a3, 0, v62);
    goto LABEL_12;
  }
  v110 = v5;
  v111 = v11;
  v118 = (_QWORD *)v131[0];
  v117 = v131[1];
  LODWORD(v116) = static os_log_type_t.default.getter(v28);
  v29 = (void *)HKLogActivity;
  v114 = sub_100047110((uint64_t *)&unk_100827460);
  v30 = swift_allocObject(v114, 112, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v30 + 56) = &type metadata for String;
  v31 = sub_100038CF8();
  *(_QWORD *)(v30 + 64) = v31;
  *(_QWORD *)(v30 + 32) = 0xD00000000000002ALL;
  *(_QWORD *)(v30 + 40) = 0x80000001006892D0;
  v112 = 0x80000001006892D0;
  v32 = (void *)v132[0];
  v115 = v29;
  v33 = objc_msgSend(v32, "description");
  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v36 = v35;

  *(_QWORD *)(v30 + 96) = &type metadata for String;
  *(_QWORD *)(v30 + 104) = v31;
  v113 = v31;
  *(_QWORD *)(v30 + 72) = v34;
  *(_QWORD *)(v30 + 80) = v36;
  v37 = v115;
  os_log(_:dso:log:_:_:)(v116, &_mh_execute_header, v115, "[seymour] %@ fetching catalog item view model for catalog item: %@", 66, 2, v30);

  swift_bridgeObjectRelease(v30);
  v38 = v127;
  v39 = *(void **)&v127[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogItemViewModelCache];
  v40 = String._bridgeToObjectiveC()();
  v41 = objc_msgSend(v39, "objectForKey:", v40);

  if (v41)
  {
    v43 = static os_log_type_t.default.getter(v42);
    v44 = (void *)HKLogActivity;
    v45 = swift_allocObject(v114, 152, 7);
    *(_OWORD *)(v45 + 16) = xmmword_100624A40;
    v46 = v113;
    *(_QWORD *)(v45 + 56) = &type metadata for String;
    *(_QWORD *)(v45 + 64) = v46;
    *(_QWORD *)(v45 + 32) = 0xD00000000000002ALL;
    *(_QWORD *)(v45 + 40) = v112;
    *(_QWORD *)(v45 + 96) = &type metadata for String;
    *(_QWORD *)(v45 + 104) = v46;
    v47 = v117;
    *(_QWORD *)(v45 + 72) = v118;
    *(_QWORD *)(v45 + 80) = v47;
    *(_QWORD *)(v45 + 136) = type metadata accessor for CatalogItemViewModel(0);
    *(_QWORD *)(v45 + 144) = sub_1000083D8(&qword_100820A60, type metadata accessor for CatalogItemViewModel, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v45 + 112) = v41;
    v48 = v44;
    v49 = v41;
    os_log(_:dso:log:_:_:)(v43, &_mh_execute_header, v48, "[seymour] %@ returning cached catalog item view model for catalog item identifier: %@, catalog item view model: %@", 114, 2, v45);

    v50 = swift_bridgeObjectRelease(v45);
    ((void (**)(_QWORD, id, __n128))a3)[2](a3, v49, v50);

  }
  else
  {
    v64 = swift_allocObject(&unk_100799F18, 24, 7);
    swift_unknownObjectWeakInit(v64 + 16, v38);
    v65 = (_QWORD *)swift_allocObject(&unk_10079BD68, 56, 7);
    v116 = v65;
    v66 = v118;
    v65[2] = v64;
    v65[3] = v66;
    v67 = v117;
    v65[4] = v117;
    v65[5] = sub_1003A4410;
    v68 = v128;
    v65[6] = v128;
    sub_1000252E0((uint64_t)v132, (uint64_t)&v129);
    v69 = swift_allocObject(&unk_10079BD90, 72, 7);
    v115 = (id)v69;
    sub_10002411C(&v129, v69 + 16);
    *(_QWORD *)(v69 + 56) = sub_1003A4410;
    *(_QWORD *)(v69 + 64) = v68;
    swift_retain_n(v68, 2);
    v70 = swift_bridgeObjectRetain(v67);
    v71 = v124;
    CatalogLockupPlaceholder.init(identifier:referenceType:editorialCardIdentifier:)(v66, v67, 8, 0, 1, 0, 0, v70);
    v72 = *(_QWORD *)&v38[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24];
    v127 = *(char **)&v38[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 32];
    v118 = sub_100016804(&v38[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient], v72);
    v73 = sub_100047110(&qword_100820A58);
    v74 = v125;
    v75 = *(unsigned __int8 *)(v125 + 80);
    v76 = (v75 + 32) & ~v75;
    v77 = swift_allocObject(v73, v76 + *(_QWORD *)(v125 + 72), v75 | 7);
    *(_OWORD *)(v77 + 16) = xmmword_100622F90;
    (*(void (**)(uint64_t, char *, uint64_t))(v74 + 16))(v77 + v76, v71, v126);
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)(33, v77, v72, v127);
    swift_bridgeObjectRelease(v77);
    v78 = swift_allocObject(&unk_10079BDB8, 32, 7);
    v79 = v116;
    *(_QWORD *)(v78 + 16) = sub_10039FA3C;
    *(_QWORD *)(v78 + 24) = v79;
    v80 = swift_allocObject(&unk_10079BDE0, 32, 7);
    *(_QWORD *)(v80 + 16) = sub_1003A43E4;
    *(_QWORD *)(v80 + 24) = v78;
    v81 = v110;
    v82 = v120;
    (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v8, v10, v120);
    v83 = *(unsigned __int8 *)(v81 + 80);
    v84 = (v83 + 16) & ~v83;
    v85 = (v6 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
    v86 = swift_allocObject(&unk_10079BE08, v85 + 16, v83 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v86 + v84, v8, v82);
    v87 = (uint64_t (**)(uint64_t *))(v86 + v85);
    *v87 = sub_1003A43FC;
    v87[1] = (uint64_t (*)(uint64_t *))v80;
    swift_retain(v79);
    v127 = (char *)&type metadata for () + 8;
    v88 = v122;
    Promise.init(asyncOperation:)(sub_10039FAA4, v86, (char *)&type metadata for () + 8);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v10, v82);
    v89 = swift_allocObject(&unk_10079BE30, 32, 7);
    v90 = v115;
    *(_QWORD *)(v89 + 16) = sub_100110464;
    *(_QWORD *)(v89 + 24) = v90;
    v91 = swift_allocObject(&unk_10079BE58, 32, 7);
    *(_QWORD *)(v91 + 16) = sub_1003A43D0;
    *(_QWORD *)(v91 + 24) = v89;
    v92 = v123;
    v93 = v121;
    v94 = v111;
    (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v121, v88, v111);
    v95 = *(unsigned __int8 *)(v92 + 80);
    v96 = (v95 + 16) & ~v95;
    v97 = (v12 + v96 + 7) & 0xFFFFFFFFFFFFFFF8;
    v98 = swift_allocObject(&unk_10079BE80, v97 + 16, v95 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v92 + 32))(v98 + v96, v93, v94);
    v99 = (_QWORD *)(v98 + v97);
    *v99 = sub_1001104C4;
    v99[1] = v91;
    v100 = v90;
    swift_retain(v90);
    v101 = v119;
    Promise.init(asyncOperation:)(sub_10039F50C, v98, v127);
    v102 = *(void (**)(char *, uint64_t))(v92 + 8);
    v102(v88, v94);
    v103 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v94);
    v105 = v104;
    v106 = swift_allocObject(&unk_10079BEA8, 32, 7);
    *(_QWORD *)(v106 + 16) = 0;
    *(_QWORD *)(v106 + 24) = 0;
    v103(sub_10039F514, v106);
    swift_release(v116);
    swift_release(v100);
    swift_release(v105);
    v107 = swift_release(v106);
    ((void (*)(char *, uint64_t, __n128))v102)(v101, v94, v107);
    (*(void (**)(char *, uint64_t, __n128))(v125 + 8))(v124, v126, v108);
  }
LABEL_12:
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v132);
  *(_QWORD *)&result = swift_release(v128).n128_u64[0];
  return result;
}

double sub_10039EBB0(uint64_t a1, char *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t CatalogWorkoutsRequest;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  NSString v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  char *v49;
  double result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  double (**v61)(char *);
  double (*v62)(char *);
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double (**v67)(char *);
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  __n128 v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t (**v85)(uint64_t *);
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t (**v96)(uint64_t);
  char *v97;
  void (*v98)(char *, uint64_t);
  void (*v99)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  double (*v128)(char *);

  v127 = a2;
  v11 = sub_100047110((uint64_t *)&unk_100839710);
  v115 = *(_QWORD *)(v11 - 8);
  v116 = v11;
  v12 = __chkstk_darwin(v11);
  v112 = v13;
  v113 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v114 = (char *)&v104 - v14;
  v124 = sub_100047110((uint64_t *)&unk_100836170);
  v120 = *(_QWORD *)(v124 - 8);
  v15 = __chkstk_darwin(v124);
  v118 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v119 = (char *)&v104 - v18;
  v117 = v19;
  __chkstk_darwin(v17);
  v123 = (char *)&v104 - v20;
  CatalogWorkoutsRequest = type metadata accessor for FetchCatalogWorkoutsRequest(0);
  v121 = *(_QWORD *)(CatalogWorkoutsRequest - 8);
  v122 = CatalogWorkoutsRequest;
  __chkstk_darwin(CatalogWorkoutsRequest);
  v126 = (char *)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for FitnessPlusStackViewModel(0);
  v110 = *(_QWORD *)(v23 - 8);
  v24 = *(_QWORD *)(v110 + 64);
  __chkstk_darwin(v23);
  v111 = (uint64_t)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (double (*)(char *))swift_allocObject(&unk_100799EF0, 48, 7);
  *((_QWORD *)v25 + 2) = a3;
  *((_QWORD *)v25 + 3) = a4;
  *((_QWORD *)v25 + 4) = a5;
  *((_QWORD *)v25 + 5) = a6;
  v128 = v25;
  v108 = a3;
  swift_retain(a3);
  v107 = a4;
  v109 = a5;
  v26 = sub_10003AFE0(a5, a6);
  v27 = static os_log_type_t.default.getter(v26);
  v28 = (void *)HKLogActivity;
  v106 = sub_100047110((uint64_t *)&unk_100827460);
  v29 = swift_allocObject(v106, 112, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v29 + 56) = &type metadata for String;
  v30 = sub_100038CF8();
  *(_QWORD *)(v29 + 64) = v30;
  *(_QWORD *)(v29 + 32) = 0xD000000000000024;
  *(_QWORD *)(v29 + 40) = 0x800000010069C0E0;
  v31 = v28;
  v32 = sub_1002F5094();
  *(_QWORD *)(v29 + 96) = &type metadata for String;
  *(_QWORD *)(v29 + 104) = v30;
  *(_QWORD *)(v29 + 72) = v32;
  *(_QWORD *)(v29 + 80) = v33;
  os_log(_:dso:log:_:_:)(v27, &_mh_execute_header, v31, "[seymour] %@ fetching stack view model for stack: %@", 52, 2, v29);

  swift_bridgeObjectRelease(v29);
  v34 = (uint64_t *)(a1 + *(int *)(v23 + 28));
  v36 = *v34;
  v35 = v34[1];
  v37 = v127;
  v38 = *(void **)&v127[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_stackViewModelCache];
  swift_bridgeObjectRetain(v35);
  v125 = v36;
  v39 = String._bridgeToObjectiveC()();
  v40 = (char *)objc_msgSend(v38, "objectForKey:", v39);

  if (v40)
  {
    v105 = a6;
    v41 = *(_QWORD *)(*(_QWORD *)&v40[OBJC_IVAR___CHCatalogItemViewModel_workouts] + 16);
    v42 = sub_1002F58DC();
    v43 = v42[2];
    swift_bridgeObjectRelease(v42);
    if (v41 == v43)
    {
      swift_bridgeObjectRelease(v35);
      v45 = static os_log_type_t.default.getter(v44);
      v46 = (void *)HKLogActivity;
      v47 = swift_allocObject(v106, 152, 7);
      *(_OWORD *)(v47 + 16) = xmmword_100624A40;
      *(_QWORD *)(v47 + 56) = &type metadata for String;
      *(_QWORD *)(v47 + 64) = v30;
      *(_QWORD *)(v47 + 32) = 0xD000000000000024;
      *(_QWORD *)(v47 + 40) = 0x800000010069C0E0;
      *(_QWORD *)(v47 + 96) = &type metadata for String;
      *(_QWORD *)(v47 + 104) = v30;
      *(_QWORD *)(v47 + 72) = v125;
      *(_QWORD *)(v47 + 80) = v35;
      *(_QWORD *)(v47 + 136) = type metadata accessor for CatalogItemViewModel(0);
      *(_QWORD *)(v47 + 144) = sub_1000083D8(&qword_100820A60, type metadata accessor for CatalogItemViewModel, (uint64_t)&protocol conformance descriptor for NSObject);
      *(_QWORD *)(v47 + 112) = v40;
      swift_bridgeObjectRetain(v35);
      v48 = v46;
      v49 = v40;
      os_log(_:dso:log:_:_:)(v45, &_mh_execute_header, v48, "[seymour] %@ returning cached stack view model for stack queue identifier: %@, stack view model: %@", 99, 2, v47);

      swift_bridgeObjectRelease(v47);
      v127 = v49;
      sub_10028BEF8(v40, v108, (uint64_t)v107, v109, v105);
      swift_release(v128);

      return result;
    }

  }
  v51 = swift_allocObject(&unk_100799F18, 24, 7);
  swift_unknownObjectWeakInit(v51 + 16, v37);
  v52 = v111;
  v109 = v35;
  sub_10004F8C8(a1, v111, type metadata accessor for FitnessPlusStackViewModel);
  v53 = *(unsigned __int8 *)(v110 + 80);
  v54 = (v53 + 16) & ~v53;
  v55 = v53 | 7;
  v56 = (v24 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v57 = a1;
  v58 = (v56 + 15) & 0xFFFFFFFFFFFFFFF8;
  v59 = (v58 + 23) & 0xFFFFFFFFFFFFFFF8;
  v60 = swift_allocObject(&unk_100799F40, v59 + 16, v53 | 7);
  sub_100047C88(v52, v60 + v54, type metadata accessor for FitnessPlusStackViewModel);
  *(_QWORD *)(v60 + v56) = v51;
  v61 = (double (**)(char *))(v60 + v58);
  v62 = v128;
  *v61 = sub_10039F44C;
  v61[1] = v62;
  v63 = (_QWORD *)(v60 + v59);
  v64 = v60;
  v65 = v109;
  *v63 = v125;
  v63[1] = v65;
  sub_10004F8C8(v57, v52, type metadata accessor for FitnessPlusStackViewModel);
  v66 = swift_allocObject(&unk_100799F68, v56 + 16, v55);
  sub_100047C88(v52, v66 + v54, type metadata accessor for FitnessPlusStackViewModel);
  v67 = (double (**)(char *))(v66 + v56);
  v68 = v66;
  *v67 = sub_10039F44C;
  v67[1] = v62;
  swift_retain_n(v62, 2);
  v69 = sub_1002F58DC();
  v70 = sub_10004CEFC((uint64_t)v69);
  v71 = swift_bridgeObjectRelease(v69);
  v72 = v126;
  FetchCatalogWorkoutsRequest.init(identifiers:)(v70, v71);
  v73 = *(_QWORD *)&v127[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24];
  v74 = *(_QWORD *)&v127[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 32];
  sub_100016804(&v127[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient], v73);
  v75 = v114;
  dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogWorkouts(_:)(v72, v73, v74);
  v76 = swift_allocObject(&unk_100799F90, 32, 7);
  *(_QWORD *)(v76 + 16) = sub_10039F480;
  *(_QWORD *)(v76 + 24) = v64;
  v110 = v64;
  v77 = swift_allocObject(&unk_100799FB8, 32, 7);
  *(_QWORD *)(v77 + 16) = sub_1003A43E4;
  *(_QWORD *)(v77 + 24) = v76;
  v79 = v115;
  v78 = v116;
  v80 = v113;
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v113, v75, v116);
  v81 = *(unsigned __int8 *)(v79 + 80);
  v82 = (v81 + 16) & ~v81;
  v83 = (v112 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
  v84 = swift_allocObject(&unk_100799FE0, v83 + 16, v81 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v84 + v82, v80, v78);
  v85 = (uint64_t (**)(uint64_t *))(v84 + v83);
  *v85 = sub_10039F4B0;
  v85[1] = (uint64_t (*)(uint64_t *))v77;
  swift_retain(v64);
  v86 = v119;
  Promise.init(asyncOperation:)(sub_10039F4E4, v84, (char *)&type metadata for () + 8);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v75, v78);
  v87 = swift_allocObject(&unk_10079A008, 32, 7);
  *(_QWORD *)(v87 + 16) = sub_10039F488;
  *(_QWORD *)(v87 + 24) = v68;
  v88 = swift_allocObject(&unk_10079A030, 32, 7);
  *(_QWORD *)(v88 + 16) = sub_1002AC7A4;
  *(_QWORD *)(v88 + 24) = v87;
  v89 = v120;
  v90 = v118;
  v91 = v124;
  (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v118, v86, v124);
  v92 = *(unsigned __int8 *)(v89 + 80);
  v93 = (v92 + 16) & ~v92;
  v94 = (v117 + v93 + 7) & 0xFFFFFFFFFFFFFFF8;
  v95 = swift_allocObject(&unk_10079A058, v94 + 16, v92 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v95 + v93, v90, v91);
  v96 = (uint64_t (**)(uint64_t))(v95 + v94);
  *v96 = sub_10010FFFC;
  v96[1] = (uint64_t (*)(uint64_t))v88;
  swift_retain(v68);
  v97 = v123;
  Promise.init(asyncOperation:)(sub_10039F50C, v95, (char *)&type metadata for () + 8);
  v98 = *(void (**)(char *, uint64_t))(v89 + 8);
  v98(v86, v91);
  v99 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v91);
  v101 = v100;
  v102 = swift_allocObject(&unk_10079A080, 32, 7);
  *(_QWORD *)(v102 + 16) = 0;
  *(_QWORD *)(v102 + 24) = 0;
  v99(sub_10039F514, v102);
  swift_release(v110);
  swift_release(v68);
  swift_release(v101);
  v103 = swift_release(v102);
  ((void (*)(char *, uint64_t, __n128))v98)(v97, v91, v103);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v126, v122);
  *(_QWORD *)&result = swift_release(v128).n128_u64[0];
  return result;
}

double sub_10039F44C(char *a1)
{
  uint64_t *v1;

  return sub_10028BEF8(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10039F458()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10039F48C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10039F4B0(uint64_t *a1)
{
  uint64_t v1;

  return sub_10039C008(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_10079A170, (uint64_t)sub_1003A43CC);
}

uint64_t sub_10039F4D8()
{
  return sub_10004BE58((uint64_t *)&unk_100839710);
}

uint64_t sub_10039F4E4(uint64_t a1, uint64_t a2)
{
  return sub_1003A3F7C(a1, a2, (uint64_t *)&unk_100839710, (uint64_t)&unk_10079A120, (uint64_t)sub_10039F54C);
}

uint64_t sub_10039F500()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_10039F518()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10039F524(uint64_t a1)
{
  return sub_10039FB44(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10039B038);
}

uint64_t sub_10039F534()
{
  return sub_1003A4278((void (*)(_QWORD))&_swift_errorRelease);
}

uint64_t sub_10039F540()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10039F54C(uint64_t a1)
{
  return sub_1003A4218(a1, (uint64_t)&unk_100836170, (uint64_t)&unk_10079A148, (uint64_t)sub_10039F514, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_10039B3D4);
}

uint64_t sub_10039F574()
{
  return sub_1003A4278((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_10039F580(uint64_t a1)
{
  uint64_t v1;

  return sub_100395E64(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_10039F59C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  SEL v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;

  v1 = *(_QWORD *)(sub_100047110(&qword_10082EAE0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v62 = *(_QWORD *)(v1 + 64);
  v57 = type metadata accessor for Artwork(0);
  v4 = *(_QWORD *)(v57 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v60 = *(_QWORD *)(v4 + 64);
  v6 = (int *)type metadata accessor for FitnessPlusStackViewModel(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v58 = *(_QWORD *)(v7 + 64);
  v9 = type metadata accessor for Playlist(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v0 + v3, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v3, v9);
  v18 = (v62 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + v5 + 8) & ~v5;
  v20 = (v60 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v8 + v20 + 40) & ~v8;
  v22 = (v58 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v59 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v61 = (v59 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = v2 | v5 | v8 | 7;
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + v18), v11, v12, v13, v14, v15, v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v19, v57);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + v20));
  v24 = type metadata accessor for Date(0);
  v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8);
  v25(v0 + v21, v24);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + v21 + v6[5]), v26, v27, v28, v29, v30, v31, v32);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + v21 + v6[6] + 8), v33, v34, v35, v36, v37, v38, v39);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + v21 + v6[7] + 8), v40, v41, v42, v43, v44, v45, v46);
  v25(v0 + v21 + v6[8], v24);
  v47 = v0 + v21 + v6[9];
  v48 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
  swift_release(*(_QWORD *)(v0 + v22));
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + v59 + 8), v49, v50, v51, v52, v53, v54, v55);
  swift_release(*(_QWORD *)(v0 + v61 + 8));
  return swift_deallocObject(v0, v61 + 16, v23);
}

uint64_t sub_10039F7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10082EAE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10039F808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)(sub_100047110(&qword_10082EAE0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(type metadata accessor for Artwork(0) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(type metadata accessor for FitnessPlusStackViewModel(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + v8 + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100395EF8(a1, v1 + v4, *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + v5), v1 + v7, v1 + v8, v1 + v10, *(_QWORD *)(v1 + v11), *(_QWORD *)(v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void (**)(id))(v1 + ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10039F920(uint64_t a1)
{
  uint64_t v1;

  return sub_10039AE10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))&type metadata accessor for Configuration, (uint64_t)&unk_10079A288, (uint64_t)sub_10039F9E0);
}

uint64_t sub_10039F950()
{
  return sub_10004BE58(&qword_100830AE0);
}

uint64_t sub_10039F95C(uint64_t a1, uint64_t a2)
{
  return sub_1003A3F7C(a1, a2, &qword_100830AE0, (uint64_t)&unk_10079A238, (uint64_t)sub_10039F988);
}

uint64_t sub_10039F97C()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10039F988(uint64_t a1)
{
  uint64_t v1;

  return sub_10039B658(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t (*)(_QWORD))&type metadata accessor for Configuration, &qword_100830AF8, (uint64_t)&unk_10079A260, (uint64_t)sub_10039F514);
}

uint64_t sub_10039F9D4()
{
  return sub_1003A3DE4((uint64_t (*)(_QWORD))&type metadata accessor for Configuration);
}

uint64_t sub_10039F9E0(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_1003A04C0(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for Configuration);
}

uint64_t sub_10039F9F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

double sub_10039FA2C(char *a1)
{
  uint64_t v1;

  return sub_1005EDB6C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_10039FA3C(uint64_t a1)
{
  return sub_1000278B4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003943A8);
}

uint64_t sub_10039FA4C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_10039FA70(uint64_t *a1)
{
  uint64_t v1;

  return sub_10039C008(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_10079A490, (uint64_t)sub_1003A43CC);
}

uint64_t sub_10039FA98()
{
  return sub_10004BE58(&qword_100820A48);
}

uint64_t sub_10039FAA4(uint64_t a1, uint64_t a2)
{
  return sub_1003A3F7C(a1, a2, &qword_100820A48, (uint64_t)&unk_10079A440, (uint64_t)sub_10039FADC);
}

uint64_t sub_10039FAC0()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_10039FAD0()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10039FADC(uint64_t a1)
{
  return sub_1003A4218(a1, (uint64_t)&unk_100836170, (uint64_t)&unk_10079A468, (uint64_t)sub_10039F514, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_10039B3D4);
}

uint64_t sub_10039FB04()
{
  return sub_1003A4278((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_10039FB10()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10039FB1C(uint64_t a1)
{
  return sub_10039FB44(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10039B520);
}

uint64_t sub_10039FB2C()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10039FB38(uint64_t a1)
{
  return sub_10039FB44(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10039B854);
}

uint64_t sub_10039FB44(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), v2[2], v2[3], v2[4], v2[5]);
}

double sub_10039FB64(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  double v37;
  char *v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t (**v63)(uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  char *v75;
  void (*v76)(char *, uint64_t);
  void (*v77)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  char *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  unint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t, uint64_t);
  id v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  double result;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  char *v97;
  id v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  _QWORD *v113;
  char v114[32];

  v112 = a3;
  v11 = sub_100047110(&qword_100830B20);
  v104 = *(_QWORD *)(v11 - 8);
  v105 = v11;
  v12 = __chkstk_darwin(v11);
  v101 = v13;
  v102 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v103 = (char *)&v94 - v14;
  v111 = sub_100047110((uint64_t *)&unk_100836170);
  v109 = *(_QWORD *)(v111 - 8);
  v15 = __chkstk_darwin(v111);
  v107 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v108 = (char *)&v94 - v18;
  v106 = v19;
  __chkstk_darwin(v17);
  v110 = (char *)&v94 - v20;
  v21 = sub_100047110(&qword_1008239C0);
  v22 = __chkstk_darwin(v21);
  v99 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v25 = (char *)&v94 - v24;
  v27 = type metadata accessor for Trainer(0, v26);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v97 = (char *)&v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = (_QWORD *)swift_allocObject(&unk_10079A558, 40, 7);
  v30[2] = a4;
  v30[3] = a5;
  v113 = v30;
  v30[4] = a6;
  v100 = a4;
  swift_retain(a4);
  v31 = a5;
  v98 = a6;
  v32 = static os_log_type_t.default.getter(v98);
  v33 = (void *)HKLogActivity;
  v96 = sub_100047110((uint64_t *)&unk_100827460);
  v34 = swift_allocObject(v96, 112, 7);
  *(_OWORD *)(v34 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v34 + 56) = &type metadata for String;
  v35 = sub_100038CF8();
  v95 = (unint64_t)"tails for identifier: %@";
  *(_QWORD *)(v34 + 32) = 0xD000000000000024;
  *(_QWORD *)(v34 + 40) = 0x800000010069C3E0;
  *(_QWORD *)(v34 + 96) = &type metadata for String;
  *(_QWORD *)(v34 + 104) = v35;
  *(_QWORD *)(v34 + 64) = v35;
  *(_QWORD *)(v34 + 72) = a1;
  *(_QWORD *)(v34 + 80) = a2;
  v36 = v33;
  *(_QWORD *)&v37 = swift_bridgeObjectRetain(a2).n128_u64[0];
  os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v36, "[seymour] %@ fetching trainer details for identifier: %@", 56, 2, v34, v37);

  v38 = v112;
  swift_bridgeObjectRelease(v34);
  v39 = &v38[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_trainerCache];
  swift_beginAccess(&v38[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_trainerCache], v114, 0, 0);
  v40 = *(_QWORD *)v39;
  if (*(_QWORD *)(v40 + 16))
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(v40);
    v41 = sub_100438F74(a1, a2);
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v25, *(_QWORD *)(v40 + 56) + *(_QWORD *)(v28 + 72) * v41, v27);
      v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v43(v25, 0, 1, v27);
    }
    else
    {
      v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v43(v25, 1, 1, v27);
    }
    swift_bridgeObjectRelease(a2);
    v44 = swift_bridgeObjectRelease(v40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v28 + 48))(v25, 1, v27, v44) != 1)
    {
      v82 = v97;
      v83 = (*(uint64_t (**)(char *, char *, uint64_t))(v28 + 32))(v97, v25, v27);
      LODWORD(v112) = static os_log_type_t.default.getter(v83);
      v84 = (void *)HKLogActivity;
      v85 = swift_allocObject(v96, 152, 7);
      *(_OWORD *)(v85 + 16) = xmmword_100624A40;
      *(_QWORD *)(v85 + 56) = &type metadata for String;
      *(_QWORD *)(v85 + 64) = v35;
      v86 = v95 | 0x8000000000000000;
      *(_QWORD *)(v85 + 32) = 0xD000000000000024;
      *(_QWORD *)(v85 + 40) = v86;
      *(_QWORD *)(v85 + 96) = &type metadata for String;
      *(_QWORD *)(v85 + 104) = v35;
      *(_QWORD *)(v85 + 72) = a1;
      *(_QWORD *)(v85 + 80) = a2;
      swift_bridgeObjectRetain(a2);
      v87 = v43;
      v88 = v84;
      v89 = Trainer.description.getter();
      *(_QWORD *)(v85 + 136) = &type metadata for String;
      *(_QWORD *)(v85 + 144) = v35;
      *(_QWORD *)(v85 + 112) = v89;
      *(_QWORD *)(v85 + 120) = v90;
      os_log(_:dso:log:_:_:)(v112, &_mh_execute_header, v88, "[seymour] %@ returning cached trainer for identifier: %@, trainer: %@", 69, 2, v85);

      v91 = swift_bridgeObjectRelease(v85);
      v92 = (uint64_t)v99;
      (*(void (**)(char *, char *, uint64_t, __n128))(v28 + 16))(v99, v82, v27, v91);
      v87((char *)v92, 0, 1, v27);
      sub_100590A2C(v92, v100, (uint64_t)v98);
      sub_10001BE90(v92, &qword_1008239C0);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v82, v27);
      goto LABEL_9;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v25, 1, 1, v27);
  }
  sub_10001BE90((uint64_t)v25, &qword_1008239C0);
  v45 = swift_allocObject(&unk_100799F18, 24, 7);
  swift_unknownObjectWeakInit(v45 + 16, v38);
  v46 = (_QWORD *)swift_allocObject(&unk_10079A580, 56, 7);
  v46[2] = v45;
  v46[3] = a1;
  v46[4] = a2;
  v46[5] = sub_1003A03B4;
  v47 = v113;
  v46[6] = v113;
  v48 = (_QWORD *)swift_allocObject(&unk_10079A5A8, 48, 7);
  v48[2] = a1;
  v48[3] = a2;
  v48[4] = sub_1003A03B4;
  v48[5] = v47;
  v49 = &v38[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient];
  v50 = *(_QWORD *)&v38[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24];
  v51 = *((_QWORD *)v49 + 4);
  v52 = a1;
  sub_100016804(v49, v50);
  swift_bridgeObjectRetain_n(a2, 2);
  swift_retain_n(v47, 2);
  v53 = v103;
  dispatch thunk of CatalogClientProtocol.fetchRemoteTrainerDetail(_:)(v52, a2, v50, v51);
  v54 = swift_allocObject(&unk_10079A5D0, 32, 7);
  *(_QWORD *)(v54 + 16) = sub_1003A03C4;
  *(_QWORD *)(v54 + 24) = v46;
  v55 = swift_allocObject(&unk_10079A5F8, 32, 7);
  *(_QWORD *)(v55 + 16) = sub_1002AC7A4;
  *(_QWORD *)(v55 + 24) = v54;
  v57 = v104;
  v56 = v105;
  v58 = v102;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v102, v53, v105);
  v59 = *(unsigned __int8 *)(v57 + 80);
  v60 = (v59 + 16) & ~v59;
  v61 = (v101 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
  v62 = swift_allocObject(&unk_10079A620, v61 + 16, v59 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v62 + v60, v58, v56);
  v63 = (uint64_t (**)(uint64_t))(v62 + v61);
  *v63 = sub_1003A03E8;
  v63[1] = (uint64_t (*)(uint64_t))v55;
  swift_retain(v46);
  v112 = (char *)&type metadata for () + 8;
  v64 = v108;
  Promise.init(asyncOperation:)(sub_1003A0424, v62, (char *)&type metadata for () + 8);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v53, v56);
  v65 = swift_allocObject(&unk_10079A648, 32, 7);
  *(_QWORD *)(v65 + 16) = sub_1003A03DC;
  *(_QWORD *)(v65 + 24) = v48;
  v66 = swift_allocObject(&unk_10079A670, 32, 7);
  *(_QWORD *)(v66 + 16) = sub_1003A43D0;
  *(_QWORD *)(v66 + 24) = v65;
  v67 = v109;
  v68 = v107;
  v69 = v111;
  (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v107, v64, v111);
  v70 = *(unsigned __int8 *)(v67 + 80);
  v71 = (v70 + 16) & ~v70;
  v72 = (v106 + v71 + 7) & 0xFFFFFFFFFFFFFFF8;
  v73 = swift_allocObject(&unk_10079A698, v72 + 16, v70 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v73 + v71, v68, v69);
  v74 = (_QWORD *)(v73 + v72);
  *v74 = sub_1001104C4;
  v74[1] = v66;
  swift_retain(v48);
  v75 = v110;
  Promise.init(asyncOperation:)(sub_10039F50C, v73, v112);
  v76 = *(void (**)(char *, uint64_t))(v67 + 8);
  v76(v64, v69);
  v77 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v69);
  v79 = v78;
  v80 = swift_allocObject(&unk_10079A6C0, 32, 7);
  *(_QWORD *)(v80 + 16) = 0;
  *(_QWORD *)(v80 + 24) = 0;
  v77(sub_10039F514, v80);
  swift_release(v46);
  swift_release(v48);
  swift_release(v79);
  v81 = swift_release(v80);
  ((void (*)(char *, uint64_t, __n128))v76)(v75, v69, v81);
LABEL_9:
  *(_QWORD *)&result = swift_release(v113).n128_u64[0];
  return result;
}

uint64_t sub_1003A0380()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003A03B4(uint64_t a1)
{
  uint64_t *v1;

  return sub_10058DEF0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1003A03C4(uint64_t a1)
{
  return sub_1000278B4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100394014);
}

uint64_t sub_1003A03D0()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003A03DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1003941D8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(char *))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1003A03E8(uint64_t a1)
{
  uint64_t v1;

  return sub_10039AE10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))&type metadata accessor for TrainerDetail, (uint64_t)&unk_10079A738, (uint64_t)sub_1003A04B4);
}

uint64_t sub_1003A0418()
{
  return sub_10004BE58(&qword_100830B20);
}

uint64_t sub_1003A0424(uint64_t a1, uint64_t a2)
{
  return sub_1003A3F7C(a1, a2, &qword_100830B20, (uint64_t)&unk_10079A6E8, (uint64_t)sub_1003A045C);
}

uint64_t sub_1003A0440()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_1003A0450()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A045C(uint64_t a1)
{
  uint64_t v1;

  return sub_10039B658(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t (*)(_QWORD))&type metadata accessor for TrainerDetail, &qword_100830B28, (uint64_t)&unk_10079A710, (uint64_t)sub_10039F514);
}

uint64_t sub_1003A04A8()
{
  return sub_1003A3DE4((uint64_t (*)(_QWORD))&type metadata accessor for TrainerDetail);
}

uint64_t sub_1003A04B4(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_1003A04C0(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TrainerDetail);
}

uint64_t sub_1003A04C0(void (*a1)(uint64_t *), uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
  return sub_1002AC0B4(a1, a2, *(void (**)(uint64_t *__return_ptr, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), v3 + ((v6 + 32) & ~v6));
}

double sub_1003A0514(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  NSString v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  void *v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  void *v75;
  id v76;
  id v77;
  _QWORD *v78;
  double result;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  __n128 v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t (**v104)(uint64_t *);
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  char *v117;
  void (*v118)(char *, uint64_t);
  void (*v119)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __n128 v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  __int128 v144;
  char *v145;
  void *v146;
  _QWORD *v147;
  __int128 v148;
  __int128 v149;
  _QWORD v150[2];
  void *v151;
  uint64_t v152;
  _UNKNOWN **v153;

  *(_QWORD *)&v144 = a2;
  v136 = sub_100047110(&qword_100820A48);
  v135 = *(_QWORD *)(v136 - 8);
  v13 = *(_QWORD *)(v135 + 64);
  v14 = __chkstk_darwin(v136);
  v134 = (char *)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v139 = (char *)&v124 - v15;
  v16 = sub_100047110((uint64_t *)&unk_100836170);
  v138 = *(_QWORD *)(v16 - 8);
  v17 = *(_QWORD *)(v138 + 64);
  v18 = __chkstk_darwin(v16);
  v137 = (char *)&v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v140 = (char *)&v124 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v124 - v21;
  v23 = type metadata accessor for CatalogLockupPlaceholder(0);
  v142 = *(_QWORD *)(v23 - 8);
  v143 = v23;
  __chkstk_darwin(v23);
  v141 = (char *)&v124 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (_QWORD *)swift_allocObject(&unk_10079A760, 56, 7);
  v25[2] = a3;
  v25[3] = a4;
  v25[4] = a5;
  v25[5] = a6;
  v147 = v25;
  v25[6] = a7;
  v152 = type metadata accessor for MindfulnessSessionViewModel(0);
  v153 = &off_10078FAD0;
  v145 = (char *)v152;
  v151 = a1;
  v26 = a3;
  swift_retain(a4);
  v27 = a5;
  v28 = a1;
  v29 = sub_10003AFE0(a6, a7);
  v30 = MindfulnessSessionViewModel.metadata.getter(v29);
  v146 = v26;
  if (!v30)
  {
    v148 = 0u;
    v149 = 0u;
    goto LABEL_10;
  }
  v31 = v30;
  v133 = (uint64_t)v27;
  v32 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  v34 = v33;
  if (!*(_QWORD *)(v31 + 16) || (v35 = sub_100438F74(v32, v33), (v36 & 1) == 0))
  {
    v148 = 0u;
    v149 = 0u;
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v31);
    goto LABEL_10;
  }
  sub_10003E9BC(*(_QWORD *)(v31 + 56) + 32 * v35, (uint64_t)&v148);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v31);
  if (!*((_QWORD *)&v149 + 1))
  {
LABEL_10:
    v37 = sub_10001BE90((uint64_t)&v148, (uint64_t *)&unk_100828420);
    goto LABEL_11;
  }
  v37 = swift_dynamicCast(v150, &v148, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if (!(_DWORD)v37)
  {
LABEL_11:
    v60 = static os_log_type_t.error.getter(v37);
    v61 = (void *)HKLogActivity;
    v62 = sub_100047110((uint64_t *)&unk_100827460);
    v63 = swift_allocObject(v62, 112, 7);
    v144 = xmmword_100620BC0;
    *(_OWORD *)(v63 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v63 + 56) = &type metadata for String;
    v64 = sub_100038CF8();
    *(_QWORD *)(v63 + 64) = v64;
    *(_QWORD *)(v63 + 32) = 0xD00000000000002ALL;
    *(_QWORD *)(v63 + 40) = 0x80000001006892D0;
    v65 = v151;
    v66 = v61;
    v67 = objc_msgSend(v65, "description");
    v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
    v70 = v69;

    *(_QWORD *)(v63 + 96) = &type metadata for String;
    *(_QWORD *)(v63 + 104) = v64;
    *(_QWORD *)(v63 + 72) = v68;
    *(_QWORD *)(v63 + 80) = v70;
    os_log(_:dso:log:_:_:)(v60, &_mh_execute_header, v66, "[seymour] %@ failed to load catalog workout identifier for catalog item: %@", 75, 2, v63);

    swift_bridgeObjectRelease(v63);
    v72 = static os_log_type_t.error.getter(v71);
    v73 = (void *)HKLogActivity;
    v74 = swift_allocObject(v62, 112, 7);
    *(_OWORD *)(v74 + 16) = v144;
    *(_QWORD *)(v74 + 56) = &type metadata for String;
    *(_QWORD *)(v74 + 64) = v64;
    *(_QWORD *)(v74 + 32) = 0xD000000000000050;
    *(_QWORD *)(v74 + 40) = 0x800000010069C4B0;
    *(_QWORD *)(v74 + 96) = v145;
    *(_QWORD *)(v74 + 104) = sub_1000083D8((unint64_t *)&qword_100823AB0, (uint64_t (*)(uint64_t))&type metadata accessor for MindfulnessSessionViewModel, (uint64_t)&protocol conformance descriptor for NSObject);
    v75 = v146;
    *(_QWORD *)(v74 + 72) = v146;
    v76 = v75;
    v77 = v73;
    os_log(_:dso:log:_:_:)(v72, &_mh_execute_header, v77, "%@ failed to fetch catalog item view model for mindfulness session %@", 69, 2, v74);

    swift_bridgeObjectRelease(v74);
    goto LABEL_12;
  }
  v125 = v22;
  v126 = v16;
  v145 = (char *)v150[0];
  v132 = v150[1];
  v131 = static os_log_type_t.default.getter(v37);
  v38 = (void *)HKLogActivity;
  v129 = sub_100047110((uint64_t *)&unk_100827460);
  v39 = swift_allocObject(v129, 112, 7);
  *(_OWORD *)(v39 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v39 + 56) = &type metadata for String;
  v40 = sub_100038CF8();
  *(_QWORD *)(v39 + 64) = v40;
  *(_QWORD *)(v39 + 32) = 0xD00000000000002ALL;
  *(_QWORD *)(v39 + 40) = 0x80000001006892D0;
  v127 = 0x80000001006892D0;
  v41 = v151;
  v42 = v38;
  v43 = objc_msgSend(v41, "description");
  v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
  v130 = v45;

  *(_QWORD *)(v39 + 96) = &type metadata for String;
  *(_QWORD *)(v39 + 104) = v40;
  v128 = v40;
  v46 = v130;
  *(_QWORD *)(v39 + 72) = v44;
  *(_QWORD *)(v39 + 80) = v46;
  os_log(_:dso:log:_:_:)(v131, &_mh_execute_header, v42, "[seymour] %@ fetching catalog item view model for catalog item: %@", 66, 2, v39);

  swift_bridgeObjectRelease(v39);
  v47 = v144;
  v48 = *(void **)(v144 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogItemViewModelCache);
  v49 = v132;
  v50 = String._bridgeToObjectiveC()();
  v51 = objc_msgSend(v48, "objectForKey:", v50);

  if (!v51)
  {
    v80 = swift_allocObject(&unk_100799F18, 24, 7);
    swift_unknownObjectWeakInit(v80 + 16, v47);
    v81 = (_QWORD *)swift_allocObject(&unk_10079A788, 56, 7);
    v146 = v81;
    v82 = v145;
    v81[2] = v80;
    v81[3] = v82;
    v81[4] = v49;
    v81[5] = sub_1003A1084;
    v78 = v147;
    v81[6] = v147;
    sub_1000252E0((uint64_t)&v151, (uint64_t)&v148);
    v83 = swift_allocObject(&unk_10079A7B0, 72, 7);
    v133 = v83;
    sub_10002411C(&v148, v83 + 16);
    *(_QWORD *)(v83 + 56) = sub_1003A1084;
    *(_QWORD *)(v83 + 64) = v78;
    swift_retain_n(v78, 2);
    v84 = swift_bridgeObjectRetain(v49);
    v85 = v141;
    CatalogLockupPlaceholder.init(identifier:referenceType:editorialCardIdentifier:)(v82, v49, 8, 0, 1, 0, 0, v84);
    v86 = *(_QWORD *)(v47 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24);
    v87 = *(_QWORD *)(v47 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 32);
    sub_100016804((_QWORD *)(v47 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient), v86);
    v88 = sub_100047110(&qword_100820A58);
    v89 = v142;
    v90 = *(unsigned __int8 *)(v142 + 80);
    v91 = (v90 + 32) & ~v90;
    v92 = swift_allocObject(v88, v91 + *(_QWORD *)(v142 + 72), v90 | 7);
    *(_OWORD *)(v92 + 16) = xmmword_100622F90;
    (*(void (**)(uint64_t, char *, uint64_t))(v89 + 16))(v92 + v91, v85, v143);
    v93 = v139;
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)(33, v92, v86, v87);
    swift_bridgeObjectRelease(v92);
    v94 = swift_allocObject(&unk_10079A7D8, 32, 7);
    v95 = v146;
    *(_QWORD *)(v94 + 16) = sub_10039FA3C;
    *(_QWORD *)(v94 + 24) = v95;
    v96 = swift_allocObject(&unk_10079A800, 32, 7);
    *(_QWORD *)(v96 + 16) = sub_1003A43E4;
    *(_QWORD *)(v96 + 24) = v94;
    v97 = v135;
    v98 = v134;
    v99 = v136;
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v134, v93, v136);
    v100 = *(unsigned __int8 *)(v97 + 80);
    v101 = (v100 + 16) & ~v100;
    v102 = (v13 + v101 + 7) & 0xFFFFFFFFFFFFFFF8;
    v103 = swift_allocObject(&unk_10079A828, v102 + 16, v100 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v97 + 32))(v103 + v101, v98, v99);
    v104 = (uint64_t (**)(uint64_t *))(v103 + v102);
    *v104 = sub_1003A43FC;
    v104[1] = (uint64_t (*)(uint64_t *))v96;
    swift_retain(v95);
    v145 = (char *)&type metadata for () + 8;
    v105 = v140;
    Promise.init(asyncOperation:)(sub_10039FAA4, v103, (char *)&type metadata for () + 8);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v139, v99);
    v106 = swift_allocObject(&unk_10079A850, 32, 7);
    v107 = v133;
    *(_QWORD *)(v106 + 16) = sub_100110464;
    *(_QWORD *)(v106 + 24) = v107;
    v108 = swift_allocObject(&unk_10079A878, 32, 7);
    *(_QWORD *)(v108 + 16) = sub_1003A43D0;
    *(_QWORD *)(v108 + 24) = v106;
    v109 = v138;
    v110 = v137;
    v111 = v126;
    (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v137, v105, v126);
    v112 = *(unsigned __int8 *)(v109 + 80);
    v113 = (v112 + 16) & ~v112;
    v114 = (v17 + v113 + 7) & 0xFFFFFFFFFFFFFFF8;
    v115 = swift_allocObject(&unk_10079A8A0, v114 + 16, v112 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v109 + 32))(v115 + v113, v110, v111);
    v116 = (_QWORD *)(v115 + v114);
    *v116 = sub_1001104C4;
    v116[1] = v108;
    swift_retain(v107);
    v117 = v125;
    Promise.init(asyncOperation:)(sub_10039F50C, v115, v145);
    v118 = *(void (**)(char *, uint64_t))(v109 + 8);
    v118(v140, v111);
    v119 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v111);
    v121 = v120;
    v122 = swift_allocObject(&unk_10079A8C8, 32, 7);
    *(_QWORD *)(v122 + 16) = 0;
    *(_QWORD *)(v122 + 24) = 0;
    v119(sub_10039F514, v122);
    swift_release(v146);
    swift_release(v107);
    swift_release(v121);
    v123 = swift_release(v122);
    ((void (*)(char *, uint64_t, __n128))v118)(v117, v111, v123);
    (*(void (**)(char *, uint64_t))(v142 + 8))(v141, v143);
    goto LABEL_13;
  }
  v53 = static os_log_type_t.default.getter(v52);
  v54 = (void *)HKLogActivity;
  v55 = swift_allocObject(v129, 152, 7);
  *(_OWORD *)(v55 + 16) = xmmword_100624A40;
  v56 = v128;
  *(_QWORD *)(v55 + 56) = &type metadata for String;
  *(_QWORD *)(v55 + 64) = v56;
  *(_QWORD *)(v55 + 32) = 0xD00000000000002ALL;
  *(_QWORD *)(v55 + 40) = v127;
  *(_QWORD *)(v55 + 96) = &type metadata for String;
  *(_QWORD *)(v55 + 104) = v56;
  *(_QWORD *)(v55 + 72) = v145;
  *(_QWORD *)(v55 + 80) = v49;
  *(_QWORD *)(v55 + 136) = type metadata accessor for CatalogItemViewModel(0);
  *(_QWORD *)(v55 + 144) = sub_1000083D8(&qword_100820A60, type metadata accessor for CatalogItemViewModel, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v55 + 112) = v51;
  v57 = v54;
  v58 = v51;
  os_log(_:dso:log:_:_:)(v53, &_mh_execute_header, v57, "[seymour] %@ returning cached catalog item view model for catalog item identifier: %@, catalog item view model: %@", 114, 2, v55);

  swift_bridgeObjectRelease(v55);
  v59 = v58;
  sub_10058DEF8((char *)v51, v146, a4, v133, a6, a7);

LABEL_12:
  v78 = v147;
LABEL_13:
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v151);
  *(_QWORD *)&result = swift_release(v78).n128_u64[0];
  return result;
}

uint64_t sub_1003A1040()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003A1084(uint64_t a1)
{
  return sub_1000278B4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10058DEF8);
}

uint64_t sub_1003A1098()
{
  return sub_10004BE58(&qword_100820A48);
}

uint64_t sub_1003A10A4()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_1003A10B4()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A10C0(uint64_t a1)
{
  uint64_t v1;

  return sub_10039B658(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t (*)(_QWORD))&type metadata accessor for NavigationRequest, qword_1008364F0, (uint64_t)&unk_10079A918, (uint64_t)sub_10039F514);
}

uint64_t sub_1003A110C()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A1118(uint64_t a1)
{
  uint64_t v1;

  return sub_10039BBA4(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1003A1128()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A1134(uint64_t a1)
{
  return sub_1003A4218(a1, (uint64_t)&unk_100836170, (uint64_t)&unk_10079A9B8, (uint64_t)sub_10039F514, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_10039B3D4);
}

uint64_t sub_1003A115C()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A1168(uint64_t a1)
{
  return sub_1003A4218(a1, (uint64_t)&unk_100830B30, (uint64_t)&unk_10079AA08, (uint64_t)sub_100110028, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_10039B3D4);
}

uint64_t sub_1003A1194(uint64_t a1)
{
  return sub_1000278B4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100448060);
}

uint64_t sub_1003A11A4()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003A11B0()
{
  return sub_10004BE58(&qword_100830B20);
}

uint64_t sub_1003A11BC()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_1003A11D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003A1214(uint64_t a1)
{
  return sub_1000278B4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10044806C);
}

uint64_t sub_1003A1228()
{
  return sub_10004BE58(&qword_100820A48);
}

uint64_t sub_1003A1234()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

double sub_1003A1244(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  double v32;
  char *v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  void (*v72)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  unint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t, uint64_t);
  id v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  double result;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char v110[32];

  v108 = a3;
  v7 = sub_100047110(&qword_100830B20);
  v100 = *(_QWORD *)(v7 - 8);
  v101 = v7;
  __chkstk_darwin(v7);
  v97 = v8;
  v98 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v99 = (char *)&v92 - v10;
  v107 = sub_100047110((uint64_t *)&unk_100836170);
  v105 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v103 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v104 = (char *)&v92 - v13;
  v102 = v14;
  __chkstk_darwin(v15);
  v106 = (char *)&v92 - v16;
  v17 = sub_100047110(&qword_1008239C0);
  __chkstk_darwin(v17);
  v96 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v92 - v20;
  v23 = type metadata accessor for Trainer(0, v22);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v95 = (char *)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = a4;
  swift_retain(a4);
  v27 = static os_log_type_t.default.getter(v26);
  v28 = (void *)HKLogActivity;
  v94 = sub_100047110((uint64_t *)&unk_100827460);
  v29 = swift_allocObject(v94, 112, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v29 + 56) = &type metadata for String;
  v30 = sub_100038CF8();
  v93 = (unint64_t)"tails for identifier: %@";
  *(_QWORD *)(v29 + 32) = 0xD000000000000024;
  *(_QWORD *)(v29 + 40) = 0x800000010069C3E0;
  *(_QWORD *)(v29 + 96) = &type metadata for String;
  *(_QWORD *)(v29 + 104) = v30;
  *(_QWORD *)(v29 + 64) = v30;
  *(_QWORD *)(v29 + 72) = a1;
  *(_QWORD *)(v29 + 80) = a2;
  v31 = v28;
  *(_QWORD *)&v32 = swift_bridgeObjectRetain(a2).n128_u64[0];
  os_log(_:dso:log:_:_:)(v27, &_mh_execute_header, v31, "[seymour] %@ fetching trainer details for identifier: %@", 56, 2, v29, v32);

  swift_bridgeObjectRelease(v29);
  v33 = v108;
  v34 = &v108[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_trainerCache];
  swift_beginAccess(&v108[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_trainerCache], v110, 0, 0);
  v35 = *(_QWORD *)v34;
  if (*(_QWORD *)(v35 + 16))
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(v35);
    v36 = sub_100438F74(a1, a2);
    v37 = a1;
    if ((v38 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))(v21, *(_QWORD *)(v35 + 56) + *(_QWORD *)(v24 + 72) * v36, v23);
      v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
      v39(v21, 0, 1, v23);
    }
    else
    {
      v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
      v39(v21, 1, 1, v23);
    }
    swift_bridgeObjectRelease(a2);
    v40 = swift_bridgeObjectRelease(v35);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v24 + 48))(v21, 1, v23, v40) != 1)
    {
      v79 = v95;
      v80 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v95, v21, v23);
      v81 = a1;
      LODWORD(v108) = static os_log_type_t.default.getter(v80);
      v82 = (void *)HKLogActivity;
      v83 = swift_allocObject(v94, 152, 7);
      *(_OWORD *)(v83 + 16) = xmmword_100624A40;
      *(_QWORD *)(v83 + 56) = &type metadata for String;
      *(_QWORD *)(v83 + 64) = v30;
      v84 = v93 | 0x8000000000000000;
      *(_QWORD *)(v83 + 32) = 0xD000000000000024;
      *(_QWORD *)(v83 + 40) = v84;
      *(_QWORD *)(v83 + 96) = &type metadata for String;
      *(_QWORD *)(v83 + 104) = v30;
      *(_QWORD *)(v83 + 72) = v81;
      *(_QWORD *)(v83 + 80) = a2;
      swift_bridgeObjectRetain(a2);
      v85 = v39;
      v86 = v82;
      v87 = Trainer.description.getter();
      *(_QWORD *)(v83 + 136) = &type metadata for String;
      *(_QWORD *)(v83 + 144) = v30;
      *(_QWORD *)(v83 + 112) = v87;
      *(_QWORD *)(v83 + 120) = v88;
      os_log(_:dso:log:_:_:)(v108, &_mh_execute_header, v86, "[seymour] %@ returning cached trainer for identifier: %@, trainer: %@", 69, 2, v83);

      v89 = swift_bridgeObjectRelease(v83);
      v90 = (uint64_t)v96;
      (*(void (**)(char *, char *, uint64_t, __n128))(v24 + 16))(v96, v79, v23, v89);
      v85((char *)v90, 0, 1, v23);
      v77 = v109;
      sub_1002C3A54(v90, v109);
      sub_10001BE90(v90, &qword_1008239C0);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v79, v23);
      goto LABEL_9;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v21, 1, 1, v23);
    v37 = a1;
  }
  sub_10001BE90((uint64_t)v21, &qword_1008239C0);
  v41 = swift_allocObject(&unk_100799F18, 24, 7);
  swift_unknownObjectWeakInit(v41 + 16, v33);
  v42 = (_QWORD *)swift_allocObject(&unk_10079B9F8, 56, 7);
  v42[2] = v41;
  v42[3] = v37;
  v42[4] = a2;
  v42[5] = sub_1003A3B34;
  v43 = v109;
  v42[6] = v109;
  v44 = (_QWORD *)swift_allocObject(&unk_10079BA20, 48, 7);
  v44[2] = v37;
  v44[3] = a2;
  v44[4] = sub_1003A3B34;
  v44[5] = v43;
  v45 = v37;
  v46 = *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24];
  v47 = *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 32];
  sub_100016804(&v33[OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient], v46);
  swift_bridgeObjectRetain_n(a2, 2);
  swift_retain_n(v43, 2);
  v48 = v99;
  dispatch thunk of CatalogClientProtocol.fetchRemoteTrainerDetail(_:)(v45, a2, v46, v47);
  v49 = swift_allocObject(&unk_10079BA48, 32, 7);
  *(_QWORD *)(v49 + 16) = sub_1003A03C4;
  *(_QWORD *)(v49 + 24) = v42;
  v50 = swift_allocObject(&unk_10079BA70, 32, 7);
  *(_QWORD *)(v50 + 16) = sub_1003A43D0;
  *(_QWORD *)(v50 + 24) = v49;
  v52 = v100;
  v51 = v101;
  v53 = v98;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v98, v48, v101);
  v54 = *(unsigned __int8 *)(v52 + 80);
  v55 = (v54 + 16) & ~v54;
  v56 = (v97 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
  v57 = swift_allocObject(&unk_10079BA98, v56 + 16, v54 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v57 + v55, v53, v51);
  v58 = (_QWORD *)(v57 + v56);
  *v58 = sub_1003A4400;
  v58[1] = v50;
  swift_retain(v42);
  v108 = (char *)&type metadata for () + 8;
  v59 = v104;
  Promise.init(asyncOperation:)(sub_1003A0424, v57, (char *)&type metadata for () + 8);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v48, v51);
  v60 = swift_allocObject(&unk_10079BAC0, 32, 7);
  *(_QWORD *)(v60 + 16) = sub_1003A42C0;
  *(_QWORD *)(v60 + 24) = v44;
  v61 = swift_allocObject(&unk_10079BAE8, 32, 7);
  *(_QWORD *)(v61 + 16) = sub_1003A43D0;
  *(_QWORD *)(v61 + 24) = v60;
  v62 = v105;
  v63 = v103;
  v64 = v107;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v103, v59, v107);
  v65 = *(unsigned __int8 *)(v62 + 80);
  v66 = (v65 + 16) & ~v65;
  v67 = (v102 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
  v68 = swift_allocObject(&unk_10079BB10, v67 + 16, v65 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v68 + v66, v63, v64);
  v69 = (_QWORD *)(v68 + v67);
  *v69 = sub_1001104C4;
  v69[1] = v61;
  swift_retain(v44);
  v70 = v106;
  Promise.init(asyncOperation:)(sub_10039F50C, v68, v108);
  v71 = *(void (**)(char *, uint64_t))(v62 + 8);
  v71(v59, v64);
  v72 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v64);
  v74 = v73;
  v75 = swift_allocObject(&unk_10079BB38, 32, 7);
  *(_QWORD *)(v75 + 16) = 0;
  *(_QWORD *)(v75 + 24) = 0;
  v72(sub_10039F514, v75);
  swift_release(v42);
  swift_release(v44);
  v76 = v74;
  v77 = v109;
  swift_release(v76);
  v78 = swift_release(v75);
  ((void (*)(char *, uint64_t, __n128))v71)(v70, v64, v78);
LABEL_9:
  *(_QWORD *)&result = swift_release(v77).n128_u64[0];
  return result;
}

double sub_1003A1A38(void *a1, void *a2, void (*a3)(_QWORD), uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  id v21;
  NSString v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  Class isa;
  id v34;
  uint64_t v35;
  uint64_t v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  Class v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  double v53;
  double result;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  _QWORD aBlock[5];
  uint64_t v70;

  v67 = a1;
  v68 = a2;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)swift_allocObject(&unk_10079B778, 48, 7);
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  v15 = (void *)objc_opt_self(HKObjectType);
  swift_retain(a4);
  v16 = a5;
  v17 = objc_msgSend(v15, "quantityTypeForIdentifier:", HKQuantityTypeIdentifierBodyMass, swift_retain(a6).n128_f64[0]);
  if (v17)
  {
    v18 = v17;
    static String._unconditionallyBridgeFromObjectiveC(_:)(HKSampleSortIdentifierStartDate);
    v20 = v19;
    v21 = objc_allocWithZone((Class)NSSortDescriptor);
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20, v23, v24, v25, v26, v27, v28, v29);
    v30 = objc_msgSend(v21, "initWithKey:ascending:", v22, 0);

    v31 = (void *)objc_opt_self(HKQuery);
    v32 = objc_msgSend(v67, "endDate");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v32);

    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v34 = objc_msgSend(v31, "predicateForSamplesWithStartDate:endDate:options:", 0, isa, 0);

    v35 = sub_100047110((uint64_t *)&unk_100828340);
    v36 = swift_allocObject(v35, 40, 7);
    *(_OWORD *)(v36 + 16) = xmmword_100623630;
    *(_QWORD *)(v36 + 32) = v30;
    aBlock[0] = v36;
    specialized Array._endMutation()(v36);
    v37 = (CHWorkoutDetailHeartRateTableViewCell *)aBlock[0];
    v38 = swift_allocObject(&unk_10079B7A0, 32, 7);
    *(_QWORD *)(v38 + 16) = sub_1003A39A4;
    *(_QWORD *)(v38 + 24) = v14;
    v39 = objc_allocWithZone((Class)HKSampleQuery);
    sub_10001E724(0, &qword_1008264A8, NSSortDescriptor_ptr);
    v40 = v18;
    v41 = v34;
    v42 = v30;
    swift_retain(v14);
    v43 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v37, v44, v45, v46, v47, v48, v49, v50);
    aBlock[4] = sub_1003A39B4;
    v70 = v38;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100008B5C;
    aBlock[3] = &unk_10079B7B8;
    v51 = _Block_copy(aBlock);
    v52 = objc_msgSend(v39, "initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:", v40, v41, 1, v43, v51);

    _Block_release(v51);
    *(_QWORD *)&v53 = swift_release(v70).n128_u64[0];
    objc_msgSend(v68, "executeQuery:", v52, v53);
    swift_release(v14);

  }
  else
  {
    v55 = static os_log_type_t.error.getter(0);
    v56 = (void *)HKLogActivity;
    v57 = sub_100047110((uint64_t *)&unk_100827460);
    v58 = swift_allocObject(v57, 72, 7);
    *(_OWORD *)(v58 + 16) = xmmword_100622F90;
    *(_QWORD *)(v58 + 56) = &type metadata for String;
    *(_QWORD *)(v58 + 64) = sub_100038CF8();
    *(_QWORD *)(v58 + 32) = 0xD00000000000002CLL;
    *(_QWORD *)(v58 + 40) = 0x800000010069C820;
    v59 = v56;
    os_log(_:dso:log:_:_:)(v55, &_mh_execute_header, v59, "[seymour] %@ failed to create weight quantity type", 50, 2, v58);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v58, v60, v61, v62, v63, v64, v65, v66);
    a3(0);
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

double sub_1003A1E60()
{
  id v0;
  void *v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  const char *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  unint64_t v11;
  _QWORD v13[2];
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;

  v0 = objc_msgSend((id)objc_opt_self(CMNatalimeter), "defaultUserProfile");
  if (!v0
    || (v1 = v0,
        v2 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v0, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v1, !v2))
  {
    v15 = 0u;
    v16 = 0u;
LABEL_11:
    sub_10001BE90((uint64_t)&v15, (uint64_t *)&unk_100828420);
    return 68.0299988;
  }
  v13[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(CMNatalimeterSetUserWeightKG);
  v13[1] = v3;
  AnyHashable.init<A>(_:)(v14, v13, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)v2->cellPadding && (v11 = sub_10004C814((uint64_t)v14), (v4 & 1) != 0))
  {
    sub_10003E9BC(*(_QWORD *)v2[1].cellInset + 32 * v11, (uint64_t)&v15);
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }
  swift_bridgeObjectRelease(v2, v4, v5, v6, v7, v8, v9, v10);
  sub_10004CC10((uint64_t)v14);
  if (!*((_QWORD *)&v16 + 1))
    goto LABEL_11;
  if (swift_dynamicCast(v14, &v15, (char *)&type metadata for Any + 8, &type metadata for Double, 6))
    return *(double *)v14;
  return 68.0299988;
}

void sub_1003A1FA0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  id v26;
  void *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  unint64_t v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  char *v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (**v83)(uint64_t);
  void (*v84)(uint64_t);
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  char *v111;
  void (*v112)(char *, uint64_t);
  void (*v113)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __n128 v117;
  SEL v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  id v132;
  id v133;
  SEL v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  void (*v145)(uint64_t);
  void (*v146)(uint64_t);
  id v147;
  SEL v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  CHWorkoutDetailHeartRateTableViewCell *v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  __int128 v173;
  void (*v174)(uint64_t);
  uint64_t v175;
  _QWORD v176[2];
  __int128 v177;
  __int128 v178;

  v160 = a3;
  v159 = a2;
  v8 = sub_100047110(&qword_100830B38);
  v163 = *(_QWORD *)(v8 - 8);
  v164 = v8;
  v9 = *(_QWORD *)(v163 + 64);
  __chkstk_darwin(v8);
  v161 = (char *)&v155 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v162 = (char *)&v155 - v11;
  v12 = sub_100047110(&qword_100830B40);
  v167 = *(_QWORD *)(v12 - 8);
  v168 = v12;
  v13 = *(_QWORD *)(v167 + 64);
  __chkstk_darwin(v12);
  v165 = (char *)&v155 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v166 = (char *)&v155 - v15;
  *(_QWORD *)&v173 = sub_100047110((uint64_t *)&unk_100836170);
  v171 = *(_QWORD *)(v173 - 8);
  v16 = *(_QWORD *)(v171 + 64);
  __chkstk_darwin(v173);
  v169 = (char *)&v155 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v170 = (char *)&v155 - v18;
  __chkstk_darwin(v19);
  v172 = (char *)&v155 - v20;
  v21 = type metadata accessor for SeymourArtworkSizingBehavior(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_QWORD *)(v22 + 64);
  __chkstk_darwin(v21);
  v24 = swift_allocObject(&unk_10079AFF8, 32, 7);
  *(_QWORD *)(v24 + 16) = a4;
  *(_QWORD *)(v24 + 24) = a5;
  v175 = v24;
  v25 = a4;
  v26 = objc_msgSend(a1, "metadata", swift_retain(a5).n128_f64[0]);
  v174 = v25;
  if (!v26)
  {
    v177 = 0u;
    v178 = 0u;
    goto LABEL_9;
  }
  v27 = v26;
  v28 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v26, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v30 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter(v29);
  v38 = (CHWorkoutDetailHeartRateTableViewCell *)v31;
  if (!*(_QWORD *)v28->cellPadding || (v39 = sub_100438F74(v30, v31), (v31 & 1) == 0))
  {
    v177 = 0u;
    v178 = 0u;
    swift_bridgeObjectRelease(v38, (SEL)v31, v32, v33, v34, v35, v36, v37);
    swift_bridgeObjectRelease(v28, v118, v119, v120, v121, v122, v123, v124);
    goto LABEL_9;
  }
  sub_10003E9BC(*(_QWORD *)v28[1].cellInset + 32 * v39, (uint64_t)&v177);
  swift_bridgeObjectRelease(v38, v40, v41, v42, v43, v44, v45, v46);
  swift_bridgeObjectRelease(v28, v47, v48, v49, v50, v51, v52, v53);
  if (!*((_QWORD *)&v178 + 1))
  {
LABEL_9:
    v54 = sub_10001BE90((uint64_t)&v177, (uint64_t *)&unk_100828420);
    goto LABEL_10;
  }
  v54 = swift_dynamicCast(v176, &v177, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if ((_DWORD)v54)
  {
    v156 = v176[0];
    v155 = (CHWorkoutDetailHeartRateTableViewCell *)v176[1];
    v55 = swift_allocObject(&unk_100799F18, 24, 7);
    v56 = v160;
    swift_unknownObjectWeakInit(v55 + 16, v160);
    sub_10004F8C8(v159, (uint64_t)&v155 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SeymourArtworkSizingBehavior);
    v57 = *(unsigned __int8 *)(v22 + 80);
    v58 = (v57 + 32) & ~v57;
    v59 = swift_allocObject(&unk_10079B020, v58 + v23, v57 | 7);
    v174 = (void (*)(uint64_t))v59;
    *(_QWORD *)(v59 + 16) = sub_1003A31F4;
    *(_QWORD *)(v59 + 24) = v55;
    v158 = v55;
    sub_100047C88((uint64_t)&v155 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v59 + v58, type metadata accessor for SeymourArtworkSizingBehavior);
    v60 = swift_allocObject(&unk_10079B048, 32, 7);
    v159 = v60;
    v61 = v175;
    *(_QWORD *)(v60 + 16) = sub_1003A33A0;
    *(_QWORD *)(v60 + 24) = v61;
    v62 = v61;
    v63 = (_QWORD *)swift_allocObject(&unk_10079B070, 40, 7);
    v157 = v63;
    v63[2] = a1;
    v63[3] = sub_1003A33A0;
    v63[4] = v62;
    v64 = *(_QWORD *)(v56 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24);
    v65 = *(_QWORD *)(v56 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 32);
    sub_100016804((_QWORD *)(v56 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient), v64);
    swift_retain_n(v62, 2);
    swift_retain(v55);
    v66 = a1;
    v67 = v162;
    v68 = v155;
    CatalogClientProtocol.fetchRemoteCatalogWorkoutDetail(_:)(v156, v155, v64, v65);
    swift_bridgeObjectRelease(v68, v69, v70, v71, v72, v73, v74, v75);
    v77 = v163;
    v76 = v164;
    v78 = v161;
    (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v161, v67, v164);
    v79 = *(unsigned __int8 *)(v77 + 80);
    v80 = (v79 + 16) & ~v79;
    v81 = (v9 + v80 + 7) & 0xFFFFFFFFFFFFFFF8;
    v82 = swift_allocObject(&unk_10079B098, v81 + 16, v79 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v77 + 32))(v82 + v80, v78, v76);
    v83 = (void (**)(uint64_t))(v82 + v81);
    v84 = v174;
    *v83 = sub_1003A3200;
    v83[1] = v84;
    swift_retain(v84);
    v85 = sub_100047110(&qword_100830B48);
    v86 = v166;
    Promise.init(asyncOperation:)(sub_1003A3258, v82, v85);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v67, v76);
    v87 = swift_allocObject(&unk_10079B0C0, 32, 7);
    v88 = v159;
    *(_QWORD *)(v87 + 16) = sub_1003A440C;
    *(_QWORD *)(v87 + 24) = v88;
    v89 = swift_allocObject(&unk_10079B0E8, 32, 7);
    *(_QWORD *)(v89 + 16) = sub_1003A43E4;
    *(_QWORD *)(v89 + 24) = v87;
    v91 = v167;
    v90 = v168;
    v92 = v165;
    (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v165, v86, v168);
    v93 = *(unsigned __int8 *)(v91 + 80);
    v94 = (v93 + 16) & ~v93;
    v95 = (v13 + v94 + 7) & 0xFFFFFFFFFFFFFFF8;
    v96 = swift_allocObject(&unk_10079B110, v95 + 16, v93 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v91 + 32))(v96 + v94, v92, v90);
    v97 = (_QWORD *)(v96 + v95);
    *v97 = sub_1003A4404;
    v97[1] = v89;
    swift_retain(v88);
    v165 = (char *)&type metadata for () + 8;
    v98 = v170;
    Promise.init(asyncOperation:)(sub_1003A32A8, v96, (char *)&type metadata for () + 8);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v86, v90);
    v99 = swift_allocObject(&unk_10079B138, 32, 7);
    v100 = v157;
    *(_QWORD *)(v99 + 16) = sub_1003A42BC;
    *(_QWORD *)(v99 + 24) = v100;
    v101 = swift_allocObject(&unk_10079B160, 32, 7);
    *(_QWORD *)(v101 + 16) = sub_1003A43D0;
    *(_QWORD *)(v101 + 24) = v99;
    v102 = v171;
    v103 = v169;
    v104 = v173;
    (*(void (**)(char *, char *, _QWORD))(v171 + 16))(v169, v98, v173);
    v105 = *(unsigned __int8 *)(v102 + 80);
    v106 = (v105 + 16) & ~v105;
    v107 = (v16 + v106 + 7) & 0xFFFFFFFFFFFFFFF8;
    v108 = swift_allocObject(&unk_10079B188, v107 + 16, v105 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v102 + 32))(v108 + v106, v103, v104);
    v109 = (_QWORD *)(v108 + v107);
    *v109 = sub_1001104C4;
    v109[1] = v101;
    v110 = v100;
    swift_retain(v100);
    v111 = v172;
    Promise.init(asyncOperation:)(sub_10039F50C, v108, v165);
    v112 = *(void (**)(char *, uint64_t))(v102 + 8);
    v112(v98, v104);
    v113 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v104);
    v115 = v114;
    v116 = swift_allocObject(&unk_10079B1B0, 32, 7);
    *(_QWORD *)(v116 + 16) = 0;
    *(_QWORD *)(v116 + 24) = 0;
    v113(sub_10039F514, v116);
    swift_release(v158);
    swift_release(v174);
    swift_release(v159);
    swift_release(v110);
    swift_release(v115);
    v117 = swift_release(v116);
    ((void (*)(char *, uint64_t, __n128))v112)(v111, v104, v117);
    swift_release(v175);
    return;
  }
LABEL_10:
  v125 = static os_log_type_t.error.getter(v54);
  v126 = (void *)HKLogActivity;
  v127 = sub_100047110((uint64_t *)&unk_100827460);
  v128 = swift_allocObject(v127, 112, 7);
  v173 = xmmword_100620BC0;
  *(_OWORD *)(v128 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v128 + 56) = &type metadata for String;
  v129 = sub_100038CF8();
  *(_QWORD *)(v128 + 64) = v129;
  *(_QWORD *)(v128 + 32) = 0xD00000000000003ALL;
  *(_QWORD *)(v128 + 40) = 0x800000010069C5D0;
  v130 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  *(_QWORD *)(v128 + 96) = v130;
  v131 = sub_10018A478();
  *(_QWORD *)(v128 + 104) = v131;
  *(_QWORD *)(v128 + 72) = a1;
  v132 = a1;
  v133 = v126;
  os_log(_:dso:log:_:_:)(v125, &_mh_execute_header, v133, "[seymour] %@ failed to load catalog workout identifier for workout: %@", 70, 2, v128);

  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v128, v134, v135, v136, v137, v138, v139, v140);
  v142 = static os_log_type_t.error.getter(v141);
  v143 = (void *)HKLogActivity;
  v144 = swift_allocObject(v127, 112, 7);
  *(_OWORD *)(v144 + 16) = v173;
  *(_QWORD *)(v144 + 56) = &type metadata for String;
  *(_QWORD *)(v144 + 64) = v129;
  *(_QWORD *)(v144 + 32) = 0xD000000000000025;
  *(_QWORD *)(v144 + 40) = 0x800000010069C6F0;
  *(_QWORD *)(v144 + 96) = v130;
  *(_QWORD *)(v144 + 104) = v131;
  v145 = v174;
  *(_QWORD *)(v144 + 72) = v174;
  v146 = v145;
  v147 = v143;
  os_log(_:dso:log:_:_:)(v142, &_mh_execute_header, v147, "%@ failed to load guided run media moment artwork items for workout: %@", 71, 2, v144);
  swift_release(v175);

  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v144, v148, v149, v150, v151, v152, v153, v154);
}

void sub_1003A28BC(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(uint64_t);
  id v28;
  void *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  unint64_t v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  SEL v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  char *v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;
  SEL v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  void (**v85)(uint64_t);
  void (*v86)(uint64_t);
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t (**v99)(uint64_t *);
  char *v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  char *v113;
  void (*v114)(char *, uint64_t);
  void (*v115)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  SEL v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  id v134;
  id v135;
  SEL v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  void (*v147)(uint64_t);
  void (*v148)(uint64_t);
  id v149;
  SEL v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  CHWorkoutDetailHeartRateTableViewCell *v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  __int128 v175;
  void (*v176)(uint64_t);
  _QWORD *v177;
  _QWORD v178[2];
  __int128 v179;
  __int128 v180;

  v162 = a3;
  v161 = a2;
  v10 = sub_100047110(&qword_100830B38);
  v165 = *(_QWORD *)(v10 - 8);
  v166 = v10;
  v11 = *(_QWORD *)(v165 + 64);
  __chkstk_darwin(v10);
  v163 = (char *)&v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v164 = (char *)&v157 - v13;
  v14 = sub_100047110(&qword_100830B40);
  v169 = *(_QWORD *)(v14 - 8);
  v170 = v14;
  v15 = *(_QWORD *)(v169 + 64);
  __chkstk_darwin(v14);
  v167 = (char *)&v157 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v168 = (char *)&v157 - v17;
  *(_QWORD *)&v175 = sub_100047110((uint64_t *)&unk_100836170);
  v173 = *(_QWORD *)(v175 - 8);
  v18 = *(_QWORD *)(v173 + 64);
  __chkstk_darwin(v175);
  v171 = (char *)&v157 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v172 = (char *)&v157 - v20;
  __chkstk_darwin(v21);
  v174 = (char *)&v157 - v22;
  v23 = type metadata accessor for SeymourArtworkSizingBehavior(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v26 = (_QWORD *)swift_allocObject(&unk_10079AD50, 40, 7);
  v26[2] = a4;
  v26[3] = a5;
  v177 = v26;
  v26[4] = a6;
  v27 = a4;
  v28 = objc_msgSend(a1, "metadata", swift_retain(a5).n128_f64[0]);
  v176 = v27;
  if (!v28)
  {
    v179 = 0u;
    v180 = 0u;
    goto LABEL_9;
  }
  v29 = v28;
  v30 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v28, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v32 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter(v31);
  v40 = (CHWorkoutDetailHeartRateTableViewCell *)v33;
  if (!*(_QWORD *)v30->cellPadding || (v41 = sub_100438F74(v32, v33), (v33 & 1) == 0))
  {
    v179 = 0u;
    v180 = 0u;
    swift_bridgeObjectRelease(v40, (SEL)v33, v34, v35, v36, v37, v38, v39);
    swift_bridgeObjectRelease(v30, v120, v121, v122, v123, v124, v125, v126);
    goto LABEL_9;
  }
  sub_10003E9BC(*(_QWORD *)v30[1].cellInset + 32 * v41, (uint64_t)&v179);
  swift_bridgeObjectRelease(v40, v42, v43, v44, v45, v46, v47, v48);
  swift_bridgeObjectRelease(v30, v49, v50, v51, v52, v53, v54, v55);
  if (!*((_QWORD *)&v180 + 1))
  {
LABEL_9:
    v56 = sub_10001BE90((uint64_t)&v179, (uint64_t *)&unk_100828420);
    goto LABEL_10;
  }
  v56 = swift_dynamicCast(v178, &v179, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if ((_DWORD)v56)
  {
    v158 = v178[0];
    v157 = (CHWorkoutDetailHeartRateTableViewCell *)v178[1];
    v57 = swift_allocObject(&unk_100799F18, 24, 7);
    v58 = v162;
    swift_unknownObjectWeakInit(v57 + 16, v162);
    sub_10004F8C8(v161, (uint64_t)&v157 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SeymourArtworkSizingBehavior);
    v59 = *(unsigned __int8 *)(v24 + 80);
    v60 = (v59 + 32) & ~v59;
    v61 = swift_allocObject(&unk_10079AD78, v60 + v25, v59 | 7);
    v176 = (void (*)(uint64_t))v61;
    *(_QWORD *)(v61 + 16) = sub_1003A31F4;
    *(_QWORD *)(v61 + 24) = v57;
    v160 = v57;
    sub_100047C88((uint64_t)&v157 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v61 + v60, type metadata accessor for SeymourArtworkSizingBehavior);
    v62 = swift_allocObject(&unk_10079ADA0, 32, 7);
    v161 = v62;
    v63 = v177;
    *(_QWORD *)(v62 + 16) = sub_1003A31E8;
    *(_QWORD *)(v62 + 24) = v63;
    v64 = v63;
    v65 = (_QWORD *)swift_allocObject(&unk_10079ADC8, 40, 7);
    v159 = v65;
    v65[2] = a1;
    v65[3] = sub_1003A31E8;
    v65[4] = v64;
    v66 = *(_QWORD *)(v58 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 24);
    v67 = *(_QWORD *)(v58 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient + 32);
    sub_100016804((_QWORD *)(v58 + OBJC_IVAR____TtC10FitnessApp30SeymourCatalogItemDataProvider_catalogClient), v66);
    swift_retain_n(v64, 2);
    swift_retain(v57);
    v68 = a1;
    v69 = v164;
    v70 = v157;
    CatalogClientProtocol.fetchRemoteCatalogWorkoutDetail(_:)(v158, v157, v66, v67);
    swift_bridgeObjectRelease(v70, v71, v72, v73, v74, v75, v76, v77);
    v79 = v165;
    v78 = v166;
    v80 = v163;
    (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v163, v69, v166);
    v81 = *(unsigned __int8 *)(v79 + 80);
    v82 = (v81 + 16) & ~v81;
    v83 = (v11 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
    v84 = swift_allocObject(&unk_10079ADF0, v83 + 16, v81 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v84 + v82, v80, v78);
    v85 = (void (**)(uint64_t))(v84 + v83);
    v86 = v176;
    *v85 = sub_1003A3200;
    v85[1] = v86;
    swift_retain(v86);
    v87 = sub_100047110(&qword_100830B48);
    v88 = v168;
    Promise.init(asyncOperation:)(sub_1003A3258, v84, v87);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v69, v78);
    v89 = swift_allocObject(&unk_10079AE18, 32, 7);
    v90 = v161;
    *(_QWORD *)(v89 + 16) = sub_1003A440C;
    *(_QWORD *)(v89 + 24) = v90;
    v91 = swift_allocObject(&unk_10079AE40, 32, 7);
    *(_QWORD *)(v91 + 16) = sub_1003A43E4;
    *(_QWORD *)(v91 + 24) = v89;
    v93 = v169;
    v92 = v170;
    v94 = v167;
    (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v167, v88, v170);
    v95 = *(unsigned __int8 *)(v93 + 80);
    v96 = (v95 + 16) & ~v95;
    v97 = (v15 + v96 + 7) & 0xFFFFFFFFFFFFFFF8;
    v98 = swift_allocObject(&unk_10079AE68, v97 + 16, v95 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v93 + 32))(v98 + v96, v94, v92);
    v99 = (uint64_t (**)(uint64_t *))(v98 + v97);
    *v99 = sub_1003A3274;
    v99[1] = (uint64_t (*)(uint64_t *))v91;
    swift_retain(v90);
    v167 = (char *)&type metadata for () + 8;
    v100 = v172;
    Promise.init(asyncOperation:)(sub_1003A32A8, v98, (char *)&type metadata for () + 8);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v88, v92);
    v101 = swift_allocObject(&unk_10079AE90, 32, 7);
    v102 = v159;
    *(_QWORD *)(v101 + 16) = sub_1003A320C;
    *(_QWORD *)(v101 + 24) = v102;
    v103 = swift_allocObject(&unk_10079AEB8, 32, 7);
    *(_QWORD *)(v103 + 16) = sub_1003A43D0;
    *(_QWORD *)(v103 + 24) = v101;
    v104 = v173;
    v105 = v171;
    v106 = v175;
    (*(void (**)(char *, char *, _QWORD))(v173 + 16))(v171, v100, v175);
    v107 = *(unsigned __int8 *)(v104 + 80);
    v108 = (v107 + 16) & ~v107;
    v109 = (v18 + v108 + 7) & 0xFFFFFFFFFFFFFFF8;
    v110 = swift_allocObject(&unk_10079AEE0, v109 + 16, v107 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))(v110 + v108, v105, v106);
    v111 = (_QWORD *)(v110 + v109);
    *v111 = sub_1001104C4;
    v111[1] = v103;
    v112 = v102;
    swift_retain(v102);
    v113 = v174;
    Promise.init(asyncOperation:)(sub_10039F50C, v110, v167);
    v114 = *(void (**)(char *, uint64_t))(v104 + 8);
    v114(v100, v106);
    v115 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v106);
    v117 = v116;
    v118 = swift_allocObject(&unk_10079AF08, 32, 7);
    *(_QWORD *)(v118 + 16) = 0;
    *(_QWORD *)(v118 + 24) = 0;
    v115(sub_10039F514, v118);
    swift_release(v160);
    swift_release(v176);
    swift_release(v161);
    swift_release(v112);
    swift_release(v117);
    v119 = swift_release(v118);
    ((void (*)(char *, uint64_t, __n128))v114)(v113, v106, v119);
    swift_release(v177);
    return;
  }
LABEL_10:
  v127 = static os_log_type_t.error.getter(v56);
  v128 = (void *)HKLogActivity;
  v129 = sub_100047110((uint64_t *)&unk_100827460);
  v130 = swift_allocObject(v129, 112, 7);
  v175 = xmmword_100620BC0;
  *(_OWORD *)(v130 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v130 + 56) = &type metadata for String;
  v131 = sub_100038CF8();
  *(_QWORD *)(v130 + 64) = v131;
  *(_QWORD *)(v130 + 32) = 0xD00000000000003ALL;
  *(_QWORD *)(v130 + 40) = 0x800000010069C5D0;
  v132 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  *(_QWORD *)(v130 + 96) = v132;
  v133 = sub_10018A478();
  *(_QWORD *)(v130 + 104) = v133;
  *(_QWORD *)(v130 + 72) = a1;
  v134 = a1;
  v135 = v128;
  os_log(_:dso:log:_:_:)(v127, &_mh_execute_header, v135, "[seymour] %@ failed to load catalog workout identifier for workout: %@", 70, 2, v130);

  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v130, v136, v137, v138, v139, v140, v141, v142);
  v144 = static os_log_type_t.error.getter(v143);
  v145 = (void *)HKLogActivity;
  v146 = swift_allocObject(v129, 112, 7);
  *(_OWORD *)(v146 + 16) = v175;
  *(_QWORD *)(v146 + 56) = &type metadata for String;
  *(_QWORD *)(v146 + 64) = v131;
  *(_QWORD *)(v146 + 32) = 0xD000000000000039;
  *(_QWORD *)(v146 + 40) = 0x800000010069C660;
  *(_QWORD *)(v146 + 96) = v132;
  *(_QWORD *)(v146 + 104) = v133;
  v147 = v176;
  *(_QWORD *)(v146 + 72) = v176;
  v148 = v147;
  v149 = v145;
  os_log(_:dso:log:_:_:)(v144, &_mh_execute_header, v149, "%@ failed to load guided run media moment artwork items for workout: %@", 71, 2, v146);
  swift_release(v177);

  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v146, v150, v151, v152, v153, v154, v155, v156);
}

uint64_t sub_1003A31E0()
{
  return sub_1003A3368(40);
}

void sub_1003A31E8(uint64_t a1)
{
  uint64_t v1;

  sub_100527218(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1003A31F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_100397938(a1, a2, v3, a3);
}

uint64_t sub_1003A3204()
{
  return sub_1003A39DC(40);
}

uint64_t sub_1003A320C(uint64_t a1)
{
  uint64_t v1;

  return sub_100397714(a1, *(void **)(v1 + 16), *(uint64_t (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), 0xD00000000000003ALL, 0x800000010069C5D0, "[seymour] %@ failed to fetch guided run media moments for workout: %@ error: %@", 79);
}

uint64_t sub_1003A324C()
{
  return sub_10004BE58(&qword_100830B38);
}

uint64_t sub_1003A3258(uint64_t a1, uint64_t a2)
{
  return sub_1003A3F7C(a1, a2, &qword_100830B38, (uint64_t)&unk_10079AFA8, (uint64_t)sub_1003A3320);
}

uint64_t sub_1003A3274(uint64_t *a1)
{
  uint64_t v1;

  return sub_10039C008(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_10079AF80, (uint64_t)sub_1003A43CC);
}

uint64_t sub_1003A329C()
{
  return sub_10004BE58(&qword_100830B40);
}

uint64_t sub_1003A32A8(uint64_t a1, uint64_t a2)
{
  return sub_1003A3F7C(a1, a2, &qword_100830B40, (uint64_t)&unk_10079AF30, (uint64_t)sub_1003A32E0);
}

uint64_t sub_1003A32C4()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_1003A32D4()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A32E0(uint64_t a1)
{
  return sub_1003A4218(a1, (uint64_t)&unk_100836170, (uint64_t)&unk_10079AF58, (uint64_t)sub_10039F514, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_10039B3D4);
}

uint64_t sub_1003A3308()
{
  return sub_1003A4278((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003A3314()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A3320(uint64_t a1)
{
  uint64_t v1;

  return sub_10039B9A4(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1003A3330(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 16))(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_1003A3360()
{
  return sub_1003A3368(32);
}

uint64_t sub_1003A3368(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, a1, 7);
}

void sub_1003A33A0(uint64_t a1)
{
  uint64_t v1;

  sub_1003BB5A8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1003A33AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for SeymourArtworkSizingBehavior(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 24));
  if (!swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    v6 = v0 + v4 + *(int *)(sub_100047110((uint64_t *)&unk_100839270) + 48);
    v7 = type metadata accessor for ArtworkDimension(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_1003A344C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SeymourArtworkSizingBehavior(0) - 8) + 80);
  sub_100397BB8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_1003A349C()
{
  return sub_1003A39DC(40);
}

uint64_t sub_1003A34A4()
{
  return sub_10004BE58(&qword_100830B38);
}

uint64_t sub_1003A34B0()
{
  return sub_10004BE58(&qword_100830B40);
}

uint64_t sub_1003A34BC()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_1003A34CC()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A34D8(uint64_t a1)
{
  return sub_1003A4218(a1, (uint64_t)&qword_100830B70, (uint64_t)&unk_10079B200, (uint64_t)sub_100110028, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_10039BDD8);
}

void sub_1003A34FC(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_errorRelease(a1);
  else

}

uint64_t sub_1003A350C@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;

  return sub_1003986D0(a1, v2, a2);
}

uint64_t sub_1003A3524(uint64_t *a1)
{
  uint64_t v1;

  return sub_1005385A0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1003A352C()
{
  return sub_10004BE58((uint64_t *)&unk_1008396A0);
}

uint64_t sub_1003A3538(uint64_t a1, uint64_t a2)
{
  return sub_1003A3F7C(a1, a2, (uint64_t *)&unk_1008396A0, (uint64_t)&unk_10079A9E0, (uint64_t)sub_1003A1168);
}

uint64_t sub_1003A3558()
{
  return sub_1003A39DC(40);
}

uint64_t sub_1003A3560(uint64_t a1)
{
  uint64_t v1;

  return sub_1003967AC(a1, *(void **)(v1 + 16), *(uint64_t (**)(_QWORD, __n128))(v1 + 24));
}

uint64_t sub_1003A356C(void **a1)
{
  uint64_t v1;

  return sub_10039BF60(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1003A3574()
{
  return sub_10004BE58(&qword_100822168);
}

uint64_t sub_1003A3580(uint64_t a1, uint64_t a2)
{
  return sub_1003A3F7C(a1, a2, &qword_100822168, (uint64_t)&unk_10079B408, (uint64_t)sub_1003A35B8);
}

uint64_t sub_1003A359C()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_1003A35AC()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A35B8(uint64_t a1)
{
  return sub_1003A4218(a1, (uint64_t)&unk_100836170, (uint64_t)&unk_10079B430, (uint64_t)sub_10039F514, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_10039BDD8);
}

uint64_t sub_1003A35E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003A3610()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;

  v1 = (int *)type metadata accessor for FitnessPlusStackViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = v0 + v4;
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v9 + v1[5]), v12, v13, v14, v15, v16, v17, v18);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v9 + v1[6] + 8), v19, v20, v21, v22, v23, v24, v25);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v9 + v1[7] + 8), v26, v27, v28, v29, v30, v31, v32);
  v11(v9 + v1[8], v10);
  v33 = v9 + v1[9];
  v34 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7 + 8));
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + v8 + 8), v35, v36, v37, v38, v39, v40, v41);
  return swift_deallocObject(v0, v8 + 16, v5);
}

uint64_t sub_1003A373C(CHWorkoutDetailHeartRateTableViewCell *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for FitnessPlusStackViewModel(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100395144(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(uint64_t (**)(_QWORD))(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1003A37B0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  v1 = (int *)type metadata accessor for FitnessPlusStackViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v4;
  v8 = type metadata accessor for Date(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v1[5]), v10, v11, v12, v13, v14, v15, v16);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v1[6] + 8), v17, v18, v19, v20, v21, v22, v23);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v1[7] + 8), v24, v25, v26, v27, v28, v29, v30);
  v9(v7 + v1[8], v8);
  v31 = v7 + v1[9];
  v32 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1003A38B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for FitnessPlusStackViewModel(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_100396234(a1, v1 + v4, *(uint64_t (**)(_QWORD))(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1003A3904()
{
  return sub_10004BE58((uint64_t *)&unk_100839710);
}

uint64_t sub_1003A3910()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_1003A3924()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003A3930()
{
  return sub_10004BE58(&qword_100830B20);
}

uint64_t sub_1003A393C()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_1003A394C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003A3970()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

double sub_1003A39A4(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_100396D44(a1, a2 & 1, *(void (**)(_QWORD, __n128))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD **)(v2 + 40));
}

void sub_1003A39B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1003969B0(a1, a2, a3, *(void (**)(uint64_t, _QWORD))(v3 + 16));
}

uint64_t sub_1003A39BC()
{
  return sub_1003A39DC(48);
}

uint64_t sub_1003A39C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1003973D4(*(double *)(v1 + 40), a1, *(void **)(v1 + 16), *(uint64_t (**)(id))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1003A39D4()
{
  return sub_1003A39DC(40);
}

uint64_t sub_1003A39DC(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1003A3A14(uint64_t a1)
{
  uint64_t v1;

  return sub_100397714(a1, *(void **)(v1 + 16), *(uint64_t (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), 0xD00000000000002ELL, 0x800000010069C8A0, "[seymour] %@ failed to query archived session for workout: %@ error: %@", 71);
}

uint64_t sub_1003A3A54(uint64_t a1)
{
  uint64_t v1;

  return sub_10039AE10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))&type metadata accessor for ArchivedSession, (uint64_t)&unk_10079B9A8, (uint64_t)sub_1003A3B20);
}

uint64_t sub_1003A3A84()
{
  return sub_10004BE58(&qword_100830B78);
}

uint64_t sub_1003A3A90(uint64_t a1, uint64_t a2)
{
  return sub_1003A3F7C(a1, a2, &qword_100830B78, (uint64_t)&unk_10079B958, (uint64_t)sub_1003A3AC8);
}

uint64_t sub_1003A3AAC()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_1003A3ABC()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A3AC8(uint64_t a1)
{
  uint64_t v1;

  return sub_10039B658(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t (*)(_QWORD))&type metadata accessor for ArchivedSession, &qword_100830B80, (uint64_t)&unk_10079B980, (uint64_t)sub_10039F514);
}

uint64_t sub_1003A3B14()
{
  return sub_1003A3DE4((uint64_t (*)(_QWORD))&type metadata accessor for ArchivedSession);
}

uint64_t sub_1003A3B20(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_1003A04C0(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for ArchivedSession);
}

uint64_t sub_1003A3B2C(uint64_t a1)
{
  uint64_t v1;

  return sub_100539DDC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1003A3B34(uint64_t a1)
{
  uint64_t v1;

  return sub_1002C3A54(a1, v1);
}

uint64_t sub_1003A3B40()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003A3B4C()
{
  return sub_10004BE58(&qword_100830B20);
}

uint64_t sub_1003A3B58()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_1003A3B68()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A3B74(uint64_t a1)
{
  uint64_t v1;

  return sub_10039B658(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t (*)(_QWORD))&type metadata accessor for WhatsNewSheet, &qword_100830B88, (uint64_t)&unk_10079BB88, (uint64_t)sub_10039F514);
}

uint64_t sub_1003A3BC0()
{
  return sub_1003A3DE4((uint64_t (*)(_QWORD))&type metadata accessor for WhatsNewSheet);
}

uint64_t sub_1003A3BCC(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_1003A04C0(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for WhatsNewSheet);
}

uint64_t sub_1003A3BD8()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A3BE4(uint64_t a1)
{
  uint64_t v1;

  return sub_10039B658(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t (*)(_QWORD))&type metadata accessor for IntroSheet, &qword_100830B90, (uint64_t)&unk_10079BC00, (uint64_t)sub_10039F514);
}

uint64_t sub_1003A3C30()
{
  return sub_1003A3DE4((uint64_t (*)(_QWORD))&type metadata accessor for IntroSheet);
}

uint64_t sub_1003A3C3C(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_1003A04C0(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for IntroSheet);
}

uint64_t sub_1003A3C48()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A3C54(uint64_t a1)
{
  uint64_t v1;

  return sub_10039B658(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t (*)(_QWORD))&type metadata accessor for NoticePrivacyPreference, &qword_100830B98, (uint64_t)&unk_10079BC78, (uint64_t)sub_10039F514);
}

uint64_t sub_1003A3CA0()
{
  return sub_1003A3DE4((uint64_t (*)(_QWORD))&type metadata accessor for NoticePrivacyPreference);
}

uint64_t sub_1003A3CAC(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_1003A04C0(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for NoticePrivacyPreference);
}

uint64_t sub_1003A3CB8()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A3CC4(uint64_t a1)
{
  uint64_t v1;

  return sub_10039B658(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t (*)(_QWORD))&type metadata accessor for ContentAvailability, &qword_100822E90, (uint64_t)&unk_10079BCF0, (uint64_t)sub_10039F514);
}

uint64_t sub_1003A3D10()
{
  return sub_1003A3DE4((uint64_t (*)(_QWORD))&type metadata accessor for ContentAvailability);
}

uint64_t sub_1003A3D1C(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_1003A04C0(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for ContentAvailability);
}

uint64_t sub_1003A3D2C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003A3D64()
{
  return sub_10004BE58(&qword_100820A48);
}

uint64_t sub_1003A3D70()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

uint64_t sub_1003A3D80()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A3D8C(uint64_t a1)
{
  uint64_t v1;

  return sub_10039B658(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t (*)(_QWORD))&type metadata accessor for ServiceSubscription, &qword_100830BA0, (uint64_t)&unk_10079BEF8, (uint64_t)sub_10039F514);
}

uint64_t sub_1003A3DD8()
{
  return sub_1003A3DE4((uint64_t (*)(_QWORD))&type metadata accessor for ServiceSubscription);
}

uint64_t sub_1003A3DE4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  swift_release(*(_QWORD *)(v1 + 24));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1003A3E5C(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_1003A04C0(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for ServiceSubscription);
}

uint64_t sub_1003A3E68()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A3E74(uint64_t a1)
{
  return sub_1003A4218(a1, (uint64_t)&unk_100836170, (uint64_t)&unk_10079BF70, (uint64_t)sub_10039F514, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_10039B3D4);
}

uint64_t sub_1003A3E9C(uint64_t *a1)
{
  uint64_t v1;

  return sub_10039C088(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1003A3EA4()
{
  return sub_10004BE58(&qword_100830BB0);
}

uint64_t sub_1003A3EB0(uint64_t a1, uint64_t a2)
{
  return sub_1003A3F7C(a1, a2, &qword_100830BB0, (uint64_t)&unk_10079C178, (uint64_t)sub_1003A41F4);
}

uint64_t sub_1003A3ED0(uint64_t *a1)
{
  sub_100047110(&qword_100830BA8);
  return sub_100398680(a1);
}

uint64_t sub_1003A3F2C(uint64_t *a1)
{
  uint64_t v1;

  return sub_10039C008(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_10079C150, (uint64_t)sub_1003A419C);
}

uint64_t sub_1003A3F54()
{
  return sub_10004BE58(&qword_100830BB8);
}

uint64_t sub_1003A3F60(uint64_t a1, uint64_t a2)
{
  return sub_1003A3F7C(a1, a2, &qword_100830BB8, (uint64_t)&unk_10079C100, (uint64_t)sub_1003A4168);
}

uint64_t sub_1003A3F7C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;

  v11 = *(_QWORD *)(sub_100047110(a3) - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (uint64_t *)(v5 + ((*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_10039B1A8(a1, a2, v5 + v12, *v13, v13[1], a3, a4, a5);
}

uint64_t sub_1003A4008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100047110(&qword_100830BA8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003A406C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  sub_100047110(&qword_100830BA8);
  v4 = a1;
  swift_errorRetain(a1);
  v2 = sub_100047110(&qword_100830BA8);
  return CheckedContinuation.resume(throwing:)(&v4, v2);
}

uint64_t sub_1003A40E4()
{
  return sub_10004BE58((uint64_t *)&unk_100836170);
}

double sub_1003A40F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(sub_100047110((uint64_t *)&unk_100836170) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_10039AF90(a1, a2, v2 + v6, *v7, v7[1]);
}

uint64_t sub_1003A415C()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A4168(uint64_t a1)
{
  return sub_1003A4218(a1, (uint64_t)&unk_100836170, (uint64_t)&unk_10079C128, (uint64_t)sub_10039F514, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_10039B3D4);
}

uint64_t sub_1003A4190()
{
  return sub_1003A4278((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003A419C(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  return sub_10016AC4C(a1, a2, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t *)(v2 + 32));
}

uint64_t sub_1003A41B8()
{
  return sub_1003A41C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A41C4(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));
  swift_release(*(_QWORD *)(v1 + 40));
  return swift_deallocObject(v1, 48, 7);
}

uint64_t sub_1003A41F4(uint64_t a1)
{
  return sub_1003A4218(a1, (uint64_t)&unk_100830BB8, (uint64_t)&unk_10079C1A0, (uint64_t)sub_10039F514, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_10039B3D4);
}

uint64_t sub_1003A4218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  _QWORD *v5;

  return a5(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), v5[2], v5[3], v5[4], v5[5], a2, a3, a4);
}

uint64_t sub_1003A425C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_errorRelease(a1);
  else
    return swift_bridgeObjectRelease(a1);
}

uint64_t sub_1003A426C()
{
  return sub_1003A4278((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003A4278(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 24));
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, 40, 7);
}

uint64_t sub_1003A42B0(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  return sub_10039C110(a1, a2, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t *)(v2 + 32));
}

uint64_t sub_1003A43D0()
{
  return sub_1002AC7A4();
}

uint64_t sub_1003A43E4(_QWORD *a1)
{
  return sub_10039FA4C(a1);
}

void sub_1003A4440(uint64_t a1)
{
  unint64_t v1;

  v1 = IndexPath.section.getter(a1);
  if (v1 <= 3)
    __asm { BR              X10 }
  __break(1u);
  JUMPOUT(0x1003A4878);
}

uint64_t sub_1003A4A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[8] = a4;
  v5[9] = a5;
  v6 = sub_100047110(&qword_100830BD8);
  v5[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MetricClickStreamOccurred(0);
  v5[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[12] = v8;
  v5[13] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[14] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[15] = v10;
  v5[16] = v11;
  return swift_task_switch(sub_1003A4AF4, v10, v11);
}

uint64_t sub_1003A4AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  __n128 v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 136) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_10082CD5C);
    *(_QWORD *)(v0 + 144) = v3;
    *v3 = v0;
    v3[1] = sub_1003A4BC0;
    return sub_1002BF8D0(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 72));
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 112));
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 96) + 56))(*(_QWORD *)(v0 + 80), 1, 1, *(_QWORD *)(v0 + 88), v5);
    sub_1003A6260(*(_QWORD *)(v0 + 80));
    v6 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 104));
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1003A4BC0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 144));
  v3 = (void *)v2[17];
  if (v0)
  {
    swift_errorRelease(v0);

    v4 = v2[15];
    v5 = v2[16];
    v6 = sub_1003A4D84;
  }
  else
  {

    v4 = v2[15];
    v5 = v2[16];
    v6 = sub_1003A4C3C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1003A4C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  unint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = swift_release(*(_QWORD *)(v0 + 112));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v4) == 1)
  {
    sub_1003A6260(*(_QWORD *)(v0 + 80));
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 64) + 16;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 32))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
    swift_beginAccess(v5, v0 + 40, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v5);
    if (Strong)
    {
      v7 = (void *)Strong;
      v8 = *(_QWORD *)(v0 + 104);
      v9 = *(_QWORD *)(v0 + 88);
      v10 = (char *)objc_retain(*(id *)(Strong
                                      + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_fitnessAppContext));

      v11 = *(_QWORD *)&v10[OBJC_IVAR___CHFitnessAppContext_eventHub];
      v12 = *(_QWORD *)&v10[OBJC_IVAR___CHFitnessAppContext_eventHub + 8];
      swift_unknownObjectRetain(v11);

      ObjectType = swift_getObjectType(v11);
      v14 = sub_1003A62A0();
      dispatch thunk of EventHubProtocol.publish<A>(_:)(v8, v9, v14, ObjectType, v12);
      swift_unknownObjectRelease(v11);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  }
  v15 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A4D84()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;

  v1 = swift_release(*(_QWORD *)(v0 + 112));
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 96) + 56))(*(_QWORD *)(v0 + 80), 1, 1, *(_QWORD *)(v0 + 88), v1);
  sub_1003A6260(*(_QWORD *)(v0 + 80));
  v2 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1003A4DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  os_log_type_t v4;
  void *v5;
  os_log_type_t v6;
  NSObject *v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  if (a2)
  {
    v3 = swift_errorRetain(a2);
    v4 = static os_log_type_t.error.getter(v3);
    v5 = (void *)HKLogActivity;
    v6 = v4;
    if (os_log_type_enabled(HKLogActivity, v4))
    {
      swift_errorRetain(a2);
      swift_errorRetain(a2);
      v7 = v5;
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      v21 = a2;
      v22 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_errorRetain(a2);
      v10 = sub_100047110(&qword_10082EEA0);
      v11 = String.init<A>(describing:)(&v21, v10);
      v13 = (CHWorkoutDetailHeartRateTableViewCell *)v12;
      v21 = sub_10003E8EC(v11, v12, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v8 + 4);
      swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v7, v6, "[AddToYourRingSuggestion] Failed to load AppStore page: %s", v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);
      swift_errorRelease(a2);

    }
    else
    {
      swift_errorRelease(a2);
    }
  }
}

uint64_t sub_1003A51E8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16[2];
  __int128 v17[2];
  _QWORD v18[5];

  v6 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[3] = type metadata accessor for AppRecommendationDataProvider();
  v18[4] = &off_1007A2968;
  v18[0] = a2;
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_1000252E0((uint64_t)v18, (uint64_t)v17);
  sub_1000252E0(a1, (uint64_t)v16);
  type metadata accessor for MainActor(0);
  swift_retain(a2);
  v10 = a3;
  v11 = static MainActor.shared.getter(v10);
  v12 = (_QWORD *)swift_allocObject(&unk_10079C2C0, 120, 7);
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  v12[4] = v10;
  sub_10002411C(v17, (uint64_t)(v12 + 5));
  sub_10002411C(v16, (uint64_t)(v12 + 10));
  v13 = sub_10020D9C0((uint64_t)v8, (uint64_t)&unk_100830BF0, (uint64_t)v12);
  swift_release(v13);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v18);
}

uint64_t sub_1003A5330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  __int128 v32[2];
  __int128 v33[2];
  _QWORD v34[5];

  v10 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SeymourWorkoutRecommendationDataProvider(0);
  v34[4] = &off_100786360;
  v34[3] = v13;
  v34[0] = a3;
  v14 = (_QWORD *)(a5 + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_recommendation);
  v15 = *(CHWorkoutDetailHeartRateTableViewCell **)(a5
                                                  + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_recommendation
                                                  + 8);
  *v14 = a1;
  v14[1] = a2;
  swift_retain(a3);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v15, v16, v17, v18, v19, v20, v21, v22);
  v23 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v12, 1, 1, v23);
  v24 = swift_allocObject(&unk_10079C270, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16, a5);
  sub_1000252E0((uint64_t)v34, (uint64_t)v33);
  sub_1000252E0(a4, (uint64_t)v32);
  type metadata accessor for MainActor(0);
  swift_bridgeObjectRetain(a2);
  swift_retain(v24);
  v26 = static MainActor.shared.getter(v25);
  v27 = (_QWORD *)swift_allocObject(&unk_10079C298, 136, 7);
  v27[2] = v26;
  v27[3] = &protocol witness table for MainActor;
  sub_10002411C(v33, (uint64_t)(v27 + 4));
  v27[9] = a1;
  v27[10] = a2;
  v27[11] = v24;
  sub_10002411C(v32, (uint64_t)(v27 + 12));
  swift_release(v24);
  v28 = sub_1005A9074((uint64_t)v12, (uint64_t)&unk_100830BE8, (uint64_t)v27);
  v29 = *(_QWORD *)(a5 + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_configurationTask);
  *(_QWORD *)(a5 + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_configurationTask) = v28;
  swift_release(v29);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v34);
}

uint64_t sub_1003A5508(_QWORD *a1, uint64_t a2, char *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  NSString v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  NSString v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t *v34;
  _QWORD v36[3];
  uint64_t v37;
  _UNKNOWN **v38;

  v37 = type metadata accessor for AppRecommendationDataProvider();
  v38 = &off_1007A2968;
  v36[0] = a2;
  v6 = *(void **)&a3[OBJC_IVAR____TtC10FitnessApp43AppStoreAppRecommendationCollectionViewCell_titleLabel];
  v7 = a1[3];
  v8 = a1[4];
  sub_100016804(a1, v7);
  v9 = *(void (**)(uint64_t, uint64_t, __n128))(v8 + 8);
  v10 = swift_retain(a2);
  v9(v7, v8, v10);
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12, v14, v15, v16, v17, v18, v19, v20);
  objc_msgSend(v6, "setText:", v13);

  v21 = *(void **)&a3[OBJC_IVAR____TtC10FitnessApp43AppStoreAppRecommendationCollectionViewCell_subtitleLabel];
  v22 = a1[3];
  v23 = a1[4];
  sub_100016804(a1, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  v25 = v24;
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25, v27, v28, v29, v30, v31, v32, v33);
  objc_msgSend(v21, "setText:", v26);

  v34 = sub_100016804(v36, v37);
  sub_1003A51E8((uint64_t)a1, *v34, a3);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v36);
}

uint64_t sub_1003A5654(unint64_t a1)
{
  if (a1 > 3)
  {
    __break(1u);
    JUMPOUT(0x1003A56D8);
  }
  return ((uint64_t (*)(void))((char *)&loc_1003A5674
                            + *((int *)qword_1003A56D8 + *((unsigned __int8 *)&off_100782C78 + a1 + 32))))();
}

id sub_1003A56E8(void *a1)
{
  id result;
  NSString *v3;
  NSString v4;
  Class v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString *v9;
  NSString v10;
  Class isa;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  NSString v16;
  id v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  void *v20;
  NSString v21;
  id v22;
  double v23;
  double v24;
  double v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;

  result = (id)IndexPath.section.getter(a1);
  if ((unint64_t)result <= 3)
  {
    if (*((unsigned __int8 *)&off_100782CC8 + (_QWORD)result + 32) - 2 >= 2)
    {
      if (!*((_BYTE *)&off_100782CC8 + (_QWORD)result + 32))
        return objc_msgSend(objc_allocWithZone((Class)UICollectionReusableView), "init");
      v9 = UICollectionElementKindSectionHeader;
      v10 = String._bridgeToObjectiveC()();
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v6 = objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v9, v10, isa);

      v12 = type metadata accessor for AddToYourRingSectionHeaderView();
      v8 = swift_dynamicCastClass(v6, v12);
      if (!v8)
        return v6;
    }
    else
    {
      v3 = UICollectionElementKindSectionHeader;
      v4 = String._bridgeToObjectiveC()();
      v5 = IndexPath._bridgeToObjectiveC()().super.isa;
      v6 = objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v3, v4, v5);

      v7 = type metadata accessor for AddToYourRingSectionHeaderView();
      v8 = swift_dynamicCastClass(v6, v7);
      if (!v8)
        return v6;
    }
    v13 = (char *)v8;
    v14 = (void *)objc_opt_self(NSBundle);
    v6 = v6;
    v15 = objc_msgSend(v14, "mainBundle");
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v15, "localizedStringForKey:value:table:", v16, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v19 = v18;

    v20 = *(void **)&v13[OBJC_IVAR____TtC10FitnessApp30AddToYourRingSectionHeaderView_titleLabel];
    v21 = String._bridgeToObjectiveC()();
    objc_msgSend(v20, "setText:", v21);

    v22 = sub_100168F4C();
    objc_msgSend(v13, "frame");
    objc_msgSend(v20, "sizeThatFits:", v23, v24);
    objc_msgSend(v22, "setConstant:", v25);
    swift_bridgeObjectRelease(v19, v26, v27, v28, v29, v30, v31, v32);

    return v6;
  }
  __break(1u);
  return result;
}

id sub_1003A5A38(void *a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  uint64_t v6;
  const char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  char v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  const char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  char v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  NSString *v43;
  NSString v44;
  Class isa;
  id v46;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v6 == a2 && v7 == (const char *)a3)
  {
    swift_bridgeObjectRelease(a3, v7, v8, v9, v10, v11, v12, v13);
    return sub_1003A56E8(a1);
  }
  v15 = (CHWorkoutDetailHeartRateTableViewCell *)v7;
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, a2, a3, 0);
  swift_bridgeObjectRelease(v15, v17, v18, v19, v20, v21, v22, v23);
  if ((v16 & 1) != 0)
    return sub_1003A56E8(a1);
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  if (v24 == a2 && v25 == (const char *)a3)
  {
    swift_bridgeObjectRelease(a3, v25, v26, v27, v28, v29, v30, v31);
  }
  else
  {
    v33 = (CHWorkoutDetailHeartRateTableViewCell *)v25;
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, a2, a3, 0);
    swift_bridgeObjectRelease(v33, v35, v36, v37, v38, v39, v40, v41);
    if ((v34 & 1) == 0)
      return objc_msgSend(objc_allocWithZone((Class)UICollectionReusableView), "init");
  }
  v43 = UICollectionElementKindSectionFooter;
  v44 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v46 = objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v43, v44, isa);

  return v46;
}

void sub_1003A5BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v0 = type metadata accessor for IndexPath(0);
  __chkstk_darwin(v0);
  v1 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v1);
  v3 = IndexPath.section.getter(v2);
  if (v3 <= 3)
    __asm { BR              X10 }
  __break(1u);
  JUMPOUT(0x1003A6100);
}

uint64_t sub_1003A612C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003A6150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003A61CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_100830BCC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000EA380;
  return sub_1003A4A3C(a1, v5, v6, v7, v8);
}

uint64_t sub_1003A6260(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_100830BD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003A62A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100830BE0;
  if (!qword_100830BE0)
  {
    v1 = type metadata accessor for MetricClickStreamOccurred(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricClickStreamOccurred, v1);
    atomic_store(result, (unint64_t *)&qword_100830BE0);
  }
  return result;
}

uint64_t sub_1003A62E8()
{
  uint64_t v0;
  SEL v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 80), v1, v2, v3, v4, v5, v6, v7);
  swift_release(*(_QWORD *)(v0 + 88));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 136, 7);
}

uint64_t sub_1003A632C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[9];
  v7 = v1[10];
  v8 = v1[11];
  v9 = (_QWORD *)swift_task_alloc(dword_1008389BC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000DA0E4;
  return sub_10050D928(a1, v4, v5, (uint64_t)(v1 + 4), v6, v7, v8, (uint64_t)(v1 + 12));
}

uint64_t sub_1003A63C4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 40));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_1003A6400(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10082E79C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000DA0E4;
  return sub_10031E148(a1, v4, v5, v6, (uint64_t)(v1 + 5), (uint64_t)(v1 + 10));
}

char *sub_1003A6498(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, char *a12, char *a13, char *a14, void *a15, char *a16, char *a17, void *a18)
{
  char *v18;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  id v34;
  objc_class *v35;
  char *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  char *v53;
  uint64_t v54;
  char *v55;
  id v56;
  uint64_t v57;
  char *v58;
  id v59;
  char *result;
  id v61;
  void *v62;
  id v63;
  id v64;
  char *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  objc_class *v72;
  id v73;
  id v74;
  char *v75;
  void *v76;
  objc_class *v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  objc_class *v91;
  char *v92;
  id v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  char *v118;
  void *v119;
  char *v120;
  _BYTE *v121;
  char *v122;
  id v123;
  id v124;
  void *v125;
  void *v126;
  objc_class *v127;
  char *v128;
  id v129;
  char *v130;
  uint64_t v131;
  id v132;
  char v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  id v139;
  unint64_t v140;
  uint64_t v141;
  id v142;
  void *v143;
  unint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  char *v147;
  void *v148;
  id v149;
  char *v150;
  char *v151;
  char *v152;
  id v153;
  objc_class *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  char *v171;
  id v172;
  id v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  id v177;
  id v178;
  id v179;
  char *v180;
  id v181;
  id v182;
  id v183;
  char *v184;
  char *v185;
  char *v186;
  char *v187;
  objc_super v188;
  objc_super v189;
  _QWORD v190[5];
  _QWORD v191[5];
  _QWORD v192[5];
  _QWORD v193[2];
  _QWORD v194[5];
  objc_super v195;
  objc_super v196;
  __int128 v197;
  __int128 v198;
  void *v199;
  objc_super v200;

  v179 = a8;
  v177 = a7;
  v186 = a17;
  v185 = a12;
  v183 = a11;
  v182 = a10;
  v181 = a9;
  v187 = a16;
  v178 = a15;
  v184 = a13;
  v180 = a14;
  v26 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v26);
  v171 = (char *)&v164 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100047110(&qword_10081EED0);
  v175 = *(_QWORD *)(v28 - 8);
  v176 = v28;
  v29 = __chkstk_darwin(v28);
  v174 = (char *)&v164 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDataProvider] = a1;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDateCache] = a2;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementsDataProvider] = a3;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_balanceDataProvider] = a4;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator] = a5;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_historyDataProvider] = a6;
  *(_QWORD *)&v18[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager] = a7;
  v31 = type metadata accessor for WorkoutImageProvider(0, v29);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  v32 = v18;
  v172 = a1;
  v170 = a2;
  v169 = a3;
  v168 = a4;
  v173 = a5;
  v167 = a6;
  v177 = v177;
  v33 = v180;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutImageProvider) = WorkoutImageProvider.init(healthStore:)();
  v34 = v179;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutDataProvider) = v179;
  v35 = (objc_class *)type metadata accessor for StackFormattingManager();
  v36 = (char *)objc_allocWithZone(v35);
  v37 = v178;
  *(_QWORD *)&v36[OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_fiuiFormattingManager] = v178;
  *(_QWORD *)&v36[OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_healthStore] = v33;
  v200.receiver = v36;
  v200.super_class = v35;
  v180 = v33;
  v179 = v34;
  v38 = v37;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_stackFormattingManager) = objc_msgSendSuper2(&v200, "init");
  v39 = v181;
  v40 = v182;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager) = v181;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendsSetupCoordinator) = v40;
  v42 = v183;
  v41 = v184;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_chFriendManager) = v183;
  v43 = v185;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementLocalizationProvider) = v185;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_badgeImageFactory) = v41;
  v44 = objc_allocWithZone((Class)type metadata accessor for SummaryConfigurationProvider(0));
  v181 = v39;
  v182 = v40;
  v178 = v42;
  v166 = v43;
  v165 = v41;
  v45 = objc_msgSend(v44, "init");
  v46 = OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider) = v45;
  v47 = (char *)OBJC_IVAR___CHFitnessAppContext_dependencies;
  v48 = v187;
  v49 = *(_QWORD *)&v187[OBJC_IVAR___CHFitnessAppContext_dependencies];
  swift_retain(v49);
  v50 = sub_100047110((uint64_t *)&unk_100828460);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v197, 0, 0, v50);
  swift_release(v49);
  sub_10002411C(&v197, (uint64_t)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_avatarSettingsProvider);
  v185 = v47;
  v51 = *(_QWORD *)&v47[(_QWORD)v48];
  swift_retain(v51);
  v183 = (id)sub_100047110((uint64_t *)&unk_1008361E0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v197, 0, 0, v183);
  swift_release(v51);
  v52 = v197;
  *(_OWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_eventHub) = v197;
  v53 = v180;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_healthStore) = v180;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager) = v38;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext) = v48;
  v54 = type metadata accessor for SubscriptionToken(0);
  swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
  v55 = v53;
  v56 = v38;
  v184 = v48;
  v57 = swift_unknownObjectRetain(v52);
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_subscriptionToken) = SubscriptionToken.init(eventHub:)(v57, *((_QWORD *)&v52 + 1));
  v58 = v186;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_wheelchairUseCache) = v186;
  v59 = objc_allocWithZone((Class)FIUIModel);
  v180 = v58;
  result = (char *)objc_msgSend(v59, "initWithHealthStore:", v55);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiModel) = result;
  v61 = objc_msgSend(objc_allocWithZone((Class)FIMindfulnessSessionDataProvider), "initWithHealthStore:", v55);
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionDataProvider) = v61;
  v62 = *(void **)((char *)v32 + v46);
  v63 = objc_allocWithZone((Class)type metadata accessor for MetricsDataProvider(0));
  v64 = v172;
  v65 = v55;
  v66 = v179;
  v67 = v56;
  v68 = v62;
  v69 = v61;
  sub_100353454(v64, v68, v65, v66, v69, v67);
  v71 = v70;

  v172 = v66;
  v164 = v64;

  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_metricsDataProvider) = v71;
  v72 = (objc_class *)type metadata accessor for AAUIAwardsDataProvider(0);
  v73 = objc_allocWithZone(v72);
  v74 = v173;
  v75 = v65;
  v179 = v74;
  v76 = (void *)AAUIAwardsDataProvider.init(healthStore:pauseRingsCoordinator:layoutMode:)();
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider) = v76;
  *((_QWORD *)&v198 + 1) = v72;
  v199 = &protocol witness table for AAUIAwardsDataProvider;
  *(_QWORD *)&v197 = v76;
  v77 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  v78 = objc_allocWithZone(v77);
  sub_1000252E0((uint64_t)&v197, (uint64_t)v78 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v196.receiver = v78;
  v196.super_class = v77;
  v79 = v76;
  v80 = objc_msgSendSuper2(&v196, "init");
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v197);

  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_chAwardsDataProvider) = v80;
  v81 = objc_msgSend(objc_allocWithZone((Class)AAUIAchievementResourceProvider), "init");
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementResourceProvider) = v81;
  v82 = type metadata accessor for ActivitySharingHighlightDataProvider(0);
  swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
  v83 = v75;
  v181 = v181;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_highlightDataProvider) = sub_1002CC960(v181, v83);
  v84 = type metadata accessor for ActivitySharingNavigationCoordinator();
  v85 = swift_allocObject(v84, 152, 15);
  swift_defaultActor_initialize(v85);
  *(_QWORD *)(v85 + 144) = 0;
  *(_OWORD *)(v85 + 112) = 0u;
  *(_OWORD *)(v85 + 128) = 0u;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activitySharingNavigationCoordinator) = v85;
  v86 = type metadata accessor for ActivitySharingFriendDetailAlertCoordinator(0);
  v87 = swift_allocObject(v86, *(unsigned int *)(v86 + 48), *(unsigned __int16 *)(v86 + 52));
  swift_defaultActor_initialize(v87);
  v88 = v87 + OBJC_IVAR____TtC10FitnessApp43ActivitySharingFriendDetailAlertCoordinator__presentedAlertType;
  v197 = 0u;
  v198 = 0u;
  LOBYTE(v199) = -1;
  v89 = sub_100047110(&qword_10081EED8);
  v90 = v174;
  Published.init(initialValue:)(&v197, v89);
  (*(void (**)(uint64_t, char *, uint64_t))(v175 + 32))(v88, v90, v176);
  *(_QWORD *)((char *)v32
            + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activitySharingFriendDetailAlertCoordinator) = v87;
  v91 = (objc_class *)type metadata accessor for MindfulnessSessionFormattingManager();
  v92 = (char *)objc_allocWithZone(v91);
  *(_QWORD *)&v92[OBJC_IVAR___CHMindfulnessSessionFormattingManager_fiuiFormattingManager] = v67;
  *(_QWORD *)&v92[OBJC_IVAR___CHMindfulnessSessionFormattingManager_healthStore] = v83;
  v195.receiver = v92;
  v195.super_class = v91;
  v93 = v83;
  v94 = (char *)v67;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionFormattingManager) = objc_msgSendSuper2(&v195, "init");
  v95 = v185;
  v96 = v187;
  v97 = *(_QWORD *)&v185[(_QWORD)v187];
  swift_retain(v97);
  v98 = sub_100047110((uint64_t *)&unk_100830D70);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(&v197, 0, 0, v98);
  swift_release(v97);
  v99 = *(_QWORD *)&v95[(_QWORD)v96];
  swift_retain(v99);
  v100 = sub_100047110((uint64_t *)&unk_100830D78);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v194, 0, 0, v100);
  swift_release(v99);
  v101 = *(_QWORD *)&v95[(_QWORD)v96];
  swift_retain(v101);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v193, 0, 0, v183);
  swift_release(v101);
  v102 = v193[0];
  v103 = v193[1];
  v104 = *(_QWORD *)&v95[(_QWORD)v96];
  swift_retain(v104);
  v105 = sub_100047110((uint64_t *)&unk_100835510);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v192, 0, 0, v105);
  swift_release(v104);
  v106 = *(_QWORD *)&v95[(_QWORD)v96];
  swift_retain(v106);
  v107 = sub_100047110((uint64_t *)&unk_100830D80);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v191, 0, 0, v107);
  swift_release(v106);
  v108 = *(_QWORD *)&v95[(_QWORD)v96];
  swift_retain(v108);
  v109 = sub_100047110(&qword_100828490);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v190, 0, 0, v109);
  swift_release(v108);
  v110 = objc_allocWithZone((Class)type metadata accessor for FitnessPlusCardDataProvider(0));
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusCardDataProvider) = sub_10053D7E0(&v197, v194, v102, v103, v192, v191, v190);
  v111 = type metadata accessor for FitnessPlusSubscriptionProvider();
  swift_allocObject(v111, 81, 7);
  v112 = v184;
  v113 = sub_10019C3C8((uint64_t)v112);
  v186 = v112;

  v184 = (char *)OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusSubscriptionProvider;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusSubscriptionProvider) = v113;
  v114 = *(_QWORD *)&v95[(_QWORD)v96];
  v115 = type metadata accessor for CatalogTipActivityTileDataModel(0);
  swift_allocObject(v115, *(unsigned int *)(v115 + 48), *(unsigned __int16 *)(v115 + 52));
  swift_retain(v114);
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_catalogTipDataProvider) = sub_10000B624(v116);
  v117 = objc_msgSend((id)objc_opt_self(ActivitySummaryCache), "sharedInstance");
  v185 = v94;
  result = (char *)objc_msgSend(v94, "unitManager");
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v118 = result;
  v119 = *(void **)&v186[OBJC_IVAR___CHFitnessAppContext_pregnancyStateProvider];
  v120 = (char *)objc_allocWithZone((Class)type metadata accessor for TrendsDataProvider(0));
  v121 = v164;
  v122 = (char *)v93;
  v123 = v172;
  v124 = v119;
  v187 = v122;
  v183 = v123;
  v125 = v123;
  v126 = v121;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsDataProvider) = sub_1003A7998(v122, v117, v125, v118, v121, v124, v120);
  v127 = (objc_class *)type metadata accessor for TrendsFormattingManager();
  v128 = (char *)objc_allocWithZone(v127);
  v129 = v185;
  *(_QWORD *)&v128[OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter] = v185;
  v189.receiver = v128;
  v189.super_class = v127;
  v130 = (char *)v129;
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsFormattingManager) = objc_msgSendSuper2(&v189, "init");
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsAvailabilityManager) = a18;
  v131 = qword_10081E0B0;
  v132 = a18;
  if (v131 != -1)
    swift_once(&qword_10081E0B0, sub_10004F61C);
  v133 = byte_10083D1A0;
  v134 = sub_1003A7D2C(v187, byte_10083D1A0);
  v135 = (char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsUserCharacteristics;
  *(_QWORD *)v135 = v134;
  *((_QWORD *)v135 + 1) = v136;
  v135[16] = v137 & 1;
  v138 = static os_log_type_t.info.getter();
  v139 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v138, &_mh_execute_header, v139, "TrendsActivityTileDataModel fetch user first name", 49, 2, _swiftEmptyArrayStorage);

  v185 = v130;
  if ((v133 & 1) != 0)
  {
    v140 = 0xE600000000000000;
    v141 = 0x736978656C41;
  }
  else
  {
    v142 = (id)FIUICopyUserFirstNameFromAddressBook();
    if (v142)
    {
      v143 = v142;
      v141 = static String._unconditionallyBridgeFromObjectiveC(_:)(v142);
      v140 = v144;

    }
    else
    {
      v141 = 0;
      v140 = 0;
    }
  }
  v145 = (uint64_t *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_trendsUserFirstName);
  *v145 = v141;
  v145[1] = v140;
  v146 = *(_QWORD *)&v184[(_QWORD)v32];
  v147 = v186;
  v148 = *(void **)&v186[OBJC_IVAR___CHFitnessAppContext_seymourAvailabilityManager];
  v149 = objc_allocWithZone((Class)type metadata accessor for SummaryUserProfileProvider());
  v150 = v126;
  v184 = v150;
  v151 = v187;
  v152 = v180;
  v153 = v132;
  swift_retain(v146);
  *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_summaryUserProfileProvider) = sub_1001524B8((uint64_t)v150, v146, (uint64_t)v151, (uint64_t)v148, (uint64_t)v153, (uint64_t)v152);

  v154 = (objc_class *)type metadata accessor for ActivityDashboardContext();
  v188.receiver = v32;
  v188.super_class = v154;
  v155 = (char *)objc_msgSendSuper2(&v188, "init");
  v156 = *(_QWORD *)&v155[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusSubscriptionProvider];
  v157 = v155;
  swift_retain(v156);
  sub_10019B4A4();
  swift_release(v156);
  v158 = type metadata accessor for TaskPriority(0);
  v159 = (uint64_t)v171;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v158 - 8) + 56))(v171, 1, 1, v158);
  type metadata accessor for MainActor(0);
  v160 = v157;
  v161 = static MainActor.shared.getter(v160);
  v162 = (_QWORD *)swift_allocObject(&unk_10079C2E8, 40, 7);
  v162[2] = v161;
  v162[3] = &protocol witness table for MainActor;
  v162[4] = v160;
  v163 = sub_10020D9C0(v159, (uint64_t)&unk_100830D90, (uint64_t)v162);

  swift_release(v163);
  return v160;
}

