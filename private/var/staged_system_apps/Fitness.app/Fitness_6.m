uint64_t sub_1003A7208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003A7274, v6, v7);
}

uint64_t sub_1003A7274()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;

  v1 = *(char **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activitySharingFriendDetailAlertCoordinator];
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activitySharingNavigationCoordinator];
  v4 = (_QWORD *)swift_allocObject(&unk_10079C310, 40, 7);
  v4[2] = v1;
  v4[3] = v2;
  v4[4] = v3;
  v5 = *(_QWORD *)(v3 + 112);
  v6 = *(_QWORD *)(v3 + 120);
  *(_QWORD *)(v3 + 112) = sub_1003A83D8;
  *(_QWORD *)(v3 + 120) = v4;
  swift_retain(v2);
  swift_retain(v3);
  v7 = v1;
  sub_100022BA4(v5, v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1003A748C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  _QWORD *v24;
  id v25;
  id v27;
  id v28;
  id v30;
  id v31;
  void *v32;
  void *v34;
  void *v35;

  v5 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_badgeImageFactory);
  v6 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementsDataProvider);
  v7 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_chAwardsDataProvider);
  v8 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext);
  v9 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager);
  v10 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager);
  v11 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_chFriendManager);
  v12 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_healthStore);
  v13 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_wheelchairUseCache);
  v32 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutDataProvider);
  v34 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager);
  v35 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator);
  v14 = type metadata accessor for ActivitySharingFriendDetailDataProvider(0);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v31 = v5;
  v30 = v6;
  swift_retain(a3);
  v28 = v7;
  v27 = v8;
  v15 = v9;
  v16 = a1;
  v17 = v10;
  v18 = v11;
  v19 = v12;
  swift_retain(a4);
  v20 = v13;
  v21 = v32;
  v22 = v34;
  v23 = v35;
  v24 = sub_10042DC10(v31, v30, a3, v28, v27, v15, v16, v17, v18, v19, a4, v20, v21, v22, v23);
  v25 = objc_allocWithZone((Class)type metadata accessor for ActivitySharingFriendDetailViewController());
  return sub_100336364((uint64_t)v24, v23);
}

id sub_1003A769C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityDashboardContext();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivityDashboardContext()
{
  return objc_opt_self(_TtC10FitnessApp24ActivityDashboardContext);
}

char *sub_1003A7998(void *a1, void *a2, void *a3, void *a4, _BYTE *a5, void *a6, char *a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  _BYTE *v35;
  id v36;
  char *v37;
  objc_super v39;
  _BYTE v40[1840];

  v14 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_pairedWatchManager;
  v15 = type metadata accessor for TrendsPairedWatchManager();
  swift_allocObject(v15, 25, 7);
  v16 = a7;
  *(_QWORD *)&a7[v14] = sub_1005C7164();
  v17 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_lastWheelchairUseValue;
  v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_lastWheelchairUseValue] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_observers] = _swiftEmptyDictionarySingleton;
  v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_calculatesLongTermFits] = 0;
  v18 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType365;
  *(_QWORD *)&v16[v18] = sub_10043D9D4((uint64_t)_swiftEmptyArrayStorage);
  v19 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsByTrendType90;
  *(_QWORD *)&v16[v19] = sub_10043D9D4((uint64_t)_swiftEmptyArrayStorage);
  v20 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_mannKendallTestByTrendType90;
  *(_QWORD *)&v16[v20] = sub_10043DB8C((uint64_t)_swiftEmptyArrayStorage);
  v21 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_mannKendallTestByTrendType365;
  *(_QWORD *)&v16[v21] = sub_10043DB8C((uint64_t)_swiftEmptyArrayStorage);
  v22 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_fitsByTrendType90;
  *(_QWORD *)&v16[v22] = sub_10043DC90((uint64_t)_swiftEmptyArrayStorage);
  v23 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_fitsByTrendType365;
  *(_QWORD *)&v16[v23] = sub_10043DC90((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidDownTrends] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedInvalidTrends] = _swiftEmptyArrayStorage;
  v24 = OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_operationQueue;
  v25 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  objc_msgSend(v25, "setQualityOfService:", 25);
  objc_msgSend(v25, "setMaxConcurrentOperationCount:", 1);

  *(_QWORD *)&v16[v24] = v25;
  v26 = (uint64_t)&v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsCompilation365];
  sub_1001F85AC(v40);
  sub_10003F6A0((uint64_t)v40, v26);
  v27 = sub_10003F6A0((uint64_t)v40, (uint64_t)&v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsCompilation90]);
  Date.init(timeIntervalSinceReferenceDate:)(v27, 0.0);
  *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_retryCount] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_maxRetryCount] = 3;
  *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_retryInterval] = 0x4034000000000000;
  v28 = type metadata accessor for ActivityStatisticsBuilder();
  v29 = (_QWORD *)swift_allocObject(v28, 40, 7);
  v29[2] = a1;
  v29[3] = a2;
  v29[4] = a3;
  *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_statisticsBuilder] = v29;
  *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_unitManager] = a4;
  *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_activityDataProvider] = a5;
  *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_workoutProvider] = a3;
  v16[v17] = a5[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser];
  *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_pregnancyStateProvider] = a6;
  v30 = qword_10081E0B0;
  swift_unknownObjectRetain(a3);
  v31 = a3;
  v32 = a1;
  v33 = a2;
  v34 = a4;
  v35 = a5;
  v36 = a6;
  if (v30 != -1)
    swift_once(&qword_10081E0B0, sub_10004F61C);
  v16[OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_fakingEnabled] = byte_10083D1A0;

  v39.receiver = v16;
  v39.super_class = (Class)type metadata accessor for TrendsDataProvider(0);
  v37 = (char *)objc_msgSendSuper2(&v39, "init");
  sub_100011B88(v33, v37);

  return v37;
}

uint64_t sub_1003A7D2C(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  SEL v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, _QWORD, uint64_t);
  uint64_t v64;
  CHWorkoutDetailHeartRateTableViewCell *v65;
  SEL v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  void (*v78)(char *, uint64_t);
  char *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  void (*v84)(char *, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;

  v4 = type metadata accessor for Calendar(0);
  v92 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v7);
  v9 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v93 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v87 - v14;
  v16 = type metadata accessor for DateComponents(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v22 = __chkstk_darwin(v19).n128_u64[0];
  v24 = (char *)&v87 - v23;
  if ((a2 & 1) == 0)
  {
    v89 = v10;
    v90 = v21;
    v91 = v20;
    v94 = 0;
    v26 = objc_msgSend(a1, "dateOfBirthComponentsWithError:", &v94, v22);
    v27 = v94;
    if (v26)
    {
      v28 = v26;
      static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v29 = v27;

      v94 = 0;
      v30 = objc_msgSend(a1, "biologicalSexWithError:", &v94);
      v31 = v94;
      if (v30)
      {
        v32 = v30;
        v33 = v94;
        objc_msgSend(v32, "biologicalSex");

        Date.init()(v34);
        if (qword_10081D548 != -1)
          swift_once(&qword_10081D548, sub_100005A80);
        v35 = sub_10003CE9C(v4, (uint64_t)qword_100869D10);
        Calendar.date(from:)(v24);
        v36 = v89;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v9, 1, v89) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v12, v9, v36);
          (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v6, v35, v4);
          v57 = sub_100047110((uint64_t *)&unk_100828720);
          v87 = type metadata accessor for Calendar.Component(0);
          v58 = *(_QWORD *)(v87 - 8);
          v59 = *(unsigned __int8 *)(v58 + 80);
          v60 = (v59 + 32) & ~v59;
          v61 = swift_allocObject(v57, v60 + *(_QWORD *)(v58 + 72), v59 | 7);
          *(_OWORD *)(v61 + 16) = xmmword_100622F90;
          v62 = v61 + v60;
          v63 = *(void (**)(uint64_t, _QWORD, uint64_t))(v58 + 104);
          v64 = v87;
          v63(v62, enum case for Calendar.Component.year(_:), v87);
          v88 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002302F0(v61);
          swift_setDeallocating(v61);
          swift_arrayDestroy(v62, 1, v64);
          swift_deallocClassInstance(v61, 32, 7);
          v65 = v88;
          Calendar.dateComponents(_:from:to:)(v88, v12, v15);
          swift_bridgeObjectRelease(v65, v66, v67, v68, v69, v70, v71, v72);
          v73 = (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v6, v4);
          v74 = DateComponents.year.getter(v73);
          if ((v75 & 1) == 0)
          {
            v25 = v74;
            v76 = v91;
            v77 = *(void (**)(char *, uint64_t))(v90 + 8);
            v77(v18, v91);
            v78 = *(void (**)(char *, uint64_t))(v93 + 8);
            v79 = v12;
            v80 = v89;
            v78(v79, v89);
            v78(v15, v80);
            v77(v24, v76);
            return v25;
          }
          v81 = sub_10025DD20();
          v38 = swift_allocError(&type metadata for CharacteristicError, v81, 0, 0);
          swift_willThrow(v38);
          v82 = v91;
          v83 = *(void (**)(char *, uint64_t))(v90 + 8);
          v83(v18, v91);
          v84 = *(void (**)(char *, uint64_t))(v93 + 8);
          v85 = v12;
          v86 = v89;
          v84(v85, v89);
          v84(v15, v86);
          v41 = ((uint64_t (*)(char *, uint64_t))v83)(v24, v82);
          goto LABEL_12;
        }
        sub_10018DFE8((uint64_t)v9);
        v37 = sub_10025DD20();
        v38 = swift_allocError(&type metadata for CharacteristicError, v37, 0, 0);
        swift_willThrow(v38);
        (*(void (**)(char *, uint64_t))(v93 + 8))(v15, v36);
      }
      else
      {
        v42 = v94;
        v38 = _convertNSErrorToError(_:)(v31);

        swift_willThrow(v43);
      }
      v41 = (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v24, v91);
    }
    else
    {
      v39 = v94;
      v38 = _convertNSErrorToError(_:)(v27);

      v41 = swift_willThrow(v40);
    }
LABEL_12:
    v44 = static os_log_type_t.error.getter(v41);
    v45 = (void *)HKLogActivity;
    v46 = sub_100047110((uint64_t *)&unk_100827460);
    v47 = swift_allocObject(v46, 72, 7);
    *(_OWORD *)(v47 + 16) = xmmword_100622F90;
    *(_QWORD *)(v47 + 56) = &type metadata for String;
    *(_QWORD *)(v47 + 64) = sub_100038CF8();
    *(_QWORD *)(v47 + 32) = 0xD00000000000003DLL;
    *(_QWORD *)(v47 + 40) = 0x80000001006930B0;
    v48 = v45;
    os_log(_:dso:log:_:_:)(v44, &_mh_execute_header, v48, "%@ failed to fetch trends user characteristics", 46, 2, v47);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v47, v49, v50, v51, v52, v53, v54, v55);
    swift_errorRelease(v38);
    return 0;
  }
  return 34;
}

uint64_t sub_1003A830C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003A8338(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100830D8C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000DA0E4;
  return sub_1003A7208(a1, v4, v5, v6);
}

uint64_t sub_1003A83A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

id sub_1003A83D8(void *a1)
{
  uint64_t *v1;

  return sub_1003A748C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1003A83E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003A8408(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = (int *)type metadata accessor for MirrorStatusView(0);
  v5 = (_QWORD *)(a2 + v4[10]);
  *v5 = swift_getKeyPath(&unk_1006396A8);
  v6 = sub_100047110(&qword_100830DE8);
  swift_storeEnumTagMultiPayload(v5, v6, 0);
  v7 = v4[11];
  *(_QWORD *)(a2 + v7) = AppStorage.init<A>(wrappedValue:_:store:)(1, 0xD000000000000014, 0x800000010069CDC0, 0);
  v8 = v4[12];
  v9.n128_u64[0] = 0x4048000000000000;
  v10.n128_u64[0] = 0x4049000000000000;
  *(double *)(a2 + v8) = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(46.0, 50.0, v9, 50.0, v10, 53.0, 53.0);
  v11 = v4[13];
  v12 = static LayoutUtilities.layoutMetric(regular42:)(22.0);
  *(_QWORD *)(a2 + v11) = v13;
  v14 = MetricsPublisher.workoutConfigurationType.getter(v12);
  v15 = MetricsPublisher.activitySummaryMetricsPublisher.getter(v14);
  v16 = (_QWORD *)(a2 + v4[5]);
  v17 = type metadata accessor for ActivitySummaryMetricsPublisher(0);
  v18 = sub_1000083D8(&qword_100830DF0, (uint64_t (*)(uint64_t))&type metadata accessor for ActivitySummaryMetricsPublisher, (uint64_t)&protocol conformance descriptor for ActivitySummaryMetricsPublisher);
  *v16 = ObservedObject.init(wrappedValue:)(v15, v17, v18);
  v16[1] = v19;
  v20 = MetricsPublisher.goalPublisher.getter();
  v21 = (uint64_t *)(a2 + v4[6]);
  v22 = type metadata accessor for GoalPublisher(0);
  v23 = sub_1000083D8(&qword_100830DF8, (uint64_t (*)(uint64_t))&type metadata accessor for GoalPublisher, (uint64_t)&protocol conformance descriptor for GoalPublisher);
  v24 = ObservedObject.init(wrappedValue:)(v20, v22, v23);
  *v21 = v24;
  v21[1] = v25;
  v26 = MetricsPublisher.intervalsMetricsPublisher.getter(v24);
  v27 = (_QWORD *)(a2 + v4[7]);
  v28 = type metadata accessor for IntervalsMetricsPublisher(0);
  v29 = sub_1000083D8(&qword_10082F228, (uint64_t (*)(uint64_t))&type metadata accessor for IntervalsMetricsPublisher, (uint64_t)&protocol conformance descriptor for IntervalsMetricsPublisher);
  *v27 = ObservedObject.init(wrappedValue:)(v26, v28, v29);
  v27[1] = v30;
  v31 = MetricsPublisher.racePositionStatePublisher.getter();
  v32 = (uint64_t *)(a2 + v4[8]);
  v33 = type metadata accessor for RacePositionStatePublisher(0);
  v34 = sub_1000083D8(&qword_100830E00, (uint64_t (*)(uint64_t))&type metadata accessor for RacePositionStatePublisher, (uint64_t)&protocol conformance descriptor for RacePositionStatePublisher);
  v35 = ObservedObject.init(wrappedValue:)(v31, v33, v34);
  *v32 = v35;
  v32[1] = v36;
  v37 = MetricsPublisher.workoutStatePublisher.getter(v35);
  v38 = (uint64_t *)(a2 + v4[9]);
  v39 = type metadata accessor for WorkoutStatePublisher(0);
  v40 = sub_1000083D8(&qword_10082F230, (uint64_t (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher, (uint64_t)&protocol conformance descriptor for WorkoutStatePublisher);
  v41 = ObservedObject.init(wrappedValue:)(v37, v39, v40);
  v43 = v42;
  swift_release(a1);
  *v38 = v41;
  v38[1] = v43;
}

uint64_t sub_1003A8684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  int v14;
  char v15;
  void (*v16)(_BYTE *, uint64_t);
  _BYTE v18[15];
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for WorkoutAnimationStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = type metadata accessor for MirrorStatusView(0);
  v10 = __chkstk_darwin(v9);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  AppStorage.wrappedValue.getter(&v19, *(_QWORD *)(v1 + *(int *)(v13 + 44)), &type metadata for Bool, v10);
  v14 = v19;
  sub_1003ABAD4(v1, (uint64_t)v12);
  if (v14 == 1)
  {
    sub_1003F74B4((uint64_t)v8);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for WorkoutAnimationStyle.fullSpeed(_:), v2);
    v15 = static WorkoutAnimationStyle.== infix(_:_:)(v8, v5);
    v16 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
    v16(v5, v2);
    v16(v8, v2);
  }
  else
  {
    v15 = 0;
  }
  sub_1003ABD54((uint64_t)v12);
  return v15 & 1;
}

uint64_t sub_1003A87E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  __n128 v7;
  int v8;
  uint64_t result;
  uint64_t v11;

  v1 = type metadata accessor for RacePositionState(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MirrorStatusView(0) + 32) + 8);
  v6 = swift_retain(v5);
  RacePositionStatePublisher.racePositionState.getter(v6);
  v7 = swift_release(v5);
  v8 = (*(uint64_t (**)(char *, uint64_t, __n128))(v2 + 88))(v4, v1, v7);
  if (v8 == enum case for RacePositionState.notYetOnRoute(_:))
    goto LABEL_2;
  if (v8 == enum case for RacePositionState.onRouteAhead(_:))
  {
    type metadata accessor for RaceWorkoutConfiguration(0);
    return static RaceWorkoutConfiguration.aheadColors.getter();
  }
  if (v8 == enum case for RacePositionState.onRouteBehind(_:))
  {
    type metadata accessor for RaceWorkoutConfiguration(0);
    return static RaceWorkoutConfiguration.behindColors.getter();
  }
  else
  {
    if (v8 == enum case for RacePositionState.offRoute(_:))
      goto LABEL_2;
    if (v8 == enum case for RacePositionState.completed(_:) || v8 == enum case for RacePositionState.unknown(_:))
    {
      type metadata accessor for RaceWorkoutConfiguration(0);
      return static RaceWorkoutConfiguration.colors.getter();
    }
    if (v8 == enum case for RacePositionState.expired(_:))
    {
LABEL_2:
      type metadata accessor for RaceWorkoutConfiguration(0);
      return static RaceWorkoutConfiguration.expiredColors.getter();
    }
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v1, v1);
    __break(1u);
  }
  return result;
}

uint64_t sub_1003A8980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for WorkoutConfigurationColors(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ConfigurationType(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v7 + 104))(v10, enum case for ConfigurationType.race(_:), v6, v8);
  v11 = sub_1000083D8(&qword_100830F38, (uint64_t (*)(uint64_t))&type metadata accessor for ConfigurationType, (uint64_t)&protocol conformance descriptor for ConfigurationType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v22, v6, v11);
  dispatch thunk of RawRepresentable.rawValue.getter(&v21, v6, v11);
  v13 = v21;
  v12 = v22;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if (v12 == v13)
  {
    v14 = sub_1003A87E8();
    v15 = WorkoutConfigurationColors.displayColor.getter(v14);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v16 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for MirrorStatusView(0) + 24) + 8);
    v17 = swift_retain(v16);
    v18 = GoalPublisher.goal.getter(v17);
    v19 = swift_release(v16);
    v15 = _HKWorkoutGoalType.color.getter(v18, v19);
  }
  return Color.init(_:)(v15);
}

uint64_t sub_1003A8B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  void *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  uint64_t v39;
  unint64_t v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  __n128 v49;
  char *v50;
  __n128 v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t KeyPath;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  uint64_t v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  void (*v96)(char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  CHWorkoutDetailHeartRateTableViewCell *v118;
  uint64_t v119;
  unsigned __int8 v120;
  char *v121;
  char *v122;

  v113 = a2;
  v3 = type metadata accessor for MirrorStatusView(0);
  v100 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v101 = v4;
  v102 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110((uint64_t *)&unk_100828370);
  v6 = __chkstk_darwin(v5);
  v103 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for WorkoutTimeView(0, v6);
  v104 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v9 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_100047110(&qword_100830EE0);
  __chkstk_darwin(v99);
  v11 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_100047110(&qword_100830EE8);
  v116 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v111 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v107 = (char *)&v98 - v14;
  __chkstk_darwin(v15);
  v115 = (char *)&v98 - v16;
  v17 = sub_100047110(&qword_100830EF0);
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_100047110(&qword_100830EF8);
  __chkstk_darwin(v20);
  v109 = (uint64_t)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v98 - v23;
  __chkstk_darwin(v25);
  v114 = (uint64_t)&v98 - v26;
  v27 = a1 + *(int *)(v3 + 36);
  v28 = *(_QWORD *)(v27 + 8);
  v29 = swift_retain(v28);
  v30 = (void *)WorkoutStatePublisher.activityType.getter(v29);
  swift_release(v28);
  v110 = v3;
  if (!v30)
  {
    sub_1003254C8();
    v31 = static FIUIWorkoutActivityType.outdoorCycle.getter(v32);
    v30 = (void *)v31;
  }
  *v19 = static Alignment.center.getter(v31);
  v19[1] = v33;
  v34 = sub_100047110(&qword_100830F00);
  sub_1003A9264(a1, v30, (_QWORD *)((char *)v19 + *(int *)(v34 + 44)));
  v108 = v30;
  v35 = objc_msgSend(v30, "localizedName");
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  v117 = v36;
  v118 = v38;
  v39 = sub_100028384(&qword_100830F08, &qword_100830EF0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  v40 = sub_100038CA0();
  View.accessibilityLabel<A>(_:)(&v117, v17, &type metadata for String, v39, v40);
  swift_bridgeObjectRelease(v38, v41, v42, v43, v44, v45, v46, v47);
  sub_10001BE90((uint64_t)v19, &qword_100830EF0);
  sub_100045AD4((uint64_t)v24, v114, &qword_100830EF8);
  v48 = *(_QWORD *)(v27 + 8);
  v49 = swift_retain(v48);
  v50 = v103;
  WorkoutStatePublisher.workoutStartDate.getter(v49);
  swift_release(v48);
  LOBYTE(v39) = sub_1003A8684();
  v51 = swift_retain(v48);
  WorkoutTimeView.init(startDate:showSubseconds:workoutStatePublisher:)(v50, v39 & 1, v48, v51);
  swift_retain(v48);
  LOBYTE(v39) = WorkoutStatePublisher.workoutPaused.getter(v52);
  v53 = swift_release(v48);
  v105 = a1;
  if ((v39 & 1) != 0)
  {
    v54 = static Color.gray.getter(v53);
    v55 = Color.opacity(_:)(0.78);
    swift_release(v54);
  }
  else
  {
    v56 = _HKWorkoutGoalType.color.getter(2, v53);
    v55 = Color.init(_:)(v56);
  }
  v57 = (uint64_t)v102;
  v58 = v101;
  v59 = v100;
  v60 = v99;
  KeyPath = swift_getKeyPath(&unk_100639760);
  v62 = v104;
  v63 = v9;
  v64 = v9;
  v65 = v106;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v11, v64, v106);
  v66 = (uint64_t *)&v11[*(int *)(v60 + 36)];
  *v66 = KeyPath;
  v66[1] = v55;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v65);
  v67 = v105;
  sub_1003ABAD4(v105, v57);
  v68 = *(unsigned __int8 *)(v59 + 80);
  v69 = (v68 + 16) & ~v68;
  v70 = swift_allocObject(&unk_10079C388, v69 + v58, v68 | 7);
  sub_1003ABC48(v57, v70 + v69);
  v71 = sub_1003ABCB8();
  v72 = v107;
  View.onTapGesture(count:perform:)(2, sub_1003ABC8C, v70, v60, v71);
  swift_release(v70);
  sub_10001BE90((uint64_t)v11, &qword_100830EE0);
  v73 = v115;
  v74 = v116;
  v75 = v112;
  (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v115, v72, v112);
  v76 = v110;
  v77 = *(_QWORD *)(v67 + *(int *)(v110 + 20) + 8);
  v78 = swift_retain(v77);
  v107 = (char *)ActivitySummaryMetricsPublisher.activitySummary.getter(v78);
  swift_release(v77);
  v79 = *(_QWORD *)(v67 + *(int *)(v76 + 48));
  v80 = swift_retain(v77);
  LOBYTE(v76) = ActivitySummaryMetricsPublisher.isWheelchairUser.getter(v80);
  swift_release(v77);
  v82 = static Alignment.center.getter(v81);
  _FrameLayout.init(width:height:alignment:)(&v117, v79, 0, v79, 0, v82, v83);
  v110 = v117;
  LODWORD(v106) = v118;
  v105 = v119;
  LODWORD(v104) = v120;
  v103 = v121;
  v102 = v122;
  v84 = v114;
  v85 = v109;
  sub_100021CC0(v114, v109, &qword_100830EF8);
  v86 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  v87 = v111;
  v86(v111, v73, v75);
  LOBYTE(v72) = v76 & 1;
  v88 = v113;
  sub_100021CC0(v85, v113, &qword_100830EF8);
  v89 = (int *)sub_100047110(&qword_100830F20);
  v90 = v88 + v89[12];
  *(_QWORD *)v90 = 0;
  *(_BYTE *)(v90 + 8) = 1;
  v86((char *)(v88 + v89[16]), v87, v75);
  v91 = v88 + v89[20];
  *(_QWORD *)v91 = 0;
  *(_BYTE *)(v91 + 8) = 1;
  v92 = v88 + v89[24];
  v93 = v107;
  v94 = v107;

  *(_QWORD *)v92 = v93;
  *(_QWORD *)(v92 + 8) = v79;
  *(_WORD *)(v92 + 16) = 0;
  *(_BYTE *)(v92 + 18) = (_BYTE)v72;
  *(_QWORD *)(v92 + 24) = v110;
  *(_BYTE *)(v92 + 32) = v106;
  *(_QWORD *)(v92 + 40) = v105;
  *(_BYTE *)(v92 + 48) = v104;
  v95 = v102;
  *(_QWORD *)(v92 + 56) = v103;
  *(_QWORD *)(v92 + 64) = v95;
  v96 = *(void (**)(char *, uint64_t))(v116 + 8);
  v96(v115, v75);
  sub_10001BE90(v84, &qword_100830EF8);

  v96(v87, v75);
  return sub_10001BE90(v85, &qword_100830EF8);
}

void sub_1003A9264(uint64_t a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  void *v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  double v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  void (*v126)(char *, _QWORD, uint64_t, __n128);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  _OWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int16 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  char v148;
  __int128 v149;
  __int128 v150;
  _BYTE v151[32];
  __int128 v152;
  unsigned __int8 v153;
  unsigned __int8 v154;
  uint64_t v155;
  unsigned __int8 v156;
  uint64_t v157;
  unsigned __int8 v158;
  __int128 v159;

  v130 = a2;
  v132 = a3;
  v4 = sub_100047110(&qword_100830F28);
  __chkstk_darwin(v4);
  v129 = (uint64_t)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_100047110(&qword_100830F30);
  __chkstk_darwin(v128);
  v131 = (uint64_t)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v134 = (uint64_t)&v120 - v8;
  v136 = type metadata accessor for MirrorStatusView(0);
  __chkstk_darwin(v136);
  *(_QWORD *)&v125 = (char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = type metadata accessor for WorkoutConfigurationColors(0);
  v127 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v11 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v120 - v13;
  v15 = type metadata accessor for ConfigurationType(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  *(_QWORD *)&v124 = (char *)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v120 - v20;
  v126 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v16 + 104);
  v126((char *)&v120 - v20, enum case for ConfigurationType.race(_:), v15, v19);
  v22 = sub_1000083D8(&qword_100830F38, (uint64_t (*)(uint64_t))&type metadata accessor for ConfigurationType, (uint64_t)&protocol conformance descriptor for ConfigurationType);
  v133 = a1;
  dispatch thunk of RawRepresentable.rawValue.getter(&v149, v15, v22);
  dispatch thunk of RawRepresentable.rawValue.getter(&v137, v15, v22);
  v23 = v149;
  v24 = v137;
  v25 = *(void (**)(char *, uint64_t))(v16 + 8);
  v25(v21, v15);
  if (v23 == v24)
  {
    v26 = v133;
    v27 = sub_1003A87E8();
    v28 = (void *)WorkoutConfigurationColors.gradientStartingColor.getter(v27);
    v29 = *(void (**)(char *, uint64_t))(v127 + 8);
    v30 = v14;
    v31 = v135;
    v29(v30, v135);
    v32 = sub_1003A87E8();
    v33 = (void *)WorkoutConfigurationColors.gradientEndingColor.getter(v32);
    v29(v11, v31);
    v34 = (id)FIUICircularGradientImage(v28, v33, *(double *)(v26 + *(int *)(v136 + 48)));

    if (v34)
    {
      v35 = Image.init(uiImage:)(v34);
      v36 = v35;
      *(_QWORD *)&v137 = v35;
      BYTE8(v137) = 0;
LABEL_7:
      swift_retain(v35);
      _ConditionalContent<>.init(storage:)(&v137, &type metadata for Image, &type metadata for Image, &protocol witness table for Image, &protocol witness table for Image);
      *(_QWORD *)&v137 = v149;
      *((_QWORD *)&v137 + 1) = BYTE8(v149);
      v138 = 0u;
      v139 = 0u;
      v140 = 0u;
      v141 = 0u;
      v142 = 0;
      v48 = sub_100047110(&qword_100830F68);
      v49 = sub_100047110(&qword_100830F70);
      v50 = sub_1003ABE40(&qword_100830F78, &qword_100830F68, (uint64_t)&protocol witness table for Image, (uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
      v51 = sub_1003ABEA4();
      _ConditionalContent<>.init(storage:)(&v137, v48, v49, v50, v51);
      swift_release(v36);
      v124 = *(_OWORD *)v151;
      v125 = *(_OWORD *)&v151[16];
      v123 = v150;
      v52 = v149;
LABEL_8:
      v122 = v52;
      v135 = *((_QWORD *)&v152 + 1);
      v136 = v152;
      LODWORD(v127) = v153;
      LODWORD(v126) = v154;
      v53 = v129;
      sub_1003A9DA8(v26, v130, v129);
      v54 = sub_1003A8980();
      v55 = v131;
      sub_100021CC0(v53, v131, &qword_100830F28);
      *(_QWORD *)(v55 + *(int *)(v128 + 36)) = v54;
      sub_10001BE90(v53, &qword_100830F28);
      v56 = v134;
      sub_100045AD4(v55, v134, &qword_100830F30);
      sub_100021CC0(v56, v55, &qword_100830F30);
      v57 = v123;
      v133 = *((_QWORD *)&v122 + 1);
      v58 = v122;
      v59 = v123;
      v120 = v123;
      v121 = v122;
      v60 = v132;
      *v132 = v122;
      v60[1] = v57;
      v61 = (void *)*((_QWORD *)&v57 + 1);
      v62 = v125;
      v129 = v124;
      v130 = v61;
      v128 = *((_QWORD *)&v124 + 1);
      *(_QWORD *)&v123 = v125;
      v60[2] = v124;
      v60[3] = v62;
      v63 = *((_QWORD *)&v62 + 1);
      v65 = v135;
      v64 = v136;
      *((_QWORD *)v60 + 8) = v136;
      *((_QWORD *)v60 + 9) = v65;
      v135 = v65;
      v136 = v64;
      v66 = v127;
      *((_BYTE *)v60 + 80) = v127;
      v67 = (char)v126;
      *((_BYTE *)v60 + 81) = (_BYTE)v126;
      v68 = sub_100047110(&qword_100830F88);
      sub_100021CC0(v55, (uint64_t)v60 + *(int *)(v68 + 48), &qword_100830F30);
      v118 = v64;
      v119 = v65;
      v69 = v58;
      v70 = v133;
      v71 = v59;
      v72 = v129;
      v73 = (uint64_t)v130;
      v74 = v128;
      v75 = v123;
      sub_1003ABF30(v69, v133, v71, (uint64_t)v130, v129, v128, v123, v63, v118, v119, v66, v67);
      sub_10001BE90(v134, &qword_100830F30);
      sub_10001BE90(v55, &qword_100830F30);
      sub_1003ABF64(v121, v70, v120, v73, v72, v74, v75, v63, v136, v135, v66, v67);
      return;
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  *(_QWORD *)&v123 = v11;
  v37 = v135;
  ((void (*)(char *, _QWORD, uint64_t))v126)(v21, enum case for ConfigurationType.pacer(_:), v15);
  dispatch thunk of RawRepresentable.rawValue.getter(&v149, v15, v22);
  dispatch thunk of RawRepresentable.rawValue.getter(&v137, v15, v22);
  v38 = v149;
  v39 = v137;
  v25(v21, v15);
  if (v38 == v39)
  {
    type metadata accessor for PacerWorkoutConfiguration(0);
    v40 = ((uint64_t (*)(void))static PacerWorkoutConfiguration.colors.getter)();
    v41 = (void *)WorkoutConfigurationColors.gradientStartingColor.getter(v40);
    v42 = *(uint64_t (**)(char *, uint64_t))(v127 + 8);
    v43 = v42(v14, v37);
    v44 = (char *)v123;
    v45 = static PacerWorkoutConfiguration.colors.getter(v43);
    v46 = (void *)WorkoutConfigurationColors.gradientEndingColor.getter(v45);
    v42(v44, v37);
    v26 = v133;
    v47 = (id)FIUICircularGradientImage(v41, v46, *(double *)(v133 + *(int *)(v136 + 48)));

    if (v47)
    {
      v35 = Image.init(uiImage:)(v47);
      v36 = v35;
      *(_QWORD *)&v137 = v35;
      BYTE8(v137) = 1;
      goto LABEL_7;
    }
    goto LABEL_16;
  }
  v76 = v133;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v21, v133, v15);
  v77 = (char *)v124;
  ((void (*)(_QWORD, _QWORD, uint64_t))v126)(v124, enum case for ConfigurationType.interval(_:), v15);
  v78 = sub_1000083D8((unint64_t *)&qword_10082EBD8, (uint64_t (*)(uint64_t))&type metadata accessor for ConfigurationType, (uint64_t)&protocol conformance descriptor for ConfigurationType);
  v79 = dispatch thunk of static Equatable.== infix(_:_:)(v21, v77, v15, v78);
  v25(v77, v15);
  v25(v21, v15);
  v80 = v125;
  sub_1003ABAD4(v76, v125);
  v26 = v76;
  if ((v79 & 1) != 0)
  {
    sub_1003ABD54(v80);
    v81 = v136;
  }
  else
  {
    v81 = v136;
    v82 = *(_QWORD *)(v80 + *(int *)(v136 + 24) + 8);
    v83 = swift_retain(v82);
    v84 = GoalPublisher.goal.getter(v83);
    swift_release(v82);
    sub_1003ABD54(v80);
    if (v84)
    {
      v85 = *(_QWORD *)(v76 + *(int *)(v81 + 24) + 8);
      v86 = swift_retain(v85);
      v87 = GoalPublisher.goal.getter(v86);
      swift_release(v85);
      v88 = *(_QWORD *)(v76 + *(int *)(v81 + 48));
      v89 = swift_retain(v85);
      v90 = GoalPublisher.progress.getter(v89);
      swift_release(v85);
      v92 = static Alignment.center.getter(v91);
      _FrameLayout.init(width:height:alignment:)(&v155, v88, 0, v88, 0, v92, v93);
      *(_QWORD *)&v149 = v87;
      *((_QWORD *)&v149 + 1) = v88;
      *(_QWORD *)&v150 = 1084227584;
      *((double *)&v150 + 1) = (double)v90 / 100.0;
      *(_QWORD *)v151 = v155;
      *(_QWORD *)&v151[8] = v156;
      *(_QWORD *)&v151[16] = v157;
      *(_QWORD *)&v151[24] = v158;
      v152 = v159;
      v153 = 0;
      v94 = sub_100047110(&qword_100830F40);
      v95 = sub_100047110(&qword_100830F48);
      v96 = sub_1003ABD90();
      v97 = sub_1003ABE40((unint64_t *)&qword_100830F60, &qword_100830F48, (uint64_t)&protocol witness table for _FrameLayout, (uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
      _ConditionalContent<>.init(storage:)(&v149, v94, v95, v96, v97);
      v137 = v143;
      v138 = v144;
      v139 = v145;
      v140 = v146;
      v141 = v147;
      LOBYTE(v142) = v148;
      HIBYTE(v142) = 1;
      v98 = sub_100047110(&qword_100830F68);
      v99 = sub_100047110(&qword_100830F70);
      v100 = sub_1003ABE40(&qword_100830F78, &qword_100830F68, (uint64_t)&protocol witness table for Image, (uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
      v101 = sub_1003ABEA4();
      _ConditionalContent<>.init(storage:)(&v137, v98, v99, v100, v101);
      v124 = *(_OWORD *)v151;
      v125 = *(_OWORD *)&v151[16];
      v123 = v150;
      v52 = v149;
      goto LABEL_8;
    }
  }
  v102 = *(_QWORD *)(v76 + *(int *)(v81 + 24) + 8);
  v103 = swift_retain(v102);
  v104 = GoalPublisher.goal.getter(v103);
  swift_release(v102);
  v105 = *(double *)(v76 + *(int *)(v81 + 48));
  v106 = (id)FIUICircularWorkoutGradientImageWithGoal(v104, v105);
  if (v106)
  {
    v107 = Image.init(uiImage:)(v106);
    v108 = static Alignment.center.getter(v107);
    _FrameLayout.init(width:height:alignment:)(&v155, *(_QWORD *)&v105, 0, *(_QWORD *)&v105, 0, v108, v109);
    *(_QWORD *)&v149 = v107;
    *((_QWORD *)&v149 + 1) = v155;
    *(_QWORD *)&v150 = v156;
    *((_QWORD *)&v150 + 1) = v157;
    *(_OWORD *)&v151[8] = v159;
    *(_QWORD *)v151 = v158;
    *(_QWORD *)&v151[24] = 0;
    v152 = 0uLL;
    v153 = 1;
    swift_retain(v107);
    v110 = sub_100047110(&qword_100830F40);
    v111 = sub_100047110(&qword_100830F48);
    v112 = sub_1003ABD90();
    v113 = sub_1003ABE40((unint64_t *)&qword_100830F60, &qword_100830F48, (uint64_t)&protocol witness table for _FrameLayout, (uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
    _ConditionalContent<>.init(storage:)(&v149, v110, v111, v112, v113);
    v137 = v143;
    v138 = v144;
    v139 = v145;
    v140 = v146;
    v141 = v147;
    LOBYTE(v142) = v148;
    HIBYTE(v142) = 1;
    v114 = sub_100047110(&qword_100830F68);
    v115 = sub_100047110(&qword_100830F70);
    v116 = sub_1003ABE40(&qword_100830F78, &qword_100830F68, (uint64_t)&protocol witness table for Image, (uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    v117 = sub_1003ABEA4();
    _ConditionalContent<>.init(storage:)(&v137, v114, v115, v116, v117);
    swift_release(v107);
    v124 = *(_OWORD *)v151;
    v125 = *(_OWORD *)&v151[16];
    v123 = v150;
    v52 = v149;
    goto LABEL_8;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_1003A9DA8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t OpaqueTypeConformance2;
  unint64_t v39;
  __n128 v40;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v67 = a2;
  v72 = a3;
  v4 = type metadata accessor for MirrorStatusView(0);
  v5 = __chkstk_darwin(v4);
  v65 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for AnimatedWorkoutGlyph(0, v5);
  v66 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v62 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100047110(&qword_100830F90);
  __chkstk_darwin(v71);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v64 = (char *)&v59 - v11;
  v68 = sub_100047110(&qword_100830F98);
  __chkstk_darwin(v68);
  v70 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StepType(0);
  v59 = *(_QWORD *)(v13 - 8);
  v60 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100047110(&qword_100830FA0);
  v61 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ConfigurationType(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v19 + 104))(v22, enum case for ConfigurationType.interval(_:), v18, v20);
  v23 = sub_1000083D8(&qword_100830F38, (uint64_t (*)(uint64_t))&type metadata accessor for ConfigurationType, (uint64_t)&protocol conformance descriptor for ConfigurationType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v74, v18, v23);
  dispatch thunk of RawRepresentable.rawValue.getter(&v73, v18, v23);
  v25 = v73;
  v24 = v74;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  if (v24 == v25
    && (v26 = *(_QWORD *)(a1 + *(int *)(v4 + 28) + 8),
        v27 = swift_retain(v26),
        v28 = IntervalsMetricsPublisher.intervalThisStep.getter(v27),
        swift_release(v26),
        v28))
  {
    v30 = WorkoutStep.stepType.getter(v29);
    v31 = StepType.scaleableImage.getter(v30);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v15, v60);
    v32 = Image.init(uiImage:)(v31);
    Image.scaledToFit(size:)(34.0, 34.0);
    v33 = swift_release(v32);
    v34 = v61;
    v36 = v69;
    v35 = v70;
    (*(void (**)(char *, char *, uint64_t, __n128))(v61 + 16))(v70, v17, v69, v33);
    v37 = swift_storeEnumTagMultiPayload(v35, v68, 0);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v37, &opaque type descriptor for <<opaque return type of Image.scaledToFit(size:)>>, 1);
    v39 = sub_1003ABF98();
    _ConditionalContent<>.init(storage:)(v35, v36, v71, OpaqueTypeConformance2, v39);
    v40 = swift_release(v28);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v34 + 8))(v17, v36, v40);
  }
  else
  {
    v42 = sub_1003A8684();
    v43 = v65;
    sub_1003ABAD4(a1, v65);
    if ((v42 & 1) != 0)
    {
      v44 = *(_QWORD *)(v43 + *(int *)(v4 + 36) + 8);
      swift_retain(v44);
      v46 = WorkoutStatePublisher.workoutPaused.getter(v45);
      swift_release(v44);
      v47 = v46 ^ 1;
    }
    else
    {
      v47 = 0;
    }
    v49 = (uint64_t)v70;
    v48 = v71;
    v51 = v68;
    v50 = v69;
    v53 = v63;
    v52 = (uint64_t)v64;
    v54 = v62;
    sub_1003ABD54(v43);
    AnimatedWorkoutGlyph.init(activityType:iconSize:animated:)(v67, 2, v47 & 1);
    v55 = v66;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v9, v54, v53);
    v9[*(int *)(v48 + 36)] = 1;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v53);
    sub_100045AD4((uint64_t)v9, v52, &qword_100830F90);
    sub_100021CC0(v52, v49, &qword_100830F90);
    v56 = swift_storeEnumTagMultiPayload(v49, v51, 1);
    v57 = swift_getOpaqueTypeConformance2(v56, &opaque type descriptor for <<opaque return type of Image.scaledToFit(size:)>>, 1);
    v58 = sub_1003ABF98();
    _ConditionalContent<>.init(storage:)(v49, v50, v48, v57, v58);
    return sub_10001BE90(v52, &qword_100830F90);
  }
}

uint64_t sub_1003AA25C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  char v14;
  void (*v15)(_BYTE *, uint64_t);
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _BYTE v24[14];
  BOOL v25;
  uint64_t v26;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for WorkoutAnimationStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v24[-v11];
  v13 = type metadata accessor for MirrorStatusView(0);
  sub_1003F74B4((uint64_t)v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for WorkoutAnimationStyle.fullSpeed(_:), v6);
  v14 = static WorkoutAnimationStyle.== infix(_:_:)(v12, v9);
  v15 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v15(v9, v6);
  v16 = ((uint64_t (*)(_BYTE *, uint64_t))v15)(v12, v6);
  if ((v14 & 1) != 0)
  {
    v18 = *(_QWORD *)(a1 + *(int *)(v13 + 44));
    AppStorage.wrappedValue.getter(&v26, v18, &type metadata for Bool, v17);
    v25 = (v26 & 1) == 0;
    return AppStorage.wrappedValue.setter(&v25, v18, &type metadata for Bool);
  }
  else
  {
    v20 = static WOLog.app.getter(v16);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Ignoring double-tap during low power mode", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1003AA460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = type metadata accessor for WorkoutViewStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100830EC8);
  __chkstk_darwin(v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static VerticalAlignment.center.getter(v8);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v9 = sub_100047110(&qword_100830ED0);
  sub_1003A8B24(v0, (uint64_t)&v7[*(int *)(v9 + 44)]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for WorkoutViewStyle.iOSStatusBar(_:), v1);
  v10 = sub_100028384(&qword_100830ED8, &qword_100830EC8, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.workoutViewStyle(_:)(v4, v5, v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_10001BE90((uint64_t)v7, &qword_100830EC8);
}

void sub_1003AA5A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  id v5;
  id v6;
  char *v7;
  double v8;
  double v9;
  uint64_t v10;
  _BYTE v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_storedRingsView);
    v5 = v4;

    if (v4)
    {
      v6 = objc_msgSend(v5, "ringGroup");

      swift_beginAccess(v1, &v10, 0, 0);
      v7 = (char *)swift_unknownObjectWeakLoadStrong(v1);
      if (v7)
      {
        v9 = *(double *)&v7[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_completionPercentage];

        *(float *)&v8 = v9;
      }
      else
      {
        LODWORD(v8) = 0;
      }
      objc_msgSend(v6, "setPercentage:ofRingAtIndex:animated:", 0, 0, v8);

    }
  }
}

void sub_1003AA694()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  double v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  double v20;
  double v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;

  v1 = v0;
  v2 = OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_storedRingsView;
  v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_storedRingsView];
  if (v3)
    objc_msgSend(v3, "removeFromSuperview");
  v4 = objc_msgSend(objc_allocWithZone((Class)ARUIRingGroup), "initWithNumberOfRings:", 1);
  LODWORD(v5) = 0;
  objc_msgSend(v4, "setPercentage:ofRingAtIndex:animated:", 0, 0, v5);
  v6 = objc_msgSend(objc_allocWithZone((Class)ARUIRingsView), "initWithRingGroup:", v4);
  v7 = (void *)objc_opt_self(UIColor);
  v8 = v6;
  v9 = objc_msgSend(v7, "blackColor");
  objc_msgSend(v8, "setBackgroundColor:", v9);

  *(float *)&v10 = *(float *)&v1[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_diameter] + -1.0;
  objc_msgSend(v4, "setGroupDiameter:", v10);
  LODWORD(v11) = *(_DWORD *)&v1[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_thickness];
  objc_msgSend(v4, "setThickness:", v11);
  v12 = OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_goalType;
  v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_goalType];
  v14 = (void *)objc_opt_self(ARUIMetricColors);
  v15 = objc_msgSend(v14, "metricColorsForGoalTypeIdentifier:", v13);
  v16 = objc_msgSend(v15, "gradientDarkColor");

  if (v16)
  {
    v17 = objc_msgSend(v14, "metricColorsForGoalTypeIdentifier:", *(_QWORD *)&v1[v12]);
    v18 = objc_msgSend(v17, "gradientLightColor");

    if (v18)
    {
      objc_msgSend(v4, "setTopColor:bottomColor:ofRingAtIndex:", v16, v18, 0);

      v19 = objc_msgSend(v8, "ringGroup");
      LODWORD(v20) = 1045220557;
      objc_msgSend(v19, "setEmptyOpacity:", v20);

      v21 = *(double *)&v1[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_completionPercentage];
      *(float *)&v21 = v21;
      objc_msgSend(v4, "setPercentage:ofRingAtIndex:animated:", 0, 0, v21);
      objc_msgSend(v1, "addSubview:", v8);
      v22 = objc_msgSend(v8, "leadingAnchor");
      v23 = objc_msgSend(v1, "leadingAnchor");
      v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

      objc_msgSend(v24, "setActive:", 1);
      v25 = objc_msgSend(v8, "trailingAnchor");
      v26 = objc_msgSend(v1, "trailingAnchor");
      v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

      objc_msgSend(v27, "setActive:", 1);
      v28 = objc_msgSend(v8, "topAnchor");
      v29 = objc_msgSend(v1, "topAnchor");
      v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

      objc_msgSend(v30, "setActive:", 1);
      v31 = objc_msgSend(v8, "bottomAnchor");
      v32 = objc_msgSend(v1, "bottomAnchor");
      v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

      objc_msgSend(v33, "setActive:", 1);
      v34 = *(id *)&v1[v2];
      *(_QWORD *)&v1[v2] = v8;

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1003AAB98()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ARUIRingsViewWrapper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ARUIRingsViewWrapper()
{
  return objc_opt_self(_TtC10FitnessApp20ARUIRingsViewWrapper);
}

uint64_t type metadata accessor for MirrorStatusView(uint64_t a1)
{
  uint64_t result;

  result = qword_100830E68;
  if (!qword_100830E68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MirrorStatusView);
  return result;
}

id sub_1003AAC34(double a1, float a2, double a3, uint64_t a4, uint64_t a5)
{
  objc_class *v9;
  char *v10;
  uint64_t v11;
  float v12;
  id v13;
  objc_super v15;

  v9 = (objc_class *)type metadata accessor for ARUIRingsViewWrapper();
  v10 = (char *)objc_allocWithZone(v9);
  v11 = OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_completionPercentage;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_completionPercentage] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_storedRingsView] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_goalType] = a5;
  v12 = a1;
  *(float *)&v10[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_diameter] = v12;
  *(float *)&v10[OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_thickness] = a2;
  *(double *)&v10[v11] = a3;
  v15.receiver = v10;
  v15.super_class = v9;
  v13 = objc_msgSendSuper2(&v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_1003AA694();

  return v13;
}

void sub_1003AACFC(uint64_t a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[5];
  uint64_t v13;

  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_goalType);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_goalType) = a6;
  if (v8 != a6)
    sub_1003AA694();
  *(double *)(a1 + OBJC_IVAR____TtC10FitnessApp20ARUIRingsViewWrapper_completionPercentage) = a4;
  v9 = (void *)objc_opt_self(ARUIRingGroup);
  v10 = swift_allocObject(&unk_10079C438, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, a1);
  v12[4] = sub_1003AC140;
  v13 = v10;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10002D0F8;
  v12[3] = &unk_10079C450;
  v11 = _Block_copy(v12);
  swift_release(v13);
  objc_msgSend(v9, "animateWithDuration:animations:curve:completion:", v11, 4, 0, 1.0);
  _Block_release(v11);
}

id sub_1003AAE04(uint64_t a1)
{
  uint64_t v1;

  return sub_1003AAC34(*(double *)(v1 + 8), *(float *)(v1 + 16), *(double *)(v1 + 24), a1, *(_QWORD *)v1);
}

void sub_1003AAE18(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;

  sub_1003AACFC(a1, a3, a4, *(double *)(v4 + 24), a2, *(_QWORD *)v4);
}

uint64_t sub_1003AAE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003AC0D8();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1003AAE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003AC0D8();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1003AAEC4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003AC0D8();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_1003AAEE8()
{
  return EnvironmentValues.workoutAnimationStyle.getter();
}

uint64_t sub_1003AAF08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for WorkoutAnimationStyle(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.workoutAnimationStyle.setter(v4);
}

uint64_t *sub_1003AAF88(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v34 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for ConfigurationType(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)a1 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[9];
    v25 = a3[10];
    v26 = (uint64_t *)((char *)a1 + v24);
    v27 = (uint64_t *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (uint64_t *)((char *)a1 + v25);
    v30 = (uint64_t *)((char *)a2 + v25);
    swift_retain(v12);
    swift_retain(v15);
    swift_retain(v20);
    swift_retain(v23);
    swift_retain(v28);
    v31 = sub_100047110(&qword_100830DE8);
    if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
    {
      v32 = type metadata accessor for WorkoutAnimationStyle(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v29, v30, v32);
      v33 = 1;
    }
    else
    {
      v35 = *v30;
      *v29 = *v30;
      swift_retain(v35);
      v33 = 0;
    }
    swift_storeEnumTagMultiPayload(v29, v31, v33);
    v36 = a3[11];
    v37 = a3[12];
    v34 = *(uint64_t *)((char *)a2 + v36);
    *(uint64_t *)((char *)a1 + v36) = v34;
    *(uint64_t *)((char *)a1 + v37) = *(uint64_t *)((char *)a2 + v37);
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  }
  swift_retain(v34);
  return a1;
}

double sub_1003AB12C(uint64_t a1, int *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v4 = type metadata accessor for ConfigurationType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5] + 8));
  swift_release(*(_QWORD *)(a1 + a2[6] + 8));
  swift_release(*(_QWORD *)(a1 + a2[7] + 8));
  swift_release(*(_QWORD *)(a1 + a2[8] + 8));
  swift_release(*(_QWORD *)(a1 + a2[9] + 8));
  v5 = (_QWORD *)(a1 + a2[10]);
  v6 = sub_100047110(&qword_100830DE8);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for WorkoutAnimationStyle(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release(*v5);
  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + a2[11])).n128_u64[0];
  return result;
}

uint64_t sub_1003AB218(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = type metadata accessor for ConfigurationType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(a1 + v16);
  v21 = (_QWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = (_QWORD *)(a1 + v23);
  v26 = (_QWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (uint64_t *)(a1 + v24);
  v29 = (uint64_t *)(a2 + v24);
  swift_retain(v11);
  swift_retain(v14);
  swift_retain(v19);
  swift_retain(v22);
  swift_retain(v27);
  v30 = sub_100047110(&qword_100830DE8);
  if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
  {
    v31 = type metadata accessor for WorkoutAnimationStyle(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
    v32 = 1;
  }
  else
  {
    v33 = *v29;
    *v28 = *v29;
    swift_retain(v33);
    v32 = 0;
  }
  swift_storeEnumTagMultiPayload(v28, v30, v32);
  v34 = a3[11];
  v35 = a3[12];
  v36 = *(_QWORD *)(a2 + v34);
  *(_QWORD *)(a1 + v34) = v36;
  *(_QWORD *)(a1 + v35) = *(_QWORD *)(a2 + v35);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_retain(v36);
  return a1;
}

uint64_t sub_1003AB394(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = type metadata accessor for ConfigurationType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_retain(v15);
  swift_release(v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v20 = v19[1];
  v21 = v18[1];
  v18[1] = v20;
  swift_retain(v20);
  swift_release(v21);
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v25 = v24[1];
  v26 = v23[1];
  v23[1] = v25;
  swift_retain(v25);
  swift_release(v26);
  v27 = a3[9];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  *v28 = *v29;
  v30 = v29[1];
  v31 = v28[1];
  v28[1] = v30;
  swift_retain(v30);
  swift_release(v31);
  if (a1 != a2)
  {
    v32 = a3[10];
    v33 = (uint64_t *)(a1 + v32);
    v34 = (uint64_t *)(a2 + v32);
    sub_10001BE90(a1 + v32, &qword_100830DE8);
    v35 = sub_100047110(&qword_100830DE8);
    if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
    {
      v36 = type metadata accessor for WorkoutAnimationStyle(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v33, v34, v36);
      v37 = 1;
    }
    else
    {
      v38 = *v34;
      *v33 = *v34;
      swift_retain(v38);
      v37 = 0;
    }
    swift_storeEnumTagMultiPayload(v33, v35, v37);
  }
  v39 = a3[11];
  v40 = *(_QWORD *)(a2 + v39);
  v41 = *(_QWORD *)(a1 + v39);
  *(_QWORD *)(a1 + v39) = v40;
  swift_retain(v40);
  swift_release(v41);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1003AB588(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for ConfigurationType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_100047110(&qword_100830DE8);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for WorkoutAnimationStyle(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload(v10, v12, 1);
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v14 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1003AB6A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = type metadata accessor for ConfigurationType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_release(v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_release(v18);
  v19 = a3[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  v24 = v20[1];
  *v20 = v23;
  v20[1] = v22;
  swift_release(v24);
  v25 = a3[8];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  v30 = v26[1];
  *v26 = v29;
  v26[1] = v28;
  swift_release(v30);
  v31 = a3[9];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  v36 = v32[1];
  *v32 = v35;
  v32[1] = v34;
  swift_release(v36);
  if (a1 != a2)
  {
    v37 = a3[10];
    v38 = (void *)(a1 + v37);
    v39 = (const void *)(a2 + v37);
    sub_10001BE90(a1 + v37, &qword_100830DE8);
    v40 = sub_100047110(&qword_100830DE8);
    if (swift_getEnumCaseMultiPayload(v39, v40) == 1)
    {
      v41 = type metadata accessor for WorkoutAnimationStyle(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v38, v39, v41);
      swift_storeEnumTagMultiPayload(v38, v40, 1);
    }
    else
    {
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
  }
  v42 = a3[11];
  v43 = *(_QWORD *)(a1 + v42);
  *(_QWORD *)(a1 + v42) = *(_QWORD *)(a2 + v42);
  swift_release(v43);
  v44 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v44) = *(_QWORD *)(a2 + v44);
  return a1;
}

uint64_t sub_1003AB844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003AB850);
}

uint64_t sub_1003AB850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for ConfigurationType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_100047110(&qword_100830E08);
    v10 = a1 + *(int *)(a3 + 40);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1003AB900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003AB90C);
}

uint64_t sub_1003AB90C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for ConfigurationType(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_100047110(&qword_100830E08);
    v12 = a1 + *(int *)(a4 + 40);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1003AB9B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[10];

  v2 = type metadata accessor for ConfigurationType(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_1006396F8;
    v6[2] = &unk_1006396F8;
    v6[3] = &unk_1006396F8;
    v6[4] = &unk_1006396F8;
    v6[5] = &unk_1006396F8;
    sub_1003ABA68(319);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      v6[7] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[8] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[9] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_initStructMetadata(a1, 256, 10, v6, a1 + 16);
    }
  }
}

void sub_1003ABA68(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100830E78)
  {
    v2 = type metadata accessor for WorkoutAnimationStyle(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100830E78);
  }
}

uint64_t sub_1003ABABC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B5D24, 1);
}

uint64_t sub_1003ABAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MirrorStatusView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003ABB18()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)type metadata accessor for MirrorStatusView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for ConfigurationType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);
  swift_release(*(_QWORD *)(v0 + v4 + v1[5] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[6] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[7] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[8] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[9] + 8));
  v7 = (_QWORD *)(v0 + v4 + v1[10]);
  v8 = sub_100047110(&qword_100830DE8);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for WorkoutAnimationStyle(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  swift_release(*(_QWORD *)(v0 + v4 + v1[11]));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1003ABC48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MirrorStatusView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003ABC8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MirrorStatusView(0) - 8) + 80);
  return sub_1003AA25C(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_1003ABCB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100830F10;
  if (!qword_100830F10)
  {
    v1 = sub_100007050(&qword_100830EE0);
    sub_1000083D8(&qword_100830F18, (uint64_t (*)(uint64_t))&type metadata accessor for WorkoutTimeView, (uint64_t)&protocol conformance descriptor for WorkoutTimeView);
    sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100830F10);
  }
  return result;
}

uint64_t sub_1003ABD54(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MirrorStatusView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003ABD90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100830F50;
  if (!qword_100830F50)
  {
    v1 = sub_100007050(&qword_100830F40);
    sub_1003ABDFC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100830F50);
  }
  return result;
}

unint64_t sub_1003ABDFC()
{
  unint64_t result;

  result = qword_100830F58;
  if (!qword_100830F58)
  {
    result = swift_getWitnessTable(&unk_100639830, &type metadata for GoalRingView);
    atomic_store(result, (unint64_t *)&qword_100830F58);
  }
  return result;
}

uint64_t sub_1003ABE40(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100007050(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1003ABEA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100830F80;
  if (!qword_100830F80)
  {
    v1 = sub_100007050(&qword_100830F70);
    sub_1003ABD90();
    sub_1003ABE40((unint64_t *)&qword_100830F60, &qword_100830F48, (uint64_t)&protocol witness table for _FrameLayout, (uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100830F80);
  }
  return result;
}

double sub_1003ABF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12)
{
  double result;

  if ((a12 & 1) != 0)
    sub_1003ABF54(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11 & 1);
  else
    *(_QWORD *)&result = swift_retain(a1).n128_u64[0];
  return result;
}

uint64_t sub_1003ABF54(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  if ((a11 & 1) != 0)
    return swift_retain(result);
  return result;
}

double sub_1003ABF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12)
{
  double result;

  if ((a12 & 1) != 0)
    sub_1003ABF88(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11 & 1);
  else
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

uint64_t sub_1003ABF88(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  if ((a11 & 1) != 0)
    return swift_release(result);
  return result;
}

unint64_t sub_1003ABF98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100830FA8;
  if (!qword_100830FA8)
  {
    v1 = sub_100007050(&qword_100830F90);
    sub_1000083D8(&qword_100830FB0, (uint64_t (*)(uint64_t))&type metadata accessor for AnimatedWorkoutGlyph, (uint64_t)&protocol conformance descriptor for AnimatedWorkoutGlyph);
    sub_1003AC01C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100830FA8);
  }
  return result;
}

unint64_t sub_1003AC01C()
{
  unint64_t result;

  result = qword_100830FB8;
  if (!qword_100830FB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _FlipForRTLEffect, &type metadata for _FlipForRTLEffect);
    atomic_store(result, (unint64_t *)&qword_100830FB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for GoalRingView()
{
  return &type metadata for GoalRingView;
}

uint64_t sub_1003AC070()
{
  _QWORD v1[2];

  v1[0] = sub_100007050(&qword_100830EC8);
  v1[1] = sub_100028384(&qword_100830ED8, &qword_100830EC8, (uint64_t)&protocol conformance descriptor for HStack<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
}

unint64_t sub_1003AC0D8()
{
  unint64_t result;

  result = qword_100830FC0;
  if (!qword_100830FC0)
  {
    result = swift_getWitnessTable(&unk_1006397A0, &type metadata for GoalRingView);
    atomic_store(result, (unint64_t *)&qword_100830FC0);
  }
  return result;
}

uint64_t sub_1003AC11C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003AC140()
{
  uint64_t v0;

  sub_1003AA5A8(v0);
}

uint64_t sub_1003AC148()
{
  uint64_t result;
  uint64_t v1;

  result = static MoveModeNotificationConstants.nextMoveModeUserInfoKey.getter();
  qword_10086A798 = result;
  unk_10086A7A0 = v1;
  return result;
}

uint64_t sub_1003AC188()
{
  uint64_t result;
  uint64_t v1;

  result = static MoveModeNotificationConstants.notificationTypeUserInfoKey.getter();
  qword_10086A7A8 = result;
  *(_QWORD *)algn_10086A7B0 = v1;
  return result;
}

id sub_1003AC204()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FitnessCoachingMoveModeNotificationConstantsBridging();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FitnessCoachingMoveModeNotificationConstantsBridging()
{
  return objc_opt_self(FCMoveModeNotificationConstants);
}

double sub_1003AC258()
{
  return sub_10035DDA4(0x27u);
}

uint64_t *initializeWithCopy for MirrorIntervalsSecondPlatterView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = a2[2];
  v5 = a2[3];
  a1[2] = v6;
  a1[3] = v5;
  v7 = a2[4];
  v8 = (void *)a2[5];
  a1[4] = v7;
  a1[5] = (uint64_t)v8;
  v10 = (void *)a2[6];
  v9 = a2[7];
  a1[6] = (uint64_t)v10;
  a1[7] = v9;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v7);
  v11 = v8;
  v12 = v10;
  return a1;
}

uint64_t *assignWithCopy for MirrorIntervalsSecondPlatterView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[3] = a2[3];
  v8 = a2[4];
  v9 = a1[4];
  a1[4] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = (void *)a2[5];
  v11 = (void *)a1[5];
  a1[5] = (uint64_t)v10;
  v12 = v10;

  v13 = (void *)a2[6];
  v14 = (void *)a1[6];
  a1[6] = (uint64_t)v13;
  v15 = v13;

  a1[7] = a2[7];
  return a1;
}

_QWORD *assignWithTake for MirrorIntervalsSecondPlatterView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v4 = *a1;
  *a1 = *(_QWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = a1[2];
  a1[1] = *(_QWORD *)(a2 + 8);
  a1[2] = v5;
  swift_release(v6);
  a1[3] = *(_QWORD *)(a2 + 24);
  swift_release(a1[4]);
  v7 = (void *)a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);

  v8 = (void *)a1[6];
  a1[6] = *(_QWORD *)(a2 + 48);

  a1[7] = *(_QWORD *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for MirrorIntervalsSecondPlatterView()
{
  return &type metadata for MirrorIntervalsSecondPlatterView;
}

uint64_t sub_1003AC40C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B5DC8, 1);
}

uint64_t sub_1003AC41C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  __int128 v13;

  v2 = v1;
  v13 = *(_OWORD *)(v1 + 8);
  v4 = swift_retain(*((_QWORD *)&v13 + 1));
  v5 = IntervalsMetricsPublisher.intervalThisStep.getter(v4);
  v6 = sub_10004D634((uint64_t)&v13);
  if (v5)
  {
    v7 = (void *)WorkoutStep.goal.getter(v6);
    v8 = objc_msgSend(v7, "goalTypeIdentifier", (_QWORD)v13);

    v9 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "metricColorsForGoalTypeIdentifier:", v8);
    *a1 = 1;
    v10 = sub_100047110(&qword_100830FF0);
    sub_1003AC540(v2, v9, v5, &a1[*(int *)(v10 + 44)]);
    swift_release(v5);

    return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);
  }
  else
  {
    v12 = sub_100047110(&qword_100830FF0);
    return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
}

id sub_1003AC540@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id result;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  void (*v55)(_QWORD, _QWORD, _QWORD);
  void *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t OpaqueTypeConformance2;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  char *v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  char *v89;
  void (*v90)(char *, char *, uint64_t);
  void (*v91)(uint64_t, char *, uint64_t);
  char *v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t);
  void (*v95)(char *, uint64_t);
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void (*v101)(_QWORD, _QWORD, _QWORD);
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  void *v125;
  void (*v126)(_QWORD, _QWORD, _QWORD);
  uint64_t v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;

  v107 = a3;
  v115 = a4;
  v111 = sub_100047110(&qword_100830FF8);
  __chkstk_darwin(v111);
  v109 = (uint64_t *)((char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v113 = sub_100047110(&qword_100831000);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v110 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100047110(&qword_100831008);
  v8 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v10 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v98 - v12;
  v105 = sub_100047110(&qword_100831010);
  __chkstk_darwin(v105);
  v15 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100831018);
  v124 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v123 = (char *)&v98 - v20;
  v106 = type metadata accessor for WorkoutViewStyle(0);
  v103 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_100047110(&qword_10082F220);
  v122 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v108 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v102 = (char *)&v98 - v24;
  __chkstk_darwin(v25);
  v121 = (char *)&v98 - v26;
  v27 = a1;
  v28 = *(id *)(a1 + 40);
  v29 = a2;
  result = objc_msgSend(a2, "gradientDarkColor");
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v31 = v28;
  v101 = (void (*)(_QWORD, _QWORD, _QWORD))Color.init(_:)(result);
  result = objc_msgSend(v29, "gradientLightColor");
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v116 = v18;
  v117 = v16;
  v118 = v13;
  v119 = v8;
  v100 = v10;
  v32 = Color.init(_:)(result);
  v33 = *(void **)(v27 + 48);
  v134 = *(_OWORD *)(v27 + 8);
  v34 = *((_QWORD *)&v134 + 1);
  v99 = v27;
  v35 = v33;
  v36 = sub_10004D65C((uint64_t)&v134);
  v37 = MetricsPublisher.workoutStatePublisher.getter(v36);
  v38 = type metadata accessor for IntervalsMetricsPublisher(0);
  v39 = sub_1000083D8(&qword_10082F228, (uint64_t (*)(uint64_t))&type metadata accessor for IntervalsMetricsPublisher, (uint64_t)&protocol conformance descriptor for IntervalsMetricsPublisher);
  v40 = ObservedObject.init(wrappedValue:)(v34, v38, v39);
  v42 = v41;
  v43 = type metadata accessor for WorkoutStatePublisher(0);
  v44 = sub_1000083D8(&qword_10082F230, (uint64_t (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher, (uint64_t)&protocol conformance descriptor for WorkoutStatePublisher);
  v45 = ObservedObject.init(wrappedValue:)(v37, v43, v44);
  v47 = v46;
  result = objc_msgSend(v29, "nonGradientTextColor");
  if (result)
  {
    v48 = Color.init(_:)(result);
    v125 = v31;
    v126 = v101;
    v127 = v32;
    v128 = v35;
    v129 = v40;
    v130 = v42;
    v131 = v45;
    v132 = v47;
    v133 = v48;
    v49 = v103;
    v101 = *(void (**)(_QWORD, _QWORD, _QWORD))(v103 + 104);
    v50 = v104;
    v51 = v106;
    v101(v104, enum case for WorkoutViewStyle.iOSHeroEnclosedMetric(_:), v106);
    v52 = sub_100047110(&qword_10082F238);
    v53 = sub_10034659C();
    v54 = v102;
    View.workoutViewStyle(_:)(v50, v52, v53);
    v103 = *(_QWORD *)(v49 + 8);
    ((void (*)(char *, uint64_t))v103)(v50, v51);
    v56 = v125;
    v55 = v126;
    v57 = v127;
    v58 = v128;
    v59 = v130;
    v60 = v132;
    swift_release(v133);
    swift_release(v60);
    swift_release(v59);

    swift_release(v57);
    swift_release(v55);

    v61 = v120;
    v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v122 + 32))(v121, v54, v120);
    *(_QWORD *)v15 = static HorizontalAlignment.center.getter(v62, v63, v64, v65, v66);
    *((_QWORD *)v15 + 1) = 0;
    v15[16] = 1;
    v67 = sub_100047110(&qword_100831020);
    v68 = v99;
    sub_1003ACD14(v107, v99, &v15[*(int *)(v67 + 44)]);
    v69 = sub_100028384(&qword_100831028, &qword_100831010, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v70 = v116;
    View.metricRow(padding:)(v105, v69, 0.0);
    sub_10001BE90((uint64_t)v15, &qword_100831010);
    v71 = (*(uint64_t (**)(char *, char *, uint64_t))(v124 + 32))(v123, v70, v117);
    v72 = static HorizontalAlignment.leading.getter(v71);
    v73 = (uint64_t)v109;
    *v109 = v72;
    *(_QWORD *)(v73 + 8) = 0;
    *(_BYTE *)(v73 + 16) = 1;
    v74 = sub_100047110(&qword_100831030);
    sub_1003AD074(v68, v73 + *(int *)(v74 + 44), v75);
    v101(v50, enum case for WorkoutViewStyle.iOSSmallMetric(_:), v51);
    v76 = sub_100028384(&qword_100831038, &qword_100830FF8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v77 = v110;
    v78 = v111;
    View.workoutViewStyle(_:)(v50, v111, v76);
    ((void (*)(char *, uint64_t))v103)(v50, v51);
    sub_10001BE90(v73, &qword_100830FF8);
    v125 = (void *)v78;
    v126 = (void (*)(_QWORD, _QWORD, _QWORD))v76;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v125, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
    v80 = v100;
    v81 = v113;
    View.metricRow(padding:)(v113, OpaqueTypeConformance2, 0.0);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v77, v81);
    v82 = v118;
    v83 = v119;
    v84 = v114;
    (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v118, v80, v114);
    v85 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
    v86 = v108;
    v85(v108, v121, v61);
    v87 = *(void (**)(char *, char *, uint64_t))(v124 + 16);
    v89 = v116;
    v88 = v117;
    v87(v116, v123, v117);
    v90 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
    v90(v80, v82, v84);
    v91 = (void (*)(uint64_t, char *, uint64_t))v90;
    v92 = v115;
    v85(v115, v86, v61);
    v93 = sub_100047110(&qword_100831040);
    v87(&v92[*(int *)(v93 + 48)], v89, v88);
    v91((uint64_t)&v92[*(int *)(v93 + 64)], v80, v84);
    v94 = *(void (**)(char *, uint64_t))(v119 + 8);
    v94(v118, v84);
    v95 = *(void (**)(char *, uint64_t))(v124 + 8);
    v95(v123, v88);
    v96 = *(void (**)(char *, uint64_t))(v122 + 8);
    v97 = v120;
    v96(v121, v120);
    v94(v80, v84);
    v95(v89, v88);
    return (id)((uint64_t (*)(char *, uint64_t))v96)(v86, v97);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1003ACD14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;

  v49 = a3;
  v43 = type metadata accessor for WorkoutViewStyle(0);
  v5 = *(_QWORD *)(v43 - 8);
  v6 = __chkstk_darwin(v43);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StepDetailView(0, v6);
  v44 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100831068);
  v47 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100047110(&qword_100831070);
  __chkstk_darwin(v45);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100047110(&qword_100831078);
  __chkstk_darwin(v46);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v42 - v20;
  v22 = *(id *)(a2 + 40);
  v23 = swift_retain(a1);
  StepDetailView.init(step:formattingManager:compressed:)(v23);
  v24 = v43;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for WorkoutViewStyle.iOSSmallMetric(_:), v43);
  v25 = sub_1000083D8(&qword_100831080, (uint64_t (*)(uint64_t))&type metadata accessor for StepDetailView, (uint64_t)&protocol conformance descriptor for StepDetailView);
  View.workoutViewStyle(_:)(v8, v9, v25);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v24);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v11, v9);
  v27 = (void *)WorkoutStep.goal.getter(v26);
  v28 = objc_msgSend(v27, "goalTypeIdentifier");

  v30 = _HKWorkoutGoalType.color.getter(v28, v29);
  v31 = Color.init(_:)(v30);
  KeyPath = swift_getKeyPath(&unk_100639998);
  v34 = v47;
  v33 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v16, v14, v48);
  v35 = (uint64_t *)&v16[*(int *)(v45 + 36)];
  *v35 = KeyPath;
  v35[1] = v31;
  v36 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v14, v33);
  LOBYTE(v31) = static Edge.Set.bottom.getter(v36);
  sub_100021CC0((uint64_t)v16, (uint64_t)v18, &qword_100831070);
  v37 = &v18[*(int *)(v46 + 36)];
  *v37 = v31;
  *(_OWORD *)(v37 + 8) = 0u;
  *(_OWORD *)(v37 + 24) = 0u;
  v37[40] = 1;
  sub_10001BE90((uint64_t)v16, &qword_100831070);
  sub_100045AD4((uint64_t)v18, (uint64_t)v21, &qword_100831078);
  sub_100021CC0((uint64_t)v21, (uint64_t)v18, &qword_100831078);
  v38 = v49;
  *v49 = 0;
  *((_BYTE *)v38 + 8) = 1;
  v39 = v38;
  v40 = sub_100047110(&qword_100831088);
  sub_100021CC0((uint64_t)v18, (uint64_t)v39 + *(int *)(v40 + 48), &qword_100831078);
  sub_10001BE90((uint64_t)v21, &qword_100831078);
  return sub_10001BE90((uint64_t)v18, &qword_100831078);
}

uint64_t sub_1003AD074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  char v24;
  char v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  __n128 v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  char *v42;
  __n128 v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  char v64;
  CHWorkoutDetailHeartRateTableViewCell *v65;

  v56 = a1;
  v62 = a2;
  v3 = type metadata accessor for StepDetailView(0, a3);
  v60 = *(_QWORD *)(v3 - 8);
  v61 = v3;
  __chkstk_darwin(v3);
  v57 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100047110(&qword_100831048);
  __chkstk_darwin(v59);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v58 = (uint64_t)&v51 - v8;
  v55 = sub_100047110(&qword_10082F028);
  v9 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100047110(&qword_100831050);
  __chkstk_darwin(v54);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100047110(&qword_100831058);
  __chkstk_darwin(v53);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v52 = (uint64_t)&v51 - v17;
  v18 = LocalizedStringKey.init(stringLiteral:)(1415071054, 0xE400000000000000);
  v19 = Text.init(_:tableName:bundle:comment:)(v18);
  v21 = v20;
  v23 = v22;
  *(_QWORD *)&v63 = v19;
  *((_QWORD *)&v63 + 1) = v20;
  v25 = v24 & 1;
  v64 = v24 & 1;
  v65 = v22;
  View.metricDescriptionFont(multiline:)(0, &type metadata for Text, &protocol witness table for Text);
  sub_1000E4458(v19, v21, v25);
  swift_bridgeObjectRelease(v23, v26, v27, v28, v29, v30, v31, v32);
  v34 = static HierarchicalShapeStyle.secondary.getter(v33);
  v35 = v55;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v11, v55);
  *(_DWORD *)&v13[*(int *)(v54 + 36)] = v34;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v35);
  v36 = v56;
  v37 = *(_QWORD *)(v56 + 56);
  sub_100021CC0((uint64_t)v13, (uint64_t)v15, &qword_100831050);
  v38 = &v15[*(int *)(v53 + 36)];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = v37;
  sub_10001BE90((uint64_t)v13, &qword_100831050);
  v39 = v52;
  sub_100045AD4((uint64_t)v15, v52, &qword_100831058);
  v63 = *(_OWORD *)(v36 + 8);
  swift_retain(*((_QWORD *)&v63 + 1));
  IntervalsMetricsPublisher.intervalNextStep.getter(v40);
  sub_10004D634((uint64_t)&v63);
  v41 = *(id *)(v36 + 40);
  v42 = v57;
  StepDetailView.init(step:formattingManager:compressed:)(v43);
  LODWORD(v36) = static HierarchicalShapeStyle.secondary.getter(v44);
  v46 = v60;
  v45 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v6, v42, v61);
  *(_DWORD *)&v6[*(int *)(v59 + 36)] = v36;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v45);
  v47 = v58;
  sub_100045AD4((uint64_t)v6, v58, &qword_100831048);
  sub_100021CC0(v39, (uint64_t)v15, &qword_100831058);
  sub_100021CC0(v47, (uint64_t)v6, &qword_100831048);
  v48 = v62;
  sub_100021CC0((uint64_t)v15, v62, &qword_100831058);
  v49 = sub_100047110(&qword_100831060);
  sub_100021CC0((uint64_t)v6, v48 + *(int *)(v49 + 48), &qword_100831048);
  sub_10001BE90(v47, &qword_100831048);
  sub_10001BE90(v39, &qword_100831058);
  sub_10001BE90((uint64_t)v6, &qword_100831048);
  return sub_10001BE90((uint64_t)v15, &qword_100831058);
}

uint64_t sub_1003AD480@<X0>(_BYTE *a1@<X8>)
{
  return sub_1003AC41C(a1);
}

unint64_t sub_1003AD4C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100831090;
  if (!qword_100831090)
  {
    v1 = sub_100007050(&qword_100831098);
    sub_1003AD528();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100831090);
  }
  return result;
}

unint64_t sub_1003AD528()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008310A0;
  if (!qword_1008310A0)
  {
    v1 = sub_100007050(&qword_100830FF0);
    sub_100028384(&qword_10082E9E0, &qword_10082E9E8, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_100028384(&qword_1008310A8, &qword_1008310B0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008310A0);
  }
  return result;
}

char *sub_1003AD5C4(char *a1, char **a2, int *a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  void **v46;
  void **v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  id v57;
  uint64_t v58;
  void *v59;
  void (*v60)(void **, _QWORD, uint64_t, uint64_t);
  id v61;
  uint64_t v63;
  char *__dst;
  unsigned int (*v65)(char *, uint64_t, uint64_t, __n128);
  uint64_t v66;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v10);
  }
  else
  {
    v7 = (int *)type metadata accessor for MetricDetailViewModel(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(char **, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100047110(&qword_10081F218);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v66 = v8;
      v11 = *a2;
      v12 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v12;
      v13 = a2[2];
      v14 = a2[3];
      *((_QWORD *)a1 + 2) = v13;
      *((_QWORD *)a1 + 3) = v14;
      *((_QWORD *)a1 + 4) = a2[4];
      a1[40] = *((_BYTE *)a2 + 40);
      v15 = v7[9];
      __dst = &a1[v15];
      v16 = (char *)a2 + v15;
      v17 = type metadata accessor for DateInterval(0);
      v63 = *(_QWORD *)(v17 - 8);
      v65 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v63 + 48);
      v18 = v11;
      v19 = v12;
      swift_bridgeObjectRetain(v13);
      v20 = swift_bridgeObjectRetain(v14);
      if (v65(v16, 1, v17, v20))
      {
        v21 = sub_100047110((uint64_t *)&unk_100827440);
        memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(__dst, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(__dst, 0, 1, v17);
      }
      a1[v7[10]] = *((_BYTE *)a2 + v7[10]);
      v22 = v7[11];
      v23 = &a1[v22];
      v24 = (char *)a2 + v22;
      v25 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v66 + 56))(a1, 0, 1, v7);
    }
    v26 = a3[5];
    v27 = a3[6];
    v28 = *(char **)((char *)a2 + v26);
    *(_QWORD *)&a1[v26] = v28;
    v29 = *(uint64_t *)((char *)a2 + v27);
    *(_QWORD *)&a1[v27] = v29;
    v30 = a3[7];
    v31 = a3[8];
    v32 = *(char **)((char *)a2 + v30);
    *(_QWORD *)&a1[v30] = v32;
    v33 = *(char **)((char *)a2 + v31);
    *(_QWORD *)&a1[v31] = v33;
    v34 = a3[9];
    v35 = a3[10];
    v36 = *(char **)((char *)a2 + v34);
    *(_QWORD *)&a1[v34] = v36;
    v37 = &a1[v35];
    v38 = (char *)a2 + v35;
    v39 = *(uint64_t *)((char *)a2 + v35);
    v40 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = v39;
    *((_QWORD *)v37 + 1) = v40;
    v41 = v28;
    swift_retain(v29);
    v42 = v32;
    v43 = v33;
    v44 = v36;
    swift_retain(v39);
    swift_retain(v40);
    v45 = *(int *)(sub_100047110(&qword_10081F280) + 32);
    v46 = (void **)&v37[v45];
    v47 = (void **)&v38[v45];
    v48 = type metadata accessor for MetricChartData(0);
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      v50 = sub_100047110(&qword_10081F090);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      v51 = *v47;
      *v46 = *v47;
      v52 = *(int *)(v48 + 20);
      v53 = (char *)v46 + v52;
      v54 = (char *)v47 + v52;
      v55 = type metadata accessor for Date(0);
      v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
      v57 = v51;
      v56(v53, v54, v55);
      v58 = *(int *)(v48 + 24);
      v59 = *(void **)((char *)v47 + v58);
      *(void **)((char *)v46 + v58) = v59;
      v60 = *(void (**)(void **, _QWORD, uint64_t, uint64_t))(v49 + 56);
      v61 = v59;
      v60(v46, 0, 1, v48);
    }
  }
  return a1;
}

void sub_1003AD8EC(uint64_t a1, int *a2)
{
  uint64_t v4;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v4 = type metadata accessor for MetricDetailViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {

    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16), v5, v6, v7, v8, v9, v10, v11);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24), v12, v13, v14, v15, v16, v17, v18);
    v19 = a1 + *(int *)(v4 + 36);
    v20 = type metadata accessor for DateInterval(0);
    v21 = *(_QWORD *)(v20 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    v22 = a1 + *(int *)(v4 + 44);
    v23 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
  }

  swift_release(*(_QWORD *)(a1 + a2[6]));
  v24 = (_QWORD *)(a1 + a2[10]);
  swift_release(*v24);
  swift_release(v24[1]);
  v25 = (id *)((char *)v24 + *(int *)(sub_100047110(&qword_10081F280) + 32));
  v26 = type metadata accessor for MetricChartData(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26))
  {

    v27 = (char *)v25 + *(int *)(v26 + 20);
    v28 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);

  }
}

void **sub_1003ADAA0(void **a1, void **a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  void **v44;
  void **v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  id v55;
  uint64_t v56;
  void *v57;
  void (*v58)(void **, _QWORD, uint64_t, uint64_t);
  id v59;
  uint64_t v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t, __n128);
  char *__dst;
  uint64_t v64;

  v6 = (int *)type metadata accessor for MetricDetailViewModel(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(void **, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100047110(&qword_10081F218);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = *a2;
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = a2[2];
    v12 = a2[3];
    a1[2] = v11;
    a1[3] = v12;
    a1[4] = a2[4];
    *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
    v13 = v6[9];
    __dst = (char *)a1 + v13;
    v64 = v7;
    v14 = (char *)a2 + v13;
    v15 = type metadata accessor for DateInterval(0);
    v61 = *(_QWORD *)(v15 - 8);
    v62 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v61 + 48);
    v16 = v9;
    v17 = v10;
    swift_bridgeObjectRetain(v11);
    v18 = swift_bridgeObjectRetain(v12);
    if (v62(v14, 1, v15, v18))
    {
      v19 = sub_100047110((uint64_t *)&unk_100827440);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(__dst, 0, 1, v15);
    }
    *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
    v20 = v6[11];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    (*(void (**)(void **, _QWORD, uint64_t, int *))(v64 + 56))(a1, 0, 1, v6);
  }
  v24 = a3[5];
  v25 = a3[6];
  v26 = *(void **)((char *)a2 + v24);
  *(void **)((char *)a1 + v24) = v26;
  v27 = *(void **)((char *)a2 + v25);
  *(void **)((char *)a1 + v25) = v27;
  v28 = a3[7];
  v29 = a3[8];
  v30 = *(void **)((char *)a2 + v28);
  *(void **)((char *)a1 + v28) = v30;
  v31 = *(void **)((char *)a2 + v29);
  *(void **)((char *)a1 + v29) = v31;
  v32 = a3[9];
  v33 = a3[10];
  v34 = *(void **)((char *)a2 + v32);
  *(void **)((char *)a1 + v32) = v34;
  v35 = (void **)((char *)a1 + v33);
  v36 = (char *)a2 + v33;
  v37 = *(uint64_t *)((char *)a2 + v33);
  v38 = *((_QWORD *)v36 + 1);
  *v35 = v37;
  v35[1] = v38;
  v39 = v26;
  swift_retain(v27);
  v40 = v30;
  v41 = v31;
  v42 = v34;
  swift_retain(v37);
  swift_retain(v38);
  v43 = *(int *)(sub_100047110(&qword_10081F280) + 32);
  v44 = (void **)((char *)v35 + v43);
  v45 = (void **)&v36[v43];
  v46 = type metadata accessor for MetricChartData(0);
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    v48 = sub_100047110(&qword_10081F090);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v49 = *v45;
    *v44 = *v45;
    v50 = *(int *)(v46 + 20);
    v51 = (char *)v44 + v50;
    v52 = (char *)v45 + v50;
    v53 = type metadata accessor for Date(0);
    v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
    v55 = v49;
    v54(v51, v52, v53);
    v56 = *(int *)(v46 + 24);
    v57 = *(void **)((char *)v45 + v56);
    *(void **)((char *)v44 + v56) = v57;
    v58 = *(void (**)(void **, _QWORD, uint64_t, uint64_t))(v47 + 56);
    v59 = v57;
    v58(v44, 0, 1, v46);
  }
  return a1;
}

uint64_t sub_1003ADD9C(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, int *);
  int v9;
  int v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const void *v16;
  uint64_t v17;
  id v18;
  id v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(void *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  id v75;
  uint64_t v76;
  void *v77;
  void *v78;
  id v79;
  uint64_t v80;
  void *v81;
  void *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void **v92;
  void **v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(void **, uint64_t, uint64_t);
  int v97;
  int v98;
  void *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  id v105;
  uint64_t v106;
  void *v107;
  void (*v108)(void **, _QWORD, uint64_t, uint64_t);
  id v109;
  uint64_t v110;
  void *v112;
  void *v113;
  id v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  void *v121;
  id v122;
  uint64_t v123;
  unsigned int (*v124)(const void *, uint64_t, uint64_t, __n128);
  uint64_t v125;
  void *__dst;

  v6 = (int *)type metadata accessor for MetricDetailViewModel(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_100011F54(a1, type metadata accessor for MetricDetailViewModel);
      goto LABEL_7;
    }
    v23 = *(void **)a2;
    v24 = *(void **)a1;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v25 = v23;

    v26 = *(void **)(a2 + 8);
    v27 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = v26;
    v28 = v26;

    v29 = *(_QWORD *)(a2 + 16);
    v30 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v29;
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    v38 = *(_QWORD *)(a2 + 24);
    v39 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v38;
    swift_bridgeObjectRetain(v38);
    swift_bridgeObjectRelease(v39, v40, v41, v42, v43, v44, v45, v46);
    v47 = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v47;
    v48 = v6[9];
    v49 = (void *)(a1 + v48);
    v50 = (void *)(a2 + v48);
    v51 = type metadata accessor for DateInterval(0);
    v52 = *(_QWORD *)(v51 - 8);
    v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
    v54 = v53(v49, 1, v51);
    v55 = v53(v50, 1, v51);
    if (v54)
    {
      if (!v55)
      {
        (*(void (**)(void *, void *, uint64_t))(v52 + 16))(v49, v50, v51);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
LABEL_16:
        *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
        v61 = v6[11];
        v62 = a1 + v61;
        v63 = a2 + v61;
        v64 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 24))(v62, v63, v64);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v55)
      {
        (*(void (**)(void *, void *, uint64_t))(v52 + 24))(v49, v50, v51);
        goto LABEL_16;
      }
      (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
    }
    v60 = sub_100047110((uint64_t *)&unk_100827440);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
LABEL_7:
    v22 = sub_100047110(&qword_10081F218);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_17;
  }
  v11 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v12 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v12;
  v13 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v13;
  v125 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v125;
  v14 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v14;
  v15 = v6[9];
  __dst = (void *)(a1 + v15);
  v16 = (const void *)(a2 + v15);
  v17 = type metadata accessor for DateInterval(0);
  v123 = *(_QWORD *)(v17 - 8);
  v124 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v123 + 48);
  v18 = v11;
  v19 = v12;
  swift_bridgeObjectRetain(v13);
  v20 = swift_bridgeObjectRetain(v125);
  if (v124(v16, 1, v17, v20))
  {
    v21 = sub_100047110((uint64_t *)&unk_100827440);
    memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v123 + 16))(__dst, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v123 + 56))(__dst, 0, 1, v17);
  }
  *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
  v56 = v6[11];
  v57 = a1 + v56;
  v58 = a2 + v56;
  v59 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  v65 = a3[5];
  v66 = *(void **)(a2 + v65);
  v67 = *(void **)(a1 + v65);
  *(_QWORD *)(a1 + v65) = v66;
  v68 = v66;

  v69 = a3[6];
  v70 = *(_QWORD *)(a2 + v69);
  v71 = *(_QWORD *)(a1 + v69);
  *(_QWORD *)(a1 + v69) = v70;
  swift_retain(v70);
  swift_release(v71);
  v72 = a3[7];
  v73 = *(void **)(a2 + v72);
  v74 = *(void **)(a1 + v72);
  *(_QWORD *)(a1 + v72) = v73;
  v75 = v73;

  v76 = a3[8];
  v77 = *(void **)(a2 + v76);
  v78 = *(void **)(a1 + v76);
  *(_QWORD *)(a1 + v76) = v77;
  v79 = v77;

  v80 = a3[9];
  v81 = *(void **)(a2 + v80);
  v82 = *(void **)(a1 + v80);
  *(_QWORD *)(a1 + v80) = v81;
  v83 = v81;

  v84 = a3[10];
  v85 = a1 + v84;
  v86 = (uint64_t *)(a2 + v84);
  v87 = *(_QWORD *)(a1 + v84);
  v88 = *v86;
  *(_QWORD *)(a1 + v84) = *v86;
  swift_retain(v88);
  swift_release(v87);
  v89 = v86[1];
  v90 = *(_QWORD *)(v85 + 8);
  *(_QWORD *)(v85 + 8) = v89;
  swift_retain(v89);
  swift_release(v90);
  v91 = *(int *)(sub_100047110(&qword_10081F280) + 32);
  v92 = (void **)(v85 + v91);
  v93 = (void **)((char *)v86 + v91);
  v94 = type metadata accessor for MetricChartData(0);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v95 + 48);
  v97 = v96(v92, 1, v94);
  v98 = v96(v93, 1, v94);
  if (!v97)
  {
    if (!v98)
    {
      v112 = *v93;
      v113 = *v92;
      *v92 = *v93;
      v114 = v112;

      v115 = *(int *)(v94 + 20);
      v116 = (char *)v92 + v115;
      v117 = (char *)v93 + v115;
      v118 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 24))(v116, v117, v118);
      v119 = *(int *)(v94 + 24);
      v120 = *(void **)((char *)v93 + v119);
      v121 = *(void **)((char *)v92 + v119);
      *(void **)((char *)v92 + v119) = v120;
      v122 = v120;

      return a1;
    }
    sub_100011F54((uint64_t)v92, type metadata accessor for MetricChartData);
    goto LABEL_22;
  }
  if (v98)
  {
LABEL_22:
    v110 = sub_100047110(&qword_10081F090);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    return a1;
  }
  v99 = *v93;
  *v92 = *v93;
  v100 = *(int *)(v94 + 20);
  v101 = (char *)v92 + v100;
  v102 = (char *)v93 + v100;
  v103 = type metadata accessor for Date(0);
  v104 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16);
  v105 = v99;
  v104(v101, v102, v103);
  v106 = *(int *)(v94 + 24);
  v107 = *(void **)((char *)v93 + v106);
  *(void **)((char *)v92 + v106) = v107;
  v108 = *(void (**)(void **, _QWORD, uint64_t, uint64_t))(v95 + 56);
  v109 = v107;
  v108(v92, 0, 1, v94);
  return a1;
}

_OWORD *sub_1003AE310(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v6 = (int *)type metadata accessor for MetricDetailViewModel(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100047110(&qword_10081F218);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
    v10 = v6[9];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for DateInterval(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100047110((uint64_t *)&unk_100827440);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
    v16 = v6[11];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v20 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  *(_QWORD *)((char *)a1 + v20) = *(_QWORD *)((char *)a2 + v20);
  v21 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  v22 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (char *)a2 + v22;
  v25 = *(_QWORD *)((char *)a2 + v22);
  v26 = *(_QWORD *)((char *)a2 + v22 + 8);
  *v23 = v25;
  v23[1] = v26;
  v27 = *(int *)(sub_100047110(&qword_10081F280) + 32);
  v28 = (_QWORD *)((char *)v23 + v27);
  v29 = &v24[v27];
  v30 = type metadata accessor for MetricChartData(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = sub_100047110(&qword_10081F090);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    *v28 = *(_QWORD *)v29;
    v33 = *(int *)(v30 + 20);
    v34 = (char *)v28 + v33;
    v35 = &v29[v33];
    v36 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
    *(_QWORD *)((char *)v28 + *(int *)(v30 + 24)) = *(_QWORD *)&v29[*(int *)(v30 + 24)];
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  return a1;
}

uint64_t sub_1003AE590(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, int *);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void *, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void **v70;
  void **v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(void **, uint64_t, uint64_t);
  int v75;
  int v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;

  v6 = (int *)type metadata accessor for MetricDetailViewModel(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_100011F54(a1, type metadata accessor for MetricDetailViewModel);
      goto LABEL_7;
    }
    v19 = *(void **)a1;
    *(_QWORD *)a1 = *(_QWORD *)a2;

    v20 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

    v21 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRelease(v21, v22, v23, v24, v25, v26, v27, v28);
    v29 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRelease(v29, v30, v31, v32, v33, v34, v35, v36);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v37 = v6[9];
    v38 = (void *)(a1 + v37);
    v39 = (void *)(a2 + v37);
    v40 = type metadata accessor for DateInterval(0);
    v41 = *(_QWORD *)(v40 - 8);
    v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
    v43 = v42(v38, 1, v40);
    v44 = v42(v39, 1, v40);
    if (v43)
    {
      if (!v44)
      {
        (*(void (**)(void *, void *, uint64_t))(v41 + 32))(v38, v39, v40);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
LABEL_16:
        *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
        v50 = v6[11];
        v51 = a1 + v50;
        v52 = a2 + v50;
        v53 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 40))(v51, v52, v53);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v44)
      {
        (*(void (**)(void *, void *, uint64_t))(v41 + 40))(v38, v39, v40);
        goto LABEL_16;
      }
      (*(void (**)(void *, uint64_t))(v41 + 8))(v38, v40);
    }
    v49 = sub_100047110((uint64_t *)&unk_100827440);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
LABEL_7:
    v18 = sub_100047110(&qword_10081F218);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_17;
  }
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v12 = v6[9];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for DateInterval(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100047110((uint64_t *)&unk_100827440);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
  v45 = v6[11];
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  v54 = a3[5];
  v55 = *(void **)(a1 + v54);
  *(_QWORD *)(a1 + v54) = *(_QWORD *)(a2 + v54);

  v56 = a3[6];
  v57 = *(_QWORD *)(a1 + v56);
  *(_QWORD *)(a1 + v56) = *(_QWORD *)(a2 + v56);
  swift_release(v57);
  v58 = a3[7];
  v59 = *(void **)(a1 + v58);
  *(_QWORD *)(a1 + v58) = *(_QWORD *)(a2 + v58);

  v60 = a3[8];
  v61 = *(void **)(a1 + v60);
  *(_QWORD *)(a1 + v60) = *(_QWORD *)(a2 + v60);

  v62 = a3[9];
  v63 = *(void **)(a1 + v62);
  *(_QWORD *)(a1 + v62) = *(_QWORD *)(a2 + v62);

  v64 = a3[10];
  v65 = a1 + v64;
  v66 = a2 + v64;
  v67 = *(_QWORD *)(a1 + v64);
  *(_QWORD *)(a1 + v64) = *(_QWORD *)(a2 + v64);
  swift_release(v67);
  v68 = *(_QWORD *)(v65 + 8);
  *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
  swift_release(v68);
  v69 = *(int *)(sub_100047110(&qword_10081F280) + 32);
  v70 = (void **)(v65 + v69);
  v71 = (void **)(v66 + v69);
  v72 = type metadata accessor for MetricChartData(0);
  v73 = *(_QWORD *)(v72 - 8);
  v74 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v73 + 48);
  v75 = v74(v70, 1, v72);
  v76 = v74(v71, 1, v72);
  if (!v75)
  {
    if (!v76)
    {
      v83 = *v70;
      *v70 = *v71;

      v84 = *(int *)(v72 + 20);
      v85 = (char *)v70 + v84;
      v86 = (char *)v71 + v84;
      v87 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 40))(v85, v86, v87);
      v88 = *(int *)(v72 + 24);
      v89 = *(void **)((char *)v70 + v88);
      *(void **)((char *)v70 + v88) = *(void **)((char *)v71 + v88);

      return a1;
    }
    sub_100011F54((uint64_t)v70, type metadata accessor for MetricChartData);
    goto LABEL_22;
  }
  if (v76)
  {
LABEL_22:
    v81 = sub_100047110(&qword_10081F090);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    return a1;
  }
  *v70 = *v71;
  v77 = *(int *)(v72 + 20);
  v78 = (char *)v70 + v77;
  v79 = (char *)v71 + v77;
  v80 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
  *(void **)((char *)v70 + *(int *)(v72 + 24)) = *(void **)((char *)v71 + *(int *)(v72 + 24));
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
  return a1;
}

uint64_t sub_1003AEA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003AEA68);
}

uint64_t sub_1003AEA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_100047110(&qword_10081F218);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_100047110(&qword_10081F280);
    v10 = a1 + *(int *)(a3 + 40);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1003AEB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003AEB24);
}

uint64_t sub_1003AEB24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_100047110(&qword_10081F218);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = sub_100047110(&qword_10081F280);
    v12 = a1 + *(int *)(a4 + 40);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for MetricDetailWorkoutListView(uint64_t a1)
{
  uint64_t result;

  result = qword_100831110;
  if (!qword_100831110)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetricDetailWorkoutListView);
  return result;
}

void sub_1003AEC0C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  sub_1003AECB0(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    sub_1003AED04(319);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 7, v6, a1 + 16);
    }
  }
}

void sub_1003AECB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100831120)
  {
    v2 = type metadata accessor for MetricDetailViewModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100831120);
  }
}

void sub_1003AED04(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100826988)
  {
    v2 = sub_100007050(&qword_10081F090);
    v3 = type metadata accessor for Binding(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100826988);
  }
}

uint64_t sub_1003AED5C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B5E18, 1);
}

double sub_1003AED6C()
{
  double result;

  xmmword_10086A7C0 = 0uLL;
  result = 10.0;
  xmmword_10086A7D0 = xmmword_100622F50;
  return result;
}

double sub_1003AED88()
{
  double result;

  result = 10.0;
  xmmword_10086A7E0 = xmmword_100623E10;
  *(_OWORD *)&qword_10086A7F0 = xmmword_100623E10;
  return result;
}

uint64_t sub_1003AEDA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  NSString v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  __n128 v57;
  uint64_t KeyPath;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t OpaqueTypeConformance2;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  CHWorkoutDetailHeartRateTableViewCell *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  SEL v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  SEL v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  uint64_t v102;
  _BYTE v103[12];
  int v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  CHWorkoutDetailHeartRateTableViewCell *v111;
  uint64_t *v112;
  _BYTE *v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;

  v4 = sub_100047110(&qword_100831170);
  __chkstk_darwin(v4);
  v6 = &v103[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for MetricDetailWorkoutListView(0);
  v119 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v120 = v8;
  v121 = &v103[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100047110(&qword_100831178);
  __chkstk_darwin(v9);
  v11 = &v103[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = (uint64_t *)&v103[-v13];
  v15 = type metadata accessor for Font.Leading(0);
  v117 = *(_QWORD *)(v15 - 8);
  v118 = v15;
  __chkstk_darwin(v15);
  v116 = &v103[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v17);
  v19 = &v103[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v115 = type metadata accessor for Font.TextStyle(0);
  v20 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v22 = &v103[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = sub_100047110(&qword_10081F218);
  __chkstk_darwin(v23);
  v25 = &v103[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v122 = a1;
  sub_100021CC0(a1, (uint64_t)v25, &qword_10081F218);
  v26 = type metadata accessor for MetricDetailViewModel(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26) == 1)
  {
    sub_10001BE90((uint64_t)v25, &qword_10081F218);
LABEL_13:
    v102 = sub_100047110(&qword_100831180);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(a2, 1, 1, v102);
  }
  v27 = *((_QWORD *)v25 + 3);
  swift_bridgeObjectRetain(v27);
  sub_100011F54((uint64_t)v25, type metadata accessor for MetricDetailViewModel);
  if ((unint64_t)v27 >> 62)
  {
    if (v27 < 0)
      v93 = v27;
    else
      v93 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v27);
    v94 = _CocoaArrayWrapper.endIndex.getter(v93);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v27, v95, v96, v97, v98, v99, v100, v101);
    if (v94)
      goto LABEL_5;
LABEL_12:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v27, v28, v29, v30, v31, v32, v33, v34);
    goto LABEL_13;
  }
  if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_12;
LABEL_5:
  v112 = v14;
  v113 = v11;
  v114 = a2;
  v35 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v36 = String._bridgeToObjectiveC()();
  v37 = objc_msgSend(v35, "localizedStringForKey:value:table:", v36, 0, 0);

  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v40 = v39;

  v124 = v38;
  v125 = v40;
  v41 = sub_100038CA0();
  v42 = Text.init<A>(_:)(&v124, &type metadata for String, v41);
  v109 = v43;
  v110 = v42;
  v108 = v44;
  v111 = v45;
  if (qword_10081DC70 != -1)
    v42 = swift_once(&qword_10081DC70, sub_1003AED6C);
  v107 = xmmword_10086A7C0;
  v105 = *((_QWORD *)&xmmword_10086A7D0 + 1);
  v106 = xmmword_10086A7D0;
  v104 = static Edge.Set.all.getter(v42);
  v46 = v115;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v20 + 104))(v22, enum case for Font.TextStyle.title2(_:), v115);
  v47 = enum case for Font.Design.rounded(_:);
  v48 = type metadata accessor for Font.Design(0);
  v49 = *(_QWORD *)(v48 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v49 + 104))(v19, v47, v48);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v19, 0, 1, v48);
  v50 = static Font.system(_:design:weight:)(v22, v19, 0, 1);
  sub_10001BE90((uint64_t)v19, &qword_10081F2F8);
  v51.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v20 + 8))(v22, v46);
  static Font.Weight.bold.getter(v51);
  v52 = Font.weight(_:)(v50);
  v53 = swift_release(v50);
  v55 = v116;
  v54 = v117;
  v56 = v118;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v117 + 104))(v116, enum case for Font.Leading.tight(_:), v118, v53);
  v115 = Font.leading(_:)(v55, v52);
  v57 = swift_release(v52);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v54 + 8))(v55, v56, v57);
  KeyPath = swift_getKeyPath(&unk_100639A50);
  v63 = static HorizontalAlignment.center.getter(KeyPath, v59, v60, v61, v62);
  v64 = (uint64_t)v112;
  *v112 = v63;
  *(_QWORD *)(v64 + 8) = 0x4024000000000000;
  *(_BYTE *)(v64 + 16) = 0;
  v118 = v64 + *(int *)(sub_100047110(&qword_100831188) + 44);
  v123 = v27;
  v65 = swift_getKeyPath(&unk_100639A88);
  v66 = v121;
  sub_10004F8C8(v122, (uint64_t)v121, type metadata accessor for MetricDetailWorkoutListView);
  v67 = *(unsigned __int8 *)(v119 + 80);
  v68 = (v67 + 16) & ~v67;
  v69 = swift_allocObject(&unk_10079C630, v68 + v120, v67 | 7);
  sub_100047C88((uint64_t)v66, v69 + v68, type metadata accessor for MetricDetailWorkoutListView);
  v70 = sub_100047110((uint64_t *)&unk_100827430);
  v71 = sub_100047110(&qword_100831190);
  v72 = sub_100028384(&qword_100831198, (uint64_t *)&unk_100827430, (uint64_t)&protocol conformance descriptor for [A]);
  v73 = sub_1000083D8((unint64_t *)&qword_100828330, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v74 = sub_100007050(&qword_1008311A0);
  v75 = sub_1003AFC44();
  v124 = v74;
  v125 = v75;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v124, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  ForEach<>.init(_:id:content:)(&v123, v65, sub_1003AFBF8, v69, v70, v71, v72, v73, OpaqueTypeConformance2);
  v77 = (uint64_t)v113;
  sub_100021CC0(v64, (uint64_t)v113, &qword_100831178);
  v79 = v109;
  v78 = v110;
  *(_QWORD *)v6 = v110;
  *((_QWORD *)v6 + 1) = v79;
  LOBYTE(v72) = v108 & 1;
  v6[16] = v108 & 1;
  v80 = v111;
  *((_QWORD *)v6 + 3) = v111;
  v6[32] = v104;
  *(_OWORD *)(v6 + 40) = v107;
  v81 = v105;
  *((_QWORD *)v6 + 7) = v106;
  *((_QWORD *)v6 + 8) = v81;
  v6[72] = 0;
  v82 = v115;
  *((_QWORD *)v6 + 10) = KeyPath;
  *((_QWORD *)v6 + 11) = v82;
  v83 = sub_100047110(&qword_1008311C0);
  sub_100021CC0(v77, (uint64_t)&v6[*(int *)(v83 + 48)], &qword_100831178);
  sub_1000E439C(v78, v79, v72);
  swift_bridgeObjectRetain(v80);
  swift_retain(KeyPath);
  swift_retain(v82);
  sub_10001BE90(v64, &qword_100831178);
  sub_10001BE90(v77, &qword_100831178);
  sub_1000E4458(v78, v79, v72);
  swift_release(v82);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v80, v84, v85, v86, v87, v88, v89, v90);
  v91 = sub_100047110(&qword_100831180);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v6, 0, 1, v91);
  return sub_1003AFD4C((uint64_t)v6, v114);
}

uint64_t sub_1003AF514@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  unint64_t v57;
  id v58;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v71 = a3;
  v5 = (int *)type metadata accessor for MetricDetailWorkoutListView(0);
  v67 = *((_QWORD *)v5 - 1);
  __chkstk_darwin(v5);
  v68 = v6;
  v70 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v62);
  v8 = (__int128 *)((char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = sub_100047110(&qword_100825F60);
  __chkstk_darwin(v63);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WorkoutItemView(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100047110(&qword_1008311B8);
  __chkstk_darwin(v61);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100047110(&qword_1008311A0);
  __chkstk_darwin(v65);
  v66 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  v18 = v5[6];
  v19 = *(void **)(a2 + v5[5]);
  v20 = *(void **)(a2 + v5[7]);
  v21 = *(void **)(a2 + v5[8]);
  v69 = a2;
  v22 = *(_QWORD *)(a2 + v18);
  v23 = v17;
  v24 = v19;
  v25 = v20;
  v26 = v21;
  swift_retain(v22);
  v64 = v23;
  sub_10048195C(v23, v24, v25, v26, 1, v22, (uint64_t)v13);
  if (qword_10081DC78 != -1)
    v27 = swift_once(&qword_10081DC78, sub_1003AED88);
  v60 = xmmword_10086A7E0;
  v28 = qword_10086A7F0;
  v29 = unk_10086A7F8;
  v30 = static Edge.Set.all.getter(v27);
  sub_10004F8C8((uint64_t)v13, (uint64_t)v15, type metadata accessor for WorkoutItemView);
  v31 = &v15[*(int *)(v61 + 36)];
  *v31 = v30;
  *(_OWORD *)(v31 + 8) = v60;
  *((_QWORD *)v31 + 3) = v28;
  *((_QWORD *)v31 + 4) = v29;
  v31[40] = 0;
  sub_100011F54((uint64_t)v13, type metadata accessor for WorkoutItemView);
  v32 = (char *)v8 + *(int *)(v62 + 20);
  v33 = enum case for RoundedCornerStyle.continuous(_:);
  v34 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v32, v33, v34);
  __asm { FMOV            V0.2D, #14.0 }
  *v8 = _Q0;
  v40 = sub_100032490();
  v41 = Color.init(uiColor:)(v40);
  sub_10004F8C8((uint64_t)v8, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v42 = v63;
  *(_QWORD *)&v10[*(int *)(v63 + 52)] = v41;
  *(_WORD *)&v10[*(int *)(v42 + 56)] = 256;
  v43 = sub_100011F54((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v44 = static Alignment.center.getter(v43);
  v46 = v45;
  v48 = v65;
  v47 = (uint64_t)v66;
  v49 = (uint64_t)&v66[*(int *)(v65 + 36)];
  sub_100021CC0((uint64_t)v10, v49, &qword_100825F60);
  v50 = (uint64_t *)(v49 + *(int *)(sub_100047110(&qword_100826B70) + 36));
  *v50 = v44;
  v50[1] = v46;
  sub_100021CC0((uint64_t)v15, v47, &qword_1008311B8);
  sub_10001BE90((uint64_t)v10, &qword_100825F60);
  sub_10001BE90((uint64_t)v15, &qword_1008311B8);
  v51 = v70;
  sub_10004F8C8(v69, v70, type metadata accessor for MetricDetailWorkoutListView);
  v52 = *(unsigned __int8 *)(v67 + 80);
  v53 = (v52 + 16) & ~v52;
  v54 = (v68 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  v55 = swift_allocObject(&unk_10079C658, v54 + 8, v52 | 7);
  sub_100047C88(v51, v55 + v53, type metadata accessor for MetricDetailWorkoutListView);
  v56 = v64;
  *(_QWORD *)(v55 + v54) = v64;
  v57 = sub_1003AFC44();
  v58 = v56;
  View.onTapGesture(count:perform:)(1, sub_1003AFF8C, v55, v48, v57);
  swift_release(v55);
  return sub_10001BE90(v47, &qword_1008311A0);
}

void sub_1003AF974(uint64_t a1, void *a2)
{
  id v3;

  type metadata accessor for MetricDetailWorkoutListView(0);
  v3 = a2;
  sub_1003AFFCC(v3);

}

uint64_t sub_1003AF9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = sub_100047110(&qword_100831168);
  return sub_1003AEDA0(v2, a2 + *(int *)(v4 + 44));
}

const char *sub_1003AFA0C()
{
  return "UUID";
}

uint64_t sub_1003AFA1C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v1 = (int *)type metadata accessor for MetricDetailWorkoutListView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = type metadata accessor for MetricDetailViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 1, v7))
  {

    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v6 + 16), v8, v9, v10, v11, v12, v13, v14);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v6 + 24), v15, v16, v17, v18, v19, v20, v21);
    v22 = v6 + *(int *)(v7 + 36);
    v23 = type metadata accessor for DateInterval(0);
    v24 = *(_QWORD *)(v23 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    v25 = v6 + *(int *)(v7 + 44);
    v26 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  }

  swift_release(*(_QWORD *)(v6 + v1[6]));
  v27 = (_QWORD *)(v6 + v1[10]);
  swift_release(*v27);
  swift_release(v27[1]);
  v28 = (id *)((char *)v27 + *(int *)(sub_100047110(&qword_10081F280) + 32));
  v29 = type metadata accessor for MetricChartData(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v28, 1, v29))
  {

    v30 = (char *)v28 + *(int *)(v29 + 20);
    v31 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);

  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1003AFBF8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MetricDetailWorkoutListView(0) - 8) + 80);
  return sub_1003AF514(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_1003AFC44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008311A8;
  if (!qword_1008311A8)
  {
    v1 = sub_100007050(&qword_1008311A0);
    sub_1003AFCC8();
    sub_100028384(&qword_100826B68, &qword_100826B70, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008311A8);
  }
  return result;
}

unint64_t sub_1003AFCC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008311B0;
  if (!qword_1008311B0)
  {
    v1 = sub_100007050(&qword_1008311B8);
    sub_1000083D8(&qword_10082AF78, type metadata accessor for WorkoutItemView, (uint64_t)&unk_10063EAE8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008311B0);
  }
  return result;
}

uint64_t sub_1003AFD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100831170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003AFD94()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;

  v1 = (int *)type metadata accessor for MetricDetailWorkoutListView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = type metadata accessor for MetricDetailViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 1, v7))
  {

    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v6 + 16), v8, v9, v10, v11, v12, v13, v14);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v6 + 24), v15, v16, v17, v18, v19, v20, v21);
    v22 = v6 + *(int *)(v7 + 36);
    v23 = type metadata accessor for DateInterval(0);
    v24 = *(_QWORD *)(v23 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    v25 = v6 + *(int *)(v7 + 44);
    v26 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  }

  swift_release(*(_QWORD *)(v6 + v1[6]));
  v27 = (_QWORD *)(v6 + v1[10]);
  swift_release(*v27);
  swift_release(v27[1]);
  v28 = (id *)((char *)v27 + *(int *)(sub_100047110(&qword_10081F280) + 32));
  v29 = type metadata accessor for MetricChartData(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v28, 1, v29))
  {

    v30 = (char *)v28 + *(int *)(v29 + 20);
    v31 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);

  }
  v32 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = v32 + 8;

  return swift_deallocObject(v0, v33, v3 | 7);
}

void sub_1003AFF8C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for MetricDetailWorkoutListView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1003AF974(v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1003AFFCC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  int v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  void *v18;
  _BYTE v19[40];
  _QWORD v20[5];

  v2 = sub_100047110((uint64_t *)&unk_100828380);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FitnessPlusStackViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10027D46C();
  v20[3] = v9;
  v20[4] = sub_1000083D8(&qword_100822158, (uint64_t (*)(uint64_t))sub_10027D46C, (uint64_t)"d{\a");
  v20[0] = a1;
  sub_1000252E0((uint64_t)v20, (uint64_t)v19);
  v10 = a1;
  v11 = sub_100047110((uint64_t *)&unk_10082E5B0);
  if (swift_dynamicCast(&v18, v19, v11, v9, 6))
  {
    v12 = v18;
    sub_100314714(v18, 0, 0, 0);
LABEL_5:

    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v20);
  }
  sub_1000252E0((uint64_t)v20, (uint64_t)v19);
  v13 = type metadata accessor for MindfulnessSessionViewModel(0);
  if ((swift_dynamicCast(&v18, v19, v11, v13, 6) & 1) != 0)
  {
    v12 = v18;
    sub_100314B5C(v18);
    goto LABEL_5;
  }
  sub_1000252E0((uint64_t)v20, (uint64_t)v19);
  v15 = swift_dynamicCast(v4, v19, v11, v5, 6);
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  if (v15)
  {
    v16(v4, 0, 1, v5);
    sub_100047C88((uint64_t)v4, (uint64_t)v8, type metadata accessor for FitnessPlusStackViewModel);
    sub_100314C3C((uint64_t)v8);
    sub_100011F54((uint64_t)v8, type metadata accessor for FitnessPlusStackViewModel);
  }
  else
  {
    v16(v4, 1, 1, v5);
    sub_10001BE90((uint64_t)v4, (uint64_t *)&unk_100828380);
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v20);
}

uint64_t sub_1003B01E8()
{
  return sub_100028384(&qword_1008311C8, &qword_1008311D0, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

void sub_1003B0214(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  void *v7;
  __int128 v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char *v23;
  char *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;

  KeyPath = swift_getKeyPath(&unk_100639AE0);
  v5 = swift_getKeyPath(&unk_100639B08);
  static Published.subscript.getter(&v35, a2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = (CHWorkoutDetailHeartRateTableViewCell *)v35;
  v7 = *(void **)a1;
  v8 = *(_OWORD *)(a1 + 8);
  v34 = *(_OWORD *)(a1 + 24);
  v35 = v8;
  v33 = *(_QWORD *)(a1 + 40);
  v9 = v7;
  sub_100133118((uint64_t)&v35);
  sub_100133118((uint64_t)&v34);
  sub_100126C98(&v33);
  sub_1003B038C((uint64_t)v6, (uint64_t *)a1);
  v11 = v10;

  sub_100128D54((uint64_t)&v35);
  sub_100128D54((uint64_t)&v34);
  sub_1000478F4(&v33);
  swift_bridgeObjectRelease(v6, v12, v13, v14, v15, v16, v17, v18);
  v19 = swift_getKeyPath(&unk_100639AE0);
  v20 = swift_getKeyPath(&unk_100639B08);
  v32 = v11;
  swift_retain(a2);
  static Published.subscript.setter(&v32, a2, v19, v20);
  v21 = objc_msgSend(v9, "identifier");
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  sub_1003B0634(v22, v24);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v24, v25, v26, v27, v28, v29, v30, v31);
}

void sub_1003B038C(uint64_t a1, uint64_t *a2)
{
  unint64_t v2;
  unint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  unint64_t v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  uint64_t v24;
  id v25;
  void *v26;
  char *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  BOOL v34;
  uint64_t v35;
  const char *v36;
  BOOL v37;
  _QWORD *v38;
  uint64_t v39;
  void *v40;
  BOOL v41;
  uint64_t v42;
  void **v43;
  const char **v44;
  void *v45;
  BOOL v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = 0;
    v51 = a1 + 32;
    v5 = &_swiftEmptyArrayStorage;
    v50 = *(_QWORD *)(a1 + 16);
    do
    {
      if (v4 <= v2)
        v6 = v2;
      else
        v6 = v4;
      v52 = v5;
      v53 = v6;
      while (1)
      {
        if (v4 == v53)
        {
          __break(1u);
          return;
        }
        v21 = v51 + 48 * v4;
        v22 = *(void **)v21;
        v23 = *(CHWorkoutDetailHeartRateTableViewCell **)(v21 + 16);
        v54 = *(_QWORD *)(v21 + 24);
        v55 = *(_QWORD *)(v21 + 8);
        v56 = *(_OWORD *)(v21 + 32);
        ++v4;
        sub_100139CE8();
        v24 = *a2;
        v25 = v22;
        swift_bridgeObjectRetain(v23);
        swift_bridgeObjectRetain(v56);
        swift_bridgeObjectRetain(*((_QWORD *)&v56 + 1));
        if ((static NSObject.== infix(_:_:)(v24, v25) & 1) == 0)
          break;
        v32 = a2[1];
        v33 = (CHWorkoutDetailHeartRateTableViewCell *)a2[2];
        v34 = v32 == v55 && v33 == v23;
        if (!v34 && (_stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, v55, v23, 0) & 1) == 0)
          break;
        v35 = a2[3];
        v36 = (const char *)a2[4];
        v37 = v35 == v54 && v36 == (const char *)v56;
        if (!v37 && (_stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, v54, v56, 0) & 1) == 0)
          break;
        v38 = (_QWORD *)a2[5];
        v39 = v38[2];
        if (v39 != *(_QWORD *)(*((_QWORD *)&v56 + 1) + 16))
          break;
        if (v39 && v38 != *((_QWORD **)&v56 + 1))
        {
          v40 = (void *)v38[4];
          v36 = (const char *)v38[5];
          v26 = *(void **)(*((_QWORD *)&v56 + 1) + 32);
          v27 = *(char **)(*((_QWORD *)&v56 + 1) + 40);
          v41 = v40 == v26 && v36 == v27;
          if (!v41 && (_stringCompareWithSmolCheck(_:_:expecting:)(v40, v36, v26, v27, 0) & 1) == 0)
            break;
          v42 = v39 - 1;
          if (v42)
          {
            v43 = (void **)(*((_QWORD *)&v56 + 1) + 56);
            v44 = (const char **)(v38 + 7);
            do
            {
              v45 = (void *)*(v44 - 1);
              v36 = *v44;
              v26 = *(v43 - 1);
              v27 = (char *)*v43;
              v46 = v45 == v26 && v36 == v27;
              if (!v46 && (_stringCompareWithSmolCheck(_:_:expecting:)(v45, v36, v26, v27, 0) & 1) == 0)
                goto LABEL_36;
              v43 += 2;
              v44 += 2;
            }
            while (--v42);
          }
        }
        swift_bridgeObjectRelease(v23, v36, v26, v27, v28, v29, v30, v31);

        swift_bridgeObjectRelease(*((CHWorkoutDetailHeartRateTableViewCell **)&v56 + 1), v7, v8, v9, v10, v11, v12, v13);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v56, v14, v15, v16, v17, v18, v19, v20);
        if (v4 == v50)
          return;
      }
LABEL_36:
      v5 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
      {
        sub_100121B88(0, *(_QWORD *)v52->cellPadding + 1, 1);
        v5 = v52;
      }
      v48 = *(_QWORD *)v5->cellPadding;
      v47 = *(_QWORD *)v5->cellInset;
      if (v48 >= v47 >> 1)
      {
        sub_100121B88(v47 > 1, v48 + 1, 1);
        v5 = v52;
      }
      *(_QWORD *)v5->cellPadding = v48 + 1;
      v49 = (char *)v5 + 48 * v48;
      *((_QWORD *)v49 + 4) = v25;
      *((_QWORD *)v49 + 5) = v55;
      *((_QWORD *)v49 + 6) = v23;
      *((_QWORD *)v49 + 7) = v54;
      *((_OWORD *)v49 + 4) = v56;
      v2 = v50;
    }
    while (v4 != v50);
  }
}

void sub_1003B0634(uint64_t a1, const char *a2)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  uint64_t v15;
  const char **v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  BOOL v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  uint64_t v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  unint64_t v52;
  uint64_t v53;
  _OWORD v54[2];
  _QWORD v55[4];

  v4 = (void *)objc_opt_self(NSUserDefaults);
  v5 = objc_msgSend(v4, "standardUserDefaults");
  v6 = objc_msgSend(v5, "objectForKey:", CFSTR("CHRemovedSuggestedContactsAsDestinationsKey"));

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v54, v6);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v54, 0, sizeof(v54));
  }
  sub_100025D58((uint64_t)v54, (uint64_t)v55);
  if (!v55[3])
  {
    sub_1000F996C((uint64_t)v55);
    goto LABEL_20;
  }
  v7 = sub_100047110((uint64_t *)&unk_10081E160);
  if ((swift_dynamicCast(&v53, v55, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
  {
LABEL_20:
    v37 = objc_msgSend(v4, "standardUserDefaults");
    v38 = sub_100047110(&qword_100820020);
    v39 = swift_allocObject(v38, 48, 7);
    *(_OWORD *)(v39 + 16) = xmmword_100622F90;
    *(_QWORD *)(v39 + 32) = a1;
    *(_QWORD *)(v39 + 40) = a2;
    v55[0] = v39;
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CHRemovedSuggestedContactsAsDestinationsKey"));
    v42 = v41;
    swift_bridgeObjectRetain(a2);
    v43 = sub_100047110((uint64_t *)&unk_10081E160);
    NSUserDefaults.set<A>(_:for:)(v55, v40, v42, v43);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v39, v44, v45, v46, v47, v48, v49, v50);

    v36 = v42;
    goto LABEL_21;
  }
  v14 = (CHWorkoutDetailHeartRateTableViewCell *)v53;
  v15 = *(_QWORD *)(v53 + 16);
  if (v15)
  {
    v16 = (const char **)(v53 + 40);
    v17 = *(_QWORD *)(v53 + 16);
    while (1)
    {
      v18 = (uint64_t)*(v16 - 1);
      v19 = *v16;
      v20 = v18 == a1 && v19 == a2;
      if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, a1, a2, 0) & 1) != 0)
        break;
      v16 += 2;
      if (!--v17)
        goto LABEL_14;
    }
    v36 = v14;
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRetain(a2);
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013F75C(0, v15 + 1, 1, v14);
    v22 = *(_QWORD *)v14->cellPadding;
    v21 = *(_QWORD *)v14->cellInset;
    v23 = v22 + 1;
    if (v22 >= v21 >> 1)
    {
      v52 = v22 + 1;
      v51 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013F75C((_QWORD *)(v21 > 1), v22 + 1, 1, v14);
      v23 = v22 + 1;
      v14 = v51;
    }
    *(_QWORD *)v14->cellPadding = v23;
    v24 = (char *)v14 + 16 * v22;
    *((_QWORD *)v24 + 4) = a1;
    *((_QWORD *)v24 + 5) = a2;
    v25 = objc_msgSend(v4, "standardUserDefaults", v52);
    v55[0] = v14;
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CHRemovedSuggestedContactsAsDestinationsKey"));
    v28 = v27;
    NSUserDefaults.set<A>(_:for:)(v55, v26, v27, v7);
    swift_bridgeObjectRelease(v14, v29, v30, v31, v32, v33, v34, v35);

    v36 = v28;
  }
LABEL_21:
  swift_bridgeObjectRelease(v36, v19, v8, v9, v10, v11, v12, v13);
}

void destroy for CadenceTargetValue(uint64_t a1)
{

}

uint64_t initializeWithCopy for CadenceTargetValue(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(void **)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for CadenceTargetValue(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = (void *)a2[2];
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v7 = v5;

  v8 = (void *)a2[3];
  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  v10 = v8;

  return a1;
}

uint64_t assignWithTake for CadenceTargetValue(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);

  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for CadenceTargetValue()
{
  return &type metadata for CadenceTargetValue;
}

uint64_t sub_1003B0A18(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B5E78, 1);
}

uint64_t sub_1003B0A28()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 16);
  v2 = sub_1003B0AF0(*(_QWORD *)v0, *(unsigned __int8 *)(v0 + 8));
  v4 = v3;
  v5 = objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "localizedShortCadenceUnitStringForActivityType:", objc_msgSend(v1, "identifier"));
  if (v5)
  {
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  return MetricText.init(value:unit:description:stale:includesSlashes:)(v2, v4, v7, v9, 0, 0, 0, 0);
}

uint64_t sub_1003B0AF0(uint64_t a1, int a2)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a2;
  v35 = a1;
  v2 = type metadata accessor for LocalizationFeature(0);
  v36 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NumberFormatStyleConfiguration.Precision(0, v3);
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  __chkstk_darwin(v6);
  v38 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_10082E238);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v35 - v20;
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v35 - v25;
  if ((v41 & 1) != 0)
  {
    v33 = v36;
    v32 = v37;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v36 + 104))(v5, enum case for LocalizationFeature.workout(_:), v37, v24);
    v31 = static Localization.workoutUILocalizedString(_:feature:)(0x4E5F43495254454DLL, 0xEE0045554C41564FLL, v5);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v32);
  }
  else
  {
    v42 = v35;
    static Locale.autoupdatingCurrent.getter(v23);
    v27 = sub_10030A42C();
    FloatingPointFormatStyle.init(locale:)(v14, &type metadata for Double, v27);
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for FloatingPointRoundingRule.down(_:), v8);
    FloatingPointFormatStyle.rounded(rule:increment:)(v11, 0, 1, v15);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v28 = *(void (**)(char *, uint64_t))(v16 + 8);
    v28(v18, v15);
    v29 = v38;
    static NumberFormatStyleConfiguration.Precision.fractionLength(_:)(0);
    FloatingPointFormatStyle.precision(_:)(v29, v15);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v40);
    v28(v21, v15);
    v30 = sub_1003B0DFC();
    BinaryFloatingPoint.formatted<A>(_:)(&v43, v26, &type metadata for Double, v15, v27, v30);
    v28(v26, v15);
    return v43;
  }
  return v31;
}

unint64_t sub_1003B0DFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E260;
  if (!qword_10082E260)
  {
    v1 = sub_100007050(&qword_10082E238);
    result = swift_getWitnessTable(&protocol conformance descriptor for FloatingPointFormatStyle<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10082E260);
  }
  return result;
}

id sub_1003B0EE0()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v0 = objc_msgSend(objc_allocWithZone((Class)ARUIMetricColors), "init");
  v1 = sub_1003B17AC(0x9Bu, 0x6Eu, 0xFAu);
  objc_msgSend(v0, "setNonGradientTextColor:", v1);

  v2 = sub_1003B17AC(0x16u, 0x10u, 0x28u);
  objc_msgSend(v0, "setGradientDarkColor:", v2);

  v3 = sub_1003B17AC(0x2Fu, 0x21u, 0x5Au);
  objc_msgSend(v0, "setGradientLightColor:", v3);

  v4 = sub_1003B17AC(0x9Bu, 0x6Eu, 0xFAu);
  objc_msgSend(v0, "setAdjustmentButtonBackgroundColor:", v4);

  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "whiteColor");
  objc_msgSend(v0, "setValueDisplayColor:", v6);

  v7 = objc_msgSend(v5, "blackColor");
  objc_msgSend(v0, "setButtonTextColor:", v7);

  v8 = objc_msgSend(v5, "blackColor");
  objc_msgSend(v0, "setButtonDisabledTextColor:", v8);

  return v0;
}

id sub_1003B1094()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v0 = objc_msgSend(objc_allocWithZone((Class)ARUIMetricColors), "init");
  v1 = sub_1003B17AC(0, 0xFFu, 0xA8u);
  objc_msgSend(v0, "setNonGradientTextColor:", v1);

  v2 = sub_1003B17AC(2u, 0x23u, 0x1Cu);
  objc_msgSend(v0, "setGradientDarkColor:", v2);

  v3 = sub_1003B17AC(4u, 0x33u, 0x23u);
  objc_msgSend(v0, "setGradientLightColor:", v3);

  v4 = sub_1003B17AC(0, 0xFFu, 0xA8u);
  objc_msgSend(v0, "setAdjustmentButtonBackgroundColor:", v4);

  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "whiteColor");
  objc_msgSend(v0, "setValueDisplayColor:", v6);

  v7 = objc_msgSend(v5, "blackColor");
  objc_msgSend(v0, "setButtonTextColor:", v7);

  v8 = objc_msgSend(v5, "blackColor");
  objc_msgSend(v0, "setButtonDisabledTextColor:", v8);

  return v0;
}

id sub_1003B1248()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v0 = objc_msgSend(objc_allocWithZone((Class)ARUIMetricColors), "init");
  v1 = sub_1003B17AC(0x3Au, 0xE9u, 0xE6u);
  objc_msgSend(v0, "setNonGradientTextColor:", v1);

  v2 = sub_1003B17AC(0, 0x25u, 0x22u);
  objc_msgSend(v0, "setGradientDarkColor:", v2);

  v3 = sub_1003B17AC(0, 0x3Du, 0x39u);
  objc_msgSend(v0, "setGradientLightColor:", v3);

  v4 = sub_1003B17AC(0x3Au, 0xE9u, 0xE6u);
  objc_msgSend(v0, "setAdjustmentButtonBackgroundColor:", v4);

  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "whiteColor");
  objc_msgSend(v0, "setValueDisplayColor:", v6);

  v7 = objc_msgSend(v5, "blackColor");
  objc_msgSend(v0, "setButtonTextColor:", v7);

  v8 = objc_msgSend(v5, "blackColor");
  objc_msgSend(v0, "setButtonDisabledTextColor:", v8);

  return v0;
}

id sub_1003B13FC(id a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  __n128 v12;
  int v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id result;
  uint64_t v20;

  v2 = type metadata accessor for ConfigurationType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, "workoutActivityType") == (id)84)
  {
    a1 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "diveColors");
    if (a1)
      return a1;
    __break(1u);
  }
  v6 = objc_msgSend(a1, "metadata");
  if (v6)
  {
    v7 = v6;
    v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v8 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  v9 = type metadata accessor for BlastDoorConfigurationValidator(0);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v10 = BlastDoorConfigurationValidator.init()();
  v11 = (void *)static WorkoutConfiguration.deserialize(from:requiringOccurrence:validator:)(v8, 0, v10);
  swift_release(v10);
  v12 = swift_bridgeObjectRelease(v8);
  if (v11)
  {
    dispatch thunk of WorkoutConfiguration.type.getter(v12);
    v13 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v13 == enum case for ConfigurationType.goal(_:))
    {
      v14 = type metadata accessor for GoalWorkoutConfiguration(0);
      if (swift_dynamicCastClass(v11, v14))
      {
        v15 = v11;
        v16 = (void *)GoalWorkoutConfiguration.goal.getter();
        v17 = objc_msgSend(v16, "goalTypeIdentifier");

        v18 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "metricColorsForGoalTypeIdentifier:", v17);
        return v18;
      }
      result = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "metricColorsForGoalTypeIdentifier:", objc_msgSend(a1, "_goalType"));
    }
    else if (v13 == enum case for ConfigurationType.interval(_:))
    {
      result = sub_1003B0EE0();
    }
    else if (v13 == enum case for ConfigurationType.race(_:))
    {
      result = sub_1003B1094();
    }
    else if (v13 == enum case for ConfigurationType.pacer(_:))
    {
      result = sub_1003B1248();
    }
    else
    {
      if (v13 != enum case for ConfigurationType.multisport(_:))
      {
        a1 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "metricColorsForGoalTypeIdentifier:", objc_msgSend(a1, "_goalType"));

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        return a1;
      }
      result = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "noMetricColors");
      if (!result)
      {
        __break(1u);
        return result;
      }
    }
    a1 = result;

    return a1;
  }
  if (objc_msgSend(a1, "isIntervalWorkout", v12.n128_f64[0]))
    return sub_1003B0EE0();
  else
    return objc_msgSend((id)objc_opt_self(ARUIMetricColors), "metricColorsForGoalTypeIdentifier:", objc_msgSend(a1, "_goalType"));
}

id sub_1003B17AC(unsigned int a1, unsigned int a2, unsigned int a3)
{
  return (id)objc_claimAutoreleasedReturnValue(+[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", (double)a1 / 255.0, (double)a2 / 255.0, (double)a3 / 255.0, 1.0));
}

id sub_1003B17F4()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v0 = objc_msgSend(objc_allocWithZone((Class)ARUIMetricColors), "init");
  v1 = sub_1003B17AC(0, 0x39u, 0x38u);
  objc_msgSend(v0, "setNonGradientTextColor:", v1);

  v2 = sub_1003B17AC(0, 0x22u, 0x22u);
  objc_msgSend(v0, "setGradientDarkColor:", v2);

  v3 = sub_1003B17AC(0, 0x39u, 0x38u);
  objc_msgSend(v0, "setGradientLightColor:", v3);

  v4 = sub_1003B17AC(0, 0x22u, 0x22u);
  objc_msgSend(v0, "setAdjustmentButtonBackgroundColor:", v4);

  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "whiteColor");
  objc_msgSend(v0, "setValueDisplayColor:", v6);

  v7 = objc_msgSend(v5, "blackColor");
  objc_msgSend(v0, "setButtonTextColor:", v7);

  v8 = objc_msgSend(v5, "blackColor");
  objc_msgSend(v0, "setButtonDisabledTextColor:", v8);

  return v0;
}

id sub_1003B19A8()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v0 = objc_msgSend(objc_allocWithZone((Class)ARUIMetricColors), "init");
  v1 = sub_1003B17AC(0xEDu, 0x72u, 0x5Bu);
  objc_msgSend(v0, "setNonGradientTextColor:", v1);

  v2 = sub_1003B17AC(0x33u, 0x15u, 0x11u);
  objc_msgSend(v0, "setGradientDarkColor:", v2);

  v3 = sub_1003B17AC(0x33u, 0x15u, 0x11u);
  objc_msgSend(v0, "setGradientLightColor:", v3);

  v4 = sub_1003B17AC(0, 0xFFu, 0xA8u);
  objc_msgSend(v0, "setAdjustmentButtonBackgroundColor:", v4);

  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "whiteColor");
  objc_msgSend(v0, "setValueDisplayColor:", v6);

  v7 = objc_msgSend(v5, "blackColor");
  objc_msgSend(v0, "setButtonTextColor:", v7);

  v8 = objc_msgSend(v5, "blackColor");
  objc_msgSend(v0, "setButtonDisabledTextColor:", v8);

  return v0;
}

uint64_t sub_1003B1B60(uint64_t a1)
{
  return sub_1003B1FFC(a1, qword_1008311D8, (void (*)(void))sub_1003B1B74);
}

id sub_1003B1B74()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id result;
  void *v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (result)
  {
    v4 = result;
    objc_msgSend(result, "isStandalonePhoneFitnessMode");

    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    sub_1003B22A4();
    return (id)AttributedString.init(_:attributes:)(v8, v10, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003B1CE0(uint64_t a1)
{
  return sub_1003B1FFC(a1, qword_1008311F0, (void (*)(void))sub_1003B1CF4);
}

id sub_1003B1CF4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id result;
  void *v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (result)
  {
    v4 = result;
    objc_msgSend(result, "isStandalonePhoneFitnessMode");

    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    sub_1003B22A4();
    return (id)AttributedString.init(_:attributes:)(v8, v10, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003B1E68(uint64_t a1)
{
  return sub_1003B1FFC(a1, qword_100831208, (void (*)(void))sub_1003B1E7C);
}

id sub_1003B1E7C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id result;
  void *v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (result)
  {
    v4 = result;
    objc_msgSend(result, "isStandalonePhoneFitnessMode");

    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    sub_1003B22A4();
    return (id)AttributedString.init(_:attributes:)(v8, v10, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003B1FE8(uint64_t a1)
{
  return sub_1003B1FFC(a1, qword_100831220, (void (*)(void))sub_1003B2134);
}

uint64_t sub_1003B1FFC(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  id v13;
  uint64_t (*v14)(_BYTE *, _QWORD);
  _BYTE v16[32];

  v5 = sub_100047110((uint64_t *)&unk_10082EDF0);
  __chkstk_darwin(v5);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for UIButton.Configuration(0);
  sub_100008398(v8, a2);
  sub_10003CE9C(v8, (uint64_t)a2);
  static UIButton.Configuration.gray()();
  type metadata accessor for DayViewRingsConfigurationCell();
  a3();
  v9 = type metadata accessor for AttributedString(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 0, 1, v9);
  v10 = UIButton.Configuration.attributedTitle.setter(v7);
  v11 = UIButton.Configuration.contentInsets.getter(v10);
  UIButton.Configuration.contentInsets.getter(v12);
  UIButton.Configuration.contentInsets.setter(v11, 15.0);
  v13 = sub_100032490();
  UIButton.Configuration.baseBackgroundColor.setter(v13);
  v14 = (uint64_t (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v16);
  UIBackgroundConfiguration.cornerRadius.setter(12.0);
  return v14(v16, 0);
}

id sub_1003B2134()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id result;
  void *v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (result)
  {
    v4 = result;
    objc_msgSend(result, "isStandalonePhoneFitnessMode");

    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    sub_1003B22A4();
    return (id)AttributedString.init(_:attributes:)(v8, v10, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1003B22A4()
{
  id v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  NSString *v5;
  id v6;
  NSString *v7;
  id v8;
  unint64_t v9;
  _BYTE v10[120];

  v0 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v0, "setAlignment:", 1);
  v1 = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  v10[116] = 1;
  v2 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)(UIFontTextStyleBody, 0, 0x100000000, *(_QWORD *)&UIFontWeightBold, 0, 0);
  v3 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v3, v10);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 64) = v1;
  *(_QWORD *)(inited + 72) = NSParagraphStyleAttributeName;
  *(_QWORD *)(inited + 104) = sub_10001E724(0, &qword_100828DC8, NSMutableParagraphStyle_ptr);
  *(_QWORD *)(inited + 80) = v0;
  v5 = NSFontAttributeName;
  v6 = v2;
  v7 = NSParagraphStyleAttributeName;
  v8 = v0;
  v9 = sub_100038C84(inited);
  AttributeContainer.init(_:)(v9);

}

void sub_1003B23F8(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  NSString v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  objc_class *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  _QWORD v47[2];
  objc_super v48;

  v47[1] = a2;
  v6 = sub_100047110(&qword_10081F6D0);
  __chkstk_darwin(v6);
  v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_leftButton;
  v10 = objc_allocWithZone((Class)UIButton);
  v11 = v3;
  v12 = objc_msgSend(v10, "init");
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v9] = v12;
  v13 = OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_rightButton;
  v14 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v13] = v14;
  v11[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_isRingsPaused] = 0;
  v15 = &v11[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onChangeGoals];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v16 = &v11[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onPauseRings];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = &v11[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onUnpauseRings];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v18 = &v11[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onEditPauseRings];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;

  if (a3)
  {
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    v19 = 0;
  }
  v27 = (objc_class *)type metadata accessor for DayViewRingsConfigurationCell();
  v48.receiver = v11;
  v48.super_class = v27;
  v28 = (char *)objc_msgSendSuper2(&v48, "initWithStyle:reuseIdentifier:", a1, v19);

  v29 = OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_leftButton;
  v30 = qword_10081DC80;
  v31 = v28;
  if (v30 != -1)
    swift_once(&qword_10081DC80, sub_1003B1B60);
  v32 = type metadata accessor for UIButton.Configuration(0);
  v33 = sub_10003CE9C(v32, (uint64_t)qword_1008311D8);
  v34 = *(_QWORD *)(v32 - 8);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  v35(v8, v33, v32);
  v36 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
  v36(v8, 0, 1, v32);
  UIButton.configuration.setter(v8);
  v37 = *(void **)&v28[v29];
  objc_msgSend(v37, "addTarget:action:forControlEvents:", v31, "onLeftButtonPressed:", 64);
  v38 = objc_msgSend(v31, "contentView");
  objc_msgSend(v38, "addSubview:", v37);

  v39 = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (!v39)
  {
    __break(1u);
    goto LABEL_14;
  }
  v40 = v39;
  v41 = objc_msgSend(v39, "features");

  if (!v41)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v42 = objc_msgSend(v41, "pauseRings");

  if (v42)
  {
    v43 = OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_rightButton;
    if (qword_10081DC88 != -1)
      swift_once(&qword_10081DC88, sub_1003B1CE0);
    v44 = sub_10003CE9C(v32, (uint64_t)qword_1008311F0);
    v35(v8, v44, v32);
    v36(v8, 0, 1, v32);
    UIButton.configuration.setter(v8);
    v45 = *(void **)&v31[v43];
    objc_msgSend(v45, "addTarget:action:forControlEvents:", v31, "onRightButtonPressed:", 64);
    v46 = objc_msgSend(v31, "contentView");
    objc_msgSend(v46, "addSubview:", v45);

  }
  sub_1003B2AD0();

}

uint64_t sub_1003B28A8(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  void (*v10)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = sub_100047110(&qword_10081F6D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_isRingsPaused) = a1;
  if ((a1 & 1) != 0)
  {
    if (qword_10081DC90 != -1)
      swift_once(&qword_10081DC90, sub_1003B1E68);
    v6 = type metadata accessor for UIButton.Configuration(0);
    v7 = sub_10003CE9C(v6, (uint64_t)qword_100831208);
    v8 = *(_QWORD *)(v6 - 8);
    v9 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v9(v5, v7, v6);
    v10 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56);
    v10(v5, 0, 1, v6);
    UIButton.configuration.setter(v5);
    if (qword_10081DC98 != -1)
      swift_once(&qword_10081DC98, sub_1003B1FE8);
    v11 = qword_100831220;
  }
  else
  {
    if (qword_10081DC80 != -1)
      swift_once(&qword_10081DC80, sub_1003B1B60);
    v6 = type metadata accessor for UIButton.Configuration(0);
    v12 = sub_10003CE9C(v6, (uint64_t)qword_1008311D8);
    v13 = *(_QWORD *)(v6 - 8);
    v9 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v9(v5, v12, v6);
    v10 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56);
    v10(v5, 0, 1, v6);
    UIButton.configuration.setter(v5);
    if (qword_10081DC88 != -1)
      swift_once(&qword_10081DC88, sub_1003B1CE0);
    v11 = qword_1008311F0;
  }
  v14 = sub_10003CE9C(v6, (uint64_t)v11);
  v9(v5, v14, v6);
  v10(v5, 0, 1, v6);
  return UIButton.configuration.setter(v5);
}

void sub_1003B2AD0()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  unsigned int v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  SEL v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  Class isa;

  v1 = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  v2 = v1;
  v3 = objc_msgSend(v1, "features");

  if (!v3)
  {
LABEL_8:
    __break(1u);
    return;
  }
  v4 = objc_msgSend(v3, "pauseRings");

  v5 = (void *)objc_opt_self(NSLayoutConstraint);
  v6 = sub_100047110((uint64_t *)&unk_100828340);
  if (v4)
  {
    v7 = swift_allocObject(v6, 112, 7);
    *(_OWORD *)(v7 + 16) = xmmword_10062EF60;
    v8 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_leftButton];
    v9 = objc_msgSend(v8, "topAnchor");
    v10 = objc_msgSend(v0, "contentView");
    v11 = objc_msgSend(v10, "topAnchor");

    v12 = objc_msgSend(v9, "constraintEqualToAnchor:", v11);
    *(_QWORD *)(v7 + 32) = v12;
    v13 = objc_msgSend(v8, "leadingAnchor");
    v14 = objc_msgSend(v0, "contentView");
    v15 = objc_msgSend(v14, "leadingAnchor");

    v16 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v15, 16.0);
    *(_QWORD *)(v7 + 40) = v16;
    v17 = objc_msgSend(v8, "heightAnchor");
    v18 = objc_msgSend(v17, "constraintGreaterThanOrEqualToConstant:", 54.0);

    *(_QWORD *)(v7 + 48) = v18;
    v19 = objc_msgSend(v8, "trailingAnchor");
    v20 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_rightButton];
    v21 = objc_msgSend(v20, "leadingAnchor");
    v22 = objc_msgSend(v19, "constraintEqualToAnchor:constant:", v21, -10.0);

    *(_QWORD *)(v7 + 56) = v22;
    v23 = objc_msgSend(v8, "bottomAnchor");
    v24 = objc_msgSend(v0, "contentView");
    v25 = objc_msgSend(v24, "bottomAnchor");

    v26 = objc_msgSend(v23, "constraintEqualToAnchor:", v25);
    *(_QWORD *)(v7 + 64) = v26;
    v27 = objc_msgSend(v20, "widthAnchor");
    v28 = objc_msgSend(v8, "widthAnchor");
    v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

    *(_QWORD *)(v7 + 72) = v29;
    v30 = objc_msgSend(v20, "topAnchor");
    v31 = objc_msgSend(v0, "contentView");
    v32 = objc_msgSend(v31, "topAnchor");

    v33 = objc_msgSend(v30, "constraintEqualToAnchor:", v32);
    *(_QWORD *)(v7 + 80) = v33;
    v34 = objc_msgSend(v20, "heightAnchor");
    v35 = objc_msgSend(v34, "constraintGreaterThanOrEqualToConstant:", 54.0);

    *(_QWORD *)(v7 + 88) = v35;
    v36 = objc_msgSend(v20, "trailingAnchor");
    v37 = objc_msgSend(v0, "contentView");
    v38 = objc_msgSend(v37, "trailingAnchor");

    v39 = objc_msgSend(v36, "constraintEqualToAnchor:constant:", v38, -16.0);
    *(_QWORD *)(v7 + 96) = v39;
    v40 = objc_msgSend(v20, "bottomAnchor");
    v41 = objc_msgSend(v0, "contentView");
    v42 = objc_msgSend(v41, "bottomAnchor");

    v43 = objc_msgSend(v40, "constraintEqualToAnchor:", v42);
    *(_QWORD *)(v7 + 104) = v43;
  }
  else
  {
    v7 = swift_allocObject(v6, 72, 7);
    *(_OWORD *)(v7 + 16) = xmmword_10062ED40;
    v45 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_leftButton];
    v46 = objc_msgSend(v45, "topAnchor");
    v47 = objc_msgSend(v0, "contentView");
    v48 = objc_msgSend(v47, "topAnchor");

    v49 = objc_msgSend(v46, "constraintEqualToAnchor:", v48);
    *(_QWORD *)(v7 + 32) = v49;
    v50 = objc_msgSend(v45, "leadingAnchor");
    v51 = objc_msgSend(v0, "contentView");
    v52 = objc_msgSend(v51, "leadingAnchor");

    v53 = objc_msgSend(v50, "constraintEqualToAnchor:constant:", v52, 16.0);
    *(_QWORD *)(v7 + 40) = v53;
    v54 = objc_msgSend(v45, "heightAnchor");
    v55 = objc_msgSend(v54, "constraintGreaterThanOrEqualToConstant:", 54.0);

    *(_QWORD *)(v7 + 48) = v55;
    v56 = objc_msgSend(v45, "trailingAnchor");
    v57 = objc_msgSend(v0, "contentView");
    v58 = objc_msgSend(v57, "trailingAnchor");

    v59 = objc_msgSend(v56, "constraintEqualToAnchor:constant:", v58, -16.0);
    *(_QWORD *)(v7 + 56) = v59;
    v60 = objc_msgSend(v45, "bottomAnchor");
    v61 = objc_msgSend(v0, "contentView");
    v62 = objc_msgSend(v61, "bottomAnchor");

    v63 = objc_msgSend(v60, "constraintEqualToAnchor:", v62);
    *(_QWORD *)(v7 + 64) = v63;
  }
  specialized Array._endMutation()(v44);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v7, v64, v65, v66, v67, v68, v69, v70);
  objc_msgSend(v5, "activateConstraints:", isa);

}

uint64_t sub_1003B32A8(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;

  v3 = OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_leftButton;
  v4 = objc_allocWithZone((Class)UIButton);
  v5 = v1;
  v6 = objc_msgSend(v4, "init");
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v3] = v6;
  v7 = OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_rightButton;
  v8 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  *(_QWORD *)&v5[v7] = v8;
  v5[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_isRingsPaused] = 0;
  v9 = (uint64_t *)&v5[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onChangeGoals];
  *v9 = 0;
  v9[1] = 0;
  v10 = (uint64_t *)&v5[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onPauseRings];
  *v10 = 0;
  v10[1] = 0;
  v11 = (uint64_t *)&v5[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onUnpauseRings];
  *v11 = 0;
  v11[1] = 0;
  v12 = (uint64_t *)&v5[OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_onEditPauseRings];
  *v12 = 0;
  v12[1] = 0;

  sub_100022BA4(*v9, v9[1]);
  sub_100022BA4(*v10, v10[1]);
  sub_100022BA4(*v11, v11[1]);
  sub_100022BA4(*v12, v12[1]);

  v13 = type metadata accessor for DayViewRingsConfigurationCell();
  swift_deallocPartialClassInstance(v5, v13, 96, 7);
  return 0;
}

id sub_1003B3420()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayViewRingsConfigurationCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DayViewRingsConfigurationCell()
{
  return objc_opt_self(_TtC10FitnessApp29DayViewRingsConfigurationCell);
}

uint64_t *sub_1003B34F8(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(__n128);
  uint64_t v6;
  __n128 v7;

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC10FitnessApp29DayViewRingsConfigurationCell_isRingsPaused) == 1)
    v3 = *result;
  else
    v3 = *a2;
  v4 = v2 + v3;
  v5 = *(void (**)(__n128))v4;
  if (*(_QWORD *)v4)
  {
    v6 = *(_QWORD *)(v4 + 8);
    v7 = swift_retain(v6);
    v5(v7);
    return (uint64_t *)sub_100022BA4((uint64_t)v5, v6);
  }
  return result;
}

uint64_t *sub_1003B3560(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v19);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[1];
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ActivitySharingSettings(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain(v7);
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)v4 + v13) = (uint64_t)v15;
    v16 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)v4 + v14) = (uint64_t)v16;
    v17 = v15;
    v18 = v16;
  }
  return v4;
}

void sub_1003B3630(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for ActivitySharingSettings(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

uint64_t sub_1003B3698(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for ActivitySharingSettings(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain(v6);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v14;
  v15 = *(void **)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v15;
  v16 = v14;
  v17 = v15;
  return a1;
}

uint64_t sub_1003B373C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_retain(v7);
  swift_release(v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ActivitySharingSettings(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[6];
  v13 = *(void **)(a2 + v12);
  v14 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  v15 = v13;

  v16 = a3[7];
  v17 = *(void **)(a2 + v16);
  v18 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = v17;
  v19 = v17;

  return a1;
}

_OWORD *sub_1003B37F0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ActivitySharingSettings(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  return a1;
}

uint64_t sub_1003B3870(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for ActivitySharingSettings(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  v13 = a3[7];
  v14 = *(void **)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);

  return a1;
}

uint64_t sub_1003B3914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003B3920);
}

uint64_t sub_1003B3920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ActivitySharingSettings(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1003B39A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003B39AC);
}

uint64_t sub_1003B39AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ActivitySharingSettings(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008312F0;
  if (!qword_1008312F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActivitySharingFriendDetailInternalDashboardView);
  return result;
}

uint64_t sub_1003B3A64(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100639C78;
  result = type metadata accessor for ActivitySharingSettings(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1003B3AE8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B5FB8, 1);
}

void sub_1003B3AF8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v38;
  void (*v39)(_BYTE *, uint64_t, __n128);
  __n128 v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  _BYTE v48[12];
  int v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[16];
  uint64_t v53;

  v4 = sub_100047110(&qword_100831338);
  v51 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = &v48[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v48[-v8];
  v50 = static HorizontalAlignment.center.getter(v10, v11, v12, v13, v14);
  v15 = static Font.title.getter(v50);
  static Font.Weight.bold.getter(v16);
  v17 = Font.weight(_:)(v15);
  v18 = swift_release(v15);
  v19 = Text.font(_:)(v17, 0x72616F6268736144, 0xE900000000000064, 0, _swiftEmptyArrayStorage, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_release(v17);
  LOBYTE(v17) = v23 & 1;
  v49 = static Edge.Set.top.getter(v26);
  v27 = EdgeInsets.init(_all:)(25.0);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v53 = a1;
  v34 = sub_100047110(&qword_100831340);
  v35 = sub_100028384(&qword_100831348, &qword_100831340, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  List<>.init(content:)(sub_1003B7840, v52, v34, v35);
  v36 = v51;
  v37 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v51 + 16);
  v37(v6, v9, v4);
  *(_QWORD *)a2 = v50;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v21;
  *(_BYTE *)(a2 + 40) = v17;
  *(_QWORD *)(a2 + 48) = v25;
  *(_BYTE *)(a2 + 56) = v49;
  *(double *)(a2 + 64) = v27;
  *(_QWORD *)(a2 + 72) = v29;
  *(_QWORD *)(a2 + 80) = v31;
  *(_QWORD *)(a2 + 88) = v33;
  *(_BYTE *)(a2 + 96) = 0;
  v38 = sub_100047110(&qword_100831350);
  v37((_BYTE *)(a2 + *(int *)(v38 + 48)), v6, v4);
  sub_1000E439C(v19, v21, v17);
  v39 = *(void (**)(_BYTE *, uint64_t, __n128))(v36 + 8);
  v40 = swift_bridgeObjectRetain(v25);
  v39(v9, v4, v40);
  ((void (*)(_BYTE *, uint64_t))v39)(v6, v4);
  sub_1000E4458(v19, v21, v17);
  swift_bridgeObjectRelease(v25, v41, v42, v43, v44, v45, v46, v47);
}

uint64_t sub_1003B3D3C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(_QWORD, _QWORD, _QWORD);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  int *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  void (*v96)(char *, uint64_t);
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  void (*v114)(_QWORD, _QWORD, _QWORD);
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  _QWORD v140[4];
  _QWORD v141[4];
  _QWORD v142[4];
  _QWORD v143[4];
  _QWORD v144[4];
  char v145[16];
  uint64_t v146;
  char v147[16];
  uint64_t v148;
  char v149[16];
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  char v153;
  _QWORD *v154;
  __int128 v155;
  char v156;
  _QWORD *v157;

  v115 = a2;
  v3 = sub_100047110(&qword_100831358);
  v4 = *(_QWORD *)(v3 - 8);
  v128 = v3;
  v129 = v4;
  __chkstk_darwin(v3);
  v139 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v125 = (char *)&v102 - v7;
  v8 = type metadata accessor for TaskPriority(0);
  v113 = *(_QWORD *)(v8 - 8);
  v114 = (void (*)(_QWORD, _QWORD, _QWORD))v8;
  __chkstk_darwin(v8);
  v112 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0);
  v11 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  v104 = *(_QWORD *)(v10 - 8);
  v105 = v11;
  __chkstk_darwin(v10);
  v103 = (uint64_t)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100047110(&qword_100831360);
  v108 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v116 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_100831368);
  v110 = *(_QWORD *)(v14 - 8);
  v111 = v14;
  __chkstk_darwin(v14);
  v102 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_100047110(&qword_100831370);
  __chkstk_darwin(v107);
  v133 = (uint64_t)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v135 = (uint64_t)&v102 - v18;
  v121 = sub_100047110(&qword_100831378);
  v127 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v137 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v120 = (char *)&v102 - v21;
  __chkstk_darwin(v22);
  v132 = (char *)&v102 - v23;
  __chkstk_darwin(v24);
  v134 = (char *)&v102 - v25;
  v119 = sub_100047110(&qword_100831380);
  v126 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v118 = (char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v136 = (char *)&v102 - v28;
  v109 = sub_100047110(&qword_100831388);
  v124 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v123 = (char *)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v138 = (char *)&v102 - v31;
  __chkstk_darwin(v32);
  v117 = (char *)&v102 - v33;
  __chkstk_darwin(v34);
  v130 = (char *)&v102 - v35;
  __chkstk_darwin(v36);
  v131 = (char *)&v102 - v37;
  __chkstk_darwin(v38);
  v122 = (char *)&v102 - v39;
  v155 = xmmword_100639BE0;
  v156 = 0;
  v157 = _swiftEmptyArrayStorage;
  v150 = a1;
  v40 = sub_100047110(&qword_100831390);
  v41 = sub_100028384(&qword_100831398, &qword_100831390, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  Section<>.init(header:content:)(&v155, sub_1003B7848, v149, &type metadata for Text, v40, &protocol witness table for Text, v41);
  v155 = xmmword_100639BF0;
  v156 = 0;
  v157 = _swiftEmptyArrayStorage;
  v148 = a1;
  v42 = sub_100047110(&qword_1008313A0);
  v43 = sub_100028384(&qword_1008313A8, &qword_1008313A0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  Section<>.init(header:content:)(&v155, sub_1003B7850, v147, &type metadata for Text, v42, &protocol witness table for Text, v43);
  *(_QWORD *)&v155 = 0xD000000000000012;
  *((_QWORD *)&v155 + 1) = 0x800000010069CEF0;
  v156 = 0;
  v157 = _swiftEmptyArrayStorage;
  v146 = a1;
  v44 = sub_100047110(&qword_1008313B0);
  v45 = sub_100028384(&qword_1008313B8, &qword_1008313B0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  Section<>.init(header:content:)(&v155, sub_1003B7858, v145, &type metadata for Text, v44, &protocol witness table for Text, v45);
  *(_QWORD *)&v155 = 0xD000000000000013;
  *((_QWORD *)&v155 + 1) = 0x800000010069CF10;
  v156 = 0;
  v157 = _swiftEmptyArrayStorage;
  v144[2] = a1;
  Section<>.init(header:content:)(&v155, sub_1003B7878, v144, &type metadata for Text, v44, &protocol witness table for Text, v45);
  v155 = xmmword_100639C00;
  v156 = 0;
  v157 = _swiftEmptyArrayStorage;
  v143[2] = a1;
  Section<>.init(header:content:)(&v155, sub_1003B7898, v143, &type metadata for Text, v40, &protocol witness table for Text, v41);
  *(_QWORD *)&v155 = 0xD000000000000010;
  *((_QWORD *)&v155 + 1) = 0x800000010069CF30;
  v156 = 0;
  v157 = _swiftEmptyArrayStorage;
  v142[2] = a1;
  Section<>.init(header:content:)(&v155, sub_1003B78C8, v142, &type metadata for Text, v40, &protocol witness table for Text, v41);
  v155 = xmmword_100639C10;
  v156 = 0;
  v157 = _swiftEmptyArrayStorage;
  v151 = sub_1003B6024();
  v152 = v46;
  v153 = 0;
  v154 = _swiftEmptyArrayStorage;
  v141[2] = a1;
  v47 = sub_100047110(&qword_1008313C0);
  v48 = sub_100028384(&qword_1008313C8, &qword_1008313C0, (uint64_t)&protocol conformance descriptor for Toggle<A>);
  Section<>.init(header:footer:content:)(&v155, &v151, sub_1003B78F8, v141, &type metadata for Text, v47, &type metadata for Text, &protocol witness table for Text, v48, &protocol witness table for Text);
  v49 = a1;
  v50 = *(_QWORD *)(a1 + 8);
  LOBYTE(v155) = *(_BYTE *)a1;
  *((_QWORD *)&v155 + 1) = v50;
  v51 = sub_100047110(&qword_100820D80);
  State.wrappedValue.getter(&v151, v51);
  LOBYTE(v155) = v151;
  v52 = v103;
  sub_10033CF54(a1, v103);
  v53 = *(unsigned __int8 *)(v104 + 80);
  v54 = (v53 + 16) & ~v53;
  v55 = v54 + v105;
  v56 = v53 | 7;
  v57 = swift_allocObject(&unk_10079C7B0, v54 + v105, v53 | 7);
  sub_1003B7904(v52, v57 + v54);
  v58 = sub_1003B7994();
  v59 = v102;
  v60 = v106;
  v61 = v116;
  View.onChange<A>(of:initial:_:)(&v155, 0, sub_1003B7948, v57, v106, &type metadata for Bool, v58, &protocol witness table for Bool);
  v62 = swift_release(v57);
  (*(void (**)(char *, uint64_t, __n128))(v108 + 8))(v61, v60, v62);
  sub_10033CF54(v49, v52);
  v63 = swift_allocObject(&unk_10079C7D8, v55, v56);
  v64 = sub_1003B7904(v52, v63 + v54);
  v65 = v112;
  static TaskPriority.userInitiated.getter(v64);
  v66 = v133;
  v67 = (char *)(v133 + *(int *)(v107 + 36));
  v68 = type metadata accessor for _TaskModifier(0);
  v70 = v113;
  v69 = v114;
  (*(void (**)(char *, char *, _QWORD))(v113 + 16))(&v67[*(int *)(v68 + 20)], v65, v114);
  *(_QWORD *)v67 = &unk_1008313E0;
  *((_QWORD *)v67 + 1) = v63;
  v72 = v110;
  v71 = v111;
  (*(void (**)(uint64_t, char *, uint64_t))(v110 + 16))(v66, v59, v111);
  (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v70 + 8))(v65, v69);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v59, v71);
  sub_1003B7B28(v66, v135);
  v155 = xmmword_100639C20;
  v156 = 0;
  v157 = _swiftEmptyArrayStorage;
  v151 = 0xD000000000000037;
  v152 = 0x800000010069CF50;
  v153 = 0;
  v154 = _swiftEmptyArrayStorage;
  v140[2] = v49;
  v73 = sub_100047110(&qword_1008313E8);
  v74 = sub_1003B7B78();
  v75 = v125;
  Section<>.init(header:footer:content:)(&v155, &v151, sub_1003B7B70, v140, &type metadata for Text, v73, &type metadata for Text, &protocol witness table for Text, v74, &protocol witness table for Text);
  v76 = *(void (**)(char *, char *, uint64_t))(v124 + 16);
  v77 = v117;
  v78 = v109;
  v76(v117, v122, v109);
  v114 = *(void (**)(_QWORD, _QWORD, _QWORD))(v126 + 16);
  v80 = v118;
  v79 = v119;
  v114(v118, v136, v119);
  v81 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
  v83 = v120;
  v82 = v121;
  v81(v120, v134, v121);
  v81(v137, v132, v82);
  v76(v138, v131, v78);
  v84 = v78;
  v76(v123, v130, v78);
  v85 = v133;
  sub_1003B7BF4(v135, v133);
  v116 = *(char **)(v129 + 16);
  ((void (*)(char *, char *, uint64_t))v116)(v139, v75, v128);
  v86 = v115;
  v87 = v77;
  v88 = v84;
  v76(v115, v87, v84);
  v89 = (int *)sub_100047110(&qword_100831408);
  v114(&v86[v89[12]], v80, v79);
  v90 = v83;
  v91 = v121;
  v81(&v86[v89[16]], v90, v121);
  v81(&v86[v89[20]], v137, v91);
  v92 = v88;
  v76(&v86[v89[24]], v138, v88);
  v93 = v123;
  v76(&v86[v89[28]], v123, v92);
  sub_1003B7BF4(v85, (uint64_t)&v86[v89[32]]);
  v94 = v128;
  ((void (*)(char *, char *, uint64_t))v116)(&v86[v89[36]], v139, v128);
  v95 = *(void (**)(char *, uint64_t))(v129 + 8);
  v95(v125, v94);
  sub_10001BE90(v135, &qword_100831370);
  v96 = *(void (**)(char *, uint64_t))(v124 + 8);
  v96(v130, v92);
  v96(v131, v92);
  v97 = *(void (**)(char *, uint64_t))(v127 + 8);
  v98 = v91;
  v97(v132, v91);
  v97(v134, v91);
  v99 = *(void (**)(char *, uint64_t))(v126 + 8);
  v100 = v119;
  v99(v136, v119);
  v96(v122, v92);
  v95(v139, v94);
  sub_10001BE90(v133, &qword_100831370);
  v96(v93, v92);
  v96(v138, v92);
  v97(v137, v98);
  v97(v120, v98);
  v99(v118, v100);
  return ((uint64_t (*)(char *, uint64_t))v96)(v117, v92);
}

void sub_1003B48C4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  SEL v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  SEL v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v86 = sub_100047110(&qword_100821648);
  __chkstk_darwin(v86);
  v5 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v10);
  v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0) + 28);
  v87 = a1;
  v14 = *(void **)(a1 + v13);
  v15 = objc_msgSend(v14, "fullName");
  if (v15)
  {
    v16 = v15;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v84 = v18;
    v85 = v17;

  }
  else
  {
    v84 = 0;
    v85 = 0;
  }
  v19 = objc_msgSend(v14, "displayName");
  if (v19)
  {
    v20 = v19;
    v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

  }
  else
  {
    v83 = 0;
    v22 = 0;
  }
  v23 = objc_msgSend(v14, "UUID");
  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
    goto LABEL_14;
  }
  v24 = v23;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v23);

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v9, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6);
  if ((_DWORD)v25 == 1)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v26 = UUID.uuidString.getter(v25);
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v29 = objc_msgSend(*(id *)(v87 + v13), "currentDateComponents");
  if (v29)
  {
    v30 = v29;
    static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v29);

    v31 = type metadata accessor for DateComponents(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v5, 0, 1, v31);
  }
  else
  {
    v32 = type metadata accessor for DateComponents(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v5, 1, 1, v32);
  }
  v33 = Optional.description.getter(v86);
  v35 = v34;
  sub_10001BE90((uint64_t)v5, &qword_100821648);
  v36 = sub_1003B4CA4();
  *(_QWORD *)a2 = 0x6D614E206C6C7546;
  *(_QWORD *)(a2 + 8) = 0xE900000000000065;
  v37 = v84;
  *(_QWORD *)(a2 + 16) = v85;
  *(_QWORD *)(a2 + 24) = v37;
  strcpy((char *)(a2 + 32), "Display Name");
  *(_BYTE *)(a2 + 45) = 0;
  *(_WORD *)(a2 + 46) = -5120;
  *(_QWORD *)(a2 + 48) = v83;
  *(_QWORD *)(a2 + 56) = v22;
  *(_QWORD *)(a2 + 64) = 1145656661;
  *(_QWORD *)(a2 + 72) = 0xE400000000000000;
  *(_QWORD *)(a2 + 80) = v26;
  *(_QWORD *)(a2 + 88) = v28;
  *(_QWORD *)(a2 + 96) = 0x6D6F432061746144;
  *(_QWORD *)(a2 + 104) = 0xEF73746E656E6F70;
  *(_QWORD *)(a2 + 112) = v33;
  *(_QWORD *)(a2 + 120) = v35;
  *(_QWORD *)(a2 + 128) = 0x6E6F5A20656D6954;
  *(_QWORD *)(a2 + 136) = 0xE900000000000065;
  *(_QWORD *)(a2 + 144) = v36;
  *(_QWORD *)(a2 + 152) = v38;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(0xE400000000000000);
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(0xEF73746E656E6F70);
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(0xE900000000000065);
  swift_bridgeObjectRelease(v39, v40, v41, v42, v43, v44, v45, v46);
  swift_bridgeObjectRelease(v22, v47, v48, v49, v50, v51, v52, v53);
  swift_bridgeObjectRelease(v28, v54, v55, v56, v57, v58, v59, v60);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE400000000000000, v61, v62, v63, v64, v65, v66, v67);
  swift_bridgeObjectRelease(v35, v68, v69, v70, v71, v72, v73, v74);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xEF73746E656E6F70, v75, v76, v77, v78, v79, v80, v81);
}

uint64_t sub_1003B4CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  Swift::String v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  _QWORD v60[2];
  uint64_t v61;
  unint64_t v62;

  v1 = 0x6E776F6E6B6E55;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100823FC8);
  __chkstk_darwin(v6);
  v8 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TimeZone(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v60 - v14;
  v16 = objc_msgSend(*(id *)(v0 + *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0) + 28)), "timeZone");
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_17;
  }
  v17 = v16;
  static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

  v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v18(v8, v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_17:
    sub_10001BE90((uint64_t)v8, &qword_100823FC8);
    return v1;
  }
  v18(v15, v8, v9);
  v61 = 0;
  v62 = 0xE000000000000000;
  _StringGuts.grow(_:)(34);
  Date.init()(v19);
  v20 = TimeZone.abbreviation(for:)(v5);
  v22 = v21;
  v23 = *(void (**)(char *, uint64_t))(v3 + 8);
  v23(v5, v2);
  if (v22)
    v24 = v20;
  else
    v24 = 0x6E776F6E6B6E55;
  if (v22)
    v25 = v22;
  else
    v25 = (CHWorkoutDetailHeartRateTableViewCell *)0xE700000000000000;
  v26 = v25;
  String.append(_:)(*(Swift::String *)&v24);
  swift_bridgeObjectRelease(v25, v27, v28, v29, v30, v31, v32, v33);
  v34._object = (void *)0x800000010069D1C0;
  v34._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v34);
  Date.init()(v35);
  v36 = TimeZone.isDaylightSavingTime(for:)(v5);
  v23(v5, v2);
  if ((v36 & 1) != 0)
    v37 = 1702195828;
  else
    v37 = 0x65736C6166;
  if ((v36 & 1) != 0)
    v38 = (CHWorkoutDetailHeartRateTableViewCell *)0xE400000000000000;
  else
    v38 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
  v39 = v38;
  String.append(_:)(*(Swift::String *)&v37);
  swift_bridgeObjectRelease(v38, v40, v41, v42, v43, v44, v45, v46);
  v47._countAndFlagsBits = 0x3A74657366666F20;
  v47._object = (void *)0xE900000000000020;
  String.append(_:)(v47);
  Date.init()(v48);
  v49 = TimeZone.secondsFromGMT(for:)(v5);
  v23(v5, v2);
  v60[1] = v49;
  v50._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = (CHWorkoutDetailHeartRateTableViewCell *)v50._object;
  String.append(_:)(v50);
  swift_bridgeObjectRelease(object, v52, v53, v54, v55, v56, v57, v58);
  v1 = v61;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  return v1;
}

void sub_1003B4FEC(CHWorkoutDetailHeartRateTableViewCell *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  id v15;
  void *v16;
  id v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  id v20;
  void *v21;
  id v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  uint64_t v43;
  const char *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  uint64_t v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  SEL v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  SEL v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  SEL v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  SEL v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  SEL v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  SEL v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  SEL v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  SEL v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  SEL v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  CHWorkoutDetailHeartRateTableViewCell *v135;
  uint64_t v136;
  uint64_t v137;
  CHWorkoutDetailHeartRateTableViewCell *v138;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0) + 28);
  v9 = *(Class *)((char *)&a1->super.super.super.super.isa + v8);
  v10 = objc_msgSend(v9, "contact");
  if (!v10)
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v11 = v10;
  v137 = v4;
  v12 = objc_msgSend(v10, "fullName");

  if (v12)
  {
    v136 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v14 = v13;

  }
  else
  {
    v136 = 0;
    v14 = 0;
  }
  v138 = a1;
  v15 = objc_msgSend(v9, "contact");
  if (!v15)
    goto LABEL_19;
  v16 = v15;
  v17 = objc_msgSend(v15, "shortName");

  if (v17)
  {
    v134 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v19 = v18;

  }
  else
  {
    v134 = 0;
    v19 = 0;
  }
  v135 = v14;
  v20 = objc_msgSend(v9, "contact");
  if (!v20)
    goto LABEL_20;
  v21 = v20;
  v22 = objc_msgSend(v20, "displayName");

  v133 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v24 = v23;

  v25 = objc_msgSend(v9, "contact");
  if (!v25)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v26 = v25;
  v27 = objc_msgSend(v25, "UUID");

  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v29 = UUID.uuidString.getter(v28);
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v137);
  v32 = *(Class *)((char *)&v138->super.super.super.super.isa + v8);
  v33 = objc_msgSend(v32, "contact");
  if (!v33)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v34 = v33;
  v138 = v24;
  v35 = objc_msgSend(v33, "linkedContactStoreIdentifier");

  v132 = v31;
  if (v35)
  {
    v137 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v37 = v36;

  }
  else
  {
    v137 = 0;
    v37 = 0;
  }
  v38 = v29;
  v39 = objc_msgSend(v32, "contact");
  if (!v39)
    goto LABEL_23;
  v40 = v39;
  v41 = objc_msgSend(v39, "destinations");

  v42 = (CHWorkoutDetailHeartRateTableViewCell *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v41, &type metadata for String, &protocol witness table for String);
  v43 = Set.description.getter(v42, &type metadata for String, &protocol witness table for String);
  v45 = (CHWorkoutDetailHeartRateTableViewCell *)v44;
  swift_bridgeObjectRelease(v42, v44, v46, v47, v48, v49, v50, v51);
  v52 = objc_msgSend(v32, "contact");
  if (v52)
  {
    v53 = v52;
    v54 = objc_msgSend(v52, "primaryDestinationForMessaging");

    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
    v57 = v56;

    *(_QWORD *)a2 = 0x6D614E206C6C7546;
    *(_QWORD *)(a2 + 8) = 0xE900000000000065;
    v58 = v135;
    *(_QWORD *)(a2 + 16) = v136;
    *(_QWORD *)(a2 + 24) = v58;
    *(_QWORD *)(a2 + 32) = 0x614E2074726F6853;
    *(_QWORD *)(a2 + 40) = 0xEA0000000000656DLL;
    *(_QWORD *)(a2 + 48) = v134;
    *(_QWORD *)(a2 + 56) = v19;
    strcpy((char *)(a2 + 64), "Display Name");
    *(_BYTE *)(a2 + 77) = 0;
    *(_WORD *)(a2 + 78) = -5120;
    v59 = v138;
    *(_QWORD *)(a2 + 80) = v133;
    *(_QWORD *)(a2 + 88) = v59;
    *(_QWORD *)(a2 + 96) = 1145656661;
    *(_QWORD *)(a2 + 104) = 0xE400000000000000;
    v60 = v132;
    *(_QWORD *)(a2 + 112) = v38;
    *(_QWORD *)(a2 + 120) = v60;
    *(_QWORD *)(a2 + 128) = 0xD000000000000018;
    *(_QWORD *)(a2 + 136) = 0x800000010069D180;
    *(_QWORD *)(a2 + 144) = v137;
    *(_QWORD *)(a2 + 152) = v37;
    strcpy((char *)(a2 + 160), "Destinations");
    *(_BYTE *)(a2 + 173) = 0;
    *(_WORD *)(a2 + 174) = -5120;
    *(_QWORD *)(a2 + 176) = v43;
    *(_QWORD *)(a2 + 184) = v45;
    *(_QWORD *)(a2 + 192) = 0xD000000000000013;
    *(_QWORD *)(a2 + 200) = 0x800000010069D1A0;
    *(_QWORD *)(a2 + 208) = v55;
    *(_QWORD *)(a2 + 216) = v57;
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(0xEC000000736E6F69);
    swift_bridgeObjectRetain(v45);
    swift_bridgeObjectRetain(0xE900000000000065);
    swift_bridgeObjectRetain(v58);
    swift_bridgeObjectRetain(0xEA0000000000656DLL);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(0xEC000000656D614ELL);
    swift_bridgeObjectRetain(v59);
    swift_bridgeObjectRetain(0xE400000000000000);
    swift_bridgeObjectRelease(v58, v61, v62, v63, v64, v65, v66, v67);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE900000000000065, v68, v69, v70, v71, v72, v73, v74);
    swift_bridgeObjectRelease(v19, v75, v76, v77, v78, v79, v80, v81);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xEA0000000000656DLL, v82, v83, v84, v85, v86, v87, v88);
    swift_bridgeObjectRelease(v59, v89, v90, v91, v92, v93, v94, v95);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xEC000000656D614ELL, v96, v97, v98, v99, v100, v101, v102);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE400000000000000, v103, v104, v105, v106, v107, v108, v109);
    swift_bridgeObjectRelease(v37, v110, v111, v112, v113, v114, v115, v116);
    swift_bridgeObjectRelease(v45, v117, v118, v119, v120, v121, v122, v123);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xEC000000736E6F69, v124, v125, v126, v127, v128, v129, v130);
    return;
  }
LABEL_24:
  __break(1u);
}

void sub_1003B551C(uint64_t a1@<X0>, SEL *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  unint64_t v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  SEL *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  uint64_t v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  const char *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  id v64;
  void *v65;
  const char *v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  SEL v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  SEL v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  SEL v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  SEL v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  SEL v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  SEL v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  SEL v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  CHWorkoutDetailHeartRateTableViewCell *v128;
  uint64_t v129;
  uint64_t v130;
  CHWorkoutDetailHeartRateTableViewCell *v131;
  CHWorkoutDetailHeartRateTableViewCell *v132;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v131 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v9);
  v11 = (char *)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0) + 28);
  v130 = a1;
  v12 = *(void **)(a1 + v129);
  v13 = objc_msgSend(v12, "contact");
  if (!v13)
  {
    __break(1u);
    goto LABEL_23;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "relationshipStorage");

  v16 = objc_msgSend(v15, *a2);
  v17 = (CHWorkoutDetailHeartRateTableViewCell *)objc_msgSend(v16, "version");

  v132 = v17;
  v18 = sub_1003B7E7C();
  v127 = BinaryInteger.description.getter(&type metadata for Int, v18);
  v128 = v19;
  v20 = objc_msgSend(v12, "contact");
  if (!v20)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "relationshipStorage");

  v23 = objc_msgSend(v22, *a2);
  v24 = objc_msgSend(v23, "UUID");

  if (!v24)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v11, 1, 1, v6);
    goto LABEL_25;
  }
  v25 = a2;
  v26 = v131;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v24);

  (*(void (**)(char *, CHWorkoutDetailHeartRateTableViewCell *, uint64_t))(v7 + 32))(v11, v26, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6);
  if ((_DWORD)v27 == 1)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v28 = UUID.uuidString.getter(v27);
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  v31 = *(void **)(v130 + v129);
  v32 = objc_msgSend(v31, "contact");
  if (!v32)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    return;
  }
  v33 = v32;
  v130 = v28;
  v131 = v30;
  v34 = objc_msgSend(v32, "relationshipStorage");

  v35 = objc_msgSend(v34, *v25);
  v36 = objc_msgSend(v35, "cloudKitAddress");

  if (v36)
  {
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v39 = v38;

  }
  else
  {
    v37 = 0;
    v39 = 0;
  }
  v40 = objc_msgSend(v31, "contact");
  if (!v40)
    goto LABEL_27;
  v41 = v40;
  v42 = objc_msgSend(v40, "relationshipStorage");

  v43 = objc_msgSend(v42, *v25);
  v44 = objc_msgSend(v43, "addresses");

  if (v44)
  {
    v45 = (CHWorkoutDetailHeartRateTableViewCell *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v44, &type metadata for String, &protocol witness table for String);

  }
  else
  {
    v45 = 0;
  }
  v129 = v37;
  v132 = v45;
  v46 = sub_100047110(&qword_100831450);
  v47 = Optional.description.getter(v46);
  v49 = v48;
  swift_bridgeObjectRelease(v45, v48, v50, v51, v52, v53, v54, v55);
  v56 = objc_msgSend(v31, "contact");
  if (!v56)
    goto LABEL_28;
  v57 = v56;
  v58 = objc_msgSend(v56, "relationshipStorage");

  v59 = objc_msgSend(v58, *v25);
  v60 = objc_msgSend(v59, "preferredReachableAddress");

  if (v60)
  {
    v126 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    v62 = v61;

  }
  else
  {
    v126 = 0;
    v62 = 0;
  }
  v63 = v39;
  v64 = objc_msgSend(v31, "contact");
  if (!v64)
    goto LABEL_29;
  v65 = v64;
  v66 = v49;
  v67 = objc_msgSend(v64, "relationshipStorage");

  v68 = objc_msgSend(v67, *v25);
  v69 = objc_msgSend(v68, "preferredReachableService");

  v70 = v47;
  if (v69)
  {
    v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
    v73 = v72;

  }
  else
  {
    v71 = 0;
    v73 = 0;
  }
  *a3 = 0x6E6F6973726556;
  a3[1] = 0xE700000000000000;
  v74 = v128;
  a3[2] = v127;
  a3[3] = v74;
  a3[4] = 1145656661;
  a3[5] = 0xE400000000000000;
  v75 = v131;
  a3[6] = v130;
  a3[7] = v75;
  a3[8] = 0xD000000000000010;
  a3[9] = 0x800000010069D120;
  a3[10] = v129;
  a3[11] = v63;
  a3[12] = 0x6573736572646441;
  a3[13] = 0xE900000000000073;
  a3[14] = v70;
  a3[15] = v66;
  a3[16] = 0xD000000000000011;
  a3[17] = 0x800000010069D140;
  a3[18] = v126;
  a3[19] = v62;
  a3[20] = 0xD000000000000011;
  a3[21] = 0x800000010069D160;
  a3[22] = v71;
  a3[23] = v73;
  swift_bridgeObjectRetain(0xE700000000000000);
  swift_bridgeObjectRetain(v74);
  swift_bridgeObjectRetain(0xE400000000000000);
  swift_bridgeObjectRetain(v75);
  swift_bridgeObjectRetain(0x800000010069D120);
  swift_bridgeObjectRetain(v63);
  swift_bridgeObjectRetain(0xE900000000000073);
  swift_bridgeObjectRelease(v74, v76, v77, v78, v79, v80, v81, v82);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE700000000000000, v83, v84, v85, v86, v87, v88, v89);
  swift_bridgeObjectRelease(v75, v90, v91, v92, v93, v94, v95, v96);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE400000000000000, v97, v98, v99, v100, v101, v102, v103);
  swift_bridgeObjectRelease(v63, v104, v105, v106, v107, v108, v109, v110);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x800000010069D120, v111, v112, v113, v114, v115, v116, v117);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE900000000000073, v118, v119, v120, v121, v122, v123, v124);
}

id sub_1003B5B7C()
{
  return sub_1003B5F30((SEL *)&selRef_primaryRelationship);
}

void sub_1003B5B88(uint64_t a1@<X0>, SEL *a2@<X1>, SEL *a3@<X2>, SEL *a4@<X3>, _QWORD *a5@<X8>)
{
  CHWorkoutDetailHeartRateTableViewCell *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  SEL v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  uint64_t v77;
  id v78;

  v78 = sub_1003B5F30(a2);
  v10 = v9;
  v11 = *(void **)(a1 + *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0) + 28));
  v12 = objc_msgSend(v11, "contact");
  if (!v12)
  {
    __break(1u);
    goto LABEL_10;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, "relationshipStorage");

  v15 = objc_msgSend(v14, *a3);
  v16 = objc_msgSend(v14, *a4);
  v77 = sub_1003B7064(v15, v16);
  v18 = v17;

  v19 = objc_msgSend(v11, "contact");
  if (!v19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v20 = v19;
  v76 = v10;
  v21 = objc_msgSend(v19, "relationshipStorage");

  v22 = objc_msgSend(v21, *a4);
  v23 = sub_1003B7198(v22, (SEL *)&selRef_secureCloudUpgradeCompleted, (SEL *)&selRef_dateForLatestUpgradeCompleted, (SEL *)&selRef_dateForLatestUpgradeFailure);
  v75 = v24;

  v25 = objc_msgSend(v11, "contact");
  if (!v25)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v26 = v25;
  v27 = objc_msgSend(v25, "relationshipStorage");

  v28 = objc_msgSend(v27, *a4);
  v29 = sub_1003B7198(v28, (SEL *)&selRef_secureCloudMigrationCompleted, (SEL *)&selRef_dateForLatestMigrationCompleted, (SEL *)&selRef_dateForLatestMigrationFailed);
  v31 = v30;

  v32 = objc_msgSend(v11, "contact");
  if (!v32)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, "relationshipStorage");

  v35 = objc_msgSend(v34, *a4);
  v36 = objc_msgSend(v35, "secureCloudZoneName");

  if (v36)
  {
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v39 = v38;

  }
  else
  {
    v37 = 0;
    v39 = 0;
  }
  *a5 = 0x656E6961746E6F43;
  a5[1] = 0xE900000000000072;
  a5[2] = v78;
  a5[3] = v76;
  a5[4] = 0xD000000000000010;
  a5[5] = 0x800000010069D080;
  a5[6] = v77;
  a5[7] = v18;
  a5[8] = 0xD00000000000001DLL;
  a5[9] = 0x800000010069D0A0;
  a5[10] = v23;
  a5[11] = v75;
  a5[12] = 0xD000000000000017;
  a5[13] = 0x800000010069D0C0;
  a5[14] = v29;
  a5[15] = v31;
  a5[16] = 0x6D614E20656E6F5ALL;
  a5[17] = 0xE900000000000065;
  a5[18] = v37;
  a5[19] = v39;
  swift_bridgeObjectRetain(0xE900000000000072);
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRetain(0x800000010069D080);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(0x800000010069D0A0);
  swift_bridgeObjectRelease(v76, v40, v41, v42, v43, v44, v45, v46);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE900000000000072, v47, v48, v49, v50, v51, v52, v53);
  swift_bridgeObjectRelease(v18, v54, v55, v56, v57, v58, v59, v60);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x800000010069D080, v61, v62, v63, v64, v65, v66, v67);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x800000010069D0A0, v68, v69, v70, v71, v72, v73, v74);
}

id sub_1003B5F24()
{
  return sub_1003B5F30((SEL *)&selRef_primaryRemoteRelationship);
}

id sub_1003B5F30(SEL *a1)
{
  uint64_t v1;
  id result;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;

  result = objc_msgSend(*(id *)(v1+ *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0) + 28)), "contact");
  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(result, "relationshipStorage");

    v6 = objc_msgSend(v5, *a1);
    v7 = objc_msgSend(v6, "cloudType");
    if (v7)
    {
      if (v7 == (id)1)
        v8 = 0x646574617267694DLL;
      else
        v8 = 0x6E776F6E6B6E55;
    }
    else
    {
      v8 = 0x79636167654CLL;
    }

    return (id)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1003B6024()
{
  uint64_t v0;
  SEL v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  Swift::String v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  Swift::String v32;
  id v33;
  void *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  uint64_t v37;
  const char *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  Swift::String v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  Swift::String v54;
  Swift::String v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  SEL v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  Swift::String v70;
  SEL v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;

  _StringGuts.grow(_:)(50);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000, v1, v2, v3, v4, v5, v6, v7);
  v8 = *(void **)(v0 + *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0) + 28));
  v9 = objc_msgSend(v8, "displayName");
  if (v9)
  {
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  v14 = sub_100047110(&qword_10082B520);
  v15 = Optional.description.getter(v14);
  v17 = (CHWorkoutDetailHeartRateTableViewCell *)v16;
  swift_bridgeObjectRelease(v13, v16, v18, v19, v20, v21, v22, v23);
  v24._countAndFlagsBits = v15;
  v24._object = v17;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v17, v25, v26, v27, v28, v29, v30, v31);
  v32._countAndFlagsBits = 8238;
  v32._object = (void *)0xE200000000000000;
  String.append(_:)(v32);
  _StringGuts.grow(_:)(32);
  v33 = objc_msgSend(v8, "displayName", v11, v13);
  if (v33)
  {
    v34 = v33;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v36 = v35;

  }
  else
  {
    v36 = 0;
  }
  v37 = Optional.description.getter(v14);
  v39 = (CHWorkoutDetailHeartRateTableViewCell *)v38;
  swift_bridgeObjectRelease(v36, v38, v40, v41, v42, v43, v44, v45);
  v46._countAndFlagsBits = v37;
  v46._object = v39;
  String.append(_:)(v46);
  swift_bridgeObjectRelease(v39, v47, v48, v49, v50, v51, v52, v53);
  v54._object = (void *)0x800000010069D020;
  v54._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v54);
  swift_bridgeObjectRetain(0x800000010069CFF0);
  v55._countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  String.append(_:)(v55);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x800000010069CFF0, v56, v57, v58, v59, v60, v61, v62);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000, v63, v64, v65, v66, v67, v68, v69);
  swift_bridgeObjectRetain(0x800000010069CFF0);
  v70._countAndFlagsBits = 0xD000000000000032;
  v70._object = (void *)0x800000010069D040;
  String.append(_:)(v70);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x800000010069CFF0, v71, v72, v73, v74, v75, v76, v77);
  return 0xD00000000000002ELL;
}

uint64_t sub_1003B6258()
{
  _QWORD v1[2];
  unsigned __int8 v2;

  sub_100047110(&qword_100820D80);
  State.projectedValue.getter(v1);
  return Toggle.init(isOn:label:)(v1[0], v1[1], v2, sub_1003B62D0, 0, &type metadata for Text, &protocol witness table for Text);
}

void sub_1003B62D0(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0xD000000000000016;
  *(_QWORD *)(a1 + 8) = 0x800000010069CFD0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = _swiftEmptyArrayStorage;
}

double sub_1003B6300(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;

  v5 = type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_10033CF54(a3, (uint64_t)v8);
  v13 = type metadata accessor for MainActor(0);
  v14 = static MainActor.shared.getter(v13);
  v15 = *(unsigned __int8 *)(v6 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = v16 + v7;
  v18 = swift_allocObject(&unk_10079C800, v16 + v7 + 1, v15 | 7);
  *(_QWORD *)(v18 + 16) = v14;
  *(_QWORD *)(v18 + 24) = &protocol witness table for MainActor;
  sub_1003B7904((uint64_t)v8, v18 + v16);
  *(_BYTE *)(v18 + v17) = (_BYTE)a2;
  v19 = sub_10020D9C0((uint64_t)v11, (uint64_t)&unk_100831440, v18);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

uint64_t sub_1003B644C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1[4] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[5] = v2;
  v1[6] = static MainActor.shared.getter(v2);
  v3 = (_QWORD *)swift_task_alloc(dword_100831434);
  v1[7] = v3;
  *v3 = v1;
  v3[1] = sub_1003B64B4;
  return sub_1003B65A0();
}

uint64_t sub_1003B64B4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_BYTE *)(*(_QWORD *)v1 + 65) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003B652C, v4, v5);
}

uint64_t sub_1003B652C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_BYTE *)(v0 + 65);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  v3 = *(_QWORD *)(v2 + 8);
  *(_BYTE *)(v0 + 16) = *(_BYTE *)v2;
  *(_QWORD *)(v0 + 24) = v3;
  *(_BYTE *)(v0 + 64) = v1;
  v4 = sub_100047110(&qword_100820D80);
  State.wrappedValue.setter(v0 + 64, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B65A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1[2] = v0;
  v2 = type metadata accessor for UUID(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110((uint64_t *)&unk_10082E690);
  v1[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ActivitySharingSettings(0);
  v1[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[8] = v6;
  v1[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v1[10] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v1[11] = v8;
  v1[12] = v9;
  return swift_task_switch(sub_1003B6680, v8, v9);
}

uint64_t sub_1003B6680()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v2 = v0[8];
  v1 = v0[9];
  v3 = v0[7];
  v4 = v0[2];
  v5 = type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + *(int *)(v5 + 20), v3);
  v6 = objc_msgSend(*(id *)(v4 + *(int *)(v5 + 28)), "UUID");
  v7 = v0[6];
  if (v6)
  {
    v8 = v6;
    v10 = v0[4];
    v9 = v0[5];
    v11 = v0[3];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v6);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v7, v9, v11);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v11);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v11);
    if ((_DWORD)result != 1)
    {
      v13 = v0[6];
      v14 = v0[3];
      v15 = v0[4];
      v16 = UUID.uuidString.getter(result);
      v18 = v17;
      v0[13] = v17;
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      v19 = (_QWORD *)swift_task_alloc(async function pointer to ActivitySharingSettings.forceMigrationAllowed(friendIdentifier:)[1]);
      v0[14] = v19;
      *v19 = v0;
      v19[1] = sub_1003B67DC;
      return ActivitySharingSettings.forceMigrationAllowed(friendIdentifier:)(v16, v18);
    }
  }
  else
  {
    result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[4] + 56))(v0[6], 1, 1, v0[3]);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003B67DC(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v2 = *v1;
  v4 = *(CHWorkoutDetailHeartRateTableViewCell **)(*v1 + 104);
  v3 = *(_QWORD *)(*v1 + 112);
  v6 = *(_QWORD *)(*v1 + 64);
  v5 = *(_QWORD *)(*v1 + 72);
  v7 = *(_QWORD *)(*v1 + 56);
  *(_BYTE *)(*v1 + 120) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4, v8, v9, v10, v11, v12, v13, v14);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  return swift_task_switch(sub_1003B6864, *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96));
}

uint64_t sub_1003B6864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 120));
}

uint64_t sub_1003B68BC(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1
                                         + *(int *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0)
                                                  + 24))
                             + OBJC_IVAR___CHCloudDeviceProvider_activitySharingCloudDeviceProvider)
                 + OBJC_IVAR____TtC10FitnessApp34ActivitySharingCloudDeviceProvider_cloudDevices);
  KeyPath = swift_getKeyPath(&unk_100639CF0);
  swift_bridgeObjectRetain(v7);
  v2 = sub_100047110(&qword_100831410);
  v3 = sub_100047110(&qword_100831400);
  v4 = sub_100028384(&qword_100831418, &qword_100831410, (uint64_t)&protocol conformance descriptor for [A]);
  v5 = sub_100028384(&qword_1008313F8, &qword_100831400, (uint64_t)&protocol conformance descriptor for HStack<A>);
  return ForEach<>.init(_:id:content:)(&v7, KeyPath, sub_1003B6A24, 0, v2, v3, v4, &protocol witness table for String, v5);
}

void sub_1003B69D0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, "identifier");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

double sub_1003B6A24@<D0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  double result;
  __int128 v9;
  _OWORD v10[6];
  _OWORD v11[2];
  _BYTE v12[119];

  v3 = *a1;
  v4 = static VerticalAlignment.center.getter(a1);
  sub_1003B6B04(v3, (uint64_t)v10);
  *(_OWORD *)&v12[71] = v10[4];
  *(_OWORD *)&v12[87] = v10[5];
  *(_OWORD *)&v12[103] = v11[0];
  *(_OWORD *)&v12[7] = v10[0];
  *(_OWORD *)&v12[23] = v10[1];
  *(_OWORD *)&v12[39] = v10[2];
  *(_OWORD *)&v12[55] = v10[3];
  v5 = *(_OWORD *)&v12[96];
  *(_OWORD *)(a2 + 129) = *(_OWORD *)((char *)v11 + 9);
  v6 = *(_OWORD *)&v12[80];
  *(_OWORD *)(a2 + 81) = *(_OWORD *)&v12[64];
  *(_OWORD *)(a2 + 97) = v6;
  v7 = *(_OWORD *)&v12[32];
  *(_OWORD *)(a2 + 65) = *(_OWORD *)&v12[48];
  *(_OWORD *)(a2 + 49) = v7;
  result = *(double *)&v12[16];
  v9 = *(_OWORD *)v12;
  *(_OWORD *)(a2 + 33) = *(_OWORD *)&v12[16];
  *(_OWORD *)(a2 + 17) = v9;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_OWORD *)(a2 + 113) = v5;
  return result;
}

void sub_1003B6B04(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  uint64_t v38;
  char v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  char v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;

  v4 = sub_100047110(&qword_100823AE8);
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10082CC08);
  __chkstk_darwin(v7);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = static HorizontalAlignment.leading.getter(v10);
  sub_1003B6E58(a1, (uint64_t)&v67);
  v57 = v67;
  v58 = v68;
  v12 = v69;
  v13 = v71;
  v14 = v72;
  v15 = v73;
  v59 = v74;
  v60 = v70;
  if ((ASCloudDevice.isEligibleForMigration.getter() & 1) != 0)
  {
    v16 = Image.init(systemName:)(0xD000000000000015, 0x800000010069CFB0);
    static SymbolRenderingMode.monochrome.getter();
    v17 = type metadata accessor for SymbolRenderingMode(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 0, 1, v17);
    v18 = Image.symbolRenderingMode(_:)(v9, v16);
    swift_release(v16);
    v19 = sub_10001BE90((uint64_t)v9, &qword_10082CC08);
    v20 = static Color.green.getter(v19);
    v64 = v18;
    v65 = v20;
    v66 = 0;
  }
  else
  {
    v21 = Image.init(systemName:)(0xD00000000000001DLL, 0x800000010069CF90);
    v22 = enum case for Image.TemplateRenderingMode.original(_:);
    v23 = type metadata accessor for Image.TemplateRenderingMode(0);
    v55 = v14;
    v24 = v13;
    v25 = v11;
    v26 = *(_QWORD *)(v23 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v6, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v6, 0, 1, v23);
    v27 = Image.renderingMode(_:)(v6, v21);
    swift_release(v21);
    sub_10001BE90((uint64_t)v6, &qword_100823AE8);
    v64 = v27;
    v65 = 0;
    v66 = 1;
    v11 = v25;
    v13 = v24;
    v14 = v55;
  }
  v28 = sub_100047110(&qword_100831420);
  v29 = sub_1003B7C4C();
  _ConditionalContent<>.init(storage:)(&v64, v28, &type metadata for Image, v29, &protocol witness table for Image);
  v30 = v67;
  v31 = v68;
  v32 = v69;
  LOBYTE(v67) = 1;
  v33 = v12;
  LOBYTE(v64) = v12;
  v63 = v15;
  v56 = v15;
  v62 = 1;
  v61 = v69;
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v34 = v57;
  v35 = v58;
  *(_QWORD *)(a2 + 24) = v57;
  *(_QWORD *)(a2 + 32) = v35;
  *(_BYTE *)(a2 + 40) = v33;
  v36 = v59;
  v37 = v60;
  *(_QWORD *)(a2 + 48) = v60;
  *(_QWORD *)(a2 + 56) = v13;
  *(_QWORD *)(a2 + 64) = v14;
  *(_BYTE *)(a2 + 72) = v15;
  *(_QWORD *)(a2 + 80) = v36;
  *(_QWORD *)(a2 + 88) = 0;
  *(_BYTE *)(a2 + 96) = 1;
  *(_QWORD *)(a2 + 104) = v30;
  *(_QWORD *)(a2 + 112) = v31;
  *(_BYTE *)(a2 + 120) = v32;
  v38 = v30;
  v39 = v32;
  sub_1000E439C(v34, v35, v33);
  swift_bridgeObjectRetain(v37);
  LOBYTE(v37) = v56;
  sub_1000E439C(v13, v14, v56);
  swift_bridgeObjectRetain(v36);
  sub_1003B7CD0(v38, v31, v39);
  sub_1003B7CF8(v38, v31, v39);
  sub_1000E4458(v34, v35, v33);
  swift_bridgeObjectRelease(v60, v40, v41, v42, v43, v44, v45, v46);
  sub_1000E4458(v13, v14, (char)v37);
  swift_bridgeObjectRelease(v36, v47, v48, v49, v50, v51, v52, v53);
}

void sub_1003B6E58(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  Swift::String v10;
  id v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  Swift::String v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  Swift::String v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  __n128 v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  id v31;
  char v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  char v45;
  char v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];

  v4 = ASCloudDevice.deviceName.getter();
  v68 = v5;
  v69 = v4;
  v6 = objc_msgSend(a1, "osVersion");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v70[0] = v7;
  v70[1] = v9;
  v10._countAndFlagsBits = 10272;
  v10._object = (void *)0xE200000000000000;
  String.append(_:)(v10);
  v11 = objc_msgSend(a1, "buildNumber");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v14, v16, v17, v18, v19, v20, v21, v22);
  v23._countAndFlagsBits = 41;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  v24 = v9;
  v26 = static Font.callout.getter(v25);
  v28 = Text.font(_:)(v26, v70[0], v24, 0, _swiftEmptyArrayStorage, v27);
  v30 = (uint64_t)v29;
  v32 = (char)v31;
  v34 = v33;
  swift_bridgeObjectRelease(v24, v29, v31, v33, v35, v36, v37, v38);
  v39 = swift_release(v26);
  LOBYTE(v24) = v32 & 1;
  LODWORD(v70[0]) = static HierarchicalShapeStyle.secondary.getter(v39);
  v40 = Text.foregroundStyle<A>(_:)(v70, v28, v30, v32 & 1, v34, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v42 = v41;
  v44 = v43;
  v46 = v45 & 1;
  sub_1000E4458(v28, v30, (char)v24);
  swift_bridgeObjectRelease(v34, v47, v48, v49, v50, v51, v52, v53);
  LOBYTE(v70[0]) = 0;
  *(_QWORD *)a2 = v69;
  *(_QWORD *)(a2 + 8) = v68;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a2 + 32) = v40;
  *(_QWORD *)(a2 + 40) = v42;
  *(_BYTE *)(a2 + 48) = v46;
  *(_QWORD *)(a2 + 56) = v44;
  sub_1000E439C(v69, v68, 0);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  sub_1000E439C(v40, v42, v46);
  swift_bridgeObjectRetain(v44);
  sub_1000E4458(v40, v42, v46);
  swift_bridgeObjectRelease(v44, v54, v55, v56, v57, v58, v59, v60);
  sub_1000E4458(v69, v68, v70[0]);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage, v61, v62, v63, v64, v65, v66, v67);
}

uint64_t sub_1003B7064(void *a1, void *a2)
{
  if ((objc_msgSend(a1, "secureCloudUpgradeCompleted") & 1) != 0)
    return 0x64656C62616E45;
  if ((objc_msgSend(a1, "secureCloudUpgradeAvailable") & 1) != 0)
    return 0x6C62616C69617641;
  if ((objc_msgSend(a1, "secureCloudMigrationAvailable") & 1) != 0)
    return 0xD000000000000013;
  if (objc_msgSend(a2, "secureCloudMigrationCompleted"))
    return 0xD000000000000012;
  return 0x616C696176616E55;
}

uint64_t sub_1003B7160(void *a1)
{
  return sub_1003B7198(a1, (SEL *)&selRef_secureCloudUpgradeCompleted, (SEL *)&selRef_dateForLatestUpgradeCompleted, (SEL *)&selRef_dateForLatestUpgradeFailure);
}

uint64_t sub_1003B717C(void *a1)
{
  return sub_1003B7198(a1, (SEL *)&selRef_secureCloudMigrationCompleted, (SEL *)&selRef_dateForLatestMigrationCompleted, (SEL *)&selRef_dateForLatestMigrationFailed);
}

uint64_t sub_1003B7198(void *a1, SEL *a2, SEL *a3, SEL *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  Swift::String v27;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  Swift::String v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;

  v8 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v51 - v12;
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v52 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v51 - v18;
  *(_QWORD *)&v21 = __chkstk_darwin(v20).n128_u64[0];
  v23 = (char *)&v51 - v22;
  if (objc_msgSend(a1, *a2, v21))
  {
    v24 = objc_msgSend(a1, *a3);
    if (v24)
    {
      v25 = v24;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v24);

      v26 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v26(v13, v19, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
      {
        v26(v23, v13, v14);
        v27 = Date.formatted()();
        object = (CHWorkoutDetailHeartRateTableViewCell *)v27._object;
        v53 = 0x3A73736563637553;
        v54 = 0xE900000000000020;
        String.append(_:)(v27);
        swift_bridgeObjectRelease(object, v29, v30, v31, v32, v33, v34, v35);
        v36 = v53;
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        return v36;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    }
    sub_10001BE90((uint64_t)v13, (uint64_t *)&unk_100828370);
  }
  v36 = 0x616C696176616E55;
  if (objc_msgSend(a1, "secureCloudUpgradeFailed"))
  {
    v37 = objc_msgSend(a1, *a4);
    if (v37)
    {
      v38 = v37;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v37);

      v39 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v39(v10, v19, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14) != 1)
      {
        v40 = v52;
        v39(v52, v10, v14);
        v41 = Date.formatted()();
        v42 = (CHWorkoutDetailHeartRateTableViewCell *)v41._object;
        v53 = 0x203A64656C696146;
        v54 = 0xE800000000000000;
        String.append(_:)(v41);
        swift_bridgeObjectRelease(v42, v43, v44, v45, v46, v47, v48, v49);
        v36 = v53;
        (*(void (**)(char *, uint64_t))(v15 + 8))(v40, v14);
        return v36;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v10, 1, 1, v14);
    }
    sub_10001BE90((uint64_t)v10, (uint64_t *)&unk_100828370);
  }
  return v36;
}

uint64_t sub_1003B74E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v5 + 120) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  v6 = type metadata accessor for UUID(0);
  *(_QWORD *)(v5 + 24) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 32) = v7;
  *(_QWORD *)(v5 + 40) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110((uint64_t *)&unk_10082E690);
  *(_QWORD *)(v5 + 48) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActivitySharingSettings(0);
  *(_QWORD *)(v5 + 56) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 64) = v10;
  *(_QWORD *)(v5 + 72) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 80) = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 88) = v12;
  *(_QWORD *)(v5 + 96) = v13;
  return swift_task_switch(sub_1003B75C4, v12, v13);
}

uint64_t sub_1003B75C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + *(int *)(v5 + 20), v3);
  v6 = objc_msgSend(*(id *)(v4 + *(int *)(v5 + 28)), "UUID");
  v7 = *(_QWORD *)(v0 + 48);
  if (v6)
  {
    v8 = v6;
    v10 = *(_QWORD *)(v0 + 32);
    v9 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 24);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v6);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v7, v9, v11);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v11);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v11);
    if ((_DWORD)result != 1)
    {
      v13 = *(_QWORD *)(v0 + 48);
      v14 = *(_QWORD *)(v0 + 24);
      v15 = *(_QWORD *)(v0 + 32);
      v16 = UUID.uuidString.getter(result);
      v18 = v17;
      *(_QWORD *)(v0 + 104) = v17;
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      v19 = (_QWORD *)swift_task_alloc(async function pointer to ActivitySharingSettings.updateAllowForcedMigration(_:friendIdentifier:)[1]);
      *(_QWORD *)(v0 + 112) = v19;
      *v19 = v0;
      v19[1] = sub_1003B7728;
      return ActivitySharingSettings.updateAllowForcedMigration(_:friendIdentifier:)(*(unsigned __int8 *)(v0 + 120), v16, v18);
    }
  }
  else
  {
    result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 32) + 56))(*(_QWORD *)(v0 + 48), 1, 1, *(_QWORD *)(v0 + 24));
  }
  __break(1u);
  return result;
}

uint64_t sub_1003B7728()
{
  uint64_t *v0;
  uint64_t v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v1 = *v0;
  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(*v0 + 104);
  v4 = *(_QWORD *)(*v0 + 64);
  v3 = *(_QWORD *)(*v0 + 72);
  v5 = *(_QWORD *)(*v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  swift_bridgeObjectRelease(v2, v6, v7, v8, v9, v10, v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return swift_task_switch(sub_1003B77A4, *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t sub_1003B77A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1003B77F8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;

  *(_QWORD *)a6 = static HorizontalAlignment.center.getter(a1, a2, a3, a4, a5);
  *(_QWORD *)(a6 + 8) = 0;
  *(_BYTE *)(a6 + 16) = 1;
  v8 = sub_100047110(&qword_100831330);
  sub_1003B3AF8(v6, a6 + *(int *)(v8 + 44));
}

uint64_t sub_1003B7840@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1003B3D3C(*(_QWORD *)(v1 + 16), a1);
}

void sub_1003B7848(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1003B48C4(*(_QWORD *)(v1 + 16), a1);
}

void sub_1003B7850(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1003B4FEC(*(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 16), a1);
}

void sub_1003B7858(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1003B551C(*(_QWORD *)(v1 + 16), (SEL *)&selRef_primaryRelationship, a1);
}

void sub_1003B7878(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1003B551C(*(_QWORD *)(v1 + 16), (SEL *)&selRef_primaryRemoteRelationship, a1);
}

void sub_1003B7898(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1003B5B88(*(_QWORD *)(v1 + 16), (SEL *)&selRef_primaryRelationship, (SEL *)&selRef_legacyRelationship, (SEL *)&selRef_secureCloudRelationship, a1);
}

void sub_1003B78C8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1003B5B88(*(_QWORD *)(v1 + 16), (SEL *)&selRef_primaryRemoteRelationship, (SEL *)&selRef_legacyRemoteRelationship, (SEL *)&selRef_secureCloudRemoteRelationship, a1);
}

uint64_t sub_1003B78F8()
{
  return sub_1003B6258();
}

uint64_t sub_1003B7904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1003B7948(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0)
                                      - 8)
                          + 80);
  return sub_1003B6300(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_1003B7994()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008313D0;
  if (!qword_1008313D0)
  {
    v1 = sub_100007050(&qword_100831360);
    sub_100028384(&qword_1008313C8, &qword_1008313C0, (uint64_t)&protocol conformance descriptor for Toggle<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, &qword_1008313D0);
  }
  return result;
}

uint64_t sub_1003B7A20()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  v8 = v7 + v1[5];
  v9 = type metadata accessor for ActivitySharingSettings(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003B7AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0)
                                      - 8)
                          + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_1008313DC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1000EA380;
  return sub_1003B644C(v3);
}

uint64_t sub_1003B7B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100831370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003B7B70()
{
  uint64_t v0;

  return sub_1003B68BC(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1003B7B78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008313F0;
  if (!qword_1008313F0)
  {
    v1 = sub_100007050(&qword_1008313E8);
    sub_100028384(&qword_1008313F8, &qword_100831400, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1008313F0);
  }
  return result;
}

uint64_t sub_1003B7BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100831370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

const char *sub_1003B7C3C()
{
  return "identifier";
}

unint64_t sub_1003B7C4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100831428;
  if (!qword_100831428)
  {
    v1 = sub_100007050(&qword_100831420);
    sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, &qword_100831428);
  }
  return result;
}

uint64_t sub_1003B7CD0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    swift_retain(a1);
    a1 = a2;
  }
  return swift_retain(a1);
}

uint64_t sub_1003B7CF8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  result = swift_release(a1);
  if ((a3 & 1) == 0)
    return swift_release(a2);
  return result;
}

uint64_t sub_1003B7D30()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  v8 = v0 + v4 + v1[5];
  v9 = type metadata accessor for ActivitySharingSettings(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1003B7DE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for ActivitySharingFriendDetailInternalDashboardView(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_BYTE *)(v1 + v5 + *(_QWORD *)(v4 + 64));
  v10 = (_QWORD *)swift_task_alloc(dword_10083143C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1000DA0E4;
  return sub_1003B74E0(a1, v6, v7, v8, v9);
}

unint64_t sub_1003B7E7C()
{
  unint64_t result;

  result = qword_100831448;
  if (!qword_100831448)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_100831448);
  }
  return result;
}

uint64_t destroy for InfoView(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for InfoView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for InfoView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for InfoView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

ValueMetadata *type metadata accessor for InfoView()
{
  return &type metadata for InfoView;
}

uint64_t sub_1003B7FE4()
{
  return sub_100028384(&qword_100831458, &qword_100831460, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_1003B8010(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B5FE0, 1);
}

void sub_1003B8020(uint64_t a1@<X0>, CHWorkoutDetailHeartRateTableViewCell *a2@<X1>, uint64_t a3@<X2>, CHWorkoutDetailHeartRateTableViewCell *a4@<X3>, uint64_t a5@<X8>)
{
  double v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  const char *v16;
  id v17;
  char v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  id v32;
  char v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  char v46;
  char v47;
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  SEL v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  SEL v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  _DWORD v72[5];

  *(_QWORD *)&v10 = swift_bridgeObjectRetain(a2).n128_u64[0];
  v11 = static Font.body.getter(v10);
  static Font.Weight.bold.getter(v12);
  v13 = Font.weight(_:)(v11);
  v14 = swift_release(v11);
  v15 = Text.font(_:)(v13, a1, a2, 0, _swiftEmptyArrayStorage, v14);
  v69 = (uint64_t)v16;
  v70 = v15;
  v18 = (char)v17;
  v71 = v19;
  swift_bridgeObjectRelease(a2, v16, v17, v19, v20, v21, v22, v23);
  swift_release(v13);
  v24 = v18 & 1;
  if (a4)
  {
    v25 = a4;
  }
  else
  {
    a3 = 0x29656E6F6E28;
    v25 = (CHWorkoutDetailHeartRateTableViewCell *)0xE600000000000000;
  }
  v26 = swift_bridgeObjectRetain(a4);
  v27 = static Font.footnote.getter(v26);
  v29 = Text.font(_:)(v27, a3, v25, 0, _swiftEmptyArrayStorage, v28);
  v31 = (uint64_t)v30;
  v33 = (char)v32;
  v35 = v34;
  swift_bridgeObjectRelease(v25, v30, v32, v34, v36, v37, v38, v39);
  v40 = swift_release(v27);
  LOBYTE(v27) = v33 & 1;
  v72[0] = static HierarchicalShapeStyle.secondary.getter(v40);
  v41 = Text.foregroundStyle<A>(_:)(v72, v29, v31, v33 & 1, v35, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v43 = v42;
  v45 = v44;
  v47 = v46 & 1;
  sub_1000E4458(v29, v31, v27);
  swift_bridgeObjectRelease(v35, v48, v49, v50, v51, v52, v53, v54);
  *(_QWORD *)a5 = v70;
  *(_QWORD *)(a5 + 8) = v69;
  *(_BYTE *)(a5 + 16) = v24;
  *(_QWORD *)(a5 + 24) = v71;
  *(_QWORD *)(a5 + 32) = v41;
  *(_QWORD *)(a5 + 40) = v43;
  *(_BYTE *)(a5 + 48) = v47;
  *(_QWORD *)(a5 + 56) = v45;
  sub_1000E439C(v70, v69, v24);
  swift_bridgeObjectRetain(v71);
  sub_1000E439C(v41, v43, v47);
  swift_bridgeObjectRetain(v45);
  sub_1000E4458(v41, v43, v47);
  swift_bridgeObjectRelease(v45, v55, v56, v57, v58, v59, v60, v61);
  sub_1000E4458(v70, v69, v24);
  swift_bridgeObjectRelease(v71, v62, v63, v64, v65, v66, v67, v68);
}

__n128 sub_1003B821C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  __n128 result;
  __int128 v14;
  __n128 v15;
  char v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  uint64_t v20;

  v4 = *v2;
  v5 = (CHWorkoutDetailHeartRateTableViewCell *)v2[1];
  v7 = v2[2];
  v6 = (CHWorkoutDetailHeartRateTableViewCell *)v2[3];
  v8 = static HorizontalAlignment.leading.getter(a1);
  sub_1003B8020(v4, v5, v7, v6, (uint64_t)&v15);
  v9 = v16;
  v10 = v17;
  v11 = v19;
  v12 = v20;
  result = v15;
  v14 = v18;
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(__n128 *)(a2 + 24) = result;
  *(_BYTE *)(a2 + 40) = v9;
  *(_QWORD *)(a2 + 48) = v10;
  *(_OWORD *)(a2 + 56) = v14;
  *(_BYTE *)(a2 + 72) = v11;
  *(_QWORD *)(a2 + 80) = v12;
  return result;
}

uint64_t sub_1003B82B4()
{
  return sub_100028384(&qword_100826760, &qword_100826750, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_1003B82E0@<X0>(_QWORD *a1@<X8>)
{
  char *v1;
  uint64_t DataType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t DetailsView;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  _QWORD *v25;
  uint64_t v27;
  id v28;
  char *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  _BYTE v36[24];
  char v37[24];

  DataType = type metadata accessor for TrainingLoadDataType(0);
  v4 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_1008314C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - v11;
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController____lazy_storage___loadDetailView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController____lazy_storage___loadDetailView], v37, 0, 0);
  sub_1003BA028(v13, (uint64_t)v12);
  DetailsView = type metadata accessor for LoadDetailsView(0);
  v15 = *(_QWORD *)(DetailsView - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, DetailsView) != 1)
    return sub_100047C88((uint64_t)v12, (uint64_t)a1, type metadata accessor for LoadDetailsView);
  sub_10001BE90((uint64_t)v12, &qword_1008314C0);
  v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_context];
  v34 = a1;
  v17 = *(void **)(v16 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager);
  v35 = v15;
  v18 = *(char **)(v16 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext);
  v28 = *(id *)(v16 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_stackFormattingManager);
  v30 = *(id *)&v18[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
  v31 = *(id *)(v16 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager);
  v33 = *(id *)(v16 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider);
  v19 = *(_QWORD *)(v16 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutImageProvider);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for TrainingLoadDataType.workout(_:), DataType);
  v32 = v17;
  v29 = v18;
  v20 = v28;
  v21 = v30;
  v22 = v31;
  v23 = v33;
  swift_retain(v19);
  v24 = v1;
  v27 = (uint64_t)v6;
  v25 = v34;
  sub_1004DACB8((uint64_t)v32, (uint64_t)v29, (uint64_t)v20, (uint64_t)v21, (uint64_t)v22, (uint64_t)v23, v19, (uint64_t)v1, v34, v27, 0);
  sub_10004F8C8((uint64_t)v25, (uint64_t)v9, type metadata accessor for LoadDetailsView);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v9, 0, 1, DetailsView);
  swift_beginAccess(v13, v36, 33, 0);
  sub_1003BA070((uint64_t)v9, v13);
  return swift_endAccess(v36);
}

char *sub_1003B85C0(void *a1)
{
  char *v1;
  uint64_t DetailsView;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  objc_class *DetailViewController;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  char *result;
  char *v31;
  char *v32;
  char *v33;
  id v34;
  void *v35;
  char *v36;
  id v37;
  NSString v38;
  id v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  NSString v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  NSString v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  objc_super v64;

  DetailsView = type metadata accessor for LoadDetailsView(0);
  v4 = *(_QWORD *)(DetailsView - 8);
  __chkstk_darwin(DetailsView);
  v6 = (uint64_t *)((char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100047110(&qword_1008314D0);
  v62 = *(_QWORD *)(v7 - 8);
  v63 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v60 - v12;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_subView] = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(&v1[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController____lazy_storage___loadDetailView], 1, 1, DetailsView, v11);
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_context] = a1;
  DetailViewController = (objc_class *)type metadata accessor for LoadDetailViewController(0);
  v64.receiver = v1;
  v64.super_class = DetailViewController;
  v15 = a1;
  v16 = (char *)objc_msgSendSuper2(&v64, "initWithNibName:bundle:", 0, 0);
  sub_1003B82E0(v6);
  v61 = v15;
  v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_balanceDataProvider];
  v18 = type metadata accessor for BalanceDataProvider(0);
  v19 = sub_1000083D8(&qword_1008314D8, type metadata accessor for LoadDetailsView, (uint64_t)&unk_100641968);
  v20 = sub_1000083D8(&qword_10081FEB8, type metadata accessor for BalanceDataProvider, (uint64_t)&unk_100628650);
  v21 = DetailsView;
  v22 = v62;
  v23 = v63;
  View.environment<A>(_:)(v17, v21, v18, v19, v20);
  v24 = (uint64_t)v6;
  v25 = v13;
  sub_100011F54(v24, type metadata accessor for LoadDetailsView);
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v9, v13, v23);
  v26 = objc_allocWithZone((Class)sub_100047110(&qword_1008314E0));
  v27 = (void *)UIHostingController.init(rootView:)(v9);
  v28 = objc_msgSend(v27, "view");
  v29 = *(void **)&v16[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_subView];
  *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_subView] = v28;

  objc_msgSend(v16, "addChildViewController:", v27);
  result = (char *)objc_msgSend(v16, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v31 = result;
  result = (char *)objc_msgSend(v27, "view");
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v32 = result;
  objc_msgSend(v31, "addSubview:", result);

  result = (char *)objc_msgSend(v16, "view");
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v33 = result;
  v34 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  objc_msgSend(v33, "setBackgroundColor:", v34);

  v35 = (void *)objc_opt_self(NSBundle);
  v36 = v16;
  v37 = objc_msgSend(v35, "mainBundle");
  v38 = String._bridgeToObjectiveC()();
  v39 = objc_msgSend(v37, "localizedStringForKey:value:table:", v38, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v41 = v40;

  v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v41, v43, v44, v45, v46, v47, v48, v49);
  objc_msgSend(v36, "setTitle:", v42);

  v50 = objc_msgSend(v36, "navigationController");
  if (v50)
  {
    v51 = v50;
    objc_msgSend(v50, "setToolbarHidden:", 0);

  }
  v52 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 4, 3, 17.0);
  v53 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v54 = v52;
  v55 = String._bridgeToObjectiveC()();
  v56 = objc_msgSend((id)objc_opt_self(UIImage), "smm_systemImageNamed:withConfiguration:", v55, v54);

  objc_msgSend(v53, "setImage:forState:", v56, 0);
  objc_msgSend(v53, "addTarget:action:forControlEvents:", v36, "didTapOnInfoButton:", 64);
  v57 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v53);
  v58 = objc_msgSend(v36, "navigationItem");
  v59 = v57;
  objc_msgSend(v58, "setRightBarButtonItem:", v59);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v23);
  return v36;
}

void sub_1003B8CB8()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  objc_super v28;

  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for LoadDetailViewController(0);
  objc_msgSendSuper2(&v28, "viewDidLoad");
  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_subView];
  if (!v1)
    goto LABEL_13;
  v2 = v1;
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  v4 = v3;
  objc_msgSend(v3, "addSubview:", v2);

  v5 = objc_msgSend(v2, "leadingAnchor");
  v6 = objc_msgSend(v0, "view");
  if (!v6)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "safeAreaLayoutGuide");

  v9 = objc_msgSend(v8, "leadingAnchor");
  v10 = objc_msgSend(v5, "constraintEqualToAnchor:", v9);

  objc_msgSend(v10, "setActive:", 1);
  v11 = objc_msgSend(v2, "trailingAnchor");
  v12 = objc_msgSend(v0, "view");
  if (!v12)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, "safeAreaLayoutGuide");

  v15 = objc_msgSend(v14, "trailingAnchor");
  v16 = objc_msgSend(v11, "constraintEqualToAnchor:", v15);

  objc_msgSend(v16, "setActive:", 1);
  v17 = objc_msgSend(v2, "topAnchor");
  v18 = objc_msgSend(v0, "view");
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v18, "safeAreaLayoutGuide");

    v21 = objc_msgSend(v20, "topAnchor");
    v22 = objc_msgSend(v17, "constraintEqualToAnchor:", v21);

    objc_msgSend(v22, "setActive:", 1);
    v23 = objc_msgSend(v2, "bottomAnchor");
    v24 = objc_msgSend(v0, "view");
    if (v24)
    {
      v25 = v24;
      v26 = objc_msgSend(v24, "bottomAnchor");

      v27 = objc_msgSend(v23, "constraintEqualToAnchor:", v26);
      objc_msgSend(v27, "setActive:", 1);

      return;
    }
    goto LABEL_12;
  }
LABEL_11:
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000058, 0x800000010069D2F0, "FitnessApp/LoadDetailViewController.swift", 41, 2, 62, 0);
  __break(1u);
}

uint64_t sub_1003B91BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

uint64_t sub_1003B91F8(int a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v23 = a1;
  v5 = type metadata accessor for TrainingLoadURLBuilder.Source(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static WOLog.trainingLoad.getter(v11);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(8, -1);
    v22 = a2;
    v18 = v17;
    *(_DWORD *)v17 = 67109120;
    v24 = v23 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v17 + 4);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, a3, v18, 8u);
    v19 = v18;
    a2 = v22;
    swift_slowDealloc(v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  type metadata accessor for EffortUtilities(0, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for TrainingLoadURLBuilder.Source.fitness(_:), v5);
  static EffortUtilities.sendDidDeeplinktoVitalsAnalyticsEvent(source:vitalsState:)(v8, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1003B93B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  int v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t, uint64_t);
  void *v16;
  _BYTE v17[40];

  v2 = sub_100047110((uint64_t *)&unk_100828380);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for FitnessPlusStackViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1000252E0(a1, (uint64_t)v17);
  v9 = sub_100047110((uint64_t *)&unk_10082E5B0);
  v10 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  if (swift_dynamicCast(&v16, v17, v9, v10, 6))
  {
    v11 = v16;
    sub_1003B982C((uint64_t)v16);

  }
  else
  {
    sub_1000252E0(a1, (uint64_t)v17);
    v12 = type metadata accessor for MindfulnessSessionViewModel(0);
    if (swift_dynamicCast(&v16, v17, v9, v12, 6))
    {
      v13 = v16;
      sub_1003B9A5C(v16);

    }
    else
    {
      sub_1000252E0(a1, (uint64_t)v17);
      v14 = swift_dynamicCast(v4, v17, v9, v5, 6);
      v15 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      if (v14)
      {
        v15(v4, 0, 1, v5);
        sub_100047C88((uint64_t)v4, (uint64_t)v8, type metadata accessor for FitnessPlusStackViewModel);
        sub_1003B9B38((uint64_t)v8);
        sub_100011F54((uint64_t)v8, type metadata accessor for FitnessPlusStackViewModel);
      }
      else
      {
        v15(v4, 1, 1, v5);
        sub_10001BE90((uint64_t)v4, (uint64_t *)&unk_100828380);
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000045, 0x800000010069D270, "FitnessApp/LoadDetailViewController.swift", 41, 2, 104, 0);
        __break(1u);
      }
    }
  }
}

void sub_1003B95E8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_context);
  v3 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_historyDataProvider);
  v4 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext);
  v5 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager);
  v7 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_healthStore);
  v8 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiModel);
  v9 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_badgeImageFactory);
  v10 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager);
  v11 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementLocalizationProvider);
  v12 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator);
  v17 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementResourceProvider);
  v18 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_chAwardsDataProvider);
  v19 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionFormattingManager);
  v20 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_stackFormattingManager);
  objc_allocWithZone((Class)type metadata accessor for HistoryListViewController());
  sub_1004FFCB8(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v17, v18, v19, v20);
  v22 = v13;
  v14 = objc_msgSend(v21, "navigationController");
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, "pushViewController:animated:", v22, a1 & 1);

  }
}

void sub_1003B982C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  objc_class *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  objc_super v14;
  _QWORD v15[6];

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_context);
  v3 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider);
  v15[3] = type metadata accessor for AAUIAwardsDataProvider(0);
  v15[4] = &protocol witness table for AAUIAwardsDataProvider;
  v15[0] = v3;
  v4 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  v5 = objc_allocWithZone(v4);
  sub_1000252E0((uint64_t)v15, (uint64_t)v5 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v14.receiver = v5;
  v14.super_class = v4;
  v6 = v3;
  v7 = objc_msgSendSuper2(&v14, "init");
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v15);

  v8 = objc_msgSend(objc_allocWithZone((Class)CHWorkoutDetailViewController), "initWithWorkout:workoutActivity:healthStore:model:fitnessAppContext:workoutFormattingManager:workoutDataProvider:badgeImageFactory:friendListManager:achievementLocalizationProvider:pauseRingsCoordinator:achievementResourceProvider:formattingManager:awardsDataProvider:", a1, 0, *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDataProvider)+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_healthStore), *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiModel), *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext), *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager), *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutDataProvider), *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_badgeImageFactory), *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager), *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementLocalizationProvider), *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator), *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementResourceProvider), *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager), v7);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v12, "navigationController");
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, "pushViewController:animated:", v9, 1);

    }
  }

}

void sub_1003B9A5C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  char *v9;

  v2 = v1;
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_context];
  v5 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext);
  v6 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionFormattingManager);
  objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionDetailViewController(0));
  v9 = sub_1002C26F0(a1, v5, v6);
  v7 = objc_msgSend(v2, "navigationController");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "pushViewController:animated:", v9, 1);

  }
}

void sub_1003B9B38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  objc_class *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  char *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  char *v43;
  id v44;
  objc_super v45;
  _QWORD v46[5];

  v3 = type metadata accessor for FitnessPlusStackViewModel(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v5;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_context);
  v7 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider);
  v46[3] = type metadata accessor for AAUIAwardsDataProvider(0);
  v46[4] = &protocol witness table for AAUIAwardsDataProvider;
  v46[0] = v7;
  v8 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  v9 = objc_allocWithZone(v8);
  sub_1000252E0((uint64_t)v46, (uint64_t)v9 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v45.receiver = v9;
  v45.super_class = v8;
  v10 = v7;
  v42 = objc_msgSendSuper2(&v45, "init");
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v46);

  sub_10004F8C8(a1, (uint64_t)v5, type metadata accessor for FitnessPlusStackViewModel);
  v11 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_historyDataProvider);
  v12 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager);
  v13 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext);
  v14 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_healthStore);
  v15 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiModel);
  v16 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_badgeImageFactory);
  v17 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager);
  v18 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementLocalizationProvider);
  v19 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator);
  v34 = *(id *)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementResourceProvider);
  v37 = *(id *)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_stackFormattingManager);
  v39 = *(id *)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager);
  v40 = *(id *)(v6 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionFormattingManager);
  v41 = objc_allocWithZone((Class)type metadata accessor for StackDetailViewController(0));
  v38 = v11;
  v36 = v12;
  v35 = v13;
  v20 = v14;
  v21 = v15;
  v22 = v16;
  v23 = v17;
  v24 = v18;
  v25 = v19;
  v26 = v34;
  v27 = v42;
  v28 = v37;
  v29 = v39;
  v30 = v40;
  v31 = sub_100234484((uint64_t)v43, v38, v36, v35, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
  v32 = objc_msgSend(v44, "navigationController");
  if (v32)
  {
    v33 = v32;
    objc_msgSend(v32, "pushViewController:animated:", v31, 1);

  }
}

id sub_1003B9E84()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LoadDetailViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003B9F0C()
{
  return type metadata accessor for LoadDetailViewController(0);
}

uint64_t type metadata accessor for LoadDetailViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1008314A8;
  if (!qword_1008314A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LoadDetailViewController);
  return result;
}

void sub_1003B9F50(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = "\b";
  sub_1003B9FD4(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

void sub_1003B9FD4(uint64_t a1)
{
  uint64_t DetailsView;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1008314B8)
  {
    DetailsView = type metadata accessor for LoadDetailsView(255);
    v3 = type metadata accessor for Optional(a1, DetailsView);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1008314B8);
  }
}

uint64_t sub_1003BA028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_1008314C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003BA070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_1008314C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1003BA0BC(uint64_t a1)
{
  sub_1003BA114(a1, &enum case for BalanceURLBuilder.Route.balanceRoom(_:), (uint64_t)&unk_10079C8E0, (uint64_t)sub_1003BA0E4, (uint64_t)&unk_10079C8F8);
}

uint64_t sub_1003BA0E4(int a1)
{
  return sub_1003BA504(a1, "Launching Overnight Metrics Successful: %{BOOL}d");
}

void sub_1003BA0F0(uint64_t a1)
{
  sub_1003BA114(a1, &enum case for BalanceURLBuilder.Route.balanceOnboarding(_:), (uint64_t)&unk_10079C930, (uint64_t)sub_1003BA4F8, (uint64_t)&unk_10079C948);
}

void sub_1003BA114(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSURL *v26;
  void *v27;
  void *v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  Class isa;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  double v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD aBlock[5];
  uint64_t v61;

  v58 = a4;
  v59 = a5;
  v56 = a1;
  v57 = a3;
  v6 = type metadata accessor for EffortUtilities.OvernightVitalsState(0);
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  v55 = *(_QWORD *)(v53 + 64);
  v7 = __chkstk_darwin(v6);
  v52 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for BalanceURLBuilder.Source(0, v7);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_1008314E8);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for BalanceURLBuilder(0, v14);
  v49 = *(_QWORD *)(v17 - 8);
  v50 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  BalanceURLBuilder.init()();
  v23 = *a2;
  v24 = type metadata accessor for BalanceURLBuilder.Route(0);
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v16, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v16, 0, 1, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for BalanceURLBuilder.Source.fitness(_:), v9);
  BalanceURLBuilder.url(route:source:)(v16, v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_10001BE90((uint64_t)v16, &qword_1008314E8);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v50);
  URL._bridgeToObjectiveC()(v26);
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v48);
  v29 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435758((uint64_t)&_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1000083D8((unint64_t *)&qword_10081E820, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100622638);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v29, v31, v32, v33, v34, v35, v36, v37);
  v39 = v52;
  v38 = v53;
  v40 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v56, v54);
  v41 = *(unsigned __int8 *)(v38 + 80);
  v42 = v38;
  v43 = (v41 + 16) & ~v41;
  v44 = swift_allocObject(v57, v43 + v55, v41 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v44 + v43, v39, v40);
  aBlock[4] = v58;
  v61 = v44;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003B91BC;
  aBlock[3] = v59;
  v45 = _Block_copy(aBlock);
  *(_QWORD *)&v46 = swift_release(v61).n128_u64[0];
  v47 = v51;
  objc_msgSend(v51, "openURL:options:completionHandler:", v28, isa, v45, v46);
  _Block_release(v45);

}

uint64_t sub_1003BA498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for EffortUtilities.OvernightVitalsState(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003BA4F8(int a1)
{
  return sub_1003BA504(a1, "Launching Overnight Metrics Onboarding Successful: %{BOOL}d");
}

uint64_t sub_1003BA504(int a1, const char *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EffortUtilities.OvernightVitalsState(0) - 8) + 80);
  return sub_1003B91F8(a1, v2 + ((v5 + 16) & ~v5), a2);
}

void *sub_1003BA554(uint64_t a1, int a2, int a3, uint64_t a4, char a5)
{
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  objc_class *v34;
  Class isa;
  uint64_t v36;
  unsigned __int8 v37;
  void *v38;
  objc_class *v39;
  objc_class *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  void *v64;
  id v65;
  void *v66;
  __n128 v67;
  void *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  id v75;
  char *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  char *v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  int v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t);
  _QWORD aBlock[5];
  uint64_t v119;

  v6 = v5;
  v116 = a4;
  v101 = a3;
  LODWORD(v117) = a2;
  v115 = a5 & 1;
  v100 = type metadata accessor for DispatchWorkItemFlags(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for DispatchQoS(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for DispatchTime(0);
  v92 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v91 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v93 = (char *)&v91 - v11;
  v13 = static os_log_type_t.default.getter(v12);
  v14 = (void *)HKLogActivity;
  v15 = sub_100047110((uint64_t *)&unk_100827460);
  v16 = swift_allocObject(v15, 152, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100624A40;
  *(_QWORD *)(v16 + 56) = &type metadata for String;
  v17 = sub_100038CF8();
  *(_QWORD *)(v16 + 64) = v17;
  *(_QWORD *)(v16 + 32) = 0xD000000000000050;
  *(_QWORD *)(v16 + 40) = 0x8000000100690600;
  v18 = type metadata accessor for Date(0);
  v19 = sub_1000083D8((unint64_t *)&qword_10081EEC8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v20 = v14;
  v21 = dispatch thunk of CustomStringConvertible.description.getter(v18, v19);
  *(_QWORD *)(v16 + 96) = &type metadata for String;
  *(_QWORD *)(v16 + 104) = v17;
  *(_QWORD *)(v16 + 72) = v21;
  *(_QWORD *)(v16 + 80) = v22;
  LOWORD(aBlock[0]) = 0;
  v23 = String.init<A>(describing:)(aBlock, &type metadata for CelebrationContext);
  *(_QWORD *)(v16 + 136) = &type metadata for String;
  *(_QWORD *)(v16 + 144) = v17;
  *(_QWORD *)(v16 + 112) = v23;
  *(_QWORD *)(v16 + 120) = v24;
  os_log(_:dso:log:_:_:)(v13, &_mh_execute_header, v20, "%@ presenting today view for %{public}@ with celebration context %{public}@", 75, 2, v16);

  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v16, v25, v26, v27, v28, v29, v30, v31);
  v32 = *(_QWORD *)&v5[OBJC_IVAR____TtC10FitnessApp24LoadDetailViewController_context];
  v33 = OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDateCache;
  v34 = (objc_class *)*(id *)(v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDateCache);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v36 = OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate;
  v37 = objc_msgSend(*(id *)((char *)v34 + OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate), "isEqualToDate:", isa);
  v38 = *(void **)((char *)v34 + v36);
  *(_QWORD *)((char *)v34 + v36) = isa;
  v39 = isa;

  v114 = v6;
  if ((v37 & 1) != 0)
  {
    v40 = v39;
  }
  else
  {
    v40 = (objc_class *)objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_10081D748 != -1)
      swift_once(&qword_10081D748, sub_1001E2C48);
    -[objc_class postNotificationName:object:](v40, "postNotificationName:object:", qword_10086A0E0, v6);

    v34 = v39;
  }

  v41 = *(void **)(v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activityDataProvider);
  v42 = *(void **)(v32 + v33);
  v43 = *(void **)(v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_pauseRingsCoordinator);
  v44 = *(void **)(v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionDataProvider);
  v45 = *(void **)(v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_badgeImageFactory);
  v46 = *(void **)(v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager);
  v47 = *(void **)(v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementResourceProvider);
  v103 = *(id *)(v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_awardsDataProvider);
  v105 = *(id *)(v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutFormattingManager);
  v106 = *(id *)(v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_workoutDataProvider);
  v108 = *(id *)(v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_mindfulnessSessionFormattingManager);
  v109 = *(id *)(v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager);
  v111 = *(id *)(v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_achievementLocalizationProvider);
  v112 = *(id *)(v32 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext);
  v107 = (char *)objc_allocWithZone((Class)type metadata accessor for HistoryPagingViewController(0));
  v113 = v41;
  v110 = v42;
  v48 = v43;
  v104 = v44;
  v49 = v45;
  v50 = v46;
  v102 = v47;
  v103 = v103;
  v51 = v105;
  v52 = v106;
  v106 = v52;
  v53 = v108;
  v108 = v53;
  v54 = v109;
  v109 = v54;
  v55 = v111;
  v111 = v55;
  v56 = v112;
  v90 = v55;
  v88 = v53;
  v89 = v54;
  v86 = v51;
  v87 = v52;
  v57 = v51;
  v58 = v113;
  v59 = v110;
  v60 = v104;
  v61 = v50;
  v62 = v102;
  v63 = sub_10031B7C4(v113, v110, v48, v104, v49, v50, v102, (uint64_t)v103, v86, v87, v88, v89, v90, v56, 0, v116, v115, 0, v107);

  v64 = v63;
  v65 = objc_msgSend(v114, "navigationController");
  if (v65)
  {
    v66 = v65;
    objc_msgSend(v65, "pushViewController:animated:", v63, v101 & 1);

  }
  if ((v117 & 1) != 0)
  {
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v68 = (void *)static OS_dispatch_queue.main.getter(v67);
    v69 = v91;
    static DispatchTime.now()(v68);
    v70 = v93;
    + infix(_:_:)(v69, 0.1);
    v117 = *(void (**)(char *, uint64_t))(v92 + 8);
    v71 = v94;
    v117(v69, v94);
    v72 = swift_allocObject(&unk_10079C980, 24, 7);
    *(_QWORD *)(v72 + 16) = v64;
    aBlock[4] = sub_1002182D0;
    v119 = v72;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_10079C998;
    v73 = _Block_copy(aBlock);
    v74 = v119;
    v75 = v64;
    swift_release(v74);
    v76 = v95;
    static DispatchQoS.unspecified.getter(v77);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v78 = v64;
    v79 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v80 = sub_100047110(&qword_100828C80);
    v81 = sub_10002FB08();
    v82 = v98;
    v83 = v100;
    v84 = v79;
    v64 = v78;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v80, v81, v100, v84);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v70, v76, v82, v73);
    _Block_release(v73);

    (*(void (**)(char *, uint64_t))(v99 + 8))(v82, v83);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v76, v97);
    v117(v70, v71);
  }
  return v64;
}

uint64_t sub_1003BAD28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1003BAD5C()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewFlowLayout), "init");
  result = objc_msgSend(v0, "setScrollDirection:", 1);
  qword_1008314F0 = (uint64_t)v0;
  return result;
}

char *sub_1003BAEB0(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  char *v10;
  NSString v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t ObjCClassFromMetadata;
  id v30;
  NSString v31;
  objc_super v33;

  v6 = OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkCollectionView;
  v7 = qword_10081DCA0;
  v8 = v3;
  if (v7 != -1)
    swift_once(&qword_10081DCA0, sub_1003BAD5C);
  v9 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", qword_1008314F0, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v6] = v9;
  *(_QWORD *)&v8[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_workout] = 0;
  *(_QWORD *)&v8[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_fitnessAppContext] = 0;
  *(_QWORD *)&v8[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkItems] = _swiftEmptyArrayStorage;
  v10 = &v8[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_onDidTapMediaMomentItem];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;

  if (a3)
  {
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v12, v13, v14, v15, v16, v17, v18);
  }
  else
  {
    v11 = 0;
  }
  v33.receiver = v8;
  v33.super_class = (Class)type metadata accessor for WorkoutDetailGuidedRunMediaMomentsTableViewCell();
  v19 = objc_msgSendSuper2(&v33, "initWithStyle:reuseIdentifier:", a1, v11);

  v20 = (char *)v19;
  v21 = objc_msgSend(v20, "contentView");
  v22 = OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkCollectionView;
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkCollectionView]);

  v23 = *(void **)&v20[v22];
  objc_msgSend(v23, "setDataSource:", v20);
  objc_msgSend(v23, "setDelegate:", v20);
  v24 = (void *)objc_opt_self(UIColor);
  v25 = v23;
  v26 = objc_msgSend(v24, "secondarySystemGroupedBackgroundColor");
  objc_msgSend(v25, "setBackgroundColor:", v26);

  v27 = *(void **)&v20[v22];
  v28 = type metadata accessor for WorkoutDetailGuidedRunMediaMomentArtworkCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v28);
  v30 = v27;
  v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v31);

  sub_1003BB168();
  return v20;
}

void sub_1003BB168()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100047110((uint64_t *)&unk_100828340);
  v4 = swift_allocObject(v3, 72, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10062ED40;
  v5 = *(void **)&v1[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkCollectionView];
  v6 = objc_msgSend(v5, "topAnchor");
  v7 = objc_msgSend(v1, "contentView");
  v8 = objc_msgSend(v7, "topAnchor");

  v9 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v8, sub_10005F11C());
  *(_QWORD *)(v4 + 32) = v9;
  v10 = objc_msgSend(v5, "leadingAnchor");
  v11 = objc_msgSend(v1, "contentView");
  v12 = objc_msgSend(v11, "leadingAnchor");

  v13 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v12, sub_10005F11C());
  *(_QWORD *)(v4 + 40) = v13;
  v14 = objc_msgSend(v5, "trailingAnchor");
  v15 = objc_msgSend(v1, "contentView");
  v16 = objc_msgSend(v15, "trailingAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v16, -sub_10005F11C());
  *(_QWORD *)(v4 + 48) = v17;
  v18 = objc_msgSend(v5, "heightAnchor");
  v19 = objc_msgSend(v18, "constraintEqualToConstant:", 164.0);

  *(_QWORD *)(v4 + 56) = v19;
  v20 = objc_msgSend(v5, "bottomAnchor");
  v21 = objc_msgSend(v1, "contentView");
  v22 = objc_msgSend(v21, "bottomAnchor");

  v23 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v22, -sub_10005F11C());
  *(_QWORD *)(v4 + 64) = v23;
  specialized Array._endMutation()(v24);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v4, v25, v26, v27, v28, v29, v30, v31);
  objc_msgSend(v2, "activateConstraints:", isa);

}

double sub_1003BB480(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int64x2_t *v7;
  void *v8;
  id v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  double result;
  uint64_t v16;

  v5 = type metadata accessor for SeymourArtworkSizingBehavior(0);
  __chkstk_darwin(v5);
  v7 = (int64x2_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_workout);
  *(_QWORD *)(v2 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_workout) = a1;
  v9 = a1;

  v10 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_fitnessAppContext);
  *(_QWORD *)(v2 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_fitnessAppContext) = a2;
  v11 = a2;

  v12 = *(_QWORD *)&v11[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
  *v7 = vdupq_n_s64(0x4064800000000000uLL);
  swift_storeEnumTagMultiPayload(v7, v5, 1);
  v13 = swift_allocObject(&unk_10079C9D8, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v2);
  v14 = v9;
  sub_1003A1FA0(v14, (uint64_t)v7, v12, v14, v13);

  sub_1002B0318((uint64_t)v7);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

void sub_1003BB5A8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v15 = swift_bridgeObjectRetain(a1);
    v16 = (void *)static OS_dispatch_queue.main.getter(v15);
    v17 = swift_allocObject(&unk_10079CA00, 32, 7);
    *(_QWORD *)(v17 + 16) = a3;
    *(_QWORD *)(v17 + 24) = a1;
    aBlock[4] = sub_1003BC2A4;
    v38 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_10079CA18;
    v18 = _Block_copy(aBlock);
    v19 = v38;
    swift_retain(a3);
    swift_release(v19);
    static DispatchQoS.unspecified.getter(v20);
    aBlock[0] = _swiftEmptyArrayStorage;
    v21 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v22 = sub_100047110(&qword_100828C80);
    v23 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v6, v21);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v9, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  else
  {
    v24 = static os_log_type_t.error.getter(v12);
    v25 = (void *)HKLogActivity;
    v26 = sub_100047110((uint64_t *)&unk_100827460);
    v27 = swift_allocObject(v26, 112, 7);
    *(_OWORD *)(v27 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v27 + 56) = &type metadata for String;
    *(_QWORD *)(v27 + 64) = sub_100038CF8();
    *(_QWORD *)(v27 + 32) = 0xD000000000000025;
    *(_QWORD *)(v27 + 40) = 0x800000010069C6F0;
    *(_QWORD *)(v27 + 96) = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
    *(_QWORD *)(v27 + 104) = sub_10018A478();
    *(_QWORD *)(v27 + 72) = a2;
    v28 = v25;
    v29 = a2;
    os_log(_:dso:log:_:_:)(v24, &_mh_execute_header, v28, "%@ failed to load guided run media moment artwork items for workout: %@", 71, 2, v27);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v27, v30, v31, v32, v33, v34, v35, v36);
  }
}

void sub_1003BB8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  _BYTE v11[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkItems);
    *(_QWORD *)(Strong + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkItems) = a2;
    swift_bridgeObjectRetain(a2);

    swift_bridgeObjectRelease(v6);
  }
  swift_beginAccess(v3, &v10, 0, 0);
  v7 = swift_unknownObjectWeakLoadStrong(v3);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = objc_retain(*(id *)(v7
                           + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkCollectionView));

    objc_msgSend(v9, "reloadData");
  }
}

id sub_1003BB9F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailGuidedRunMediaMomentsTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailGuidedRunMediaMomentsTableViewCell()
{
  return objc_opt_self(CHWorkoutDetailGuidedRunMediaMomentsTableViewCell);
}

id sub_1003BBB38(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  NSString v4;
  Class isa;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v4, isa);

  v8 = IndexPath.row.getter(v7);
  v9 = v8;
  v10 = *(CHWorkoutDetailHeartRateTableViewCell **)(v2
                                                  + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkItems);
  if (((unint64_t)v10 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(v10);
    v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v10);
    swift_bridgeObjectRelease(v10, v17, v18, v19, v20, v21, v22, v23);
    v24 = type metadata accessor for WorkoutDetailGuidedRunMediaMomentArtworkCell();
    v25 = swift_dynamicCastClass(v6, v24);
    if (v25)
    {
      v13 = v25;
      goto LABEL_6;
    }
LABEL_12:
    swift_unknownObjectRelease(v9);
    return v6;
  }
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v8 >= *(_QWORD *)(((unint64_t)v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v11 = type metadata accessor for WorkoutDetailGuidedRunMediaMomentArtworkCell();
  v12 = swift_dynamicCastClass(v6, v11);
  if (v12)
  {
    v13 = v12;
    v9 = (uint64_t)*((id *)&v10[1].super.super.super.super.isa + v9);
LABEL_6:
    v14 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp44WorkoutDetailGuidedRunMediaMomentArtworkCell_imageView);
    v15 = v6;
    objc_msgSend(v14, "setImage:", v9);

  }
  return v6;
}

void sub_1003BBE94()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;

  v1 = OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkCollectionView;
  if (qword_10081DCA0 != -1)
    swift_once(&qword_10081DCA0, sub_1003BAD5C);
  v2 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", qword_1008314F0, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_workout] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_fitnessAppContext] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_mediaMomentArtworkItems] = _swiftEmptyArrayStorage;
  v3 = &v0[OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_onDidTapMediaMomentItem];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/WorkoutDetailGuidedRunMediaMomentsTableViewCell.swift", 64, 2, 78, 0);
  __break(1u);
}

void sub_1003BBFAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, __n128);
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  char *v33;
  id v34;
  __int128 v35;
  uint64_t v36;
  unint64_t v37;

  v2 = v1;
  v3 = OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_workout;
  v4 = *(void **)(v1 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_workout);
  if (v4
    && (v5 = *(void **)(v1 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_fitnessAppContext)) != 0)
  {
    v6 = v5;
    v7 = v4;
    v8 = IndexPath.row.getter(v7);
    objc_allocWithZone((Class)type metadata accessor for WorkoutDetailGuidedRunMMGalleryViewController());
    v9 = (char *)v6;
    v34 = v7;
    v10 = sub_100526BA0(v34, v9, v8);
    v11 = v2 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_onDidTapMediaMomentItem;
    v12 = *(void (**)(char *, __n128))(v2
                                                + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_onDidTapMediaMomentItem);
    if (v12)
    {
      v13 = *(_QWORD *)(v11 + 8);
      v33 = v10;
      v14 = swift_retain(v13);
      v12(v33, v14);

      sub_100022BA4((uint64_t)v12, v13);
    }
    else
    {

    }
  }
  else
  {
    v15 = static os_log_type_t.error.getter(a1);
    v16 = (void *)HKLogActivity;
    v17 = sub_100047110((uint64_t *)&unk_100827460);
    v18 = swift_allocObject(v17, 152, 7);
    *(_OWORD *)(v18 + 16) = xmmword_100624A40;
    *(_QWORD *)(v18 + 56) = &type metadata for String;
    v19 = sub_100038CF8();
    v20 = v19;
    *(_QWORD *)(v18 + 64) = v19;
    *(_QWORD *)(v18 + 32) = 0xD000000000000022;
    *(_QWORD *)(v18 + 40) = 0x800000010069D430;
    v21 = *(void **)(v2 + v3);
    if (v21)
    {
      v36 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
      v37 = sub_10018A478();
      *(_QWORD *)&v35 = v21;
      sub_10002411C(&v35, v18 + 72);
    }
    else
    {
      *(_QWORD *)(v18 + 96) = &type metadata for String;
      *(_QWORD *)(v18 + 104) = v19;
      *(_QWORD *)(v18 + 72) = 0x6F6B726F77206F6ELL;
      *(_QWORD *)(v18 + 80) = 0xEA00000000007475;
    }
    v22 = v16;
    v23 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailGuidedRunMediaMomentsTableViewCell_fitnessAppContext);
    if (v23)
    {
      v36 = type metadata accessor for FitnessAppContext(0);
      v37 = sub_1000083D8(&qword_100831548, type metadata accessor for FitnessAppContext, (uint64_t)&protocol conformance descriptor for NSObject);
      *(_QWORD *)&v35 = v23;
      sub_10002411C(&v35, v18 + 112);
    }
    else
    {
      *(_QWORD *)(v18 + 136) = &type metadata for String;
      *(_QWORD *)(v18 + 144) = v20;
      *(_QWORD *)(v18 + 112) = 0xD000000000000016;
      *(_QWORD *)(v18 + 120) = 0x800000010069D460;
    }
    v24 = v21;
    v25 = v23;
    os_log(_:dso:log:_:_:)(v15, &_mh_execute_header, v16, "%@ failed to create WorkoutDetailGuidedRunMMGalleryViewController for workout: %@ fitnessAppContext: %@", 103, 2, v18);

    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v18, v26, v27, v28, v29, v30, v31, v32);
  }
}

uint64_t sub_1003BC254()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003BC278()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003BC2A4()
{
  uint64_t v0;

  sub_1003BB8A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003BC2AC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

_QWORD *sub_1003BC2D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t, __n128);
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  id v38;
  id v39;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v37 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v37 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, a2, v6);
    v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
    *((_BYTE *)v4 + v7[5]) = *((_BYTE *)a2 + v7[5]);
    v8 = v7[6];
    v9 = (_QWORD *)((char *)v4 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = v7[7];
    v13 = *(void **)((char *)a2 + v12);
    *(_QWORD *)((char *)v4 + v12) = v13;
    v14 = v7[8];
    v15 = *(_QWORD *)((char *)a2 + v14);
    *(_QWORD *)((char *)v4 + v14) = v15;
    *((_BYTE *)v4 + v7[9]) = *((_BYTE *)a2 + v7[9]);
    v16 = v7[10];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for Date(0);
    v20 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 16);
    swift_bridgeObjectRetain(v11);
    v21 = v13;
    v22 = swift_bridgeObjectRetain(v15);
    v20(v17, v18, v19, v22);
    ((void (*)(char *, char *, uint64_t))v20)((char *)v4 + v7[11], (char *)a2 + v7[11], v19);
    v23 = v7[12];
    v24 = *(_QWORD *)((char *)a2 + v23);
    *(_QWORD *)((char *)v4 + v23) = v24;
    v25 = v7[13];
    v26 = *(_QWORD *)((char *)a2 + v25);
    *(_QWORD *)((char *)v4 + v25) = v26;
    v27 = v7[14];
    v28 = *(_QWORD *)((char *)a2 + v27);
    *(_QWORD *)((char *)v4 + v27) = v28;
    *(_QWORD *)((char *)v4 + v7[15]) = *(_QWORD *)((char *)a2 + v7[15]);
    *(_QWORD *)((char *)v4 + v7[16]) = *(_QWORD *)((char *)a2 + v7[16]);
    *(_OWORD *)((char *)v4 + v7[17]) = *(_OWORD *)((char *)a2 + v7[17]);
    *(_QWORD *)((char *)v4 + v7[18]) = *(_QWORD *)((char *)a2 + v7[18]);
    v29 = v7[19];
    v30 = *(void **)((char *)a2 + v29);
    *(_QWORD *)((char *)v4 + v29) = v30;
    v31 = v7[20];
    v32 = *(void **)((char *)a2 + v31);
    *(_QWORD *)((char *)v4 + v31) = v32;
    v33 = *(int *)(a3 + 20);
    v34 = *(int *)(a3 + 24);
    v35 = (_QWORD *)((char *)v4 + v33);
    v36 = (_QWORD *)((char *)a2 + v33);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    *((_BYTE *)v4 + v34) = *((_BYTE *)a2 + v34);
    swift_bridgeObjectRetain(v24);
    swift_retain(v26);
    swift_retain(v28);
    v38 = v30;
    v39 = v32;
  }
  swift_retain(v37);
  return v4;
}

uint64_t sub_1003BC4C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, __n128);
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  id v38;

  v5 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  v6 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(_BYTE *)(a1 + v6[5]) = *(_BYTE *)(a2 + v6[5]);
  v7 = v6[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v6[7];
  v12 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v13 = v6[8];
  v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
  v15 = v6[10];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Date(0);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain(v10);
  v20 = v12;
  v21 = swift_bridgeObjectRetain(v14);
  v19(v16, v17, v18, v21);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(a1 + v6[11], a2 + v6[11], v18);
  v22 = v6[12];
  v23 = *(_QWORD *)(a2 + v22);
  *(_QWORD *)(a1 + v22) = v23;
  v24 = v6[13];
  v25 = *(_QWORD *)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  v26 = v6[14];
  v27 = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v27;
  *(_QWORD *)(a1 + v6[15]) = *(_QWORD *)(a2 + v6[15]);
  *(_QWORD *)(a1 + v6[16]) = *(_QWORD *)(a2 + v6[16]);
  *(_OWORD *)(a1 + v6[17]) = *(_OWORD *)(a2 + v6[17]);
  *(_QWORD *)(a1 + v6[18]) = *(_QWORD *)(a2 + v6[18]);
  v28 = v6[19];
  v29 = *(void **)(a2 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v30 = v6[20];
  v31 = *(void **)(a2 + v30);
  *(_QWORD *)(a1 + v30) = v31;
  v32 = *(int *)(a3 + 20);
  v33 = *(int *)(a3 + 24);
  v34 = (_QWORD *)(a1 + v32);
  v35 = (_QWORD *)(a2 + v32);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  swift_bridgeObjectRetain(v23);
  swift_retain(v25);
  swift_retain(v27);
  v37 = v29;
  v38 = v31;
  swift_retain(v36);
  return a1;
}

uint64_t sub_1003BC690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
  v8 = v7[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v11 = v10[1];
  v12 = (CHWorkoutDetailHeartRateTableViewCell *)v9[1];
  v9[1] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12, v13, v14, v15, v16, v17, v18, v19);
  v20 = v7[7];
  v21 = *(void **)(a2 + v20);
  v22 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = v21;
  v23 = v21;

  v24 = v7[8];
  v25 = *(_QWORD *)(a2 + v24);
  v26 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26, v27, v28, v29, v30, v31, v32, v33);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v34 = v7[10];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = type metadata accessor for Date(0);
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 24);
  v38(v35, v36, v37);
  v38(a1 + v7[11], a2 + v7[11], v37);
  v39 = v7[12];
  v40 = *(_QWORD *)(a2 + v39);
  v41 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v39);
  *(_QWORD *)(a1 + v39) = v40;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRelease(v41, v42, v43, v44, v45, v46, v47, v48);
  v49 = v7[13];
  v50 = *(_QWORD *)(a1 + v49);
  v51 = *(_QWORD *)(a2 + v49);
  *(_QWORD *)(a1 + v49) = v51;
  swift_retain(v51);
  swift_release(v50);
  v52 = v7[14];
  v53 = *(_QWORD *)(a2 + v52);
  v54 = *(_QWORD *)(a1 + v52);
  *(_QWORD *)(a1 + v52) = v53;
  swift_retain(v53);
  swift_release(v54);
  *(_QWORD *)(a1 + v7[15]) = *(_QWORD *)(a2 + v7[15]);
  *(_QWORD *)(a1 + v7[16]) = *(_QWORD *)(a2 + v7[16]);
  v55 = v7[17];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (_QWORD *)(a2 + v55);
  *v56 = *v57;
  v56[1] = v57[1];
  *(_QWORD *)(a1 + v7[18]) = *(_QWORD *)(a2 + v7[18]);
  v58 = v7[19];
  v59 = *(void **)(a2 + v58);
  v60 = *(void **)(a1 + v58);
  *(_QWORD *)(a1 + v58) = v59;
  v61 = v59;

  v62 = v7[20];
  v63 = *(void **)(a2 + v62);
  v64 = *(void **)(a1 + v62);
  *(_QWORD *)(a1 + v62) = v63;
  v65 = v63;

  v66 = *(int *)(a3 + 20);
  v67 = (_QWORD *)(a1 + v66);
  v68 = (_QWORD *)(a2 + v66);
  *v67 = *v68;
  v69 = v68[1];
  v70 = v67[1];
  v67[1] = v69;
  swift_retain(v69);
  swift_release(v70);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1003BC8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v8 = v7[10];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + v7[11], a2 + v7[11], v11);
  *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(a2 + v7[12]);
  *(_QWORD *)(a1 + v7[13]) = *(_QWORD *)(a2 + v7[13]);
  *(_QWORD *)(a1 + v7[14]) = *(_QWORD *)(a2 + v7[14]);
  *(_QWORD *)(a1 + v7[15]) = *(_QWORD *)(a2 + v7[15]);
  *(_QWORD *)(a1 + v7[16]) = *(_QWORD *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(_QWORD *)(a1 + v7[18]) = *(_QWORD *)(a2 + v7[18]);
  *(_QWORD *)(a1 + v7[19]) = *(_QWORD *)(a2 + v7[19]);
  *(_QWORD *)(a1 + v7[20]) = *(_QWORD *)(a2 + v7[20]);
  v13 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  return a1;
}

uint64_t sub_1003BCA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
  v8 = v7[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  v13 = (CHWorkoutDetailHeartRateTableViewCell *)v9[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
  v21 = v7[7];
  v22 = *(void **)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);

  v23 = v7[8];
  v24 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v23);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  swift_bridgeObjectRelease(v24, v25, v26, v27, v28, v29, v30, v31);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v32 = v7[10];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = type metadata accessor for Date(0);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 40);
  v36(v33, v34, v35);
  v36(a1 + v7[11], a2 + v7[11], v35);
  v37 = v7[12];
  v38 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v37);
  *(_QWORD *)(a1 + v37) = *(_QWORD *)(a2 + v37);
  swift_bridgeObjectRelease(v38, v39, v40, v41, v42, v43, v44, v45);
  v46 = v7[13];
  v47 = *(_QWORD *)(a1 + v46);
  *(_QWORD *)(a1 + v46) = *(_QWORD *)(a2 + v46);
  swift_release(v47);
  v48 = v7[14];
  v49 = *(_QWORD *)(a1 + v48);
  *(_QWORD *)(a1 + v48) = *(_QWORD *)(a2 + v48);
  swift_release(v49);
  *(_QWORD *)(a1 + v7[15]) = *(_QWORD *)(a2 + v7[15]);
  *(_QWORD *)(a1 + v7[16]) = *(_QWORD *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(_QWORD *)(a1 + v7[18]) = *(_QWORD *)(a2 + v7[18]);
  v50 = v7[19];
  v51 = *(void **)(a1 + v50);
  *(_QWORD *)(a1 + v50) = *(_QWORD *)(a2 + v50);

  v52 = v7[20];
  v53 = *(void **)(a1 + v52);
  *(_QWORD *)(a1 + v52) = *(_QWORD *)(a2 + v52);

  v54 = *(int *)(a3 + 20);
  v55 = (_QWORD *)(a1 + v54);
  v56 = (uint64_t *)(a2 + v54);
  v58 = *v56;
  v57 = v56[1];
  v59 = v55[1];
  *v55 = v58;
  v55[1] = v57;
  swift_release(v59);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1003BCBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003BCBF4);
}

uint64_t sub_1003BCBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for WorkoutChartViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1003BCC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003BCC80);
}

uint64_t sub_1003BCC80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for WorkoutChartViewModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WorkoutChartView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008315A8;
  if (!qword_1008315A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutChartView);
  return result;
}

uint64_t sub_1003BCD38(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for WorkoutChartViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100639E68;
    v4[2] = &unk_100639E80;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1003BCDB4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B619C, 1);
}

double sub_1003BCDC4()
{
  double result;

  result = 4.0;
  __asm { FMOV            V1.2D, #6.0 }
  xmmword_10086A800 = _Q1;
  *(_OWORD *)&qword_10086A810 = xmmword_100639E30;
  return result;
}

void sub_1003BCDE0()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  NSString *v4;
  id v5;
  id v6;

  v0 = (void *)objc_opt_self(UIFont);
  v1 = UIFontSystemFontDesignRounded;
  v2 = objc_msgSend(v0, "_preferredFontForTextStyle:design:variant:", UIFontTextStyleBody, v1, 256);

  if (v2)
  {
    v3 = (void *)objc_opt_self(UITraitCollection);
    v4 = UIContentSizeCategoryLarge;
    v5 = objc_msgSend(v3, "traitCollectionWithPreferredContentSizeCategory:", v4);

    v6 = objc_msgSend(v2, "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:", v5);
    if (v6)
    {
      qword_10086A820 = (uint64_t)v6;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1003BCEE4(uint64_t a1)
{
  sub_1003BCF0C(a1, &UIFontTextStyleBody, &qword_10086A828);
}

void sub_1003BCEF8(uint64_t a1)
{
  sub_1003BCF0C(a1, &UIFontTextStyleCaption2, &qword_10086A830);
}

void sub_1003BCF0C(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  id v4;
  void *v5;
  void *v6;
  NSString *v7;
  id v8;
  id v9;

  v4 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:variant:", *a2, 256);
  if (v4)
  {
    v5 = v4;
    v6 = (void *)objc_opt_self(UITraitCollection);
    v7 = UIContentSizeCategoryLarge;
    v8 = objc_msgSend(v6, "traitCollectionWithPreferredContentSizeCategory:", v7);

    v9 = objc_msgSend(v5, "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:", v8);
    if (v9)
    {
      *a3 = v9;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1003BCFEC()
{
  id v0;
  void *v1;
  NSString *v2;
  id v3;
  id v4;

  v0 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v1 = (void *)objc_opt_self(UITraitCollection);
  v2 = UIContentSizeCategoryLarge;
  v3 = objc_msgSend(v1, "traitCollectionWithPreferredContentSizeCategory:", v2);

  v4 = objc_msgSend(v0, "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:", v3);
  if (v4)
    qword_10086A838 = (uint64_t)v4;
  else
    __break(1u);
}

uint64_t sub_1003BD0BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121[32];

  v120 = a2;
  v113 = type metadata accessor for WorkoutChartView(0);
  v95 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v96 = v3;
  v97 = (uint64_t)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for TapGesture(0);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v101 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100047110(&qword_1008315F0);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_1008315F8);
  __chkstk_darwin(v6);
  v94 = (uint64_t)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_100047110(&qword_100831600);
  __chkstk_darwin(v99);
  v100 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100831608);
  v118 = *(_QWORD *)(v9 - 8);
  v119 = v9;
  __chkstk_darwin(v9);
  v98 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v11);
  v111 = (uint64_t)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v109 = *(_QWORD *)(v13 - 8);
  v110 = v13;
  __chkstk_darwin(v13);
  v112 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100831610);
  __chkstk_darwin(v15);
  v117 = (uint64_t)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v116 = (char *)&v93 - v18;
  v19 = type metadata accessor for DynamicTypeSize(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_100047110(&qword_100831618);
  __chkstk_darwin(v107);
  v24 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = (char *)sub_100047110(&qword_100831620);
  v25 = *((_QWORD *)v114 - 1);
  __chkstk_darwin(v114);
  v27 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_100047110(&qword_100831628);
  __chkstk_darwin(v108);
  v115 = (uint64_t)&v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v93 - v30;
  __chkstk_darwin(v32);
  v34 = (char *)&v93 - v33;
  *(_QWORD *)v24 = static HorizontalAlignment.leading.getter(v35);
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 0;
  v36 = sub_100047110(&qword_100831630);
  sub_1003BD9D4(a1, (uint64_t)&v24[*(int *)(v36 + 44)]);
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v22, enum case for DynamicTypeSize.large(_:), v19);
  v37 = sub_100028384(&qword_100831638, &qword_100831618, (uint64_t)&protocol conformance descriptor for VStack<A>);
  View.dynamicTypeSize(_:)(v22, v107, v37);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v38 = sub_10001BE90((uint64_t)v24, &qword_100831618);
  LOBYTE(v20) = static Edge.Set.all.getter(v38);
  v39 = EdgeInsets.init(_all:)(2.0);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v46 = (uint64_t)v114;
  (*(void (**)(char *, char *, char *))(v25 + 16))(v31, v27, v114);
  v47 = v109;
  v48 = &v31[*(int *)(v108 + 36)];
  *v48 = v20;
  *((double *)v48 + 1) = v39;
  *((_QWORD *)v48 + 2) = v41;
  *((_QWORD *)v48 + 3) = v43;
  *((_QWORD *)v48 + 4) = v45;
  v48[40] = 0;
  v49 = *(void (**)(char *, uint64_t))(v25 + 8);
  v50 = v110;
  v49(v27, v46);
  v51 = a1;
  v114 = v34;
  sub_100045AD4((uint64_t)v31, (uint64_t)v34, &qword_100831628);
  v52 = *(_QWORD *)(a1 + *(int *)(v113 + 20) + 8) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  swift_beginAccess(v52, v121, 0, 0);
  v53 = v52;
  v54 = v111;
  sub_100021CC0(v53, v111, (uint64_t *)&unk_100828370);
  v55 = v47;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v54, 1, v50) == 1)
  {
    sub_10001BE90(v54, (uint64_t *)&unk_100828370);
    v56 = 1;
    v58 = v118;
    v57 = v119;
    v59 = (uint64_t)v116;
  }
  else
  {
    v60 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 32);
    v61 = (uint64_t)v112;
    v60(v112, v54, v50);
    v62 = (uint64_t *)(a1 + *(int *)(type metadata accessor for WorkoutChartViewModel(0) + 24));
    v63 = *v62;
    v64 = v62[1];
    if (qword_10081DCB0 != -1)
      swift_once(&qword_10081DCB0, sub_1003BCDE0);
    v65 = sub_1002A2E68(v61, (void *)qword_10086A820);
    v66 = v94;
    sub_1003BE5D4(v63, v64, v65, v94);

    if (qword_10081D6F8 != -1)
      swift_once(&qword_10081D6F8, sub_1001BE740);
    v67 = qword_10086A080;
    v68 = v100;
    sub_100021CC0(v66, v100, &qword_1008315F8);
    v69 = v99;
    v70 = (uint64_t *)(v68 + *(int *)(v99 + 36));
    *v70 = v67;
    v70[1] = (uint64_t)sub_1003BEC20;
    v70[2] = 0;
    sub_10001BE90(v66, &qword_1008315F8);
    v71 = v101;
    TapGesture.init(count:)(1);
    v72 = v97;
    sub_10004F8C8(v51, v97, type metadata accessor for WorkoutChartView);
    v73 = *(unsigned __int8 *)(v95 + 80);
    v74 = (v73 + 16) & ~v73;
    v75 = swift_allocObject(&unk_10079CAA0, v74 + v96, v73 | 7);
    sub_1003C0338(v72, v75 + v74);
    v76 = swift_allocObject(&unk_10079CAC8, 32, 7);
    *(_QWORD *)(v76 + 16) = sub_1003C037C;
    *(_QWORD *)(v76 + 24) = v75;
    v77 = v104;
    v78 = v103;
    Gesture.onEnded(_:)(sub_10011DFF4, v76, v103, &protocol witness table for TapGesture);
    v79 = swift_release(v76);
    v80 = (*(uint64_t (**)(char *, uint64_t, __n128))(v102 + 8))(v71, v78, v79);
    v81 = static GestureMask.all.getter(v80);
    v82 = sub_1003C0818(&qword_100831648, &qword_100831600, (void (*)(void))sub_1003C03A4);
    v83 = sub_100028384(&qword_1008316C0, &qword_1008315F0, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
    v84 = v98;
    v85 = v81;
    v86 = v106;
    View.gesture<A>(_:including:)(v77, v85, v69, v106, v82, v83);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v77, v86);
    sub_10001BE90(v68, &qword_100831600);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v112, v50);
    v58 = v118;
    v57 = v119;
    v59 = (uint64_t)v116;
    (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v116, v84, v119);
    v56 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v59, v56, 1, v57);
  v88 = (uint64_t)v114;
  v87 = v115;
  sub_100021CC0((uint64_t)v114, v115, &qword_100831628);
  v89 = v117;
  sub_100021CC0(v59, v117, &qword_100831610);
  v90 = v120;
  sub_100021CC0(v87, v120, &qword_100831628);
  v91 = sub_100047110(&qword_100831640);
  sub_100021CC0(v89, v90 + *(int *)(v91 + 48), &qword_100831610);
  sub_10001BE90(v59, &qword_100831610);
  sub_10001BE90(v88, &qword_100831628);
  sub_10001BE90(v89, &qword_100831610);
  return sub_10001BE90(v87, &qword_100831628);
}

uint64_t sub_1003BD9D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t OpaqueTypeConformance2;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105[16];
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;

  v104 = a2;
  v103 = sub_100047110(&qword_1008316C8);
  __chkstk_darwin(v103);
  v102 = (uint64_t)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for WorkoutChart(0);
  __chkstk_darwin(v83);
  v5 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_100047110(&qword_1008316D0);
  v91 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v86 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100047110(&qword_1008316D8);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v87 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_100047110(&qword_1008316E0);
  __chkstk_darwin(v89);
  v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_100047110(&qword_1008316E8);
  __chkstk_darwin(v90);
  v85 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100047110(&qword_1008316F0);
  __chkstk_darwin(v95);
  v94 = (uint64_t)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_100047110(&qword_1008316F8);
  v99 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v100 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v97 = (char *)&v83 - v14;
  __chkstk_darwin(v15);
  v98 = (char *)&v83 - v16;
  v17 = sub_100047110(&qword_100831700);
  __chkstk_darwin(v17);
  v19 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_100831708);
  __chkstk_darwin(v20);
  v22 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v83 - v24;
  *(_QWORD *)v19 = static VerticalAlignment.bottom.getter(v26);
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  v27 = sub_100047110(&qword_100831710);
  v28 = sub_1003BEC4C(a1, (uint64_t)&v19[*(int *)(v27 + 44)]);
  v29 = static Edge.Set.bottom.getter(v28);
  v30 = EdgeInsets.init(_all:)(5.0);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  sub_100021CC0((uint64_t)v19, (uint64_t)v22, &qword_100831700);
  v37 = &v22[*(int *)(v20 + 36)];
  *v37 = v29;
  *((double *)v37 + 1) = v30;
  *((_QWORD *)v37 + 2) = v32;
  *((_QWORD *)v37 + 3) = v34;
  *((_QWORD *)v37 + 4) = v36;
  v37[40] = 0;
  sub_10001BE90((uint64_t)v19, &qword_100831700);
  v96 = v25;
  sub_100045AD4((uint64_t)v22, (uint64_t)v25, &qword_100831708);
  sub_10004F8C8(a1, (uint64_t)v5, type metadata accessor for WorkoutChartViewModel);
  v84 = type metadata accessor for WorkoutChartView(0);
  v38 = *(_QWORD *)(a1 + *(int *)(v84 + 20) + 8);
  v39 = v83;
  v40 = &v5[*(int *)(v83 + 20)];
  v41 = type metadata accessor for WorkoutChartProperties(0);
  v42 = sub_1000083D8(&qword_10083B9B0, type metadata accessor for WorkoutChartProperties, (uint64_t)&unk_1006314F0);
  swift_retain(v38);
  *(_QWORD *)v40 = ObservedObject.init(wrappedValue:)(v43, v41, v42);
  *((_QWORD *)v40 + 1) = v44;
  v45 = a1;
  v106 = a1;
  v46 = sub_100047110(&qword_100831718);
  v47 = sub_1000083D8(&qword_100831720, type metadata accessor for WorkoutChart, (uint64_t)&unk_10063723C);
  v48 = sub_100028384(&qword_100831728, &qword_100831718, (uint64_t)&protocol conformance descriptor for AxisMarks<A>);
  v49 = v86;
  View.chartXAxis<A>(content:)(sub_1003C0810, v105, v39, v46, v47, v48);
  v50 = (uint64_t)v85;
  sub_100011F54((uint64_t)v5, type metadata accessor for WorkoutChart);
  *(_QWORD *)&v107 = v39;
  *((_QWORD *)&v107 + 1) = v46;
  *(_QWORD *)&v108 = v47;
  *((_QWORD *)&v108 + 1) = v48;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v107, &opaque type descriptor for <<opaque return type of View.chartXAxis<A>(content:)>>, 1);
  v52 = v87;
  v53 = v88;
  View.chartYAxis(_:)(2, v88, OpaqueTypeConformance2);
  v54 = (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v49, v53);
  v55 = static Alignment.center.getter(v54);
  _FrameLayout.init(width:height:alignment:)(&v107, 0, 1, 0x4051000000000000, 0, v55, v56);
  v57 = v92;
  v58 = v93;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v9, v52, v93);
  v59 = &v9[*(int *)(v89 + 36)];
  v60 = v108;
  *(_OWORD *)v59 = v107;
  *((_OWORD *)v59 + 1) = v60;
  *((_OWORD *)v59 + 2) = v109;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v58);
  sub_100021CC0((uint64_t)v9, v50, &qword_1008316E0);
  *(_WORD *)(v50 + *(int *)(v90 + 36)) = 0;
  sub_10001BE90((uint64_t)v9, &qword_1008316E0);
  if (qword_10081D6F8 != -1)
    swift_once(&qword_10081D6F8, sub_1001BE740);
  v61 = qword_10086A080;
  v62 = v94;
  sub_100021CC0(v50, v94, &qword_1008316E8);
  v63 = v95;
  v64 = (uint64_t *)(v62 + *(int *)(v95 + 36));
  *v64 = v61;
  v64[1] = (uint64_t)sub_1001BE71C;
  v64[2] = 0;
  sub_10001BE90(v50, &qword_1008316E8);
  if (*(_BYTE *)(v45 + *(int *)(v84 + 24)) == 1)
  {
    v65 = v102;
    sub_1003BE21C(v102);
    v66 = sub_100047110(&qword_100831730);
    v67 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v65, 0, 1, v66);
  }
  else
  {
    v68 = sub_100047110(&qword_100831730);
    v65 = v102;
    v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v102, 1, 1, v68);
  }
  v69 = static GestureMask.all.getter(v67);
  v70 = sub_1003C0818(&qword_100831738, &qword_1008316F0, (void (*)(void))sub_1003C0884);
  v71 = sub_1003C0A20();
  v72 = v97;
  View.gesture<A>(_:including:)(v65, v69, v63, v103, v70, v71);
  sub_10001BE90(v65, &qword_1008316C8);
  sub_10001BE90(v62, &qword_1008316F0);
  v74 = v98;
  v73 = v99;
  v75 = v101;
  (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v98, v72, v101);
  v76 = (uint64_t)v96;
  sub_100021CC0((uint64_t)v96, (uint64_t)v22, &qword_100831708);
  v77 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
  v78 = v100;
  v77(v100, v74, v75);
  v79 = v104;
  sub_100021CC0((uint64_t)v22, v104, &qword_100831708);
  v80 = sub_100047110(&qword_100831770);
  v77((char *)(v79 + *(int *)(v80 + 48)), v78, v75);
  v81 = *(void (**)(char *, uint64_t))(v73 + 8);
  v81(v74, v75);
  sub_10001BE90(v76, &qword_100831708);
  v81(v78, v75);
  return sub_10001BE90((uint64_t)v22, &qword_100831708);
}

uint64_t sub_1003BE21C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = v1;
  v50 = a1;
  v47 = type metadata accessor for TapGesture(0);
  v49 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v43 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_100047110(&qword_1008315F0);
  v46 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v45 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WorkoutChartView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalCoordinateSpace(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DragGesture(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100047110(&qword_10082F628);
  v42 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter(v19);
  DragGesture.init<A>(minimumDistance:coordinateSpace:)(v12, v9, &protocol witness table for LocalCoordinateSpace, 0.0);
  sub_10004F8C8(v2, (uint64_t)v8, type metadata accessor for WorkoutChartView);
  v20 = *(unsigned __int8 *)(v6 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = v21 + v7;
  v23 = v20 | 7;
  v24 = swift_allocObject(&unk_10079CAF0, v22, v20 | 7);
  sub_1003C0338((uint64_t)v8, v24 + v21);
  v25 = sub_1000083D8(&qword_10082F670, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture, (uint64_t)&protocol conformance descriptor for DragGesture);
  v26 = sub_1000083D8(&qword_10082F678, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture.Value, (uint64_t)&protocol conformance descriptor for DragGesture.Value);
  Gesture<>.onChanged(_:)(sub_1003C0AA0, v24, v13, v25, v26);
  v27 = swift_release(v24);
  (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v27);
  v28 = v43;
  TapGesture.init(count:)(1);
  sub_10004F8C8(v41, (uint64_t)v8, type metadata accessor for WorkoutChartView);
  v29 = swift_allocObject(&unk_10079CB18, v22, v23);
  sub_1003C0338((uint64_t)v8, v29 + v21);
  v30 = swift_allocObject(&unk_10079CB40, 32, 7);
  *(_QWORD *)(v30 + 16) = sub_1003C037C;
  *(_QWORD *)(v30 + 24) = v29;
  v31 = v45;
  v32 = v47;
  Gesture.onEnded(_:)(sub_1003C0D64, v30, v47, &protocol witness table for TapGesture);
  v33 = swift_release(v30);
  (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v28, v32, v33);
  v34 = v46;
  v35 = v50;
  v36 = v48;
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v50, v31, v48);
  v37 = v35 + *(int *)(sub_100047110(&qword_100831730) + 52);
  v38 = v42;
  v39 = v44;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v37, v18, v44);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v18, v39);
}

uint64_t sub_1003BE5D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t KeyPath;
  _OWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  int v53;
  double v54;
  double v55;
  char v56;
  double v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  _BYTE v81[151];
  char v82;
  char v83;
  char v84;
  char v85;
  _QWORD v86[37];
  _OWORD v87[9];
  _BYTE v88[24];
  uint64_t v89;
  char v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;

  v71 = a1;
  v72 = a2;
  v80 = a4;
  v76 = sub_100047110(&qword_100821238);
  __chkstk_darwin(v76);
  v78 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v74);
  v77 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100047110(&qword_100831660);
  __chkstk_darwin(v75);
  v79 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10082BFA8);
  __chkstk_darwin(v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = v4 + *(int *)(type metadata accessor for WorkoutChartView(0) + 20);
  v19 = *(_QWORD *)(v73 + 8) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  swift_beginAccess(v19, v88, 0, 0);
  sub_100021CC0(v19, (uint64_t)v14, (uint64_t *)&unk_100828370);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v20 = sub_10001BE90((uint64_t)v14, (uint64_t *)&unk_100828370);
    v21 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    sub_1002A2C58((uint64_t)v18, (uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v22 = type metadata accessor for WorkoutChartDataElement(0);
    v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v11, 1, v22) != 1;
    v20 = sub_10001BE90((uint64_t)v11, &qword_10082BFA8);
  }
  v70 = static HorizontalAlignment.leading.getter(v20);
  sub_1003BFE00(v71, v72, a3, (uint64_t)v87);
  if (qword_10081DCA8 != -1)
    v23 = swift_once(&qword_10081DCA8, sub_1003BCDC4);
  v71 = *((_QWORD *)&xmmword_10086A800 + 1);
  v72 = xmmword_10086A800;
  v68 = unk_10086A818;
  v69 = qword_10086A810;
  v67 = static Edge.Set.all.getter(v23);
  v25 = static Alignment.leading.getter(v24);
  _FrameLayout.init(width:height:alignment:)(&v89, 0x4062C00000000000, 0, 0, 1, v25, v26);
  v28 = v90;
  v29 = v91;
  v30 = v92;
  v65 = v93;
  v66 = v89;
  v64 = v94;
  if (v21)
  {
    v31 = type metadata accessor for WorkoutChartViewModel(0);
    sub_100538FFC(*(_BYTE *)(v4 + *(int *)(v31 + 20)));
    v33 = Color.init(_:)(v32);
  }
  else
  {
    v33 = static Color.gray.getter(v27);
  }
  v34 = v33;
  *(_OWORD *)&v81[87] = v87[5];
  *(_OWORD *)&v81[103] = v87[6];
  *(_OWORD *)&v81[119] = v87[7];
  *(_OWORD *)&v81[135] = v87[8];
  *(_OWORD *)&v81[23] = v87[1];
  *(_OWORD *)&v81[39] = v87[2];
  *(_OWORD *)&v81[55] = v87[3];
  *(_OWORD *)&v81[71] = v87[4];
  v82 = 1;
  *(_OWORD *)&v81[7] = v87[0];
  v83 = 0;
  v85 = v28;
  v84 = v30;
  v35 = static Edge.Set.all.getter(v33);
  v36 = v35;
  v37 = v85;
  v38 = v84;
  v39 = static Color.black.getter(v35);
  KeyPath = swift_getKeyPath(&unk_100639F30);
  *(_OWORD *)((char *)&v86[14] + 1) = *(_OWORD *)&v81[96];
  *(_OWORD *)((char *)&v86[16] + 1) = *(_OWORD *)&v81[112];
  *(_OWORD *)((char *)&v86[18] + 1) = *(_OWORD *)&v81[128];
  *(_OWORD *)((char *)&v86[6] + 1) = *(_OWORD *)&v81[32];
  *(_OWORD *)((char *)&v86[8] + 1) = *(_OWORD *)&v81[48];
  *(_OWORD *)((char *)&v86[10] + 1) = *(_OWORD *)&v81[64];
  *(_OWORD *)((char *)&v86[12] + 1) = *(_OWORD *)&v81[80];
  *(_OWORD *)((char *)&v86[2] + 1) = *(_OWORD *)v81;
  v86[0] = v70;
  v86[1] = 0;
  LOBYTE(v86[2]) = 1;
  v86[20] = *(_QWORD *)&v81[143];
  *(_OWORD *)((char *)&v86[4] + 1) = *(_OWORD *)&v81[16];
  LOBYTE(v86[21]) = v67;
  v86[22] = v72;
  v86[23] = v71;
  v86[24] = v69;
  v86[25] = v68;
  LOBYTE(v86[26]) = 0;
  v86[27] = v66;
  LOBYTE(v86[28]) = v37;
  v86[29] = v29;
  LOBYTE(v86[30]) = v38;
  v86[31] = v65;
  v86[32] = v64;
  v86[33] = v34;
  LOBYTE(v86[34]) = v36;
  v86[35] = KeyPath;
  v86[36] = v39;
  v41 = v77;
  v42 = &v77[*(int *)(v74 + 20)];
  v43 = enum case for RoundedCornerStyle.continuous(_:);
  v44 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v42, v43, v44);
  __asm { FMOV            V0.2D, #10.0 }
  *v41 = _Q0;
  v50 = v78;
  sub_10004F8C8((uint64_t)v41, v78, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v50 + *(int *)(v76 + 36)) = 256;
  v51 = v79;
  sub_100021CC0(v50, (uint64_t)&v79[*(int *)(v75 + 36)], &qword_100821238);
  memcpy(v51, v86, 0x128uLL);
  sub_1003C064C((uint64_t)v86);
  sub_10001BE90(v50, &qword_100821238);
  sub_100011F54((uint64_t)v41, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_1003C0724((uint64_t)v86);
  v52 = *(_QWORD *)(v73 + 8);
  v53 = *(unsigned __int8 *)(v52 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth + 8);
  v54 = *(double *)(v52 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth) + -150.0;
  swift_retain(v52);
  v55 = COERCE_DOUBLE(sub_10026A114());
  LOBYTE(v50) = v56;
  swift_release(v52);
  v57 = v55 + -75.0 + -1.0;
  if ((v50 & 1) != 0)
    v57 = -76.0;
  if (v53)
    v58 = -150.0;
  else
    v58 = v54;
  if (v58 < v57)
    v57 = v58;
  if (v57 < 0.0)
    v59 = 0.0;
  else
    v59 = v57;
  v60 = v80;
  sub_100021CC0((uint64_t)v51, v80, &qword_100831660);
  v61 = v60 + *(int *)(sub_100047110(&qword_1008315F8) + 36);
  *(double *)v61 = v59;
  *(_QWORD *)(v61 + 8) = 0;
  return sub_10001BE90((uint64_t)v51, &qword_100831660);
}

double sub_1003BEC20()
{
  uint64_t v0;

  v0 = static VerticalAlignment.bottom.getter();
  return ViewDimensions.subscript.getter(v0) + -2.0;
}

uint64_t sub_1003BEC4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  char v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;

  v60 = a2;
  v3 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100831798);
  __chkstk_darwin(v6);
  v59 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v58 - v9;
  *(_QWORD *)v10 = static HorizontalAlignment.leading.getter(v11);
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  v12 = sub_100047110(&qword_1008317A0);
  sub_1003BEF30(a1, &v10[*(int *)(v12 + 44)]);
  if (qword_10081DCC8 != -1)
    swift_once(&qword_10081DCC8, sub_1003BCFEC);
  sub_1002A331C();
  AttributedString.init(_:)(v13);
  v14 = Text.init(_:)(v5);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for WorkoutChartView(0) + 20) + 8);
  KeyPath = swift_getKeyPath(&unk_100639EE8);
  v23 = swift_getKeyPath(&unk_100639F10);
  swift_retain(v21);
  static Published.subscript.getter(&v61, v24, KeyPath, v23);
  swift_release(v21);
  swift_release(KeyPath);
  v25 = swift_release(v23);
  v26 = v62;
  v27 = static Color.gray.getter(v25);
  if ((v26 & 1) == 0)
  {
    v28 = Color.opacity(_:)(0.2);
    swift_release(v27);
    v27 = v28;
  }
  v29 = v18 & 1;
  v30 = Text.foregroundColor(_:)(v27, v14, v16, v18 & 1, v20);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  swift_release(v27);
  v37 = v34 & 1;
  sub_1000E4458(v14, v16, v29);
  swift_bridgeObjectRelease(v20, v38, v39, v40, v41, v42, v43, v44);
  v45 = v59;
  sub_100021CC0((uint64_t)v10, v59, &qword_100831798);
  v46 = v60;
  sub_100021CC0(v45, v60, &qword_100831798);
  v47 = sub_100047110(&qword_1008317A8);
  v48 = v46 + *(int *)(v47 + 48);
  *(_QWORD *)v48 = 0;
  *(_BYTE *)(v48 + 8) = 1;
  v49 = v46 + *(int *)(v47 + 64);
  *(_QWORD *)v49 = v30;
  *(_QWORD *)(v49 + 8) = v32;
  *(_BYTE *)(v49 + 16) = v37;
  *(_QWORD *)(v49 + 24) = v36;
  sub_1000E439C(v30, v32, v37);
  swift_bridgeObjectRetain(v36);
  sub_10001BE90((uint64_t)v10, &qword_100831798);
  sub_1000E4458(v30, v32, v37);
  swift_bridgeObjectRelease(v36, v50, v51, v52, v53, v54, v55, v56);
  return sub_10001BE90(v45, &qword_100831798);
}

uint64_t sub_1003BEF30@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  CHWorkoutDetailHeartRateTableViewCell *v56;
  SEL v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  void (*v65)(_QWORD);
  char *v66;
  uint64_t v67;
  char *v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  char *v76;
  uint64_t v77;
  id v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  CHWorkoutDetailHeartRateTableViewCell *v85;
  CHWorkoutDetailHeartRateTableViewCell *v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  CHWorkoutDetailHeartRateTableViewCell *v95;
  CHWorkoutDetailHeartRateTableViewCell *v96;
  SEL v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  CHWorkoutDetailHeartRateTableViewCell *v109;
  CHWorkoutDetailHeartRateTableViewCell *v110;
  SEL v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  char *v118;
  uint64_t v119;
  char *v120;
  SEL v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  char *v128;
  char *v129;
  uint64_t v130;
  void (*v131)(char *, char *, uint64_t);
  char *v132;
  char *v133;
  uint64_t v134;
  void (*v135)(char *, uint64_t);
  uint64_t v137;
  void (*v138)(char *, _QWORD, uint64_t);
  unsigned int v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  CHWorkoutDetailHeartRateTableViewCell *v157;

  v148 = a2;
  v3 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v3);
  v143 = (char *)&v137 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for DynamicTypeSize(0);
  v142 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v150 = (char *)&v137 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_100047110(&qword_100820D90);
  v6 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v147 = (char *)&v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v146 = (char *)&v137 - v9;
  __chkstk_darwin(v10);
  v145 = (char *)&v137 - v11;
  __chkstk_darwin(v12);
  v141 = (char *)&v137 - v13;
  __chkstk_darwin(v14);
  v152 = (char *)&v137 - v15;
  v140 = type metadata accessor for WorkoutChartViewModel(0);
  v16 = (uint64_t *)(a1 + *(int *)(v140 + 24));
  v17 = v16[1];
  v154 = *v16;
  v155 = v17;
  v18 = sub_100038CA0();
  swift_bridgeObjectRetain(v17);
  v19 = Text.init<A>(_:)(&v154, &type metadata for String, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  if (qword_10081DCB8 != -1)
    swift_once(&qword_10081DCB8, sub_1003BCEE4);
  v26 = Font.init(_:)((id)qword_10086A828);
  v27 = v23 & 1;
  v29 = Text.font(_:)(v26, v19, v21, v27, v25, v28);
  v31 = v30;
  v139 = v32;
  v34 = v33;
  swift_release(v26);
  sub_1000E4458(v19, v21, v27);
  swift_bridgeObjectRelease(v25, v35, v36, v37, v38, v39, v40, v41);
  v42 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for WorkoutChartView(0) + 20) + 8);
  KeyPath = swift_getKeyPath(&unk_100639EE8);
  v44 = swift_getKeyPath(&unk_100639F10);
  swift_retain(v42);
  static Published.subscript.getter(&v154, v45, KeyPath, v44);
  swift_release(v42);
  swift_release(KeyPath);
  v46 = swift_release(v44);
  LOBYTE(v42) = v155;
  v47 = static Color.white.getter(v46);
  v153 = v6;
  v149 = a1;
  if ((v42 & 1) == 0)
  {
    v48 = Color.opacity(_:)(0.2);
    swift_release(v47);
    v47 = v48;
  }
  v49 = v139 & 1;
  v50 = Text.foregroundColor(_:)(v47, v29, v31, v139 & 1, v34);
  v52 = v51;
  v54 = v53;
  v56 = v55;
  swift_release(v47);
  sub_1000E4458(v29, v31, v49);
  swift_bridgeObjectRelease(v34, v57, v58, v59, v60, v61, v62, v63);
  v154 = v50;
  v155 = v52;
  v156 = v54 & 1;
  v157 = v56;
  v64 = v142;
  v65 = *(void (**)(_QWORD))(v142 + 104);
  v66 = v150;
  v139 = enum case for DynamicTypeSize.large(_:);
  v67 = v151;
  v138 = (void (*)(char *, _QWORD, uint64_t))v65;
  v65(v150);
  v68 = v141;
  View.dynamicTypeSize(_:)(v66, &type metadata for Text, &protocol witness table for Text);
  v142 = *(_QWORD *)(v64 + 8);
  ((void (*)(char *, uint64_t))v142)(v66, v67);
  sub_1000E4458(v154, v155, v156);
  swift_bridgeObjectRelease(v157, v69, v70, v71, v72, v73, v74, v75);
  v76 = v68;
  v77 = v144;
  v141 = *(char **)(v153 + 32);
  ((void (*)(char *, char *, uint64_t))v141)(v152, v76, v144);
  v78 = *(id *)(v149 + *(int *)(v140 + 28));
  v79 = v143;
  AttributedString.init(_:)(v78);
  v80 = Text.init(_:)(v79);
  v82 = v81;
  v84 = v83;
  v86 = v85;
  if (qword_10081DCB0 != -1)
    swift_once(&qword_10081DCB0, sub_1003BCDE0);
  v87 = v84 & 1;
  v88 = Font.init(_:)((id)qword_10086A820);
  v90 = Text.font(_:)(v88, v80, v82, v87, v86, v89);
  v92 = v91;
  v94 = v93;
  v96 = v95;
  swift_release(v88);
  LOBYTE(v88) = v94 & 1;
  sub_1000E4458(v80, v82, v87);
  swift_bridgeObjectRelease(v86, v97, v98, v99, v100, v101, v102, v103);
  v104 = sub_1003BF564();
  v105 = Text.foregroundColor(_:)(v104, v90, v92, v94 & 1, v96);
  v107 = v106;
  LOBYTE(v87) = v108;
  v110 = v109;
  swift_release(v104);
  sub_1000E4458(v90, v92, v88);
  swift_bridgeObjectRelease(v96, v111, v112, v113, v114, v115, v116, v117);
  v154 = v105;
  v155 = v107;
  v156 = v87 & 1;
  v157 = v110;
  v118 = v150;
  v119 = v151;
  v138(v150, v139, v151);
  v120 = v146;
  View.dynamicTypeSize(_:)(v118, &type metadata for Text, &protocol witness table for Text);
  ((void (*)(char *, uint64_t))v142)(v118, v119);
  sub_1000E4458(v154, v155, v156);
  swift_bridgeObjectRelease(v157, v121, v122, v123, v124, v125, v126, v127);
  v128 = v145;
  ((void (*)(char *, char *, uint64_t))v141)(v145, v120, v77);
  v129 = v152;
  v130 = v153;
  v131 = *(void (**)(char *, char *, uint64_t))(v153 + 16);
  v131(v120, v152, v77);
  v132 = v147;
  v131(v147, v128, v77);
  v133 = v148;
  v131(v148, v120, v77);
  v134 = sub_100047110(&qword_1008317B0);
  v131(&v133[*(int *)(v134 + 48)], v132, v77);
  v135 = *(void (**)(char *, uint64_t))(v130 + 8);
  v135(v128, v77);
  v135(v129, v77);
  v135(v132, v77);
  return ((uint64_t (*)(char *, uint64_t))v135)(v120, v77);
}

uint64_t sub_1003BF564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutChartView(0) + 20) + 8);
  KeyPath = swift_getKeyPath(&unk_100639EE8);
  v3 = swift_getKeyPath(&unk_100639F10);
  swift_retain(v1);
  static Published.subscript.getter(&v10, v4, KeyPath, v3);
  swift_release(v1);
  swift_release(KeyPath);
  swift_release(v3);
  LOBYTE(KeyPath) = v11;
  v5 = type metadata accessor for WorkoutChartViewModel(0);
  sub_100538FFC(*(_BYTE *)(v0 + *(int *)(v5 + 20)));
  v7 = Color.init(_:)(v6);
  if ((KeyPath & 1) == 0)
  {
    v8 = Color.opacity(_:)(0.2);
    swift_release(v7);
    return v8;
  }
  return v7;
}

uint64_t sub_1003BF638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;

  v37 = a1;
  v44 = a2;
  v3 = type metadata accessor for AxisMarkPosition(0);
  __chkstk_darwin(v3);
  v43 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AxisMarkPreset(0);
  __chkstk_darwin(v5);
  v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WorkoutChartView(0);
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v8;
  __chkstk_darwin(v7);
  v39 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v12 = (uint64_t *)((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_100047110((uint64_t *)&unk_100828730);
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(v13, v15 + 2 * *(_QWORD *)(v10 + 72), v14 | 7);
  *(_OWORD *)(v16 + 16) = xmmword_100620BC0;
  v17 = *(_QWORD *)(a1 + *(int *)(v7 + 20) + 8);
  KeyPath = swift_getKeyPath(&unk_100639FC0);
  v19 = swift_getKeyPath(&unk_100639FE8);
  swift_retain(v17);
  static Published.subscript.getter((_QWORD *)(v16 + v15), v20, KeyPath, v19);
  swift_release(v17);
  swift_release(KeyPath);
  swift_release(v19);
  v21 = swift_getKeyPath(&unk_100639FC0);
  v22 = swift_getKeyPath(&unk_100639FE8);
  swift_retain(v17);
  static Published.subscript.getter(v12, v23, v21, v22);
  swift_release(v21);
  swift_release(v22);
  Date.addingTimeInterval(_:)(v24, *(double *)(v17 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets)* *(double *)(v17 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration));
  v25 = v38;
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v38);
  swift_release(v17);
  v26 = v39;
  sub_10004F8C8(v37, v39, type metadata accessor for WorkoutChartView);
  v27 = *(unsigned __int8 *)(v40 + 80);
  v28 = (v27 + 16) & ~v27;
  v29 = swift_allocObject(&unk_10079CB68, v28 + v41, v27 | 7);
  v30 = sub_1003C0338(v26, v29 + v28);
  v31 = v42;
  v32 = static AxisMarkPreset.automatic.getter(v30);
  v33 = v43;
  static AxisMarkPosition.automatic.getter(v32);
  v34 = sub_100047110(&qword_100831778);
  v35 = sub_1003C0CAC();
  return AxisMarks.init<A>(preset:position:values:content:)(v31, v33, v16, sub_1003C0C60, v29, v34, v25, v35, &protocol witness table for Date);
}

uint64_t sub_1003BF94C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  int v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD v35[2];

  v2 = type metadata accessor for AxisValueLabelOrientation(0);
  __chkstk_darwin(v2);
  v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AxisValueLabelCollisionResolution(0);
  __chkstk_darwin(v5);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v8);
  v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (AxisValue.index.getter(v15))
    v17 = static UnitPoint.trailing.getter();
  else
    v18 = static UnitPoint.leading.getter(v16);
  v20 = v18;
  v21 = v19;
  AxisValue.index.getter(v17);
  AxisValue.as<A>(_:)(v11, v11, &protocol witness table for Date);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10001BE90((uint64_t)v10, (uint64_t *)&unk_100828370);
    v22 = sub_100047110(&qword_100831790);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 1, 1, v22);
  }
  else
  {
    v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    v35[1] = v35;
    *(double *)v35 = v20;
    __chkstk_darwin(v24);
    v26 = static AxisValueLabelCollisionResolution.automatic.getter(v25);
    static AxisValueLabelOrientation.automatic.getter(v26);
    v33 = sub_100047110(&qword_10082A308);
    v34 = sub_1002619A4();
    v32 = &v30;
    LOBYTE(v31) = 0;
    v29 = 0;
    v28 = 2;
    ((void (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, char *, char, char *, _QWORD, char, _QWORD, int, double (*)@<D0>(uint64_t@<X8>)))AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:))(2, v35[0], v21, 0, 0, 0, 1, v7, v28, v4, 0, v29, 0, v31, sub_1003C0D28);
    v27 = sub_100047110(&qword_100831790);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a1, 0, 1, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

double sub_1003BFC1C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  char v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  double result;
  char v54;
  uint64_t v55;
  uint64_t v56;

  v55 = sub_1002A347C(a2, a3);
  v56 = v6;
  v7 = sub_100038CA0();
  v8 = Text.init<A>(_:)(&v55, &type metadata for String, v7);
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  v16 = static Font.footnote.getter(v15);
  v18 = Text.font(_:)(v16, v8, v10, v14, v12, v17);
  v20 = v19;
  v54 = v21;
  v23 = v22;
  swift_release(v16);
  sub_1000E4458(v8, v10, v14);
  swift_bridgeObjectRelease(v12, v24, v25, v26, v27, v28, v29, v30);
  v31 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for WorkoutChartView(0) + 20) + 8);
  KeyPath = swift_getKeyPath(&unk_100639EE8);
  v33 = swift_getKeyPath(&unk_100639F10);
  swift_retain(v31);
  static Published.subscript.getter(&v55, v34, KeyPath, v33);
  swift_release(v31);
  swift_release(KeyPath);
  v35 = swift_release(v33);
  LODWORD(KeyPath) = v56;
  v36 = static Color.gray.getter(v35);
  v37 = 0.2;
  if ((_DWORD)KeyPath)
    v37 = 0.5;
  v38 = Color.opacity(_:)(v37);
  swift_release(v36);
  v55 = v38;
  v39 = Text.foregroundStyle<A>(_:)(&v55, v18, v20, v54 & 1, v23, &type metadata for Color, &protocol witness table for Color);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  sub_1000E4458(v18, v20, v54 & 1);
  swift_release(v38);
  swift_bridgeObjectRelease(v23, v46, v47, v48, v49, v50, v51, v52);
  *(_QWORD *)a4 = v39;
  *(_QWORD *)(a4 + 8) = v41;
  *(_BYTE *)(a4 + 16) = v43 & 1;
  *(_QWORD *)(a4 + 24) = v45;
  result = 0.0;
  *(_OWORD *)(a4 + 32) = xmmword_100628E90;
  return result;
}

void sub_1003BFE00(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  char v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  char v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  char v62;
  SEL v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  uint64_t v76;
  uint64_t v77;
  SEL v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t KeyPath;
  uint64_t v94;
  CHWorkoutDetailHeartRateTableViewCell *v95;
  char *v96;
  id v97;
  uint64_t v98;
  char v99;
  _QWORD v100[2];
  _BYTE v101[7];
  char v102;
  _BYTE v103[7];
  char v104;
  _BYTE v105[7];
  char v106;
  char v107;

  v97 = a3;
  v7 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v7);
  v96 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100[0] = a1;
  v100[1] = a2;
  v9 = sub_100038CA0();
  swift_bridgeObjectRetain(a2);
  v10 = Text.init<A>(_:)(v100, &type metadata for String, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  if (qword_10081DCC0 != -1)
    swift_once(&qword_10081DCC0, sub_1003BCEF8);
  v17 = v14 & 1;
  v18 = Font.init(_:)((id)qword_10086A830);
  v20 = Text.font(_:)(v18, v10, v12, v17, v16, v19);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  swift_release(v18);
  sub_1000E4458(v10, v12, v17);
  swift_bridgeObjectRelease(v16, v27, v28, v29, v30, v31, v32, v33);
  v35 = static Font.Weight.medium.getter(v34);
  v98 = Text.fontWeight(_:)(*(_QWORD *)&v35, 0, v20, v22, v24 & 1, v26);
  v94 = v36;
  v95 = v37;
  HIDWORD(v92) = v38 & 1;
  sub_1000E4458(v20, v22, v24 & 1);
  swift_bridgeObjectRelease(v26, v39, v40, v41, v42, v43, v44, v45);
  KeyPath = swift_getKeyPath(&unk_100639F60);
  v46 = swift_getKeyPath(&unk_100639F90);
  v47 = v97;
  v48 = v96;
  AttributedString.init(_:)(v47);
  v49 = Text.init(_:)(v48);
  v51 = v50;
  v53 = v52;
  v55 = v54 & 1;
  v56 = static Font.Weight.semibold.getter(v49);
  v57 = Text.fontWeight(_:)(*(_QWORD *)&v56, 0, v49, v51, v55, v53);
  v59 = v58;
  v61 = v60;
  LOBYTE(v48) = v62 & 1;
  sub_1000E4458(v49, v51, v55);
  swift_bridgeObjectRelease(v53, v63, v64, v65, v66, v67, v68, v69);
  v70 = swift_getKeyPath(&unk_100639F60);
  v71 = swift_getKeyPath(&unk_100639F90);
  v72 = BYTE4(v92);
  v99 = BYTE4(v92);
  v107 = BYTE4(v92);
  v106 = 0;
  v104 = (char)v48;
  v102 = 0;
  *(_DWORD *)(a4 + 17) = v100[0];
  *(_DWORD *)(a4 + 20) = *(_DWORD *)((char *)v100 + 3);
  *(_DWORD *)(a4 + 49) = *(_DWORD *)v105;
  *(_DWORD *)(a4 + 52) = *(_DWORD *)&v105[3];
  *(_DWORD *)(a4 + 89) = *(_DWORD *)v103;
  *(_DWORD *)(a4 + 92) = *(_DWORD *)&v103[3];
  *(_DWORD *)(a4 + 121) = *(_DWORD *)v101;
  *(_DWORD *)(a4 + 124) = *(_DWORD *)&v101[3];
  v73 = v98;
  v74 = v94;
  v75 = v95;
  *(_QWORD *)a4 = v98;
  *(_QWORD *)(a4 + 8) = v74;
  *(_BYTE *)(a4 + 16) = v72;
  v76 = KeyPath;
  *(_QWORD *)(a4 + 24) = v75;
  *(_QWORD *)(a4 + 32) = v76;
  *(_QWORD *)(a4 + 40) = 1;
  *(_BYTE *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = v46;
  *(_QWORD *)(a4 + 64) = 0x3FE0000000000000;
  *(_QWORD *)(a4 + 72) = v57;
  *(_QWORD *)(a4 + 80) = v59;
  *(_BYTE *)(a4 + 88) = (_BYTE)v48;
  *(_QWORD *)(a4 + 96) = v61;
  *(_QWORD *)(a4 + 104) = v70;
  *(_QWORD *)(a4 + 112) = 1;
  *(_BYTE *)(a4 + 120) = 0;
  *(_QWORD *)(a4 + 128) = v71;
  *(_QWORD *)(a4 + 136) = 0x3FE0000000000000;
  v77 = v74;
  sub_1000E439C(v73, v74, v72);
  swift_bridgeObjectRetain(v75);
  swift_retain(v76);
  swift_retain(v46);
  sub_1000E439C(v57, v59, (char)v48);
  swift_bridgeObjectRetain(v61);
  swift_retain(v70);
  swift_retain(v71);
  sub_1000E4458(v57, v59, (char)v48);
  swift_release(v71);
  swift_release(v70);
  swift_bridgeObjectRelease(v61, v78, v79, v80, v81, v82, v83, v84);
  sub_1000E4458(v98, v77, v99);
  swift_release(v46);
  swift_release(v76);
  swift_bridgeObjectRelease(v75, v85, v86, v87, v88, v89, v90, v91);
}

void sub_1003C017C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __n128 v3;
  double v4;
  uint64_t KeyPath;
  uint64_t v6;
  double v7;
  char v8;

  v2 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for WorkoutChartView(0) + 20) + 8);
  v3 = swift_retain(v2);
  v4 = DragGesture.Value.location.getter(v3);
  KeyPath = swift_getKeyPath(&unk_100639EE8);
  v6 = swift_getKeyPath(&unk_100639F10);
  v7 = v4;
  v8 = 0;
  swift_retain(v2);
  static Published.subscript.setter(&v7, v2, KeyPath, v6);
  sub_100269A6C();
  swift_release(v2);
}

double sub_1003C022C(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double result;
  uint64_t v5;
  char v6;

  v1 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for WorkoutChartView(0) + 20) + 8);
  KeyPath = swift_getKeyPath(&unk_100639EE8);
  v3 = swift_getKeyPath(&unk_100639F10);
  v5 = 0;
  v6 = 1;
  swift_retain_n(v1, 2);
  static Published.subscript.setter(&v5, v1, KeyPath, v3);
  sub_100269A6C();
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_1003C02C4@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  if (qword_10081D700 != -1)
    swift_once(&qword_10081D700, sub_1001BE7B0);
  *a1 = xmmword_10086A088;
  v3 = sub_100047110(&qword_1008315E8);
  return sub_1003BD0BC(v1, (uint64_t)a1 + *(int *)(v3 + 44));
}

uint64_t sub_1003C0338(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutChartView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003C0380()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003C03A4()
{
  return sub_1000E0A18(&qword_100831650, &qword_1008315F8, (void (*)(void))sub_1003C03C8);
}

unint64_t sub_1003C03C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100831658;
  if (!qword_100831658)
  {
    v1 = sub_100007050(&qword_100831660);
    sub_1003C044C();
    sub_100028384(&qword_100823800, &qword_100821238, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100831658);
  }
  return result;
}

unint64_t sub_1003C044C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100831668;
  if (!qword_100831668)
  {
    v1 = sub_100007050(&qword_100831670);
    sub_1003C04D0();
    sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100831668);
  }
  return result;
}

unint64_t sub_1003C04D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100831678;
  if (!qword_100831678)
  {
    v1 = sub_100007050(&qword_100831680);
    sub_1000E0A18(&qword_100831688, &qword_100831690, (void (*)(void))sub_1003C0574);
    sub_100028384(&qword_1008237F0, &qword_1008237F8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100831678);
  }
  return result;
}

unint64_t sub_1003C0574()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100831698;
  if (!qword_100831698)
  {
    v1 = sub_100007050(&qword_1008316A0);
    sub_100028384(&qword_1008316A8, &qword_1008316B0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100831698);
  }
  return result;
}

unint64_t sub_1003C05F8()
{
  unint64_t result;

  result = qword_1008316B8;
  if (!qword_1008316B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AlignmentWritingModifier, &type metadata for _AlignmentWritingModifier);
    atomic_store(result, (unint64_t *)&qword_1008316B8);
  }
  return result;
}

uint64_t sub_1003C064C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_BYTE *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  v12 = *(_QWORD *)(a1 + 152);
  v13 = *(_QWORD *)(a1 + 264);
  v10 = *(_QWORD *)(a1 + 288);
  v14 = *(_QWORD *)(a1 + 280);
  sub_1000E439C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  sub_1000E439C(v5, v6, v7);
  swift_retain(v10);
  swift_bridgeObjectRetain(v8);
  swift_retain(v9);
  swift_retain(v12);
  swift_retain(v13);
  swift_retain(v14);
  return a1;
}

uint64_t sub_1003C0724(uint64_t a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;

  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_BYTE *)(a1 + 112);
  v26 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 152);
  v9 = *(_QWORD *)(a1 + 264);
  v10 = *(_QWORD *)(a1 + 280);
  v27 = *(_QWORD *)(a1 + 288);
  v28 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 120);
  sub_1000E4458(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2, v11, v12, v13, v14, v15, v16, v17);
  sub_1000E4458(v5, v6, v7);
  swift_release(v10);
  swift_release(v9);
  swift_release(v8);
  swift_release(v26);
  swift_bridgeObjectRelease(v28, v18, v19, v20, v21, v22, v23, v24);
  swift_release(v27);
  return a1;
}

uint64_t sub_1003C0810@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003BF638(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1003C0818(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100007050(a2);
    a3();
    sub_1003C05F8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1003C0884()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100831740;
  if (!qword_100831740)
  {
    v1 = sub_100007050(&qword_1008316E8);
    sub_1003C0908();
    sub_100028384(&qword_100831750, &qword_100831758, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100831740);
  }
  return result;
}

unint64_t sub_1003C0908()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = qword_100831748;
  if (!qword_100831748)
  {
    v1 = sub_100007050(&qword_1008316E0);
    v2 = sub_100007050(&qword_1008316D0);
    v4 = type metadata accessor for WorkoutChart(255);
    v5 = sub_100007050(&qword_100831718);
    v6 = sub_1000083D8(&qword_100831720, type metadata accessor for WorkoutChart, (uint64_t)&unk_10063723C);
    v7 = sub_100028384(&qword_100831728, &qword_100831718, (uint64_t)&protocol conformance descriptor for AxisMarks<A>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.chartXAxis<A>(content:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.chartYAxis(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100831748);
  }
  return result;
}

unint64_t sub_1003C0A20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100831760;
  if (!qword_100831760)
  {
    v1 = sub_100007050(&qword_1008316C8);
    sub_100028384(&qword_100831768, &qword_100831730, (uint64_t)&protocol conformance descriptor for ExclusiveGesture<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100831760);
  }
  return result;
}

void sub_1003C0AA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutChartView(0) - 8) + 80);
  sub_1003C017C(a1, v1 + ((v3 + 16) & ~v3));
}

double sub_1003C0AE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutChartView(0) - 8) + 80);
  return sub_1003C022C(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1003C0B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;

  v1 = type metadata accessor for WorkoutChartView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v9[6] + 8), v10, v11, v12, v13, v14, v15, v16);

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v9[8]), v17, v18, v19, v20, v21, v22, v23);
  v24 = v7 + v9[10];
  v25 = type metadata accessor for Date(0);
  v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
  v26(v24, v25);
  v26(v7 + v9[11], v25);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + v9[12]), v27, v28, v29, v30, v31, v32, v33);
  swift_release(*(_QWORD *)(v7 + v9[13]));
  swift_release(*(_QWORD *)(v7 + v9[14]));

  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 20) + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003C0C60@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for WorkoutChartView(0);
  return sub_1003BF94C(a1);
}

unint64_t sub_1003C0CAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100831780;
  if (!qword_100831780)
  {
    v1 = sub_100007050(&qword_100831778);
    sub_100028384(&qword_100831788, &qword_100831790, (uint64_t)&protocol conformance descriptor for AxisValueLabel<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100831780);
  }
  return result;
}

double sub_1003C0D28@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003BFC1C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

uint64_t sub_1003C0D34()
{
  return sub_100028384(&qword_1008317B8, &qword_1008317C0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
}

_QWORD *sub_1003C0D68(uint64_t a1)
{
  int64_t v1;
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v26 = *(_QWORD *)(a1 + 16);
  sub_10012159C(0, v1, 0);
  result = (_QWORD *)sub_1004D3554(a1);
  v4 = (uint64_t)result;
  v6 = v26;
  v5 = a1;
  v7 = 0;
  v8 = a1 + 64;
  v9 = a1 + 80;
  while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v5 + 32))
  {
    v11 = (unint64_t)v4 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v5 + 36) != (_DWORD)v3)
      goto LABEL_24;
    v12 = *(_QWORD *)(v5 + 48) + 16 * v4;
    v13 = *(_QWORD *)v12;
    v14 = *(unsigned __int8 *)(v12 + 8);
    v16 = _swiftEmptyArrayStorage[2];
    v15 = _swiftEmptyArrayStorage[3];
    if (v16 >= v15 >> 1)
    {
      v24 = v8;
      v25 = v3;
      v23 = v9;
      result = (_QWORD *)sub_10012159C(v15 > 1, v16 + 1, 1);
      v9 = v23;
      v8 = v24;
      v3 = v25;
      v6 = v26;
      v5 = a1;
    }
    _swiftEmptyArrayStorage[2] = v16 + 1;
    v17 = &_swiftEmptyArrayStorage[2 * v16];
    v17[4] = v13;
    *((_WORD *)v17 + 20) = v14;
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v4 >= v10)
      goto LABEL_25;
    v18 = *(_QWORD *)(v8 + 8 * v11);
    if ((v18 & (1 << v4)) == 0)
      goto LABEL_26;
    if (*(_DWORD *)(v5 + 36) != (_DWORD)v3)
      goto LABEL_27;
    v19 = v18 & (-2 << (v4 & 0x3F));
    if (v19)
    {
      v10 = __clz(__rbit64(v19)) | v4 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = v11 + 1;
      v21 = (unint64_t)(v10 + 63) >> 6;
      if (v11 + 1 < v21)
      {
        v22 = *(_QWORD *)(v8 + 8 * v20);
        if (v22)
        {
LABEL_20:
          v10 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            v22 = *(_QWORD *)(v9 + 8 * v11++);
            if (v22)
            {
              v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v4 = v10;
    if (v7 == v6)
      return _swiftEmptyArrayStorage;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1003C0F68(uint64_t a1, __int16 a2)
{
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  char v7;
  int v9;
  unsigned __int8 v10;

  switch(HIBYTE(a2))
  {
    case 2:
    case 3:
    case 4:
    case 5:
      v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v3 = String._bridgeToObjectiveC()();
      v4 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, 0, 0);

      break;
    case 6:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x800000010069D740, "FitnessApp/HistoryDataProvider.swift", 36, 2, 44, 0);
      __break(1u);
      JUMPOUT(0x1003C1278);
    default:
      v7 = a2;
      v9 = a2;
      v2 = objc_msgSend(objc_allocWithZone((Class)CHWorkoutTypeKey), "init");
      objc_msgSend(v2, "setActivityType:", a1);
      v10 = objc_msgSend((id)objc_opt_self(CHWorkoutTypeKey), "historyFilterDisambiguatesLocationForActivityType:", a1);
      if (v9 != 2 && (v10 & 1) != 0)
        objc_msgSend(v2, "setIndoor:", v7 & 1);
      v4 = objc_msgSend((id)objc_opt_self(CHWorkoutDataProvider), "localizedShortNameForWorkoutTypeKey:", v2);
      break;
  }
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  return v5;
}

void sub_1003C128C(uint64_t a1, Swift::UInt a2, __int16 a3)
{
  Swift::UInt v3;
  int v6;
  Swift::UInt8 v7;

  switch(HIBYTE(a3))
  {
    case 2:
      v3 = 0;
      goto LABEL_7;
    case 3:
      v3 = 1;
      goto LABEL_7;
    case 4:
      v3 = 3;
      goto LABEL_7;
    case 5:
      v3 = 4;
      goto LABEL_7;
    case 6:
      v3 = 5;
LABEL_7:
      Hasher._combine(_:)(v3);
      break;
    default:
      v6 = a3;
      Hasher._combine(_:)(2uLL);
      Hasher._combine(_:)(a2);
      if (v6 == 2)
      {
        v7 = 0;
      }
      else
      {
        Hasher._combine(_:)(1u);
        v7 = a3 & 1;
      }
      Hasher._combine(_:)(v7);
      Hasher._combine(_:)(HIBYTE(a3) & 1);
      break;
  }
}

Swift::Int sub_1003C1348()
{
  uint64_t v0;
  Swift::UInt v1;
  __int16 v2;
  _QWORD v4[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_WORD *)(v0 + 8);
  Hasher.init(_seed:)(v4, 0);
  sub_1003C128C((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

void sub_1003C1394(uint64_t a1)
{
  uint64_t v1;

  sub_1003C128C(a1, *(_QWORD *)v1, *(_WORD *)(v1 + 8));
}

Swift::Int sub_1003C13A0(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt v2;
  __int16 v3;
  _QWORD v5[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_WORD *)(v1 + 8);
  Hasher.init(_seed:)(v5, a1);
  sub_1003C128C((uint64_t)v5, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_1003C13E8(uint64_t a1, uint64_t a2)
{
  return sub_1003C5C04(*(_QWORD *)a1, *(_WORD *)(a1 + 8), *(_QWORD *)a2, *(unsigned __int16 *)(a2 + 8));
}

uint64_t sub_1003C1400@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1003C0F68(*(_QWORD *)v1, *(_WORD *)(v1 + 8));
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1003C142C(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  int v3;

  v2 = *v1;
  if (*v1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = *((unsigned __int8 *)v1 + 8);
    if ((v3 & 1) == 0 && v3 != 2)
      v2 = -v2;
    *a1 = v2;
  }
}

Swift::Int sub_1003C1450()
{
  uint64_t v0;
  Swift::UInt v1;
  int v2;
  Swift::UInt8 v3;
  _QWORD v5[9];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)(v5, 0);
  Hasher._combine(_:)(v1);
  if (v2 == 2)
  {
    v3 = 0;
  }
  else
  {
    v3 = v2 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

void sub_1003C14CC()
{
  uint64_t v0;
  int v1;
  Swift::UInt8 v2;

  v1 = *(unsigned __int8 *)(v0 + 8);
  Hasher._combine(_:)(*(_QWORD *)v0);
  if (v1 == 2)
  {
    v2 = 0;
  }
  else
  {
    v2 = v1 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v2);
}

Swift::Int sub_1003C151C(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt v2;
  int v3;
  Swift::UInt8 v4;
  _QWORD v6[9];

  v2 = *(_QWORD *)v1;
  v3 = *(unsigned __int8 *)(v1 + 8);
  Hasher.init(_seed:)(v6, a1);
  Hasher._combine(_:)(v2);
  if (v3 == 2)
  {
    v4 = 0;
  }
  else
  {
    v4 = v3 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

uint64_t sub_1003C1594(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  char v6;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  v4 = v2 == 2;
  if (v3 != 2)
    v4 = 0;
  if (v2 == 2 || v3 == 2)
    v6 = v4;
  else
    v6 = ((v2 & 1) == 0) ^ v3;
  return v6 & 1;
}

void sub_1003C165C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _UNKNOWN **v7;
  unsigned __int16 *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned __int16 *v29;
  unsigned int v30;
  uint64_t v31;
  Swift::UInt v32;
  _QWORD *v33;
  unint64_t v34;
  char v35;
  char isUniquelyReferenced_nonNull_native;
  _UNKNOWN **v37;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  _UNKNOWN **v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  _UNKNOWN **v51;

  v1 = v0;
  v2 = OBJC_IVAR___CHHistoryDataProvider_historyTypeCounts;
  v49 = v0;
  v3 = 0;
  v4 = _swiftEmptyArrayStorage;
  do
  {
    if (v3 <= 3)
      v5 = 3;
    else
      v5 = v3;
    v6 = -v5;
    v7 = &off_10077EF60 + 2 * v3++;
    v8 = (unsigned __int16 *)(v7 + 5);
    while (1)
    {
      if (v6 + v3 == 1)
      {
        __break(1u);
LABEL_40:
        __break(1u);

        swift_release(v51);
        __break(1u);
        return;
      }
      v11 = *((_QWORD *)v8 - 1);
      v12 = *v8;
      v13 = *(_QWORD *)&v1[v2];
      if ((*v8 & 0xFF00) == 0x300)
      {
        swift_bridgeObjectRetain(*(_QWORD *)&v1[v2]);
        v10 = sub_1003C1A4C(v9);
        swift_bridgeObjectRelease(v13);
        if ((v10 & 1) != 0)
          break;
        goto LABEL_7;
      }
      if (*(_QWORD *)(v13 + 16))
      {
        sub_100439B8C(*((_QWORD *)v8 - 1), *v8);
        if ((v14 & 1) != 0)
          break;
      }
LABEL_7:
      ++v3;
      v8 += 8;
      if (v3 == 4)
        goto LABEL_17;
    }
    v51 = (_UNKNOWN **)v4;
    if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
    {
      sub_10012159C(0, v4[2] + 1, 1);
      v4 = v51;
    }
    v16 = v4[2];
    v15 = v4[3];
    if (v16 >= v15 >> 1)
    {
      sub_10012159C(v15 > 1, v16 + 1, 1);
      v4 = v51;
    }
    v4[2] = v16 + 1;
    v17 = &v4[2 * v16];
    v17[4] = v11;
    *((_WORD *)v17 + 20) = v12;
  }
  while (v3 != 3);
LABEL_17:

  v51 = (_UNKNOWN **)v4;
  v1 = v49;
  swift_retain(v4);
  sub_1003C8A68((uint64_t *)&v51, v1, sub_1003C6A8C);
  swift_release(v4);

  v18 = (uint64_t)v51;
  v50 = OBJC_IVAR___CHHistoryDataProvider_activityTypeCounts;
  v19 = *(_QWORD *)&v1[OBJC_IVAR___CHHistoryDataProvider_activityTypeCounts];
  swift_bridgeObjectRetain(v19);
  v21 = sub_1003C0D68(v20);
  swift_bridgeObjectRelease(v19);
  v22 = v21[2];
  v47 = v1;
  if (v22)
  {
    v23 = 0;
    v24 = v21 + 5;
    v25 = v22;
    v26 = -(uint64_t)v22;
    v48 = _swiftEmptyArrayStorage;
    v45 = v18;
    v46 = v21;
    v44 = v22;
LABEL_19:
    if (v23 <= v25)
      v27 = v25;
    else
      v27 = v23;
    v28 = -(uint64_t)v27;
    v29 = (unsigned __int16 *)&v24[2 * v23++];
    while (v28 + v23 != 1)
    {
      v30 = *v29;
      if ((v30 >> 8) - 2 >= 5)
      {
        v31 = *(_QWORD *)&v1[v50];
        if (*(_QWORD *)(v31 + 16))
        {
          v32 = *((_QWORD *)v29 - 1);
          v33 = v24;
          v34 = sub_100439BF0(v32, *v29);
          v24 = v33;
          if ((v35 & 1) != 0 && *(uint64_t *)(*(_QWORD *)(v31 + 56) + 8 * v34) >= 1)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v48);
            v51 = (_UNKNOWN **)v48;
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v37 = (_UNKNOWN **)v48;
            }
            else
            {
              sub_10012159C(0, v48[2] + 1, 1);
              v37 = v51;
            }
            v21 = v46;
            v39 = (unint64_t)v37[2];
            v38 = (unint64_t)v37[3];
            v40 = (void *)(v39 + 1);
            if (v39 >= v38 >> 1)
            {
              sub_10012159C(v38 > 1, v39 + 1, 1);
              v40 = (void *)(v39 + 1);
              v21 = v46;
              v37 = v51;
            }
            v37[2] = v40;
            v48 = v37;
            v41 = &v37[2 * v39];
            v41[4] = (_UNKNOWN *)v32;
            *((_WORD *)v41 + 20) = v30;
            v25 = v44;
            v18 = v45;
            v24 = v33;
            if (v26 + v23)
              goto LABEL_19;
            goto LABEL_38;
          }
        }
      }
      ++v23;
      v29 += 8;
      if (v26 + v23 == 1)
      {
        v18 = v45;
        v21 = v46;
        goto LABEL_38;
      }
    }
    goto LABEL_40;
  }
  v48 = _swiftEmptyArrayStorage;
LABEL_38:
  swift_bridgeObjectRelease(v21);

  v51 = (_UNKNOWN **)v48;
  v42 = v47;
  swift_retain(v48);
  sub_1003C8A68((uint64_t *)&v51, v42, sub_1003C7F94);
  swift_release(v48);

  v43 = (uint64_t)v51;
  v51 = &off_10077EFB0;
  sub_10013C3E4(v18);
  sub_10013C3E4(v43);
}

uint64_t sub_1003C1A4C(uint64_t result)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;

  if (!*(_QWORD *)(result + 16))
    return 0;
  v1 = 0;
  v2 = result + 64;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  while (v5)
  {
    v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v8 = v7 | (v1 << 6);
LABEL_6:
    if (*(uint64_t *)(*(_QWORD *)(result + 56) + 8 * v8) > 0)
      return 1;
  }
  v9 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v9 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v9);
  ++v1;
  if (v10)
    goto LABEL_23;
  v1 = v9 + 1;
  if (v9 + 1 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
    goto LABEL_23;
  v1 = v9 + 2;
  if (v9 + 2 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
    goto LABEL_23;
  v1 = v9 + 3;
  if (v9 + 3 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
  {
LABEL_23:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v1 << 6);
    goto LABEL_6;
  }
  v11 = v9 + 4;
  if (v11 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v11);
  if (v10)
  {
    v1 = v11;
    goto LABEL_23;
  }
  while (1)
  {
    v1 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v1 >= v6)
      return 0;
    v10 = *(_QWORD *)(v2 + 8 * v1);
    ++v11;
    if (v10)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1003C1B74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;
  _BYTE v22[24];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = *(void **)(Strong + OBJC_IVAR___CHHistoryDataProvider_queue);
    v13 = v12;

    if (v12)
    {
      aBlock[4] = sub_1003C5D5C;
      v21 = a1;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10002D0F8;
      aBlock[3] = &unk_10079CE58;
      v14 = _Block_copy(aBlock);
      v15 = swift_retain(a1);
      static DispatchQoS.unspecified.getter(v15);
      v19 = _swiftEmptyArrayStorage;
      v16 = sub_10002FAC0();
      v17 = sub_100047110(&qword_100828C80);
      v18 = sub_10002FB08();
      dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v17, v18, v2, v16);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v14);
      _Block_release(v14);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_release(v21);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1003C1D58(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10002D204();

  }
}

void sub_1003C1DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(id *)(Strong + OBJC_IVAR___CHHistoryDataProvider_mindfulnessSessionDataProvider);

    objc_msgSend(v5, "startMindfulnessSessionQueryIfNeeded");
  }
}

void sub_1003C1E1C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE *Strong;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    Strong[*a2] = 1;

  }
  swift_beginAccess(v3, &v7, 0, 0);
  v5 = swift_unknownObjectWeakLoadStrong(v3);
  if (v5)
  {
    v6 = (void *)v5;
    sub_10002D204();

  }
}

_QWORD *sub_1003C1EA0(void *a1, __int16 a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v22;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR___CHHistoryDataProvider_allHistoryItems);
  swift_bridgeObjectRetain(v5);
  sub_1003C2258(v6, a1, a2);
  v8 = v7;
  swift_bridgeObjectRelease(v5);
  v9 = sub_1003C8B08(v8);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRetain_n(v9, 2);
  v10 = sub_100295E78(v9);
  swift_bridgeObjectRelease(v9);
  v22 = (_QWORD *)v10;
  sub_1003C3494(&v22);
  swift_bridgeObjectRelease(v9);
  v11 = (uint64_t)v22;
  swift_bridgeObjectRetain(v9);
  v12 = _swiftEmptyArrayStorage;
  sub_1003C8DB0(_swiftEmptyArrayStorage, v11, v9);
  v14 = v13;
  swift_release(v11);
  swift_bridgeObjectRelease_n(v9, 2);
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = (_QWORD *)(v14 + 32);
    do
    {
      v19 = *v16;
      if (*(_QWORD *)(*v16 + 16))
      {
        swift_bridgeObjectRetain(*v16);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
        v22 = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100121910(0, v12[2] + 1, 1);
          v12 = v22;
        }
        v18 = v12[2];
        v17 = v12[3];
        if (v18 >= v17 >> 1)
        {
          sub_100121910(v17 > 1, v18 + 1, 1);
          v12 = v22;
        }
        v12[2] = v18 + 1;
        v12[v18 + 4] = v19;
      }
      ++v16;
      --v15;
    }
    while (v15);
  }
  swift_bridgeObjectRelease(v14);
  sub_1003C904C((uint64_t)a1, a2, (uint64_t)v12);
  return v12;
}

uint64_t sub_1003C2068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, _QWORD, uint64_t);
  void *v20;
  __n128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v24 = a1;
  v25 = a3;
  v4 = type metadata accessor for Date(0);
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Calendar(0);
  v7 = *(_QWORD *)(v23 - 8);
  v8 = __chkstk_darwin(v23);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter(v8);
  v11 = sub_100047110((uint64_t *)&unk_100828720);
  v12 = type metadata accessor for Calendar.Component(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = *(unsigned __int8 *)(v13 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = swift_allocObject(v11, v16 + 3 * v14, v15 | 7);
  *(_OWORD *)(v17 + 16) = xmmword_100624A40;
  v18 = v17 + v16;
  v19 = *(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104);
  v19(v18, enum case for Calendar.Component.month(_:), v12);
  v19(v18 + v14, enum case for Calendar.Component.year(_:), v12);
  v19(v18 + 2 * v14, enum case for Calendar.Component.era(_:), v12);
  v20 = sub_1002302F0(v17);
  swift_setDeallocating(v17);
  swift_arrayDestroy(v18, 3, v12);
  swift_deallocClassInstance(v17, 32, 7);
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(v24, a2);
  Calendar.dateComponents(_:from:)(v20, v6);
  v21 = swift_bridgeObjectRelease(v20);
  (*(void (**)(char *, uint64_t, __n128))(v26 + 8))(v6, v27, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v23);
}

void sub_1003C2258(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  __int128 v26[2];
  _QWORD *v27;

  if ((a3 & 0xFF00) == 0x200)
  {
    swift_bridgeObjectRetain(a1);
  }
  else
  {
    v7 = *(_QWORD *)(v3 + OBJC_IVAR___CHHistoryDataProvider_stackHistoryItems);
    *(_QWORD *)&v26[0] = a1;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(a1);
    sub_10002DC18(v7);
    v8 = *(_QWORD *)&v26[0];
    v27 = _swiftEmptyArrayStorage;
    v9 = *(_QWORD *)(*(_QWORD *)&v26[0] + 16);
    if (v9)
    {
      v10 = 0;
      v11 = *(_QWORD *)&v26[0] + 32;
      v21 = *(_QWORD *)(*(_QWORD *)&v26[0] + 16);
      v22 = a2;
      while (v10 < *(_QWORD *)(v8 + 16))
      {
        sub_1000252E0(v11, (uint64_t)v26);
        if ((sub_1003C2474(v26, a2, a3) & 1) != 0)
        {
          sub_10002411C(v26, (uint64_t)v23);
          v12 = v27;
          if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
          {
            sub_10012176C(0, v12[2] + 1, 1);
            v12 = v27;
          }
          v14 = v12[2];
          v13 = v12[3];
          if (v14 >= v13 >> 1)
            sub_10012176C(v13 > 1, v14 + 1, 1);
          v15 = v24;
          v16 = v25;
          v17 = sub_10017C044((uint64_t)v23, v24);
          __chkstk_darwin(v17);
          v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v20 + 16))(v19);
          sub_1003C5B8C(v14, (uint64_t)v19, (uint64_t *)&v27, v15, v16);
          _s10FitnessApp24HistoryViewActionContextVwxx_0(v23);
          v9 = v21;
          a2 = v22;
        }
        else
        {
          _s10FitnessApp24HistoryViewActionContextVwxx_0(v26);
        }
        ++v10;
        v11 += 40;
        if (v9 == v10)
          goto LABEL_14;
      }
      __break(1u);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v26);
      swift_bridgeObjectRelease(v8);
      swift_release(v27);
      __break(1u);
    }
    else
    {
LABEL_14:
      swift_bridgeObjectRelease(v8);
    }
  }
}

uint64_t sub_1003C2474(_QWORD *a1, id a2, __int16 a3)
{
  int v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  _BOOL8 v12;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unsigned int v18;
  id v19;
  void *v20;
  _BOOL4 v21;
  id v22;
  unsigned int v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  BOOL v34;
  id v35;
  uint64_t v37;
  id v38;
  unint64_t v39;
  _BYTE v40[40];
  id v41;

  v4 = HIBYTE(a3);
  if (HIBYTE(a3) - 4 < 3 || HIBYTE(a3) == 2)
  {
    v6 = a1[3];
    sub_100016804(a1, v6);
    sub_1003C28AC(v6);
    switch(v7)
    {
      case 2:
        if (v4 != 2)
          return 0;
        break;
      case 3:
        if (v4 != 3)
          return 0;
        break;
      case 4:
        if (v4 != 4)
          return 0;
        break;
      case 5:
        if (v4 != 5)
          return 0;
        break;
      case 6:
        if (v4 != 6)
          return 0;
        break;
      default:
        return 0;
    }
    return 1;
  }
  else
  {
    if (HIBYTE(a3) == 3)
    {
      sub_1000252E0((uint64_t)a1, (uint64_t)v40);
      v8 = sub_100047110((uint64_t *)&unk_10082E5B0);
      v9 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
      if ((swift_dynamicCast(&v41, v40, v8, v9, 6) & 1) != 0)
      {
        v10 = v41;
        v11 = objc_msgSend(v41, "workoutActivityType");

        return v11 != (id)84;
      }
      return 0;
    }
    sub_1000252E0((uint64_t)a1, (uint64_t)v40);
    v15 = sub_100047110((uint64_t *)&unk_10082E5B0);
    v16 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
    if ((swift_dynamicCast(&v41, v40, v15, v16, 6) & 1) == 0)
      return 0;

    sub_1000252E0((uint64_t)a1, (uint64_t)v40);
    if ((swift_dynamicCast(&v41, v40, v15, v16, 6) & 1) == 0)
      return 0;
    v17 = v41;
    v18 = objc_msgSend((id)objc_opt_self(CHWorkoutTypeKey), "historyFilterDisambiguatesLocationForActivityType:", objc_msgSend(v41, "workoutActivityType"));
    if (a3 != 2 && v18)
    {
      v19 = objc_msgSend(v17, "fiui_activityType");
      if (v19)
      {
        v20 = v19;
        if (objc_msgSend(v19, "effectiveTypeIdentifier") == a2)
        {
          v21 = (a3 & 1) == 0;
          v22 = v20;
          v23 = objc_msgSend(v22, "isIndoor");

          return v21 ^ v23;
        }

      }
      return 0;
    }
    if ((a3 & 0x100) != 0 && objc_msgSend(v17, "workoutActivityType") == (id)82)
    {
      v24 = objc_msgSend(v17, "workoutActivities");
      v25 = sub_10001E724(0, (unint64_t *)&qword_10082E6A0, HKWorkoutActivity_ptr);
      v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

      if ((unint64_t)v26 >> 62)
        goto LABEL_48;
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v26);
      for (; v27; v27 = _CocoaArrayWrapper.endIndex.getter(v37))
      {
        v38 = v17;
        v39 = v26 & 0xC000000000000001;
        v28 = 4;
        v29 = v26;
        while (1)
        {
          v17 = (id)(v28 - 4);
          v30 = v39
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28 - 4, v26)
              : *(id *)(v26 + 8 * v28);
          v31 = v30;
          v26 = v28 - 3;
          if (__OFADD__(v17, 1))
            break;
          v32 = objc_msgSend(v30, "fiui_activityType");
          v33 = objc_msgSend(v32, "effectiveTypeIdentifier");

          v12 = v33 == a2;
          ++v28;
          v34 = v33 == a2 || v26 == v27;
          v26 = v29;
          if (v34)
          {
            v17 = v38;
            goto LABEL_53;
          }
        }
        __break(1u);
LABEL_48:
        if (v26 < 0)
          v37 = v26;
        else
          v37 = v26 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v26);
      }
      v12 = 0;
LABEL_53:

      swift_bridgeObjectRelease_n(v26, 2);
    }
    else
    {
      v35 = objc_msgSend(v17, "workoutActivityType");

      return v35 == a2;
    }
  }
  return v12;
}

uint64_t sub_1003C28AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  uint64_t result;
  uint64_t v27;
  id v28;

  v3 = type metadata accessor for FitnessPlusStackViewModel(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v27 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v27 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v27 - v16;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v19((char *)&v27 - v16, v1, a1);
  v20 = type metadata accessor for MindfulnessSessionViewModel(0);
  if (swift_dynamicCast(&v28, v17, a1, v20, 6))
  {

    return 0;
  }
  v19(v15, v1, a1);
  if (swift_dynamicCast(v6, v15, a1, v3, 6))
  {
    sub_100149D44((uint64_t)v6);
    return 0;
  }
  v19(v12, v1, a1);
  v22 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  if (!swift_dynamicCast(&v28, v12, a1, v22, 6))
    return 0;

  v19(v9, v1, a1);
  if ((swift_dynamicCast(&v28, v9, a1, v22, 6) & 1) == 0)
    return 0;
  v23 = v28;
  v24 = objc_msgSend(v28, "fiui_activityType");
  if (v24)
  {
    v25 = v24;
    if (objc_msgSend(v24, "effectiveTypeIdentifier") == (id)84)
    {

      return 0;
    }
    else
    {
      if (objc_msgSend((id)objc_opt_self(CHWorkoutTypeKey), "historyFilterDisambiguatesLocationForActivityType:", objc_msgSend(v25, "effectiveTypeIdentifier")))objc_msgSend(v25, "isIndoor");
      v21 = objc_msgSend(v25, "effectiveTypeIdentifier");

    }
    return (uint64_t)v21;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003BLL, 0x800000010069D7B0, "FitnessApp/HistoryDataProvider.swift", 36, 2, 467, 0);
  __break(1u);
  return result;
}

void sub_1003C2BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR___CHHistoryDataProvider_queue);
  if (!v5)
    goto LABEL_10;
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v6 = v5;
  v7 = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    v15 = v17;
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v15);
    __break(1u);
    return;
  }
  v8 = &_swiftEmptyDictionarySingleton;
  v17 = &_swiftEmptyDictionarySingleton;
  v18 = &_swiftEmptyDictionarySingleton;
  v9 = *(_QWORD *)(v0 + OBJC_IVAR___CHHistoryDataProvider_allHistoryItems);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = (_QWORD *)(v9 + 32);
    swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + OBJC_IVAR___CHHistoryDataProvider_allHistoryItems), 2);
    do
    {
      sub_1003C2D3C(&v17, v11, &v18);
      v11 += 5;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease_n(v9, 2);
    v12 = v17;
    v8 = v18;
  }
  else
  {
    v12 = &_swiftEmptyDictionarySingleton;
  }
  v13 = *(_QWORD *)(v0 + OBJC_IVAR___CHHistoryDataProvider_historyTypeCounts);
  *(_QWORD *)(v0 + OBJC_IVAR___CHHistoryDataProvider_historyTypeCounts) = v12;
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(v0 + OBJC_IVAR___CHHistoryDataProvider_activityTypeCounts);
  *(_QWORD *)(v0 + OBJC_IVAR___CHHistoryDataProvider_activityTypeCounts) = v8;
  swift_bridgeObjectRelease(v14);
}

uint64_t sub_1003C2D3C(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  char v3;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;

  v6 = a2[3];
  sub_100016804(a2, v6);
  v7 = sub_1003C28AC(v6);
  v9 = v8;
  if (BYTE1(v8) - 2 >= 5)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a3);
    v11 = *a3;
    v37 = *a3;
    *a3 = 0x8000000000000000;
    v13 = sub_100439BF0(v7, v9);
    v14 = *(_QWORD *)(v11 + 16);
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
      goto LABEL_24;
    v3 = v12;
    if (*(_QWORD *)(v11 + 24) >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100403928();
        v11 = v37;
      }
    }
    else
    {
      sub_1003FBF00(v16, isUniquelyReferenced_nonNull_native);
      v11 = v37;
      v17 = sub_100439BF0(v7, v9);
      if ((v3 & 1) != (v18 & 1))
      {
LABEL_28:
        result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for FilterActivityType);
        __break(1u);
        return result;
      }
      v13 = v17;
    }
    v19 = *a3;
    *a3 = v11;
    swift_bridgeObjectRelease(v19);
    v20 = (_QWORD *)*a3;
    swift_bridgeObjectRetain(*a3);
    if ((v3 & 1) == 0)
      sub_100400AE4(v13, v7, v9, 0, v20);
    a3 = (_QWORD *)v20[7];
    swift_bridgeObjectRelease(v20);
    v21 = a3[v13];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_25;
    a3[v13] = v23;
    a3 = sub_1000D9028;
  }
  else
  {
    a3 = 0;
  }
  v24 = swift_isUniquelyReferenced_nonNull_native(*a1);
  v25 = *a1;
  v37 = *a1;
  *a1 = 0x8000000000000000;
  v13 = sub_100439B8C(v7, v9);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = (v26 & 1) == 0;
  v29 = v27 + v28;
  if (__OFADD__(v27, v28))
  {
    __break(1u);
    goto LABEL_23;
  }
  v3 = v26;
  if (*(_QWORD *)(v25 + 24) >= v29)
  {
    if ((v24 & 1) == 0)
      goto LABEL_26;
    goto LABEL_18;
  }
  sub_1003FBB60(v29, v24);
  v25 = v37;
  v30 = sub_100439B8C(v7, v9);
  if ((v3 & 1) != (v31 & 1))
  {
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for HistoryItemFilterValue);
    __break(1u);
    goto LABEL_28;
  }
  v13 = v30;
  while (1)
  {
LABEL_18:
    v32 = *a1;
    *a1 = v25;
    swift_bridgeObjectRelease(v32);
    v33 = (_QWORD *)*a1;
    swift_bridgeObjectRetain(*a1);
    if ((v3 & 1) == 0)
      sub_100400A98(v13, v7, v9, 0, v33);
    a1 = (_QWORD *)v33[7];
    swift_bridgeObjectRelease(v33);
    v34 = a1[v13];
    v22 = __OFADD__(v34, 1);
    v35 = v34 + 1;
    if (!v22)
      break;
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    sub_100403788();
    v25 = v37;
  }
  a1[v13] = v35;
  return sub_100022BA4((uint64_t)a3, 0);
}

void sub_1003C2FD8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Class isa;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24[5];
  uint64_t v25;

  v9 = *(void **)(v4 + OBJC_IVAR___CHHistoryDataProvider_healthStore);
  v10 = sub_100047110((uint64_t *)&unk_100828340);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100623630;
  *(_QWORD *)(v11 + 32) = a1;
  v24[0] = (CHWorkoutDetailHeartRateTableViewCell *)v11;
  specialized Array._endMutation()(v11);
  sub_10001E724(0, &qword_100821808, HKObject_ptr);
  v12 = a1;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v24[0], v14, v15, v16, v17, v18, v19, v20);
  v21 = swift_allocObject(&unk_10079CE90, 32, 7);
  *(_QWORD *)(v21 + 16) = a3;
  *(_QWORD *)(v21 + 24) = a4;
  v24[4] = (CHWorkoutDetailHeartRateTableViewCell *)sub_100355F10;
  v25 = v21;
  v24[0] = (CHWorkoutDetailHeartRateTableViewCell *)_NSConcreteStackBlock;
  v24[1] = (CHWorkoutDetailHeartRateTableViewCell *)1107296256;
  v24[2] = (CHWorkoutDetailHeartRateTableViewCell *)sub_1000064EC;
  v24[3] = (CHWorkoutDetailHeartRateTableViewCell *)&unk_10079CEA8;
  v22 = _Block_copy(v24);
  v23 = v25;
  sub_10003AFE0(a3, a4);
  objc_msgSend(v9, "_deleteObjects:options:completion:", isa, a2, v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

id sub_1003C3164()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HistoryDataProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t getEnumTagSinglePayload for FilterActivityType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 >= 2)
    v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v4 = -2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FilterActivityType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterActivityType()
{
  return &type metadata for FilterActivityType;
}

uint64_t getEnumTagSinglePayload for HistoryItemFilterValue(uint64_t a1, unsigned int a2)
{
  uint64_t result;
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 9);
  if (v3 < 2)
    return 0;
  v4 = (v3 + 2147483646) & 0x7FFFFFFF;
  result = v4 - 4;
  if (v4 <= 4)
    return 0;
  return result;
}

uint64_t storeEnumTagSinglePayload for HistoryItemFilterValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_QWORD *)result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 + 6;
  }
  return result;
}

uint64_t sub_1003C33B0(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *(unsigned __int8 *)(a1 + 9);
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

uint64_t sub_1003C33CC(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 9) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HistoryItemFilterValue()
{
  return &type metadata for HistoryItemFilterValue;
}

unint64_t sub_1003C3408()
{
  unint64_t result;

  result = qword_100831868;
  if (!qword_100831868)
  {
    result = swift_getWitnessTable(&unk_10063A088, &type metadata for FilterActivityType);
    atomic_store(result, (unint64_t *)&qword_100831868);
  }
  return result;
}

unint64_t sub_1003C3450()
{
  unint64_t result;

  result = qword_100831870;
  if (!qword_100831870)
  {
    result = swift_getWitnessTable(&unk_10063A160, &type metadata for HistoryItemFilterValue);
    atomic_store(result, (unint64_t *)&qword_100831870);
  }
  return result;
}

void sub_1003C3494(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for DateComponents(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_1001477A4(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1003C357C(v5);
  *a1 = v3;
}

void sub_1003C3514(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = (_QWORD *)sub_10002E078(v2);
  v3 = v2[2];
  v4[0] = (uint64_t)(v2 + 4);
  v4[1] = v3;
  sub_1003C41CC(v4);
  *a1 = v2;
}

void sub_1003C357C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  Swift::Int v30;
  unint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  Swift::Int v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  Swift::Int v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  Swift::Int v59;
  char *v60;
  Swift::Int v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  int v76;
  char v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  Swift::Int v82;
  Swift::Int v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  Swift::Int v89;
  Swift::Int v90;
  uint64_t v91;
  Swift::Int v92;
  void (*v93)(char *, uint64_t);
  Swift::Int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  char v115;
  _QWORD *v116;
  void (*v117)(char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  void (*v123)(char *, uint64_t, uint64_t);
  unint64_t v124;
  unint64_t v125;
  char *v126;
  char *v127;
  Swift::Int v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  BOOL v140;
  unint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  BOOL v150;
  uint64_t v151;
  char v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  BOOL v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  unint64_t v174;
  _BOOL4 v176;
  char *v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  unint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  char *v187;
  _QWORD *v188;
  Swift::Int v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  Swift::Int v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  Swift::Int v203;
  void (*v204)(char *, char *, uint64_t);
  Swift::Int v205;
  Swift::Int v206;
  _QWORD *v207;
  char *v208;
  uint64_t *v209;
  char *v210;
  uint64_t v211;

  v2 = v1;
  v4 = type metadata accessor for DateComponents(0);
  v5 = *(_QWORD **)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v194 = (char *)&v186 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v208 = (char *)&v186 - v9;
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v186 - v11;
  v13 = __chkstk_darwin(v10);
  v210 = (char *)&v186 - v14;
  v15 = __chkstk_darwin(v13);
  v195 = (char *)&v186 - v16;
  v17 = __chkstk_darwin(v15);
  v199 = (char *)&v186 - v18;
  v19 = __chkstk_darwin(v17);
  v190 = (char *)&v186 - v20;
  __chkstk_darwin(v19);
  v191 = (char *)&v186 - v21;
  v209 = a1;
  v22 = a1[1];
  v23 = _minimumMergeRunLength(_:)(v22);
  if (v23 >= v22)
  {
    if (v22 < 0)
      goto LABEL_186;
    if (v22)
      sub_1003C4BA0(0, v22, 1, v209);
    return;
  }
  if (v22 >= 0)
    v24 = v22;
  else
    v24 = v22 + 1;
  if (v22 < -1)
    goto LABEL_194;
  v207 = v5;
  v211 = v4;
  v202 = v12;
  v189 = v23;
  if (v22 < 2)
  {
    v29 = (char *)_swiftEmptyArrayStorage;
    v28 = (char *)_swiftEmptyArrayStorage
        + ((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
    v188 = _swiftEmptyArrayStorage;
    if (v22 != 1)
    {
      v31 = _swiftEmptyArrayStorage[2];
LABEL_152:
      if (v31 >= 2)
      {
        v178 = *v209;
        do
        {
          v179 = v31 - 2;
          if (v31 < 2)
            goto LABEL_181;
          if (!v178)
            goto LABEL_193;
          v180 = *(_QWORD *)&v29[16 * v179 + 32];
          v181 = *(_QWORD *)&v29[16 * v31 + 24];
          v182 = v28;
          sub_1003C509C(v178 + v207[9] * v180, v178 + v207[9] * *(_QWORD *)&v29[16 * v31 + 16], v178 + v207[9] * v181, (unint64_t)v28);
          if (v2)
            break;
          if (v181 < v180)
            goto LABEL_182;
          if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
            v29 = sub_100147754((uint64_t)v29);
          if (v179 >= *((_QWORD *)v29 + 2))
            goto LABEL_183;
          v183 = &v29[16 * v179 + 32];
          *(_QWORD *)v183 = v180;
          *((_QWORD *)v183 + 1) = v181;
          v184 = *((_QWORD *)v29 + 2);
          if (v31 > v184)
            goto LABEL_184;
          memmove(&v29[16 * v31 + 16], &v29[16 * v31 + 32], 16 * (v184 - v31));
          *((_QWORD *)v29 + 2) = v184 - 1;
          v31 = v184 - 1;
          v28 = v182;
        }
        while (v184 > 2);
      }
LABEL_163:
      swift_bridgeObjectRelease(v29);
      v185 = v188;
      v188[2] = 0;
      swift_bridgeObjectRelease(v185);
      return;
    }
  }
  else
  {
    v25 = v24 >> 1;
    v26 = static Array._allocateBufferUninitialized(minimumCapacity:)(v24 >> 1, v4);
    *(_QWORD *)(v26 + 16) = v25;
    v27 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
    v188 = (_QWORD *)v26;
    v28 = (char *)(v26 + v27);
  }
  v30 = 0;
  v29 = (char *)_swiftEmptyArrayStorage;
  v198 = v28;
  while (1)
  {
    v192 = v2;
    v32 = v30 + 1;
    v196 = v30;
    if (v30 + 1 >= v22)
    {
      v56 = v30 + 1;
      v2 = v192;
      v55 = v211;
      goto LABEL_66;
    }
    v205 = v22;
    v33 = *v209;
    v34 = v5[9];
    v35 = (void (*)(char *, uint64_t, uint64_t))v5[2];
    v36 = v211;
    v35(v191, *v209 + v34 * v32, v211);
    v201 = (char *)v33;
    v206 = v34;
    v37 = ((uint64_t (*)(char *, uint64_t, uint64_t))v35)(v190, v33 + v34 * v30, v36);
    v38 = DateComponents.era.getter(v37);
    if ((v39 & 1) != 0)
      goto LABEL_26;
    v40 = v38;
    v41 = DateComponents.era.getter(v38);
    if ((v42 & 1) != 0
      || (v43 = v41, v44 = DateComponents.year.getter(v41), (v45 & 1) != 0)
      || (v46 = v44, v47 = DateComponents.year.getter(v44), (v48 & 1) != 0)
      || (v49 = v47, v50 = DateComponents.month.getter(), (v51 & 1) != 0))
    {
LABEL_26:
      LODWORD(v204) = 1;
    }
    else
    {
      v52 = v50;
      v53 = DateComponents.month.getter();
      LODWORD(v204) = 1;
      if ((v54 & 1) == 0)
      {
        v55 = v211;
        if (v43 >= v40)
        {
          if (v40 >= v43)
          {
            if (v49 >= v46)
            {
              v176 = v46 >= v49 && v53 < v52;
              LODWORD(v204) = v176;
            }
            else
            {
              LODWORD(v204) = 1;
            }
          }
          else
          {
            LODWORD(v204) = 0;
          }
        }
        goto LABEL_28;
      }
    }
    v55 = v211;
LABEL_28:
    v5 = v207;
    v57 = (void (*)(char *, uint64_t))v207[1];
    v57(v190, v55);
    v57(v191, v55);
    v56 = v196 + 2;
    if (v196 + 2 < v205)
    {
      v203 = v206 * v32;
      v58 = v201;
      v59 = v206 * v56;
      v60 = v195;
      while (1)
      {
        v61 = v56;
        v35(v199, (uint64_t)&v58[v59], v55);
        v62 = ((uint64_t (*)(char *, char *, uint64_t))v35)(v60, &v58[v203], v55);
        v63 = DateComponents.era.getter(v62);
        if ((v64 & 1) != 0)
          goto LABEL_39;
        v65 = v63;
        v66 = DateComponents.era.getter(v63);
        if ((v67 & 1) != 0
          || (v68 = v66, v69 = DateComponents.year.getter(v66), (v70 & 1) != 0)
          || (v200 = v69, v71 = DateComponents.year.getter(v69), (v72 & 1) != 0)
          || (v197 = v71, v73 = DateComponents.month.getter(), (v74 & 1) != 0))
        {
LABEL_39:
          v76 = 1;
        }
        else
        {
          v193 = v73;
          v75 = DateComponents.month.getter();
          v76 = 1;
          if ((v77 & 1) == 0 && v68 >= v65)
          {
            if (v65 >= v68)
            {
              if (v197 >= v200)
                v76 = v200 >= v197 && v75 < v193;
            }
            else
            {
              v76 = 0;
            }
          }
        }
        v60 = v195;
        v78 = v211;
        v57(v195, v211);
        v57(v199, v78);
        if ((_DWORD)v204 != v76)
          break;
        v56 = v61 + 1;
        v58 += v206;
        v55 = v211;
        if (v205 == v61 + 1)
        {
          v22 = v205;
          v56 = v205;
          v5 = v207;
          goto LABEL_52;
        }
      }
      v5 = v207;
      v55 = v211;
      v56 = v61;
    }
    v22 = v205;
LABEL_52:
    v2 = v192;
    v30 = v196;
    if ((_DWORD)v204)
    {
      if (v56 < v196)
        goto LABEL_187;
      if (v196 < v56)
      {
        v187 = v29;
        v80 = 0;
        v81 = v206 * (v56 - 1);
        v82 = v56 * v206;
        v83 = v196;
        v84 = v196 * v206;
        do
        {
          if (v83 != v56 + v80 - 1)
          {
            v86 = v201;
            if (!v201)
              goto LABEL_192;
            v87 = &v201[v84];
            v88 = &v201[v81];
            v204 = (void (*)(char *, char *, uint64_t))v207[4];
            v204(v194, &v201[v84], v211);
            if (v84 < v81 || v87 >= &v86[v82])
            {
              v85 = &v86[v84];
              v55 = v211;
              swift_arrayInitWithTakeFrontToBack(v85);
            }
            else
            {
              v55 = v211;
              if (v84 != v81)
                swift_arrayInitWithTakeBackToFront(v87);
            }
            v204(v88, v194, v55);
          }
          ++v83;
          --v80;
          v81 -= v206;
          v82 -= v206;
          v84 += v206;
        }
        while (v83 < v56 + v80);
        v2 = v192;
        v5 = v207;
        v29 = v187;
        v30 = v196;
        v22 = v205;
      }
    }
LABEL_66:
    if (v56 >= v22)
      goto LABEL_94;
    if (__OFSUB__(v56, v30))
      goto LABEL_185;
    if (v56 - v30 >= v189)
      goto LABEL_94;
    if (__OFADD__(v30, v189))
      goto LABEL_188;
    v89 = v30 + v189 >= v22 ? v22 : v30 + v189;
    if (v89 < v30)
      break;
    if (v56 != v89)
    {
      v187 = v29;
      v192 = v2;
      v193 = v89;
      v90 = v5[9];
      v201 = (char *)v5[2];
      v91 = v90 * (v56 - 1);
      v205 = v90;
      v92 = v56 * v90;
      do
      {
        v95 = 0;
        v206 = v56;
        v203 = v92;
        v204 = (void (*)(char *, char *, uint64_t))v91;
        while (1)
        {
          v96 = *v209;
          v97 = v92 + v95 + *v209;
          v98 = (uint64_t (*)(char *, uint64_t, uint64_t))v201;
          ((void (*)(char *, uint64_t, uint64_t))v201)(v210, v97, v55);
          v99 = v91 + v95 + v96;
          v100 = v202;
          v101 = v98(v202, v99, v55);
          v102 = DateComponents.era.getter(v101);
          if ((v103 & 1) == 0)
          {
            v104 = v102;
            v105 = DateComponents.era.getter(v102);
            if ((v106 & 1) == 0)
            {
              v107 = v105;
              v108 = DateComponents.year.getter(v105);
              if ((v109 & 1) == 0)
              {
                v110 = v108;
                v200 = DateComponents.year.getter(v108);
                if ((v111 & 1) == 0)
                {
                  v112 = DateComponents.month.getter();
                  if ((v113 & 1) == 0)
                  {
                    v197 = v112;
                    v114 = DateComponents.month.getter();
                    if ((v115 & 1) == 0
                      && v107 >= v104
                      && (v104 < v107 || v200 >= v110 && (v110 < v200 || v114 >= v197)))
                    {
                      break;
                    }
                  }
                }
              }
            }
          }
          v116 = v207;
          v117 = (void (*)(char *, uint64_t))v207[1];
          v118 = v211;
          v117(v100, v211);
          v117(v210, v118);
          v119 = *v209;
          if (!*v209)
            goto LABEL_190;
          v92 = v203;
          v91 = (uint64_t)v204;
          v120 = v118;
          v121 = v119 + v203 + v95;
          v122 = (char *)v204 + v119 + v95;
          v123 = (void (*)(char *, uint64_t, uint64_t))v116[4];
          v123(v208, v121, v120);
          swift_arrayInitWithTakeFrontToBack(v121);
          v55 = v211;
          v123(v122, (uint64_t)v208, v211);
          v94 = v206;
          v95 -= v205;
          if (v206 == ++v30)
            goto LABEL_77;
        }
        v93 = (void (*)(char *, uint64_t))v207[1];
        v55 = v211;
        v93(v100, v211);
        v93(v210, v55);
        v94 = v206;
        v92 = v203;
        v91 = (uint64_t)v204;
LABEL_77:
        v56 = v94 + 1;
        v91 += v205;
        v92 += v205;
        v30 = v196;
      }
      while (v56 != v193);
      v56 = v193;
      v2 = v192;
      v5 = v207;
      v29 = v187;
    }
LABEL_94:
    if (v56 < v30)
      goto LABEL_180;
    if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
      v29 = sub_100147150(0, *((_QWORD *)v29 + 2) + 1, 1, v29);
    v125 = *((_QWORD *)v29 + 2);
    v124 = *((_QWORD *)v29 + 3);
    v31 = v125 + 1;
    v28 = v198;
    v206 = v56;
    if (v125 >= v124 >> 1)
    {
      v177 = sub_100147150((char *)(v124 > 1), v125 + 1, 1, v29);
      v28 = v198;
      v29 = v177;
    }
    *((_QWORD *)v29 + 2) = v31;
    v126 = v29 + 32;
    v127 = &v29[16 * v125 + 32];
    v128 = v206;
    *(_QWORD *)v127 = v30;
    *((_QWORD *)v127 + 1) = v128;
    if (v125)
    {
      while (1)
      {
        v129 = v31 - 1;
        if (v31 >= 4)
        {
          v134 = &v126[16 * v31];
          v135 = *((_QWORD *)v134 - 8);
          v136 = *((_QWORD *)v134 - 7);
          v140 = __OFSUB__(v136, v135);
          v137 = v136 - v135;
          if (v140)
            goto LABEL_169;
          v139 = *((_QWORD *)v134 - 6);
          v138 = *((_QWORD *)v134 - 5);
          v140 = __OFSUB__(v138, v139);
          v132 = v138 - v139;
          v133 = v140;
          if (v140)
            goto LABEL_170;
          v141 = v31 - 2;
          v142 = &v126[16 * v31 - 32];
          v144 = *(_QWORD *)v142;
          v143 = *((_QWORD *)v142 + 1);
          v140 = __OFSUB__(v143, v144);
          v145 = v143 - v144;
          if (v140)
            goto LABEL_172;
          v140 = __OFADD__(v132, v145);
          v146 = v132 + v145;
          if (v140)
            goto LABEL_175;
          if (v146 >= v137)
          {
            v164 = &v126[16 * v129];
            v166 = *(_QWORD *)v164;
            v165 = *((_QWORD *)v164 + 1);
            v140 = __OFSUB__(v165, v166);
            v167 = v165 - v166;
            if (v140)
              goto LABEL_179;
            v157 = v132 < v167;
            goto LABEL_131;
          }
        }
        else
        {
          if (v31 != 3)
          {
            v158 = *((_QWORD *)v29 + 4);
            v159 = *((_QWORD *)v29 + 5);
            v140 = __OFSUB__(v159, v158);
            v151 = v159 - v158;
            v152 = v140;
            goto LABEL_125;
          }
          v131 = *((_QWORD *)v29 + 4);
          v130 = *((_QWORD *)v29 + 5);
          v140 = __OFSUB__(v130, v131);
          v132 = v130 - v131;
          v133 = v140;
        }
        if ((v133 & 1) != 0)
          goto LABEL_171;
        v141 = v31 - 2;
        v147 = &v126[16 * v31 - 32];
        v149 = *(_QWORD *)v147;
        v148 = *((_QWORD *)v147 + 1);
        v150 = __OFSUB__(v148, v149);
        v151 = v148 - v149;
        v152 = v150;
        if (v150)
          goto LABEL_174;
        v153 = &v126[16 * v129];
        v155 = *(_QWORD *)v153;
        v154 = *((_QWORD *)v153 + 1);
        v140 = __OFSUB__(v154, v155);
        v156 = v154 - v155;
        if (v140)
          goto LABEL_177;
        if (__OFADD__(v151, v156))
          goto LABEL_178;
        if (v151 + v156 >= v132)
        {
          v157 = v132 < v156;
LABEL_131:
          if (v157)
            v129 = v141;
          goto LABEL_133;
        }
LABEL_125:
        if ((v152 & 1) != 0)
          goto LABEL_173;
        v160 = &v126[16 * v129];
        v162 = *(_QWORD *)v160;
        v161 = *((_QWORD *)v160 + 1);
        v140 = __OFSUB__(v161, v162);
        v163 = v161 - v162;
        if (v140)
          goto LABEL_176;
        if (v163 < v151)
          goto LABEL_14;
LABEL_133:
        v168 = v129 - 1;
        if (v129 - 1 >= v31)
        {
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
          goto LABEL_189;
        }
        if (!*v209)
          goto LABEL_191;
        v169 = v29;
        v170 = &v126[16 * v168];
        v171 = *(_QWORD *)v170;
        v172 = &v126[16 * v129];
        v173 = *((_QWORD *)v172 + 1);
        sub_1003C509C(*v209 + v207[9] * *(_QWORD *)v170, *v209 + v207[9] * *(_QWORD *)v172, *v209 + v207[9] * v173, (unint64_t)v28);
        if (v2)
        {
          v29 = v169;
          goto LABEL_163;
        }
        if (v173 < v171)
          goto LABEL_166;
        if (v129 > *((_QWORD *)v169 + 2))
          goto LABEL_167;
        *(_QWORD *)v170 = v171;
        *(_QWORD *)&v126[16 * v168 + 8] = v173;
        v174 = *((_QWORD *)v169 + 2);
        if (v129 >= v174)
          goto LABEL_168;
        v29 = v169;
        v31 = v174 - 1;
        memmove(&v126[16 * v129], v172 + 16, 16 * (v174 - 1 - v129));
        *((_QWORD *)v169 + 2) = v174 - 1;
        v5 = v207;
        v28 = v198;
        if (v174 <= 2)
          goto LABEL_14;
      }
    }
    v31 = 1;
LABEL_14:
    v22 = v209[1];
    v30 = v206;
    if (v206 >= v22)
      goto LABEL_152;
  }
LABEL_189:
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1003C41CC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  Swift::Int v7;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  char *v14;
  unint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  Swift::Int v35;
  Swift::Int v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  Swift::Int v40;
  Swift::Int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  Swift::Int v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  Swift::Int v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  unint64_t v124;
  _QWORD *v125;
  Swift::Int v126;
  uint64_t v127;
  char *v128;
  Swift::Int v129;
  Swift::Int v130;
  char *v131;
  char *v132;
  Swift::Int v133;
  char *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD v138[3];
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;

  v144 = type metadata accessor for Date(0);
  v137 = *(_QWORD *)(v144 - 8);
  v2 = __chkstk_darwin(v144);
  v4 = (char *)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v125 - v5;
  v7 = a1[1];
  v8 = _minimumMergeRunLength(_:)(v7);
  if (v8 >= v7)
  {
    if (v7 < 0)
      goto LABEL_137;
    if (v7)
      sub_1003C4E98(0, v7, 1, a1);
    return;
  }
  if (v7 >= 0)
    v9 = v7;
  else
    v9 = v7 + 1;
  if (v7 < -1)
    goto LABEL_145;
  v126 = v8;
  if (v7 < 2)
  {
    v134 = (char *)&_swiftEmptyArrayStorage[4];
    v125 = _swiftEmptyArrayStorage;
    if (v7 != 1)
    {
      v15 = _swiftEmptyArrayStorage[2];
      v14 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      v117 = v136;
      if (v15 >= 2)
      {
        v118 = *a1;
        do
        {
          v119 = v15 - 2;
          if (v15 < 2)
            goto LABEL_132;
          if (!v118)
            goto LABEL_144;
          v106 = v14;
          v120 = v14 + 32;
          v121 = *(_QWORD *)&v14[16 * v119 + 32];
          v122 = *(_QWORD *)&v14[16 * v15 + 24];
          sub_1003C56DC((char *)(v118 + 40 * v121), (char *)(v118 + 40 * *(_QWORD *)&v120[16 * v15 - 16]), v118 + 40 * v122, v134);
          if (v117)
            goto LABEL_100;
          if (v122 < v121)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native(v106) & 1) == 0)
            v106 = sub_100147754((uint64_t)v106);
          if (v119 >= *((_QWORD *)v106 + 2))
            goto LABEL_134;
          v123 = &v106[16 * v119 + 32];
          *(_QWORD *)v123 = v121;
          *((_QWORD *)v123 + 1) = v122;
          v124 = *((_QWORD *)v106 + 2);
          if (v15 > v124)
            goto LABEL_135;
          v14 = v106;
          memmove(&v106[16 * v15 + 16], &v106[16 * v15 + 32], 16 * (v124 - v15));
          *((_QWORD *)v106 + 2) = v124 - 1;
          v15 = v124 - 1;
        }
        while (v124 > 2);
      }
      swift_bridgeObjectRelease(v14);
      v116 = v125;
      v125[2] = 0;
LABEL_115:
      swift_bridgeObjectRelease(v116);
      return;
    }
  }
  else
  {
    v10 = v9 >> 1;
    v11 = sub_100047110((uint64_t *)&unk_10082E5B0);
    v12 = static Array._allocateBufferUninitialized(minimumCapacity:)(v10, v11);
    *(_QWORD *)(v12 + 16) = v10;
    v125 = (_QWORD *)v12;
    v134 = (char *)(v12 + 32);
  }
  v13 = 0;
  v14 = (char *)_swiftEmptyArrayStorage;
  v135 = a1;
  v131 = v6;
  v132 = v4;
  while (1)
  {
    v16 = v13++;
    v130 = v16;
    if (v13 >= v7)
      break;
    v17 = *a1;
    sub_1000252E0(*a1 + 40 * v13, (uint64_t)&v141);
    v18 = v17;
    sub_1000252E0(v17 + 40 * v16, (uint64_t)v138);
    v133 = v7;
    v20 = v142;
    v19 = v143;
    sub_100016804(&v141, v142);
    (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v20, v19);
    v21 = v139;
    v22 = v140;
    sub_100016804(v138, v139);
    v23 = *(void (**)(uint64_t, uint64_t))(v22 + 24);
    v24 = v22;
    v7 = v133;
    v23(v21, v24);
    LODWORD(v129) = static Date.> infix(_:_:)(v6, v4);
    v25 = *(char **)(v137 + 8);
    v26 = v144;
    ((void (*)(char *, uint64_t))v25)(v4, v144);
    v128 = v25;
    ((void (*)(char *, uint64_t))v25)(v6, v26);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v138);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v141);
    v127 = v18;
    if (v16 + 2 >= v7)
    {
      v13 = v16 + 2;
    }
    else
    {
      v27 = v18 + 40 * v16 + 40;
      v13 = v16 + 2;
      while (1)
      {
        v28 = v27 + 40;
        sub_1000252E0(v27 + 40, (uint64_t)&v141);
        sub_1000252E0(v27, (uint64_t)v138);
        v30 = v142;
        v29 = v143;
        sub_100016804(&v141, v142);
        (*(void (**)(uint64_t, uint64_t))(v29 + 24))(v30, v29);
        v31 = v139;
        v32 = v140;
        sub_100016804(v138, v139);
        (*(void (**)(uint64_t, uint64_t))(v32 + 24))(v31, v32);
        LODWORD(v31) = static Date.> infix(_:_:)(v6, v4);
        v33 = v144;
        v34 = v128;
        ((void (*)(char *, uint64_t))v128)(v4, v144);
        ((void (*)(char *, uint64_t))v34)(v6, v33);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v138);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(&v141);
        if (((v129 ^ v31) & 1) != 0)
          break;
        ++v13;
        v27 = v28;
        v7 = v133;
        if (v133 == v13)
        {
          v13 = v133;
          goto LABEL_23;
        }
      }
      v7 = v133;
    }
LABEL_23:
    a1 = v135;
    if ((v129 & 1) == 0)
      break;
    if (v13 < v16)
      goto LABEL_138;
    if (v16 >= v13)
      break;
    v35 = v16;
    v36 = v13;
    v37 = v14;
    v38 = 40 * v36 - 40;
    v39 = 40 * v35;
    v40 = v36;
    v41 = v35;
    do
    {
      if (v41 != --v36)
      {
        if (!v127)
          goto LABEL_143;
        v42 = v127 + v39;
        v43 = v127 + v38;
        sub_10002411C((__int128 *)(v127 + v39), (uint64_t)&v141);
        v44 = *(_QWORD *)(v43 + 32);
        v45 = *(_OWORD *)(v43 + 16);
        *(_OWORD *)v42 = *(_OWORD *)v43;
        *(_OWORD *)(v42 + 16) = v45;
        *(_QWORD *)(v42 + 32) = v44;
        sub_10002411C(&v141, v43);
      }
      ++v41;
      v38 -= 40;
      v39 += 40;
    }
    while (v41 < v36);
    v14 = v37;
    a1 = v135;
    v13 = v40;
    v4 = v132;
    v7 = v133;
    v16 = v130;
    if (v13 < v133)
      goto LABEL_33;
LABEL_52:
    if (v13 < v16)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_100147150(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
    v61 = *((_QWORD *)v14 + 2);
    v60 = *((_QWORD *)v14 + 3);
    v15 = v61 + 1;
    if (v61 >= v60 >> 1)
      v14 = sub_100147150((char *)(v60 > 1), v61 + 1, 1, v14);
    *((_QWORD *)v14 + 2) = v15;
    v62 = v14 + 32;
    v63 = &v14[16 * v61 + 32];
    *(_QWORD *)v63 = v16;
    *((_QWORD *)v63 + 1) = v13;
    if (v61)
    {
      a1 = v135;
      while (1)
      {
        v64 = v15 - 1;
        if (v15 >= 4)
        {
          v69 = &v62[16 * v15];
          v70 = *((_QWORD *)v69 - 8);
          v71 = *((_QWORD *)v69 - 7);
          v75 = __OFSUB__(v71, v70);
          v72 = v71 - v70;
          if (v75)
            goto LABEL_120;
          v74 = *((_QWORD *)v69 - 6);
          v73 = *((_QWORD *)v69 - 5);
          v75 = __OFSUB__(v73, v74);
          v67 = v73 - v74;
          v68 = v75;
          if (v75)
            goto LABEL_121;
          v76 = v15 - 2;
          v77 = &v62[16 * v15 - 32];
          v79 = *(_QWORD *)v77;
          v78 = *((_QWORD *)v77 + 1);
          v75 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          if (v75)
            goto LABEL_123;
          v75 = __OFADD__(v67, v80);
          v81 = v67 + v80;
          if (v75)
            goto LABEL_126;
          if (v81 >= v72)
          {
            v99 = &v62[16 * v64];
            v101 = *(_QWORD *)v99;
            v100 = *((_QWORD *)v99 + 1);
            v75 = __OFSUB__(v100, v101);
            v102 = v100 - v101;
            if (v75)
              goto LABEL_130;
            v92 = v67 < v102;
            goto LABEL_90;
          }
        }
        else
        {
          if (v15 != 3)
          {
            v93 = *((_QWORD *)v14 + 4);
            v94 = *((_QWORD *)v14 + 5);
            v75 = __OFSUB__(v94, v93);
            v86 = v94 - v93;
            v87 = v75;
            goto LABEL_84;
          }
          v66 = *((_QWORD *)v14 + 4);
          v65 = *((_QWORD *)v14 + 5);
          v75 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          v68 = v75;
        }
        if ((v68 & 1) != 0)
          goto LABEL_122;
        v76 = v15 - 2;
        v82 = &v62[16 * v15 - 32];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v85 = __OFSUB__(v83, v84);
        v86 = v83 - v84;
        v87 = v85;
        if (v85)
          goto LABEL_125;
        v88 = &v62[16 * v64];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v75 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        if (v75)
          goto LABEL_128;
        if (__OFADD__(v86, v91))
          goto LABEL_129;
        if (v86 + v91 >= v67)
        {
          v92 = v67 < v91;
LABEL_90:
          if (v92)
            v64 = v76;
          goto LABEL_92;
        }
LABEL_84:
        if ((v87 & 1) != 0)
          goto LABEL_124;
        v95 = &v62[16 * v64];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v75 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v75)
          goto LABEL_127;
        if (v98 < v86)
          goto LABEL_14;
LABEL_92:
        v103 = v64 - 1;
        if (v64 - 1 >= v15)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        v104 = *a1;
        if (!*a1)
          goto LABEL_142;
        v105 = v13;
        v106 = v14;
        v107 = &v62[16 * v103];
        v108 = *(_QWORD *)v107;
        v109 = v62;
        v110 = v64;
        v111 = &v62[16 * v64];
        v112 = *((_QWORD *)v111 + 1);
        v113 = v136;
        sub_1003C56DC((char *)(v104 + 40 * *(_QWORD *)v107), (char *)(v104 + 40 * *(_QWORD *)v111), v104 + 40 * v112, v134);
        v136 = v113;
        if (v113)
        {
LABEL_100:
          v115 = v125;
          swift_bridgeObjectRelease(v106);
          v115[2] = 0;
          v116 = v115;
          goto LABEL_115;
        }
        if (v112 < v108)
          goto LABEL_117;
        if (v110 > *((_QWORD *)v106 + 2))
          goto LABEL_118;
        *(_QWORD *)v107 = v108;
        *(_QWORD *)&v109[16 * v103 + 8] = v112;
        v114 = *((_QWORD *)v106 + 2);
        if (v110 >= v114)
          goto LABEL_119;
        v14 = v106;
        v15 = v114 - 1;
        memmove(v111, v111 + 16, 16 * (v114 - 1 - v110));
        v62 = v109;
        *((_QWORD *)v106 + 2) = v114 - 1;
        v92 = v114 > 2;
        a1 = v135;
        v13 = v105;
        v6 = v131;
        v4 = v132;
        if (!v92)
          goto LABEL_14;
      }
    }
    v15 = 1;
    a1 = v135;
LABEL_14:
    v7 = a1[1];
    if (v13 >= v7)
      goto LABEL_103;
  }
  if (v13 >= v7)
    goto LABEL_52;
LABEL_33:
  if (__OFSUB__(v13, v16))
    goto LABEL_136;
  if (v13 - v16 >= v126)
    goto LABEL_52;
  if (__OFADD__(v16, v126))
    goto LABEL_139;
  if (v16 + v126 >= v7)
    v46 = v7;
  else
    v46 = v16 + v126;
  if (v46 >= v16)
  {
    if (v13 != v46)
    {
      v128 = v14;
      v129 = v46;
      v47 = 40 * v13 - 40;
      do
      {
        v133 = v47;
        while (1)
        {
          v48 = v13;
          v49 = *a1 + v47;
          sub_1000252E0(v49 + 40, (uint64_t)&v141);
          sub_1000252E0(v49, (uint64_t)v138);
          v50 = a1;
          v51 = v142;
          v52 = v143;
          sub_100016804(&v141, v142);
          (*(void (**)(uint64_t, uint64_t))(v52 + 24))(v51, v52);
          v53 = v139;
          v54 = v140;
          sub_100016804(v138, v139);
          (*(void (**)(uint64_t, uint64_t))(v54 + 24))(v53, v54);
          LOBYTE(v53) = static Date.> infix(_:_:)(v6, v4);
          v55 = *(void (**)(char *, uint64_t))(v137 + 8);
          v56 = v144;
          v55(v4, v144);
          v55(v6, v56);
          _s10FitnessApp24HistoryViewActionContextVwxx_0(v138);
          _s10FitnessApp24HistoryViewActionContextVwxx_0(&v141);
          if ((v53 & 1) == 0)
            break;
          v57 = *v50;
          if (!*v50)
            goto LABEL_141;
          a1 = v50;
          v58 = v57 + v47;
          sub_10002411C((__int128 *)(v57 + v47 + 40), (uint64_t)&v141);
          v59 = *(_OWORD *)(v58 + 16);
          *(_OWORD *)(v58 + 40) = *(_OWORD *)v58;
          *(_OWORD *)(v58 + 56) = v59;
          *(_QWORD *)(v58 + 72) = *(_QWORD *)(v58 + 32);
          sub_10002411C(&v141, v58);
          v47 -= 40;
          ++v16;
          v13 = v48;
          if (v48 == v16)
            goto LABEL_43;
        }
        a1 = v50;
        v13 = v48;
LABEL_43:
        ++v13;
        v47 = v133 + 40;
        v16 = v130;
      }
      while (v13 != v129);
      v13 = v129;
      v14 = v128;
    }
    goto LABEL_52;
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_1003C4BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;

  v55 = a4;
  v44 = a1;
  v6 = type metadata accessor for DateComponents(0);
  v51 = *(_QWORD **)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v54 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v42 - v10;
  result = __chkstk_darwin(v9);
  v14 = (char *)&v42 - v13;
  v53 = a3;
  v43 = a2;
  if (a3 != a2)
  {
    v15 = v51[9];
    v16 = (uint64_t (*)(char *, uint64_t, uint64_t))v51[2];
    v49 = (char *)&v42 - v13;
    v50 = v16;
    v57 = v15 * (v53 - 1);
    v52 = v15;
    v56 = v15 * v53;
LABEL_6:
    v18 = 0;
    v19 = v44;
    while (1)
    {
      v20 = *v55;
      v21 = v50;
      v50(v14, v56 + v18 + *v55, v6);
      v22 = v21(v11, v57 + v18 + v20, v6);
      v23 = DateComponents.era.getter(v22);
      if ((v24 & 1) == 0)
      {
        v25 = v23;
        v26 = DateComponents.era.getter(v23);
        v48 = v26;
        if ((v27 & 1) == 0)
        {
          v28 = DateComponents.year.getter(v26);
          v47 = v28;
          if ((v29 & 1) == 0)
          {
            v46 = DateComponents.year.getter(v28);
            if ((v30 & 1) == 0)
            {
              v31 = DateComponents.month.getter();
              if ((v32 & 1) == 0)
              {
                v45 = v31;
                v33 = DateComponents.month.getter();
                if ((v34 & 1) == 0 && v48 >= v25 && (v25 < v48 || v46 >= v47 && (v47 < v46 || v33 >= v45)))
                {
                  v17 = (void (*)(char *, uint64_t))v51[1];
                  v17(v11, v6);
                  result = ((uint64_t (*)(char *, uint64_t))v17)(v14, v6);
LABEL_5:
                  v57 += v52;
                  v56 += v52;
                  if (++v53 == v43)
                    return result;
                  goto LABEL_6;
                }
              }
            }
          }
        }
      }
      v35 = v51;
      v36 = (void (*)(char *, uint64_t))v51[1];
      v36(v11, v6);
      result = ((uint64_t (*)(char *, uint64_t))v36)(v14, v6);
      v37 = *v55;
      if (!*v55)
        break;
      v38 = v11;
      v39 = v37 + v56 + v18;
      v40 = v37 + v57 + v18;
      v41 = (void (*)(char *, uint64_t, uint64_t))v35[4];
      v41(v54, v39, v6);
      swift_arrayInitWithTakeFrontToBack(v39);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v41)(v40, v54, v6);
      v18 -= v52;
      ++v19;
      v11 = v38;
      v14 = v49;
      if (v53 == v19)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1003C4E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v27 = a1;
  v7 = type metadata accessor for Date(0);
  v29 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v8);
  v13 = (char *)&v25 - v12;
  v36 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v14 = 40 * v36 - 40;
LABEL_5:
    v15 = v27;
    v28 = v14;
    while (1)
    {
      v16 = *a4 + v14;
      sub_1000252E0(v16 + 40, (uint64_t)&v33);
      sub_1000252E0(v16, (uint64_t)v30);
      v17 = v34;
      v18 = v35;
      sub_100016804(&v33, v34);
      (*(void (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
      v19 = v31;
      v20 = v32;
      sub_100016804(v30, v31);
      (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
      LOBYTE(v19) = static Date.> infix(_:_:)(v13, v10);
      v21 = *(void (**)(char *, uint64_t))(v29 + 8);
      v21(v10, v7);
      v21(v13, v7);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v30);
      result = _s10FitnessApp24HistoryViewActionContextVwxx_0(&v33);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v14 = v28 + 40;
        if (++v36 == v26)
          return result;
        goto LABEL_5;
      }
      v22 = *a4;
      if (!*a4)
        break;
      v23 = v22 + v14;
      sub_10002411C((__int128 *)(v22 + v14 + 40), (uint64_t)&v33);
      v24 = *(_OWORD *)(v23 + 16);
      *(_OWORD *)(v23 + 40) = *(_OWORD *)v23;
      *(_OWORD *)(v23 + 56) = v24;
      *(_QWORD *)(v23 + 72) = *(_QWORD *)(v23 + 32);
      result = sub_10002411C(&v33, v23);
      v14 -= 40;
      if (v36 == ++v15)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1003C509C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  unint64_t v41;
  unint64_t v42;
  void (*v43)(char *, uint64_t);
  unint64_t v44;
  unint64_t v45;
  uint64_t result;
  uint64_t v48;
  uint64_t (*v49)(char *, unint64_t, uint64_t);
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  BOOL v64;
  char v65;
  unint64_t v66;
  void (*v67)(char *, uint64_t);
  unint64_t v68;
  unint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(char *, unint64_t, uint64_t);
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;

  v8 = type metadata accessor for DateComponents(0);
  v9 = __chkstk_darwin(v8);
  v76 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v78 = (char *)&v71 - v12;
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v71 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v71 - v16;
  v77 = v18;
  v79 = *(_QWORD *)(v18 + 72);
  if (!v79)
  {
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  if (a2 - a1 == 0x8000000000000000 && v79 == -1)
    goto LABEL_90;
  v19 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v79 == -1)
    goto LABEL_91;
  v20 = (uint64_t)(a2 - a1) / v79;
  v82 = a1;
  v81 = a4;
  v21 = v19 / v79;
  if (v20 >= v19 / v79)
  {
    if ((v21 & 0x8000000000000000) == 0)
    {
      v23 = v21 * v79;
      if (a4 < a2 || a2 + v23 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v45 = a4 + v23;
      v80 = a4 + v23;
      v82 = a2;
      if (v23 >= 1 && a1 < a2)
      {
        v48 = -v79;
        v75 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v77 + 16);
        v79 = a1;
        do
        {
          v49 = v75;
          v75(v78, v45 + v48, v8);
          v50 = a2 + v48;
          v51 = v49(v76, a2 + v48, v8);
          v52 = DateComponents.era.getter(v51);
          if ((v53 & 1) != 0)
            goto LABEL_65;
          v54 = v52;
          v55 = DateComponents.era.getter(v52);
          if ((v56 & 1) != 0
            || (v74 = v55, v57 = DateComponents.year.getter(v55), (v58 & 1) != 0)
            || (v73 = v57, v59 = DateComponents.year.getter(v57), (v60 & 1) != 0)
            || (v72 = v59, v61 = DateComponents.month.getter(), (v62 & 1) != 0))
          {
LABEL_65:
            v64 = 1;
          }
          else
          {
            v71 = v61;
            v63 = DateComponents.month.getter();
            v64 = 1;
            if ((v65 & 1) == 0 && v74 >= v54)
            {
              if (v54 >= v74)
              {
                if (v72 >= v73)
                  v64 = v73 >= v72 && v63 < v71;
              }
              else
              {
                v64 = 0;
              }
            }
          }
          v66 = a3 + v48;
          v67 = *(void (**)(char *, uint64_t))(v77 + 8);
          v67(v76, v8);
          v67(v78, v8);
          if (v64)
          {
            if (a3 < a2 || v66 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(a3 + v48);
              v68 = v79;
            }
            else
            {
              v68 = v79;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront(a3 + v48);
            }
            v82 += v48;
          }
          else
          {
            v69 = v80;
            v80 += v48;
            if (a3 < v69 || v66 >= v69)
            {
              swift_arrayInitWithTakeFrontToBack(a3 + v48);
              v50 = a2;
              v68 = v79;
            }
            else
            {
              v68 = v79;
              if (a3 != v69)
                swift_arrayInitWithTakeBackToFront(a3 + v48);
              v50 = a2;
            }
          }
          v45 = v80;
          if (v80 <= a4)
            break;
          a2 = v50;
          a3 += v48;
        }
        while (v50 > v68);
      }
      goto LABEL_55;
    }
  }
  else if ((v20 & 0x8000000000000000) == 0)
  {
    v22 = v20 * v79;
    if (a4 < a1 || a1 + v22 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v78 = (char *)(a4 + v22);
    v80 = a4 + v22;
    if (v22 >= 1 && a2 < a3)
    {
      v25 = *(void (**)(char *, unint64_t, uint64_t))(v77 + 16);
      do
      {
        v25(v17, a2, v8);
        v26 = ((uint64_t (*)(char *, unint64_t, uint64_t))v25)(v15, a4, v8);
        v27 = DateComponents.era.getter(v26);
        if ((v28 & 1) != 0)
          goto LABEL_38;
        v29 = v27;
        v30 = DateComponents.era.getter(v27);
        if ((v31 & 1) != 0
          || (v32 = v30, v33 = DateComponents.year.getter(v30), v76 = (char *)v33, (v34 & 1) != 0)
          || (v75 = (uint64_t (*)(char *, unint64_t, uint64_t))DateComponents.year.getter(v33),
              (v35 & 1) != 0)
          || (v36 = DateComponents.month.getter(), (v37 & 1) != 0)
          || (v74 = v36, v38 = DateComponents.month.getter(), (v39 & 1) != 0)
          || v32 < v29
          || v29 >= v32 && ((uint64_t)v75 < (uint64_t)v76 || (uint64_t)v76 >= (uint64_t)v75 && v38 < v74))
        {
LABEL_38:
          v43 = *(void (**)(char *, uint64_t))(v77 + 8);
          v43(v15, v8);
          v43(v17, v8);
          v41 = v82;
          v44 = a2 + v79;
          if (v82 < a2 || v82 >= v44)
          {
            swift_arrayInitWithTakeFrontToBack(v82);
          }
          else if (v82 == a2)
          {
            v41 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v82);
          }
        }
        else
        {
          v40 = *(void (**)(char *, uint64_t))(v77 + 8);
          v40(v15, v8);
          v40(v17, v8);
          v41 = v82;
          v42 = v81 + v79;
          if (v82 < v81 || v82 >= v42)
          {
            swift_arrayInitWithTakeFrontToBack(v82);
          }
          else if (v82 != v81)
          {
            swift_arrayInitWithTakeBackToFront(v82);
          }
          v81 = v42;
          v44 = a2;
        }
        v82 = v41 + v79;
        a4 = v81;
        if (v81 >= (unint64_t)v78)
          break;
        a2 = v44;
      }
      while (v44 < a3);
    }
LABEL_55:
    sub_1001472FC(&v82, &v81, (uint64_t *)&v80);
    return 1;
  }
LABEL_92:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003C56DC(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  _OWORD *v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  char *v34;
  unint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  __int128 v47;
  __int128 v48;
  char *v49;
  unint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t result;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;

  v8 = type metadata accessor for Date(0);
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  v9 = __chkstk_darwin(v8);
  v59 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v56 - v11;
  v13 = a2 - a1;
  v14 = (a2 - a1) / 40;
  v15 = a3 - (_QWORD)a2;
  v16 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v70 = a1;
  v69 = a4;
  if (v14 >= v16)
  {
    if (v15 < -39)
      goto LABEL_45;
    if (a4 != a2 || &a2[40 * v16] <= a4)
      memmove(a4, a2, 40 * v16);
    v34 = &a4[40 * v16];
    v68 = v34;
    v70 = a2;
    if (v15 < 40 || a1 >= a2)
      goto LABEL_44;
    v35 = a3 - 40;
    v57 = a4;
    v58 = a1;
    while (1)
    {
      v36 = (char *)(v35 + 40);
      sub_1000252E0((uint64_t)(v34 - 40), (uint64_t)v65);
      v37 = a2 - 40;
      sub_1000252E0((uint64_t)(a2 - 40), (uint64_t)v62);
      v38 = v66;
      v39 = v67;
      sub_100016804(v65, v66);
      (*(void (**)(uint64_t, uint64_t))(v39 + 24))(v38, v39);
      v40 = v63;
      v41 = v64;
      sub_100016804(v62, v63);
      v42 = v12;
      v43 = v59;
      (*(void (**)(uint64_t, uint64_t))(v41 + 24))(v40, v41);
      LOBYTE(v40) = static Date.> infix(_:_:)(v42, v43);
      v44 = v61;
      v45 = *(void (**)(char *, uint64_t))(v60 + 8);
      v46 = v43;
      v12 = v42;
      v45(v46, v61);
      v45(v42, v44);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v62);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v65);
      if ((v40 & 1) != 0)
      {
        if (v36 != a2 || v35 >= (unint64_t)a2)
        {
          v47 = *(_OWORD *)v37;
          v48 = *(_OWORD *)(a2 - 24);
          *(_QWORD *)(v35 + 32) = *((_QWORD *)a2 - 1);
          *(_OWORD *)v35 = v47;
          *(_OWORD *)(v35 + 16) = v48;
        }
        v70 -= 40;
        v34 = v68;
      }
      else
      {
        v49 = v68;
        v34 = v68 - 40;
        v68 -= 40;
        if (v36 >= v49 && v35 < (unint64_t)v49)
        {
          v50 = (unint64_t)v58;
          if (v36 != v49)
          {
            v51 = *(_OWORD *)v34;
            v52 = *(_OWORD *)(v49 - 24);
            *(_QWORD *)(v35 + 32) = *((_QWORD *)v49 - 1);
            *(_OWORD *)v35 = v51;
            *(_OWORD *)(v35 + 16) = v52;
          }
          v37 = a2;
          goto LABEL_40;
        }
        v53 = *(_OWORD *)v34;
        v54 = *(_OWORD *)(v49 - 24);
        *(_QWORD *)(v35 + 32) = *((_QWORD *)v49 - 1);
        *(_OWORD *)v35 = v53;
        *(_OWORD *)(v35 + 16) = v54;
        v37 = a2;
      }
      v50 = (unint64_t)v58;
LABEL_40:
      if (v34 > v57)
      {
        v35 -= 40;
        a2 = v37;
        if ((unint64_t)v37 > v50)
          continue;
      }
      goto LABEL_44;
    }
  }
  if (v13 >= -39)
  {
    if (a4 != a1 || &a1[40 * v14] <= a4)
      memmove(a4, a1, 40 * v14);
    v17 = (unint64_t)&a4[40 * v14];
    v68 = (char *)v17;
    if (v13 >= 40 && (unint64_t)a2 < a3)
    {
      do
      {
        sub_1000252E0((uint64_t)a2, (uint64_t)v65);
        sub_1000252E0((uint64_t)a4, (uint64_t)v62);
        v18 = v66;
        v19 = v67;
        sub_100016804(v65, v66);
        (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
        v20 = v63;
        v21 = v64;
        sub_100016804(v62, v63);
        v22 = v59;
        (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
        v23 = static Date.> infix(_:_:)(v12, v22);
        v24 = *(void (**)(char *, uint64_t))(v60 + 8);
        v25 = v22;
        v26 = v61;
        v24(v25, v61);
        v24(v12, v26);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v62);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v65);
        v27 = v70;
        if ((v23 & 1) != 0)
        {
          v28 = (unint64_t)(a2 + 40);
          if (v70 >= a2 && (unint64_t)v70 < v28 && v70 == a2)
          {
            v27 = a2;
          }
          else
          {
            v29 = *(_OWORD *)a2;
            v30 = *((_OWORD *)a2 + 1);
            *((_QWORD *)v70 + 4) = *((_QWORD *)a2 + 4);
            *v27 = v29;
            v27[1] = v30;
          }
        }
        else
        {
          v31 = v69 + 40;
          if (v70 != v69 || v70 >= v31)
          {
            v32 = *(_OWORD *)v69;
            v33 = *((_OWORD *)v69 + 1);
            *((_QWORD *)v70 + 4) = *((_QWORD *)v69 + 4);
            *v27 = v32;
            v27[1] = v33;
          }
          v69 = v31;
          v28 = (unint64_t)a2;
        }
        v70 = (char *)v27 + 40;
        a4 = v69;
        if ((unint64_t)v69 >= v17)
          break;
        a2 = (char *)v28;
      }
      while (v28 < a3);
    }
LABEL_44:
    sub_100147248((void **)&v70, (const void **)&v69, &v68);
    return 1;
  }
LABEL_45:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003C5B8C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_10004C480(&v12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_10002411C(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1003C5C04(uint64_t a1, __int16 a2, uint64_t a3, int a4)
{
  uint64_t result;

  switch(HIBYTE(a2))
  {
    case 2:
      return (a4 & 0xFF00) == 0x200;
    case 3:
      return (a4 & 0xFF00) == 0x300;
    case 4:
      return (a4 & 0xFF00) == 0x400;
    case 5:
      return (a4 & 0xFF00) == 0x500;
    case 6:
      return (a4 & 0xFF00) == 0x600;
    default:
      if (BYTE1(a4) - 2 < 5 || a1 != a3)
        return 0;
      if (a2 == 2)
      {
        if (a4 == 2)
          return ((a2 & 0x100) == 0) ^ ((unsigned __int16)(a4 & 0x100) >> 8);
        return 0;
      }
      else
      {
        result = 0;
        if (a4 != 2 && ((((a2 & 1) == 0) ^ a4) & 1) != 0)
          return ((a2 & 0x100) == 0) ^ ((unsigned __int16)(a4 & 0x100) >> 8);
      }
      return result;
  }
}

uint64_t sub_1003C5CFC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003C5D20()
{
  uint64_t v0;

  sub_1003C1B74(v0);
}

void sub_1003C5D28(uint64_t a1)
{
  uint64_t v1;

  sub_1003C1DA8(a1, v1);
}

uint64_t sub_1003C5D30()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003C5D5C()
{
  uint64_t v0;

  sub_1003C1D58(v0);
}

uint64_t sub_1003C5D64()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1003C5D90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  _QWORD *result;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v31 - v10;
  result = _swiftEmptyArrayStorage;
  v43 = _swiftEmptyArrayStorage;
  v34 = *(_QWORD *)(a1 + 16);
  if (v34)
  {
    v13 = 0;
    v33 = a1 + 32;
    v31 = v2;
    v32 = (_QWORD *)(a2 + 32);
    v35 = a2;
    do
    {
      v36 = v13;
      sub_1000252E0(v33 + 40 * v13, (uint64_t)&v40);
      v14 = *(_QWORD *)(a2 + 16);
      if (v14)
      {
        swift_bridgeObjectRetain(a2);
        v15 = v32;
        do
        {
          v16 = v41;
          v17 = v42;
          sub_100016804(&v40, v41);
          (*(void (**)(uint64_t, uint64_t))(v17 + 48))(v16, v17);
          v18 = v15[3];
          v19 = v15[4];
          sub_100016804(v15, v18);
          (*(void (**)(uint64_t, uint64_t))(v19 + 48))(v18, v19);
          v20 = static UUID.== infix(_:_:)(v11, v9);
          v21 = *(void (**)(char *, uint64_t))(v6 + 8);
          v21(v9, v5);
          v21(v11, v5);
          if ((v20 & 1) != 0)
          {
            a2 = v35;
            swift_bridgeObjectRelease(v35);
            _s10FitnessApp24HistoryViewActionContextVwxx_0(&v40);
            goto LABEL_4;
          }
          v15 += 5;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease(v35);
      }
      sub_10002411C(&v40, (uint64_t)v37);
      v22 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native(v43) & 1) == 0)
      {
        sub_10012176C(0, v22[2] + 1, 1);
        v22 = v43;
      }
      v24 = v22[2];
      v23 = v22[3];
      if (v24 >= v23 >> 1)
        sub_10012176C(v23 > 1, v24 + 1, 1);
      v25 = v38;
      v26 = v39;
      v27 = sub_10017C044((uint64_t)v37, v38);
      __chkstk_darwin(v27);
      v29 = (char *)&v31 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v30 + 16))(v29);
      sub_1003C5B8C(v24, (uint64_t)v29, (uint64_t *)&v43, v25, v26);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v37);
      a2 = v35;
LABEL_4:
      v13 = v36 + 1;
    }
    while (v36 + 1 != v34);
    return v43;
  }
  return result;
}

uint64_t sub_1003C6038(unsigned __int16 *a1, unsigned __int16 *a2, unsigned __int16 *a3, uint64_t a4, char *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int16 *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::UInt v30;
  int v31;
  unsigned __int16 *v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char *v38;
  id v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSString v49;
  double v50;
  id v51;
  BOOL v52;
  unsigned __int16 *v53;
  uint64_t v54;
  unsigned __int16 *v55;
  unsigned __int16 *v56;
  unsigned __int16 *v57;
  uint64_t v58;
  Swift::UInt v59;
  unsigned __int16 *v60;
  int v61;
  Swift::UInt v62;
  int v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  id v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSString v78;
  double v79;
  id v80;
  BOOL v81;
  uint64_t result;
  uint64_t v83;
  unsigned __int16 *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int16 *v94;
  uint64_t v95;
  unsigned __int16 *v96;
  char *v97;
  unsigned __int16 *v98;
  unsigned __int16 *v99;
  unsigned __int16 *v100;

  v97 = a5;
  v8 = type metadata accessor for Locale.Language(0);
  v92 = *(_QWORD *)(v8 - 8);
  v93 = v8;
  v9 = __chkstk_darwin(v8);
  v88 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v89 = (char *)&v83 - v11;
  v12 = type metadata accessor for Locale(0);
  v90 = *(_QWORD *)(v12 - 8);
  v91 = v12;
  v13 = __chkstk_darwin(v12);
  v87 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v86 = (char *)&v83 - v15;
  v16 = sub_100047110(&qword_100825CB0);
  v17 = __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  v85 = (char *)&v83 - v20;
  v21 = (char *)a2 - (char *)a1;
  v22 = (char *)a2 - (char *)a1 + 15;
  if ((char *)a2 - (char *)a1 >= 0)
    v22 = (char *)a2 - (char *)a1;
  v23 = v22 >> 4;
  v24 = (char *)a3 - (char *)a2;
  v25 = (char *)a3 - (char *)a2 + 15;
  if ((char *)a3 - (char *)a2 >= 0)
    v25 = (char *)a3 - (char *)a2;
  v26 = v25 >> 4;
  v100 = a1;
  v99 = v18;
  v94 = v18;
  if (v23 >= v26)
  {
    if (v24 < -15)
      goto LABEL_64;
    v85 = v19;
    v54 = 8 * v26;
    if (v18 != a2 || &a2[v54] <= v18)
    {
      memmove(v18, a2, 16 * v26);
      v18 = v94;
    }
    v55 = &v18[v54];
    v98 = &v18[v54];
    v100 = a2;
    if ((unint64_t)(v24 - 16) > 0xFFFFFFFFFFFFFFE0 || a1 >= a2)
    {
LABEL_63:
      sub_10014724C((void **)&v100, (const void **)&v99, &v98);
      return 1;
    }
    v95 = OBJC_IVAR___CHHistoryDataProvider_historyTypeCounts;
    v56 = a3 - 8;
    while (1)
    {
      v57 = v56 + 8;
      v58 = *(_QWORD *)&v97[v95];
      if (!*(_QWORD *)(v58 + 16))
        goto LABEL_56;
      v60 = a2 - 8;
      v59 = *((_QWORD *)a2 - 2);
      v61 = *(a2 - 4);
      v62 = *((_QWORD *)v55 - 2);
      v63 = *(v55 - 4);
      v96 = v56 + 8;
      v64 = sub_100439B8C(v62, v63);
      v57 = v96;
      v18 = v94;
      if ((v65 & 1) == 0)
        goto LABEL_56;
      v66 = *(_QWORD *)&v97[v95];
      if (!*(_QWORD *)(v66 + 16))
        goto LABEL_56;
      v89 = *(char **)(*(_QWORD *)(v58 + 56) + 8 * v64);
      v67 = sub_100439B8C(v59, v61);
      v57 = v96;
      v18 = v94;
      if ((v68 & 1) == 0)
        goto LABEL_56;
      v86 = *(char **)(*(_QWORD *)(v66 + 56) + 8 * v67);
      v84 = (unsigned __int16 *)objc_opt_self(NSLocale);
      v69 = objc_msgSend(v84, "currentLocale");
      v70 = v87;
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      v71 = v88;
      Locale.language.getter();
      v72 = (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v70, v91);
      v73 = (uint64_t)v85;
      Locale.Language.languageCode.getter(v72);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v71, v93);
      v74 = type metadata accessor for Locale.LanguageCode(0);
      v75 = *(_QWORD *)(v74 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74) == 1)
      {
        sub_10001BE90(v73, &qword_100825CB0);
      }
      else
      {
        v83 = Locale.LanguageCode.identifier.getter();
        v77 = v76;
        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v73, v74);
        v78 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v79 = swift_bridgeObjectRelease(v77).n128_u64[0];
        v80 = objc_msgSend(v84, "characterDirectionForLanguage:", v78, v79);

        if (v80 == (id)2)
        {
          v81 = (uint64_t)v89 < (uint64_t)v86;
          goto LABEL_50;
        }
      }
      v81 = (uint64_t)v86 < (uint64_t)v89;
LABEL_50:
      v18 = v94;
      v57 = v96;
      if (v81)
      {
        if (v96 != a2 || v56 >= a2)
          *(_OWORD *)v56 = *(_OWORD *)v60;
        v100 = a2 - 8;
        goto LABEL_61;
      }
LABEL_56:
      v98 = v55 - 8;
      if (v57 < v55 || v56 >= v55 || v57 != v55)
        *(_OWORD *)v56 = *((_OWORD *)v55 - 1);
      v60 = a2;
      v55 -= 8;
LABEL_61:
      if (v55 > v18)
      {
        v56 -= 8;
        a2 = v60;
        if (v60 > a1)
          continue;
      }
      goto LABEL_63;
    }
  }
  if (v21 >= -15)
  {
    v27 = 8 * v23;
    if (v18 != a1 || &a1[v27] <= v18)
    {
      memmove(v18, a1, v27 * 2);
      v18 = v94;
    }
    v96 = &v18[v27];
    v98 = &v18[v27];
    if ((unint64_t)(v21 - 16) <= 0xFFFFFFFFFFFFFFE0 && a2 < a3)
    {
      v28 = OBJC_IVAR___CHHistoryDataProvider_historyTypeCounts;
      v84 = a3;
      while (1)
      {
        v29 = *(_QWORD *)&v97[v28];
        if (!*(_QWORD *)(v29 + 16))
          goto LABEL_28;
        v30 = *(_QWORD *)v18;
        v31 = v18[4];
        v32 = v18;
        v33 = sub_100439B8C(*(_QWORD *)a2, a2[4]);
        v18 = v32;
        if ((v34 & 1) == 0)
          goto LABEL_28;
        v35 = *(_QWORD *)&v97[v28];
        if (!*(_QWORD *)(v35 + 16))
          goto LABEL_28;
        v95 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v33);
        v36 = sub_100439B8C(v30, v31);
        v18 = v32;
        if ((v37 & 1) == 0)
          goto LABEL_28;
        v38 = *(char **)(*(_QWORD *)(v35 + 56) + 8 * v36);
        v94 = (unsigned __int16 *)objc_opt_self(NSLocale);
        v39 = objc_msgSend(v94, "currentLocale");
        v40 = v86;
        static Locale._unconditionallyBridgeFromObjectiveC(_:)();

        v41 = v89;
        Locale.language.getter();
        v42 = (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v40, v91);
        v43 = (uint64_t)v85;
        Locale.Language.languageCode.getter(v42);
        (*(void (**)(char *, uint64_t))(v92 + 8))(v41, v93);
        v44 = type metadata accessor for Locale.LanguageCode(0);
        v45 = *(_QWORD *)(v44 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44) == 1)
        {
          sub_10001BE90(v43, &qword_100825CB0);
        }
        else
        {
          v46 = v43;
          Locale.LanguageCode.identifier.getter();
          v88 = v38;
          v48 = v47;
          (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v44);
          v38 = v88;
          v49 = String._bridgeToObjectiveC()();
          *(_QWORD *)&v50 = swift_bridgeObjectRelease(v48).n128_u64[0];
          v51 = objc_msgSend(v94, "characterDirectionForLanguage:", v49, v50);

          if (v51 == (id)2)
          {
            v52 = v95 < (uint64_t)v38;
            goto LABEL_22;
          }
        }
        v52 = (uint64_t)v38 < v95;
LABEL_22:
        v18 = v32;
        a3 = v84;
        if (v52)
        {
          v53 = a2 + 8;
          if (a1 < a2 || a1 >= v53 || a1 != a2)
            *(_OWORD *)a1 = *(_OWORD *)a2;
          goto LABEL_31;
        }
LABEL_28:
        if (a1 != v18)
          *(_OWORD *)a1 = *(_OWORD *)v18;
        v18 += 8;
        v99 = v18;
        v53 = a2;
LABEL_31:
        a1 += 8;
        v100 = a1;
        if (v18 < v96)
        {
          a2 = v53;
          if (v53 < a3)
            continue;
        }
        goto LABEL_63;
      }
    }
    goto LABEL_63;
  }
LABEL_64:

  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_1003C6750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::UInt v19;
  int v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void *v27;
  id v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  id v39;
  Swift::UInt v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v44 = a1;
  v9 = type metadata accessor for Locale.Language(0);
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  __chkstk_darwin(v9);
  v52 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  v50 = *(_QWORD *)(v11 - 8);
  v51 = v11;
  __chkstk_darwin(v11);
  v49 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100825CB0);
  __chkstk_darwin(v13);
  v48 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = a3;
  v43 = a2;
  if (a3 != a2)
  {
    v15 = *a4;
    v57 = OBJC_IVAR___CHHistoryDataProvider_historyTypeCounts;
    v46 = v15;
    v47 = a5;
    v16 = v15 + 16 * v55;
LABEL_5:
    v45 = v16;
    v17 = v44;
    while (1)
    {
      v18 = *(_QWORD *)(a5 + v57);
      if (!*(_QWORD *)(v18 + 16)
        || (v19 = *(_QWORD *)(v16 - 16),
            v20 = *(unsigned __int16 *)(v16 - 8),
            v21 = sub_100439B8C(*(_QWORD *)v16, *(unsigned __int16 *)(v16 + 8)),
            (v22 & 1) == 0)
        || (v23 = *(_QWORD *)(a5 + v57), !*(_QWORD *)(v23 + 16))
        || (v24 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v21), v25 = sub_100439B8C(v19, v20), (v26 & 1) == 0))
      {
LABEL_4:
        v16 = v45 + 16;
        if (++v55 == v43)
          return;
        goto LABEL_5;
      }
      v56 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v25);
      v27 = (void *)objc_opt_self(NSLocale);
      v28 = objc_msgSend(v27, "currentLocale");
      v29 = v49;
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      v30 = v52;
      Locale.language.getter();
      v31 = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v29, v51);
      v32 = (uint64_t)v48;
      Locale.Language.languageCode.getter(v31);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v54);
      v33 = type metadata accessor for Locale.LanguageCode(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
      {
        sub_10001BE90(v32, &qword_100825CB0);
      }
      else
      {
        Locale.LanguageCode.identifier.getter();
        v35 = v32;
        v37 = v36;
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v33);
        v38 = String._bridgeToObjectiveC()();
        v39 = objc_msgSend(v27, "characterDirectionForLanguage:", v38, swift_bridgeObjectRelease(v37).n128_f64[0]);

        if (v39 == (id)2)
        {
          a5 = v47;
          if (v24 >= v56)
            goto LABEL_4;
          goto LABEL_16;
        }
      }
      a5 = v47;
      if (v56 >= v24)
        goto LABEL_4;
LABEL_16:
      if (!v46)
      {
        __break(1u);
        return;
      }
      v40 = *(_QWORD *)v16;
      v41 = *(_WORD *)(v16 + 8);
      *(_OWORD *)v16 = *(_OWORD *)(v16 - 16);
      *(_WORD *)(v16 - 8) = v41;
      *(_QWORD *)(v16 - 16) = v40;
      v16 -= 16;
      if (v55 == ++v17)
        goto LABEL_4;
    }
  }
}

void sub_1003C6A8C(uint64_t *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  Swift::Int v26;
  id v27;
  Swift::Int v28;
  char *v29;
  Swift::Int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::UInt v43;
  int v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int16 *v63;
  uint64_t v64;
  uint64_t v65;
  Swift::UInt v66;
  int v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  unsigned __int16 *v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  id v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSString v88;
  uint64_t v89;
  double v90;
  id v91;
  BOOL v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _OWORD *v99;
  _OWORD *v100;
  uint64_t v101;
  __int16 v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  Swift::UInt v106;
  int v107;
  unint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  unsigned __int16 *v114;
  id v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  NSString v125;
  uint64_t v126;
  double v127;
  id v128;
  BOOL v129;
  Swift::UInt v130;
  __int16 v131;
  unint64_t v132;
  unint64_t v133;
  char *v134;
  char *v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  BOOL v147;
  unint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  BOOL v157;
  uint64_t v158;
  char v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  BOOL v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  char *v176;
  uint64_t v177;
  unint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  unsigned __int16 *v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  NSString v187;
  id v188;
  BOOL v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unsigned __int16 *v197;
  unsigned __int16 *v198;
  uint64_t v199;
  char *v200;
  _QWORD *v201;
  _QWORD *v202;
  char *v203;
  char *v204;
  char *v205;
  uint64_t v206;
  char *v207;
  _QWORD *v208;
  Swift::Int v209;
  char *v210;
  char *v211;
  uint64_t *v212;
  char *v213;
  void *v214;
  Swift::Int v215;
  uint64_t v216;
  char *v217;
  _QWORD *v218;
  uint64_t v219;
  unsigned __int16 *v220;
  char *v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unsigned __int16 *v228;
  id v229;
  uint64_t v230;
  char *v231;
  unsigned __int16 *v232;

  v4 = type metadata accessor for Locale.Language(0);
  v226 = *(_QWORD *)(v4 - 8);
  v227 = v4;
  v5 = __chkstk_darwin(v4);
  v223 = (char *)&v203 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v211 = (char *)&v203 - v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v203 - v9;
  v11 = type metadata accessor for Locale(0);
  v224 = *(_QWORD *)(v11 - 8);
  v225 = v11;
  v12 = __chkstk_darwin(v11);
  v222 = (char *)&v203 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v203 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v203 - v17;
  v19 = sub_100047110(&qword_100825CB0);
  v20 = __chkstk_darwin(v19);
  v221 = (char *)&v203 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v210 = (char *)&v203 - v23;
  __chkstk_darwin(v22);
  v25 = (char *)&v203 - v24;
  v212 = a1;
  v26 = a1[1];
  v27 = a2;
  v28 = v26;
  v29 = (char *)v27;
  v30 = _minimumMergeRunLength(_:)(v28);
  v231 = v29;
  if (v30 >= v28)
  {
    if (v28 < 0)
      goto LABEL_183;
    if (v28)
    {
      v34 = v29;
      sub_1003C6750(0, v28, 1, v212, (uint64_t)v34);

      v29 = v231;
    }
    else
    {

    }
    goto LABEL_161;
  }
  if (v28 >= 0)
    v31 = v28;
  else
    v31 = v28 + 1;
  if (v28 < -1)
    goto LABEL_191;
  v215 = v28;
  v209 = v30;
  if (v28 < 2)
  {
    v218 = &_swiftEmptyArrayStorage[4];
    v208 = _swiftEmptyArrayStorage;
    if (v28 == 1)
    {
      v203 = v25;
      v204 = v18;
      v207 = v16;
      v205 = v10;
      goto LABEL_13;
    }
    v37 = (char *)_swiftEmptyArrayStorage;
    v39 = _swiftEmptyArrayStorage[2];
LABEL_148:
    if (v39 >= 2)
    {
      v192 = *v212;
      v230 = *v212;
      do
      {
        v193 = v39 - 2;
        if (v39 < 2)
          goto LABEL_178;
        if (!v192)
          goto LABEL_190;
        v194 = *(_QWORD *)&v37[16 * v193 + 32];
        v195 = *(_QWORD *)&v37[16 * v39 + 24];
        v196 = *(_QWORD *)&v37[16 * v39 + 16];
        v232 = (unsigned __int16 *)(v192 + 16 * v194);
        v197 = (unsigned __int16 *)(v192 + 16 * v196);
        v198 = (unsigned __int16 *)(v192 + 16 * v195);
        v29 = v29;
        v199 = v219;
        sub_1003C6038(v232, v197, v198, (uint64_t)v218, v29);
        v219 = v199;
        if (v199)
          goto LABEL_160;

        if (v195 < v194)
          goto LABEL_179;
        if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
          v37 = sub_100147754((uint64_t)v37);
        if (v193 >= *((_QWORD *)v37 + 2))
          goto LABEL_180;
        v200 = &v37[16 * v193 + 32];
        *(_QWORD *)v200 = v194;
        *((_QWORD *)v200 + 1) = v195;
        v29 = (char *)*((_QWORD *)v37 + 2);
        if (v39 > (unint64_t)v29)
          goto LABEL_181;
        memmove(&v37[16 * v39 + 16], &v37[16 * v39 + 32], 16 * (_QWORD)&v29[-v39]);
        *((_QWORD *)v37 + 2) = v29 - 1;
        v39 = (unint64_t)(v29 - 1);
        v92 = (unint64_t)v29 > 2;
        v192 = v230;
        v29 = v231;
      }
      while (v92);
    }
    swift_bridgeObjectRelease(v37);
    v201 = v208;
    v208[2] = 0;

    swift_bridgeObjectRelease(v201);
LABEL_161:

    return;
  }
  v203 = v25;
  v204 = v18;
  v207 = v16;
  v205 = v10;
  v32 = v31 >> 1;
  v33 = static Array._allocateBufferUninitialized(minimumCapacity:)(v31 >> 1, &type metadata for HistoryItemFilterValue);
  *(_QWORD *)(v33 + 16) = v32;
  v29 = v231;
  v208 = (_QWORD *)v33;
  v218 = (_QWORD *)(v33 + 32);
LABEL_13:
  v35 = 0;
  v36 = *v212;
  v232 = (unsigned __int16 *)OBJC_IVAR___CHHistoryDataProvider_historyTypeCounts;
  v37 = (char *)_swiftEmptyArrayStorage;
  v206 = v36 + 8;
  v38 = v215;
  v230 = v36;
  while (2)
  {
    v40 = v35++;
    v216 = v40;
    v213 = v37;
    if (v35 >= v38)
      goto LABEL_60;
    v41 = *(_QWORD *)((char *)v232 + (_QWORD)v29);
    if (*(_QWORD *)(v41 + 16))
    {
      v42 = v36 + 16 * v216;
      v43 = *(_QWORD *)v42;
      v44 = *(unsigned __int16 *)(v42 + 8);
      v45 = sub_100439B8C(*(_QWORD *)(v36 + 16 * v35), *(unsigned __int16 *)(v36 + 16 * v35 + 8));
      v36 = v230;
      if ((v46 & 1) != 0)
      {
        v47 = *(_QWORD *)((char *)v232 + (_QWORD)v29);
        if (*(_QWORD *)(v47 + 16))
        {
          v48 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v45);
          v49 = sub_100439B8C(v43, v44);
          v36 = v230;
          if ((v50 & 1) != 0)
          {
            v51 = v35;
            v52 = *(_QWORD *)(*(_QWORD *)(v47 + 56) + 8 * v49);
            v53 = (void *)objc_opt_self(NSLocale);
            v54 = objc_msgSend(v53, "currentLocale");
            v55 = v204;
            static Locale._unconditionallyBridgeFromObjectiveC(_:)();

            v56 = v205;
            Locale.language.getter();
            v57 = (*(uint64_t (**)(char *, uint64_t))(v224 + 8))(v55, v225);
            v58 = (uint64_t)v203;
            Locale.Language.languageCode.getter(v57);
            (*(void (**)(char *, uint64_t))(v226 + 8))(v56, v227);
            v59 = type metadata accessor for Locale.LanguageCode(0);
            v60 = *(_QWORD *)(v59 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59) == 1)
            {
              sub_10001BE90(v58, &qword_100825CB0);
            }
            else
            {
              Locale.LanguageCode.identifier.getter();
              v186 = v185;
              (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
              v187 = String._bridgeToObjectiveC()();
              v188 = objc_msgSend(v53, "characterDirectionForLanguage:", v187, swift_bridgeObjectRelease(v186).n128_f64[0]);

              if (v188 == (id)2)
              {
                v189 = v48 < v52;
                goto LABEL_141;
              }
            }
            v189 = v52 < v48;
LABEL_141:
            v190 = v189;
            v36 = v230;
            v29 = v231;
            v38 = v215;
            v40 = v216;
            v35 = v51;
            v61 = v216 + 2;
            v62 = v190;
            if (v216 + 2 >= v215)
              goto LABEL_45;
            goto LABEL_25;
          }
        }
      }
    }
    v40 = v216;
    v61 = v216 + 2;
    if (v216 + 2 >= v215)
    {
      v35 = v216 + 2;
      goto LABEL_89;
    }
    v62 = 0;
LABEL_25:
    v63 = (unsigned __int16 *)(v206 + 16 * v61);
    do
    {
      v64 = *(_QWORD *)((char *)v232 + (_QWORD)v29);
      if (*(_QWORD *)(v64 + 16))
      {
        v65 = v36 + 16 * v35;
        v66 = *(_QWORD *)v65;
        v67 = *(unsigned __int16 *)(v65 + 8);
        v68 = sub_100439B8C(*((_QWORD *)v63 - 1), *v63);
        v36 = v230;
        if ((v69 & 1) != 0)
        {
          v70 = *(_QWORD *)((char *)v232 + (_QWORD)v231);
          if (*(_QWORD *)(v70 + 16))
          {
            v71 = *(unsigned __int16 **)(*(_QWORD *)(v64 + 56) + 8 * v68);
            v72 = sub_100439B8C(v66, v67);
            v36 = v230;
            if ((v73 & 1) != 0)
            {
              v74 = *(_QWORD *)(*(_QWORD *)(v70 + 56) + 8 * v72);
              v229 = (id)objc_opt_self(NSLocale);
              v75 = objc_msgSend(v229, "currentLocale");
              v76 = v207;
              static Locale._unconditionallyBridgeFromObjectiveC(_:)();

              v77 = v211;
              Locale.language.getter();
              v78 = (*(uint64_t (**)(char *, uint64_t))(v224 + 8))(v76, v225);
              v79 = v210;
              Locale.Language.languageCode.getter(v78);
              v80 = (uint64_t)v79;
              (*(void (**)(char *, uint64_t))(v226 + 8))(v77, v227);
              v81 = type metadata accessor for Locale.LanguageCode(0);
              v82 = *(_QWORD *)(v81 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81) == 1)
              {
                sub_10001BE90(v80, &qword_100825CB0);
                v29 = v231;
                v38 = v215;
              }
              else
              {
                Locale.LanguageCode.identifier.getter();
                v228 = v71;
                v84 = v74;
                v85 = v62;
                v87 = v86;
                (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v81);
                v88 = String._bridgeToObjectiveC()();
                v89 = v87;
                v62 = v85;
                v74 = v84;
                v71 = v228;
                *(_QWORD *)&v90 = swift_bridgeObjectRelease(v89).n128_u64[0];
                v91 = objc_msgSend(v229, "characterDirectionForLanguage:", v88, v90);

                v29 = v231;
                v38 = v215;
                if (v91 == (id)2)
                {
                  v92 = (uint64_t)v71 < v74;
                  goto LABEL_38;
                }
              }
              v92 = v74 < (uint64_t)v71;
LABEL_38:
              v93 = v92;
              v36 = v230;
              if ((_DWORD)v62 != v93)
                goto LABEL_44;
              goto LABEL_33;
            }
          }
        }
      }
      v29 = v231;
      v38 = v215;
      if ((v62 & 1) != 0)
      {
        v40 = v216;
        goto LABEL_48;
      }
LABEL_33:
      v83 = (char *)(v61 + 1);
      v63 += 8;
      v35 = v61;
      v61 = (uint64_t)v83;
    }
    while ((uint64_t)v83 < v38);
    v61 = (uint64_t)v83;
LABEL_44:
    v40 = v216;
LABEL_45:
    v35 = v61;
    if (!(_DWORD)v62)
    {
LABEL_60:
      if (v35 >= v38)
        goto LABEL_89;
      goto LABEL_61;
    }
LABEL_48:
    if (v61 >= v40)
    {
      if (v40 >= v61)
      {
        v35 = v61;
        goto LABEL_60;
      }
      v94 = v40;
      v95 = 16 * v61 - 16;
      v96 = 16 * v40;
      v97 = v61;
      do
      {
        if (v94 != --v97)
        {
          if (!v36)
            goto LABEL_189;
          v99 = (_OWORD *)(v36 + v96);
          v100 = (_OWORD *)(v36 + v95);
          v101 = *(_QWORD *)(v36 + v96);
          v102 = *(_WORD *)(v36 + v96 + 8);
          if (v96 != v95 || v99 >= v100 + 1)
            *v99 = *v100;
          v98 = v36 + v95;
          *(_QWORD *)v98 = v101;
          *(_WORD *)(v98 + 8) = v102;
        }
        ++v94;
        v95 -= 16;
        v96 += 16;
      }
      while (v94 < v97);
      v35 = v61;
      v40 = v216;
      if (v61 >= v38)
      {
LABEL_89:
        v37 = v213;
LABEL_90:
        if (v35 < v40)
          goto LABEL_177;
        if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
          v37 = sub_100147150(0, *((_QWORD *)v37 + 2) + 1, 1, v37);
        v133 = *((_QWORD *)v37 + 2);
        v132 = *((_QWORD *)v37 + 3);
        v39 = v133 + 1;
        v36 = v230;
        if (v133 >= v132 >> 1)
        {
          v191 = sub_100147150((char *)(v132 > 1), v133 + 1, 1, v37);
          v36 = v230;
          v37 = v191;
        }
        *((_QWORD *)v37 + 2) = v39;
        v134 = v37 + 32;
        v135 = &v37[16 * v133 + 32];
        *(_QWORD *)v135 = v216;
        *((_QWORD *)v135 + 1) = v35;
        if (!v133)
        {
          v39 = 1;
          v29 = v231;
LABEL_15:
          v38 = v215;
          if (v35 >= v215)
            goto LABEL_148;
          continue;
        }
        v29 = v231;
        v229 = (id)v35;
        v217 = v37 + 32;
        while (2)
        {
          v136 = v39 - 1;
          if (v39 >= 4)
          {
            v141 = &v134[16 * v39];
            v142 = *((_QWORD *)v141 - 8);
            v143 = *((_QWORD *)v141 - 7);
            v147 = __OFSUB__(v143, v142);
            v144 = v143 - v142;
            if (v147)
              goto LABEL_166;
            v146 = *((_QWORD *)v141 - 6);
            v145 = *((_QWORD *)v141 - 5);
            v147 = __OFSUB__(v145, v146);
            v139 = v145 - v146;
            v140 = v147;
            if (v147)
              goto LABEL_167;
            v148 = v39 - 2;
            v149 = &v134[16 * v39 - 32];
            v151 = *(_QWORD *)v149;
            v150 = *((_QWORD *)v149 + 1);
            v147 = __OFSUB__(v150, v151);
            v152 = v150 - v151;
            if (v147)
              goto LABEL_169;
            v147 = __OFADD__(v139, v152);
            v153 = v139 + v152;
            if (v147)
              goto LABEL_172;
            if (v153 >= v144)
            {
              v171 = &v134[16 * v136];
              v173 = *(_QWORD *)v171;
              v172 = *((_QWORD *)v171 + 1);
              v147 = __OFSUB__(v172, v173);
              v174 = v172 - v173;
              if (v147)
                goto LABEL_176;
              v164 = v139 < v174;
            }
            else
            {
LABEL_110:
              if ((v140 & 1) != 0)
                goto LABEL_168;
              v148 = v39 - 2;
              v154 = &v134[16 * v39 - 32];
              v156 = *(_QWORD *)v154;
              v155 = *((_QWORD *)v154 + 1);
              v157 = __OFSUB__(v155, v156);
              v158 = v155 - v156;
              v159 = v157;
              if (v157)
                goto LABEL_171;
              v160 = &v134[16 * v136];
              v162 = *(_QWORD *)v160;
              v161 = *((_QWORD *)v160 + 1);
              v147 = __OFSUB__(v161, v162);
              v163 = v161 - v162;
              if (v147)
                goto LABEL_174;
              if (__OFADD__(v158, v163))
                goto LABEL_175;
              if (v158 + v163 < v139)
                goto LABEL_122;
              v164 = v139 < v163;
            }
            if (v164)
              v136 = v148;
          }
          else
          {
            if (v39 == 3)
            {
              v138 = *((_QWORD *)v37 + 4);
              v137 = *((_QWORD *)v37 + 5);
              v147 = __OFSUB__(v137, v138);
              v139 = v137 - v138;
              v140 = v147;
              goto LABEL_110;
            }
            v165 = *((_QWORD *)v37 + 4);
            v166 = *((_QWORD *)v37 + 5);
            v147 = __OFSUB__(v166, v165);
            v158 = v166 - v165;
            v159 = v147;
LABEL_122:
            if ((v159 & 1) != 0)
              goto LABEL_170;
            v167 = &v134[16 * v136];
            v169 = *(_QWORD *)v167;
            v168 = *((_QWORD *)v167 + 1);
            v147 = __OFSUB__(v168, v169);
            v170 = v168 - v169;
            if (v147)
              goto LABEL_173;
            if (v170 < v158)
              goto LABEL_15;
          }
          v175 = v136 - 1;
          if (v136 - 1 >= v39)
          {
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
            goto LABEL_185;
          }
          if (!v36)
            goto LABEL_188;
          v176 = &v134[16 * v175];
          v177 = *(_QWORD *)v176;
          v178 = v136;
          v179 = &v134[16 * v136];
          v180 = *(_QWORD *)v179;
          v181 = *((_QWORD *)v179 + 1);
          v228 = (unsigned __int16 *)(v36 + 16 * *(_QWORD *)v176);
          v182 = (unsigned __int16 *)(v36 + 16 * v180);
          v220 = (unsigned __int16 *)(v36 + 16 * v181);
          v29 = v29;
          v183 = v219;
          sub_1003C6038(v228, v182, v220, (uint64_t)v218, v29);
          if (v183)
          {
LABEL_160:
            swift_bridgeObjectRelease(v37);
            v29 = v231;

            v202 = v208;
            v208[2] = 0;

            swift_bridgeObjectRelease(v202);
            goto LABEL_161;
          }

          if (v181 < v177)
            goto LABEL_163;
          if (v178 > *((_QWORD *)v37 + 2))
            goto LABEL_164;
          v184 = v178;
          *(_QWORD *)v176 = v177;
          v134 = v217;
          *(_QWORD *)&v217[16 * v175 + 8] = v181;
          v29 = (char *)*((_QWORD *)v37 + 2);
          if (v178 >= (unint64_t)v29)
            goto LABEL_165;
          v219 = 0;
          v39 = (unint64_t)(v29 - 1);
          memmove(v179, v179 + 16, 16 * (_QWORD)&v29[-v184 - 1]);
          *((_QWORD *)v37 + 2) = v29 - 1;
          v92 = (unint64_t)v29 > 2;
          v36 = v230;
          v29 = v231;
          v35 = (uint64_t)v229;
          if (!v92)
            goto LABEL_15;
          continue;
        }
      }
LABEL_61:
      v37 = v213;
      if (__OFSUB__(v35, v40))
        goto LABEL_182;
      if (v35 - v40 >= v209)
      {
        v40 = v216;
        goto LABEL_90;
      }
      v40 = v216;
      v103 = (void *)(v216 + v209);
      if (__OFADD__(v216, v209))
        goto LABEL_184;
      if ((uint64_t)v103 >= v38)
        v103 = (void *)v38;
      if ((uint64_t)v103 >= v216)
      {
        if ((void *)v35 == v103)
          goto LABEL_90;
        v104 = v36 + 16 * v35;
        v214 = v103;
LABEL_71:
        v217 = (char *)v104;
        v229 = (id)v35;
        while (1)
        {
          v105 = *(_QWORD *)((char *)v232 + (_QWORD)v29);
          if (!*(_QWORD *)(v105 + 16)
            || (v106 = *(_QWORD *)(v104 - 16),
                v107 = *(unsigned __int16 *)(v104 - 8),
                v108 = sub_100439B8C(*(_QWORD *)v104, *(unsigned __int16 *)(v104 + 8)),
                (v109 & 1) == 0))
          {
LABEL_70:
            ++v35;
            v40 = v216;
            v104 = (uint64_t)(v217 + 16);
            if ((void *)v35 == v214)
            {
              v35 = (uint64_t)v214;
              goto LABEL_89;
            }
            goto LABEL_71;
          }
          v110 = *(_QWORD *)((char *)v232 + (_QWORD)v29);
          if (!*(_QWORD *)(v110 + 16)
            || (v111 = *(_QWORD *)(*(_QWORD *)(v105 + 56) + 8 * v108), v112 = sub_100439B8C(v106, v107), (v113 & 1) == 0))
          {
            v29 = v231;
            goto LABEL_70;
          }
          v114 = *(unsigned __int16 **)(*(_QWORD *)(v110 + 56) + 8 * v112);
          v228 = (unsigned __int16 *)objc_opt_self(NSLocale);
          v115 = objc_msgSend(v228, "currentLocale");
          v116 = v222;
          static Locale._unconditionallyBridgeFromObjectiveC(_:)();

          v117 = v223;
          Locale.language.getter();
          v118 = (*(uint64_t (**)(char *, uint64_t))(v224 + 8))(v116, v225);
          v119 = v221;
          Locale.Language.languageCode.getter(v118);
          v120 = (uint64_t)v119;
          (*(void (**)(char *, uint64_t))(v226 + 8))(v117, v227);
          v121 = type metadata accessor for Locale.LanguageCode(0);
          v122 = *(_QWORD *)(v121 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v120, 1, v121) == 1)
          {
            sub_10001BE90(v120, &qword_100825CB0);
          }
          else
          {
            Locale.LanguageCode.identifier.getter();
            v220 = v114;
            v124 = v123;
            (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v120, v121);
            v125 = String._bridgeToObjectiveC()();
            v126 = v124;
            v114 = v220;
            *(_QWORD *)&v127 = swift_bridgeObjectRelease(v126).n128_u64[0];
            v128 = objc_msgSend(v228, "characterDirectionForLanguage:", v125, v127);

            if (v128 == (id)2)
            {
              v129 = v111 < (uint64_t)v114;
              goto LABEL_81;
            }
          }
          v129 = (uint64_t)v114 < v111;
LABEL_81:
          v29 = v231;
          v35 = (uint64_t)v229;
          if (!v129)
            goto LABEL_70;
          if (!v230)
            goto LABEL_187;
          v130 = *(_QWORD *)v104;
          v131 = *(_WORD *)(v104 + 8);
          *(_OWORD *)v104 = *(_OWORD *)(v104 - 16);
          *(_WORD *)(v104 - 8) = v131;
          *(_QWORD *)(v104 - 16) = v130;
          v104 -= 16;
          if (v35 == ++v40)
            goto LABEL_70;
        }
      }
LABEL_185:
      __break(1u);
    }
    break;
  }
  __break(1u);
LABEL_187:

  __break(1u);
LABEL_188:

  __break(1u);
LABEL_189:

  __break(1u);
LABEL_190:

  __break(1u);
LABEL_191:

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_1003C796C(Swift::UInt *__src, Swift::UInt *a2, unint64_t a3, Swift::UInt *__dst, char *a5)
{
  unsigned __int16 *v6;
  Swift::UInt *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  Swift::UInt *v15;
  unsigned int v16;
  unsigned int v17;
  Swift::UInt v18;
  Swift::UInt *v19;
  unsigned __int16 *v20;
  char v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unsigned __int16 *v30;
  uint64_t v31;
  char *v32;
  unsigned __int16 *v33;
  unsigned __int16 *v34;
  Swift::UInt v35;
  unsigned int v36;
  unsigned __int16 *v37;
  char v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t result;
  int v48;
  Swift::UInt v49;
  uint64_t v50;
  Swift::UInt v52;
  Swift::UInt *v53;
  uint64_t v54;
  Swift::UInt *v56;
  Swift::UInt *v57;
  unsigned __int16 *v58;

  v53 = __dst;
  v6 = (unsigned __int16 *)a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v58 = (unsigned __int16 *)__src;
  v57 = __dst;
  if (v10 >= v13)
  {
    if (v11 >= -15)
    {
      v31 = 2 * v13;
      if (__dst != a2 || &a2[v31] <= __dst)
      {
        memmove(__dst, a2, 16 * v13);
        v7 = __src;
        __dst = v53;
      }
      v32 = (char *)&__dst[v31];
      v56 = &__dst[v31];
      v58 = v6;
      if (v7 < (Swift::UInt *)v6 && (unint64_t)(v11 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        v50 = OBJC_IVAR___CHHistoryDataProvider_activityTypeCounts;
        v33 = (unsigned __int16 *)(a3 - 16);
        do
        {
          v34 = v33 + 8;
          v35 = *((_QWORD *)v32 - 2);
          v36 = *((unsigned __int16 *)v32 - 4);
          if ((v36 >> 8) - 2 < 5)
            goto LABEL_56;
          v37 = v6 - 8;
          if (HIBYTE(*(v6 - 4)) - 2 < 5u)
            goto LABEL_56;
          if (!*(_QWORD *)(*(_QWORD *)&a5[v50] + 16))
            goto LABEL_56;
          v49 = *((_QWORD *)v6 - 2);
          v48 = *(v6 - 4);
          sub_100439BF0(*((_QWORD *)v32 - 2), *((unsigned __int16 *)v32 - 4));
          v7 = __src;
          __dst = v53;
          if ((v38 & 1) == 0)
            goto LABEL_56;
          if (!*(_QWORD *)(*(_QWORD *)&a5[v50] + 16))
            goto LABEL_56;
          sub_100439BF0(v49, v48);
          v7 = __src;
          __dst = v53;
          if ((v39 & 1) == 0)
            goto LABEL_56;
          v40 = *(_QWORD *)&a5[v50];
          if (!*(_QWORD *)(v40 + 16))
            goto LABEL_56;
          v41 = sub_100439BF0(v35, v36);
          v7 = __src;
          __dst = v53;
          if ((v42 & 1) == 0)
            goto LABEL_56;
          v43 = *(_QWORD *)&a5[v50];
          if (*(_QWORD *)(v43 + 16)
            && (v44 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v41),
                v45 = sub_100439BF0(v49, v48),
                v7 = __src,
                __dst = v53,
                (v46 & 1) != 0)
            && *(_QWORD *)(*(_QWORD *)(v43 + 56) + 8 * v45) < v44)
          {
            if (v34 != v6 || v33 >= v6)
              *(_OWORD *)v33 = *(_OWORD *)v37;
            v58 = v6 - 8;
          }
          else
          {
LABEL_56:
            v56 = (Swift::UInt *)(v32 - 16);
            if (v34 < (unsigned __int16 *)v32 || v33 >= (unsigned __int16 *)v32 || v34 != (unsigned __int16 *)v32)
              *(_OWORD *)v33 = *((_OWORD *)v32 - 1);
            v37 = v6;
            v32 -= 16;
          }
          if (v37 <= (unsigned __int16 *)v7)
            break;
          v33 -= 8;
          v6 = v37;
        }
        while (v32 > (char *)__dst);
      }
      goto LABEL_63;
    }
  }
  else if (v8 >= -15)
  {
    v14 = 2 * v10;
    if (__dst != __src || &__src[v14] <= __dst)
    {
      memmove(__dst, __src, v14 * 8);
      v7 = __src;
      __dst = v53;
    }
    v15 = &__dst[v14];
    v56 = &__dst[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      v54 = OBJC_IVAR___CHHistoryDataProvider_activityTypeCounts;
      do
      {
        v16 = v6[4];
        if ((v16 >> 8) - 2 < 5)
          goto LABEL_28;
        v17 = *((unsigned __int16 *)__dst + 4);
        if ((v17 >> 8) - 2 < 5)
          goto LABEL_28;
        if (!*(_QWORD *)(*(_QWORD *)&a5[v54] + 16))
          goto LABEL_28;
        v18 = *(_QWORD *)v6;
        v52 = *__dst;
        v19 = __dst;
        v20 = (unsigned __int16 *)v7;
        sub_100439BF0(*(_QWORD *)v6, v16);
        v7 = (Swift::UInt *)v20;
        __dst = v19;
        if ((v21 & 1) == 0)
          goto LABEL_28;
        if (!*(_QWORD *)(*(_QWORD *)&a5[v54] + 16))
          goto LABEL_28;
        sub_100439BF0(v52, v17);
        v7 = (Swift::UInt *)v20;
        __dst = v19;
        if ((v22 & 1) == 0)
          goto LABEL_28;
        v23 = *(_QWORD *)&a5[v54];
        if (!*(_QWORD *)(v23 + 16))
          goto LABEL_28;
        v24 = sub_100439BF0(v18, v16);
        v7 = (Swift::UInt *)v20;
        __dst = v19;
        if ((v25 & 1) == 0)
          goto LABEL_28;
        v26 = *(_QWORD *)&a5[v54];
        if (*(_QWORD *)(v26 + 16)
          && (v27 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24),
              v28 = sub_100439BF0(v52, v17),
              v7 = (Swift::UInt *)v20,
              __dst = v19,
              (v29 & 1) != 0)
          && *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v28) < v27)
        {
          v30 = v6 + 8;
          if (v20 < v6 || v20 >= v30 || v20 != v6)
            *(_OWORD *)v20 = *(_OWORD *)v6;
        }
        else
        {
LABEL_28:
          if (v7 != __dst)
            *(_OWORD *)v7 = *(_OWORD *)__dst;
          __dst += 2;
          v57 = __dst;
          v30 = v6;
        }
        v7 += 2;
        if (__dst >= v15)
          break;
        v6 = v30;
      }
      while ((unint64_t)v30 < a3);
      v58 = (unsigned __int16 *)v7;
    }
LABEL_63:
    sub_10014724C((void **)&v58, (const void **)&v57, &v56);
    return 1;
  }

  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

unint64_t sub_1003C7DF0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unsigned int v9;
  Swift::UInt v10;
  Swift::UInt v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  Swift::UInt v19;
  __int16 v20;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v22 = result;
  v25 = a3;
  if (a3 != a2)
  {
    v5 = OBJC_IVAR___CHHistoryDataProvider_activityTypeCounts;
    v24 = *a4;
    v6 = *a4 + 16 * a3;
LABEL_5:
    v23 = v6;
    v7 = v22;
    while (1)
    {
      v8 = *(unsigned __int16 *)(v6 + 8);
      if ((v8 >> 8) - 2 < 5)
        goto LABEL_4;
      v9 = *(unsigned __int16 *)(v6 - 8);
      if ((v9 >> 8) - 2 < 5)
        goto LABEL_4;
      if (!*(_QWORD *)(*(_QWORD *)(a5 + v5) + 16))
        goto LABEL_4;
      v10 = *(_QWORD *)v6;
      v11 = *(_QWORD *)(v6 - 16);
      result = sub_100439BF0(*(_QWORD *)v6, *(unsigned __int16 *)(v6 + 8));
      if ((v12 & 1) == 0
        || !*(_QWORD *)(*(_QWORD *)(a5 + v5) + 16)
        || (result = sub_100439BF0(v11, v9), (v13 & 1) == 0)
        || (v14 = *(_QWORD *)(a5 + v5), !*(_QWORD *)(v14 + 16))
        || (result = sub_100439BF0(v10, v8), (v15 & 1) == 0)
        || (v16 = *(_QWORD *)(a5 + v5), !*(_QWORD *)(v16 + 16))
        || (v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * result), result = sub_100439BF0(v11, v9), (v18 & 1) == 0)
        || *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * result) >= v17)
      {
LABEL_4:
        v6 = v23 + 16;
        if (++v25 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v24)
        break;
      v19 = *(_QWORD *)v6;
      v20 = *(_WORD *)(v6 + 8);
      *(_OWORD *)v6 = *(_OWORD *)(v6 - 16);
      *(_WORD *)(v6 - 8) = v20;
      *(_QWORD *)(v6 - 16) = v19;
      v6 -= 16;
      if (v25 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

void sub_1003C7F94(uint64_t *a1, void *a2)
{
  char *v2;
  Swift::Int v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  char *v11;
  Swift::Int v12;
  uint64_t v13;
  Swift::Int v14;
  unint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  Swift::Int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  Swift::UInt v23;
  Swift::UInt v24;
  char v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  int v34;
  Swift::Int v35;
  unsigned __int16 *v36;
  Swift::Int v37;
  unsigned int v38;
  uint64_t v39;
  unsigned int v40;
  Swift::UInt v41;
  Swift::UInt v42;
  char v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  int v52;
  Swift::Int v53;
  uint64_t v54;
  uint64_t v55;
  Swift::Int v56;
  Swift::Int v57;
  uint64_t v58;
  _OWORD *v59;
  _OWORD *v60;
  uint64_t v61;
  __int16 v62;
  Swift::Int v63;
  uint64_t v64;
  uint64_t i;
  unsigned int v66;
  unsigned int v67;
  Swift::Int v68;
  Swift::UInt v69;
  Swift::UInt v70;
  char v71;
  char v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  Swift::UInt v80;
  __int16 v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  char v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  BOOL v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char *v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  unint64_t v133;
  char *v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  Swift::UInt *v142;
  Swift::UInt *v143;
  unint64_t v144;
  char *v145;
  char *v146;
  unint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  _QWORD *v150;
  Swift::Int v151;
  Swift::Int v152;
  Swift::Int v153;
  Swift::Int v154;
  uint64_t v155;
  Swift::UInt *__dst;
  char *v157;
  Swift::UInt *v158;
  uint64_t v159;
  uint64_t v160;
  Swift::UInt *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;

  v4 = a1[1];
  v166 = a2;
  v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      v9 = v166;
      if (v4)
      {
        v10 = v166;
        sub_1003C7DF0(0, v4, 1, a1, (uint64_t)v10);

      }
      else
      {

      }
      goto LABEL_153;
    }
LABEL_176:
    __break(1u);
LABEL_177:
    __break(1u);
LABEL_178:
    __break(1u);
LABEL_179:
    __break(1u);
LABEL_180:

    __break(1u);
LABEL_181:

    __break(1u);
LABEL_182:

    __break(1u);
LABEL_183:

    __break(1u);
LABEL_184:

    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_184;
  v154 = v4;
  v151 = v5;
  v162 = v2;
  v148 = a1;
  if (v4 < 2)
  {
    v11 = (char *)_swiftEmptyArrayStorage;
    __dst = &_swiftEmptyArrayStorage[4];
    v150 = _swiftEmptyArrayStorage;
    if (v4 == 1)
      goto LABEL_12;
    v15 = _swiftEmptyArrayStorage[2];
LABEL_140:
    if (v15 < 2)
    {
LABEL_151:
      swift_bridgeObjectRelease(v11);
      v136 = v150;
      v150[2] = 0;
      v9 = v166;
      goto LABEL_152;
    }
    v137 = *v148;
    v165 = *v148;
    while (1)
    {
      v138 = v15 - 2;
      if (v15 < 2)
        break;
      if (!v137)
        goto LABEL_183;
      v159 = (uint64_t)v11;
      v139 = *(_QWORD *)&v11[16 * v138 + 32];
      v140 = *(_QWORD *)&v11[16 * v15 + 24];
      v141 = *(_QWORD *)&v11[16 * v15 + 16];
      v142 = (Swift::UInt *)(v137 + 16 * v139);
      v143 = (Swift::UInt *)(v137 + 16 * v141);
      v144 = v137 + 16 * v140;
      v145 = v166;
      v2 = v162;
      sub_1003C796C(v142, v143, v144, __dst, v145);
      if (v162)
      {
        v135 = v159;
        goto LABEL_137;
      }

      if (v140 < v139)
        goto LABEL_172;
      v11 = (char *)v159;
      if ((swift_isUniquelyReferenced_nonNull_native(v159) & 1) == 0)
        v11 = sub_100147754(v159);
      if (v138 >= *((_QWORD *)v11 + 2))
        goto LABEL_173;
      v146 = &v11[16 * v138 + 32];
      *(_QWORD *)v146 = v139;
      *((_QWORD *)v146 + 1) = v140;
      v147 = *((_QWORD *)v11 + 2);
      if (v15 > v147)
        goto LABEL_174;
      memmove(&v11[16 * v15 + 16], &v11[16 * v15 + 32], 16 * (v147 - v15));
      *((_QWORD *)v11 + 2) = v147 - 1;
      v15 = v147 - 1;
      v137 = v165;
      if (v147 <= 2)
        goto LABEL_151;
    }
LABEL_171:
    __break(1u);
LABEL_172:
    __break(1u);
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
LABEL_175:
    __break(1u);
    goto LABEL_176;
  }
  v7 = v6 >> 1;
  v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6 >> 1, &type metadata for HistoryItemFilterValue);
  *(_QWORD *)(v8 + 16) = v7;
  v150 = (_QWORD *)v8;
  __dst = (Swift::UInt *)(v8 + 32);
LABEL_12:
  v2 = v166;
  v12 = 0;
  v13 = *a1;
  v164 = OBJC_IVAR___CHHistoryDataProvider_activityTypeCounts;
  v149 = *a1 + 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v14 = v4;
  v163 = *a1;
  while (1)
  {
    v16 = v12;
    v17 = v12 + 1;
    v157 = v11;
    if (v12 + 1 < v14)
    {
      v18 = v12 + 1;
      v19 = v13 + 16 * v17;
      v20 = *(unsigned __int16 *)(v19 + 8);
      if ((v20 >> 8) - 2 >= 5)
      {
        v21 = v13 + 16 * v12;
        v22 = *(unsigned __int16 *)(v21 + 8);
        if ((v22 >> 8) - 2 >= 5)
        {
          if (*(_QWORD *)(*(_QWORD *)&v2[v164] + 16))
          {
            v23 = *(_QWORD *)v19;
            v24 = *(_QWORD *)v21;
            sub_100439BF0(*(_QWORD *)v19, *(unsigned __int16 *)(v19 + 8));
            v13 = v163;
            v2 = v166;
            if ((v25 & 1) != 0)
            {
              if (*(_QWORD *)(*(_QWORD *)&v166[v164] + 16))
              {
                sub_100439BF0(v24, v22);
                v13 = v163;
                v2 = v166;
                if ((v26 & 1) != 0)
                {
                  v27 = *(_QWORD *)&v166[v164];
                  if (*(_QWORD *)(v27 + 16))
                  {
                    v28 = sub_100439BF0(v23, v20);
                    v13 = v163;
                    v2 = v166;
                    if ((v29 & 1) != 0)
                    {
                      v30 = *(_QWORD *)&v166[v164];
                      if (*(_QWORD *)(v30 + 16))
                      {
                        v31 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v28);
                        v32 = sub_100439BF0(v24, v22);
                        v13 = v163;
                        v2 = v166;
                        if ((v33 & 1) != 0)
                        {
                          v34 = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v32) < v31;
                          v35 = v16 + 2;
                          v11 = v157;
                          if (v16 + 2 >= v154)
                            goto LABEL_46;
                          goto LABEL_30;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      v35 = v16 + 2;
      if (v16 + 2 < v154)
      {
        v34 = 0;
LABEL_30:
        v36 = (unsigned __int16 *)(v149 + 16 * v35);
        v37 = v18;
        do
        {
          v38 = *v36;
          if ((v38 >> 8) - 2 < 5)
            goto LABEL_43;
          v39 = v13 + 16 * v37;
          v40 = *(unsigned __int16 *)(v39 + 8);
          if ((v40 >> 8) - 2 < 5)
            goto LABEL_43;
          if (!*(_QWORD *)(*(_QWORD *)&v2[v164] + 16))
            goto LABEL_43;
          v41 = *((_QWORD *)v36 - 1);
          v42 = *(_QWORD *)v39;
          sub_100439BF0(v41, *v36);
          v13 = v163;
          v2 = v166;
          if ((v43 & 1) == 0)
            goto LABEL_43;
          if (!*(_QWORD *)(*(_QWORD *)&v166[v164] + 16))
            goto LABEL_43;
          sub_100439BF0(v42, v40);
          v13 = v163;
          v2 = v166;
          if ((v44 & 1) == 0)
            goto LABEL_43;
          v45 = *(_QWORD *)&v166[v164];
          if (!*(_QWORD *)(v45 + 16))
            goto LABEL_43;
          v46 = sub_100439BF0(v41, v38);
          v13 = v163;
          v2 = v166;
          if ((v47 & 1) == 0)
            goto LABEL_43;
          v48 = *(_QWORD *)&v166[v164];
          if (*(_QWORD *)(v48 + 16)
            && (v49 = *(_QWORD *)(*(_QWORD *)(v45 + 56) + 8 * v46),
                v50 = sub_100439BF0(v42, v40),
                v13 = v163,
                v2 = v166,
                (v51 & 1) != 0))
          {
            v52 = *(_QWORD *)(*(_QWORD *)(v48 + 56) + 8 * v50) >= v49;
            v11 = v157;
            if (v34 == v52)
              goto LABEL_46;
          }
          else
          {
LABEL_43:
            v11 = v157;
            if ((v34 & 1) != 0)
              goto LABEL_47;
          }
          v36 += 8;
          v53 = v35 + 1;
          v37 = v35;
          v35 = v53;
        }
        while (v53 < v154);
        v35 = v53;
LABEL_46:
        v17 = v35;
        if (v34)
        {
LABEL_47:
          if (v35 < v16)
            goto LABEL_179;
          if (v16 < v35)
          {
            v54 = 16 * v35 - 16;
            v55 = 16 * v16;
            v56 = v35;
            v57 = v16;
            do
            {
              if (v57 != --v56)
              {
                if (!v13)
                  goto LABEL_182;
                v59 = (_OWORD *)(v13 + v55);
                v60 = (_OWORD *)(v13 + v54);
                v61 = *(_QWORD *)(v13 + v55);
                v62 = *(_WORD *)(v13 + v55 + 8);
                if (v55 != v54 || v59 >= v60 + 1)
                  *v59 = *v60;
                v58 = v13 + v54;
                *(_QWORD *)v58 = v61;
                *(_WORD *)(v58 + 8) = v62;
              }
              ++v57;
              v54 -= 16;
              v55 += 16;
            }
            while (v57 < v56);
          }
          v17 = v35;
        }
        goto LABEL_60;
      }
      v17 = v16 + 2;
      v11 = v157;
    }
LABEL_60:
    if (v17 < v154)
    {
      if (__OFSUB__(v17, v16))
        goto LABEL_175;
      if (v17 - v16 < v151)
      {
        v63 = v16 + v151;
        if (__OFADD__(v16, v151))
          goto LABEL_177;
        if (v63 >= v154)
          v63 = v154;
        if (v63 < v16)
          goto LABEL_178;
        if (v17 != v63)
        {
          v155 = v16;
          v64 = v13 + 16 * v17;
          v152 = v63;
          do
          {
            v160 = v64;
            for (i = v155; v68 != i; ++i)
            {
              v66 = *(unsigned __int16 *)(v64 + 8);
              if ((v66 >> 8) - 2 < 5)
                break;
              v67 = *(unsigned __int16 *)(v64 - 8);
              if ((v67 >> 8) - 2 < 5)
                break;
              v68 = v17;
              if (!*(_QWORD *)(*(_QWORD *)&v2[v164] + 16))
                goto LABEL_70;
              v69 = *(_QWORD *)v64;
              v70 = *(_QWORD *)(v64 - 16);
              sub_100439BF0(*(_QWORD *)v64, *(unsigned __int16 *)(v64 + 8));
              if ((v71 & 1) == 0)
                goto LABEL_69;
              v2 = v166;
              if (!*(_QWORD *)(*(_QWORD *)&v166[v164] + 16))
                goto LABEL_70;
              sub_100439BF0(v70, v67);
              if ((v72 & 1) == 0)
                goto LABEL_69;
              v2 = v166;
              v73 = *(_QWORD *)&v166[v164];
              if (!*(_QWORD *)(v73 + 16))
                goto LABEL_70;
              v74 = sub_100439BF0(v69, v66);
              if ((v75 & 1) == 0)
                goto LABEL_69;
              v2 = v166;
              v76 = *(_QWORD *)&v166[v164];
              if (!*(_QWORD *)(v76 + 16))
                goto LABEL_70;
              v77 = *(_QWORD *)(*(_QWORD *)(v73 + 56) + 8 * v74);
              v78 = sub_100439BF0(v70, v67);
              if ((v79 & 1) == 0)
              {
LABEL_69:
                v2 = v166;
LABEL_70:
                v17 = v68;
                break;
              }
              v17 = v68;
              if (*(_QWORD *)(*(_QWORD *)(v76 + 56) + 8 * v78) >= v77)
              {
                v2 = v166;
                break;
              }
              v2 = v166;
              if (!v163)
                goto LABEL_180;
              v80 = *(_QWORD *)v64;
              v81 = *(_WORD *)(v64 + 8);
              *(_OWORD *)v64 = *(_OWORD *)(v64 - 16);
              *(_WORD *)(v64 - 8) = v81;
              *(_QWORD *)(v64 - 16) = v80;
              v64 -= 16;
            }
            ++v17;
            v64 = v160 + 16;
          }
          while (v17 != v152);
          v17 = v152;
          v11 = v157;
          v16 = v155;
        }
      }
    }
    if (v17 < v16)
    {
LABEL_170:
      __break(1u);
      goto LABEL_171;
    }
    v153 = v17;
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_100147150(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v83 = *((_QWORD *)v11 + 2);
    v82 = *((_QWORD *)v11 + 3);
    v15 = v83 + 1;
    v2 = v166;
    v13 = v163;
    if (v83 >= v82 >> 1)
    {
      v134 = sub_100147150((char *)(v82 > 1), v83 + 1, 1, v11);
      v13 = v163;
      v2 = v166;
      v11 = v134;
    }
    *((_QWORD *)v11 + 2) = v15;
    v84 = v11 + 32;
    v85 = &v11[16 * v83 + 32];
    *(_QWORD *)v85 = v16;
    *((_QWORD *)v85 + 1) = v153;
    if (v83)
      break;
    v15 = 1;
LABEL_14:
    v12 = v153;
    v14 = v154;
    if (v153 >= v154)
      goto LABEL_140;
  }
  while (1)
  {
    v86 = v15 - 1;
    if (v15 >= 4)
    {
      v91 = &v84[16 * v15];
      v92 = *((_QWORD *)v91 - 8);
      v93 = *((_QWORD *)v91 - 7);
      v97 = __OFSUB__(v93, v92);
      v94 = v93 - v92;
      if (v97)
        goto LABEL_159;
      v96 = *((_QWORD *)v91 - 6);
      v95 = *((_QWORD *)v91 - 5);
      v97 = __OFSUB__(v95, v96);
      v89 = v95 - v96;
      v90 = v97;
      if (v97)
        goto LABEL_160;
      v98 = v15 - 2;
      v99 = &v84[16 * v15 - 32];
      v101 = *(_QWORD *)v99;
      v100 = *((_QWORD *)v99 + 1);
      v97 = __OFSUB__(v100, v101);
      v102 = v100 - v101;
      if (v97)
        goto LABEL_162;
      v97 = __OFADD__(v89, v102);
      v103 = v89 + v102;
      if (v97)
        goto LABEL_165;
      if (v103 >= v94)
      {
        v121 = &v84[16 * v86];
        v123 = *(_QWORD *)v121;
        v122 = *((_QWORD *)v121 + 1);
        v97 = __OFSUB__(v122, v123);
        v124 = v122 - v123;
        if (v97)
          goto LABEL_169;
        v114 = v89 < v124;
        goto LABEL_126;
      }
    }
    else
    {
      if (v15 != 3)
      {
        v115 = *((_QWORD *)v11 + 4);
        v116 = *((_QWORD *)v11 + 5);
        v97 = __OFSUB__(v116, v115);
        v108 = v116 - v115;
        v109 = v97;
        goto LABEL_120;
      }
      v88 = *((_QWORD *)v11 + 4);
      v87 = *((_QWORD *)v11 + 5);
      v97 = __OFSUB__(v87, v88);
      v89 = v87 - v88;
      v90 = v97;
    }
    if ((v90 & 1) != 0)
      goto LABEL_161;
    v98 = v15 - 2;
    v104 = &v84[16 * v15 - 32];
    v106 = *(_QWORD *)v104;
    v105 = *((_QWORD *)v104 + 1);
    v107 = __OFSUB__(v105, v106);
    v108 = v105 - v106;
    v109 = v107;
    if (v107)
      goto LABEL_164;
    v110 = &v84[16 * v86];
    v112 = *(_QWORD *)v110;
    v111 = *((_QWORD *)v110 + 1);
    v97 = __OFSUB__(v111, v112);
    v113 = v111 - v112;
    if (v97)
      goto LABEL_167;
    if (__OFADD__(v108, v113))
      goto LABEL_168;
    if (v108 + v113 >= v89)
    {
      v114 = v89 < v113;
LABEL_126:
      if (v114)
        v86 = v98;
      goto LABEL_128;
    }
LABEL_120:
    if ((v109 & 1) != 0)
      goto LABEL_163;
    v117 = &v84[16 * v86];
    v119 = *(_QWORD *)v117;
    v118 = *((_QWORD *)v117 + 1);
    v97 = __OFSUB__(v118, v119);
    v120 = v118 - v119;
    if (v97)
      goto LABEL_166;
    if (v120 < v108)
      goto LABEL_14;
LABEL_128:
    v125 = v86 - 1;
    if (v86 - 1 >= v15)
    {
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
      goto LABEL_170;
    }
    if (!v13)
      goto LABEL_181;
    v126 = &v84[16 * v125];
    v127 = *(_QWORD *)v126;
    v128 = v86;
    v129 = &v84[16 * v86];
    v130 = *((_QWORD *)v129 + 1);
    v158 = (Swift::UInt *)(v13 + 16 * *(_QWORD *)v129);
    v161 = (Swift::UInt *)(v13 + 16 * *(_QWORD *)v126);
    v131 = v13 + 16 * v130;
    v132 = v2;
    v2 = v162;
    sub_1003C796C(v161, v158, v131, __dst, v132);
    if (v162)
      break;

    if (v130 < v127)
      goto LABEL_156;
    if (v128 > *((_QWORD *)v11 + 2))
      goto LABEL_157;
    *(_QWORD *)v126 = v127;
    v84 = v11 + 32;
    *(_QWORD *)&v11[16 * v125 + 40] = v130;
    v133 = *((_QWORD *)v11 + 2);
    if (v128 >= v133)
      goto LABEL_158;
    v15 = v133 - 1;
    memmove(v129, v129 + 16, 16 * (v133 - 1 - v128));
    *((_QWORD *)v11 + 2) = v133 - 1;
    v2 = v166;
    v13 = v163;
    if (v133 <= 2)
      goto LABEL_14;
  }
  v135 = (uint64_t)v11;
LABEL_137:
  swift_bridgeObjectRelease(v135);
  v9 = v166;

  v136 = v150;
  v150[2] = 0;
LABEL_152:

  swift_bridgeObjectRelease(v136);
LABEL_153:

}

void sub_1003C8A68(uint64_t *a1, void *a2, void (*a3)(_QWORD *, id))
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  _QWORD v9[2];

  v5 = *a1;
  v6 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
    v5 = sub_10014777C(v5);
  v7 = *(_QWORD *)(v5 + 16);
  v9[0] = v5 + 32;
  v9[1] = v7;
  v8 = v6;
  a3(v9, v8);

  *a1 = v5;
}

uint64_t sub_1003C8B08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34[2];
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;

  v2 = type metadata accessor for DateComponents(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _swiftEmptyDictionarySingleton;
  v38 = _swiftEmptyDictionarySingleton;
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
    return (uint64_t)v6;
  v8 = a1 + 32;
  v31 = xmmword_100622F90;
  v32 = v3;
  v33 = v2;
  while (1)
  {
    sub_1000252E0(v8, (uint64_t)&v35);
    v9 = v36;
    v10 = v37;
    sub_100016804(&v35, v36);
    sub_1003C2068(v9, v10, (uint64_t)v5);
    v12 = sub_100439544((uint64_t)v5);
    v13 = v6[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      break;
    v16 = v11;
    if (v6[3] < v15)
    {
      sub_1003F915C(v15, 1);
      v6 = v38;
      v17 = sub_100439544((uint64_t)v5);
      if ((v16 & 1) != (v18 & 1))
        goto LABEL_19;
      v12 = v17;
    }
    if ((v16 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v6 = v38;
      v19 = v38[7];
      sub_10002411C(&v35, (uint64_t)v34);
      v20 = *(_QWORD **)(v19 + 8 * v12);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v20);
      *(_QWORD *)(v19 + 8 * v12) = v20;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v20 = sub_10002DC2C(0, v20[2] + 1, 1, v20);
        *(_QWORD *)(v19 + 8 * v12) = v20;
      }
      v23 = v20[2];
      v22 = v20[3];
      if (v23 >= v22 >> 1)
      {
        v20 = sub_10002DC2C((_QWORD *)(v22 > 1), v23 + 1, 1, v20);
        *(_QWORD *)(v19 + 8 * v12) = v20;
      }
      v2 = v33;
      v20[2] = v23 + 1;
      sub_10002411C(v34, (uint64_t)&v20[5 * v23 + 4]);
      v3 = v32;
    }
    else
    {
      v24 = sub_100047110(&qword_1008215C8);
      v25 = swift_allocObject(v24, 72, 7);
      *(_OWORD *)(v25 + 16) = v31;
      sub_10002411C(&v35, v25 + 32);
      v6[(v12 >> 6) + 8] |= 1 << v12;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6[6] + *(_QWORD *)(v3 + 72) * v12, v5, v2);
      *(_QWORD *)(v6[7] + 8 * v12) = v25;
      v26 = v6[2];
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
        goto LABEL_18;
      v6[2] = v28;
    }
    v8 += 40;
    if (!--v7)
      return (uint64_t)v6;
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v2);
  __break(1u);
  return result;
}

void sub_1003C8DB0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t, __n128);
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, __n128);
  _QWORD *v36;
  uint64_t v37;

  v4 = v3;
  v36 = a1;
  v7 = type metadata accessor for DateComponents(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v32 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100821648);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 + 16);
  if (v13)
  {
    v14 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v15 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
    v34 = *(_QWORD *)(v8 + 72);
    v35 = v15;
    v30 = a2;
    v16 = swift_bridgeObjectRetain(a2);
    v17 = (uint64_t)v32;
    v31 = a3;
    while (1)
    {
      v35(v12, v14, v7, v16);
      v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v20)(v12, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7) == 1)
      {
        a2 = v30;
        goto LABEL_16;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v17, v12, v7);
      if (*(_QWORD *)(a3 + 16))
      {
        v21 = sub_100439544(v17);
        if ((v22 & 1) != 0)
        {
          v23 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v21);
          v37 = v23;
          swift_bridgeObjectRetain_n(v23, 2);
          sub_10017AEF4(&v37);
          v33 = v4;
          if (v4)
          {
            swift_release(v37);
            __break(1u);
            return;
          }
          swift_bridgeObjectRelease(v23);
          v24 = v37;
          swift_retain(v37);
          if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
            v36 = sub_100141160(0, v36[2] + 1, 1, v36);
          v26 = v36[2];
          v25 = v36[3];
          if (v26 >= v25 >> 1)
            v36 = sub_100141160((_QWORD *)(v25 > 1), v26 + 1, 1, v36);
          v18 = v36;
          v36[2] = v26 + 1;
          v18[v26 + 4] = v24;
          v19 = swift_release(v24);
          v17 = (uint64_t)v32;
          v4 = v33;
          a3 = v31;
        }
      }
      (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v17, v7, v19);
      v14 += v34;
      if (!--v13)
      {
        a2 = v30;
        v20(v12, 1, 1, v7, v16);
        goto LABEL_16;
      }
    }
  }
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
  v28 = swift_bridgeObjectRetain(a2);
  v27(v12, 1, 1, v7, v28);
LABEL_16:
  swift_bridgeObjectRelease(a2);
}

void sub_1003C904C(uint64_t a1, __int16 a2, uint64_t a3)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, _QWORD, uint64_t);
  void *v46;
  id v47;
  char *v48;
  uint64_t v49;
  __n128 v50;
  id v51;
  Class isa;
  id v53;
  uint64_t v54;
  char isUniquelyReferenced_nonNull_native;
  __n128 v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  __n128 v62;
  int v63;
  uint64_t v64;
  unint64_t v65;
  void (*v66)(unint64_t, uint64_t);
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90[5];
  _QWORD *v91;

  v4 = HIBYTE(a2);
  v5 = type metadata accessor for Date(0);
  v82 = *(_QWORD *)(v5 - 8);
  v83 = v5;
  __chkstk_darwin(v5);
  v81 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Calendar(0);
  v79 = *(_QWORD *)(v7 - 8);
  v80 = v7;
  __chkstk_darwin(v7);
  v78 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DateComponents(0);
  v77 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  if (v4 != 2 && v4 != 5)
  {
    v87 = *(_QWORD *)(a3 + 16);
    if (v87)
    {
      v84 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
      v76 = v10;
      v86 = a3 + 32;
      v75 = enum case for Calendar.Component.month(_:);
      v74 = enum case for Calendar.Component.year(_:);
      v73 = enum case for Calendar.Component.era(_:);
      v71 = a3;
      swift_bridgeObjectRetain(a3);
      v12 = 0;
      v85 = _swiftEmptyDictionarySingleton;
      v72 = xmmword_100624A40;
      while (1)
      {
        v14 = *(_QWORD *)(v86 + 8 * v12);
        v91 = _swiftEmptyArrayStorage;
        v15 = *(_QWORD *)(v14 + 16);
        swift_bridgeObjectRetain(v14);
        specialized ContiguousArray.reserveCapacity(_:)(v15);
        v16 = *(_QWORD *)(v14 + 16);
        if (v16)
        {
          v88 = v12;
          v17 = v14 + 32;
          v18 = v14 + 32;
          v19 = v16;
          do
          {
            sub_1000252E0(v18, (uint64_t)v90);
            v20 = sub_100047110((uint64_t *)&unk_10082E5B0);
            v21 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
            v22 = swift_dynamicCast(&v89, v90, v20, v21, 6);
            if (!(_DWORD)v22)
            {
              v89 = 0;
              swift_release(v91);
              v13 = v89;
              swift_bridgeObjectRelease(v14);

              v12 = v88;
              goto LABEL_6;
            }
            v23 = v89;
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v22);
            v24 = v91[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
            v25 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v23);
            specialized ContiguousArray._endMutation()(v25);
            v18 += 40;
            --v19;
          }
          while (v19);
          swift_release(v91);
          v91 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)(v15);
          v12 = v88;
          while (1)
          {
            sub_1000252E0(v17, (uint64_t)v90);
            v26 = sub_100047110((uint64_t *)&unk_10082E5B0);
            v27 = swift_dynamicCast(&v89, v90, v26, v21, 6);
            if (!(_DWORD)v27)
              break;
            v28 = v89;
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v27);
            v29 = v91[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v29);
            v30 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v28);
            specialized ContiguousArray._endMutation()(v30);
            v17 += 40;
            if (!--v16)
              goto LABEL_16;
          }
          v89 = 0;
          swift_release(v91);
          v57 = v89;
          swift_bridgeObjectRelease(v14);

          goto LABEL_6;
        }
        swift_release(v91);
        v91 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)(v15);
LABEL_16:
        v31 = (unint64_t)v91;
        swift_bridgeObjectRelease(v14);
        if ((v31 & 0x8000000000000000) != 0 || (v31 & 0x4000000000000000) != 0)
        {
          swift_retain(v31);
          if (!_CocoaArrayWrapper.endIndex.getter(v69))
          {
LABEL_32:
            swift_release_n(v31, 2);
            goto LABEL_6;
          }
        }
        else
        {
          v32 = *(_QWORD *)(v31 + 16);
          swift_retain(v31);
          if (!v32)
            goto LABEL_32;
        }
        if ((v31 & 0xC000000000000001) != 0)
        {
          v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v31);
        }
        else
        {
          if (!*(_QWORD *)(v31 + 16))
          {
            __break(1u);
            return;
          }
          v33 = *(id *)(v31 + 32);
        }
        v34 = v33;
        swift_release(v31);
        v35 = v34;
        v36 = v78;
        static Calendar.current.getter(v35);
        v37 = sub_100047110((uint64_t *)&unk_100828720);
        v38 = type metadata accessor for Calendar.Component(0);
        v39 = *(_QWORD *)(v38 - 8);
        v40 = *(_QWORD *)(v39 + 72);
        v41 = *(unsigned __int8 *)(v39 + 80);
        v42 = (v41 + 32) & ~v41;
        v43 = swift_allocObject(v37, v42 + 3 * v40, v41 | 7);
        *(_OWORD *)(v43 + 16) = v72;
        v44 = v43 + v42;
        v45 = *(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 104);
        v45(v44, v75, v38);
        v45(v44 + v40, v74, v38);
        v45(v44 + 2 * v40, v73, v38);
        v46 = sub_1002302F0(v43);
        swift_setDeallocating(v43);
        swift_arrayDestroy(v44, 3, v38);
        swift_deallocClassInstance(v43, 32, 7);
        v47 = objc_msgSend(v35, "endDate");
        v48 = v81;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v47);

        v49 = (uint64_t)v84;
        Calendar.dateComponents(_:from:)(v46, v48);
        v50 = swift_bridgeObjectRelease(v46);
        (*(void (**)(char *, uint64_t, __n128))(v82 + 8))(v48, v83, v50);
        (*(void (**)(char *, uint64_t))(v79 + 8))(v36, v80);

        v51 = objc_allocWithZone((Class)FIUIWorkoutStatistics);
        sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        v53 = objc_msgSend(v51, "initWithWorkouts:", isa, swift_release(v31).n128_f64[0]);

        if (v53)
        {
          v54 = (uint64_t)v85;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v85);
          v90[0] = v54;
          sub_1003FEF30((uint64_t)v53, v49, isUniquelyReferenced_nonNull_native);
          v85 = (_QWORD *)v90[0];
          v56 = swift_bridgeObjectRelease(0x8000000000000000);
          (*(void (**)(uint64_t, uint64_t, __n128))(v77 + 8))(v49, v76, v56);

        }
        else
        {
          v58 = (uint64_t)v85;
          swift_bridgeObjectRetain(v85);
          v59 = sub_100439544(v49);
          v61 = v60;
          v62 = swift_bridgeObjectRelease(v58);
          if ((v61 & 1) != 0)
          {
            v63 = swift_isUniquelyReferenced_nonNull_native(v58);
            v90[0] = v58;
            if (!v63)
            {
              sub_100401F2C();
              v58 = v90[0];
            }
            v64 = v76;
            v65 = *(_QWORD *)(v58 + 48) + *(_QWORD *)(v77 + 72) * v59;
            v66 = *(void (**)(unint64_t, uint64_t))(v77 + 8);
            v66(v65, v76);
            v67 = *(void **)(*(_QWORD *)(v90[0] + 56) + 8 * v59);
            v85 = (_QWORD *)v90[0];
            sub_1004D2190(v59, v90[0]);
            v62 = swift_bridgeObjectRelease(0x8000000000000000);
            v68 = v64;
          }
          else
          {
            v67 = 0;
            v68 = v76;
            v66 = *(void (**)(unint64_t, uint64_t))(v77 + 8);
          }
          ((void (*)(char *, uint64_t, __n128))v66)(v84, v68, v62);

        }
LABEL_6:
        if (++v12 == v87)
        {
          swift_bridgeObjectRelease(v71);
          return;
        }
      }
    }
  }
}

void sub_1003C96EC()
{
  uint64_t v0;

  sub_1003C1E1C(v0, &OBJC_IVAR___CHHistoryDataProvider_shouldForceReload);
}

uint64_t *sub_1003C9748(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100047110(&qword_1008302D8);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v4, a2, v8);
      v9 = v4;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *v4 = *a2;
      swift_retain(v13);
      v9 = v4;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = a3[6];
    v16 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)v4 + v14) = (uint64_t)v16;
    v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + v15) = (uint64_t)v17;
    v18 = a3[7];
    v19 = a3[8];
    v20 = *(void **)((char *)a2 + v18);
    *(uint64_t *)((char *)v4 + v18) = (uint64_t)v20;
    v21 = (uint64_t *)((char *)v4 + v19);
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v22[3];
    v21[2] = v22[2];
    v21[3] = v24;
    v25 = v22[5];
    v21[4] = v22[4];
    v21[5] = v25;
    v26 = v22[6];
    v27 = v22[7];
    v21[6] = v26;
    v21[7] = v27;
    v29 = v22[8];
    v28 = v22[9];
    v21[8] = v29;
    v21[9] = v28;
    v30 = v22[10];
    v35 = v29;
    v36 = v22[11];
    v21[10] = v30;
    v21[11] = v36;
    v12 = v22[13];
    v37 = v22[12];
    v21[12] = v37;
    v21[13] = v12;
    v31 = v16;
    v32 = v17;
    v33 = v20;
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v25);
    swift_retain(v26);
    swift_retain(v27);
    swift_retain(v35);
    swift_retain(v30);
    swift_retain(v36);
    swift_retain(v37);
  }
  swift_retain(v12);
  return v4;
}

double sub_1003C98F4(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell **v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  double result;

  v4 = sub_100047110(&qword_1008302D8);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }

  v6 = (CHWorkoutDetailHeartRateTableViewCell **)((char *)a1 + a2[8]);
  swift_bridgeObjectRelease(v6[1], v7, v8, v9, v10, v11, v12, v13);
  swift_bridgeObjectRelease(v6[3], v14, v15, v16, v17, v18, v19, v20);
  swift_bridgeObjectRelease(v6[5], v21, v22, v23, v24, v25, v26, v27);
  swift_release(v6[6]);
  swift_release(v6[7]);
  swift_release(v6[8]);
  swift_release(v6[10]);
  swift_release(v6[11]);
  swift_release(v6[12]);
  *(_QWORD *)&result = swift_release(v6[13]).n128_u64[0];
  return result;
}

uint64_t *sub_1003C99D4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_100047110(&qword_1008302D8);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = a3[6];
  v14 = *(void **)((char *)a2 + v12);
  *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
  v15 = *(void **)((char *)a2 + v13);
  *(uint64_t *)((char *)a1 + v13) = (uint64_t)v15;
  v16 = a3[7];
  v17 = a3[8];
  v18 = *(void **)((char *)a2 + v16);
  *(uint64_t *)((char *)a1 + v16) = (uint64_t)v18;
  v19 = (uint64_t *)((char *)a1 + v17);
  v20 = (uint64_t *)((char *)a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = v20[3];
  v19[2] = v20[2];
  v19[3] = v22;
  v23 = v20[5];
  v19[4] = v20[4];
  v19[5] = v23;
  v24 = v20[6];
  v25 = v20[7];
  v19[6] = v24;
  v19[7] = v25;
  v27 = v20[8];
  v26 = v20[9];
  v19[8] = v27;
  v19[9] = v26;
  v28 = v20[10];
  v33 = v20[11];
  v19[10] = v28;
  v19[11] = v33;
  v34 = v20[12];
  v35 = v20[13];
  v19[12] = v34;
  v19[13] = v35;
  v29 = v14;
  v30 = v15;
  v31 = v18;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v23);
  swift_retain(v24);
  swift_retain(v25);
  swift_retain(v27);
  swift_retain(v28);
  swift_retain(v33);
  swift_retain(v34);
  swift_retain(v35);
  return a1;
}

uint64_t *sub_1003C9B58(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008302D8);
    v6 = sub_100047110(&qword_1008302D8);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = *(void **)((char *)a2 + v12);
  v14 = *(void **)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
  v15 = v13;

  v16 = a3[6];
  v17 = *(void **)((char *)a2 + v16);
  v18 = *(void **)((char *)a1 + v16);
  *(uint64_t *)((char *)a1 + v16) = (uint64_t)v17;
  v19 = v17;

  v20 = a3[7];
  v21 = *(void **)((char *)a1 + v20);
  v22 = *(void **)((char *)a2 + v20);
  *(uint64_t *)((char *)a1 + v20) = (uint64_t)v22;
  v23 = v22;

  v24 = a3[8];
  v25 = (uint64_t *)((char *)a1 + v24);
  v26 = (uint64_t *)((char *)a2 + v24);
  *v25 = *(uint64_t *)((char *)a2 + v24);
  v27 = *(uint64_t *)((char *)a2 + v24 + 8);
  v28 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)a1 + v24 + 8);
  v25[1] = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28, v29, v30, v31, v32, v33, v34, v35);
  v25[2] = v26[2];
  v36 = v26[3];
  v37 = (CHWorkoutDetailHeartRateTableViewCell *)v25[3];
  v25[3] = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v37, v38, v39, v40, v41, v42, v43, v44);
  v25[4] = v26[4];
  v45 = v26[5];
  v46 = (CHWorkoutDetailHeartRateTableViewCell *)v25[5];
  v25[5] = v45;
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRelease(v46, v47, v48, v49, v50, v51, v52, v53);
  v54 = v26[6];
  v55 = v25[6];
  v25[6] = v54;
  swift_retain(v54);
  swift_release(v55);
  v56 = v26[7];
  v57 = v25[7];
  v25[7] = v56;
  swift_retain(v56);
  swift_release(v57);
  v58 = v26[8];
  v59 = v25[8];
  v25[8] = v58;
  swift_retain(v58);
  swift_release(v59);
  v25[9] = v26[9];
  v60 = v26[10];
  v61 = v25[10];
  v25[10] = v60;
  swift_retain(v60);
  swift_release(v61);
  v62 = v26[11];
  v63 = v25[11];
  v25[11] = v62;
  swift_retain(v62);
  swift_release(v63);
  v64 = v26[12];
  v65 = v25[12];
  v25[12] = v64;
  swift_retain(v64);
  swift_release(v65);
  v66 = v26[13];
  v67 = v25[13];
  v25[13] = v66;
  swift_retain(v66);
  swift_release(v67);
  return a1;
}

char *sub_1003C9D74(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v6 = sub_100047110(&qword_1008302D8);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  v9 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_OWORD *)v11 + 5);
  *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
  *((_OWORD *)v10 + 5) = v12;
  *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
  v13 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v13;
  v14 = *((_OWORD *)v11 + 3);
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  *((_OWORD *)v10 + 3) = v14;
  return a1;
}

char *sub_1003C9E58(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008302D8);
    v6 = sub_100047110(&qword_1008302D8);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = *(void **)&a1[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];

  v10 = a3[6];
  v11 = *(void **)&a1[v10];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];

  v12 = a3[7];
  v13 = *(void **)&a1[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];

  v14 = a3[8];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *((_QWORD *)v16 + 1);
  v18 = *(CHWorkoutDetailHeartRateTableViewCell **)&a1[v14 + 8];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRelease(v18, v19, v20, v21, v22, v23, v24, v25);
  v26 = *((_QWORD *)v16 + 3);
  v27 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v15 + 3);
  *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
  *((_QWORD *)v15 + 3) = v26;
  swift_bridgeObjectRelease(v27, v28, v29, v30, v31, v32, v33, v34);
  v35 = *((_QWORD *)v16 + 5);
  v36 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v15 + 5);
  *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  *((_QWORD *)v15 + 5) = v35;
  swift_bridgeObjectRelease(v36, v37, v38, v39, v40, v41, v42, v43);
  v44 = *((_QWORD *)v15 + 6);
  *((_QWORD *)v15 + 6) = *((_QWORD *)v16 + 6);
  swift_release(v44);
  v45 = *((_QWORD *)v15 + 7);
  *((_QWORD *)v15 + 7) = *((_QWORD *)v16 + 7);
  swift_release(v45);
  v46 = *((_QWORD *)v15 + 8);
  *((_QWORD *)v15 + 8) = *((_QWORD *)v16 + 8);
  swift_release(v46);
  v47 = *((_QWORD *)v16 + 10);
  v48 = *((_QWORD *)v15 + 10);
  *((_QWORD *)v15 + 9) = *((_QWORD *)v16 + 9);
  *((_QWORD *)v15 + 10) = v47;
  swift_release(v48);
  v49 = *((_QWORD *)v15 + 11);
  *((_QWORD *)v15 + 11) = *((_QWORD *)v16 + 11);
  swift_release(v49);
  v50 = *((_QWORD *)v15 + 12);
  *((_QWORD *)v15 + 12) = *((_QWORD *)v16 + 12);
  swift_release(v50);
  v51 = *((_QWORD *)v15 + 13);
  *((_QWORD *)v15 + 13) = *((_QWORD *)v16 + 13);
  swift_release(v51);
  return a1;
}

uint64_t sub_1003C9FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CA000);
}

uint64_t sub_1003CA000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100047110(&qword_100831880);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1003CA080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CA08C);
}

uint64_t sub_1003CA08C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100047110(&qword_100831880);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WorkoutStatView(uint64_t a1)
{
  uint64_t result;

  result = qword_1008318E0;
  if (!qword_1008318E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutStatView);
  return result;
}

void sub_1003CA144(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_1003CA1D0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = "\b";
    v4[4] = &unk_10063A200;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

void sub_1003CA1D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1008318F0)
  {
    v2 = type metadata accessor for OpenURLAction(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1008318F0);
  }
}

uint64_t sub_1003CA224(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B63F0, 1);
}

id sub_1003CA234@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id result;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  char v26;
  char *v27;
  id v28;
  uint64_t v29;
  char v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = v1;
  v41 = a1;
  v3 = sub_100047110(&qword_100831930);
  __chkstk_darwin(v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100047110(&qword_100831938);
  __chkstk_darwin(v38);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100831940);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100831948);
  v39 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WorkoutStatView(0);
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void **)(v2 + *(int *)(v18 + 28));
  if (v19)
  {
    v20 = objc_msgSend(v19, "fiui_activityType", v15);
    sub_1003CB6A0(v2, (uint64_t)v17);
    if (v20)
      goto LABEL_6;
  }
  else
  {
    sub_1003CB6A0(v2, (uint64_t)v17);
  }
  result = objc_msgSend(*(id *)&v17[*(int *)(v14 + 24)], "fiui_activityType");
  v20 = result;
  if (!result)
  {
    __break(1u);
    return result;
  }
LABEL_6:
  sub_1003CB6E4((uint64_t)v17);
  v22 = FIUIPaceFormatForWorkoutActivityType(v20);
  *(_QWORD *)v5 = static HorizontalAlignment.leading.getter(v22);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v23 = (uint64_t)&v5[*(int *)(sub_100047110(&qword_100831950) + 44)];
  if (v22 == 4)
    v24 = 8;
  else
    v24 = 3;
  sub_1003CA598(v2, v24, v23);
  v26 = static Edge.Set.all.getter(v25);
  sub_100021CC0((uint64_t)v5, (uint64_t)v7, &qword_100831930);
  v27 = &v7[*(int *)(v38 + 36)];
  *v27 = v26;
  *(_OWORD *)(v27 + 8) = 0u;
  *(_OWORD *)(v27 + 24) = 0u;
  v27[40] = 1;
  sub_10001BE90((uint64_t)v5, &qword_100831930);
  v28 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v29 = Color.init(_:)(v28);
  v30 = static Edge.Set.all.getter(v29);
  sub_100021CC0((uint64_t)v7, (uint64_t)v10, &qword_100831938);
  v31 = &v10[*(int *)(v8 + 36)];
  *(_QWORD *)v31 = v29;
  v31[8] = v30;
  sub_10001BE90((uint64_t)v7, &qword_100831938);
  v32 = sub_1003CB720();
  View.cornerRadius(_:corners:)(-1, v8, v32, 8.0);
  v33 = sub_10001BE90((uint64_t)v10, &qword_100831940);
  LOBYTE(v29) = static Edge.Set.all.getter(v33);
  v35 = v39;
  v34 = v40;
  v36 = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v41, v13, v40);

  v37 = v36 + *(int *)(sub_100047110(&qword_100831970) + 36);
  *(_BYTE *)v37 = v29;
  *(_OWORD *)(v37 + 8) = 0u;
  *(_OWORD *)(v37 + 24) = 0u;
  *(_BYTE *)(v37 + 40) = 1;
  return (id)(*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v13, v34);
}

void sub_1003CA598(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  uint64_t v34;
  uint64_t v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  int v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _OWORD v65[9];
  __int128 v66;
  __int128 v67;
  _BYTE v68[32];
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;

  v6 = sub_100047110(&qword_100831978);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - v10;
  v12 = sub_100047110(&qword_100831980);
  __chkstk_darwin(v12);
  v43 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - v15;
  v55 = static VerticalAlignment.center.getter(v17);
  sub_1003CA950(a1, (uint64_t)&v66);
  v45 = *((_QWORD *)&v66 + 1);
  v46 = v66;
  v44 = v67;
  v47 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)&v67 + 1);
  v54 = v68[0];
  v53 = *(_OWORD *)&v68[8];
  v51 = v69;
  v52 = *(_QWORD *)&v68[24];
  v50 = BYTE8(v69);
  v49 = v70;
  v48 = BYTE8(v70);
  *(_QWORD *)v16 = static Alignment.bottomLeading.getter();
  *((_QWORD *)v16 + 1) = v18;
  *((_QWORD *)v16 + 2) = 0x4034000000000000;
  v16[24] = 0;
  *((_QWORD *)v16 + 4) = 0;
  v16[40] = 1;
  v19 = (uint64_t)&v16[*(int *)(sub_100047110(&qword_100831988) + 44)];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  sub_1003CAA9C(a1, a2, (uint64_t)&v11[*(int *)(v6 + 36)]);
  *(_QWORD *)&v66 = 0;
  BYTE8(v66) = 1;
  sub_1003CAD9C(a2, (uint64_t)&v67);
  v62 = v71;
  v63 = v72;
  v64 = v73;
  v58 = *(_OWORD *)v68;
  v59 = *(_OWORD *)&v68[16];
  v60 = v69;
  v61 = v70;
  v56 = v66;
  v57 = v67;
  sub_100021CC0((uint64_t)v11, (uint64_t)v8, &qword_100831978);
  sub_100021CC0((uint64_t)v8, v19, &qword_100831978);
  v20 = *(int *)(sub_100047110(&qword_100831990) + 48);
  v21 = v63;
  v65[6] = v62;
  v65[7] = v63;
  v22 = v64;
  v65[8] = v64;
  v24 = v60;
  v23 = v61;
  v65[4] = v60;
  v65[5] = v61;
  v25 = v58;
  v26 = v59;
  v65[2] = v58;
  v65[3] = v59;
  v28 = v56;
  v27 = v57;
  v65[0] = v56;
  v65[1] = v57;
  v29 = (_OWORD *)(v19 + v20);
  v29[6] = v62;
  v29[7] = v21;
  v29[8] = v22;
  v29[2] = v25;
  v29[3] = v26;
  v29[4] = v24;
  v29[5] = v23;
  *v29 = v28;
  v29[1] = v27;
  sub_1003CB828((uint64_t)v65);
  sub_10001BE90((uint64_t)v11, &qword_100831978);
  v71 = v62;
  v72 = v63;
  v73 = v64;
  *(_OWORD *)v68 = v58;
  *(_OWORD *)&v68[16] = v59;
  v69 = v60;
  v70 = v61;
  v66 = v56;
  v67 = v57;
  sub_1003CB900((uint64_t)&v66);
  sub_10001BE90((uint64_t)v8, &qword_100831978);
  v30 = v43;
  sub_100021CC0((uint64_t)v16, v43, &qword_100831980);
  *(_QWORD *)a3 = v55;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  v32 = v45;
  v31 = v46;
  *(_QWORD *)(a3 + 24) = v46;
  *(_QWORD *)(a3 + 32) = v32;
  LOBYTE(v6) = v44;
  *(_BYTE *)(a3 + 40) = v44;
  v33 = v47;
  *(_QWORD *)(a3 + 48) = v47;
  *(_BYTE *)(a3 + 56) = v54;
  *(_OWORD *)(a3 + 64) = v53;
  v34 = v51;
  *(_QWORD *)(a3 + 80) = v52;
  *(_QWORD *)(a3 + 88) = v34;
  *(_BYTE *)(a3 + 96) = v50;
  *(_QWORD *)(a3 + 104) = v49;
  *(_BYTE *)(a3 + 112) = v48;
  v35 = sub_100047110(&qword_100831998);
  sub_100021CC0(v30, a3 + *(int *)(v35 + 48), &qword_100831980);
  sub_1000E439C(v31, v32, v6);
  swift_bridgeObjectRetain(v33);
  sub_10001BE90((uint64_t)v16, &qword_100831980);
  sub_10001BE90(v30, &qword_100831980);
  sub_1000E4458(v31, v32, v6);
  swift_bridgeObjectRelease(v33, v36, v37, v38, v39, v40, v41, v42);
}

void sub_1003CA950(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  _QWORD v41[2];

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for WorkoutStatView(0) + 32));
  v4 = v3[1];
  v41[0] = *v3;
  v41[1] = v4;
  v5 = sub_100038CA0();
  swift_bridgeObjectRetain(v4);
  v6 = Text.init<A>(_:)(v41, &type metadata for String, v5);
  v8 = v7;
  v10 = v9;
  v12 = v11 & 1;
  v13 = static Font.headline.getter();
  v15 = Text.font(_:)(v13, v6, v8, v12, v10, v14);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_release(v13);
  sub_1000E4458(v6, v8, v12);
  swift_bridgeObjectRelease(v10, v22, v23, v24, v25, v26, v27, v28);
  LOBYTE(v6) = static Edge.Set.bottom.getter(v29);
  v30 = EdgeInsets.init(_all:)(4.0);
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v17;
  *(_BYTE *)(a2 + 16) = v19 & 1;
  *(_QWORD *)(a2 + 24) = v21;
  *(_BYTE *)(a2 + 32) = v6;
  *(double *)(a2 + 40) = v30;
  *(_QWORD *)(a2 + 48) = v31;
  *(_QWORD *)(a2 + 56) = v32;
  *(_QWORD *)(a2 + 64) = v33;
  *(_BYTE *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0;
  *(_BYTE *)(a2 + 88) = 1;
  sub_1000E439C(v15, v17, v19 & 1);
  swift_bridgeObjectRetain(v21);
  sub_1000E4458(v15, v17, v19 & 1);
  swift_bridgeObjectRelease(v21, v34, v35, v36, v37, v38, v39, v40);
}

uint64_t sub_1003CAA9C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;

  v57 = a2;
  v5 = sub_100047110(&qword_1008319A0);
  __chkstk_darwin(v5);
  v58 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v56 = (uint64_t)&v53 - v8;
  __chkstk_darwin(v9);
  v55 = (uint64_t)&v53 - v10;
  __chkstk_darwin(v11);
  v13 = (char *)&v53 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v53 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v53 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v53 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v53 - v24;
  *(_QWORD *)v25 = static HorizontalAlignment.center.getter(v26, v27, v28, v29, v30);
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = 1;
  v31 = sub_100047110(&qword_1008319A8);
  v32 = sub_1003CB3AC(0, a1, (uint64_t)&v25[*(int *)(v31 + 44)]);
  *(_QWORD *)v22 = static HorizontalAlignment.center.getter(v32, v33, v34, v35, v36);
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 1;
  v37 = sub_1003CB3AC(1, a1, (uint64_t)&v22[*(int *)(v31 + 44)]);
  *(_QWORD *)v19 = static HorizontalAlignment.center.getter(v37, v38, v39, v40, v41);
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  v42 = sub_1003CB3AC(2, a1, (uint64_t)&v19[*(int *)(v31 + 44)]);
  *(_QWORD *)v16 = static HorizontalAlignment.center.getter(v42, v43, v44, v45, v46);
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  sub_1003CB3AC(v57, a1, (uint64_t)&v16[*(int *)(v31 + 44)]);
  v47 = (uint64_t)v13;
  v54 = v13;
  sub_100021CC0((uint64_t)v25, (uint64_t)v13, &qword_1008319A0);
  v48 = v55;
  sub_100021CC0((uint64_t)v22, v55, &qword_1008319A0);
  v49 = v56;
  sub_100021CC0((uint64_t)v19, v56, &qword_1008319A0);
  v50 = v58;
  sub_100021CC0((uint64_t)v16, v58, &qword_1008319A0);
  sub_100021CC0(v47, a3, &qword_1008319A0);
  v51 = (int *)sub_100047110(&qword_1008319B0);
  sub_100021CC0(v48, a3 + v51[12], &qword_1008319A0);
  sub_100021CC0(v49, a3 + v51[16], &qword_1008319A0);
  sub_100021CC0(v50, a3 + v51[20], &qword_1008319A0);
  sub_10001BE90((uint64_t)v16, &qword_1008319A0);
  sub_10001BE90((uint64_t)v19, &qword_1008319A0);
  sub_10001BE90((uint64_t)v22, &qword_1008319A0);
  sub_10001BE90((uint64_t)v25, &qword_1008319A0);
  sub_10001BE90(v50, &qword_1008319A0);
  sub_10001BE90(v49, &qword_1008319A0);
  sub_10001BE90(v48, &qword_1008319A0);
  return sub_10001BE90((uint64_t)v54, &qword_1008319A0);
}

void sub_1003CAD9C(char a1@<W1>, uint64_t a2@<X8>)
{
  char v4;
  uint64_t v5;
  char v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  uint64_t v8;
  char v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  uint64_t v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  uint64_t v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  uint64_t v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  CHWorkoutDetailHeartRateTableViewCell *v56;
  char v57;
  char v58;
  char v59;

  sub_1003CAF9C(0, (uint64_t)&v53);
  v50 = v54;
  v51 = v53;
  v4 = v55;
  v52 = v56;
  sub_1003CAF9C(1, (uint64_t)&v53);
  v5 = v54;
  v49 = v53;
  v6 = v55;
  v7 = v56;
  v44 = v56;
  sub_1003CAF9C(2, (uint64_t)&v53);
  v8 = v53;
  v45 = v54;
  v9 = v55;
  v10 = v56;
  v46 = v56;
  sub_1003CAF9C(a1, (uint64_t)&v53);
  v11 = v53;
  v12 = v54;
  v13 = v55;
  v14 = v56;
  v47 = v53;
  v48 = v56;
  LOBYTE(v53) = v4;
  v59 = v6;
  v58 = v9;
  v57 = v55;
  *(_QWORD *)a2 = v51;
  *(_QWORD *)(a2 + 8) = v50;
  *(_BYTE *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v52;
  *(_QWORD *)(a2 + 32) = v49;
  *(_QWORD *)(a2 + 40) = v5;
  *(_BYTE *)(a2 + 48) = v6;
  *(_QWORD *)(a2 + 56) = v7;
  *(_QWORD *)(a2 + 64) = v8;
  *(_QWORD *)(a2 + 72) = v45;
  *(_BYTE *)(a2 + 80) = v9;
  *(_QWORD *)(a2 + 88) = v10;
  *(_QWORD *)(a2 + 96) = v11;
  *(_QWORD *)(a2 + 104) = v12;
  v15 = v12;
  *(_BYTE *)(a2 + 112) = v13;
  *(_QWORD *)(a2 + 120) = v14;
  sub_1000E439C(v51, v50, v4);
  swift_bridgeObjectRetain(v52);
  sub_1000E439C(v49, v5, v6);
  swift_bridgeObjectRetain(v44);
  sub_1000E439C(v8, v45, v9);
  swift_bridgeObjectRetain(v46);
  sub_1000E439C(v47, v15, v13);
  swift_bridgeObjectRetain(v48);
  sub_1000E4458(v47, v15, v13);
  swift_bridgeObjectRelease(v48, v16, v17, v18, v19, v20, v21, v22);
  sub_1000E4458(v8, v45, v9);
  swift_bridgeObjectRelease(v46, v23, v24, v25, v26, v27, v28, v29);
  sub_1000E4458(v49, v5, v6);
  swift_bridgeObjectRelease(v44, v30, v31, v32, v33, v34, v35, v36);
  sub_1000E4458(v51, v50, v4);
  swift_bridgeObjectRelease(v52, v37, v38, v39, v40, v41, v42, v43);
}

void sub_1003CAF9C(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  char v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  __int128 *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  int *v76;
  __int128 *v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  CHWorkoutDetailHeartRateTableViewCell *v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  CHWorkoutDetailHeartRateTableViewCell *v96;
  SEL v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  CHWorkoutDetailHeartRateTableViewCell *v109;
  __n128 v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  SEL v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  CHWorkoutDetailHeartRateTableViewCell *v126;
  _QWORD v127[4];
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;

  v3 = v2;
  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v121 - v11;
  v13 = sub_1001A561C(a1);
  v21 = v14;
  if (v13 == 0x72656B72616DLL && v14 == (CHWorkoutDetailHeartRateTableViewCell *)0xE600000000000000)
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE600000000000000, (SEL)0xE600000000000000, v15, v16, v17, v18, v19, v20);
LABEL_5:
    v30 = (__int128 *)(v3 + *(int *)(type metadata accessor for WorkoutStatView(0) + 32));
    v31 = v30[5];
    v132 = v30[4];
    v133 = v31;
    v134 = v30[6];
    v32 = v30[3];
    v130 = v30[2];
    v131 = v32;
    v33 = v30[1];
    v128 = *v30;
    v129 = v33;
    v127[0] = sub_10024FDFC();
    v127[1] = v34;
    v35 = sub_100038CA0();
    v36 = Text.init<A>(_:)(v127, &type metadata for String, v35);
    v38 = v37;
    v40 = v39;
    v42 = v41 & 1;
    sub_1001A5D38(a1);
    v44 = v43;
    v45 = Text.foregroundColor(_:)(v43, v36, v38, v42, v40);
    v47 = v46;
    v49 = v48;
    v51 = v50;
    swift_release(v44);
    sub_1000E4458(v36, v38, v42);
    swift_bridgeObjectRelease(v40, v52, v53, v54, v55, v56, v57, v58);
    if (qword_10081D680 != -1)
      swift_once(&qword_10081D680, sub_1001A5284);
    v59 = Font.init(_:)((id)qword_100869FF0);
    v60 = v49 & 1;
    v62 = Text.font(_:)(v59, v45, v47, v60, v51, v61);
    v64 = v63;
    v66 = v65;
    v68 = v67;
    swift_release(v59);
    sub_1000E4458(v45, v47, v60);
    swift_bridgeObjectRelease(v51, v69, v70, v71, v72, v73, v74, v75);
    goto LABEL_11;
  }
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, 0x72656B72616DLL, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v21, v23, v24, v25, v26, v27, v28, v29);
  if ((v22 & 1) != 0)
    goto LABEL_5;
  v123 = a2;
  v76 = (int *)type metadata accessor for WorkoutStatView(0);
  v77 = (__int128 *)(v3 + v76[8]);
  v78 = v77[5];
  v132 = v77[4];
  v133 = v78;
  v134 = v77[6];
  v79 = v77[3];
  v130 = v77[2];
  v131 = v79;
  v80 = v77[1];
  v128 = *v77;
  v129 = v80;
  v81 = sub_10024FF48();
  sub_1001A601C(v81, *(void **)(v3 + v76[6]), *(void **)(v3 + v76[7]), *(_QWORD *)(v3 + v76[5]), a1, (uint64_t)v12);
  v82 = swift_release(v81);
  (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v9, v12, v6, v82);
  v83 = Text.init(_:)(v9);
  v125 = v6;
  v85 = v84;
  v87 = v86;
  v89 = v88 & 1;
  sub_1001A5D38(a1);
  v91 = v90;
  v92 = Text.foregroundColor(_:)(v90, v83, v85, v89, v87);
  v124 = v93;
  v95 = v94;
  v126 = v96;
  swift_release(v91);
  sub_1000E4458(v83, v85, v89);
  swift_bridgeObjectRelease(v87, v97, v98, v99, v100, v101, v102, v103);
  v122 = v7;
  if (qword_10081D688 != -1)
    swift_once(&qword_10081D688, sub_1001A536C);
  v104 = Font.init(_:)((id)qword_100869FF8);
  v105 = v95 & 1;
  v106 = v92;
  v107 = v124;
  v108 = v92;
  v109 = v126;
  v62 = Text.font(_:)(v104, v106, v124, v105, v126, v110);
  v64 = v111;
  v66 = v112;
  v68 = v113;
  swift_release(v104);
  sub_1000E4458(v108, v107, v105);
  swift_bridgeObjectRelease(v109, v114, v115, v116, v117, v118, v119, v120);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v12, v125);
  a2 = v123;
LABEL_11:
  *(_QWORD *)a2 = v62;
  *(_QWORD *)(a2 + 8) = v64;
  *(_BYTE *)(a2 + 16) = v66 & 1;
  *(_QWORD *)(a2 + 24) = v68;
}

uint64_t sub_1003CB3AC@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  char *v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;

  v66 = a3;
  v5 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_1008319B8);
  v64 = *(_QWORD *)(v8 - 8);
  v65 = v8;
  __chkstk_darwin(v8);
  v63 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100047110(&qword_1008319C0);
  __chkstk_darwin(v62);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WorkoutStatView(0);
  sub_1001A5750(*(_QWORD *)(a2 + *(int *)(v12 + 20)), a1);
  v13 = Text.init(_:)(v7);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  if (qword_10081D678 != -1)
    swift_once(&qword_10081D678, sub_1001A5270);
  v20 = v17 & 1;
  v21 = Font.init(_:)((id)qword_100869FE8);
  v23 = Text.font(_:)(v21, v13, v15, v20, v19, v22);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  swift_release(v21);
  v27 &= 1u;
  sub_1000E4458(v13, v15, v20);
  swift_bridgeObjectRelease(v19, v30, v31, v32, v33, v34, v35, v36);
  v67 = v23;
  v68 = v25;
  v69 = v27;
  v70 = v29;
  v37 = v63;
  View.hyphenationFactor(_:)(&type metadata for Text, &protocol witness table for Text, 0.1);
  sub_1000E4458(v23, v25, v27);
  swift_bridgeObjectRelease(v29, v38, v39, v40, v41, v42, v43, v44);
  v45 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v46 = Color.init(_:)(v45);
  KeyPath = swift_getKeyPath(&unk_10063A268);
  v49 = v64;
  v48 = v65;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v11, v37, v65);
  v50 = (uint64_t *)&v11[*(int *)(v62 + 36)];
  *v50 = KeyPath;
  v50[1] = v46;
  v51 = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v37, v48);
  LOBYTE(v46) = static Edge.Set.trailing.getter(v51);
  v52 = EdgeInsets.init(_all:)(8.0);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v59 = v66;
  sub_100021CC0((uint64_t)v11, v66, &qword_1008319C0);
  v60 = v59 + *(int *)(sub_100047110(&qword_1008319C8) + 36);
  *(_BYTE *)v60 = v46;
  *(double *)(v60 + 8) = v52;
  *(_QWORD *)(v60 + 16) = v54;
  *(_QWORD *)(v60 + 24) = v56;
  *(_QWORD *)(v60 + 32) = v58;
  *(_BYTE *)(v60 + 40) = 0;
  return sub_10001BE90((uint64_t)v11, &qword_1008319C0);
}

uint64_t sub_1003CB6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutStatView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003CB6E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutStatView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003CB720()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100831958;
  if (!qword_100831958)
  {
    v1 = sub_100007050(&qword_100831940);
    sub_1003CB7A4();
    sub_100028384(&qword_1008237F0, &qword_1008237F8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100831958);
  }
  return result;
}

unint64_t sub_1003CB7A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100831960;
  if (!qword_100831960)
  {
    v1 = sub_100007050(&qword_100831938);
    sub_100028384(&qword_100831968, &qword_100831930, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100831960);
  }
  return result;
}

uint64_t sub_1003CB828(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_BYTE *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 88);
  v9 = *(_BYTE *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 120);
  v14 = *(_QWORD *)(a1 + 112);
  v12 = *(_BYTE *)(a1 + 128);
  v15 = *(_QWORD *)(a1 + 136);
  sub_1000E439C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_bridgeObjectRetain(v2);
  sub_1000E439C(v3, v4, v5);
  swift_bridgeObjectRetain(v6);
  sub_1000E439C(v7, v8, v9);
  swift_bridgeObjectRetain(v10);
  sub_1000E439C(v14, v13, v12);
  swift_bridgeObjectRetain(v15);
  return a1;
}

uint64_t sub_1003CB900(uint64_t a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  char v40;
  uint64_t v41;
  uint64_t v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;

  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_BYTE *)(a1 + 64);
  v6 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 88);
  v9 = *(_BYTE *)(a1 + 96);
  v10 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 104);
  v41 = *(_QWORD *)(a1 + 120);
  v42 = *(_QWORD *)(a1 + 112);
  v40 = *(_BYTE *)(a1 + 128);
  v43 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 136);
  sub_1000E4458(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_bridgeObjectRelease(v2, v11, v12, v13, v14, v15, v16, v17);
  sub_1000E4458(v3, v4, v5);
  swift_bridgeObjectRelease(v6, v18, v19, v20, v21, v22, v23, v24);
  sub_1000E4458(v7, v8, v9);
  swift_bridgeObjectRelease(v10, v25, v26, v27, v28, v29, v30, v31);
  sub_1000E4458(v42, v41, v40);
  swift_bridgeObjectRelease(v43, v32, v33, v34, v35, v36, v37, v38);
  return a1;
}

unint64_t sub_1003CB9E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1008319D0;
  if (!qword_1008319D0)
  {
    v1 = sub_100007050(&qword_100831970);
    v2[0] = sub_100007050(&qword_100831940);
    v2[1] = sub_1003CB720();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.cornerRadius(_:corners:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008319D0);
  }
  return result;
}

uint64_t sub_1003CBA78(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;

  v2 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
  if (!((unint64_t)a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(a1);
    return (uint64_t)v2;
  }
  if (a1 < 0)
    v8 = a1;
  else
    v8 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v3 = result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v6 = *(id *)(a1 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v2, "appendAttributedString:", v6);

    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_1003CBB74(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  NSString v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  NSString v17;
  id v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  NSString v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  NSString v34;
  id v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  NSString v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  NSString v54;
  id v55;
  CHWorkoutDetailHeartRateTableViewCell *v56;
  CHWorkoutDetailHeartRateTableViewCell *v57;
  id v58;
  NSString v59;
  id v60;
  const char *v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  NSString v69;
  SEL v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  void *v79;
  NSString v80;
  id v81;
  CHWorkoutDetailHeartRateTableViewCell *v82;
  CHWorkoutDetailHeartRateTableViewCell *v83;
  NSString v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  NSString v92;
  void *v93;
  id v94;
  void *v95;
  id v99;

  v5 = v4;
  if (qword_10081D678 != -1)
    swift_once(&qword_10081D678, sub_1001A5270);
  v7 = (void *)UILabel.withFont(_:)(qword_100869FE8);
  v8 = (void *)objc_opt_self(UIColor);
  v9 = objc_msgSend(v8, "secondaryLabelColor");
  v10 = (void *)UILabel.withTextColor(_:)(v9);

  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setText:", v11);

  v12 = (void *)UILabel.withFont(_:)(qword_100869FE8);
  v99 = v8;
  v13 = objc_msgSend(v8, "secondaryLabelColor");
  v14 = (void *)UILabel.withTextColor(_:)(v13);

  v15 = (void *)objc_opt_self(NSBundle);
  v16 = objc_msgSend(v15, "mainBundle");
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v20 = v19;

  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setText:", v21);

  swift_bridgeObjectRelease(v20, v22, v23, v24, v25, v26, v27, v28);
  FIUIPaceFormatForWorkoutActivityType(a2);
  if (objc_msgSend(a4, "supportsDistanceForWorkout:workoutActivity:", a1, 0))
  {
    v29 = v5;
    v30 = (void *)UILabel.withFont(_:)(qword_100869FE8);
    v31 = objc_msgSend(v8, "secondaryLabelColor");
    v32 = (void *)UILabel.withTextColor(_:)(v31);

    v33 = objc_msgSend(v15, "mainBundle");
    v34 = String._bridgeToObjectiveC()();
    v35 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v37 = v36;

    v38 = String._bridgeToObjectiveC()();
    objc_msgSend(v32, "setText:", v38);

    swift_bridgeObjectRelease(v37, v39, v40, v41, v42, v43, v44, v45);
    v46 = (void *)UILabel.withFont(_:)(qword_100869FE8);
    v47 = objc_msgSend(v8, "secondaryLabelColor");
    v48 = (void *)UILabel.withTextColor(_:)(v47);

    v49 = objc_msgSend(v15, "mainBundle");
    v80 = String._bridgeToObjectiveC()();
    v81 = objc_msgSend(v49, "localizedStringForKey:value:table:", v80, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
    v83 = v82;

    v84 = String._bridgeToObjectiveC()();
    objc_msgSend(v48, "setText:", v84);

    swift_bridgeObjectRelease(v83, v85, v86, v87, v88, v89, v90, v91);
LABEL_9:

    objc_msgSend(*(id *)(v29 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView), "setHidden:", 1);
    sub_1001BB604();
    return;
  }
  v50 = (void *)UILabel.withFont(_:)(qword_100869FE8);
  v51 = objc_msgSend(v8, "secondaryLabelColor");
  v52 = (void *)UILabel.withTextColor(_:)(v51);

  if (a3 != 1)
  {
    v92 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "setText:", v92);

    v93 = (void *)UILabel.withFont(_:)(qword_100869FE8);
    v94 = objc_msgSend(v8, "secondaryLabelColor");
    v95 = (void *)UILabel.withTextColor(_:)(v94);

    v84 = String._bridgeToObjectiveC()();
    objc_msgSend(v95, "setText:", v84);

    v29 = v5;
    goto LABEL_9;
  }
  v29 = v5;
  v53 = objc_msgSend(a4, "fitnessUIFormattingManager");
  v54 = String._bridgeToObjectiveC()();
  v55 = objc_msgSend(v53, "localizationKeyForEnergyBaseKey:", v54);

  if (v55)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
    v57 = v56;

    v58 = objc_msgSend(v15, "mainBundle");
    v59 = String._bridgeToObjectiveC()();
    v60 = objc_msgSend(v58, "localizedStringForKey:value:table:", v59, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    v62 = (CHWorkoutDetailHeartRateTableViewCell *)v61;
    swift_bridgeObjectRelease(v57, v61, v63, v64, v65, v66, v67, v68);

    v69 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "setText:", v69);

    swift_bridgeObjectRelease(v62, v70, v71, v72, v73, v74, v75, v76);
    v77 = (void *)UILabel.withFont(_:)(qword_100869FE8);
    v78 = objc_msgSend(v99, "secondaryLabelColor");
    v79 = (void *)UILabel.withTextColor(_:)(v78);

    v84 = String._bridgeToObjectiveC()();
    objc_msgSend(v79, "setText:", v84);

    goto LABEL_9;
  }
  __break(1u);
}

void sub_1003CC328(void *a1, uint64_t a2, void *a3, void *a4, void *a5, char a6, void *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  id v20;
  void *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  uint64_t v23;
  void *v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  unsigned int (**v43)(_QWORD, _QWORD, _QWORD);
  void *v44;
  id v45;
  id v46;
  id v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  void *v50;
  NSString v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  char v59;
  id v60;
  id v61;
  void *v62;
  uint64_t v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  CHWorkoutDetailHeartRateTableViewCell *v65;
  id v66;
  const char *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  uint64_t v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  CHWorkoutDetailHeartRateTableViewCell *v77;
  id v78;
  NSString v79;
  id v80;
  uint64_t v81;
  CHWorkoutDetailHeartRateTableViewCell *v82;
  CHWorkoutDetailHeartRateTableViewCell *v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  const char *v88;
  const char *v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t inited;
  id v99;
  void *v100;
  id v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  NSString v106;
  char *v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  id v113;
  uint64_t v114;
  void *v115;
  id v116;
  id v117;
  uint64_t v118;
  CHWorkoutDetailHeartRateTableViewCell *v119;
  CHWorkoutDetailHeartRateTableViewCell *v120;
  SEL v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  uint64_t v128;
  id v129;
  id v130;
  void *v131;
  id v132;
  double v133;
  double v134;
  id v135;
  void *v136;
  id v137;
  id v138;
  void *v139;
  CHWorkoutDetailHeartRateTableViewCell *v140;
  CHWorkoutDetailHeartRateTableViewCell *v141;
  void *v142;
  id v143;
  void *v144;
  uint64_t v145;
  CHWorkoutDetailHeartRateTableViewCell *v146;
  CHWorkoutDetailHeartRateTableViewCell *v147;
  id v148;
  id v149;
  NSString v150;
  id v151;
  CHWorkoutDetailHeartRateTableViewCell *v152;
  CHWorkoutDetailHeartRateTableViewCell *v153;
  id v154;
  uint64_t v155;
  id v156;
  CHWorkoutDetailHeartRateTableViewCell *v157;
  id v158;
  NSString v159;
  void *v160;
  SEL v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  NSDictionary v168;
  Class isa;
  SEL v170;
  id v171;
  id v172;
  id v173;
  id v174;
  id v175;
  id v176;
  id v177;
  SEL v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  id v184;
  id v185;
  NSString v186;
  id v187;
  CHWorkoutDetailHeartRateTableViewCell *v188;
  CHWorkoutDetailHeartRateTableViewCell *v189;
  id v190;
  uint64_t v191;
  NSString *v192;
  NSString *v193;
  id v194;
  CHWorkoutDetailHeartRateTableViewCell *v195;
  id v196;
  NSString v197;
  SEL v198;
  id v199;
  id v200;
  id v201;
  id v202;
  id v203;
  id v204;
  Class v205;
  SEL v206;
  id v207;
  id v208;
  id v209;
  id v210;
  id v211;
  id v212;
  id v213;
  SEL v214;
  id v215;
  id v216;
  id v217;
  id v218;
  id v219;
  id v220;
  id v221;
  void *v222;
  CHWorkoutDetailHeartRateTableViewCell *v223;
  void *v224;
  uint64_t v225;
  CHWorkoutDetailHeartRateTableViewCell *v226;
  CHWorkoutDetailHeartRateTableViewCell *v227;
  unint64_t v228;
  uint64_t v229;
  const char *v230;
  CHWorkoutDetailHeartRateTableViewCell *v231;
  id v232;
  id v233;
  id v234;
  id v235;
  id v236;
  id v237;
  id v238;
  SEL v239;
  id v240;
  id v241;
  id v242;
  id v243;
  id v244;
  id v245;
  SEL v246;
  id v247;
  id v248;
  id v249;
  id v250;
  id v251;
  id v252;
  id v253;
  NSString v254;
  CHWorkoutDetailHeartRateTableViewCell *v255;
  CHWorkoutDetailHeartRateTableViewCell *v256;
  void *v257;
  SEL v258;
  id v259;
  id v260;
  id v261;
  id v262;
  id v263;
  id v264;
  unint64_t v265;
  CHWorkoutDetailHeartRateTableViewCell *v266;
  void *v267;
  NSString v268;
  SEL v269;
  id v270;
  id v271;
  id v272;
  id v273;
  id v274;
  id v275;
  void *v276;
  id v277;
  void *v278;
  id v279;
  id v280;
  NSString v281;
  SEL v282;
  id v283;
  id v284;
  id v285;
  id v286;
  id v287;
  id v288;
  NSString *v289;
  unint64_t v290;
  __int128 v291;
  uint64_t v292;
  char *v293;
  unsigned int (**v294)(_QWORD, _QWORD, _QWORD);
  uint64_t v295;
  id v296;
  void *v297;
  id v298;
  id v299;
  char *v300;
  uint64_t v301;
  CHWorkoutDetailHeartRateTableViewCell *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char v306[72];

  v296 = a5;
  v297 = a7;
  v298 = a4;
  v295 = a2;
  v10 = type metadata accessor for StepType(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v289 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_10082E2B0);
  __chkstk_darwin(v14);
  v16 = (char *)&v289 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for IntervalWorkoutKeyPath(0);
  v294 = *(unsigned int (***)(_QWORD, _QWORD, _QWORD))(v17 - 8);
  *(_QWORD *)&v18 = __chkstk_darwin(v17).n128_u64[0];
  v293 = (char *)&v289 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend(a3, "metadata", v18);
  v292 = v10;
  v290 = (unint64_t)v13;
  *(_QWORD *)&v291 = v11;
  if (v20)
  {
    v21 = v20;
    v22 = (CHWorkoutDetailHeartRateTableViewCell *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v20, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v22 = 0;
  }
  type metadata accessor for WorkoutConfiguration(0);
  type metadata accessor for WorkoutConfigurationValidator(0);
  v23 = static WorkoutConfigurationValidator.shared.getter();
  v24 = (void *)static WorkoutConfiguration.deserialize(from:validator:)(v22, v23);
  swift_release(v23);
  swift_bridgeObjectRelease(v22, v25, v26, v27, v28, v29, v30, v31);
  if (!v24)
  {
    v299 = 0;
    goto LABEL_12;
  }
  v32 = type metadata accessor for IntervalWorkoutConfiguration(0);
  v299 = (id)swift_dynamicCastClass(v24, v32);
  if (!v299)
  {

    v299 = 0;
    if (a1)
      goto LABEL_13;
LABEL_18:
    sub_1003CBB74((uint64_t)a3, (uint64_t)v298, (uint64_t)v296, v297);

    return;
  }
  v33 = *(void **)&v300[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneWidthAnchorStandard];
  if (v33)
    objc_msgSend(v33, "setActive:", 0);
  v34 = *(void **)&v300[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoWidthAnchorCustom];
  if (!v34)
  {
LABEL_12:
    if (a1)
      goto LABEL_13;
    goto LABEL_18;
  }
  objc_msgSend(v34, "setActive:", 1);
  if (!a1)
    goto LABEL_18;
LABEL_13:
  v35 = a1;
  sub_100255018(a6 & 1);
  if (!v299)
  {
LABEL_20:
    v44 = (void *)objc_opt_self(NSNumberFormatter);
    v45 = objc_allocWithZone((Class)NSNumber);
    v46 = objc_msgSend(v45, "initWithInteger:", v295);
    v47 = objc_msgSend(v44, "localizedStringFromNumber:numberStyle:", v46, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
    v49 = v48;

    v50 = *(void **)&v300[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel];
    v51 = String._bridgeToObjectiveC()();
    objc_msgSend(v50, "setText:", v51);
    swift_bridgeObjectRelease(v49, v52, v53, v54, v55, v56, v57, v58);

    v295 = 0;
    v59 = 1;
    goto LABEL_21;
  }
  v36 = v299;
  v37 = objc_msgSend(v35, "stepKeyPath");
  if (!v37)
  {

    goto LABEL_20;
  }
  v38 = v37;
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v41 = v40;

  IntervalWorkoutKeyPath.init(serializedString:)(v39, v41, v42);
  v43 = v294;
  if (((unsigned int (**)(char *, uint64_t, uint64_t))v294)[6](v16, 1, v17) == 1)
  {

    sub_10030C3C8((uint64_t)v16);
    goto LABEL_20;
  }
  v107 = v293;
  v108 = ((uint64_t (*)(char *, char *, uint64_t))v43[4])(v293, v16, v17);
  v109 = (void *)IntervalWorkoutConfiguration.intervalWorkout.getter(v108);
  v110 = IntervalWorkout.stepForKeyPath(_:)(v107);

  v112 = (void *)WorkoutStep.goal.getter(v111);
  v113 = objc_msgSend(v112, "goalTypeIdentifier");

  if (v113 == (id)1
    && (v115 = (void *)WorkoutStep.goal.getter(v114),
        v116 = objc_msgSend(v115, "value"),
        v115,
        v116)
    && (v117 = objc_msgSend(v116, "_unit"), v116, v117))
  {
    v295 = FIUIDistanceUnitForHKUnit(v117);

    v59 = 0;
  }
  else
  {
    v295 = 0;
    v59 = 1;
  }
  v118 = WorkoutStep.displayName.getter();
  if (v119)
  {
    v120 = v119;
  }
  else
  {
    v265 = v290;
    WorkoutStep.stepType.getter(v118);
    sub_1005785CC();
    v120 = v266;
    (*(void (**)(unint64_t, uint64_t))(v291 + 8))(v265, v292);
  }
  v267 = *(void **)&v300[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel];
  v268 = String._bridgeToObjectiveC()();
  objc_msgSend(v267, "setText:", v268);
  swift_release(v110);

  swift_bridgeObjectRelease(v120, v269, v270, v271, v272, v273, v274, v275);
  ((void (*)(char *, uint64_t))v294[1])(v293, v17);
LABEL_21:
  v60 = objc_msgSend(v297, "fitnessUIFormattingManager");
  v61 = objc_msgSend(v35, "formattedDurationValueWithFormattingManager:", v60);
  if (v61)
  {
    v62 = v61;
    v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
    v65 = v64;

  }
  else
  {
    v63 = 0;
    v65 = 0;
  }
  v66 = objc_msgSend(v35, "formattedDistanceAchievedDurationValueWithFormattingManager:", v60);
  if (v66)
  {
    v74 = v66;
    v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
    v77 = v76;

    if (v65)
    {
      if (v77)
      {
        v294 = (unsigned int (**)(_QWORD, _QWORD, _QWORD))v60;
        v297 = v35;
        v78 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v79 = String._bridgeToObjectiveC()();
        v80 = objc_msgSend(v78, "localizedStringForKey:value:table:", v79, 0, 0);

        v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
        v83 = v82;

        v84 = sub_100047110((uint64_t *)&unk_100827460);
        v85 = swift_allocObject(v84, 72, 7);
        *(_OWORD *)(v85 + 16) = xmmword_100622F90;
        *(_QWORD *)(v85 + 56) = &type metadata for String;
        *(_QWORD *)(v85 + 64) = sub_100038CF8();
        *(_QWORD *)(v85 + 32) = v63;
        *(_QWORD *)(v85 + 40) = v65;
        v87 = String.init(format:_:)(v81, v83, v85, v86);
        v89 = v88;
        swift_bridgeObjectRelease(v83, v88, v90, v91, v92, v93, v94, v95);
        v96 = *(void **)&v300[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel];
        v97 = sub_100047110(&qword_1008248A0);
        inited = swift_initStackObject(v97, &v304);
        *(_OWORD *)(inited + 16) = xmmword_100620BC0;
        *(_QWORD *)(inited + 32) = v75;
        *(_QWORD *)(inited + 40) = v77;
        v99 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "elapsedTimeColors");
        if (v99)
        {
          v100 = v99;
          v101 = objc_msgSend(v99, "nonGradientTextColor");

          if (v101)
          {
            *(_QWORD *)(inited + 48) = v101;
            *(_QWORD *)(inited + 56) = v87;
            *(_QWORD *)(inited + 64) = v89;
            *(_QWORD *)(inited + 72) = objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
            v102 = sub_100437410(inited);
            swift_setDeallocating(inited);
            v103 = *(_QWORD *)(inited + 16);
            v104 = sub_100047110(&qword_1008248A8);
            swift_arrayDestroy(inited + 32, v103, v104);
            objc_msgSend(v96, "setAttributedText:", v102);

            v35 = v297;
            v60 = v294;
            goto LABEL_42;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_77;
      }
      goto LABEL_31;
    }
LABEL_40:
    swift_bridgeObjectRelease(v77, v67, v68, v69, v70, v71, v72, v73);
    v106 = 0;
    v105 = *(void **)&v300[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel];
    goto LABEL_41;
  }
  if (!v65)
  {
    v77 = 0;
    goto LABEL_40;
  }
LABEL_31:
  v105 = *(void **)&v300[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel];
  v106 = String._bridgeToObjectiveC()();
LABEL_41:
  objc_msgSend(v105, "setText:", v106);

  swift_bridgeObjectRelease(v65, v121, v122, v123, v124, v125, v126, v127);
LABEL_42:
  v128 = FIUIDistanceTypeForActivityType(v298);
  v129 = objc_msgSend(v35, "distance");

  if (!v129)
  {
    if (v296 != (id)1)
    {
LABEL_73:

      goto LABEL_74;
    }
    v135 = objc_msgSend(v60, "unitManager");
    if (v135)
    {
      v136 = v135;
      v137 = objc_msgSend(v135, "userActiveEnergyBurnedUnit");

      v138 = objc_msgSend(v35, "formattedActiveEnergyValueForUnit:", v137);
      if (v138)
      {
        v139 = v138;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v138);
        v141 = v140;

      }
      else
      {
        v141 = 0;
      }
      v276 = *(void **)&v300[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel];
      v277 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "energyColors");
      if (v277)
      {
        v278 = v277;
        v279 = objc_msgSend(v277, "nonGradientTextColor");

        objc_msgSend(v276, "setTextColor:", v279);
        v280 = v276;

        if (v141)
          v281 = String._bridgeToObjectiveC()();
        else
          v281 = 0;
        objc_msgSend(v280, "setText:", v281);

        swift_bridgeObjectRelease(v141, v282, v283, v284, v285, v286, v287, v288);
        goto LABEL_73;
      }
      goto LABEL_78;
    }
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v130 = objc_msgSend(v35, "distance");
  if (v130)
  {
    v131 = v130;
    v132 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
    objc_msgSend(v131, "doubleValueForUnit:", v132);
    v134 = v133;

  }
  else
  {
    v134 = 0.0;
  }
  if (floor(v134) <= 0.0)
    goto LABEL_55;
  if ((v59 & 1) == 0)
  {
    v142 = (void *)objc_opt_self(FIUIFormattingManager);
    v143 = objc_msgSend(v60, "localizedStringWithDistanceInMeters:distanceUnit:unitStyle:decimalPrecision:roundingMode:decimalTrimmingMode:", v295, 0, objc_msgSend(v142, "defaultPrecisionForDistanceUnit:", v295), 2, 1, v134);
    if (v143)
    {
      v144 = v143;
      v145 = static String._unconditionallyBridgeFromObjectiveC(_:)(v143);
      v147 = v146;

      v148 = objc_msgSend(v60, "localizedShortUnitStringForDistanceUnit:", v295);
      if (!v148)
      {
        __break(1u);
LABEL_55:
        v296 = *(id *)&v300[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel];
        v298 = (id)objc_opt_self(NSBundle);
        v149 = objc_msgSend(v298, "mainBundle");
        v295 = 0x8000000100688CF0;
        v150 = String._bridgeToObjectiveC()();
        v151 = objc_msgSend(v149, "localizedStringForKey:value:table:", v150, 0, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v151);
        v153 = v152;

        v293 = (char *)objc_opt_self(UIColor);
        v154 = objc_msgSend(v293, "grayColor");
        v292 = sub_100047110((uint64_t *)&unk_10082EDA0);
        v155 = swift_initStackObject(v292, v306);
        v291 = xmmword_100622F90;
        *(_OWORD *)(v155 + 16) = xmmword_100622F90;
        *(_QWORD *)(v155 + 32) = NSForegroundColorAttributeName;
        v290 = sub_10013AD0C();
        *(_QWORD *)(v155 + 64) = v290;
        *(_QWORD *)(v155 + 40) = v154;
        v289 = NSForegroundColorAttributeName;
        v156 = v154;
        v157 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(v155);
        v158 = objc_allocWithZone((Class)NSAttributedString);
        swift_bridgeObjectRetain(v153);
        v159 = String._bridgeToObjectiveC()();
        v297 = v35;
        v160 = v159;
        swift_bridgeObjectRelease(v153, v161, v162, v163, v164, v165, v166, v167);
        type metadata accessor for Key(0);
        sub_100135B1C();
        v168.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
        v294 = (unsigned int (**)(_QWORD, _QWORD, _QWORD))v60;
        isa = v168.super.isa;
        swift_bridgeObjectRelease(v157, v170, v171, v172, v173, v174, v175, v176);
        v177 = objc_msgSend(v158, "initWithString:attributes:", v160, isa);
        swift_bridgeObjectRelease(v153, v178, v179, v180, v181, v182, v183, v184);

        objc_msgSend(v296, "setAttributedText:", v177);
        v300 = *(char **)&v300[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel];
        v185 = objc_msgSend(v298, "mainBundle");
        v186 = String._bridgeToObjectiveC()();
        v187 = objc_msgSend(v185, "localizedStringForKey:value:table:", v186, 0, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v187);
        v189 = v188;

        v190 = objc_msgSend(v293, "grayColor");
        v191 = swift_initStackObject(v292, &v305);
        *(_OWORD *)(v191 + 16) = v291;
        *(_QWORD *)(v191 + 64) = v290;
        v192 = v289;
        *(_QWORD *)(v191 + 32) = v289;
        *(_QWORD *)(v191 + 40) = v190;
        v193 = v192;
        v194 = v190;
        v195 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100038C84(v191);
        v196 = objc_allocWithZone((Class)NSAttributedString);
        swift_bridgeObjectRetain(v189);
        v197 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v189, v198, v199, v200, v201, v202, v203, v204);
        v205 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v195, v206, v207, v208, v209, v210, v211, v212);
        v213 = objc_msgSend(v196, "initWithString:attributes:", v197, v205);
        swift_bridgeObjectRelease(v189, v214, v215, v216, v217, v218, v219, v220);

        objc_msgSend(v300, "setAttributedText:", v213);
LABEL_74:

        return;
      }
      goto LABEL_58;
    }
  }
  v303 = 1;
  v221 = objc_msgSend(v60, "localizedNaturalScaleStringWithDistanceInMeters:distanceType:unitStyle:usedUnit:", v128, 0, &v303, v134);
  if (!v221)
  {
LABEL_61:
    v253 = objc_msgSend(v35, "formattedPaceUsingFormatType:formattingManager:distanceType:", FIUIPaceFormatForWorkoutActivityType(v298), v60, v128);
    v254 = v253;
    if (v253)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v253);
      v256 = v255;

      v257 = *(void **)&v300[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel];
      v254 = String._bridgeToObjectiveC()();
    }
    else
    {
      v256 = 0;
      v257 = *(void **)&v300[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel];
    }
    objc_msgSend(v257, "setText:", v254);
    swift_bridgeObjectRelease(v256, v258, v259, v260, v261, v262, v263, v264);

    goto LABEL_73;
  }
  v222 = v221;
  v145 = static String._unconditionallyBridgeFromObjectiveC(_:)(v221);
  v147 = v223;

  v148 = objc_msgSend(v60, "localizedShortUnitStringForDistanceUnit:", v303);
  if (v148)
  {
LABEL_58:
    v224 = v148;
    v225 = static String._unconditionallyBridgeFromObjectiveC(_:)(v148);
    v227 = v226;

    v301 = v225;
    v302 = v227;
    v228 = sub_100038CA0();
    v229 = StringProtocol.localizedUppercase.getter(&type metadata for String, v228);
    v231 = (CHWorkoutDetailHeartRateTableViewCell *)v230;
    swift_bridgeObjectRelease(v227, v230, v232, v233, v234, v235, v236, v237);
    if (qword_10081D688 != -1)
      swift_once(&qword_10081D688, sub_1001A536C);
    v238 = sub_1000387C4(v145, (uint64_t)v147, v229, (uint64_t)v231, (void *)qword_100869FF8);
    swift_bridgeObjectRelease(v231, v239, v240, v241, v242, v243, v244, v245);
    swift_bridgeObjectRelease(v147, v246, v247, v248, v249, v250, v251, v252);
    objc_msgSend(*(id *)&v300[OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel], "setAttributedText:", v238);

    goto LABEL_61;
  }
LABEL_79:
  __break(1u);
}

id sub_1003CD538()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailFourColumnIntervalTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailFourColumnIntervalTableViewCell()
{
  return objc_opt_self(CHWorkoutDetailFourColumnIntervalTableViewCell);
}

uint64_t static ASFriendListDisplayMode.validDisplayModes(friendListSectionManager:)(void *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[5];
  uint64_t v8;

  v2 = swift_allocObject(&unk_10079CFD8, 24, 7);
  *(_QWORD *)(v2 + 16) = &_swiftEmptyArrayStorage;
  v7[4] = sub_1002C820C;
  v8 = v2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1003B91BC;
  v7[3] = &unk_10079CFF0;
  v3 = _Block_copy(v7);
  v4 = v8;
  swift_retain(v2);
  objc_msgSend(a1, "enumerateValidDisplayModesForFilter:usingBlock:", 0, v3, swift_release(v4).n128_f64[0]);
  _Block_release(v3);
  swift_beginAccess(v2 + 16, v7, 0, 0);
  v5 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain(v5);
  swift_release(v2);
  return v5;
}

uint64_t sub_1003CD688()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003CD6AC(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  _BYTE v10[24];

  v4 = (_QWORD *)(a2 + 16);
  swift_beginAccess(a2 + 16, v10, 33, 0);
  v5 = *(_QWORD **)(a2 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
  *(_QWORD *)(a2 + 16) = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_100141174(0, v5[2] + 1, 1, v5);
    *v4 = v5;
  }
  v8 = v5[2];
  v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    v5 = sub_100141174((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
    *v4 = v5;
  }
  v5[2] = v8 + 1;
  v5[v8 + 4] = a1;
  return swift_endAccess(v10);
}

ValueMetadata *type metadata accessor for MetricDetailBackground()
{
  return &type metadata for MetricDetailBackground;
}

uint64_t sub_1003CD78C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B6490, 1);
}

double sub_1003CD79C@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  double v16;
  double v17;
  double result;
  uint64_t v19;
  __int128 v20;
  __int128 v21;

  v3 = *v1;
  v4 = sub_100047110(&qword_100822188);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100620BC0;
  v6 = Color.opacity(_:)(0.35);
  *(_QWORD *)(v5 + 32) = Gradient.Stop.init(color:location:)(v6, 0.0);
  *(_QWORD *)(v5 + 40) = v7;
  swift_retain(v3);
  *(_QWORD *)(v5 + 48) = Gradient.Stop.init(color:location:)(v8, 0.5);
  *(_QWORD *)(v5 + 56) = v9;
  Gradient.init(stops:)(v5);
  v11 = v10;
  v12 = static UnitPoint.topLeading.getter(v10);
  v14 = v13;
  v16 = static UnitPoint.bottomTrailing.getter(v15);
  LinearGradient.init(gradient:startPoint:endPoint:)(&v19, v11, v12, v14, v16, v17);
  *(_QWORD *)a1 = v19;
  *(_OWORD *)(a1 + 8) = v20;
  *(_OWORD *)(a1 + 24) = v21;
  result = 0.15;
  *(_OWORD *)(a1 + 40) = xmmword_10063A330;
  *(_BYTE *)(a1 + 56) = 0;
  return result;
}

uint64_t sub_1003CD898()
{
  return sub_1000E0A18(&qword_100831A00, &qword_100831A08, (void (*)(void))sub_1003CD8CC);
}

uint64_t sub_1003CD8CC()
{
  return sub_1000E0A18(&qword_100831A10, &qword_100831A18, (void (*)(void))sub_10018294C);
}

unint64_t sub_1003CD8F0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1003CEB38(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1003CD968(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  void *v5;
  NSString v6;
  void *v7;
  id v8;
  NSString v9;
  id v10;

  v4 = *a3;
  v5 = *(void **)(a1 + OBJC_IVAR___CHFriendDetailActionCell_label);
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setText:", v6);

  v7 = *(void **)(a1 + OBJC_IVAR___CHFriendDetailActionCell_accessoryImageView);
  if (v4 == 4)
  {
    v8 = (id)ActivitySharingBundle();
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v9, v8);

  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v7, "setImage:", v10);

}

uint64_t sub_1003CDA68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_100047110(&qword_100831B20);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR___CHFriendDetailActionListView____lazy_storage___footerRegistration;
  swift_beginAccess(v1 + OBJC_IVAR___CHFriendDetailActionListView____lazy_storage___footerRegistration, v19, 0, 0);
  sub_1003CF178(v9, (uint64_t)v8);
  v10 = sub_100047110(&qword_100831AA8);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_1003CF1C0((uint64_t)v8);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  v14 = v13;
  v15 = swift_allocObject(&unk_10079D118, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v1);
  v16 = sub_10001E724(0, &qword_100831B18, UICollectionViewListCell_ptr);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v12, v14, sub_1003CF224, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_1003CF22C((uint64_t)v5, v9);
  return swift_endAccess(v18);
}

uint64_t sub_1003CDC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  void *v12;
  id v13;
  _QWORD *v14;
  _QWORD v16[5];
  _BYTE v17[24];

  v6 = type metadata accessor for UIListContentConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewListCell.defaultContentConfiguration()(v8);
  swift_beginAccess(a5 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5 + 16);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = *(id *)(Strong + OBJC_IVAR___CHFriendDetailActionListView_footerText);

  }
  else
  {
    v13 = 0;
  }
  UIListContentConfiguration.attributedText.setter(v13);
  v16[3] = v6;
  v16[4] = &protocol witness table for UIListContentConfiguration;
  v14 = sub_10004C480(v16);
  (*(void (**)(_QWORD *, char *, uint64_t))(v7 + 16))(v14, v10, v6);
  UICollectionViewCell.contentConfiguration.setter(v16);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

char *sub_1003CDD54(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  objc_class *v36;
  char *v37;
  void *v38;
  char *v39;
  void *v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  Class isa;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  objc_super v56;

  v5 = v4;
  v10 = sub_100047110(&qword_100831AA8);
  v53 = *(_QWORD *)(v10 - 8);
  v54 = v10;
  v11 = __chkstk_darwin(v10);
  v55 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICollectionLayoutListConfiguration.FooterMode(0, v11);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0, v15);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for UICollectionLayoutListConfiguration(0, v20);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = OBJC_IVAR___CHFriendDetailActionListView_collectionView;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v19 + 104))(v22, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v18, v25);
  v28 = v5;
  UICollectionLayoutListConfiguration.init(appearance:)(v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v17, enum case for UICollectionLayoutListConfiguration.FooterMode.supplementary(_:), v13);
  UICollectionLayoutListConfiguration.footerMode.setter(v17);
  sub_10001E724(0, (unint64_t *)&unk_100831B28, UICollectionViewCompositionalLayout_ptr);
  v29 = (void *)static UICollectionViewCompositionalLayout.list(using:)(v27);
  v30 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v29, 0.0, 0.0, 0.0, 0.0);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  objc_msgSend(v30, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v52] = v30;
  *(_QWORD *)&v28[OBJC_IVAR___CHFriendDetailActionListView_actionTypes] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v28[OBJC_IVAR___CHFriendDetailActionListView_labelTexts] = &_swiftEmptyArrayStorage;
  v31 = OBJC_IVAR___CHFriendDetailActionListView_footerText;
  *(_QWORD *)&v28[v31] = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
  swift_unknownObjectWeakInit(&v28[OBJC_IVAR___CHFriendDetailActionListView_delegate], 0);
  v32 = type metadata accessor for FriendDetailActionCell();
  v33 = sub_100047110(&qword_100831A98);
  UICollectionView.CellRegistration.init(handler:)(sub_1003CD968, 0, v32, v33);
  v35 = v53;
  v34 = v54;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(&v28[OBJC_IVAR___CHFriendDetailActionListView____lazy_storage___footerRegistration], 1, 1, v54);

  v36 = (objc_class *)type metadata accessor for FriendDetailActionListView(0);
  v56.receiver = v28;
  v56.super_class = v36;
  v37 = (char *)objc_msgSendSuper2(&v56, "initWithFrame:", a1, a2, a3, a4);
  v38 = *(void **)&v37[OBJC_IVAR___CHFriendDetailActionListView_collectionView];
  v39 = v37;
  objc_msgSend(v38, "setDelegate:", v39);
  objc_msgSend(v38, "setDataSource:", v39);
  objc_msgSend(v38, "setScrollEnabled:", 0);
  objc_msgSend(v39, "addSubview:", v38);
  v40 = (void *)objc_opt_self(NSLayoutConstraint);
  v41 = (CHWorkoutDetailHeartRateTableViewCell *)UIView.constraintsPinningToEdgesOfView(_:supportingRTL:insets:leadingPriority:trailingPriority:topPriority:bottomPriority:)(-16.0, 0.0, -16.0, 0.0, 1000.0, 1000.0, 1000.0, 1000.0);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v41, v43, v44, v45, v46, v47, v48, v49);
  objc_msgSend(v40, "activateConstraints:", isa);

  v50 = v55;
  sub_1003CDA68(v55);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v50, v34);
  objc_msgSend(v39, "setClipsToBounds:", 1);

  return v39;
}

void sub_1003CE1C4(CHWorkoutDetailHeartRateTableViewCell *a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v11;
  const char *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;

  v11 = *(_QWORD *)a1->cellPadding;
  if (v11)
  {
    swift_bridgeObjectRetain(a1);
    v20 = 0;
    v21 = &_swiftEmptyArrayStorage;
    do
    {
      v22 = *((_QWORD *)&a1[1].super.super.super.super.isa + v20);
      if (v22 <= 5)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
          v21 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141288(0, *(_QWORD *)v21->cellPadding + 1, 1, v21);
        v24 = *(_QWORD *)v21->cellPadding;
        v23 = *(_QWORD *)v21->cellInset;
        if (v24 >= v23 >> 1)
          v21 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141288((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
        *(_QWORD *)v21->cellPadding = v24 + 1;
        *((_QWORD *)&v21[1].super.super.super.super.isa + v24) = v22;
      }
      ++v20;
    }
    while (v11 != v20);
    swift_bridgeObjectRelease(a1, v13, v14, v15, v16, v17, v18, v19);
  }
  else
  {
    v21 = &_swiftEmptyArrayStorage;
  }
  v25 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + OBJC_IVAR___CHFriendDetailActionListView_actionTypes);
  *(_QWORD *)(v8 + OBJC_IVAR___CHFriendDetailActionListView_actionTypes) = v21;
  swift_bridgeObjectRelease(v25, a2, a3, a4, a5, a6, a7, a8);
  v26 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + OBJC_IVAR___CHFriendDetailActionListView_labelTexts);
  *(_QWORD *)(v8 + OBJC_IVAR___CHFriendDetailActionListView_labelTexts) = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v26, v27, v28, v29, v30, v31, v32, v33);
  v35 = *(id *)(v8 + OBJC_IVAR___CHFriendDetailActionListView_footerText);
  *(_QWORD *)(v8 + OBJC_IVAR___CHFriendDetailActionListView_footerText) = a3;
  v34 = a3;

}

id sub_1003CE3C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FriendDetailActionListView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003CE4A0()
{
  return type metadata accessor for FriendDetailActionListView(0);
}

uint64_t type metadata accessor for FriendDetailActionListView(uint64_t a1)
{
  uint64_t result;

  result = qword_100831A80;
  if (!qword_100831A80)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FriendDetailActionListView);
  return result;
}

void sub_1003CE4E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[4] = "\b";
  sub_1003CE598(319);
  if (v3 <= 0x3F)
  {
    v6[5] = *(_QWORD *)(v2 - 8) + 64;
    sub_1003CE600(319);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 7, v6, a1 + 80);
    }
  }
}

void sub_1003CE598(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_100831A90)
  {
    v2 = type metadata accessor for FriendDetailActionCell();
    v3 = sub_100007050(&qword_100831A98);
    v4 = type metadata accessor for UICollectionView.CellRegistration(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_100831A90);
  }
}

void sub_1003CE600(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100831AA0)
  {
    v2 = sub_100007050(&qword_100831AA8);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100831AA0);
  }
}

unint64_t sub_1003CE66C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  _QWORD v23[3];

  v3 = v2;
  result = IndexPath.row.getter(a1);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(v3 + OBJC_IVAR___CHFriendDetailActionListView_actionTypes);
  if (result >= *(_QWORD *)(v6 + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v7 = *(_QWORD *)(v6 + 8 * result + 32);
  result = IndexPath.row.getter(result);
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = *(_QWORD *)(v3 + OBJC_IVAR___CHFriendDetailActionListView_labelTexts);
  if (result < *(_QWORD *)(v8 + 16))
  {
    v9 = v8 + 16 * result;
    v10 = *(_QWORD *)(v9 + 32);
    v11 = *(CHWorkoutDetailHeartRateTableViewCell **)(v9 + 40);
    v12 = v3 + OBJC_IVAR___CHFriendDetailActionListView_cellRegistration;
    v23[0] = v7;
    v23[1] = v10;
    v23[2] = v11;
    v13 = type metadata accessor for FriendDetailActionCell();
    swift_bridgeObjectRetain(v11);
    v14 = sub_100047110(&qword_100831A98);
    v15 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v12, a2, v23, v13, v14);
    swift_bridgeObjectRelease(v11, v16, v17, v18, v19, v20, v21, v22);
    return v15;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1003CEA24(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v16;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v13 = a3;
  v14 = a1;
  a5(v13, v12);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

ValueMetadata *type metadata accessor for FriendDetailActionListView.ActionType()
{
  return &type metadata for FriendDetailActionListView.ActionType;
}

unint64_t sub_1003CEAF4()
{
  unint64_t result;

  result = qword_100831B10;
  if (!qword_100831B10)
  {
    result = swift_getWitnessTable(&unk_10063A494, &type metadata for FriendDetailActionListView.ActionType);
    atomic_store(result, (unint64_t *)&qword_100831B10);
  }
  return result;
}

unint64_t sub_1003CEB38(unint64_t result)
{
  if (result > 5)
    return 0;
  return result;
}

void sub_1003CEB48(__n128 a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v3 = type metadata accessor for UICollectionLayoutListConfiguration.FooterMode(0, a1);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICollectionLayoutListConfiguration(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = OBJC_IVAR___CHFriendDetailActionListView_collectionView;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v9 + 104))(v12, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v8, v15);
  UICollectionLayoutListConfiguration.init(appearance:)(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for UICollectionLayoutListConfiguration.FooterMode.supplementary(_:), v3);
  UICollectionLayoutListConfiguration.footerMode.setter(v7);
  sub_10001E724(0, (unint64_t *)&unk_100831B28, UICollectionViewCompositionalLayout_ptr);
  v18 = (void *)static UICollectionViewCompositionalLayout.list(using:)(v17);
  v19 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v18, 0.0, 0.0, 0.0, 0.0);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v2[v26] = v19;
  *(_QWORD *)&v2[OBJC_IVAR___CHFriendDetailActionListView_actionTypes] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR___CHFriendDetailActionListView_labelTexts] = &_swiftEmptyArrayStorage;
  v20 = OBJC_IVAR___CHFriendDetailActionListView_footerText;
  *(_QWORD *)&v2[v20] = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR___CHFriendDetailActionListView_delegate], 0);
  v21 = type metadata accessor for FriendDetailActionCell();
  v22 = sub_100047110(&qword_100831A98);
  UICollectionView.CellRegistration.init(handler:)(sub_1003CD968, 0, v21, v22);
  v23 = &v2[OBJC_IVAR___CHFriendDetailActionListView____lazy_storage___footerRegistration];
  v24 = sub_100047110(&qword_100831AA8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/FriendDetailActionListView.swift", 43, 2, 95, 0);
  __break(1u);
}

void sub_1003CEE1C(void *a1)
{
  Class isa;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

  if (v9)
  {
    v3 = type metadata accessor for FriendDetailActionCell();
    v4 = swift_dynamicCastClass(v9, v3);
    if (v4)
    {
      v5 = (void *)v4;
      if (qword_10081DA30 != -1)
        swift_once(&qword_10081DA30, sub_1002FBB60);
      v6 = (id)qword_10082DE00;
      v7 = objc_msgSend(v5, "contentView");
      objc_msgSend(v7, "setBackgroundColor:", v6);

      v8 = v6;
    }
    else
    {
      v8 = v9;
    }

  }
}

unint64_t sub_1003CEF20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = v1;
  result = IndexPath.row.getter(a1);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___CHFriendDetailActionListView_actionTypes);
  if (result >= *(_QWORD *)(v4 + 16))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = *(_QWORD *)(v4 + 8 * result + 32);
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___CHFriendDetailActionListView_delegate);
  if (result)
  {
    v6 = result;
    objc_msgSend((id)result, "friendDetailActionListView:didSelectActionType:", v2, v5);
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

void sub_1003CEFB8(void *a1)
{
  Class isa;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  _QWORD aBlock[5];
  uint64_t v15;

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v13 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

  if (v13)
  {
    v3 = type metadata accessor for FriendDetailActionCell();
    v4 = swift_dynamicCastClass(v13, v3);
    if (v4)
    {
      v5 = v4;
      if (qword_10081DA28 != -1)
        swift_once(&qword_10081DA28, sub_1002FBB28);
      v6 = (void *)qword_10082DDF8;
      v7 = (void *)objc_opt_self(UIView);
      v8 = swift_allocObject(&unk_10079D0C8, 32, 7);
      *(_QWORD *)(v8 + 16) = v5;
      *(_QWORD *)(v8 + 24) = v6;
      aBlock[4] = sub_1003CF170;
      v15 = v8;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10002D0F8;
      aBlock[3] = &unk_10079D0E0;
      v9 = _Block_copy(aBlock);
      v10 = v15;
      v11 = v6;
      v12 = v13;
      swift_release(v10);
      objc_msgSend(v7, "animateWithDuration:animations:", v9, 0.5);

      _Block_release(v9);
    }
    else
    {

    }
  }
}

uint64_t sub_1003CF144()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003CF170()
{
  uint64_t v0;

  sub_1002FC398(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003CF178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100831B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003CF1C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_100831B20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003CF200()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003CF224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1003CDC44(a1, a2, a3, a4, v4);
}

uint64_t sub_1003CF22C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100831B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003CF274(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1003CF2AC + 4 * byte_10063A4BC[a1]))(0xD000000000000010, 0x800000010069DA20);
}

uint64_t sub_1003CF2AC(uint64_t a1)
{
  return a1 + 4;
}

uint64_t sub_1003CF2DC(uint64_t a1, CHWorkoutDetailHeartRateTableViewCell *a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  void *v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  NSString v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  NSString v36;

  ObjectType = swift_getObjectType(v2);
  v5 = (void *)objc_opt_self(RPTTestRunner);
  if (!objc_msgSend(v5, "isRecapAvailable"))
    goto LABEL_8;
  v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v7 = objc_msgSend(v6, "connectedScenes");

  v8 = sub_10001E724(0, &qword_100831BA0, UIScene_ptr);
  v9 = sub_1003D03DC();
  v10 = (CHWorkoutDetailHeartRateTableViewCell *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v7, v8, v9);

  v11 = (void *)sub_100548950((uint64_t)v10);
  swift_bridgeObjectRelease(v10, v12, v13, v14, v15, v16, v17, v18);
  if (!v11)
    goto LABEL_8;
  v19 = objc_msgSend(v11, "delegate");

  if (!v19)
    goto LABEL_8;
  v20 = objc_opt_self(PhoneSceneDelegate);
  v21 = (void *)swift_dynamicCastObjCClass(v19, v20);
  if (!v21 || (v22 = sub_1003CF728(v21, ObjectType)) == 0)
  {
    swift_unknownObjectRelease(v19);
LABEL_8:
    v35 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v36 = String._bridgeToObjectiveC()();
    objc_msgSend(v35, "failedTest:", v36);

    return 1;
  }
  v23 = v22;
  v24 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
  swift_bridgeObjectRetain(a2);
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2, v26, v27, v28, v29, v30, v31, v32);
  v33 = objc_msgSend(v24, "initWithTestName:scrollView:completionHandler:", v25, v23, 0);

  v34 = v33;
  objc_msgSend(v5, "runTestWithParameters:", v34);

  swift_unknownObjectRelease(v19);
  return 1;
}

void *sub_1003CF5AC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  char *v8;
  id v9;
  Class isa;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v17;

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, "activityTileViewController", v4);
  v8 = (char *)objc_msgSend(v7, "showTodayAndShareImmediately:animated:forGoalCompleteNotification:goalRecommendation:", 0, 1, 0, 0);

  v9 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  Date.init(timeIntervalSinceNow:)(0.01);
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  objc_msgSend(v9, "runUntilDate:", isa);

  v11 = objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController], "currentlyDisplayedViewController");
  v12 = type metadata accessor for HistoryDayViewController(0);
  v13 = swift_dynamicCastClass(v11, v12);
  if (v13)
  {
    v14 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_tableView);
    v15 = v14;
  }
  else
  {
    v14 = 0;
  }

  return v14;
}

id sub_1003CF728(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  Class isa;
  id v14;
  os_log_type_t v15;
  void *v16;
  os_log_type_t v17;
  NSObject *v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v32;
  uint64_t v33;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, "activityTileViewController", v6);
  v10 = objc_msgSend(v9, "navigateToTrophyCaseAnimated:initialAchievement:shouldShowCelebration:forModalPresentation:", 0, 0, 0, 0);

  if (v10)
  {
    v12 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    Date.init(timeIntervalSinceNow:)(0.01);
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    objc_msgSend(v12, "runUntilDate:", isa);

    v14 = objc_msgSend(v10, "collectionView");
  }
  else
  {
    v15 = static os_log_type_t.error.getter(v11);
    v16 = (void *)HKLogActivity;
    v17 = v15;
    if (os_log_type_enabled(HKLogActivity, v15))
    {
      v18 = v16;
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v33 = v20;
      *(_DWORD *)v19 = 136315138;
      v21 = _typeName(_:qualified:)(a2, 0);
      v23 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
      v32 = sub_10003E8EC(v21, v22, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v19 + 4);
      swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
      _os_log_impl((void *)&_mh_execute_header, v18, v17, "%s failed to present new trophy case! Is defaults set correctly?", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);

    }
    return 0;
  }
  return v14;
}

uint64_t sub_1003CF984(uint64_t a1, CHWorkoutDetailHeartRateTableViewCell *a2)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  void *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  NSString v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  NSString v34;

  v3 = (void *)objc_opt_self(RPTTestRunner);
  if (!objc_msgSend(v3, "isRecapAvailable"))
    goto LABEL_8;
  v4 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v5 = objc_msgSend(v4, "connectedScenes");

  v6 = sub_10001E724(0, &qword_100831BA0, UIScene_ptr);
  v7 = sub_1003D03DC();
  v8 = (CHWorkoutDetailHeartRateTableViewCell *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v5, v6, v7);

  v9 = (void *)sub_100548950((uint64_t)v8);
  swift_bridgeObjectRelease(v8, v10, v11, v12, v13, v14, v15, v16);
  if (!v9)
    goto LABEL_8;
  v17 = objc_msgSend(v9, "delegate");

  if (!v17)
    goto LABEL_8;
  v18 = objc_opt_self(PhoneSceneDelegate);
  v19 = (void *)swift_dynamicCastObjCClass(v17, v18);
  if (!v19
    || (v20 = objc_msgSend(v19, "activityTileViewController"),
        v21 = objc_msgSend(v20, "tableView"),
        v20,
        !v21))
  {
    swift_unknownObjectRelease(v17);
LABEL_8:
    v33 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v34 = String._bridgeToObjectiveC()();
    objc_msgSend(v33, "failedTest:", v34);

    return 1;
  }
  v22 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
  swift_bridgeObjectRetain(a2);
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2, v24, v25, v26, v27, v28, v29, v30);
  v31 = objc_msgSend(v22, "initWithTestName:scrollView:completionHandler:", v23, v21, 0);

  v32 = v31;
  objc_msgSend(v3, "runTestWithParameters:", v32);

  swift_unknownObjectRelease(v17);
  return 1;
}

uint64_t sub_1003CFBC0(uint64_t a1, CHWorkoutDetailHeartRateTableViewCell *a2)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  void *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  NSString v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  NSString v34;

  v3 = (void *)objc_opt_self(RPTTestRunner);
  if (!objc_msgSend(v3, "isRecapAvailable"))
    goto LABEL_8;
  v4 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v5 = objc_msgSend(v4, "connectedScenes");

  v6 = sub_10001E724(0, &qword_100831BA0, UIScene_ptr);
  v7 = sub_1003D03DC();
  v8 = (CHWorkoutDetailHeartRateTableViewCell *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v5, v6, v7);

  v9 = (void *)sub_100548950((uint64_t)v8);
  swift_bridgeObjectRelease(v8, v10, v11, v12, v13, v14, v15, v16);
  if (!v9)
    goto LABEL_8;
  v17 = objc_msgSend(v9, "delegate");

  if (!v17)
    goto LABEL_8;
  v18 = objc_opt_self(PhoneSceneDelegate);
  v19 = (void *)swift_dynamicCastObjCClass(v17, v18);
  if (!v19 || (v20 = sub_1003CF5AC(v19)) == 0)
  {
    swift_unknownObjectRelease(v17);
LABEL_8:
    v33 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v34 = String._bridgeToObjectiveC()();
    objc_msgSend(v33, "failedTest:", v34);

    return 1;
  }
  v21 = v20;
  v22 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
  swift_bridgeObjectRetain(a2);
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2, v24, v25, v26, v27, v28, v29, v30);
  v31 = objc_msgSend(v22, "initWithTestName:scrollView:completionHandler:", v23, v21, 0);

  v32 = v31;
  objc_msgSend(v3, "runTestWithParameters:", v32);

  swift_unknownObjectRelease(v17);
  return 1;
}

uint64_t sub_1003CFDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  void *v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  Class isa;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSString v35;
  uint64_t v37;
  uint64_t v38;
  __int128 v39[2];
  uint64_t v40;
  id v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)objc_opt_self(UIApplication);
  v11 = objc_msgSend(v10, "sharedApplication");
  v12 = objc_msgSend(v11, "connectedScenes");

  v13 = sub_10001E724(0, &qword_100831BA0, UIScene_ptr);
  v14 = sub_1003D03DC();
  v15 = (CHWorkoutDetailHeartRateTableViewCell *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v12, v13, v14);

  v16 = (void *)sub_100548950((uint64_t)v15);
  swift_bridgeObjectRelease(v15, v17, v18, v19, v20, v21, v22, v23);
  if (!v16)
    goto LABEL_8;
  v24 = objc_msgSend(v16, "delegate");

  if (!v24)
    goto LABEL_8;
  v25 = objc_opt_self(PhoneSceneDelegate);
  v26 = (void *)swift_dynamicCastObjCClass(v24, v25);
  if (!v26)
  {
    swift_unknownObjectRelease(v24);
LABEL_8:
    v34 = objc_msgSend(v10, "sharedApplication");
    v35 = String._bridgeToObjectiveC()();
    objc_msgSend(v34, "failedTest:", v35);

    return 1;
  }
  v27 = v26;
  v38 = a3;
  v41 = objc_msgSend(v26, "activitySharingViewController");
  v28 = sub_10001E724(0, (unint64_t *)&qword_100828310, UIViewController_ptr);
  v29 = sub_100047110(&qword_100831BB8);
  if ((swift_dynamicCast(v39, &v41, v28, v29, 6) & 1) == 0)
  {
    v40 = 0;
    memset(v39, 0, sizeof(v39));
    swift_unknownObjectRelease(v24);
    sub_1003D0434((uint64_t)v39);
    goto LABEL_8;
  }
  sub_10002411C(v39, (uint64_t)v42);
  objc_msgSend(v27, "_ppt_showSharingTab");
  v30 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  Date.init(timeIntervalSinceNow:)(0.01);
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  objc_msgSend(v30, "runUntilDate:", isa);

  v32 = v43;
  v33 = v44;
  sub_100016804(v42, v43);
  dispatch thunk of PPTTestHost.runTest(_:options:)(a1, a2, v38, v32, v33);
  swift_unknownObjectRelease(v24);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v42);
  return 1;
}

uint64_t sub_1003D00C0(uint64_t a1, CHWorkoutDetailHeartRateTableViewCell *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;
  os_log_type_t v8;
  void *v9;
  os_log_type_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  char v26;
  char v28;
  uint64_t v29;
  uint64_t v30;

  ObjectType = swift_getObjectType(v3);
  v8 = static os_log_type_t.default.getter(ObjectType);
  v9 = (void *)HKLogActivity;
  v10 = v8;
  if (os_log_type_enabled(HKLogActivity, v8))
  {
    swift_bridgeObjectRetain_n(a2, 2);
    v11 = v9;
    v12 = a3;
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v30 = v14;
    *(_DWORD *)v13 = 136315394;
    v15 = _typeName(_:qualified:)(ObjectType, 0);
    v17 = (CHWorkoutDetailHeartRateTableViewCell *)v16;
    v29 = sub_10003E8EC(v15, v16, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v13 + 4);
    swift_bridgeObjectRelease(v17, v18, v19, v20, v21, v22, v23, v24);
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain(a2);
    v29 = sub_10003E8EC(a1, (unint64_t)a2, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v13 + 14);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v11, v10, "%s running test: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    v25 = v13;
    a3 = v12;
    swift_slowDealloc(v25, -1, -1);

  }
  if (a1 == 0xD000000000000010 && a2 == (CHWorkoutDetailHeartRateTableViewCell *)0x800000010069DA20
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x800000010069DA20, a1, a2, 0) & 1) != 0)
  {
    v26 = sub_1003CF984(a1, a2);
  }
  else if (a1 == 0xD000000000000014 && a2 == (CHWorkoutDetailHeartRateTableViewCell *)0x800000010069DA00
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x800000010069DA00, a1, a2, 0) & 1) != 0)
  {
    v26 = sub_1003CFBC0(a1, a2);
  }
  else if (a1 == 0xD000000000000010 && a2 == (CHWorkoutDetailHeartRateTableViewCell *)0x80000001006883D0
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001006883D0, a1, a2, 0) & 1) != 0)
  {
    v26 = sub_1003CFDD0(a1, (uint64_t)a2, a3);
  }
  else if (a1 == 0xD000000000000010 && a2 == (CHWorkoutDetailHeartRateTableViewCell *)0x800000010069D9E0
         || (v28 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x800000010069D9E0, a1, a2, 0),
             v26 = 0,
             (v28 & 1) != 0))
  {
    v26 = sub_1003CF2DC(a1, a2);
  }
  return v26 & 1;
}

unint64_t sub_1003D03DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100831BA8;
  if (!qword_100831BA8)
  {
    v1 = sub_10001E724(255, &qword_100831BA0, UIScene_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100831BA8);
  }
  return result;
}

uint64_t sub_1003D0434(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110((uint64_t *)&unk_100831BC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1003D053C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingCompetitionActionListSwiftUITableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivitySharingCompetitionActionListSwiftUITableViewCell()
{
  return objc_opt_self(_TtC10FitnessApp56ActivitySharingCompetitionActionListSwiftUITableViewCell);
}

unint64_t sub_1003D0590()
{
  return 0xD000000000000038;
}

uint64_t *sub_1003D05AC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t, __n128);
  __n128 v46;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v28);
  }
  else
  {
    v7 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Artwork(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    v14 = a3[6];
    v15 = a3[7];
    v16 = (uint64_t *)((char *)a1 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (uint64_t *)((char *)a1 + v15);
    v20 = (uint64_t *)((char *)a2 + v15);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = a3[8];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
    swift_bridgeObjectRetain(v18);
    v26 = swift_bridgeObjectRetain(v21);
    if (v25(v24, 1, v11, v26))
    {
      v27 = sub_100047110((uint64_t *)&unk_1008283A0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v13(v23, v24, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v23, 0, 1, v11);
    }
    v29 = a3[9];
    v30 = a3[10];
    v31 = (uint64_t *)((char *)a1 + v29);
    v32 = (uint64_t *)((char *)a2 + v29);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = (uint64_t *)((char *)a1 + v30);
    v35 = (uint64_t *)((char *)a2 + v30);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = a3[11];
    v38 = a3[12];
    v39 = (uint64_t *)((char *)a1 + v37);
    v40 = (uint64_t *)((char *)a2 + v37);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    v42 = (char *)a1 + v38;
    v43 = (char *)a2 + v38;
    v44 = type metadata accessor for URL(0);
    v45 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v44 - 8) + 16);
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v36);
    v46 = swift_bridgeObjectRetain(v41);
    v45(v42, v43, v44, v46);
  }
  return a1;
}

uint64_t sub_1003D078C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t (*v40)(const void *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  SEL v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v6 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v16 = v15[1];
  v17 = (CHWorkoutDetailHeartRateTableViewCell *)v14[1];
  v14[1] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17, v18, v19, v20, v21, v22, v23, v24);
  v25 = a3[7];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v28 = v27[1];
  v29 = (CHWorkoutDetailHeartRateTableViewCell *)v26[1];
  v26[1] = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v29, v30, v31, v32, v33, v34, v35, v36);
  v37 = a3[8];
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  v40 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v41 = v40((const void *)(a1 + v37), 1, v10);
  v42 = v40(v39, 1, v10);
  if (!v41)
  {
    if (!v42)
    {
      v12(v38, v39, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v38, v10);
    goto LABEL_6;
  }
  if (v42)
  {
LABEL_6:
    v43 = sub_100047110((uint64_t *)&unk_1008283A0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v38, v39, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v38, 0, 1, v10);
LABEL_7:
  v44 = a3[9];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  *v45 = *v46;
  v47 = v46[1];
  v48 = (CHWorkoutDetailHeartRateTableViewCell *)v45[1];
  v45[1] = v47;
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRelease(v48, v49, v50, v51, v52, v53, v54, v55);
  v56 = a3[10];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (_QWORD *)(a2 + v56);
  *v57 = *v58;
  v59 = v58[1];
  v60 = (CHWorkoutDetailHeartRateTableViewCell *)v57[1];
  v57[1] = v59;
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRelease(v60, v61, v62, v63, v64, v65, v66, v67);
  v68 = a3[11];
  v69 = (_QWORD *)(a1 + v68);
  v70 = (_QWORD *)(a2 + v68);
  *v69 = *v70;
  v71 = v70[1];
  v72 = (CHWorkoutDetailHeartRateTableViewCell *)v69[1];
  v69[1] = v71;
  swift_bridgeObjectRetain(v71);
  swift_bridgeObjectRelease(v72, v73, v74, v75, v76, v77, v78, v79);
  v80 = a3[12];
  v81 = a1 + v80;
  v82 = a2 + v80;
  v83 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 24))(v81, v82, v83);
  return a1;
}

uint64_t sub_1003D09E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[8];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v14, 1, v10))
  {
    v17 = sub_100047110((uint64_t *)&unk_1008283A0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v12(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  v18 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  v19 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t sub_1003D0B3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t (*v42)(const void *, uint64_t, uint64_t);
  int v43;
  int v44;
  const char *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  CHWorkoutDetailHeartRateTableViewCell *v77;
  SEL v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v6 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = (CHWorkoutDetailHeartRateTableViewCell *)v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18, v19, v20, v21, v22, v23, v24, v25);
  v26 = a3[7];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  v31 = (CHWorkoutDetailHeartRateTableViewCell *)v27[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease(v31, v32, v33, v34, v35, v36, v37, v38);
  v39 = a3[8];
  v40 = (void *)(a1 + v39);
  v41 = (const void *)(a2 + v39);
  v42 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v43 = v42((const void *)(a1 + v39), 1, v10);
  v44 = v42(v41, 1, v10);
  if (!v43)
  {
    if (!v44)
    {
      v12(v40, v41, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v40, v10);
    goto LABEL_6;
  }
  if (v44)
  {
LABEL_6:
    v52 = sub_100047110((uint64_t *)&unk_1008283A0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v40, v41, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v40, 0, 1, v10);
LABEL_7:
  v53 = a3[9];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (uint64_t *)(a2 + v53);
  v57 = *v55;
  v56 = v55[1];
  v58 = (CHWorkoutDetailHeartRateTableViewCell *)v54[1];
  *v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease(v58, v45, v46, v47, v48, v49, v50, v51);
  v59 = a3[10];
  v60 = (_QWORD *)(a1 + v59);
  v61 = (uint64_t *)(a2 + v59);
  v63 = *v61;
  v62 = v61[1];
  v64 = (CHWorkoutDetailHeartRateTableViewCell *)v60[1];
  *v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease(v64, v65, v66, v67, v68, v69, v70, v71);
  v72 = a3[11];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (uint64_t *)(a2 + v72);
  v76 = *v74;
  v75 = v74[1];
  v77 = (CHWorkoutDetailHeartRateTableViewCell *)v73[1];
  *v73 = v76;
  v73[1] = v75;
  swift_bridgeObjectRelease(v77, v78, v79, v80, v81, v82, v83, v84);
  v85 = a3[12];
  v86 = a1 + v85;
  v87 = a2 + v85;
  v88 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 40))(v86, v87, v88);
  return a1;
}

uint64_t sub_1003D0D40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;

  v6 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for Artwork(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_12:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v16 = sub_100047110((uint64_t *)&unk_1008283A0);
    v12 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v16;
      v13 = a3[8];
    }
    else
    {
      v8 = type metadata accessor for URL(0);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = a3[12];
    }
    goto LABEL_12;
  }
  v14 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1003D0E38(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = type metadata accessor for Artwork(0);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
        return result;
      }
      v16 = sub_100047110((uint64_t *)&unk_1008283A0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[8];
      }
      else
      {
        v10 = type metadata accessor for URL(0);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[12];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1003D0F2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v2 = v1;
  v4 = type metadata accessor for Artwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110((uint64_t *)&unk_1008283A0);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
  v12 = sub_1000083D8(&qword_100831D18, (uint64_t (*)(uint64_t))&type metadata accessor for ShelfLockupAttributedTagStrings, (uint64_t)&protocol conformance descriptor for ShelfLockupAttributedTagStrings);
  dispatch thunk of Hashable.hash(into:)(a1, v11, v12);
  v13 = (int *)type metadata accessor for CatalogTipSectionItem(0);
  v14 = sub_1000083D8(&qword_100831D20, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
  dispatch thunk of Hashable.hash(into:)(a1, v4, v14);
  v15 = (uint64_t *)(v1 + v13[6]);
  v16 = *v15;
  v17 = v15[1];
  swift_bridgeObjectRetain(v17);
  String.hash(into:)(a1, v16, v17);
  swift_bridgeObjectRelease(v17);
  v18 = (uint64_t *)(v2 + v13[7]);
  v19 = *v18;
  v20 = v18[1];
  swift_bridgeObjectRetain(v20);
  String.hash(into:)(a1, v19, v20);
  swift_bridgeObjectRelease(v20);
  sub_1003D1314(v2 + v13[8], (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1u);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v14);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v21 = (uint64_t *)(v2 + v13[9]);
  v22 = v21[1];
  if (v22)
  {
    v23 = *v21;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v22);
    String.hash(into:)(a1, v23, v22);
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v24 = (uint64_t *)(v2 + v13[10]);
  v25 = v24[1];
  if (v25)
  {
    v26 = *v24;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v25);
    String.hash(into:)(a1, v26, v25);
    swift_bridgeObjectRelease(v25);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v27 = (uint64_t *)(v2 + v13[11]);
  v28 = v27[1];
  if (v28)
  {
    v29 = *v27;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v28);
    String.hash(into:)(a1, v29, v28);
    swift_bridgeObjectRelease(v28);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v30 = type metadata accessor for URL(0);
  v31 = sub_1000083D8(&qword_100831D28, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  return dispatch thunk of Hashable.hash(into:)(a1, v30, v31);
}

Swift::Int sub_1003D126C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_1003D0F2C((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1003D12AC(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_1003D0F2C((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_1003D12E8()
{
  return sub_1000083D8(&qword_100831D10, type metadata accessor for CatalogTipSectionItem, (uint64_t)&unk_10063A578);
}

uint64_t sub_1003D1314(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110((uint64_t *)&unk_1008283A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003D135C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v42;
  char v43;
  void (*v44)(char *, uint64_t);
  int *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;

  v4 = type metadata accessor for Artwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100831D30);
  __chkstk_darwin(v8);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110((uint64_t *)&unk_1008283A0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v68 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v68 - v18;
  if ((static ShelfLockupAttributedTagStrings.== infix(_:_:)(a1, a2) & 1) == 0)
    goto LABEL_15;
  v71 = v4;
  v20 = a1;
  v21 = (int *)type metadata accessor for CatalogTipSectionItem(0);
  if ((static Artwork.== infix(_:_:)(v20 + v21[5], a2 + v21[5]) & 1) == 0)
    goto LABEL_15;
  v22 = v21[6];
  v23 = *(_QWORD *)(v20 + v22);
  v24 = *(_QWORD *)(v20 + v22 + 8);
  v70 = a2;
  v25 = (_QWORD *)(a2 + v22);
  v26 = v25[1];
  if (v23 != *v25 || v24 != v26)
  {
    v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, *v25, v26, 0);
    v28 = 0;
    if ((v27 & 1) == 0)
      return v28 & 1;
  }
  v29 = v21[7];
  v30 = *(_QWORD *)(v20 + v29);
  v31 = *(_QWORD *)(v20 + v29 + 8);
  v32 = (_QWORD *)(v70 + v29);
  v33 = v32[1];
  if (v30 != *v32 || v31 != v33)
  {
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, *v32, v33, 0);
    v28 = 0;
    if ((v34 & 1) == 0)
      return v28 & 1;
  }
  v35 = v21[8];
  v68 = v20;
  sub_1003D1314(v20 + v35, (uint64_t)v19);
  v69 = v21;
  v36 = v70;
  sub_1003D1314(v70 + v21[8], (uint64_t)v17);
  v37 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1003D1314((uint64_t)v19, (uint64_t)v10);
  v38 = v37;
  sub_1003D1314((uint64_t)v17, v37);
  v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v40 = v71;
  if (v39((uint64_t)v10, 1, v71) == 1)
  {
    sub_10001BE90((uint64_t)v17, (uint64_t *)&unk_1008283A0);
    sub_10001BE90((uint64_t)v19, (uint64_t *)&unk_1008283A0);
    if (v39(v38, 1, v40) == 1)
    {
      sub_10001BE90((uint64_t)v10, (uint64_t *)&unk_1008283A0);
      goto LABEL_18;
    }
LABEL_14:
    sub_10001BE90((uint64_t)v10, &qword_100831D30);
    goto LABEL_15;
  }
  sub_1003D1314((uint64_t)v10, (uint64_t)v14);
  if (v39(v38, 1, v40) == 1)
  {
    sub_10001BE90((uint64_t)v17, (uint64_t *)&unk_1008283A0);
    sub_10001BE90((uint64_t)v19, (uint64_t *)&unk_1008283A0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v40);
    goto LABEL_14;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v38, v40);
  v42 = sub_1000083D8(&qword_100831D38, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
  v43 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v7, v40, v42);
  v44 = *(void (**)(char *, uint64_t))(v5 + 8);
  v44(v7, v40);
  sub_10001BE90((uint64_t)v17, (uint64_t *)&unk_1008283A0);
  sub_10001BE90((uint64_t)v19, (uint64_t *)&unk_1008283A0);
  v44(v14, v40);
  sub_10001BE90((uint64_t)v10, (uint64_t *)&unk_1008283A0);
  if ((v43 & 1) == 0)
    goto LABEL_15;
LABEL_18:
  v46 = v68;
  v45 = v69;
  v47 = v69[9];
  v48 = (_QWORD *)(v68 + v47);
  v49 = *(_QWORD *)(v68 + v47 + 8);
  v50 = (_QWORD *)(v36 + v47);
  v51 = v50[1];
  if (v49)
  {
    if (!v51)
      goto LABEL_15;
    if (*v48 != *v50 || v49 != v51)
    {
      v52 = _stringCompareWithSmolCheck(_:_:expecting:)(*v48, v49, *v50, v51, 0);
      v45 = v69;
      v53 = v52;
      v28 = 0;
      if ((v53 & 1) == 0)
        return v28 & 1;
    }
  }
  else if (v51)
  {
    goto LABEL_15;
  }
  v54 = v45[10];
  v55 = (_QWORD *)(v46 + v54);
  v56 = *(_QWORD *)(v46 + v54 + 8);
  v57 = (_QWORD *)(v70 + v54);
  v58 = v57[1];
  if (v56)
  {
    if (!v58)
      goto LABEL_15;
    if (*v55 != *v57 || v56 != v58)
    {
      v59 = _stringCompareWithSmolCheck(_:_:expecting:)(*v55, v56, *v57, v58, 0);
      v45 = v69;
      v60 = v59;
      v28 = 0;
      if ((v60 & 1) == 0)
        return v28 & 1;
    }
  }
  else if (v58)
  {
    goto LABEL_15;
  }
  v61 = v45[11];
  v62 = (_QWORD *)(v46 + v61);
  v63 = *(_QWORD *)(v46 + v61 + 8);
  v64 = (_QWORD *)(v70 + v61);
  v65 = v64[1];
  if (!v63)
  {
    if (!v65)
    {
LABEL_39:
      v28 = static URL.== infix(_:_:)(v46 + v45[12], v70 + v45[12]);
      return v28 & 1;
    }
    goto LABEL_15;
  }
  if (!v65)
  {
LABEL_15:
    v28 = 0;
    return v28 & 1;
  }
  if (*v62 == *v64 && v63 == v65)
    goto LABEL_39;
  v66 = _stringCompareWithSmolCheck(_:_:expecting:)(*v62, v63, *v64, v65, 0);
  v45 = v69;
  v67 = v66;
  v28 = 0;
  if ((v67 & 1) != 0)
    goto LABEL_39;
  return v28 & 1;
}

ValueMetadata *type metadata accessor for ActivitySharingFriendDetailAlertHandlerView()
{
  return &type metadata for ActivitySharingFriendDetailAlertHandlerView;
}

uint64_t sub_1003D1828(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B6614, 1);
}

void sub_1003D1838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  unint64_t v8;
  _QWORD v9[4];
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  char v14;
  _QWORD v15[2];
  __int128 v16;
  __int128 v17;
  char v18;

  v4 = type metadata accessor for ActivitySharingFriendDetailAlertCoordinator(0);
  v5 = sub_1003D199C();
  v6 = ObservedObject.projectedValue.getter(a1, a2, v4, v5);
  KeyPath = swift_getKeyPath(&unk_10063A680);
  ObservedObject.Wrapper.subscript.getter(v15, KeyPath, v6, v5);
  swift_release(KeyPath);
  swift_release(v6);
  v10 = v15[0];
  v11 = v15[1];
  v12 = v16;
  v13 = v17;
  v14 = v18;
  v9[2] = a1;
  v9[3] = a2;
  v8 = sub_1003D19F4();
  View.alert<A>(item:content:)(&v10, sub_1003D19EC, v9, &type metadata for EmptyView, &type metadata for ActivitySharingFriendDetailAlertType, &protocol witness table for EmptyView, v8);
  swift_release(v10);
  swift_release(v11);
  sub_1003D1A38((void *)v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14);
}

double sub_1003D1948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  _BYTE v5[40];

  sub_1003D1A4C(a1, (uint64_t)v5);
  swift_retain(a3);
  sub_1004715F0((uint64_t)v5);
  *(_QWORD *)&result = swift_release(a3).n128_u64[0];
  return result;
}

void sub_1003D1994()
{
  uint64_t *v0;

  sub_1003D1838(*v0, v0[1]);
}

unint64_t sub_1003D199C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082EF70;
  if (!qword_10082EF70)
  {
    v1 = type metadata accessor for ActivitySharingFriendDetailAlertCoordinator(255);
    result = swift_getWitnessTable(&unk_10063E438, v1);
    atomic_store(result, (unint64_t *)&qword_10082EF70);
  }
  return result;
}

double sub_1003D19EC(uint64_t a1)
{
  uint64_t v1;

  return sub_1003D1948(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1003D19F4()
{
  unint64_t result;

  result = qword_100831D40;
  if (!qword_100831D40)
  {
    result = swift_getWitnessTable(&unk_100631928, &type metadata for ActivitySharingFriendDetailAlertType);
    atomic_store(result, (unint64_t *)&qword_100831D40);
  }
  return result;
}

void sub_1003D1A38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1)
    sub_1002749B8(a1, a2, a3, a4, a5);
}

uint64_t sub_1003D1A4C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for ActivitySharingFriendDetailAlertType(a2, a1);
  return a2;
}

uint64_t sub_1003D1A88()
{
  _QWORD v1[4];

  v1[0] = &type metadata for EmptyView;
  v1[1] = &type metadata for ActivitySharingFriendDetailAlertType;
  v1[2] = &protocol witness table for EmptyView;
  v1[3] = sub_1003D19F4();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.alert<A>(item:content:)>>, 1);
}

uint64_t sub_1003D1AD8(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_1003D1AF4 + 4 * byte_10063A6B0[a1]))();
}

uint64_t sub_1003D1AF4()
{
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x8000000100692310);
}

uint64_t sub_1003D1B74()
{
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000016, 0x800000010069DA90);
}

uint64_t storeEnumTagSinglePayload for ActivityRingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1003D1BDC + 4 * byte_10063A6BB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1003D1C10 + 4 * byte_10063A6B6[v4]))();
}

uint64_t sub_1003D1C10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D1C18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003D1C20);
  return result;
}

uint64_t sub_1003D1C2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003D1C34);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1003D1C38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D1C40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityRingError()
{
  return &type metadata for ActivityRingError;
}

uint64_t storeEnumTagSinglePayload for WorkoutExtremeStatIntentError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1003D1CA8 + 4 * byte_10063A6C5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1003D1CDC + 4 * byte_10063A6C0[v4]))();
}

uint64_t sub_1003D1CDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D1CE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003D1CECLL);
  return result;
}

uint64_t sub_1003D1CF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003D1D00);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1003D1D04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D1D0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutExtremeStatIntentError()
{
  return &type metadata for WorkoutExtremeStatIntentError;
}

uint64_t storeEnumTagSinglePayload for AwardIntentError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003D1D74 + 4 * byte_10063A6CF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003D1DA8 + 4 * byte_10063A6CA[v4]))();
}

uint64_t sub_1003D1DA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D1DB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003D1DB8);
  return result;
}

uint64_t sub_1003D1DC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003D1DCCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003D1DD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D1DD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AwardIntentError()
{
  return &type metadata for AwardIntentError;
}

uint64_t sub_1003D1DF4()
{
  unsigned __int8 *v0;

  return sub_1003D1AD8(*v0);
}

uint64_t sub_1003D1DFC()
{
  _BYTE *v0;

  if ((*v0 & 1) != 0)
    return LocalizedStringResource.init(stringLiteral:)(0xD000000000000023, 0x800000010069DC10);
  else
    return LocalizedStringResource.init(stringLiteral:)(0xD000000000000029, 0x800000010069DC40);
}

unint64_t sub_1003D1E44()
{
  unint64_t result;

  result = qword_100831D48;
  if (!qword_100831D48)
  {
    result = swift_getWitnessTable(&unk_10063A7AC, &type metadata for AwardIntentError);
    atomic_store(result, (unint64_t *)&qword_100831D48);
  }
  return result;
}

uint64_t sub_1003D1E88(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_1003D1EA4 + 4 * byte_10063A6D4[a1]))();
}

uint64_t sub_1003D1EA4()
{
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000002BLL, 0x800000010069DBE0);
}

uint64_t sub_1003D1F10()
{
  unsigned __int8 *v0;

  return sub_1003D1E88(*v0);
}

unint64_t sub_1003D1F1C()
{
  unint64_t result;

  result = qword_100831D50;
  if (!qword_100831D50)
  {
    result = swift_getWitnessTable(&unk_10063A83C, &type metadata for WorkoutExtremeStatIntentError);
    atomic_store(result, (unint64_t *)&qword_100831D50);
  }
  return result;
}

unint64_t sub_1003D1F64()
{
  unint64_t result;

  result = qword_100831D58;
  if (!qword_100831D58)
  {
    result = swift_getWitnessTable(&unk_10063A8CC, &type metadata for ActivityRingError);
    atomic_store(result, (unint64_t *)&qword_100831D58);
  }
  return result;
}

uint64_t sub_1003D1FAC()
{
  uint64_t result;

  result = static Color.black.getter();
  qword_10086A840 = result;
  return result;
}

uint64_t sub_1003D1FC8()
{
  uint64_t result;

  result = Color.init(rgbHex:)(1842206);
  qword_10086A848 = result;
  return result;
}

id sub_1003D1FEC(void *a1)
{
  _BYTE *v1;
  _OWORD *v3;
  id v4;
  char *v5;
  id v6;
  id v7;
  id result;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  objc_super v14;
  uint64_t v15;

  v3 = &v1[OBJC_IVAR___WOMirrorViewController_idleTimerToken];
  *v3 = 0u;
  v3[1] = 0u;
  v1[OBJC_IVAR___WOMirrorViewController____lazy_storage___canHostMapView] = 2;
  v4 = objc_allocWithZone((Class)HKHealthStore);
  v5 = v1;
  v6 = objc_msgSend(v4, "init");
  v7 = objc_msgSend(objc_allocWithZone((Class)FIUIUnitManager), "initWithHealthStore:", v6);
  result = objc_msgSend(objc_allocWithZone((Class)FIUIFormattingManager), "initWithUnitManager:", v7);
  if (result)
  {
    *(_QWORD *)&v5[OBJC_IVAR___WOMirrorViewController_formattingManager] = result;
    *(_QWORD *)&v5[OBJC_IVAR___WOMirrorViewController_dataLinkMonitor] = a1;
    v9 = type metadata accessor for WorkoutNotificationCenter(0);
    v10 = swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
    v15 = 0;
    v11 = a1;
    v12 = sub_100047110((uint64_t *)&unk_100831E10);
    Published.init(initialValue:)(&v15, v12);
    *(_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_pendingNotifications) = &_swiftEmptyArrayStorage;
    *(_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_notificationDismissalTimer) = 0;
    *(_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_notificationTTL) = 0x403E000000000000;
    *(_QWORD *)&v5[OBJC_IVAR___WOMirrorViewController_notificationCenter] = v10;

    v14.receiver = v5;
    v14.super_class = (Class)type metadata accessor for MirrorViewController();
    v13 = objc_msgSendSuper2(&v14, "initWithNibName:bundle:", 0, 0);

    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1003D223C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  objc_class *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  __n128 v14;
  void *v15;
  objc_super v16;

  v1 = v0;
  v2 = sub_100047110(&qword_100831F50);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003D2C48((uint64_t)v4);
  v5 = objc_allocWithZone((Class)sub_100047110(&qword_100831F58));
  v6 = (void *)UIHostingController.init(rootView:)(v4);
  objc_msgSend(v0, "addChildViewController:", v6);
  v7 = (objc_class *)type metadata accessor for MirrorViewController();
  v16.receiver = v0;
  v16.super_class = v7;
  objc_msgSendSuper2(&v16, "viewDidLoad");
  v8 = objc_msgSend(v6, "view");
  if (!v8)
    goto LABEL_9;
  v9 = v8;
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v10 = objc_msgSend(v0, "view");
  if (!v10)
  {
    __break(1u);
    goto LABEL_8;
  }
  v11 = v10;
  objc_msgSend(v10, "addSubview:", v9);

  sub_1003D30EC(v9);
  v12 = objc_msgSend(v1, "view");
  if (!v12)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x800000010069A5F0, "FitnessApp/MirrorViewController.swift", 37, 2, 51, 0);
    __break(1u);
    return;
  }
  v13 = v12;
  sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  if (qword_10081DCD0 != -1)
    swift_once(&qword_10081DCD0, sub_1003D1FAC);
  v14 = swift_retain(qword_10086A840);
  v15 = (void *)UIColor.init(_:)(v14);
  objc_msgSend(v13, "setBackgroundColor:", v15);

}

id sub_1003D2498(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __n128 v8;
  char v9;
  uint64_t v10;
  objc_class *v11;
  uint64_t v13;
  objc_super v14;
  _BYTE v15[24];
  _QWORD v16[4];

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter(v8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (qword_10081E068 != -1)
LABEL_5:
    swift_once(&qword_10081E068, sub_10059F104);
  sub_10059F138(v16);
  v10 = (uint64_t)&v2[OBJC_IVAR___WOMirrorViewController_idleTimerToken];
  swift_beginAccess(&v2[OBJC_IVAR___WOMirrorViewController_idleTimerToken], v15, 33, 0);
  sub_10004C69C((uint64_t)v16, v10);
  swift_endAccess(v15);
  v11 = (objc_class *)type metadata accessor for MirrorViewController();
  v14.receiver = v2;
  v14.super_class = v11;
  return objc_msgSendSuper2(&v14, "viewDidAppear:", a1 & 1);
}

id sub_1003D2634(char a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  char v10;
  objc_class *v11;
  uint64_t v13;
  objc_super v14;
  char v15[24];
  __int128 v16;
  uint64_t v17;
  _OWORD v18[2];

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (uint64_t)&v1[OBJC_IVAR___WOMirrorViewController_idleTimerToken];
  swift_beginAccess(&v1[OBJC_IVAR___WOMirrorViewController_idleTimerToken], v15, 0, 0);
  sub_1002666C4(v8, (uint64_t)&v16);
  if (!v17)
  {
    sub_1000F996C((uint64_t)&v16);
    goto LABEL_6;
  }
  sub_100038FD4(&v16, v18);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter(v9);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v10 = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (qword_10081E068 != -1)
LABEL_8:
    swift_once(&qword_10081E068, sub_10059F104);
  sub_10059F3D4((uint64_t)v18);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v18);
LABEL_6:
  memset(v18, 0, sizeof(v18));
  swift_beginAccess(v8, &v16, 33, 0);
  sub_10004C69C((uint64_t)v18, v8);
  swift_endAccess(&v16);
  v11 = (objc_class *)type metadata accessor for MirrorViewController();
  v14.receiver = v2;
  v14.super_class = v11;
  return objc_msgSendSuper2(&v14, "viewDidDisappear:", a1 & 1);
}

void sub_1003D2828(char a1, void (*a2)(), uint64_t a3)
{
  void *v3;
  id v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  objc_class *v42;
  void **v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  void *v46;
  void (*v47)();
  uint64_t v48;
  objc_super v49;

  v7 = objc_msgSend(v3, "childViewControllers");
  v8 = sub_10001E724(0, (unint64_t *)&qword_100828310, UIViewController_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v32 = v9;
    else
      v32 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v33 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, v34, v35, v36, v37, v38, v39, v40);
    if (v33)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, v10, v11, v12, v13, v14, v15, v16);
    goto LABEL_13;
  }
  if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_12;
LABEL_3:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
  }
  else
  {
    if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v17 = *(id *)(v9 + 32);
  }
  v25 = v17;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, v18, v19, v20, v21, v22, v23, v24);
  v26 = objc_msgSend(v25, "presentedViewController");

  if (v26)
  {
    v27 = swift_allocObject(&unk_10079D600, 48, 7);
    *(_QWORD *)(v27 + 16) = v3;
    v28 = a1 & 1;
    *(_BYTE *)(v27 + 24) = v28;
    *(_QWORD *)(v27 + 32) = a2;
    *(_QWORD *)(v27 + 40) = a3;
    v47 = sub_1003D4A2C;
    v48 = v27;
    v43 = _NSConcreteStackBlock;
    v44 = 1107296256;
    v45 = sub_10002D0F8;
    v46 = &unk_10079D618;
    v29 = _Block_copy(&v43);
    v30 = v48;
    v31 = v3;
    sub_10003AFE0((uint64_t)a2, a3);
    objc_msgSend(v26, "dismissViewControllerAnimated:completion:", v28, v29, swift_release(v30).n128_f64[0]);
    _Block_release(v29);

    return;
  }
LABEL_13:
  if (a2)
  {
    v47 = a2;
    v48 = a3;
    v43 = _NSConcreteStackBlock;
    v44 = 1107296256;
    v45 = sub_10002D0F8;
    v46 = &unk_10079D5C8;
    a2 = (void (*)())_Block_copy(&v43);
    v41 = v48;
    swift_retain(a3);
    swift_release(v41);
  }
  v42 = (objc_class *)type metadata accessor for MirrorViewController();
  v49.receiver = v3;
  v49.super_class = v42;
  objc_msgSendSuper2(&v49, "dismissViewControllerAnimated:completion:", a1 & 1, a2);
  _Block_release(a2);
}

void sub_1003D2A84(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  objc_class *v9;
  _QWORD v10[5];
  uint64_t v11;
  objc_super v12;

  if (a3)
  {
    v10[4] = a3;
    v11 = a4;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_10002D0F8;
    v10[3] = &unk_10079D640;
    v7 = _Block_copy(v10);
    v8 = v11;
    swift_retain(a4);
    swift_release(v8);
  }
  else
  {
    v7 = 0;
  }
  v9 = (objc_class *)type metadata accessor for MirrorViewController();
  v12.receiver = a1;
  v12.super_class = v9;
  objc_msgSendSuper2(&v12, "dismissViewControllerAnimated:completion:", a2 & 1, v7);
  _Block_release(v7);
}

uint64_t sub_1003D2C48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  id v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  id v47;
  id v48;
  char *v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v2 = v1;
  v57 = a1;
  v58 = type metadata accessor for MirrorView(0);
  __chkstk_darwin(v58);
  v52 = (uint64_t *)((char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = sub_100047110(&qword_100831F30);
  __chkstk_darwin(v55);
  v56 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PresentationDetent(0);
  v51 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v50 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v49 = (char *)&v46 - v8;
  v59 = type metadata accessor for MapHostingMirrorView(0);
  __chkstk_darwin(v59);
  v10 = (uint64_t *)((char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v53 = (uint64_t)&v46 - v12;
  LODWORD(v54) = sub_1003D34B8();
  v13 = type metadata accessor for LowPowerModeMonitor(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = LowPowerModeMonitor.init(delegate:)(0, 0);
  v15 = *(void **)(v2 + OBJC_IVAR___WOMirrorViewController_dataLinkMonitor);
  v16 = *(_QWORD **)(v2 + OBJC_IVAR___WOMirrorViewController_notificationCenter);
  v17 = type metadata accessor for MirrorControlsState(0);
  v18 = swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  *(_WORD *)(v18 + 16) = 0;
  v19 = v15;
  swift_retain(v16);
  ObservationRegistrar.init()(v20);
  v21 = *(void **)(v2 + OBJC_IVAR___WOMirrorViewController_formattingManager);
  v22 = swift_allocObject(&unk_10079D560, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, v2);
  if ((v54 & 1) != 0)
  {
    v48 = v19;
    v52 = v16;
    v54 = v14;
    v10[6] = 0;
    v10[7] = 0;
    v23 = (_QWORD *)((char *)v10 + *(int *)(v59 + 40));
    v24 = qword_10081D5A8;
    v47 = v21;
    swift_retain(v22);
    if (v24 != -1)
      swift_once(&qword_10081D5A8, sub_10014FDFC);
    v25 = sub_10003CE9C(v5, (uint64_t)qword_100869E78);
    v26 = v51;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
    v28 = v49;
    v27(v49, v25, v5);
    v29 = v50;
    v27(v50, (uint64_t)v28, v5);
    State.init(wrappedValue:)(v23, v29, v5);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v5);
    v30 = sub_1000083D8(&qword_100831F48, (uint64_t (*)(uint64_t))&type metadata accessor for LowPowerModeMonitor, (uint64_t)&protocol conformance descriptor for LowPowerModeMonitor);
    *v10 = ObservedObject.init(wrappedValue:)(v54, v13, v30);
    v10[1] = v31;
    v32 = v52;
    v10[2] = v48;
    v10[3] = v32;
    v33 = v47;
    v10[4] = v18;
    v10[5] = v33;
    sub_100022BA4(v10[6], v10[7]);
    swift_release(v22);
    v10[6] = sub_1003D49BC;
    v10[7] = v22;
    v34 = v53;
    sub_10015164C((uint64_t)v10, v53);
    v35 = v56;
    sub_10004F8C8(v34, v56, type metadata accessor for MapHostingMirrorView);
    swift_storeEnumTagMultiPayload(v35, v55, 0);
    v36 = sub_1000083D8(&qword_100831F38, type metadata accessor for MapHostingMirrorView, (uint64_t)&unk_100626968);
    v37 = sub_1000083D8(&qword_100831F40, type metadata accessor for MirrorView, (uint64_t)&unk_100641EF0);
    _ConditionalContent<>.init(storage:)(v35, v59, v58, v36, v37);
    v38 = v34;
    v39 = type metadata accessor for MapHostingMirrorView;
  }
  else
  {
    v40 = v21;
    v41 = v52;
    sub_1004E8E74(v14, (uint64_t)v19, (uint64_t)v16, v18, (uint64_t)v40, (uint64_t)sub_1003D49BC, v22, v52);
    v42 = v56;
    sub_10004F8C8((uint64_t)v41, v56, type metadata accessor for MirrorView);
    swift_storeEnumTagMultiPayload(v42, v55, 1);
    v43 = sub_1000083D8(&qword_100831F38, type metadata accessor for MapHostingMirrorView, (uint64_t)&unk_100626968);
    v44 = sub_1000083D8(&qword_100831F40, type metadata accessor for MirrorView, (uint64_t)&unk_100641EF0);
    _ConditionalContent<>.init(storage:)(v42, v59, v58, v43, v44);
    v38 = (uint64_t)v41;
    v39 = type metadata accessor for MirrorView;
  }
  return sub_100011F54(v38, v39);
}

void sub_1003D30EC(void *a1)
{
  void *v1;
  void *v2;
  char v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  char v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  char v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  char v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;

  v2 = v1;
  v4 = sub_1003D34B8();
  v5 = objc_msgSend(v2, "view");
  v6 = v5;
  if ((v4 & 1) != 0)
  {
    if (v5)
    {
      v7 = objc_msgSend(v5, "leadingAnchor");
      goto LABEL_6;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (!v5)
    goto LABEL_23;
  v8 = objc_msgSend(v5, "safeAreaLayoutGuide");

  v7 = objc_msgSend(v8, "leadingAnchor");
  v6 = v8;
LABEL_6:
  v9 = v7;

  v10 = OBJC_IVAR___WOMirrorViewController____lazy_storage___canHostMapView;
  v11 = *((_BYTE *)v2 + OBJC_IVAR___WOMirrorViewController____lazy_storage___canHostMapView);
  v12 = objc_msgSend(v2, "view");
  v13 = v12;
  if ((v11 & 1) == 0)
  {
    if (v12)
    {
      v14 = objc_msgSend(v12, "safeAreaLayoutGuide");

      v15 = objc_msgSend(v14, "trailingAnchor");
      v13 = v14;
      goto LABEL_11;
    }
    goto LABEL_24;
  }
  if (!v12)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v15 = objc_msgSend(v12, "trailingAnchor");
LABEL_11:
  v36 = v15;

  v16 = *((_BYTE *)v2 + v10);
  v17 = objc_msgSend(v2, "view");
  v18 = v17;
  if ((v16 & 1) == 0)
  {
    if (v17)
    {
      v19 = v9;
      v20 = objc_msgSend(v17, "safeAreaLayoutGuide");

      v21 = objc_msgSend(v20, "topAnchor");
      v18 = v20;
      goto LABEL_16;
    }
    goto LABEL_26;
  }
  if (!v17)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v19 = v9;
  v21 = objc_msgSend(v17, "topAnchor");
LABEL_16:
  v22 = v21;

  v23 = *((_BYTE *)v2 + v10);
  v24 = objc_msgSend(v2, "view");
  v25 = v24;
  if ((v23 & 1) == 0)
  {
    if (v24)
    {
      v26 = objc_msgSend(v24, "safeAreaLayoutGuide");

      v27 = objc_msgSend(v26, "bottomAnchor");
      v25 = v26;
LABEL_21:
      v28 = v27;

      v29 = objc_msgSend(a1, "leadingAnchor");
      v30 = objc_msgSend(v29, "constraintEqualToAnchor:", v19);

      objc_msgSend(v30, "setActive:", 1);
      v31 = objc_msgSend(a1, "trailingAnchor");
      v32 = objc_msgSend(v31, "constraintEqualToAnchor:", v36);

      objc_msgSend(v32, "setActive:", 1);
      v33 = objc_msgSend(a1, "topAnchor");
      v34 = objc_msgSend(v33, "constraintEqualToAnchor:", v22);

      objc_msgSend(v34, "setActive:", 1);
      v35 = objc_msgSend(a1, "bottomAnchor");
      v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v28);

      objc_msgSend(v37, "setActive:", 1);
      return;
    }
    goto LABEL_28;
  }
  if (v24)
  {
    v27 = objc_msgSend(v24, "bottomAnchor");
    goto LABEL_21;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_1003D34B8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char v3;

  v1 = OBJC_IVAR___WOMirrorViewController____lazy_storage___canHostMapView;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR___WOMirrorViewController____lazy_storage___canHostMapView);
  if (v2 == 2)
  {
    v3 = sub_1003D3500(v0);
    *(_BYTE *)(v0 + v1) = v3 & 1;
  }
  else
  {
    v3 = v2 & 1;
  }
  return v3 & 1;
}

uint64_t sub_1003D3500(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;
  double v9;
  uint64_t IsRouteable;
  _QWORD v12[5];

  v2 = type metadata accessor for WorkoutFeatures(0);
  v12[3] = v2;
  v12[4] = sub_1000083D8(&qword_100831F28, (uint64_t (*)(uint64_t))&type metadata accessor for WorkoutFeatures, (uint64_t)&protocol conformance descriptor for WorkoutFeatures);
  v3 = sub_10004C480(v12);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, enum case for WorkoutFeatures.MapPageView(_:), v2);
  LOBYTE(v2) = isFeatureEnabled(_:)(v12);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v12);
  if ((v2 & 1) == 0)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR___WOMirrorViewController_dataLinkMonitor)
                 + OBJC_IVAR___WODataLinkMonitor_publisher);
  swift_retain(v4);
  v6 = MetricsPublisher.workoutStatePublisher.getter(v5);
  v7 = swift_release(v4);
  v8 = (void *)WorkoutStatePublisher.activityType.getter(v7);
  *(_QWORD *)&v9 = swift_release(v6).n128_u64[0];
  if (!v8)
    return 0;
  IsRouteable = _HKWorkoutActivityTypeIsRouteable(objc_msgSend(v8, "effectiveTypeIdentifier", v9), objc_msgSend(v8, "isIndoor"), objc_msgSend(v8, "swimmingLocationType"));

  return IsRouteable;
}

void sub_1003D3640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  __n128 v15;
  uint64_t v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  NSString v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  NSString v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  __n128 v36;
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  uint64_t v40;
  NSString v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  _QWORD aBlock[5];
  uint64_t v53;

  v4 = type metadata accessor for Locale(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0, v5);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x800000010069DDE0, v9);
  static Locale.current.getter(v12);
  String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v7, 0, 0, 256);
  v14 = v13;
  v16 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x800000010069DE00, v15);
  static Locale.current.getter(v16);
  String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v7, 0, 0, 256);
  v18 = v17;
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14, v20, v21, v22, v23, v24, v25, v26);
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18, v28, v29, v30, v31, v32, v33, v34);
  v35 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v19, v27, 1);

  v37 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001FLL, 0x800000010069DE20, v36);
  static Locale.current.getter(v37);
  String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v7, 0, 0, 256);
  v39 = v38;
  v40 = swift_allocObject(&unk_10079D510, 32, 7);
  *(_QWORD *)(v40 + 16) = a1;
  *(_QWORD *)(v40 + 24) = a2;
  swift_retain(a2);
  v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v39, v42, v43, v44, v45, v46, v47, v48);
  aBlock[4] = sub_10003A294;
  v53 = v40;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000277E8;
  aBlock[3] = &unk_10079D528;
  v49 = _Block_copy(aBlock);
  swift_release(v53);
  v50 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v41, 0, v49);
  _Block_release(v49);

  objc_msgSend(v35, "addAction:", v50);
  objc_msgSend(v51, "presentViewController:animated:completion:", v35, 1, 0);

}

id sub_1003D39F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MirrorViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MirrorViewController()
{
  return objc_opt_self(WOMirrorViewController);
}

uint64_t sub_1003D3AA0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10063AA60);
  v2 = swift_getKeyPath(&unk_10063AA88);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_1003D3B10(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  char v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  double v23;
  void (*isa)(char *, uint64_t);
  uint64_t v25;
  NSObject *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  NSObject **v30;
  NSObject *v31;
  uint64_t v32;
  NSObject *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  NSObject **v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD v43[2];
  char *v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  _BYTE v48[16];

  v2 = type metadata accessor for Logger(0);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  __chkstk_darwin(v2);
  v44 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)v43 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(NSObject **)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v43 - v12;
  v14 = type metadata accessor for DispatchPredicate(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (_QWORD *)((char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  *v17 = static OS_dispatch_queue.main.getter(v18);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  v19 = _dispatchPreconditionTest(_:)(v17);
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v19 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v15 + 1, 1);
LABEL_9:
    v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v8);
    specialized Array._endMutation()(v42);
    swift_endAccess(&v47);
    goto LABEL_12;
  }
  v22 = static Date.now.getter(v21);
  dispatch thunk of WorkoutNotification.createdAt.getter(v22);
  v23 = Date.timeIntervalSince(_:)(v10);
  isa = (void (*)(char *, uint64_t))v8[1].isa;
  isa(v10, v7);
  v25 = ((uint64_t (*)(char *, uint64_t))isa)(v13, v7);
  if (v23 < 30.0)
  {
    static WOLog.dataLink.getter(v25);
    v26 = a1;
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      v30 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v29 = 138412290;
      v47 = v26;
      v31 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v29 + 4);
      *v30 = v26;

      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Enqueue workout notification: %@", v29, 0xCu);
      v32 = sub_100047110(&qword_10081E648);
      swift_arrayDestroy(v30, 1, v32);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }
    else
    {

      v27 = v26;
    }
    v40 = v43[1];

    (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v46);
    v41 = (_QWORD *)(v40 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_pendingNotifications);
    swift_beginAccess(v40 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_pendingNotifications, &v47, 33, 0);
    v8 = v26;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
    v15 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v20 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v15 < v20 >> 1)
      goto LABEL_9;
    goto LABEL_14;
  }
  static WOLog.dataLink.getter(v25);
  v33 = a1;
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.default.getter(v34);
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc(12, -1);
    v37 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v36 = 138412290;
    v47 = v33;
    v38 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v36 + 4);
    *v37 = v33;

    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Dropping workout notification (TTL expired): %@", v36, 0xCu);
    v39 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v37, 1, v39);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v36, -1, -1);
  }
  else
  {

    v34 = v33;
  }

  (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v46);
LABEL_12:
  sub_1003D3FC8();
}

void sub_1003D3FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  id *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD *v24;
  id *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  id *v30;
  void *v31;
  double v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void **aBlock;
  _QWORD v48[4];
  uint64_t v49;
  char v50[24];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char **)((char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  *v9 = static OS_dispatch_queue.main.getter(v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v11 = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_10063AA60);
    v13 = swift_getKeyPath(&unk_10063AA88);
    static Published.subscript.getter(&aBlock, v1, KeyPath, v13);
    swift_release(KeyPath);
    swift_release(v13);
    v14 = aBlock;

    if (v14)
      return;
    v11 = v1 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_pendingNotifications;
    swift_beginAccess(v1 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_pendingNotifications, v50, 0, 0);
    v6 = *(_QWORD *)v11;
    if (!(*(_QWORD *)v11 >> 62))
    {
      if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
        return;
LABEL_5:
      swift_beginAccess(v11, &aBlock, 33, 0);
      v15 = *(_QWORD *)v11;
      if (*(_QWORD *)v11 >> 62)
      {
        if (v15 < 0)
          v39 = *(_QWORD *)v11;
        else
          v39 = v15 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)v11);
        v40 = _CocoaArrayWrapper.endIndex.getter(v39);
        swift_bridgeObjectRelease(v15);
        if (v40)
        {
LABEL_7:
          v15 = *(_QWORD *)v11;
          if (!(*(_QWORD *)v11 >> 62))
          {
            v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v16)
              goto LABEL_9;
            goto LABEL_34;
          }
LABEL_30:
          if (v15 < 0)
            v41 = v15;
          else
            v41 = v15 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v15);
          v16 = _CocoaArrayWrapper.endIndex.getter(v41);
          swift_bridgeObjectRelease(v15);
          if (v16)
          {
LABEL_9:
            if ((v15 & 0xC000000000000001) == 0)
            {
              if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_37;
              }
              v17 = (id *)*(id *)(v15 + 32);
LABEL_12:
              v15 = (uint64_t)v17;
              v16 = *(_QWORD *)v11;
              if (!(*(_QWORD *)v11 >> 62))
              {
                if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
LABEL_14:
                  sub_10011F82C(0, 1);
                  v18 = swift_endAccess(&aBlock);
                  static WOLog.dataLink.getter(v18);
                  v19 = (id *)(id)v15;
                  v20 = Logger.logObject.getter(v19);
                  v21 = static os_log_type_t.default.getter(v20);
                  if (os_log_type_enabled(v20, v21))
                  {
                    v46 = v2;
                    v22 = (uint8_t *)swift_slowAlloc(12, -1);
                    v23 = swift_slowAlloc(8, -1);
                    v45 = v3;
                    v24 = (_QWORD *)v23;
                    v44 = v5;
                    *(_DWORD *)v22 = 138412290;
                    aBlock = v19;
                    v25 = v19;
                    v5 = v44;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v48, v22 + 4);
                    *v24 = v19;

                    v2 = v46;
                    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Display workout notification: %@", v22, 0xCu);
                    v26 = sub_100047110(&qword_10081E648);
                    swift_arrayDestroy(v24, 1, v26);
                    v27 = v24;
                    v3 = v45;
                    swift_slowDealloc(v27, -1, -1);
                    swift_slowDealloc(v22, -1, -1);

                  }
                  else
                  {

                  }
                  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
                  v28 = swift_getKeyPath(&unk_10063AA60);
                  v29 = swift_getKeyPath(&unk_10063AA88);
                  aBlock = v19;
                  v30 = v19;
                  swift_retain(v1);
                  static Published.subscript.setter(&aBlock, v1, v28, v29);
                  v31 = (void *)objc_opt_self(NSTimer);
                  v32 = dispatch thunk of WorkoutNotification.displayDuration.getter();
                  v33 = swift_allocObject(&unk_10079D4C0, 24, 7);
                  swift_weakInit(v33 + 16, v1);
                  v48[3] = sub_1003D496C;
                  v49 = v33;
                  aBlock = _NSConcreteStackBlock;
                  v48[0] = 1107296256;
                  v48[1] = sub_1000277E8;
                  v48[2] = &unk_10079D4D8;
                  v34 = _Block_copy(&aBlock);
                  swift_release(v49);
                  v35 = objc_msgSend(v31, "scheduledTimerWithTimeInterval:repeats:block:", 0, v34, v32);

                  _Block_release(v34);
                  v36 = *(void **)(v1
                                 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_notificationDismissalTimer);
                  *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_notificationDismissalTimer) = v35;

                  return;
                }
LABEL_41:
                __break(1u);
                return;
              }
LABEL_37:
              if (v16 < 0)
                v42 = v16;
              else
                v42 = v16 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v16);
              v43 = _CocoaArrayWrapper.endIndex.getter(v42);
              swift_bridgeObjectRelease(v16);
              if (v43)
                goto LABEL_14;
              goto LABEL_41;
            }
LABEL_35:
            v17 = (id *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
            goto LABEL_12;
          }
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
      }
      else if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_7;
      }
      __break(1u);
      goto LABEL_30;
    }
  }
  else
  {
    __break(1u);
  }
  if (v6 < 0)
    v37 = v6;
  else
    v37 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v38 = _CocoaArrayWrapper.endIndex.getter(v37);
  swift_bridgeObjectRelease(v6);
  if (v38)
    goto LABEL_5;
}

void sub_1003D452C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t Strong;
  uint64_t v8;
  __n128 v9;
  char v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v8 = Strong;
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    *v6 = static OS_dispatch_queue.main.getter(v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
    v10 = _dispatchPreconditionTest(_:)(v6);
    (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
    if ((v10 & 1) != 0)
    {
      KeyPath = swift_getKeyPath(&unk_10063AA60);
      v12 = swift_getKeyPath(&unk_10063AA88);
      v14 = 0;
      swift_retain(v8);
      v13 = static Published.subscript.setter(&v14, v8, KeyPath, v12);
      sub_1003D3FC8(v13);
      swift_release(v8);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1003D4674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  SEL v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v1 = v0 + OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter__notification;
  v2 = sub_100047110(&qword_100831F20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0+ OBJC_IVAR____TtC10FitnessApp25WorkoutNotificationCenter_pendingNotifications), v3, v4, v5, v6, v7, v8, v9);

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003D46E8()
{
  return type metadata accessor for WorkoutNotificationCenter(0);
}

uint64_t type metadata accessor for WorkoutNotificationCenter(uint64_t a1)
{
  uint64_t result;

  result = qword_100831DF8;
  if (!qword_100831DF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutNotificationCenter);
  return result;
}

void sub_1003D472C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_1003D47BC(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = "\b";
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_1003D47BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100831E08)
  {
    v2 = sub_100007050((uint64_t *)&unk_100831E10);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100831E08);
  }
}

uint64_t sub_1003D4814@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for WorkoutNotificationCenter(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003D4850@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10063AA60);
  v5 = swift_getKeyPath(&unk_10063AA88);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1003D48D0(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10063AA60);
  v5 = swift_getKeyPath(&unk_10063AA88);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t sub_1003D4948()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003D496C(uint64_t a1)
{
  uint64_t v1;

  sub_1003D452C(a1, v1);
}

uint64_t sub_1003D4974()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003D4998()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003D49BC()
{
  uint64_t v0;

  sub_100341080(v0);
}

uint64_t sub_1003D49D4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003D49F8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1003D4A2C()
{
  uint64_t v0;

  sub_1003D2A84(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_1003D4A8C(CHWorkoutDetailHeartRateTableViewCell *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  Class isa;

  v3 = objc_msgSend(v1, "layer");
  v4 = objc_opt_self(CAGradientLayer);
  v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
  if (v5)
  {
    v13 = v5;
    if (a1)
    {
      v14 = *(_QWORD *)a1->cellPadding;
      if (v14)
      {
        specialized ContiguousArray.reserveCapacity(_:)(v14);
        sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
        v15 = 0;
        do
        {
          v16 = v15 + 1;
          v17 = NSNumber.init(value:)(*((double *)&a1[1].super.super.super.super.isa + v15));
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
          v18 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
          v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v17);
          specialized ContiguousArray._endMutation()(v19);
          v15 = v16;
        }
        while (v14 != v16);
      }
      swift_bridgeObjectRelease(a1, v6, v7, v8, v9, v10, v11, v12);
      sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(&_swiftEmptyArrayStorage, v20, v21, v22, v23, v24, v25, v26);
      objc_msgSend(v13, "setLocations:", isa);
    }
    else
    {
      isa = 0;
      objc_msgSend(v5, "setLocations:", 0);
    }

  }
  else
  {

    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001CLL, 0x800000010069DF00, "FitnessApp/WorkoutGradientView.swift", 36, 2, 19, 0);
    __break(1u);
  }
}

id sub_1003D4D1C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutGradientView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutGradientView()
{
  return objc_opt_self(_TtC10FitnessApp19WorkoutGradientView);
}

uint64_t sub_1003D4D6C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_100008398(v7, qword_10086A850);
  sub_10003CE9C(v7, (uint64_t)qword_10086A850);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x800000010069DF20);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v6, v2);
}

uint64_t sub_1003D4E7C(char *a1, char *a2)
{
  return sub_100390A2C(*a1, *a2);
}

unint64_t sub_1003D4E8C()
{
  unint64_t result;

  result = qword_100831F90;
  if (!qword_100831F90)
  {
    result = swift_getWitnessTable(&unk_10063AAE0, &type metadata for WorkoutExtreme);
    atomic_store(result, (unint64_t *)&qword_100831F90);
  }
  return result;
}

Swift::Int sub_1003D4ED0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  if (v1)
    v2 = 0x747365776F6C73;
  else
    v2 = 0x74736574736166;
  String.hash(into:)(v4, v2, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1003D4F44(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 0x747365776F6C73;
  else
    v2 = 0x74736574736166;
  String.hash(into:)(a1, v2, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

Swift::Int sub_1003D4F8C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  if (v2)
    v3 = 0x747365776F6C73;
  else
    v3 = 0x74736574736166;
  String.hash(into:)(v5, v3, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1003D4FFC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100782D68, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1003D5058(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x74736574736166;
  if (*v1)
    v2 = 0x747365776F6C73;
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

unint64_t sub_1003D5094()
{
  unint64_t result;

  result = qword_100831F98;
  if (!qword_100831F98)
  {
    result = swift_getWitnessTable(&unk_10063ABC0, &type metadata for WorkoutExtreme);
    atomic_store(result, (unint64_t *)&qword_100831F98);
  }
  return result;
}

unint64_t sub_1003D50DC()
{
  unint64_t result;

  result = qword_100831FA0;
  if (!qword_100831FA0)
  {
    result = swift_getWitnessTable(&unk_10063ABF8, &type metadata for WorkoutExtreme);
    atomic_store(result, (unint64_t *)&qword_100831FA0);
  }
  return result;
}

unint64_t sub_1003D5124()
{
  unint64_t result;

  result = qword_100831FA8;
  if (!qword_100831FA8)
  {
    result = swift_getWitnessTable(&unk_10063AB48, &type metadata for WorkoutExtreme);
    atomic_store(result, (unint64_t *)&qword_100831FA8);
  }
  return result;
}

unint64_t sub_1003D516C()
{
  unint64_t result;

  result = qword_100831FB0;
  if (!qword_100831FB0)
  {
    result = swift_getWitnessTable(&unk_10063AC28, &type metadata for WorkoutExtreme);
    atomic_store(result, (unint64_t *)&qword_100831FB0);
  }
  return result;
}

unint64_t sub_1003D51B4()
{
  unint64_t result;

  result = qword_100831FB8;
  if (!qword_100831FB8)
  {
    result = swift_getWitnessTable(&unk_10063AC50, &type metadata for WorkoutExtreme);
    atomic_store(result, (unint64_t *)&qword_100831FB8);
  }
  return result;
}

unint64_t sub_1003D5200()
{
  unint64_t result;

  result = qword_100831FC0;
  if (!qword_100831FC0)
  {
    result = swift_getWitnessTable(&unk_10063ACD0, &type metadata for WorkoutExtreme);
    atomic_store(result, (unint64_t *)&qword_100831FC0);
  }
  return result;
}

uint64_t sub_1003D5244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10081DCE0 != -1)
    swift_once(&qword_10081DCE0, sub_1003D4D6C);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_10003CE9C(v2, (uint64_t)qword_10086A850);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1003D52B4(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100385DC8();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

uint64_t sub_1003D52F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100385DC8();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1003D5330()
{
  unint64_t result;

  result = qword_100831FC8;
  if (!qword_100831FC8)
  {
    result = swift_getWitnessTable(&unk_10063AD10, &type metadata for WorkoutExtreme);
    atomic_store(result, (unint64_t *)&qword_100831FC8);
  }
  return result;
}

unint64_t sub_1003D5378()
{
  unint64_t result;

  result = qword_100831FD0;
  if (!qword_100831FD0)
  {
    result = swift_getWitnessTable(&unk_10063AD38, &type metadata for WorkoutExtreme);
    atomic_store(result, (unint64_t *)&qword_100831FD0);
  }
  return result;
}

unint64_t sub_1003D53C0()
{
  unint64_t result;

  result = qword_100831FD8;
  if (!qword_100831FD8)
  {
    result = swift_getWitnessTable(&unk_10063AB08, &type metadata for WorkoutExtreme);
    atomic_store(result, (unint64_t *)&qword_100831FD8);
  }
  return result;
}

uint64_t sub_1003D5408(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003D5200();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1003D5444()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100831FE0;
  if (!qword_100831FE0)
  {
    v1 = sub_100007050(&qword_100831FE8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100831FE0);
  }
  return result;
}

void sub_1003D5490(_QWORD *a1@<X8>)
{
  *a1 = &off_100782DB8;
}

uint64_t storeEnumTagSinglePayload for WorkoutExtreme(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003D54EC + 4 * byte_10063AAD9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003D5520 + 4 * asc_10063AAD4[v4]))();
}

uint64_t sub_1003D5520(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D5528(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003D5530);
  return result;
}

uint64_t sub_1003D553C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003D5544);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003D5548(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D5550(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutExtreme()
{
  return &type metadata for WorkoutExtreme;
}

unint64_t sub_1003D556C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double (*v16)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v17;
  __n128 v18;
  uint64_t v20;

  v0 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v0);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100831FF0);
  v11 = *(_QWORD *)(sub_100047110(&qword_100831FF8) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v10, v14 + 2 * v12, v13 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100620BC0;
  *(_BYTE *)(v15 + v14) = 0;
  LocalizedStringResource.init(stringLiteral:)(0x74736574736146, 0xE700000000000000);
  v16 = *(double (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v17.n128_f64[0] = v16(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x6C69662E65726168, 0xE90000000000006CLL, 0, 0, v17);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v15 + v14 + v12) = 1;
  LocalizedStringResource.init(stringLiteral:)(0x747365776F6C53, 0xE700000000000000);
  v18.n128_f64[0] = v16(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x6573696F74726F74, 0xED00006C6C69662ELL, 0, 0, v18);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  return sub_100436A38(v15);
}

uint64_t _s7SectionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003D5800 + 4 * byte_10063AD91[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1003D5834 + 4 * asc_10063AD8C[v4]))();
}

uint64_t sub_1003D5834(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D583C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003D5844);
  return result;
}

uint64_t sub_1003D5850(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003D5858);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1003D585C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D5864(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7SectionOMa()
{
  return &_s7SectionON;
}

unint64_t sub_1003D5884()
{
  unint64_t result;

  result = qword_100832000;
  if (!qword_100832000)
  {
    result = swift_getWitnessTable(&unk_10063ADE0, &_s7SectionON);
    atomic_store(result, (unint64_t *)&qword_100832000);
  }
  return result;
}

uint64_t sub_1003D58C8()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  return v3;
}

uint64_t destroy for CardHeaderView(_QWORD *a1)
{
  uint64_t result;

  result = _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  if (a1[8])
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 5);
  return result;
}

uint64_t initializeWithCopy for CardHeaderView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = (_OWORD *)(a1 + 40);
  v6 = (_OWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 64);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 56);
    *v5 = *v6;
    *(_OWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for CardHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  sub_1000F1A58((_QWORD *)a1, (_QWORD *)a2);
  v4 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 64) = v4;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 40);
    v6 = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v5;
    *(_OWORD *)(a1 + 56) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(a1 + 40));
    goto LABEL_7;
  }
  sub_1000F1A58((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
LABEL_8:
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

__n128 initializeWithTake for CardHeaderView(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for CardHeaderView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(a1 + 40));
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for CardHeaderView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 81))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardHeaderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardHeaderView()
{
  return &type metadata for CardHeaderView;
}

uint64_t sub_1003D5CA4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B68EC, 1);
}

void sub_1003D5CB4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t KeyPath;
  void (**v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (**v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  char v76;
  uint64_t v77;
  double v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  SEL v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  double v99;
  uint64_t v100;
  uint64_t v101;
  double v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  const char *v120;
  CHWorkoutDetailHeartRateTableViewCell *v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  unint64_t v128;
  uint64_t v129;
  SEL v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  __n128 v149;
  uint64_t v150;
  uint64_t v151;
  double v152;
  uint64_t v153;
  unint64_t v154;
  id v155;
  void *v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  unint64_t v166;
  uint64_t v167;
  void (*v168)(char *, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  const char *v184;
  CHWorkoutDetailHeartRateTableViewCell *v185;
  id v186;
  id v187;
  id v188;
  id v189;
  id v190;
  id v191;
  char *v192;
  SEL v193;
  id v194;
  id v195;
  id v196;
  id v197;
  id v198;
  id v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void (**v234)(char *, char *, uint64_t);
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  __int128 v252;
  uint64_t v253;
  unint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char v257;
  __int128 v258;
  uint64_t v259;
  uint64_t v260;
  char v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  double v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char v276;

  v227 = a1;
  v225 = a2;
  v217 = type metadata accessor for AccessibilityTraits(0);
  v215 = *(_QWORD *)(v217 - 8);
  __chkstk_darwin(v217);
  v216 = (char *)&v210 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = sub_100047110(&qword_100832010);
  v210 = *(_QWORD *)(v212 - 8);
  __chkstk_darwin(v212);
  v221 = (char *)&v210 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = sub_100047110(&qword_100832018);
  __chkstk_darwin(v211);
  v213 = (char *)&v210 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = sub_100047110(&qword_100832020);
  v223 = *(_QWORD *)(v246 - 8);
  __chkstk_darwin(v246);
  v214 = (char *)&v210 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v220 = (char *)&v210 - v7;
  __chkstk_darwin(v8);
  v219 = (char *)&v210 - v9;
  __chkstk_darwin(v10);
  v218 = (uint64_t)&v210 - v11;
  v12 = sub_100047110(&qword_100832028);
  __chkstk_darwin(v12);
  v224 = (uint64_t)&v210 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v247 = (char *)&v210 - v15;
  v242 = sub_100047110(&qword_100832030);
  v240 = *(_QWORD *)(v242 - 8);
  __chkstk_darwin(v242);
  v236 = (char *)&v210 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v237 = sub_100047110(&qword_100832038);
  __chkstk_darwin(v237);
  v239 = (char *)&v210 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = sub_100047110(&qword_100832040);
  __chkstk_darwin(v238);
  v241 = (uint64_t)&v210 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v244 = sub_100047110(&qword_100832048);
  __chkstk_darwin(v244);
  v245 = (char *)&v210 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_100832050);
  __chkstk_darwin(v20);
  v222 = (uint64_t)&v210 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v243 = (char *)&v210 - v23;
  __chkstk_darwin(v24);
  v250 = (uint64_t)&v210 - v25;
  *(_QWORD *)&v252 = type metadata accessor for BlendMode(0);
  v232 = *(_QWORD *)(v252 - 8);
  __chkstk_darwin(v252);
  v251 = (char *)&v210 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = sub_100047110(&qword_100832058);
  v234 = *(void (***)(char *, char *, uint64_t))(v235 - 8);
  __chkstk_darwin(v235);
  v28 = (char *)&v210 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = sub_100047110(&qword_100832060);
  __chkstk_darwin(v228);
  v30 = (char *)&v210 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = sub_100047110(&qword_100832068);
  __chkstk_darwin(v229);
  v226 = (uint64_t)&v210 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = sub_100047110(&qword_100832070);
  __chkstk_darwin(v233);
  v33 = (char *)&v210 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = sub_100047110(&qword_100832078);
  __chkstk_darwin(v231);
  v230 = (uint64_t)&v210 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_100047110(&qword_100832080);
  __chkstk_darwin(v35);
  v249 = (uint64_t)&v210 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v248 = (uint64_t)&v210 - v38;
  v39 = sub_1003D6E00();
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v46 = static Edge.Set.all.getter(v39);
  v264 = v39;
  v265 = v41;
  v266 = v43;
  v267 = v45;
  LOBYTE(v268) = v46;
  v269 = 0;
  v270 = 0;
  v271 = 0;
  v272 = 3.0;
  LOBYTE(v273) = 0;
  v47 = static Font.Weight.semibold.getter(v46);
  v48 = sub_100047110(&qword_100832088);
  v49 = sub_1000F4518(&qword_100832090, &qword_100832088, (void (*)(void))sub_1003D7420);
  View.fontWeight(_:)(*(_QWORD *)&v47, 0, v48, v49);
  v50 = sub_100182728(v39, v41, v43, v45);
  v51 = static Font.body.getter(v50);
  KeyPath = swift_getKeyPath(&unk_10063AE90);
  v53 = v234;
  v54 = v235;
  v234[2](v30, v28, v235);
  v55 = (uint64_t *)&v30[*(int *)(v228 + 36)];
  *v55 = KeyPath;
  v55[1] = v51;
  v56 = ((uint64_t (*)(char *, uint64_t))v53[1])(v28, v54);
  LODWORD(v51) = static HierarchicalShapeStyle.primary.getter(v56);
  v57 = v226;
  sub_100021CC0((uint64_t)v30, v226, &qword_100832060);
  *(_DWORD *)(v57 + *(int *)(v229 + 36)) = v51;
  sub_10001BE90((uint64_t)v30, &qword_100832060);
  v58 = v232;
  v59 = *(void (***)(char *, char *, uint64_t))(v232 + 104);
  v60 = v251;
  LODWORD(v235) = enum case for BlendMode.plusLighter(_:);
  v61 = v252;
  v234 = v59;
  ((void (*)(char *))v59)(v251);
  v62 = &v33[*(int *)(v233 + 36)];
  v233 = *(_QWORD *)(v58 + 16);
  ((void (*)(char *, char *, uint64_t))v233)(v62, v60, v61);
  sub_100021CC0(v57, (uint64_t)v33, &qword_100832068);
  v232 = *(_QWORD *)(v58 + 8);
  ((void (*)(char *, uint64_t))v232)(v60, v61);
  sub_10001BE90(v57, &qword_100832068);
  v63 = v230;
  sub_100021CC0((uint64_t)v33, v230, &qword_100832070);
  v64 = v231;
  *(_BYTE *)(v63 + *(int *)(v231 + 36)) = 1;
  v65 = (uint64_t)v33;
  v66 = v227;
  sub_10001BE90(v65, &qword_100832070);
  v67 = sub_1003D7484();
  v68 = v249;
  View.accessibilityHidden(_:)(1, v64, v67);
  sub_10001BE90(v63, &qword_100832078);
  sub_100045AD4(v68, v248, &qword_100832080);
  v264 = (uint64_t)sub_1003D6FE0();
  v265 = v69;
  v70 = sub_100038CA0();
  v71 = Text.init<A>(_:)(&v264, &type metadata for String, v70);
  v73 = v72;
  v75 = v74;
  LOBYTE(v30) = v76 & 1;
  v77 = swift_getKeyPath(&unk_10063AEC0);
  LOBYTE(v64) = static Edge.Set.all.getter(v77);
  v78 = EdgeInsets.init(_all:)(0.0);
  v264 = v71;
  v265 = v73;
  LOBYTE(v266) = (_BYTE)v30;
  v267 = (uint64_t)v75;
  v268 = v77;
  v269 = 1;
  LOBYTE(v270) = 0;
  LOBYTE(v271) = v64;
  v272 = v78;
  v273 = v79;
  v274 = v80;
  v275 = v81;
  v276 = 0;
  v83 = static Font.Weight.semibold.getter(v82);
  v84 = sub_100047110(&qword_1008320C0);
  v85 = sub_1000F4518(&qword_1008320C8, &qword_1008320C0, (void (*)(void))sub_1001C3060);
  v86 = v236;
  View.fontWeight(_:)(*(_QWORD *)&v83, 0, v84, v85);
  sub_1000E4458(v71, v73, (char)v30);
  swift_release(v77);
  swift_bridgeObjectRelease(v75, v87, v88, v89, v90, v91, v92, v93);
  v94 = v66[3];
  v95 = v66[4];
  sub_100016804(v66, v94);
  v96 = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 16))(v94, v95);
  if (v98 == 3 && v96 == 5 && !v97)
  {
    v100 = static Font.body.getter(v99);
    v101 = Font.feature(_:)(&off_100782DE0, v100);
    swift_release(v100);
  }
  else
  {
    sub_1000EB41C(v96, v97, v98);
    v101 = static Font.body.getter(v102);
  }
  v103 = swift_getKeyPath(&unk_10063AE90);
  v104 = v240;
  v105 = (uint64_t)v239;
  v106 = v242;
  (*(void (**)(char *, char *, uint64_t))(v240 + 16))(v239, v86, v242);
  v107 = (uint64_t *)(v105 + *(int *)(v237 + 36));
  *v107 = v103;
  v107[1] = v101;
  v108 = (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v86, v106);
  v109 = static HierarchicalShapeStyle.primary.getter(v108);
  v110 = v241;
  sub_100021CC0(v105, v241, &qword_100832038);
  *(_DWORD *)(v110 + *(int *)(v238 + 36)) = v109;
  sub_10001BE90(v105, &qword_100832038);
  v111 = v251;
  v112 = v252;
  ((void (*)(char *, _QWORD, _QWORD))v234)(v251, v235, v252);
  v113 = v244;
  v114 = (uint64_t)v245;
  ((void (*)(char *, char *, uint64_t))v233)(&v245[*(int *)(v244 + 36)], v111, v112);
  sub_100021CC0(v110, v114, &qword_100832040);
  ((void (*)(char *, uint64_t))v232)(v111, v112);
  sub_10001BE90(v110, &qword_100832040);
  v115 = sub_100047110(&qword_100820020);
  v116 = swift_allocObject(v115, 80, 7);
  v252 = xmmword_100624A40;
  *(_OWORD *)(v116 + 16) = xmmword_100624A40;
  *(_QWORD *)(v116 + 32) = static FitnessAccessibilityIdentifier.SummaryView.base.getter();
  *(_QWORD *)(v116 + 40) = v117;
  *(_QWORD *)(v116 + 48) = sub_1003D6FE0();
  *(_QWORD *)(v116 + 56) = v118;
  *(_QWORD *)(v116 + 64) = 1954047316;
  *(_QWORD *)(v116 + 72) = 0xE400000000000000;
  v119 = static FitnessAccessibilityIdentifier.build(_:)(v116);
  v121 = (CHWorkoutDetailHeartRateTableViewCell *)v120;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v116, v120, v122, v123, v124, v125, v126, v127);
  v128 = sub_1003D7648();
  v129 = (uint64_t)v243;
  View.accessibilityIdentifier(_:)(v119, v121, v113, v128);
  swift_bridgeObjectRelease(v121, v130, v131, v132, v133, v134, v135, v136);
  sub_10001BE90(v114, &qword_100832048);
  sub_100045AD4(v129, v250, &qword_100832050);
  v137 = v66[3];
  v138 = v66[4];
  sub_100016804(v66, v137);
  LOBYTE(v119) = (*(uint64_t (**)(uint64_t, uint64_t))(v138 + 32))(v137, v138);
  sub_1000F4B28((uint64_t)v66, (uint64_t)&v264);
  v139 = (uint64_t)v247;
  v140 = v246;
  if ((v119 & 1) != 0)
    goto LABEL_11;
  v141 = v267;
  v142 = v268;
  sub_100016804(&v264, v267);
  v143 = (*(uint64_t (**)(uint64_t, uint64_t))(v142 + 16))(v141, v142);
  if (v145 == 3 && v143 <= 6 && ((1 << v143) & 0x43) != 0)
  {
    sub_1000EB41C(v143, v144, 3);
LABEL_11:
    sub_1000F4B64(&v264);
    v146 = 1;
LABEL_15:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v223 + 56))(v139, v146, 1, v140);
    v202 = v248;
    v203 = v249;
    sub_100021CC0(v248, v249, &qword_100832080);
    v204 = v250;
    v205 = v222;
    sub_100021CC0(v250, v222, &qword_100832050);
    v206 = v224;
    sub_100021CC0(v139, v224, &qword_100832028);
    v207 = v225;
    sub_100021CC0(v203, v225, &qword_100832080);
    v208 = (int *)sub_100047110(&qword_1008320E8);
    sub_100021CC0(v205, v207 + v208[12], &qword_100832050);
    v209 = v207 + v208[16];
    *(_QWORD *)v209 = 0;
    *(_BYTE *)(v209 + 8) = 0;
    sub_100021CC0(v206, v207 + v208[20], &qword_100832028);
    sub_10001BE90(v139, &qword_100832028);
    sub_10001BE90(v204, &qword_100832050);
    sub_10001BE90(v202, &qword_100832080);
    sub_10001BE90(v206, &qword_100832028);
    sub_10001BE90(v205, &qword_100832050);
    sub_10001BE90(v203, &qword_100832080);
    return;
  }
  sub_1000EB41C(v143, v144, v145);
  sub_1000F4B64(&v264);
  v147 = Image.init(_internalSystemName:)(0x2E6E6F7276656863);
  v148 = static Edge.Set.all.getter(v147);
  v150 = static Font.footnote.getter(v149);
  v151 = swift_getKeyPath(&unk_10063AE90);
  v255 = v147;
  LOBYTE(v256) = 1;
  v257 = v148;
  v258 = xmmword_10063AE10;
  v259 = 0;
  v260 = 0;
  v261 = 0;
  v262 = v151;
  v263 = v150;
  v152 = static Font.Weight.semibold.getter(v151);
  v153 = sub_100047110(&qword_1008320F0);
  v154 = sub_1003D781C();
  View.fontWeight(_:)(*(_QWORD *)&v152, 0, v153, v154);
  swift_release(v150);
  swift_release(v151);
  swift_release(v147);
  v155 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "keyColors");
  if (v155)
  {
    v156 = v155;
    v157 = objc_msgSend(v155, "nonGradientTextColor");

    if (v157)
    {
      v158 = Color.init(uiColor:)(v157);
      v159 = v210;
      v160 = (uint64_t)v213;
      v161 = v221;
      v162 = v212;
      (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v213, v221, v212);
      v163 = v211;
      *(_QWORD *)(v160 + *(int *)(v211 + 36)) = v158;
      v164 = (*(uint64_t (**)(char *, uint64_t))(v159 + 8))(v161, v162);
      v165 = v216;
      static AccessibilityTraits.isImage.getter(v164);
      v166 = sub_1003D7924();
      v167 = (uint64_t)v214;
      View.accessibilityRemoveTraits(_:)(v165, v163, v166);
      v168 = *(void (**)(char *, uint64_t))(v215 + 8);
      v169 = v217;
      v168(v165, v217);
      v170 = sub_10001BE90(v160, &qword_100832018);
      static AccessibilityTraits.isButton.getter(v170);
      v171 = (uint64_t)v220;
      ModifiedContent<>.accessibilityAddTraits(_:)(v165, v140);
      v168(v165, v169);
      sub_10001BE90(v167, &qword_100832020);
      v172 = swift_allocObject(v115, 80, 7);
      *(_OWORD *)(v172 + 16) = v252;
      *(_QWORD *)(v172 + 32) = static FitnessAccessibilityIdentifier.SummaryView.base.getter();
      *(_QWORD *)(v172 + 40) = v173;
      v253 = 0;
      v254 = 0xE000000000000000;
      v174 = v66[3];
      v175 = v66[4];
      sub_100016804(v66, v174);
      v176 = (*(uint64_t (**)(uint64_t, uint64_t))(v175 + 16))(v174, v175);
      v178 = v177;
      LOBYTE(v175) = v179;
      v255 = v176;
      v256 = v177;
      v257 = v179;
      _print_unlocked<A, B>(_:_:)(&v255, &v253, &type metadata for CardType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v180 = sub_1000EB41C(v176, v178, v175);
      v181 = v254;
      *(_QWORD *)(v172 + 48) = v253;
      *(_QWORD *)(v172 + 56) = v181;
      *(_QWORD *)(v172 + 64) = static FitnessAccessibilityIdentifier.SummaryView.editButton.getter(v180);
      *(_QWORD *)(v172 + 72) = v182;
      v183 = static FitnessAccessibilityIdentifier.build(_:)(v172);
      v185 = (CHWorkoutDetailHeartRateTableViewCell *)v184;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v172, v184, v186, v187, v188, v189, v190, v191);
      v192 = v219;
      ModifiedContent<>.accessibilityIdentifier(_:)(v183, v185, v140);
      swift_bridgeObjectRelease(v185, v193, v194, v195, v196, v197, v198, v199);
      sub_10001BE90(v171, &qword_100832020);
      v200 = (uint64_t)v192;
      v201 = v218;
      sub_100045AD4(v200, v218, &qword_100832020);
      sub_100045AD4(v201, v139, &qword_100832020);
      v146 = 0;
      goto LABEL_15;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1003D6E00()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0[3];
  v6 = v0[4];
  sub_100016804(v0, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  if (v9)
  {
    sub_1000EB41C(v7, v8, v9);
    return 0;
  }
  v10 = v0[3];
  v11 = v0[4];
  sub_100016804(v0, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  v14 = v13;
  LOBYTE(v11) = v15;
  v16 = sub_10054FEFC(v12, v13, v15);
  sub_1000EB41C(v12, v14, v11);
  if ((v16 - 1) < 2u)
    return 0;
  v18 = v1[3];
  v19 = v1[4];
  sub_100016804(v1, v18);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
  v22 = v21;
  LOBYTE(v18) = v23;
  LOBYTE(v19) = sub_10054FEFC(v20, v21, v23);
  sub_1000EB41C(v20, v22, v18);
  v24 = sub_10011E89C(v19);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v25);
  v26 = Image.init(_internalSystemName:)(v24);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
  swift_release(v26);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v27);
  v28 = LocalizedStringKey.init(stringInterpolation:)(v4);
  return Text.init(_:tableName:bundle:comment:)(v28);
}

id sub_1003D6FE0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t, uint64_t);
  void *v24;
  id v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  char v35;
  id result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  char v43;
  void *v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  _BYTE v53[40];

  v1 = v0;
  v2 = sub_100047110(&qword_1008200B8);
  __chkstk_darwin(v2);
  v4 = &v53[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for ActivityRingsCard(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v53[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = v0[3];
  v10 = v0[4];
  sub_100016804(v0, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  v13 = v12;
  LOBYTE(v10) = v14;
  v15 = sub_10054FEFC(v11, v12, v14);
  sub_1000EB41C(v11, v13, v10);
  if (v15 - 1 >= 2)
  {
    if (v15)
      goto LABEL_9;
    sub_1000252E0((uint64_t)v1, (uint64_t)v53);
    v21 = sub_100047110(&qword_1008200C0);
    v22 = swift_dynamicCast(v4, v53, v21, v5, 6);
    v23 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    if (!v22)
    {
      v23(v4, 1, 1, v5);
      sub_10001BE90((uint64_t)v4, &qword_1008200B8);
      v37 = v1[3];
      v38 = v1[4];
      sub_100016804(v1, v37);
      v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
      v41 = v40;
      v43 = v42;
      LOBYTE(v38) = sub_10054FEFC(v39, v40, v42);
      sub_1000EB41C(v39, v41, v43);
      return (id)sub_10011E43C(v38);
    }
    v23(v4, 0, 1, v5);
    sub_100321504((uint64_t)v4, (uint64_t)v8);
    v24 = *(void **)&v8[*(int *)(v5 + 36)];
    if (v24)
    {
      if (objc_msgSend(v24, "_isStandalonePhoneSummary"))
      {
LABEL_8:
        v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v26 = String._bridgeToObjectiveC()();
        v27 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, 0, 0);

        v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
LABEL_15:
        sub_100321548((uint64_t)v8);
        return (id)v28;
      }
    }
    else
    {
      result = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
      if (!result)
      {
        __break(1u);
        return result;
      }
      v44 = result;
      v45 = objc_msgSend(result, "isStandalonePhoneFitnessMode");

      if ((v45 & 1) != 0)
        goto LABEL_8;
    }
    v46 = v1[3];
    v47 = v1[4];
    sub_100016804(v1, v46);
    v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 16))(v46, v47);
    v50 = v49;
    LOBYTE(v46) = v51;
    LOBYTE(v47) = sub_10054FEFC(v48, v49, v51);
    sub_1000EB41C(v48, v50, v46);
    v28 = sub_10011E43C(v47);
    goto LABEL_15;
  }
  v16 = v1[3];
  v17 = v1[4];
  sub_100016804(v1, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  if (v20)
  {
    sub_1000EB41C(v18, v19, v20);
LABEL_9:
    v29 = v1[3];
    v30 = v1[4];
    sub_100016804(v1, v29);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
    v33 = v32;
    v35 = v34;
    LOBYTE(v30) = sub_10054FEFC(v31, v32, v34);
    sub_1000EB41C(v31, v33, v35);
    return (id)sub_10011E43C(v30);
  }
  return (id)sub_1005F0848(v18);
}

void sub_1003D73DC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;

  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = sub_100047110(&qword_100832008);
  sub_1003D5CB4(v2, a2 + *(int *)(v4 + 44));
}

unint64_t sub_1003D7420()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100832098;
  if (!qword_100832098)
  {
    v1 = sub_100007050(&qword_10082AAD8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100832098);
  }
  return result;
}

unint64_t sub_1003D7484()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008320A0;
  if (!qword_1008320A0)
  {
    v1 = sub_100007050(&qword_100832078);
    sub_1003D74F0();
    sub_1003AC01C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008320A0);
  }
  return result;
}

unint64_t sub_1003D74F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008320A8;
  if (!qword_1008320A8)
  {
    v1 = sub_100007050(&qword_100832070);
    sub_1003D76CC(&qword_1008320B0, &qword_100832068, (void (*)(void))sub_1003D7574);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008320A8);
  }
  return result;
}

unint64_t sub_1003D7574()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1008320B8;
  if (!qword_1008320B8)
  {
    v1 = sub_100007050(&qword_100832060);
    v2[0] = sub_100007050(&qword_100832088);
    v2[1] = sub_1000F4518(&qword_100832090, &qword_100832088, (void (*)(void))sub_1003D7420);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008320B8);
  }
  return result;
}

unint64_t sub_1003D7648()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008320D0;
  if (!qword_1008320D0)
  {
    v1 = sub_100007050(&qword_100832048);
    sub_1003D76CC(&qword_1008320D8, &qword_100832040, (void (*)(void))sub_1003D7750);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008320D0);
  }
  return result;
}

uint64_t sub_1003D76CC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100007050(a2);
    a3();
    sub_100028384(&qword_100820870, &qword_100820878, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1003D7750()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1008320E0;
  if (!qword_1008320E0)
  {
    v1 = sub_100007050(&qword_100832038);
    v2[0] = sub_100007050(&qword_1008320C0);
    v2[1] = sub_1000F4518(&qword_1008320C8, &qword_1008320C0, (void (*)(void))sub_1001C3060);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008320E0);
  }
  return result;
}

unint64_t sub_1003D781C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008320F8;
  if (!qword_1008320F8)
  {
    v1 = sub_100007050(&qword_1008320F0);
    sub_1000F4518(&qword_100832100, &qword_100832108, (void (*)(void))sub_1003D78B8);
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008320F8);
  }
  return result;
}

unint64_t sub_1003D78B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100832110;
  if (!qword_100832110)
  {
    v1 = sub_100007050(&qword_100832118);
    sub_1003AC01C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100832110);
  }
  return result;
}

unint64_t sub_1003D7924()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100832120;
  if (!qword_100832120)
  {
    v1 = sub_100007050(&qword_100832018);
    v2[0] = sub_100007050(&qword_1008320F0);
    v2[1] = sub_1003D781C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100832120);
  }
  return result;
}

uint64_t sub_1003D79D0()
{
  return sub_100028384(&qword_100832128, &qword_100832130, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

uint64_t sub_1003D79FC@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v25;
  int v26;
  int v27;

  v26 = a6;
  v27 = a7;
  v25 = a5;
  v13 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (int *)type metadata accessor for FriendsHighlightCard(0);
  v21 = a8 + v20[5];
  *(_OWORD *)v21 = xmmword_10063AEF0;
  *(_BYTE *)(v21 + 16) = 3;
  *(_BYTE *)(a8 + v20[6]) = 1;
  sub_10004D954(a1, (uint64_t)v15);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if ((_DWORD)v22 == 1)
  {
    UUID.init()(v22);
    sub_10004D914(a1);
    sub_10004D914((uint64_t)v15);
    v23 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  }
  else
  {
    sub_10004D914(a1);
    v23 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v23(v19, v15, v16);
  }
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v23)(a8, v19, v16);
  *(_BYTE *)(a8 + v20[7]) = a2 & 1;
  *(_BYTE *)(a8 + v20[8]) = a3 & 1;
  *(_QWORD *)(a8 + v20[9]) = a4;
  *(_QWORD *)(a8 + v20[10]) = v25;
  *(_BYTE *)(a8 + v20[11]) = v26 & 1;
  *(_BYTE *)(a8 + v20[12]) = v27 & 1;
  return result;
}

Swift::Int sub_1003D7BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  uint64_t v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  int *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  int64_t v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  const char *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD v57[4];
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;

  v1 = type metadata accessor for ActivitySharingHighlightViewModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init()(v57);
  v55 = type metadata accessor for FriendsHighlightCard(0);
  v56 = v0;
  v9 = v0 + *(int *)(v55 + 20);
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(unsigned __int8 *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, *(_BYTE *)(v9 + 16));
  sub_10054FFE4(v10, v11, v12);
  v14 = v13;
  String.hash(into:)(v57, v15, v13);
  swift_bridgeObjectRelease(v14, v16, v17, v18, v19, v20, v21, v22);
  if (!v12 || v12 == 2)
  {
    Hasher._combine(_:)(v10);
  }
  else
  {
    if (v12 == 1)
    {
      String.hash(into:)(v57, v10, v11);
      v23 = v10;
      v24 = v11;
      v25 = 1;
    }
    else
    {
      v23 = v10;
      v24 = v11;
      v25 = v12;
    }
    sub_1000EB41C(v23, v24, v25);
  }
  v27 = (int *)v55;
  v26 = v56;
  Hasher._combine(_:)(*(unsigned __int8 *)(v56 + *(int *)(v55 + 24)));
  Hasher._combine(_:)(*(_BYTE *)(v26 + v27[7]));
  v28 = *(CHWorkoutDetailHeartRateTableViewCell **)(v26 + v27[9]);
  v29 = *(_QWORD *)v28->cellPadding;
  v30 = &_swiftEmptyArrayStorage;
  if (v29)
  {
    *(_QWORD *)&v59 = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v28);
    sub_1001216CC(0, v29, 0);
    v31 = *(unsigned __int8 *)(v2 + 80);
    v54 = v28;
    v32 = (uint64_t)v28 + ((v31 + 32) & ~v31);
    v33 = *(_QWORD *)(v2 + 72);
    do
    {
      sub_1003D8228(v32, (uint64_t)v4);
      v34 = type metadata accessor for ActivitySharingHighlight(0);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v4[*(int *)(v34 + 20)], v5);
      sub_1001079C4((uint64_t)v4);
      v30 = (CHWorkoutDetailHeartRateTableViewCell *)v59;
      if ((swift_isUniquelyReferenced_nonNull_native(v59) & 1) == 0)
      {
        sub_1001216CC(0, *(_QWORD *)v30->cellPadding + 1, 1);
        v30 = (CHWorkoutDetailHeartRateTableViewCell *)v59;
      }
      v36 = *(_QWORD *)v30->cellPadding;
      v35 = *(_QWORD *)v30->cellInset;
      if (v36 >= v35 >> 1)
      {
        sub_1001216CC(v35 > 1, v36 + 1, 1);
        v30 = (CHWorkoutDetailHeartRateTableViewCell *)v59;
      }
      *(_QWORD *)v30->cellPadding = v36 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v30+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v36, v8, v5);
      *(_QWORD *)&v59 = v30;
      v32 += v33;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease(v54, v37, v38, v39, v40, v41, v42, v43);
    v27 = (int *)v55;
    v26 = v56;
  }
  sub_10012493C((uint64_t)v57, (uint64_t)v30);
  swift_bridgeObjectRelease(v30, v44, v45, v46, v47, v48, v49, v50);
  v51 = *(void **)(v26 + v27[10]);
  if (v51)
  {
    Hasher._combine(_:)(1u);
    v52 = v51;
    NSObject.hash(into:)(v57);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*(_BYTE *)(v26 + v27[11]));
  Hasher._combine(_:)(*(_BYTE *)(v26 + v27[12]));
  v61 = v57[2];
  v62 = v57[3];
  v63 = v58;
  v59 = v57[0];
  v60 = v57[1];
  return Hasher.finalize()();
}

uint64_t sub_1003D7F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  char v11;
  Swift::String v12;
  Swift::String v13;
  unint64_t v14;
  Swift::String v15;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  Swift::String v24;
  __n128 v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  int64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  const char *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  const char *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  Swift::String v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  __int128 v62;
  char v63;
  _QWORD v64[2];

  v1 = type metadata accessor for ActivitySharingHighlightViewModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64[0] = 0;
  v64[1] = 0xE000000000000000;
  v9 = (int *)type metadata accessor for FriendsHighlightCard(0);
  v10 = (__int128 *)(v0 + v9[5]);
  v11 = *((_BYTE *)v10 + 16);
  v62 = *v10;
  v63 = v11;
  _print_unlocked<A, B>(_:_:)(&v62, v64, &type metadata for CardType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v12._countAndFlagsBits = 58;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  LOBYTE(v62) = *(_BYTE *)(v0 + v9[6]);
  _print_unlocked<A, B>(_:_:)(&v62, v64, &type metadata for CardSize, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v13._countAndFlagsBits = 58;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14 = sub_10027F100();
  v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v5, v14);
  object = (CHWorkoutDetailHeartRateTableViewCell *)v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(object, v17, v18, v19, v20, v21, v22, v23);
  v24._countAndFlagsBits = 540945696;
  v24._object = (void *)0xE400000000000000;
  String.append(_:)(v24);
  v26 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + v9[9]);
  v27 = *(_QWORD *)v26->cellPadding;
  v28 = &_swiftEmptyArrayStorage;
  if (v27)
  {
    *(_QWORD *)&v62 = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v26);
    sub_1001216CC(0, v27, 0);
    v29 = *(unsigned __int8 *)(v2 + 80);
    v61 = v26;
    v30 = (uint64_t)v26 + ((v29 + 32) & ~v29);
    v31 = *(_QWORD *)(v2 + 72);
    do
    {
      sub_1003D8228(v30, (uint64_t)v4);
      v32 = type metadata accessor for ActivitySharingHighlight(0);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v4[*(int *)(v32 + 20)], v5);
      sub_1001079C4((uint64_t)v4);
      v28 = (CHWorkoutDetailHeartRateTableViewCell *)v62;
      if ((swift_isUniquelyReferenced_nonNull_native(v62) & 1) == 0)
      {
        sub_1001216CC(0, *(_QWORD *)v28->cellPadding + 1, 1);
        v28 = (CHWorkoutDetailHeartRateTableViewCell *)v62;
      }
      v34 = *(_QWORD *)v28->cellPadding;
      v33 = *(_QWORD *)v28->cellInset;
      if (v34 >= v33 >> 1)
      {
        sub_1001216CC(v33 > 1, v34 + 1, 1);
        v28 = (CHWorkoutDetailHeartRateTableViewCell *)v62;
      }
      *(_QWORD *)v28->cellPadding = v34 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v28+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v34, v8, v5);
      *(_QWORD *)&v62 = v28;
      v30 += v31;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease(v61, v35, v36, v37, v38, v39, v40, v41);
  }
  v42 = Array.description.getter(v25);
  v44 = (CHWorkoutDetailHeartRateTableViewCell *)v43;
  swift_bridgeObjectRelease(v28, v43, v45, v46, v47, v48, v49, v50);
  v51._countAndFlagsBits = v42;
  v51._object = v44;
  String.append(_:)(v51);
  swift_bridgeObjectRelease(v44, v52, v53, v54, v55, v56, v57, v58);
  return v64[0];
}

uint64_t type metadata accessor for FriendsHighlightCard(uint64_t a1)
{
  uint64_t result;

  result = qword_100832190;
  if (!qword_100832190)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FriendsHighlightCard);
  return result;
}

uint64_t sub_1003D8228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivitySharingHighlightViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1003D826C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v21);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    v12 = *((_QWORD *)v10 + 1);
    v13 = v10[16];
    sub_1000EB3F4(*(_QWORD *)v10, v12, v13);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    v9[16] = v13;
    v14 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    v15 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v16 = *(_QWORD *)((char *)a2 + v15);
    *(_QWORD *)((char *)a1 + v15) = v16;
    v17 = a3[10];
    v18 = a3[11];
    v19 = *(void **)((char *)a2 + v17);
    *(_QWORD *)((char *)a1 + v17) = v19;
    *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
    *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    swift_bridgeObjectRetain(v16);
    v20 = v19;
  }
  return a1;
}

void sub_1003D8374(uint64_t a1, int *a2)
{
  uint64_t v4;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_1000EB41C(*(_QWORD *)(a1 + a2[5]), *(_QWORD *)(a1 + a2[5] + 8), *(_BYTE *)(a1 + a2[5] + 16));
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + a2[9]), v5, v6, v7, v8, v9, v10, v11);

}

uint64_t sub_1003D83D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  v16 = a3[10];
  v17 = a3[11];
  v18 = *(void **)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  swift_bridgeObjectRetain(v15);
  v19 = v18;
  return a1;
}

uint64_t sub_1003D84B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  v13 = *(_QWORD *)v8;
  v14 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  v15 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v12;
  sub_1000EB41C(v13, v14, v15);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = a3[9];
  v17 = *(_QWORD *)(a2 + v16);
  v18 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18, v19, v20, v21, v22, v23, v24, v25);
  v26 = a3[10];
  v27 = *(void **)(a1 + v26);
  v28 = *(void **)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v28;
  v29 = v28;

  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1003D85BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  return a1;
}

uint64_t sub_1003D866C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)v8;
  v12 = *(_QWORD *)(v8 + 8);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v13 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v10;
  sub_1000EB41C(v11, v12, v13);
  v14 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  swift_bridgeObjectRelease(v16, v17, v18, v19, v20, v21, v22, v23);
  v24 = a3[10];
  v25 = *(void **)(a1 + v24);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);

  v26 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  return a1;
}

uint64_t sub_1003D873C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003D8748);
}

uint64_t sub_1003D8748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1003D87C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003D87D0);
}

uint64_t sub_1003D87D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

uint64_t sub_1003D8848(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10063AF38;
    v4[2] = &unk_10063AF50;
    v4[3] = &unk_10063AF50;
    v4[4] = &unk_10063AF50;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[6] = &unk_10063AF68;
    v4[7] = &unk_10063AF50;
    v4[8] = &unk_10063AF50;
    swift_initStructMetadata(a1, 256, 9, v4, a1 + 16);
    return 0;
  }
  return result;
}

double sub_1003D88E4()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing + 8) & 1) == 0)
    return *(double *)v1;
  *(_QWORD *)v1 = 0x3FF0000000000000;
  v1[8] = 0;
  return 1.0;
}

void sub_1003D8914()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_shapeLayer);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType) & 1) == 0)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_emptyShapeLayerPath);
    if (v2)
      goto LABEL_3;
LABEL_5:
    v3 = 0;
    goto LABEL_6;
  }
  v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath);
  if (!v2)
    goto LABEL_5;
LABEL_3:
  v3 = objc_msgSend(v2, "CGPath");
LABEL_6:
  v4 = v3;
  objc_msgSend(v1, "setPath:");

}

char *sub_1003D89A8(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t inited;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSString v24;
  id v25;
  char *v26;
  char *v27;
  __int128 v28;
  char *v29;
  uint64_t v30;
  char *v31;
  objc_super v33;
  char v34[40];
  uint64_t v35;

  v2 = v1;
  v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_drawsEmptyBins] = 1;
  v4 = &v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  v5 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors;
  v6 = sub_100047110((uint64_t *)&unk_100828340);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100623630;
  v8 = (void *)objc_opt_self(UIColor);
  v9 = v2;
  v10 = objc_msgSend(v8, "blackColor");
  *(_QWORD *)(v7 + 32) = v10;
  v35 = v7;
  specialized Array._endMutation()(v10);
  *(_QWORD *)&v2[v5] = v7;
  v11 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_shapeLayer;
  v12 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v13 = objc_msgSend(v8, "blackColor");
  v14 = objc_msgSend(v13, "CGColor");
  objc_msgSend(v12, "setFillColor:", v14);

  *(_QWORD *)&v9[v11] = v12;
  v15 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_gradientLayer;
  v16 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  objc_msgSend(v16, "setStartPoint:", 0.5, 1.0);
  objc_msgSend(v16, "setEndPoint:", 0.5, 0.0);
  inited = swift_initStackObject(v6, v34);
  *(_OWORD *)(inited + 16) = xmmword_100623630;
  v18 = objc_msgSend(v8, "blackColor");
  *(_QWORD *)(inited + 32) = v18;
  v35 = inited;
  specialized Array._endMutation()(v18);
  v19 = v35;
  v20 = (id)sub_1004871DC(v35);
  swift_bridgeObjectRelease(v19);

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterSourceAtop);
  v22 = v21;
  v23 = objc_allocWithZone((Class)CAFilter);
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v23, "initWithType:", v24, swift_bridgeObjectRelease(v22).n128_f64[0]);

  objc_msgSend(v20, "setCompositingFilter:", v25);
  *(_QWORD *)&v9[v15] = v20;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_emptyShapeLayerPath] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath] = 0;
  v9[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = 0;
  v26 = &v9[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds];
  *(_OWORD *)v26 = 0u;
  *((_OWORD *)v26 + 1) = 0u;
  v27 = &v9[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram];
  v28 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v27 = *(_OWORD *)a1;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v27 + 6) = *(_QWORD *)(a1 + 48);

  v33.receiver = v9;
  v33.super_class = (Class)type metadata accessor for BarSeriesLayer();
  v29 = (char *)objc_msgSendSuper2(&v33, "init");
  v30 = *(_QWORD *)&v29[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_shapeLayer];
  v31 = v29;
  objc_msgSend(v31, "addSublayer:", v30);
  objc_msgSend(v31, "addSublayer:", *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_gradientLayer]);

  return v31;
}

id sub_1003D8CE4(_QWORD *a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t inited;
  id v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  id v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  id v30;
  NSString v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  char *v40;
  objc_class *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  id v54;
  objc_super v56;
  char *v57;
  char v58[40];
  uint64_t v59[8];

  v2 = v1;
  v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_drawsEmptyBins] = 1;
  v4 = &v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  v5 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors;
  v6 = sub_100047110((uint64_t *)&unk_100828340);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100623630;
  v8 = (void *)objc_opt_self(UIColor);
  v9 = v2;
  v10 = objc_msgSend(v8, "blackColor");
  *(_QWORD *)(v7 + 32) = v10;
  v59[0] = v7;
  specialized Array._endMutation()(v10);
  *(_QWORD *)&v2[v5] = v7;
  v11 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_shapeLayer;
  v12 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v13 = objc_msgSend(v8, "blackColor");
  v14 = objc_msgSend(v13, "CGColor");
  objc_msgSend(v12, "setFillColor:", v14);

  *(_QWORD *)&v9[v11] = v12;
  v15 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_gradientLayer;
  v16 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  objc_msgSend(v16, "setStartPoint:", 0.5, 1.0);
  objc_msgSend(v16, "setEndPoint:", 0.5, 0.0);
  inited = swift_initStackObject(v6, v58);
  *(_OWORD *)(inited + 16) = xmmword_100623630;
  v18 = objc_msgSend(v8, "blackColor");
  *(_QWORD *)(inited + 32) = v18;
  v59[0] = inited;
  specialized Array._endMutation()(v18);
  v19 = (CHWorkoutDetailHeartRateTableViewCell *)v59[0];
  v20 = (id)sub_1004871DC(v59[0]);
  swift_bridgeObjectRelease(v19, v21, v22, v23, v24, v25, v26, v27);

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterSourceAtop);
  v29 = v28;
  v30 = objc_allocWithZone((Class)CAFilter);
  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v29, v32, v33, v34, v35, v36, v37, v38);
  v39 = objc_msgSend(v30, "initWithType:", v31);

  objc_msgSend(v20, "setCompositingFilter:", v39);
  *(_QWORD *)&v9[v15] = v20;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_emptyShapeLayerPath] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath] = 0;
  v9[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = 0;
  v40 = &v9[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds];
  *(_OWORD *)v40 = 0u;
  *((_OWORD *)v40 + 1) = 0u;
  sub_10003E9BC((uint64_t)a1, (uint64_t)v59);
  v41 = (objc_class *)type metadata accessor for BarSeriesLayer();
  if (swift_dynamicCast(&v57, v59, (char *)&type metadata for Any + 8, v41, 6))
  {
    v42 = v57;
    v44 = *(_QWORD *)&v57[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram];
    v43 = *(_QWORD *)&v57[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram + 8];
    v46 = *(_QWORD *)&v57[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram + 16];
    v45 = *(_QWORD *)&v57[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram + 24];
    v48 = *(_QWORD *)&v57[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram + 32];
    v47 = *(_QWORD *)&v57[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram + 40];
    v49 = *(_QWORD *)&v57[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram + 48];
    swift_bridgeObjectRetain(v44);
    swift_bridgeObjectRetain(v43);

  }
  else
  {
    sub_10003D1C0(1, (uint64_t)v59, 0.0, 1.0);
    v47 = v59[5];
    v49 = v59[6];
    v45 = v59[3];
    v48 = v59[4];
    v46 = v59[2];
    v44 = v59[0];
    v43 = v59[1];
  }
  v50 = (uint64_t *)&v9[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram];
  *v50 = v44;
  v50[1] = v43;
  v50[2] = v46;
  v50[3] = v45;
  v50[4] = v48;
  v50[5] = v47;
  v50[6] = v49;

  v51 = a1[3];
  v52 = sub_100016804(a1, v51);
  v53 = _bridgeAnythingToObjectiveC<A>(_:)(v52, v51);
  v56.receiver = v9;
  v56.super_class = v41;
  v54 = objc_msgSendSuper2(&v56, "initWithLayer:", v53);
  swift_unknownObjectRelease(v53);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  return v54;
}

void sub_1003D9104()
{
  char *v0;
  double *v1;
  uint64_t v2;
  double v3;
  char **v4;
  double Width;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  double v15;
  double v16;
  double MaxY;
  double Height;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char **v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  double *v31;
  id v32;
  id v33;
  id v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v1 = (double *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram];
  v2 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram] + 16);
  v3 = sub_1003D88E4();
  v4 = &selRef__insertGuidedRunMediaMomentsSection;
  objc_msgSend(v0, "bounds");
  Width = CGRectGetWidth(v35);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v33 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v32 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v7)
  {
    v8 = 0;
    v9 = 0;
    v10 = (Width - v3 * (double)(v2 + 1)) / (double)v6;
    v11 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing;
    v12 = v7 - 1;
    v13 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing];
    v14 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_drawsEmptyBins;
    v31 = v1;
    while (1)
    {
      v15 = v1[3];
      v16 = 0.0;
      if (v15 >= 2.22044605e-16)
      {
        if (v9 >= *(_QWORD *)(*(_QWORD *)v1 + 16))
          goto LABEL_12;
        v28 = *(_QWORD *)v1 + v8;
        if ((*(_BYTE *)(v28 + 48) & 1) != 0)
          goto LABEL_12;
        v16 = *(double *)(v28 + 32) / v15;
      }
      objc_msgSend(v0, v4[470]);
      MaxY = CGRectGetMaxY(v36);
      objc_msgSend(v0, v4[470]);
      Height = CGRectGetHeight(v37);
      if ((v0[v14] & 1) != 0 || v16 >= 2.22044605e-16)
      {
        v19 = v16 * Height;
        if (v19 > v10)
          v20 = v19;
        else
          v20 = v10;
        v21 = v12;
        v22 = v11;
        v23 = v14;
        v24 = v4;
        v25 = (void *)objc_opt_self(UIBezierPath);
        v26 = objc_msgSend(v25, "bezierPathWithRoundedRect:cornerRadius:", v13, MaxY - v20, v10, v20, v10 * 0.5);
        v27 = objc_msgSend(v25, "bezierPathWithRoundedRect:cornerRadius:", v13, MaxY - v10, v10, v10, v10 * 0.5);
        objc_msgSend(v33, "appendPath:", v27);
        objc_msgSend(v32, "appendPath:", v26);

        v4 = v24;
        v14 = v23;
        v11 = v22;
        v12 = v21;
        v1 = v31;
      }
LABEL_12:
      if (v12 == v9)
      {
        v29 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_emptyShapeLayerPath];
        *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_emptyShapeLayerPath] = v33;
        v30 = v33;

        v34 = *(id *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath];
        *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath] = v32;

        return;
      }
      v13 = v13 + v10 + *(double *)&v0[v11];
      ++v9;
      v8 += 24;
    }
  }
  __break(1u);
}

void sub_1003D93C4(void *a1, double a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  void *v7;
  id v8;
  NSString v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_shapeLayer);
  v6 = objc_msgSend(v5, "path");
  v7 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath);
  if (v7)
    v8 = objc_msgSend(v7, "CGPath");
  else
    v8 = 0;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v9);

  objc_msgSend(v10, "setFromValue:", v6);
  objc_msgSend(v10, "setToValue:", v8);
  v11 = (void *)objc_opt_self(CAMediaTimingFunction);
  if (a1)
  {
    v12 = a1;
    v13 = v10;
    v14 = objc_msgSend(v11, "functionWithName:", v12);
    objc_msgSend(v13, "setTimingFunction:", v14);

  }
  else
  {
    v15 = v10;
    v14 = objc_msgSend(v11, "functionWithName:", kCAMediaTimingFunctionEaseOut);
    objc_msgSend(v15, "setTimingFunction:", v14);
  }

  objc_msgSend(v10, "setDuration:", a2);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType) = 1;
  sub_1003D8914();
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "addAnimation:forKey:", v10, v16);

}

void sub_1003D9604()
{
  char *v0;
  char *v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  objc_super v18;
  CGRect v19;
  CGRect v20;

  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for BarSeriesLayer();
  objc_msgSendSuper2(&v18, "layoutSublayers");
  v1 = &v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds];
  v2 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds];
  v3 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds + 8];
  v4 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds + 16];
  v5 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds + 24];
  objc_msgSend(v0, "bounds");
  v20.origin.x = v6;
  v20.origin.y = v7;
  v20.size.width = v8;
  v20.size.height = v9;
  v19.origin.x = v2;
  v19.origin.y = v3;
  v19.size.width = v4;
  v19.size.height = v5;
  if (!CGRectEqualToRect(v19, v20))
  {
    objc_msgSend(v0, "bounds");
    *(_QWORD *)v1 = v10;
    *((_QWORD *)v1 + 1) = v11;
    *((_QWORD *)v1 + 2) = v12;
    *((_QWORD *)v1 + 3) = v13;
    v14 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_gradientLayer];
    objc_msgSend(v0, "bounds");
    objc_msgSend(v14, "setFrame:");
    v15 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_shapeLayer];
    objc_msgSend(v0, "bounds");
    objc_msgSend(v15, "setFrame:");
    sub_1003D9104();
    v16 = objc_msgSend(v15, "path");

    if (v16)
    {
      v17 = (void *)objc_opt_self(CATransaction);
      objc_msgSend(v17, "begin");
      objc_msgSend(v17, "setDisableActions:", 1);
      v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = v0[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType];
      sub_1003D8914();
      objc_msgSend(v17, "commit");
    }
  }
}

uint64_t sub_1003D97B0(void *a1)
{
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t inited;
  id v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  id v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  id v29;
  NSString v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v52;
  char v54[40];
  CHWorkoutDetailHeartRateTableViewCell *v55;

  v2 = v1;
  v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_drawsEmptyBins] = 1;
  v3 = &v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v4 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors;
  v52 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors;
  v5 = sub_100047110((uint64_t *)&unk_100828340);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100623630;
  v7 = (void *)objc_opt_self(UIColor);
  v8 = v2;
  v9 = objc_msgSend(v7, "blackColor");
  *(_QWORD *)(v6 + 32) = v9;
  v55 = (CHWorkoutDetailHeartRateTableViewCell *)v6;
  specialized Array._endMutation()(v9);
  *(_QWORD *)&v2[v4] = v6;
  v10 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_shapeLayer;
  v11 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v12 = objc_msgSend(v7, "blackColor");
  v13 = objc_msgSend(v12, "CGColor");
  objc_msgSend(v11, "setFillColor:", v13);

  *(_QWORD *)&v8[v10] = v11;
  v14 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_gradientLayer;
  v15 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  objc_msgSend(v15, "setStartPoint:", 0.5, 1.0);
  objc_msgSend(v15, "setEndPoint:", 0.5, 0.0);
  inited = swift_initStackObject(v5, v54);
  *(_OWORD *)(inited + 16) = xmmword_100623630;
  v17 = objc_msgSend(v7, "blackColor");
  *(_QWORD *)(inited + 32) = v17;
  v55 = (CHWorkoutDetailHeartRateTableViewCell *)inited;
  specialized Array._endMutation()(v17);
  v18 = v55;
  v19 = (id)sub_1004871DC((uint64_t)v55);
  swift_bridgeObjectRelease(v18, v20, v21, v22, v23, v24, v25, v26);

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterSourceAtop);
  v28 = v27;
  v29 = objc_allocWithZone((Class)CAFilter);
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28, v31, v32, v33, v34, v35, v36, v37);
  v38 = objc_msgSend(v29, "initWithType:", v30);

  objc_msgSend(v19, "setCompositingFilter:", v38);
  *(_QWORD *)&v8[v14] = v19;
  v39 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_emptyShapeLayerPath;
  *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_emptyShapeLayerPath] = 0;
  v40 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath;
  *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_filledShapeLayerPath] = 0;
  v8[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = 0;
  v41 = &v8[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_previousBounds];
  *(_OWORD *)v41 = 0u;
  *((_OWORD *)v41 + 1) = 0u;
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v2[v52], v42, v43, v44, v45, v46, v47, v48);

  v49 = *(void **)&v8[v40];
  v50 = type metadata accessor for BarSeriesLayer();
  swift_deallocPartialClassInstance(v8, v50, 168, 7);
  return 0;
}

id sub_1003D9B18()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BarSeriesLayer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BarSeriesLayer()
{
  return objc_opt_self(_TtC10FitnessApp14BarSeriesLayer);
}

uint64_t storeEnumTagSinglePayload for BarSeriesLayer.ShapeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003D9C38 + 4 * byte_10063AF85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003D9C6C + 4 * byte_10063AF80[v4]))();
}

uint64_t sub_1003D9C6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D9C74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003D9C7CLL);
  return result;
}

uint64_t sub_1003D9C88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003D9C90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003D9C94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D9C9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BarSeriesLayer.ShapeType()
{
  return &type metadata for BarSeriesLayer.ShapeType;
}

unint64_t sub_1003D9CBC()
{
  unint64_t result;

  result = qword_100832260;
  if (!qword_100832260)
  {
    result = swift_getWitnessTable(&unk_10063AFF0, &type metadata for BarSeriesLayer.ShapeType);
    atomic_store(result, (unint64_t *)&qword_100832260);
  }
  return result;
}

unint64_t sub_1003D9D04()
{
  unint64_t result;

  result = qword_100832268;
  if (!qword_100832268)
  {
    result = swift_getWitnessTable(&unk_10063B078, &type metadata for WorkoutSegmentEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100832268);
  }
  return result;
}

unint64_t sub_1003D9D4C()
{
  unint64_t result;

  result = qword_100832270[0];
  if (!qword_100832270[0])
  {
    result = swift_getWitnessTable(&unk_10063B0D8, &type metadata for WorkoutSegmentEntityQuery);
    atomic_store(result, qword_100832270);
  }
  return result;
}

uint64_t sub_1003D9D94(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100047110(&qword_10082EEA0);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    v10 = 0;
    if (a2)
    {
      v12 = sub_1003DAA2C();
      v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v12);
    }
    v13 = v10;
    sub_1003DA9E4((uint64_t)&v13, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40));
    return swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_1003D9E48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v4 = *(_QWORD *)(v1 + 16);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1008322C8 + dword_1008322C8);
  v5 = (_QWORD *)swift_task_alloc(unk_1008322CC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001A48BC;
  return v7(a1, v4);
}

uint64_t sub_1003D9EB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD *);

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *(_QWORD **)(v1 + 16);
  v6 = (uint64_t (*)(_QWORD *))((char *)&dword_1008322C0 + dword_1008322C0);
  v4 = (_QWORD *)swift_task_alloc(unk_1008322C4);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_100100D3C;
  return v6(v3);
}

unint64_t sub_1003D9F1C()
{
  unint64_t result;

  result = qword_100832288;
  if (!qword_100832288)
  {
    result = swift_getWitnessTable(&unk_10063B100, &type metadata for WorkoutSegmentEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100832288);
  }
  return result;
}

unint64_t sub_1003D9F64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100832290;
  if (!qword_100832290)
  {
    v1 = sub_100007050(qword_100832298);
    sub_100388C94();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_100832290);
  }
  return result;
}

uint64_t sub_1003D9FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10038823C();
  *v5 = v2;
  v5[1] = sub_1000DA0E4;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for WorkoutSegmentEntityQuery()
{
  return &type metadata for WorkoutSegmentEntityQuery;
}

void sub_1003DA044(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  char v40;
  uint64_t v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  unint64_t v62;
  unint64_t v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (CHWorkoutDetailHeartRateTableViewCell *)a2;
    v4 = 0;
    v75 = a1 + 32;
    v5 = a2 & 0xFFFFFFFFFFFFFF8;
    v73 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v5 = a2;
    v66 = v5;
    v70 = a2 & 0xC000000000000001;
    v68 = &_swiftEmptyArrayStorage;
    v69 = *(_QWORD *)(a1 + 16);
    v74 = (unint64_t)a2 >> 62;
LABEL_5:
    if (v4 <= v2)
      v6 = v2;
    else
      v6 = v4;
    v67 = v6;
    while (v4 != v6)
    {
      v14 = (__int128 *)(v75 + 72 * v4);
      v15 = *v14;
      v16 = *((_QWORD *)v14 + 6);
      v17 = *((_BYTE *)v14 + 56);
      v18 = *((_QWORD *)v14 + 8);
      v80 = *v14;
      v78 = v14[2];
      v79 = v14[1];
      if (v74)
      {
        swift_retain_n(v15, 2);
        swift_retain(*((_QWORD *)&v80 + 1));
        swift_retain(v79);
        swift_retain(*((_QWORD *)&v79 + 1));
        swift_retain(v78);
        swift_retain(*((_QWORD *)&v78 + 1));
        swift_retain(v18);
        swift_bridgeObjectRetain(v3);
        v49 = _CocoaArrayWrapper.endIndex.getter(v66);
        v20 = v80;
        v19 = v49;
      }
      else
      {
        v19 = *(_QWORD *)(v73 + 16);
        swift_retain_n(v15, 2);
        swift_retain(*((_QWORD *)&v80 + 1));
        swift_retain(v79);
        swift_retain(*((_QWORD *)&v79 + 1));
        swift_retain(v78);
        swift_retain(*((_QWORD *)&v78 + 1));
        swift_retain(v18);
        swift_bridgeObjectRetain(v3);
        v20 = v80;
      }
      ++v4;
      v21 = v20;
      if (v19)
      {
        v71 = v17;
        v72 = v16;
        v76 = v18;
        v77 = v4;
        v22 = *(_QWORD *)(v20 + 16);
        v23 = *(_QWORD *)(v20 + 24);
        v81 = v20;
        if (v70)
        {
          v24 = 0;
          while (1)
          {
            v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v3);
            v29 = v24 + 1;
            if (__OFADD__(v24, 1))
              break;
            v30 = v28;
            v31 = *(_QWORD *)(v28 + 16);
            v32 = *(_QWORD *)(v30 + 24);
            v33 = v31 == v22 && v32 == v23;
            if (v33 || (_stringCompareWithSmolCheck(_:_:expecting:)(v31, v32, v22, v23, 0) & 1) != 0)
            {
              v25 = *(_QWORD *)(v30 + 32);
              v26 = v3;
              v27 = *(_QWORD *)(v81 + 32);
              swift_unknownObjectRelease(v30);
              v33 = v25 == v27;
              v3 = v26;
              if (v33)
              {
                v50 = v81;
                goto LABEL_42;
              }
            }
            else
            {
              swift_unknownObjectRelease(v30);
            }
            ++v24;
            if (v29 == v19)
            {
              v41 = v81;
              goto LABEL_38;
            }
          }
          __break(1u);
        }
        else
        {
          v34 = 0;
          while (1)
          {
            v35 = v34 + 1;
            if (__OFADD__(v34, 1))
              break;
            v36 = (_QWORD *)*((_QWORD *)&v3[1].super.super.super.super.isa + v34);
            v37 = v36[2];
            v38 = v36[3];
            v39 = v37 == v22 && v38 == v23;
            if (v39
              || (v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, v22, v23, 0), v21 = v81, (v40 & 1) != 0))
            {
              if (v36[4] == *(_QWORD *)(v21 + 32))
              {
                v50 = v21;
LABEL_42:
                swift_release(v50);
                swift_bridgeObjectRelease(v3, v51, v52, v53, v54, v55, v56, v57);
                v58 = v68;
                v4 = v77;
                if ((swift_isUniquelyReferenced_nonNull_native(v68) & 1) == 0)
                {
                  sub_100121BD0(0, *(_QWORD *)v68->cellPadding + 1, 1);
                  v58 = v68;
                }
                v59 = v80;
                v61 = v78;
                v60 = v79;
                v63 = *(_QWORD *)v58->cellPadding;
                v62 = *(_QWORD *)v58->cellInset;
                v64 = v58;
                if (v63 >= v62 >> 1)
                {
                  sub_100121BD0(v62 > 1, v63 + 1, 1);
                  v61 = v78;
                  v60 = v79;
                  v59 = v80;
                  v64 = v68;
                }
                *(_QWORD *)v64->cellPadding = v63 + 1;
                v68 = v64;
                v65 = (char *)v64 + 72 * v63;
                *((_OWORD *)v65 + 2) = v59;
                *((_OWORD *)v65 + 3) = v60;
                *((_OWORD *)v65 + 4) = v61;
                *((_QWORD *)v65 + 10) = v72;
                v65[88] = v71;
                *((_QWORD *)v65 + 12) = v76;
                v2 = v69;
                if (v77 != v69)
                  goto LABEL_5;
                return;
              }
            }
            ++v34;
            if (v35 == v19)
            {
              v41 = v21;
LABEL_38:
              swift_release(v41);
              swift_bridgeObjectRelease(v3, v42, v43, v44, v45, v46, v47, v48);
              v2 = v69;
              v18 = v76;
              v4 = v77;
              v6 = v67;
              goto LABEL_10;
            }
          }
        }
        __break(1u);
        break;
      }
      swift_release(v20);
      swift_bridgeObjectRelease(v3, v7, v8, v9, v10, v11, v12, v13);
LABEL_10:
      swift_release(v18);
      swift_release(*((_QWORD *)&v78 + 1));
      swift_release(v78);
      swift_release(*((_QWORD *)&v79 + 1));
      swift_release(v79);
      swift_release(*((_QWORD *)&v80 + 1));
      swift_release(v80);
      if (v4 == v2)
        return;
    }
    __break(1u);
  }
}

uint64_t sub_1003DA47C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[26] = a1;
  v2[27] = a2;
  v3 = type metadata accessor for UUID(0);
  v2[28] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[29] = v4;
  v2[30] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003DA4DC, 0, 0);
}

uint64_t sub_1003DA4DC()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;

  v1 = v0;
  v2 = v0 + 2;
  v3 = v1[26];
  AppDependency.wrappedValue.getter(v1 + 25);
  v4 = (void *)v1[25];
  v5 = objc_msgSend(v4, "dataCalculator");
  v1[31] = v5;

  v1[7] = v1 + 24;
  v1[2] = v1;
  v1[3] = sub_1003DA5B8;
  v6 = swift_continuation_init(v2, 1);
  v1[19] = _NSConcreteStackBlock;
  v1 += 19;
  v1[1] = 0x40000000;
  v1[2] = sub_1003D9D94;
  v1[3] = &unk_10079DBC8;
  v1[4] = v6;
  objc_msgSend(v5, "segmentsForWorkout:completion:", v3, v1);
  return swift_continuation_await(v2);
}

uint64_t sub_1003DA5B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 256) = v1;
  if (v1)
    v2 = sub_1003DA890;
  else
    v2 = sub_1003DA618;
  return swift_task_switch(v2, 0, 0);
}

void sub_1003DA618()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 192);

  v26 = v1;
  if (!v1)
  {
    v6 = _swiftEmptyArrayStorage;
LABEL_23:
    swift_task_dealloc(*(_QWORD *)(v0 + 240));
    (*(void (**)(_QWORD *))(v0 + 8))(v6);
    return;
  }
  v2 = objc_msgSend(*(id *)(v0 + 208), "fiui_activityType");
  if (!v2)
    goto LABEL_25;
  v3 = v2;
  v25 = FIUIDistanceTypeForActivityType(v2);

  if ((unint64_t)v26 >> 62)
  {
    if (v26 >= 0)
      v23 = v26 & 0xFFFFFFFFFFFFFF8;
    else
      v23 = v26;
    swift_bridgeObjectRetain(v26);
    v4 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v26);
    if (v4)
      goto LABEL_5;
LABEL_21:
    v6 = _swiftEmptyArrayStorage;
LABEL_22:
    swift_bridgeObjectRelease(v26);
    goto LABEL_23;
  }
  v4 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    goto LABEL_21;
LABEL_5:
  if (v4 >= 1)
  {
    v5 = 0;
    v24 = *(_QWORD *)(v0 + 232);
    v6 = _swiftEmptyArrayStorage;
    do
    {
      if ((v26 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v26);
      else
        v7 = *(id *)(v26 + 8 * v5 + 32);
      v8 = *(_QWORD *)(v0 + 240);
      v9 = *(_QWORD *)(v0 + 224);
      v10 = *(void **)(v0 + 208);
      v11 = v7;
      v12 = objc_msgSend(v10, "UUID");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v14 = (void (*)(char *, uint64_t))UUID.uuidString.getter(v13);
      v16 = v15;
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v8, v9);
      sub_10038A760(v11, v5, v25, v14, v16, v0 + 80);

      sub_1003DA8E8((_QWORD *)(v0 + 80));
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
        v6 = sub_100140FFC(0, v6[2] + 1, 1, v6);
      v18 = v6[2];
      v17 = v6[3];
      if (v18 >= v17 >> 1)
        v6 = sub_100140FFC((_QWORD *)(v17 > 1), v18 + 1, 1, v6);
      ++v5;
      v6[2] = v18 + 1;
      v19 = &v6[9 * v18];
      *((_OWORD *)v19 + 2) = *(_OWORD *)(v0 + 80);
      v20 = *(_OWORD *)(v0 + 96);
      v21 = *(_OWORD *)(v0 + 112);
      v22 = *(_OWORD *)(v0 + 128);
      v19[12] = *(_QWORD *)(v0 + 144);
      *((_OWORD *)v19 + 4) = v21;
      *((_OWORD *)v19 + 5) = v22;
      *((_OWORD *)v19 + 3) = v20;

      sub_1003DA968((uint64_t *)(v0 + 80));
    }
    while (v4 != v5);
    goto LABEL_22;
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_1003DA890()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  swift_willThrow();
  swift_errorRelease(v2);

  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
}

_QWORD *sub_1003DA8E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[8];
  swift_retain(*a1);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t *sub_1003DA968(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  swift_release(a1[8]);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);
  return a1;
}

uint64_t sub_1003DA9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_1008322B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003DAA2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082B708[0];
  if (!qword_10082B708[0])
  {
    v1 = objc_opt_self(CHWorkoutSegment);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, qword_10082B708);
  }
  return result;
}

uint64_t sub_1003DAA68(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;

  v2[35] = a1;
  v2[36] = a2;
  v2[37] = *a2;
  return swift_task_switch(sub_1003DAA88, 0, 0);
}

uint64_t sub_1003DAA88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v1 = v0[35];
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v29 = v0[35];
    else
      v29 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v0[35]);
    v2 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v1, v30, v31, v32, v33, v34, v35, v36);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = &_swiftEmptyArrayStorage;
  if (!v2)
  {
LABEL_15:
    v0[38] = v3;
    sub_100047110(&qword_1008201E0);
    v20 = type metadata accessor for AppDependencyManager(0);
    v37 = 0u;
    v38 = 0u;
    v39 = 0;
    v21 = static AppDependencyManager.shared.getter(v20);
    v22 = AppDependency.__allocating_init(key:manager:)(&v37, v21);
    v0[39] = v22;
    v23 = sub_100047110(&qword_1008201E8);
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
    v24 = static AppDependencyManager.shared.getter(v23);
    v25 = AppDependency.__allocating_init(key:manager:)(&v37, v24);
    v0[40] = v25;
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
    v26 = static AppDependencyManager.shared.getter(v25);
    v27 = AppDependency.__allocating_init(key:manager:)(&v37, v26);
    v0[41] = v27;
    v28 = (_QWORD *)swift_task_alloc(dword_10082484C);
    v0[42] = v28;
    *v28 = v0;
    v28[1] = sub_1003DAD1C;
    return sub_1001A347C((uint64_t)v3, v22, v25, v27);
  }
  *(_QWORD *)&v37 = &_swiftEmptyArrayStorage;
  result = sub_1001214C4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = (CHWorkoutDetailHeartRateTableViewCell *)v37;
    if ((v1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v0[35]);
        v8 = *(_QWORD *)(v6 + 16);
        v7 = *(_QWORD *)(v6 + 24);
        swift_bridgeObjectRetain(v7);
        swift_unknownObjectRelease(v6);
        *(_QWORD *)&v37 = v3;
        v10 = *(_QWORD *)v3->cellPadding;
        v9 = *(_QWORD *)v3->cellInset;
        if (v10 >= v9 >> 1)
        {
          sub_1001214C4(v9 > 1, v10 + 1, 1);
          v3 = (CHWorkoutDetailHeartRateTableViewCell *)v37;
        }
        ++v5;
        *(_QWORD *)v3->cellPadding = v10 + 1;
        v11 = (char *)v3 + 16 * v10;
        *((_QWORD *)v11 + 4) = v8;
        *((_QWORD *)v11 + 5) = v7;
      }
      while (v2 != v5);
    }
    else
    {
      v12 = v0[35] + 32;
      v13 = *(_QWORD *)(v37 + 16);
      v14 = 16 * v13;
      do
      {
        v16 = *(_QWORD *)(*(_QWORD *)v12 + 16);
        v15 = *(_QWORD *)(*(_QWORD *)v12 + 24);
        *(_QWORD *)&v37 = v3;
        v17 = *(_QWORD *)v3->cellInset;
        v18 = v13 + 1;
        swift_bridgeObjectRetain(v15);
        if (v13 >= v17 >> 1)
        {
          sub_1001214C4(v17 > 1, v18, 1);
          v3 = (CHWorkoutDetailHeartRateTableViewCell *)v37;
        }
        *(_QWORD *)v3->cellPadding = v18;
        v19 = (char *)v3 + v14;
        *((_QWORD *)v19 + 4) = v16;
        *((_QWORD *)v19 + 5) = v15;
        v14 += 16;
        v12 += 8;
        ++v13;
        --v2;
      }
      while (v2);
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003DAD1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 336);
  *(_QWORD *)(v3 + 344) = a1;
  *(_QWORD *)(v3 + 352) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v12 = sub_1003DB0E8;
  }
  else
  {
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v3 + 304), v5, v6, v7, v8, v9, v10, v11);
    v12 = sub_1003DAD90;
  }
  return swift_task_switch(v12, 0, 0);
}

uint64_t sub_1003DAD90(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  __n128 v40;
  uint64_t (*v41)(uint64_t, uint64_t);

  v9 = *(_QWORD *)(v8 + 344);
  *(_QWORD *)(v8 + 272) = &_swiftEmptyArrayStorage;
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 360) = v10;
  if (v10)
  {
    *(_QWORD *)(v8 + 368) = 0;
    v11 = *(_OWORD *)(v9 + 32);
    v12 = *(_OWORD *)(v9 + 48);
    v13 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 64) = v13;
    *(_OWORD *)(v8 + 16) = v11;
    *(_OWORD *)(v8 + 32) = v12;
    v14 = *(_OWORD *)(v9 + 96);
    v15 = *(_OWORD *)(v9 + 112);
    v16 = *(_OWORD *)(v9 + 144);
    *(_OWORD *)(v8 + 112) = *(_OWORD *)(v9 + 128);
    *(_OWORD *)(v8 + 128) = v16;
    *(_OWORD *)(v8 + 80) = v14;
    *(_OWORD *)(v8 + 96) = v15;
    v17 = *(_OWORD *)(v9 + 160);
    v18 = *(_OWORD *)(v9 + 176);
    v19 = *(_OWORD *)(v9 + 208);
    *(_OWORD *)(v8 + 176) = *(_OWORD *)(v9 + 192);
    *(_OWORD *)(v8 + 192) = v19;
    *(_OWORD *)(v8 + 144) = v17;
    *(_OWORD *)(v8 + 160) = v18;
    v20 = *(_OWORD *)(v9 + 224);
    v21 = *(_OWORD *)(v9 + 240);
    v22 = *(_OWORD *)(v9 + 272);
    *(_OWORD *)(v8 + 240) = *(_OWORD *)(v9 + 256);
    *(_OWORD *)(v8 + 256) = v22;
    *(_OWORD *)(v8 + 208) = v20;
    *(_OWORD *)(v8 + 224) = v21;
    v23 = *(_QWORD *)(v8 + 240);
    sub_100112010((_QWORD *)(v8 + 16));
    v41 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1008322B0 + dword_1008322B0);
    v24 = (_QWORD *)swift_task_alloc(unk_1008322B4);
    *(_QWORD *)(v8 + 376) = v24;
    *v24 = v8;
    v24[1] = sub_1003DAF04;
    return v41(v23, *(_QWORD *)(v8 + 288));
  }
  else
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, a2, a3, a4, a5, a6, a7, a8);
    v26 = *(_QWORD *)(v8 + 320);
    v27 = *(_QWORD *)(v8 + 328);
    v28 = *(_QWORD *)(v8 + 312);
    v29 = *(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 280);
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRetain(&_swiftEmptyArrayStorage);
    sub_1003DA044(v30, (uint64_t)v29);
    v32 = v31;
    swift_bridgeObjectRelease(v29, v33, v34, v35, v36, v37, v38, v39);
    swift_bridgeObjectRelease_n(&_swiftEmptyArrayStorage, 2);
    swift_release(v28);
    swift_release(v26);
    v40 = swift_release(v27);
    return (*(uint64_t (**)(uint64_t, __n128))(v8 + 8))(v32, v40);
  }
}

uint64_t sub_1003DAF04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 376);
  *(_QWORD *)(*(_QWORD *)v1 + 384) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003DAF60, 0, 0);
}

uint64_t sub_1003DAF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const char *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  __n128 v25;
  uint64_t v27;
  _OWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t (*v43)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 368) + 1;
  sub_10013D3A8(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 384));
  sub_100112258((_QWORD *)(v0 + 16));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 344), v3, v4, v5, v6, v7, v8, v9);
    v10 = *(_QWORD *)(v0 + 320);
    v11 = *(_QWORD *)(v0 + 328);
    v12 = *(_QWORD *)(v0 + 312);
    v13 = *(_QWORD *)(v0 + 272);
    v14 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 280);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v13);
    sub_1003DA044(v15, (uint64_t)v14);
    v17 = v16;
    swift_bridgeObjectRelease(v14, v18, v19, v20, v21, v22, v23, v24);
    swift_bridgeObjectRelease_n(v13, 2);
    swift_release(v12);
    swift_release(v10);
    v25 = swift_release(v11);
    return (*(uint64_t (**)(uint64_t, __n128))(v0 + 8))(v17, v25);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 368) + 1;
    *(_QWORD *)(v0 + 368) = v27;
    v28 = (_OWORD *)(*(_QWORD *)(v0 + 344) + (v27 << 8));
    v29 = v28[5];
    v31 = v28[2];
    v30 = v28[3];
    *(_OWORD *)(v0 + 48) = v28[4];
    *(_OWORD *)(v0 + 64) = v29;
    *(_OWORD *)(v0 + 16) = v31;
    *(_OWORD *)(v0 + 32) = v30;
    v32 = v28[9];
    v34 = v28[6];
    v33 = v28[7];
    *(_OWORD *)(v0 + 112) = v28[8];
    *(_OWORD *)(v0 + 128) = v32;
    *(_OWORD *)(v0 + 80) = v34;
    *(_OWORD *)(v0 + 96) = v33;
    v35 = v28[13];
    v37 = v28[10];
    v36 = v28[11];
    *(_OWORD *)(v0 + 176) = v28[12];
    *(_OWORD *)(v0 + 192) = v35;
    *(_OWORD *)(v0 + 144) = v37;
    *(_OWORD *)(v0 + 160) = v36;
    v38 = v28[17];
    v40 = v28[14];
    v39 = v28[15];
    *(_OWORD *)(v0 + 240) = v28[16];
    *(_OWORD *)(v0 + 256) = v38;
    *(_OWORD *)(v0 + 208) = v40;
    *(_OWORD *)(v0 + 224) = v39;
    v41 = *(_QWORD *)(v0 + 240);
    sub_100112010((_QWORD *)(v0 + 16));
    v43 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1008322B0 + dword_1008322B0);
    v42 = (_QWORD *)swift_task_alloc(unk_1008322B4);
    *(_QWORD *)(v0 + 376) = v42;
    *v42 = v0;
    v42[1] = sub_1003DAF04;
    return v43(v41, *(_QWORD *)(v0 + 288));
  }
}

uint64_t sub_1003DB0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 304);
  swift_release(*(_QWORD *)(v0 + 312));
  swift_release(v1);
  swift_release(v2);
  swift_bridgeObjectRelease(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003DB140(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 272) = a1;
  *(_QWORD *)(v1 + 280) = *a1;
  return swift_task_switch(sub_1003DB160, 0, 0);
}

uint64_t sub_1003DB160()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  sub_100047110(&qword_1008201E0);
  v1 = type metadata accessor for AppDependencyManager(0);
  v11 = 0u;
  v12 = 0u;
  v13 = 0;
  v2 = static AppDependencyManager.shared.getter(v1);
  v3 = AppDependency.__allocating_init(key:manager:)(&v11, v2);
  v0[36] = v3;
  v4 = sub_100047110(&qword_1008201E8);
  v13 = 0;
  v11 = 0u;
  v12 = 0u;
  v5 = static AppDependencyManager.shared.getter(v4);
  v6 = AppDependency.__allocating_init(key:manager:)(&v11, v5);
  v0[37] = v6;
  v13 = 0;
  v11 = 0u;
  v12 = 0u;
  v7 = static AppDependencyManager.shared.getter(v6);
  v8 = AppDependency.__allocating_init(key:manager:)(&v11, v7);
  v0[38] = v8;
  v9 = (_QWORD *)swift_task_alloc(dword_100824844);
  v0[39] = v9;
  *v9 = v0;
  v9[1] = sub_1003DB274;
  return sub_1001A3D94(v3, v6, v8);
}

uint64_t sub_1003DB274(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 312);
  v3[40] = a1;
  v3[41] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1003DB57C;
  }
  else
  {
    v6 = v3[37];
    v7 = v3[38];
    swift_release(v3[36]);
    swift_release(v6);
    swift_release(v7);
    v5 = sub_1003DB304;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003DB304(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v26)(uint64_t, uint64_t);

  v9 = *(_QWORD *)(v8 + 320);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 336) = v10;
  if (v10)
  {
    v11 = *(_OWORD *)(v9 + 32);
    v12 = *(_OWORD *)(v9 + 48);
    v13 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 64) = v13;
    *(_OWORD *)(v8 + 16) = v11;
    *(_OWORD *)(v8 + 32) = v12;
    v14 = *(_OWORD *)(v9 + 96);
    v15 = *(_OWORD *)(v9 + 112);
    v16 = *(_OWORD *)(v9 + 144);
    *(_OWORD *)(v8 + 112) = *(_OWORD *)(v9 + 128);
    *(_OWORD *)(v8 + 128) = v16;
    *(_OWORD *)(v8 + 80) = v14;
    *(_OWORD *)(v8 + 96) = v15;
    v17 = *(_OWORD *)(v9 + 160);
    v18 = *(_OWORD *)(v9 + 176);
    v19 = *(_OWORD *)(v9 + 208);
    *(_OWORD *)(v8 + 176) = *(_OWORD *)(v9 + 192);
    *(_OWORD *)(v8 + 192) = v19;
    *(_OWORD *)(v8 + 144) = v17;
    *(_OWORD *)(v8 + 160) = v18;
    v20 = *(_OWORD *)(v9 + 224);
    v21 = *(_OWORD *)(v9 + 240);
    v22 = *(_OWORD *)(v9 + 272);
    *(_OWORD *)(v8 + 240) = *(_OWORD *)(v9 + 256);
    *(_OWORD *)(v8 + 256) = v22;
    *(_OWORD *)(v8 + 208) = v20;
    *(_OWORD *)(v8 + 224) = v21;
    *(_QWORD *)(v8 + 344) = 1;
    v23 = *(_QWORD *)(v8 + 240);
    sub_100112010((_QWORD *)(v8 + 16));
    v26 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1008322B0 + dword_1008322B0);
    v24 = (_QWORD *)swift_task_alloc(unk_1008322B4);
    *(_QWORD *)(v8 + 352) = v24;
    *v24 = v8;
    v24[1] = sub_1003DB3F0;
    return v26(v23, *(_QWORD *)(v8 + 272));
  }
  else
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, a2, a3, a4, a5, a6, a7, a8);
    return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v8 + 8))(&_swiftEmptyArrayStorage);
  }
}

uint64_t sub_1003DB3F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 352);
  *(_QWORD *)(*(_QWORD *)v1 + 360) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003DB44C, 0, 0);
}

uint64_t sub_1003DB44C()
{
  uint64_t v0;
  uint64_t v1;
  const char *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t (*v36)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 360);
  sub_100112258((_QWORD *)(v0 + 16));
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 320), v2, v3, v4, v5, v6, v7, v8);
    v9 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 360);
    return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v0 + 8))(v9);
  }
  v11 = *(_QWORD *)(v0 + 336);
  v10 = *(_QWORD *)(v0 + 344);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 360), v2, v3, v4, v5, v6, v7, v8);
  if (v10 == v11)
  {
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 320), v12, v13, v14, v15, v16, v17, v18);
    v9 = &_swiftEmptyArrayStorage;
    return (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *))(v0 + 8))(v9);
  }
  v20 = *(_QWORD *)(v0 + 344);
  v21 = (_OWORD *)(*(_QWORD *)(v0 + 320) + (v20 << 8));
  v22 = v21[5];
  v24 = v21[2];
  v23 = v21[3];
  *(_OWORD *)(v0 + 48) = v21[4];
  *(_OWORD *)(v0 + 64) = v22;
  *(_OWORD *)(v0 + 16) = v24;
  *(_OWORD *)(v0 + 32) = v23;
  v25 = v21[9];
  v27 = v21[6];
  v26 = v21[7];
  *(_OWORD *)(v0 + 112) = v21[8];
  *(_OWORD *)(v0 + 128) = v25;
  *(_OWORD *)(v0 + 80) = v27;
  *(_OWORD *)(v0 + 96) = v26;
  v28 = v21[13];
  v30 = v21[10];
  v29 = v21[11];
  *(_OWORD *)(v0 + 176) = v21[12];
  *(_OWORD *)(v0 + 192) = v28;
  *(_OWORD *)(v0 + 144) = v30;
  *(_OWORD *)(v0 + 160) = v29;
  v31 = v21[17];
  v33 = v21[14];
  v32 = v21[15];
  *(_OWORD *)(v0 + 240) = v21[16];
  *(_OWORD *)(v0 + 256) = v31;
  *(_OWORD *)(v0 + 208) = v33;
  *(_OWORD *)(v0 + 224) = v32;
  *(_QWORD *)(v0 + 344) = v20 + 1;
  v34 = *(_QWORD *)(v0 + 240);
  sub_100112010((_QWORD *)(v0 + 16));
  v36 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1008322B0 + dword_1008322B0);
  v35 = (_QWORD *)swift_task_alloc(unk_1008322B4);
  *(_QWORD *)(v0 + 352) = v35;
  *v35 = v0;
  v35[1] = sub_1003DB3F0;
  return v36(v34, *(_QWORD *)(v0 + 272));
}

uint64_t sub_1003DB57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 304);
  swift_release(*(_QWORD *)(v0 + 288));
  swift_release(v1);
  swift_release(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003DB63C(uint64_t a1)
{
  return sub_1003DB9C0(a1, qword_10086A868, (uint64_t (*)(void))sub_1003DB650);
}

id sub_1003DB650()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  id result;
  void *v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  void *v27;
  NSString *v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  _BYTE v33[72];

  v0 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v0);
  v2 = &v33[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = sub_100047110((uint64_t *)&unk_10082EDF0);
  v4 = __chkstk_darwin(v3);
  v6 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for UIButton.Configuration.Size(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  static UIButton.Configuration.filled()(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for UIButton.Configuration.Size.small(_:), v7);
  UIButton.Configuration.buttonSize.setter(v11);
  result = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "keyColors");
  if (result)
  {
    v13 = result;
    v14 = objc_msgSend(result, "nonGradientTextColor");

    UIButton.Configuration.baseBackgroundColor.setter(v14);
    v15 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlackColor");
    UIButton.Configuration.baseForegroundColor.setter(v15);
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v16);

    UIButton.Configuration.image.setter(v17);
    if (qword_10081DCF8 != -1)
      swift_once(&qword_10081DCF8, sub_1003DBCF8);
    v18 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", qword_10086A898, 1);
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v18);
    v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, 0, 0);

    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

    v25 = sub_100047110((uint64_t *)&unk_10082EDA0);
    inited = swift_initStackObject(v25, v33);
    *(_OWORD *)(inited + 16) = xmmword_100622F90;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v27 = (void *)qword_10086A898;
    *(_QWORD *)(inited + 64) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v27;
    v28 = NSFontAttributeName;
    v29 = v27;
    v30 = sub_100038C84(inited);
    AttributeContainer.init(_:)(v30);
    AttributedString.init(_:attributes:)(v22, v24, v2);
    v31 = type metadata accessor for AttributedString(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v6, 0, 1, v31);
    return (id)UIButton.Configuration.attributedTitle.setter(v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003DB9AC(uint64_t a1)
{
  return sub_1003DB9C0(a1, qword_10086A880, (uint64_t (*)(void))sub_1003DBA10);
}

uint64_t sub_1003DB9C0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5;

  v5 = type metadata accessor for UIButton.Configuration(0);
  sub_100008398(v5, a2);
  sub_10003CE9C(v5, (uint64_t)a2);
  return a3();
}

id sub_1003DBA10()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  id v12;
  id result;
  void *v14;
  id v15;
  id v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  NSString *v25;
  void *v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  _BYTE v31[72];

  v0 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v0);
  v2 = &v31[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = sub_100047110((uint64_t *)&unk_10082EDF0);
  v4 = __chkstk_darwin(v3);
  v6 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for UIButton.Configuration.Size(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  static UIButton.Configuration.filled()(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for UIButton.Configuration.Size.small(_:), v7);
  UIButton.Configuration.buttonSize.setter(v11);
  v12 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
  UIButton.Configuration.baseBackgroundColor.setter(v12);
  result = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "keyColors");
  if (result)
  {
    v14 = result;
    v15 = objc_msgSend(result, "nonGradientTextColor");

    UIButton.Configuration.baseForegroundColor.setter(v15);
    v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, 0, 0);

    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v22 = sub_100047110((uint64_t *)&unk_10082EDA0);
    inited = swift_initStackObject(v22, v31);
    *(_OWORD *)(inited + 16) = xmmword_100622F90;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v24 = qword_10081DCF8;
    v25 = NSFontAttributeName;
    if (v24 != -1)
      swift_once(&qword_10081DCF8, sub_1003DBCF8);
    v26 = (void *)qword_10086A898;
    *(_QWORD *)(inited + 64) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v26;
    v27 = v26;
    v28 = sub_100038C84(inited);
    AttributeContainer.init(_:)(v28);
    AttributedString.init(_:attributes:)(v19, v21, v2);
    v29 = type metadata accessor for AttributedString(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v6, 0, 1, v29);
    return (id)UIButton.Configuration.attributedTitle.setter(v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1003DBCF8()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "_preferredFontDescriptorWithTextStyle:weight:", UIFontTextStyleSubheadline, UIFontWeightSemibold);
  if (v0)
  {
    v1 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v0, 0.0);

  }
  else
  {
    v1 = objc_msgSend(objc_allocWithZone((Class)UIFont), "init");
  }
  qword_10086A898 = (uint64_t)v1;
}

char *sub_1003DBDA0(void *a1, void *a2)
{
  char *v2;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  __n128 v45;
  id v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  objc_class *v51;
  id v52;
  char *v53;
  char *result;
  void *v55;
  uint64_t v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  __n128 v66;
  uint64_t KeyPath;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  char *v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void (*v90)(char *, uint64_t, uint64_t);
  void *v91;
  void *v92;
  uint64_t v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  id v100;
  id aBlock[5];
  uint64_t v102;
  objc_super v103;

  v100 = a1;
  v99 = type metadata accessor for UIButton.Configuration(0);
  v97 = *(_QWORD *)(v99 - 8);
  v4 = __chkstk_darwin(v99);
  v98 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Tips.ConfigurationOption.DisplayFrequency(0, v4);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_paletteBannerInsets];
  *(_OWORD *)v10 = xmmword_10063B150;
  *((_OWORD *)v10 + 1) = xmmword_10063B150;
  v11 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_impressionsTracker;
  v12 = type metadata accessor for ActivityDashboardImpressionsTracker();
  v13 = (_QWORD *)swift_allocObject(v12, 48, 7);
  type metadata accessor for BasicImpressionsTracker(0);
  v14 = v2;
  v13[2] = BasicImpressionsTracker.__allocating_init(threshold:)(0.5);
  v13[3] = &protocol witness table for BasicImpressionsTracker;
  v13[4] = 0;
  v13[5] = sub_10004D47C((uint64_t)&_swiftEmptyArrayStorage);
  *(_QWORD *)&v2[v11] = v13;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_achievementTransitionAnimator] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerViewController] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_transitionAnimatorFromViewController] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource] = 0;
  swift_unknownObjectWeakInit(&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_trophyCaseViewControllerDelegate], 0);
  swift_unknownObjectWeakInit(&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_historyPagingViewControllerDelegate], 0);
  v15 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dashboardCardCellViewCache;
  v16 = type metadata accessor for DashboardCardCellViewCache();
  v17 = swift_allocObject(v16, 40, 7);
  *(_BYTE *)(v17 + 16) = 1;
  *(_QWORD *)(v17 + 24) = sub_10043D6F8((uint64_t)&_swiftEmptyArrayStorage);
  *(_QWORD *)(v17 + 32) = sub_10043D6F8((uint64_t)&_swiftEmptyArrayStorage);
  *(_QWORD *)&v14[v15] = v17;
  v18 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_addButton;
  *(_QWORD *)&v14[v18] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v19 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_doneButton;
  v20 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  *(_QWORD *)&v14[v19] = v20;
  v21 = UUID.init()(v20);
  UUID.init()(v21);
  v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_visibility] = 0;
  v22 = &v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_initialPresentation];
  *(_QWORD *)v22 = 0;
  v22[8] = 1;
  v23 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_accountButton;
  v24 = type metadata accessor for AccountButton(0);
  v25 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v24)), "init");
  *(_QWORD *)&v14[v23] = v25;
  v26 = UUID.init()(v25);
  UUID.init()(v26);
  v27 = &v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dashboardTipReuseIdentifier];
  *(_QWORD *)v27 = 0xD00000000000001ELL;
  *((_QWORD *)v27 + 1) = 0x800000010069E520;
  v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_isNavigationBarSetup] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_observers] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_keyValueObservers] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_resignActiveObserver] = 0;
  v28 = &v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController____lazy_storage___onDismissAddCardModal];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_ringCardIndex] = 0;
  v29 = sub_100047110((uint64_t *)&unk_1008325A0);
  v30 = *(_QWORD *)(type metadata accessor for Tips.ConfigurationOption(0) - 8);
  v31 = swift_allocObject(v29, ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72), *(unsigned __int8 *)(v30 + 80) | 7);
  *(_OWORD *)(v31 + 16) = xmmword_100622F90;
  static Tips.ConfigurationOption.DisplayFrequency.daily.getter();
  static Tips.ConfigurationOption.displayFrequency(_:)(v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  static Tips.configure(_:)(v31);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v32, v33, v34, v35, v36, v37, v38);
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context] = a2;
  v39 = objc_allocWithZone((Class)type metadata accessor for SummaryCoordinator());
  v40 = a2;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator] = sub_1003649BC(v40);
  v41 = *(char **)&v40[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext];
  v42 = *(_QWORD *)&v41[OBJC_IVAR___CHFitnessAppContext_dependencies];
  v43 = type metadata accessor for SummaryBannerActionPresenter(0);
  swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
  v44 = v41;
  v45 = swift_retain(v42);
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryBannerActionPresenter] = SummaryBannerActionPresenter.init(dependencies:placement:)(v45);
  v46 = objc_allocWithZone((Class)type metadata accessor for MarketingPaletteBannerPresenter(0));
  v47 = swift_retain(v42);
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerPresenter] = MarketingPaletteBannerPresenter.init(dependencies:placement:)(v47);
  v48 = type metadata accessor for LoadingCardHeightProvider();
  v49 = swift_allocObject(v48, 24, 7);
  *(_QWORD *)(v49 + 16) = sub_1005D7C90();
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_loadingCardHeightProvider] = v49;

  v50 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v51 = (objc_class *)type metadata accessor for ActivityDashboardViewController(0);
  v103.receiver = v14;
  v103.super_class = v51;
  v52 = objc_msgSendSuper2(&v103, "initWithCollectionViewLayout:", v50);

  v53 = (char *)v52;
  result = (char *)objc_msgSend(v53, "collectionView");
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v55 = result;
  v56 = swift_unknownObjectWeakInit(aBlock, v53);
  swift_unknownObjectWeakDestroy(v56);
  v57 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  aBlock[4] = sub_1003DE724;
  v102 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_100319084;
  aBlock[3] = &unk_10079E1C8;
  v58 = _Block_copy(aBlock);
  v59 = objc_msgSend(v57, "initWithSectionProvider:", v58);
  _Block_release(v58);
  objc_msgSend(v55, "setCollectionViewLayout:", v59, swift_release(v102).n128_f64[0]);

  result = (char *)objc_msgSend(v53, "collectionView");
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v60 = result;
  objc_msgSend(result, "_setReorderFeedbackGenerator:", 0);

  v61 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator;
  v62 = *(_QWORD *)&v53[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator]
      + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_delegate;
  *(_QWORD *)(v62 + 8) = &off_10079DDA0;
  swift_unknownObjectWeakAssign(v62, v53);
  v63 = *(_QWORD *)&v53[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryBannerActionPresenter];
  v64 = swift_allocObject(&unk_10079E200, 24, 7);
  *(_QWORD *)(v64 + 16) = v44;
  v65 = v44;
  v66 = swift_retain(v63);
  dispatch thunk of SummaryBannerActionPresenter.onNavigateToURLAction.setter(sub_1003E8310, v64, v66);
  swift_release(v63);
  sub_1003E2E98();
  sub_1003DCFA8();
  result = (char *)objc_msgSend(v53, "collectionView");
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  aBlock[0] = result;
  KeyPath = swift_getKeyPath(&unk_10063B460);
  v68 = swift_allocObject(&unk_10079DDC8, 24, 7);
  swift_unknownObjectWeakInit(v68 + 16, v53);
  v69 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 3, sub_1003E835C, v68, &protocol witness table for NSObject);
  swift_release(v68);
  swift_release(KeyPath);

  v70 = sub_100047110((uint64_t *)&unk_100828340);
  v71 = swift_allocObject(v70, 40, 7);
  *(_OWORD *)(v71 + 16) = xmmword_100623630;
  *(_QWORD *)(v71 + 32) = v69;
  aBlock[0] = (id)v71;
  specialized Array._endMutation()(v71);
  v72 = *(CHWorkoutDetailHeartRateTableViewCell **)&v53[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_keyValueObservers];
  *(id *)&v53[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_keyValueObservers] = aBlock[0];
  swift_bridgeObjectRelease(v72, v73, v74, v75, v76, v77, v78, v79);
  v80 = *(id *)&v53[v61];
  sub_10035FB10();

  v81 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerPresenter;
  v82 = *(void **)&v53[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerPresenter];
  v83 = sub_1000083D8(&qword_1008325B0, type metadata accessor for ActivityDashboardViewController, (uint64_t)&unk_10063B308);
  v84 = v53;
  v85 = v82;
  dispatch thunk of MarketingPaletteBannerPresenter.display.setter(v53, v83);

  v86 = *(id *)&v53[v81];
  dispatch thunk of MarketingPaletteBannerPresenter.activate()();

  sub_10001E724(0, &qword_1008325B8, UIButton_ptr);
  if (qword_10081DCE8 != -1)
    swift_once(&qword_10081DCE8, sub_1003DB63C);
  v87 = v99;
  v88 = sub_10003CE9C(v99, (uint64_t)qword_10086A868);
  v89 = v98;
  v90 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 16);
  v90(v98, v88, v87);
  v91 = (void *)UIButton.init(configuration:primaryAction:)(v89, 0);
  objc_msgSend(v91, "addTarget:action:forControlEvents:", v84, "didTapAddCard", 64);
  v92 = *(void **)&v84[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_addButton];
  *(_QWORD *)&v84[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_addButton] = v91;

  if (qword_10081DCF0 != -1)
    swift_once(&qword_10081DCF0, sub_1003DB9AC);
  v93 = sub_10003CE9C(v87, (uint64_t)qword_10086A880);
  v90(v89, v93, v87);
  v94 = (void *)UIButton.init(configuration:primaryAction:)(v89, 0);
  objc_msgSend(v94, "addTarget:action:forControlEvents:", v84, "didTapDone", 64);

  v95 = *(void **)&v84[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_doneButton];
  *(_QWORD *)&v84[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_doneButton] = v94;

  return v84;
}

void *sub_1003DC69C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *result;
  void *v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (void *)swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR___CHFitnessAppContext_navigationDelegate);
  if (result)
  {
    v8 = result;
    v9 = objc_msgSend(result, "navigateToSeymourTab");
    if ((_DWORD)v9)
    {
      static Log.default.getter(v9);
      v10._countAndFlagsBits = 0xD000000000000059;
      v10._object = (void *)0x8000000100690C90;
      v11._object = (void *)0x8000000100690CF0;
      v11._countAndFlagsBits = 0xD000000000000027;
      Logger.trace(file:function:)(v10, v11);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_100537108(1);
      return (void *)swift_unknownObjectRelease(v8);
    }
    else
    {
      return (void *)swift_unknownObjectRelease(v8);
    }
  }
  return result;
}

void sub_1003DC814()
{
  char *v0;
  id v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  CHWorkoutDetailHeartRateTableViewCell *v3;
  NSString v4;
  SEL v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  NSString v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[5];
  objc_super v44;

  v44.receiver = v0;
  v44.super_class = (Class)type metadata accessor for ActivityDashboardViewController(0);
  v1 = objc_msgSendSuper2(&v44, "viewDidLoad");
  static FitnessAccessibilityIdentifier.SummaryView.base.getter(v1);
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3, v5, v6, v7, v8, v9, v10, v11);
  objc_msgSend(v0, "setAccessibilityIdentifier:", v4);

  v12 = objc_msgSend(v0, "collectionView");
  if (!v12)
  {
    __break(1u);
    goto LABEL_8;
  }
  v13 = v12;
  v14 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  objc_msgSend(v13, "setBackgroundColor:", v14);

  v15 = objc_msgSend(v0, "collectionView");
  if (!v15)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v16 = v15;
  v17 = type metadata accessor for ActivityDashboardCardCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v19);

  v20 = objc_msgSend(v0, "collectionView");
  if (!v20)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v21 = v20;
  v22 = type metadata accessor for ActivityDashboardEditButtonCell();
  v23 = swift_getObjCClassFromMetadata(v22);
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "registerClass:forCellWithReuseIdentifier:", v23, v24);

  v25 = objc_msgSend(v0, "collectionView");
  if (!v25)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v26 = v25;
  v27 = type metadata accessor for ActivityDashboardEntryLinksButtonCell();
  v28 = swift_getObjCClassFromMetadata(v27);
  v29 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "registerClass:forCellWithReuseIdentifier:", v28, v29);

  v30 = objc_msgSend(v0, "collectionView");
  if (v30)
  {
    v31 = v30;
    v32 = type metadata accessor for TipUICollectionViewCell(0);
    v33 = swift_getObjCClassFromMetadata(v32);
    v34 = String._bridgeToObjectiveC()();
    objc_msgSend(v31, "registerClass:forCellWithReuseIdentifier:", v33, v34);

    v35 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
    v36 = *(_QWORD *)(v35 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_eventHub);
    v37 = *(_QWORD *)(v35 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_eventHub + 8);
    ObjectType = swift_getObjectType(v36);
    v39 = type metadata accessor for AvatarSettingsChanged(0);
    v40 = *(_QWORD *)(v35 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_subscriptionToken);
    v41 = swift_allocObject(&unk_10079DDC8, 24, 7);
    swift_unknownObjectWeakInit(v41 + 16, v0);
    v42 = sub_1000083D8(&qword_100828448, (uint64_t (*)(uint64_t))&type metadata accessor for AvatarSettingsChanged, (uint64_t)&protocol conformance descriptor for AvatarSettingsChanged);
    swift_unknownObjectRetain(v36);
    swift_retain(v40);
    swift_retain(v41);
    dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(v43, v39, v40, sub_1003E82E4, v41, v39, v42, ObjectType, v37);
    swift_release(v41);
    swift_release(v40);
    swift_unknownObjectRelease(v36);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v43);
    swift_release(v41);
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_1003DCBA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1003E2D7C();

  }
}

id sub_1003DCC2C()
{
  char *v0;
  CHWorkoutDetailHeartRateTableViewCell *v1;
  void *v2;
  const char *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  objc_super v18;
  _QWORD v19[3];
  uint64_t v20;

  v1 = *(CHWorkoutDetailHeartRateTableViewCell **)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_observers];
  v2 = (void *)objc_opt_self(NSNotificationCenter);
  v10 = objc_msgSend(v2, "defaultCenter", swift_bridgeObjectRetain(v1).n128_f64[0]);
  v11 = *(_QWORD *)v1->cellPadding;
  if (v11)
  {
    v12 = (uint64_t)&v1[1];
    swift_bridgeObjectRetain(v1);
    v13 = v10;
    do
    {
      sub_10003E9BC(v12, (uint64_t)v19);
      v14 = v20;
      v15 = sub_100016804(v19, v20);
      v16 = _bridgeAnythingToObjectiveC<A>(_:)(v15, v14);
      objc_msgSend(v13, "removeObserver:", v16);
      swift_unknownObjectRelease(v16);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v19);
      v12 += 32;
      --v11;
    }
    while (v11);

    swift_bridgeObjectRelease_n(v1, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v1, v3, v4, v5, v6, v7, v8, v9);

  }
  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for ActivityDashboardViewController(0);
  return objc_msgSendSuper2(&v18, "dealloc");
}

uint64_t sub_1003DCF64()
{
  return type metadata accessor for ActivityDashboardViewController(0);
}

uint64_t type metadata accessor for ActivityDashboardViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1008323D8;
  if (!qword_1008323D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActivityDashboardViewController);
  return result;
}

uint64_t sub_1003DCFA8()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t result;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void **v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void *v38;
  void (*v39)(uint64_t);
  uint64_t v40;

  ObjectType = swift_getObjectType(v0);
  result = (uint64_t)sub_10000AB48();
  if ((result & 1) == 0)
  {
    v3 = (void *)objc_opt_self(NSNotificationCenter);
    v4 = objc_msgSend(v3, "defaultCenter");
    v5 = (void *)objc_opt_self(NSOperationQueue);
    v6 = objc_msgSend(v5, "mainQueue");
    v7 = swift_allocObject(&unk_10079DDC8, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16, v0);
    v8 = swift_allocObject(&unk_10079DFF8, 32, 7);
    *(_QWORD *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = ObjectType;
    v39 = sub_1003E8070;
    v40 = v8;
    v35 = _NSConcreteStackBlock;
    v36 = 1107296256;
    v37 = sub_1000398D4;
    v38 = &unk_10079E010;
    v9 = _Block_copy(&v35);
    v10 = objc_msgSend(v4, "addObserverForName:object:queue:usingBlock:", UIApplicationSignificantTimeChangeNotification, 0, v6, v9, swift_release(v40).n128_f64[0]);
    _Block_release(v9);

    v11 = objc_msgSend(v3, "defaultCenter");
    v12 = kFIUIFitnessUnitPreferencesDidChangeNotification;
    v13 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context)+ OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fiuiFormattingManager), "unitManager");
    v14 = objc_msgSend(v5, "mainQueue");
    v15 = swift_allocObject(&unk_10079DDC8, 24, 7);
    swift_unknownObjectWeakInit(v15 + 16, v0);
    v16 = swift_allocObject(&unk_10079E048, 32, 7);
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(v16 + 24) = ObjectType;
    v39 = sub_1003E8078;
    v40 = v16;
    v35 = _NSConcreteStackBlock;
    v36 = 1107296256;
    v37 = sub_1000398D4;
    v38 = &unk_10079E060;
    v17 = _Block_copy(&v35);
    v18 = objc_msgSend(v11, "addObserverForName:object:queue:usingBlock:", v12, v13, v14, v17, swift_release(v40).n128_f64[0]);
    _Block_release(v17);

    v19 = objc_msgSend(v3, "defaultCenter");
    v20 = objc_msgSend(v5, "mainQueue");
    v21 = swift_allocObject(&unk_10079DDC8, 24, 7);
    swift_unknownObjectWeakInit(v21 + 16, v0);
    v39 = sub_1003E8080;
    v40 = v21;
    v35 = _NSConcreteStackBlock;
    v36 = 1107296256;
    v37 = sub_1000398D4;
    v38 = &unk_10079E088;
    v22 = _Block_copy(&v35);
    v23 = objc_msgSend(v19, "addObserverForName:object:queue:usingBlock:", UIApplicationDidBecomeActiveNotification, 0, v20, v22, swift_release(v40).n128_f64[0]);
    _Block_release(v22);

    v24 = sub_100047110(&qword_10082CEC0);
    v25 = swift_allocObject(v24, 128, 7);
    *(_OWORD *)(v25 + 16) = xmmword_100624A40;
    *(_QWORD *)(v25 + 56) = swift_getObjectType(v10);
    *(_QWORD *)(v25 + 32) = v10;
    *(_QWORD *)(v25 + 88) = swift_getObjectType(v18);
    *(_QWORD *)(v25 + 64) = v18;
    *(_QWORD *)(v25 + 120) = swift_getObjectType(v23);
    *(_QWORD *)(v25 + 96) = v23;
    v26 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0
                                                    + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_observers);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_observers) = v25;
    swift_unknownObjectRetain(v10);
    swift_unknownObjectRetain(v18);
    swift_unknownObjectRetain(v23);
    swift_bridgeObjectRelease(v26, v27, v28, v29, v30, v31, v32, v33);
    v34 = objc_msgSend(v3, "defaultCenter");
    objc_msgSend(v34, "addObserver:selector:name:object:", v0, "textSizeChanged:", UIContentSizeCategoryDidChangeNotification, 0);

    swift_unknownObjectRelease(v23);
    swift_unknownObjectRelease(v18);
    return swift_unknownObjectRelease(v10);
  }
  return result;
}

void sub_1003DD428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  void *v12;
  os_log_type_t v13;
  NSObject *v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t Strong;
  void *v31;
  id v32;
  id v33;
  Class isa;
  NSString v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[3];

  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2 + 16;
  v11 = static os_log_type_t.default.getter(v10);
  v12 = (void *)HKLogActivity;
  v13 = v11;
  if (os_log_type_enabled(HKLogActivity, v11))
  {
    v14 = v12;
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    v46 = v6;
    v17 = v5;
    v18 = v16;
    v48[0] = v16;
    *(_DWORD *)v15 = 136315138;
    v19 = _typeName(_:qualified:)(a3, 0);
    v21 = (CHWorkoutDetailHeartRateTableViewCell *)v20;
    v47 = sub_10003E8EC(v19, v20, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v15 + 4);
    swift_bridgeObjectRelease(v21, v22, v23, v24, v25, v26, v27, v28);
    _os_log_impl((void *)&_mh_execute_header, v14, v13, "%s did receive significantTimeChangeNotification notification", v15, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    v29 = v18;
    v5 = v17;
    v6 = v46;
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  swift_beginAccess(v9, v48, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v31 = (void *)Strong;
    Date.init()(Strong);
    v32 = objc_msgSend(v31, "navigationItem");
    if (qword_10081DD00 != -1)
      swift_once(&qword_10081DD00, sub_1003DEEF0);
    v33 = (id)qword_1008322D0;
    isa = Date._bridgeToObjectiveC()().super.isa;
    v35 = objc_msgSend(v33, "stringFromDate:", isa);

    if (!v35)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v37 = v36;
      v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v37, v38, v39, v40, v41, v42, v43, v44);
    }
    objc_msgSend(v32, "_setWeeTitle:", v35);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_1003DD6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_log_type_t v5;
  void *v6;
  os_log_type_t v7;
  NSObject *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *Strong;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25[3];

  v4 = a2 + 16;
  v5 = static os_log_type_t.default.getter(a1);
  v6 = (void *)HKLogActivity;
  v7 = v5;
  if (os_log_type_enabled(HKLogActivity, v5))
  {
    v8 = v6;
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v25[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = _typeName(_:qualified:)(a3, 0);
    v13 = (CHWorkoutDetailHeartRateTableViewCell *)v12;
    v24 = sub_10003E8EC(v11, v12, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v9 + 4);
    swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
    _os_log_impl((void *)&_mh_execute_header, v8, v7, "%s did receive fiuiFitnessUnitPreferencesDidChange notification", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  swift_beginAccess(v4, v25, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v22 = Strong;
    v23 = objc_msgSend(Strong, "collectionView");

    if (v23)
    {
      objc_msgSend(v23, "reloadData");

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1003DD860(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *Strong;
  int v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  double v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  __n128 v46;
  uint64_t v47;
  char *v48;
  id v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t, __n128);
  Class isa;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  void (*v60)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v64;
  Class v65;
  id v66;
  void *v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell **v79;
  CHWorkoutDetailHeartRateTableViewCell *v80;
  unint64_t v81;
  SEL v82;
  char v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  char isUniquelyReferenced_nonNull_native;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  void (*v92)(unint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  CHWorkoutDetailHeartRateTableViewCell *v95;
  SEL v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  char *v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  CHWorkoutDetailHeartRateTableViewCell *v108;
  SEL v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  uint64_t v116;
  char *v117;
  __n128 v118;
  uint64_t v119;
  char *v120;
  char *v121;
  id v122;
  void (*v123)(char *, char *, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell **v124;
  void (*v125)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  id v131;
  uint64_t v132;
  void (*v133)(char *, unint64_t, uint64_t, __n128);
  char *v134;
  unint64_t v135;
  id v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  _QWORD v141[3];
  uint64_t v142;
  uint64_t v143;
  char v144[24];
  _BYTE v145[24];
  uint64_t v146;
  char v147[8];
  char v148[8];
  char v149[8];
  char v150[8];

  v3 = sub_100047110(&qword_10082CDC8);
  __chkstk_darwin(v3);
  v5 = (char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v119 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v119 - v10;
  v12 = type metadata accessor for ImpressionMetrics(0);
  v138 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v134 = (char *)&v119 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v137 = (char *)&v119 - v15;
  v16 = type metadata accessor for IndexPath(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v135 = (unint64_t)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v140 = (char *)&v119 - v20;
  v21 = sub_100047110(&qword_100832500);
  __chkstk_darwin(v21);
  v139 = (char *)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a2 + 16;
  swift_beginAccess(v23, v150, 0, 0);
  Strong = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong(v23);
  if (Strong)
  {
    v25 = Strong[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_visibility];

    if (v25 == 2)
    {
      swift_beginAccess(v23, v149, 0, 0);
      v26 = (void *)swift_unknownObjectWeakLoadStrong(v23);
      if (v26)
      {
        v27 = v26;
        v28 = objc_msgSend(v26, "collectionView");

        v136 = v28;
        if (v28)
        {
          swift_beginAccess(v23, v148, 0, 0);
          v29 = swift_unknownObjectWeakLoadStrong(v23);
          if (v29)
          {
            v30 = (void *)v29;
            v31 = *(_QWORD *)(v29 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_impressionsTracker);
            swift_retain(v31);

            v124 = (CHWorkoutDetailHeartRateTableViewCell **)(v31 + 40);
            swift_beginAccess(v31 + 40, v147, 1, 0);
            v32 = *(CHWorkoutDetailHeartRateTableViewCell **)(v31 + 40);
            *(_QWORD *)(v31 + 40) = _swiftEmptyDictionarySingleton;
            swift_bridgeObjectRelease(v32, v33, v34, v35, v36, v37, v38, v39);
            v127 = v31;
            v40 = sub_100030B80();
            ImpressionsCalculator.removeAllElements()();
            *(_QWORD *)&v41 = swift_release(v40).n128_u64[0];
            v42 = objc_msgSend(v136, "indexPathsForVisibleItems", v41);
            v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, v16);

            v44 = *(_QWORD *)(v43 + 16);
            v126 = v43;
            if (v44)
            {
              v121 = v8;
              v120 = v5;
              v45 = v43 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
              v132 = *(_QWORD *)(v17 + 72);
              v133 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v17 + 16);
              v46 = swift_bridgeObjectRetain(v43);
              v47 = v138;
              v48 = v139;
              v130 = v11;
              v129 = v12;
              v128 = v17;
              while (1)
              {
                v133(v48, v45, v16, v46);
                v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56);
                ((void (*)(char *, _QWORD, uint64_t, uint64_t))v50)(v48, 0, 1, v16);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v48, 1, v16) == 1)
                  goto LABEL_31;
                (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v140, v48, v16);
                isa = IndexPath._bridgeToObjectiveC()().super.isa;
                v49 = objc_msgSend(v136, "cellForItemAtIndexPath:", isa);

                if (v49)
                  break;
LABEL_12:
                (*(void (**)(char *, uint64_t))(v17 + 8))(v140, v16);
                v45 += v132;
                --v44;
                v48 = v139;
                if (!v44)
                  goto LABEL_30;
              }
              v52 = type metadata accessor for ActivityDashboardCardCell();
              v53 = swift_dynamicCastClass(v49, v52);
              if (!v53)
              {
LABEL_11:

                goto LABEL_12;
              }
              v131 = v49;
              v54 = v53 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_card;
              swift_beginAccess(v53 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_card, v144, 0, 0);
              sub_100021CC0(v54, (uint64_t)v145, &qword_100832410);
              if (v146)
              {
                sub_1000252E0((uint64_t)v145, (uint64_t)v141);
                sub_10001BE90((uint64_t)v145, &qword_100832410);
                v55 = v142;
                v56 = v143;
                v57 = v47;
                v58 = sub_100016804(v141, v142);
                v59 = IndexPath.item.getter(v58);
                v60 = *(void (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v56 + 64);
                v61 = v55;
                v11 = v130;
                v62 = v56;
                v12 = v129;
                v60(0, 0, v59, v61, v62);
                _s10FitnessApp24HistoryViewActionContextVwxx_0(v141);
                v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 48);
                v17 = v128;
                if (((unsigned int (*)(char *, uint64_t, uint64_t))v63)(v11, 1, v12) != 1)
                {
                  v125 = v63;
                  v47 = v138;
                  v123 = *(void (**)(char *, char *, uint64_t))(v138 + 32);
                  v123(v137, v11, v12);
                  v64 = v140;
                  v65 = IndexPath._bridgeToObjectiveC()().super.isa;
                  v66 = objc_msgSend(v136, "layoutAttributesForItemAtIndexPath:", v65);

                  v67 = v66;
                  v49 = v131;
                  if (!v67)
                  {
                    v12 = v129;
                    (*(void (**)(char *, uint64_t))(v47 + 8))(v137, v129);
                    goto LABEL_11;
                  }
                  v122 = v67;
                  objc_msgSend(v67, "frame");
                  v69 = v68;
                  v71 = v70;
                  v73 = v72;
                  v75 = v74;
                  ((void (*)(unint64_t, char *, uint64_t))v133)(v135, v64, v16);
                  v76 = (uint64_t)v121;
                  v77 = v129;
                  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v121, v137, v129);
                  v78 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
                  v78(v76, 0, 1, v77);
                  v79 = v124;
                  swift_beginAccess(v124, v145, 33, 0);
                  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v125)(v76, 1, v77) == 1)
                  {
                    v125 = v78;
                    sub_10001BE90(v76, &qword_10082CDC8);
                    v80 = *v79;
                    swift_bridgeObjectRetain(*v79);
                    v81 = sub_10002252C(v135);
                    v83 = (char)v82;
                    swift_bridgeObjectRelease(v80, v82, v84, v85, v86, v87, v88, v89);
                    if ((v83 & 1) != 0)
                    {
                      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v79);
                      v91 = *v79;
                      v141[0] = *v79;
                      *v79 = (CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000;
                      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                      {
                        sub_100401A2C();
                        v91 = (CHWorkoutDetailHeartRateTableViewCell *)v141[0];
                      }
                      v92 = *(void (**)(unint64_t, uint64_t))(v17 + 8);
                      v92(*(_QWORD *)v91[1].cellPadding + v81 * v132, v16);
                      v93 = v141[0];
                      v94 = (uint64_t)v120;
                      v12 = v129;
                      v123(v120, (char *)(*(_QWORD *)(v141[0] + 56) + *(_QWORD *)(v138 + 72) * v81), v129);
                      sub_1004D1D00(v81, v93);
                      v95 = *v124;
                      *v124 = (CHWorkoutDetailHeartRateTableViewCell *)v93;
                      swift_bridgeObjectRelease(v95, v96, v97, v98, v99, v100, v101, v102);
                      v125(v94, 0, 1, v12);
                    }
                    else
                    {
                      v94 = (uint64_t)v120;
                      v12 = v129;
                      v125((uint64_t)v120, 1, 1, v129);
                      v92 = *(void (**)(unint64_t, uint64_t))(v17 + 8);
                    }
                    v92(v135, v16);
                    sub_10001BE90(v94, &qword_10082CDC8);
                    v11 = v130;
                  }
                  else
                  {
                    v103 = v134;
                    v104 = v129;
                    v123(v134, (char *)v76, v129);
                    v105 = swift_isUniquelyReferenced_nonNull_native(*v79);
                    v141[0] = *v79;
                    *v79 = (CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000;
                    v106 = (uint64_t)v103;
                    v107 = v135;
                    sub_1000223A4(v106, v135, v105);
                    v108 = *v79;
                    *v79 = (CHWorkoutDetailHeartRateTableViewCell *)v141[0];
                    swift_bridgeObjectRelease(v108, v109, v110, v111, v112, v113, v114, v115);
                    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v107, v16);
                    v12 = v104;
                  }
                  swift_endAccess(v145);
                  v116 = sub_100030B80();
                  v117 = v137;
                  ImpressionsCalculator.addElement(_:at:)(v137, v69, v71, v73, v75);

                  v118 = swift_release(v116);
                  v47 = v138;
                  (*(void (**)(char *, uint64_t, __n128))(v138 + 8))(v117, v12, v118);
                  goto LABEL_10;
                }
              }
              else
              {
                sub_10001BE90((uint64_t)v145, &qword_100832410);
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v11, 1, 1, v12);
              }
              sub_10001BE90((uint64_t)v11, &qword_10082CDC8);
              v47 = v138;
LABEL_10:
              v49 = v131;
              goto LABEL_11;
            }
            v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56);
            v46 = swift_bridgeObjectRetain(v43);
            v48 = v139;
LABEL_30:
            v50(v48, 1, 1, v16, v46);
LABEL_31:
            swift_bridgeObjectRelease_n(v126, 2);
            swift_release(v127);
          }

        }
      }
    }
  }
}

void sub_1003DE228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  double v5;
  double v6;
  char v7;
  BOOL v8;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  uint64_t v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  double v23[2];
  char v24;
  _QWORD v25[2];
  char v26;

  v4 = sub_100047110(&qword_100828450);
  NSKeyValueObservedChange.oldValue.getter(v25);
  v5 = *(double *)v25;
  v6 = *(double *)&v25[1];
  v7 = v26;
  NSKeyValueObservedChange.newValue.getter(v23, v4);
  if ((v7 & 1) != 0)
  {
    if ((v24 & 1) != 0)
      return;
    goto LABEL_9;
  }
  if ((v24 & 1) != 0 || (v5 == v23[0] ? (v8 = v6 == v23[1]) : (v8 = 0), !v8))
  {
LABEL_9:
    v9 = a3 + 16;
    swift_beginAccess(v9, v25, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v9);
    if (Strong)
    {
      v11 = (void *)Strong;
      v12 = *(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_impressionsTracker);
      swift_retain(v12);

      v13 = swift_beginAccess(v12 + 40, v23, 0, 0);
      v14 = *(CHWorkoutDetailHeartRateTableViewCell **)(v12 + 40);
      __chkstk_darwin(v13);
      swift_bridgeObjectRetain(v14);
      sub_1003E75BC(v15, (void (*)(char *, char *))sub_1003E8364);
      swift_release(v12);
      swift_bridgeObjectRelease(v14, v16, v17, v18, v19, v20, v21, v22);
    }
  }
}

void sub_1003DE368()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  if (*(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator]
                + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode) == 1)
  {
    v1 = objc_msgSend(v0, "navigationItem");
    v2 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_addButton]);
    objc_msgSend(v1, "setLeftBarButtonItem:", v2);

    v3 = objc_msgSend(v0, "navigationItem");
    v4 = objc_msgSend(v3, "leftBarButtonItem");

    if (v4)
    {
      static FitnessAccessibilityIdentifier.SummaryView.plusSignButton.getter();
      v6 = v5;
      v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v6);
      objc_msgSend(v4, "setAccessibilityIdentifier:", v7);

    }
    v8 = objc_msgSend(v0, "navigationItem");
    v9 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_doneButton]);
    objc_msgSend(v8, "setRightBarButtonItem:", v9);

    v10 = objc_msgSend(v0, "navigationItem");
    v11 = objc_msgSend(v10, "rightBarButtonItem");

    if (v11)
    {
      static FitnessAccessibilityIdentifier.SummaryView.doneButton.getter();
      v13 = v12;
      v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v13);
      objc_msgSend(v11, "setAccessibilityIdentifier:", v14);

    }
  }
}

id sub_1003DE724(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  Class isa;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  double v27;
  double v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  Class v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  Class v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  double v60;
  double v61;
  double v62;
  void *v63;
  id v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  Class v70;
  SEL v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;

  switch(a1)
  {
    case 0:
      v2 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v3 = objc_msgSend(v2, "fractionalWidthDimension:", 1.0);
      v4 = objc_msgSend(v2, "estimatedDimension:", 100.0);
      v5 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v3, v4);

      v6 = (void *)objc_opt_self(NSCollectionLayoutGroup);
      v7 = sub_100047110((uint64_t *)&unk_100828340);
      v8 = swift_allocObject(v7, 40, 7);
      *(_OWORD *)(v8 + 16) = xmmword_100623630;
      v9 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v5);
      *(_QWORD *)(v8 + 32) = v9;
      specialized Array._endMutation()(v9);
      sub_10001E724(0, &qword_10083C030, NSCollectionLayoutItem_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v8, v11, v12, v13, v14, v15, v16, v17);
      v18 = objc_msgSend(v6, "horizontalGroupWithLayoutSize:subitems:", v5, isa);

      v19 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v18);
      objc_msgSend(v19, "setContentInsets:", 0.0, 12.0, 0.0, 12.0);
      goto LABEL_8;
    case 1:
      v21 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v22 = objc_msgSend(v21, "estimatedDimension:", 100.0);
      v23 = objc_msgSend(v21, "estimatedDimension:", 100.0);
      v24 = (void *)objc_opt_self(NSCollectionLayoutSize);
      v25 = objc_msgSend(v24, "sizeWithWidthDimension:heightDimension:", v22, v23);

      v26 = objc_msgSend(a2, "container");
      objc_msgSend(v26, "contentSize");
      v28 = v27;
      swift_unknownObjectRelease(v26);
      v29 = objc_msgSend(v21, "absoluteDimension:", v28);
      v30 = objc_msgSend(v25, "heightDimension");
      v5 = objc_msgSend(v24, "sizeWithWidthDimension:heightDimension:", v29, v30);

      v31 = (void *)objc_opt_self(NSCollectionLayoutGroup);
      v32 = sub_100047110((uint64_t *)&unk_100828340);
      v33 = swift_allocObject(v32, 40, 7);
      *(_OWORD *)(v33 + 16) = xmmword_100623630;
      v34 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v25);
      *(_QWORD *)(v33 + 32) = v34;
      specialized Array._endMutation()(v34);
      sub_10001E724(0, &qword_10083C030, NSCollectionLayoutItem_ptr);
      v35 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v33, v36, v37, v38, v39, v40, v41, v42);
      v18 = objc_msgSend(v31, "horizontalGroupWithLayoutSize:subitems:", v5, v35);

      v43 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSpacing), "fixedSpacing:", 10.0);
      objc_msgSend(v18, "setInterItemSpacing:", v43);

      v19 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v18);
      objc_msgSend(v19, "setContentInsets:", 10.0, 20.0, 10.0, 20.0);
      objc_msgSend(v19, "setInterGroupSpacing:", 10.0);

      goto LABEL_8;
    case 2:
      v44 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v45 = objc_msgSend(v44, "fractionalWidthDimension:", 1.0);
      v46 = objc_msgSend(v44, "estimatedDimension:", 100.0);
      v5 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v45, v46);

      v47 = (void *)objc_opt_self(NSCollectionLayoutGroup);
      v48 = sub_100047110((uint64_t *)&unk_100828340);
      v49 = swift_allocObject(v48, 40, 7);
      *(_OWORD *)(v49 + 16) = xmmword_100623630;
      v50 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v5);
      *(_QWORD *)(v49 + 32) = v50;
      specialized Array._endMutation()(v50);
      sub_10001E724(0, &qword_10083C030, NSCollectionLayoutItem_ptr);
      v51 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v49, v52, v53, v54, v55, v56, v57, v58);
      v18 = objc_msgSend(v47, "horizontalGroupWithLayoutSize:subitems:", v5, v51);

      v59 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v18);
      v19 = v59;
      v60 = 10.0;
      v61 = 20.0;
      v62 = 0.0;
      goto LABEL_7;
    case 3:
      v63 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v64 = objc_msgSend(v63, "fractionalWidthDimension:", 1.0);
      v65 = objc_msgSend(v63, "estimatedDimension:", 100.0);
      v5 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v64, v65);

      v66 = (void *)objc_opt_self(NSCollectionLayoutGroup);
      v67 = sub_100047110((uint64_t *)&unk_100828340);
      v68 = swift_allocObject(v67, 40, 7);
      *(_OWORD *)(v68 + 16) = xmmword_100623630;
      v69 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v5);
      *(_QWORD *)(v68 + 32) = v69;
      specialized Array._endMutation()(v69);
      sub_10001E724(0, &qword_10083C030, NSCollectionLayoutItem_ptr);
      v70 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v68, v71, v72, v73, v74, v75, v76, v77);
      v18 = objc_msgSend(v66, "horizontalGroupWithLayoutSize:subitems:", v5, v70);

      v59 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v18);
      v19 = v59;
      v60 = 10.0;
      v61 = 20.0;
      v62 = 30.0;
LABEL_7:
      objc_msgSend(v59, "setContentInsets:", v60, v61, v62, 20.0);
LABEL_8:

      break;
    default:
      v19 = 0;
      break;
  }
  return v19;
}

id sub_1003DEEF0()
{
  id result;

  result = sub_1003DEF0C();
  qword_1008322D0 = (uint64_t)result;
  return result;
}

id sub_1003DEF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  NSString v6;
  Class isa;
  id v8;
  uint64_t v10;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  objc_msgSend(v4, "setFormattingContext:", 2);
  v5 = (void *)objc_opt_self(NSDateFormatter);
  v6 = String._bridgeToObjectiveC()();
  static Locale.autoupdatingCurrent.getter();
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v8 = objc_msgSend(v5, "dateFormatFromTemplate:options:locale:", v6, 0, isa);

  objc_msgSend(v4, "setDateFormat:", v8);
  return v4;
}

void sub_1003DF038()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  NSString v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  NSString v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Swift::OpaquePointer v46;
  void (*v47)(char *, char *, uint64_t);
  SEL v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  char *v57;
  uint64_t v58;

  v1 = v0;
  v2 = sub_100047110((uint64_t *)&unk_1008324F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110((uint64_t *)&unk_100832428);
  v58 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v57 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003E0830();
  *(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator]
           + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode) = 1;
  v7 = objc_msgSend(v0, "navigationItem", sub_10035C744());
  v8 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_addButton]);
  objc_msgSend(v7, "setLeftBarButtonItem:", v8);

  v9 = objc_msgSend(v1, "navigationItem");
  v10 = objc_msgSend(v9, "leftBarButtonItem");

  if (v10)
  {
    static FitnessAccessibilityIdentifier.SummaryView.plusSignButton.getter();
    v12 = v11;
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12, v14, v15, v16, v17, v18, v19, v20);
    objc_msgSend(v10, "setAccessibilityIdentifier:", v13);

  }
  v21 = objc_msgSend(v1, "navigationItem");
  v22 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_doneButton]);
  objc_msgSend(v21, "setRightBarButtonItem:", v22);

  v23 = objc_msgSend(v1, "navigationItem");
  v24 = objc_msgSend(v23, "rightBarButtonItem");

  if (v24)
  {
    static FitnessAccessibilityIdentifier.SummaryView.doneButton.getter();
    v26 = v25;
    v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26, v28, v29, v30, v31, v32, v33, v34);
    objc_msgSend(v24, "setAccessibilityIdentifier:", v27);

  }
  v35 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource;
  v36 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
  if (!v36)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v4, 1, 1, v5);
    goto LABEL_11;
  }
  v37 = v36;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  v38 = v58;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v4, 1, v5) == 1)
  {
LABEL_11:
    sub_10001BE90((uint64_t)v4, (uint64_t *)&unk_1008324F0);
    goto LABEL_12;
  }
  v39 = v57;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v57, v4, v5);
  v40 = sub_100047110((uint64_t *)&unk_10082E670);
  v41 = type metadata accessor for UUID(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(_QWORD *)(v42 + 72);
  v44 = *(unsigned __int8 *)(v42 + 80);
  v45 = (v44 + 32) & ~v44;
  v46._rawValue = (void *)swift_allocObject(v40, v45 + 2 * v43, v44 | 7);
  *((_OWORD *)v46._rawValue + 1) = xmmword_100620BC0;
  v47 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
  v47((char *)v46._rawValue + v45, &v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_editButtonIdentifier], v41);
  v47((char *)v46._rawValue + v45 + v43, &v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_entryLinksButtonIdentifier], v41);
  NSDiffableDataSourceSnapshot.deleteItems(_:)(v46);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v46._rawValue, v48, v49, v50, v51, v52, v53, v54);
  v55 = *(void **)&v1[v35];
  if (v55)
  {
    v56 = v55;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v39, 0, 0, 0);

  }
  (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v5);
LABEL_12:
  sub_1003E29AC();
}

void sub_1003DF46C()
{
  char *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  char *v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  os_log_type_t v12;
  void *v13;
  os_log_type_t v14;
  NSObject *v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  v4 = *(char **)(v3 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_summaryUserProfileProvider);
  v5 = *(os_unfair_lock_s **)&v4[OBJC_IVAR____TtC10FitnessApp26SummaryUserProfileProvider_protectedState];
  v6 = (uint64_t)&v5[4];
  v7 = v5 + 7;
  v8 = v4;
  os_unfair_lock_lock(v7);
  sub_1001524A4(v6, (uint64_t)&v35);
  os_unfair_lock_unlock(v7);
  v9 = v35;
  v10 = v36;

  if ((v10 & 1) != 0)
  {
    v12 = static os_log_type_t.error.getter(v11);
    v13 = (void *)HKLogActivity;
    v14 = v12;
    if (os_log_type_enabled(HKLogActivity, v12))
    {
      v15 = v13;
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v35 = v17;
      *(_DWORD *)v16 = 136315138;
      v18 = _typeName(_:qualified:)(ObjectType, 0);
      v20 = (CHWorkoutDetailHeartRateTableViewCell *)v19;
      v33 = sub_10003E8EC(v18, v19, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v16 + 4);
      swift_bridgeObjectRelease(v20, v21, v22, v23, v24, v25, v26, v27);
      _os_log_impl((void *)&_mh_execute_header, v15, v14, "%s User profile missing for entry links button", v16, 0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

    }
  }
  else
  {
    v28 = *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_catalogTipDataProvider);
    objc_allocWithZone((Class)type metadata accessor for EntryLinksViewController());
    v29 = v1;
    swift_retain(v28);
    v32 = sub_1005846F4(v29, v28, v9);
    v30 = objc_msgSend(v29, "navigationController");
    if (v30)
    {
      v31 = v30;
      objc_msgSend(v30, "pushViewController:animated:", v32, 1);

    }
  }
}

uint64_t sub_1003DF6F8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char v48;

  v1 = v0;
  v2 = sub_100047110((uint64_t *)&unk_1008324F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110((uint64_t *)&unk_100832428);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator]
           + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode) = 0;
  sub_10035C744();
  sub_1003E0468();
  v9 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v9, "setLeftBarButtonItem:", 0);

  v10 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v10, "setRightBarButtonItem:", 0);

  v11 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource;
  v12 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    return sub_10001BE90((uint64_t)v4, (uint64_t *)&unk_1008324F0);
  }
  v13 = v12;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_10001BE90((uint64_t)v4, (uint64_t *)&unk_1008324F0);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v14 = sub_100047110((uint64_t *)&unk_10082E670);
  v45 = v14;
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = *(unsigned __int8 *)(v16 + 80);
  v46 = v8;
  v19 = (v18 + 32) & ~v18;
  v20 = v19 + v17;
  v44 = v18 | 7;
  v21 = swift_allocObject(v14, v19 + v17, v18 | 7);
  v43 = xmmword_100622F90;
  *(_OWORD *)(v21 + 16) = xmmword_100622F90;
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 16);
  v22(v21 + v19, &v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_editButtonIdentifier], v15);
  v47 = 2;
  v48 = 0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v21, &v47, v5);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v21, v23, v24, v25, v26, v27, v28, v29);
  v30 = swift_allocObject(v45, v20, v44);
  *(_OWORD *)(v30 + 16) = v43;
  v31 = v30 + v19;
  v32 = v46;
  v22(v31, &v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_entryLinksButtonIdentifier], v15);
  v47 = 3;
  v48 = 0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v30, &v47, v5);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v30, v33, v34, v35, v36, v37, v38, v39);
  v40 = *(void **)&v1[v11];
  if (v40)
  {
    v41 = v40;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v32, 0, 0, 0);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v32, v5);
}

id sub_1003DFA3C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id result;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char);
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  _QWORD aBlock[5];
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for CardConfigurationView(0);
  __chkstk_darwin(v2);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)aBlock - v6);
  v8 = *(void **)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider);
  v9 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  v10 = v8;
  v11 = v9;
  result = objc_msgSend(v1, "view");
  if (!result)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  v13 = result;
  v14 = objc_msgSend(result, "window");

  if (v14)
  {
    objc_msgSend(v14, "bounds");
    v16 = v15;

    v17 = v16;
  }
  else
  {
    v17 = 0;
  }
  result = objc_msgSend(v1, "view");
  if (!result)
    goto LABEL_15;
  v18 = result;
  v19 = objc_msgSend(result, "window");

  if (v19)
  {
    objc_msgSend(v19, "bounds");
    v21 = v20;

    v22 = v21;
  }
  else
  {
    v22 = 0;
  }
  v23 = sub_1003DFED8();
  sub_100119428(v10, v11, v17, v14 == 0, v22, v19 == 0, (uint64_t)v23, v24, v7);
  sub_10004F8C8((uint64_t)v7, (uint64_t)v4, type metadata accessor for CardConfigurationView);
  v25 = objc_allocWithZone((Class)sub_100047110(&qword_1008324E8));
  v26 = (void *)UIHostingController.init(rootView:)(v4);
  v27 = objc_msgSend(v26, "presentationController");
  if (v27)
  {
    v28 = v27;
    v29 = objc_opt_self(UISheetPresentationController);
    v30 = (void *)swift_dynamicCastObjCClass(v28, v29);
    if (v30)
      objc_msgSend(v30, "setPrefersGrabberVisible:", 1);

  }
  v31 = swift_allocObject(&unk_10079DF58, 24, 7);
  *(_QWORD *)(v31 + 16) = v1;
  aBlock[4] = sub_1003E7FBC;
  v34 = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_10079DF70;
  v32 = _Block_copy(aBlock);
  objc_msgSend(v1, "presentViewController:animated:completion:", v26, 1, v32, swift_release(v34).n128_f64[0]);
  _Block_release(v32);

  return (id)sub_100011F54((uint64_t)v7, type metadata accessor for CardConfigurationView);
}

uint64_t sub_1003DFD3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  uint64_t v13;

  v2 = type metadata accessor for Tips.InvalidationReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CustomizeSummaryTip(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip;
  sub_10004F8C8(a1 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip, (uint64_t)v8, type metadata accessor for CustomizeSummaryTip);
  v10 = sub_1000083D8((unint64_t *)&unk_100832438, type metadata accessor for CustomizeSummaryTip, (uint64_t)&unk_10063D40C);
  v11 = Tip.shouldDisplay.getter(v6, v10);
  result = sub_100011F54((uint64_t)v8, type metadata accessor for CustomizeSummaryTip);
  if ((v11 & 1) != 0)
  {
    sub_10004F8C8(v9, (uint64_t)v8, type metadata accessor for CustomizeSummaryTip);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Tips.InvalidationReason.actionPerformed(_:), v2);
    Tip.invalidate(reason:)(v5, v6, v10);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return sub_100011F54((uint64_t)v8, type metadata accessor for CustomizeSummaryTip);
  }
  return result;
}

void (*sub_1003DFED8())(char a1)
{
  char *v0;
  void (**v1)(char);
  uint64_t v2;
  uint64_t v3;
  void (*v4)(char);
  uint64_t v5;
  char *v6;

  v1 = (void (**)(char))&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController____lazy_storage___onDismissAddCardModal];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController____lazy_storage___onDismissAddCardModal];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController____lazy_storage___onDismissAddCardModal
                    + 8];
  if (v2)
  {
    v4 = *(void (**)(char))&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController____lazy_storage___onDismissAddCardModal];
  }
  else
  {
    v5 = swift_allocObject(&unk_10079DEE0, 24, 7);
    *(_QWORD *)(v5 + 16) = v0;
    v4 = sub_1003E7F84;
    *v1 = sub_1003E7F84;
    v1[1] = (void (*)(char))v5;
    v6 = v0;
    swift_retain(v5);
    sub_100022BA4(0, v3);
  }
  sub_10003AFE0(v2, v3);
  return v4;
}

void sub_1003DFF74(char a1, void *a2)
{
  uint64_t v4;
  void *v5;
  _QWORD v6[5];
  uint64_t v7;

  v4 = swift_allocObject(&unk_10079DF08, 32, 7);
  *(_BYTE *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v6[4] = sub_1003E7FB0;
  v7 = v4;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_10002D0F8;
  v6[3] = &unk_10079DF20;
  v5 = _Block_copy(v6);
  objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, v5, swift_release(v7).n128_f64[0]);
  _Block_release(v5);
}

void sub_1003E0038(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  Class v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  uint64_t v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  char *v27;
  Class isa;
  uint64_t v29;
  uint64_t v30;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_1008324E0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v12 = *(void **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
    if (v12)
    {
      v30 = 1;
      v13 = v12;
      UICollectionViewDiffableDataSource.snapshot(for:)(&v30);
      v14 = (CHWorkoutDetailHeartRateTableViewCell *)NSDiffableDataSourceSectionSnapshot.items.getter(v8);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v15 = *(_QWORD *)v14->cellPadding;
      swift_bridgeObjectRelease(v14, v16, v17, v18, v19, v20, v21, v22);
      if (!v15)
      {
LABEL_8:

        return;
      }
      v23 = objc_msgSend(a2, "collectionView");
      if (v23)
      {
        v24 = v23;
        v25 = objc_msgSend(a2, "collectionView");
        if (!v25)
        {
LABEL_12:
          __break(1u);
          return;
        }
        v26 = v25;
        v27 = (char *)objc_msgSend(v25, "numberOfItemsInSection:", 1);

        if (!__OFSUB__(v27, 1))
        {
          IndexPath.init(row:section:)(v27 - 1, 1);
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          objc_msgSend(v24, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 1, 1);

          v13 = isa;
          goto LABEL_8;
        }
        __break(1u);
      }
      __break(1u);
      goto LABEL_12;
    }
  }
}

id sub_1003E0214(int a1, id a2)
{
  return objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, 0);
}

double sub_1003E022C(char a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for ActivityDashboardViewController(0);
  objc_msgSendSuper2(&v8, "viewWillAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "navigationController");
  if (v3)
  {
    v4 = v3;
    v5 = objc_opt_self(CHActivityHistoryNavigationController);
    v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
    if (!v6)

    objc_msgSend(v6, "detachPalette");
  }
  sub_1003E0468();
  return sub_10035C744();
}

id sub_1003E0324(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  id result;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];
  objc_super v13;

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for ActivityDashboardViewController(0);
  v13.receiver = v2;
  v13.super_class = v8;
  result = objc_msgSendSuper2(&v13, "viewWillDisappear:", a1 & 1);
  v10 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_visibility;
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_visibility) == 2)
  {
    v12[1] = v2;
    Date.init()(result);
    v11 = sub_1000083D8(&qword_100832508, type metadata accessor for ActivityDashboardViewController, (uint64_t)&unk_10063B3D0);
    MetricImpressionPublishing.publishImpressions(on:)(v7, v8, v11);
    result = (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *((_BYTE *)v2 + v10) = 1;
  return result;
}

void sub_1003E0468()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  NSString v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  Class isa;
  NSString v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  NSString v44;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_isNavigationBarSetup;
  if ((v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_isNavigationBarSetup] & 1) == 0
    && (*(_BYTE *)(*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator]
                 + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode) & 1) == 0)
  {
    v8 = objc_msgSend(v1, "navigationItem", v4);
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v13 = v12;

    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13, v15, v16, v17, v18, v19, v20, v21);
    objc_msgSend(v8, "setTitle:", v14);

    v22 = objc_msgSend(v1, "navigationController");
    if (v22)
    {
      v23 = v22;
      v24 = objc_msgSend(v22, "navigationBar");

      objc_msgSend(v24, "setPrefersLargeTitles:", 1);
    }
    Date.init()(v22);
    v25 = objc_msgSend(v1, "navigationItem");
    if (qword_10081DD00 != -1)
      swift_once(&qword_10081DD00, sub_1003DEEF0);
    v26 = (id)qword_1008322D0;
    isa = Date._bridgeToObjectiveC()().super.isa;
    v28 = objc_msgSend(v26, "stringFromDate:", isa);

    if (!v28)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v30 = v29;
      v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    }
    objc_msgSend(v25, "_setWeeTitle:", v28);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v38 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_accountButton];
    objc_msgSend(v38, "setFrame:", 0.0, 0.0, 34.33, 34.33);
    v39 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "keyColors");
    if (v39)
    {
      v40 = v39;
      v41 = objc_msgSend(v39, "nonGradientTextColor");

      objc_msgSend(v38, "setTintColor:", v41);
      static FitnessAccessibilityIdentifier.SummaryView.accountSettingsButton.getter();
      v43 = v42;
      v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v43, v45, v46, v47, v48, v49, v50, v51);
      objc_msgSend(v38, "setAccessibilityIdentifier:", v44);

      objc_msgSend(v38, "addTarget:action:forControlEvents:", v1, "accountButtonTapped:", 64);
      v52 = objc_msgSend(v1, "navigationItem");
      objc_msgSend(v52, "_setLargeTitleAccessoryView:alignToBaseline:", v38, 0);

      sub_1003E2D7C();
      v1[v7] = 1;
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1003E0830()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v1, "setTitle:", 0);

  v2 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v2, "_setWeeTitle:", 0);

  v3 = objc_msgSend(v0, "navigationController");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "navigationBar");

    objc_msgSend(v5, "setPrefersLargeTitles:", 0);
  }
  v6 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v6, "_setLargeTitleAccessoryView:alignToBaseline:", 0, 0);

  *((_BYTE *)v0 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_isNavigationBarSetup) = 0;
}

double sub_1003E093C(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_class *v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  __n128 v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  double result;
  objc_super v37;

  v2 = v1;
  v4 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (objc_class *)type metadata accessor for ActivityDashboardViewController(0);
  v37.receiver = v2;
  v37.super_class = v7;
  v8 = objc_msgSendSuper2(&v37, "viewDidAppear:", a1 & 1);
  v2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_visibility] = 2;
  if ((v2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_initialPresentation + 8] & 1) != 0)
  {
    v9 = static os_log_type_t.default.getter(v8);
    v10 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v10, "ActivityDashboardViewController no initial presentation", 55, 2, &_swiftEmptyArrayStorage);

  }
  else
  {
    objc_msgSend(v2, "presentAppSettingsShowingPane:", *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_initialPresentation]);
  }
  v11 = sub_1000083D8(&qword_100832508, type metadata accessor for ActivityDashboardViewController, (uint64_t)&unk_10063B3D0);
  v12 = sub_1000083D8((unint64_t *)&unk_100832510, type metadata accessor for ActivityDashboardViewController, (uint64_t)&unk_10063B360);
  MetricResignActiveObserving<>.addResignActiveObserver()(v7, v11, v12);
  v13 = objc_msgSend(v2, "navigationController");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "setDelegate:", v2);

  }
  v15 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_achievementTransitionAnimator];
  *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_achievementTransitionAnimator] = 0;

  v16 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                  + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activitySharingNavigationCoordinator);
  v17 = objc_msgSend(v2, "navigationController", swift_retain(v16).n128_f64[0]);
  v18 = *(void **)(v16 + 144);
  *(_QWORD *)(v16 + 144) = v17;
  swift_release(v16);

  dispatch thunk of MarketingPaletteBannerPresenter.onAppear()(v19);
  v20 = type metadata accessor for TaskPriority(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v6, 1, 1, v20);
  type metadata accessor for MainActor(0);
  v22 = v2;
  v23 = static MainActor.shared.getter(v22);
  v24 = (_QWORD *)swift_allocObject(&unk_10079E0C0, 40, 7);
  v24[2] = v23;
  v24[3] = &protocol witness table for MainActor;
  v24[4] = v22;
  v25 = sub_10020D9C0((uint64_t)v6, (uint64_t)&unk_100832528, (uint64_t)v24);
  v26 = swift_release(v25);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v21)(v6, 1, 1, v20, v26);
  v27 = v22;
  v28 = static MainActor.shared.getter(v27);
  v29 = (_QWORD *)swift_allocObject(&unk_10079E0E8, 40, 7);
  v29[2] = v28;
  v29[3] = &protocol witness table for MainActor;
  v29[4] = v27;
  v30 = sub_10020D9C0((uint64_t)v6, (uint64_t)&unk_100832538, (uint64_t)v29);
  v31 = swift_release(v30);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v21)(v6, 1, 1, v20, v31);
  v32 = v27;
  v33 = static MainActor.shared.getter(v32);
  v34 = (_QWORD *)swift_allocObject(&unk_10079E110, 40, 7);
  v34[2] = v33;
  v34[3] = &protocol witness table for MainActor;
  v34[4] = v32;
  v35 = sub_10020D9C0((uint64_t)v6, (uint64_t)&unk_100832548, (uint64_t)v34);
  *(_QWORD *)&result = swift_release(v35).n128_u64[0];
  return result;
}

uint64_t sub_1003E0C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4[13] = a4;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v4[14] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[15] = v6;
  v4[16] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v4[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[18] = v8;
  v4[19] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(sub_100047110(&qword_100832420) - 8);
  v4[20] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v4[21] = v10;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[22] = swift_task_alloc(v11);
  v4[23] = swift_task_alloc(v11);
  v12 = sub_100047110(&qword_100832550);
  v4[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Tips.Status(0);
  v4[25] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v4[26] = v14;
  v4[27] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100832558);
  v4[28] = v15;
  v4[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100832560);
  v4[30] = v16;
  v4[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110(&qword_100832568);
  v4[32] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v4[33] = v18;
  v4[34] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for CustomizeSummaryTip(0);
  v4[35] = v19;
  v4[36] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_100832570);
  v4[37] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v4[38] = v21;
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[39] = swift_task_alloc(v22);
  v4[40] = swift_task_alloc(v22);
  v23 = type metadata accessor for MainActor(0);
  v4[41] = v23;
  v4[42] = static MainActor.shared.getter(v23);
  v24 = dispatch thunk of Actor.unownedExecutor.getter(v23, &protocol witness table for MainActor);
  v4[43] = v24;
  v4[44] = v25;
  return swift_task_switch(sub_1003E0EA8, v24, v25);
}

uint64_t sub_1003E0EA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v0[35];
  v1 = v0[36];
  v3 = v0[33];
  v4 = v0[34];
  v5 = v0[31];
  v6 = v0[32];
  v7 = v0[28];
  sub_10004F8C8(v0[13] + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip, v1, type metadata accessor for CustomizeSummaryTip);
  v8 = sub_1000083D8((unint64_t *)&unk_100832438, type metadata accessor for CustomizeSummaryTip, (uint64_t)&unk_10063D40C);
  Tip.shouldDisplayUpdates.getter(v2, v8);
  sub_100011F54(v1, type metadata accessor for CustomizeSummaryTip);
  AsyncMapSequence.base.getter(v6);
  v9 = sub_100028384(&qword_100832578, &qword_100832558, (uint64_t)&protocol conformance descriptor for AsyncStream<A>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v7, v9);
  v10 = AsyncMapSequence.transform.getter(v6);
  v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v6);
  v13 = AsyncMapSequence.Iterator.init(_:transform:)(v5, v10, v12, v7, &type metadata for Bool, v9);
  v14 = static MainActor.shared.getter(v13);
  v0[45] = v14;
  if (v14)
  {
    ObjectType = swift_getObjectType(v14);
    v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v18 = v17;
  }
  else
  {
    v16 = 0;
    v18 = 0;
  }
  v0[46] = v16;
  v0[47] = v18;
  return swift_task_switch(sub_1003E1030, v16, v18);
}

uint64_t sub_1003E1030()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[45];
  v0[48] = AsyncMapSequence.Iterator.baseIterator.modify(v0 + 8, v0[37]);
  sub_100028384((unint64_t *)&unk_100832580, &qword_100832560, (uint64_t)&protocol conformance descriptor for AsyncStream<A>.Iterator);
  v2 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[49] = v2;
  *v2 = v0;
  v2[1] = sub_1003E10D8;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[24], v1, &protocol witness table for MainActor);
}

uint64_t sub_1003E10D8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 392));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 368);
    v4 = *(_QWORD *)(v2 + 376);
    v5 = sub_1003E128C;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 384))(v2 + 64, 0);
    v3 = *(_QWORD *)(v2 + 368);
    v4 = *(_QWORD *)(v2 + 376);
    v5 = sub_1003E1148;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_1003E1148()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;

  v1 = v0[25];
  v2 = v0[26];
  v3 = v0[24];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = v0[45];
    sub_10001BE90(v3, &qword_100832550);
    swift_release(v4);
    return swift_task_switch(sub_1003E129C, v0[43], v0[44]);
  }
  else
  {
    v7 = v0[39];
    v6 = v0[40];
    v8 = v0[37];
    v9 = v0[38];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[27], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    v10 = (int *)AsyncMapSequence.Iterator.transform.getter(v8);
    v0[50] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v13 = (int *)((char *)v10 + *v10);
    v12 = (_QWORD *)swift_task_alloc(v10[1]);
    v0[51] = v12;
    *v12 = v0;
    v12[1] = sub_1003E1390;
    return ((uint64_t (*)(_QWORD *, _QWORD))v13)(v0 + 52, v0[27]);
  }
}

uint64_t sub_1003E128C()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 384))(v0 + 64, 1);
}

uint64_t sub_1003E129C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 288);
  v5 = *(_QWORD *)(v0 + 272);
  v6 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(v2, *(_QWORD *)(v0 + 296));
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003E1390()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 400);
  v4 = *(_QWORD *)(*v0 + 208);
  v3 = *(_QWORD *)(*v0 + 216);
  v5 = *(_QWORD *)(*v0 + 200);
  swift_task_dealloc(*(_QWORD *)(*v0 + 408));
  v6 = swift_release(v2);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
  return swift_task_switch(sub_1003E140C, *(_QWORD *)(v1 + 368), *(_QWORD *)(v1 + 376));
}

uint64_t sub_1003E140C()
{
  _QWORD *v0;

  swift_release(v0[45]);
  return swift_task_switch(sub_1003E1444, v0[43], v0[44]);
}

uint64_t sub_1003E1444()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v0[22];
  v1 = v0[23];
  v4 = v0[20];
  v3 = v0[21];
  v5 = v0[19];
  v6 = v0[16];
  v30 = v0[18];
  v31 = v0[17];
  v7 = v0[14];
  v29 = v0[15];
  v8 = v0[13];
  v9 = type metadata accessor for OSSignposter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v1, 1, 1, v9);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v28 = (void *)static OS_dispatch_queue.main.getter(v10);
  v11 = swift_allocObject(&unk_10079DDC8, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v8);
  sub_100021CC0(v1, v2, &qword_100832420);
  v12 = *(unsigned __int8 *)(v4 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = (v3 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject(&unk_10079E188, v14 + 8, v12 | 7);
  *(_QWORD *)(v15 + 16) = v11;
  sub_100045AD4(v2, v15 + v13, &qword_100832420);
  *(_QWORD *)(v15 + v14) = 0;
  v0[6] = sub_1003E7E1C;
  v0[7] = v15;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10002D0F8;
  v0[5] = &unk_10079E1A0;
  v16 = _Block_copy(v0 + 2);
  swift_release(v0[7]);
  static DispatchQoS.unspecified.getter(v17);
  v0[12] = &_swiftEmptyArrayStorage;
  v18 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100047110(&qword_100828C80);
  v20 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 12, v19, v20, v7, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v5, v6, v16);
  _Block_release(v16);

  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v5, v31);
  v21 = sub_10001BE90(v1, &qword_100832420);
  v22 = static MainActor.shared.getter(v21);
  v0[45] = v22;
  if (v22)
  {
    ObjectType = swift_getObjectType(v22);
    v24 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v26 = v25;
  }
  else
  {
    v24 = 0;
    v26 = 0;
  }
  v0[46] = v24;
  v0[47] = v26;
  return swift_task_switch(sub_1003E1030, v24, v26);
}

uint64_t sub_1003E16E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v3 = v2;
  v30 = a1;
  v31 = a2;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100832420);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = swift_allocObject(&unk_10079DDC8, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v3);
  sub_100021CC0(v30, (uint64_t)v13, &qword_100832420);
  v17 = *(unsigned __int8 *)(v11 + 80);
  v18 = (v17 + 24) & ~v17;
  v19 = (v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_10079DDF0, v19 + 8, v17 | 7);
  *(_QWORD *)(v20 + 16) = v16;
  sub_100045AD4((uint64_t)v13, v20 + v18, &qword_100832420);
  v21 = v31;
  *(_QWORD *)(v20 + v19) = v31;
  aBlock[4] = sub_1003E7E1C;
  v36 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_10079DE08;
  v22 = _Block_copy(aBlock);
  v23 = v36;
  swift_retain(v21);
  swift_release(v23);
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v26 = sub_100047110(&qword_100828C80);
  v27 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v4, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v9, v33);
}

uint64_t sub_1003E19A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4[5] = a4;
  v5 = type metadata accessor for Tips.Status(0);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100832550);
  v4[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100832558);
  v4[10] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[11] = v9;
  v4[12] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CustomizeSummaryTip(0);
  v4[13] = v10;
  v11 = (*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[14] = swift_task_alloc(v11);
  v4[15] = swift_task_alloc(v11);
  v12 = sub_100047110(&qword_100832560);
  v4[16] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[17] = v13;
  v4[18] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MainActor(0);
  v4[19] = v14;
  v4[20] = static MainActor.shared.getter(v14);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v4[21] = v15;
  v4[22] = v16;
  return swift_task_switch(sub_1003E1AE8, v15, v16);
}

uint64_t sub_1003E1AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip;
  *(_QWORD *)(v0 + 184) = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip;
  sub_10004F8C8(v6 + v7, v1, type metadata accessor for CustomizeSummaryTip);
  v8 = sub_1000083D8((unint64_t *)&unk_100832438, type metadata accessor for CustomizeSummaryTip, (uint64_t)&unk_10063D40C);
  *(_QWORD *)(v0 + 192) = v8;
  Tip.statusUpdates.getter(v2, v8);
  sub_100011F54(v1, type metadata accessor for CustomizeSummaryTip);
  AsyncStream.makeAsyncIterator()(v4);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  *(_DWORD *)(v0 + 216) = enum case for Tips.Status.invalidated(_:);
  v10 = static MainActor.shared.getter(v9);
  *(_QWORD *)(v0 + 200) = v10;
  v11 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v0 + 208) = v11;
  *v11 = v0;
  v11[1] = sub_1003E1C14;
  return AsyncStream.Iterator.next(isolation:)(*(_QWORD *)(v0 + 72), v10, &protocol witness table for MainActor, *(_QWORD *)(v0 + 128));
}

uint64_t sub_1003E1C14()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 200);
  swift_task_dealloc(*(_QWORD *)(*v0 + 208));
  swift_release(v2);
  return swift_task_switch(sub_1003E1C68, *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
}

uint64_t sub_1003E1C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(v5, *(_QWORD *)(v0 + 128));
    swift_release(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v1);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(_DWORD *)(v0 + 216);
    v12 = *(_QWORD *)(v0 + 192);
    v14 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 64);
    sub_10004F8C8(*(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 184), v13, type metadata accessor for CustomizeSummaryTip);
    Tip.status.getter(v14, v12);
    sub_100011F54(v13, type metadata accessor for CustomizeSummaryTip);
    LODWORD(v12) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v15, v2);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
    if ((_DWORD)v12 == v11)
    {
      if (qword_10081DE48 != -1)
        swift_once(&qword_10081DE48, sub_1004B249C);
      v16 = sub_100047110(&qword_100820FB8);
      v17 = sub_10003CE9C(v16, (uint64_t)qword_10086AC60);
      *(_BYTE *)(v0 + 220) = 1;
      swift_beginAccess(v17, v0 + 16, 33, 0);
      Tips.Parameter.wrappedValue.setter(v0 + 220, v16);
      swift_endAccess(v0 + 16);
    }
    v18 = sub_10001BE90(*(_QWORD *)(v0 + 72), &qword_100832550);
    v19 = static MainActor.shared.getter(v18);
    *(_QWORD *)(v0 + 200) = v19;
    v20 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 208) = v20;
    *v20 = v0;
    v20[1] = sub_1003E1C14;
    return AsyncStream.Iterator.next(isolation:)(*(_QWORD *)(v0 + 72), v19, &protocol witness table for MainActor, *(_QWORD *)(v0 + 128));
  }
}

uint64_t sub_1003E1E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4[13] = a4;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v4[14] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[15] = v6;
  v4[16] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v4[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[18] = v8;
  v4[19] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(sub_100047110(&qword_100832420) - 8);
  v4[20] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v4[21] = v10;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[22] = swift_task_alloc(v11);
  v4[23] = swift_task_alloc(v11);
  v12 = sub_100047110(&qword_100832550);
  v4[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Tips.Status(0);
  v4[25] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v4[26] = v14;
  v4[27] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100832558);
  v4[28] = v15;
  v4[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100832560);
  v4[30] = v16;
  v4[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100047110(&qword_100832568);
  v4[32] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v4[33] = v18;
  v4[34] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_100832570);
  v4[35] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v4[36] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[37] = swift_task_alloc(v21);
  v4[38] = swift_task_alloc(v21);
  v22 = type metadata accessor for MainActor(0);
  v4[39] = v22;
  v4[40] = static MainActor.shared.getter(v22);
  v23 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
  v4[41] = v23;
  v4[42] = v24;
  return swift_task_switch(sub_1003E209C, v23, v24);
}

uint64_t sub_1003E209C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TrackingTip;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v0[33];
  v1 = v0[34];
  v3 = v0[31];
  v4 = v0[32];
  v5 = v0[28];
  TrackingTip = type metadata accessor for TrainingLoadTrackingTip(0);
  v7 = sub_1000083D8(&qword_100832418, type metadata accessor for TrainingLoadTrackingTip, (uint64_t)&unk_100640920);
  Tip.shouldDisplayUpdates.getter(TrackingTip, v7);
  AsyncMapSequence.base.getter(v4);
  v8 = sub_100028384(&qword_100832578, &qword_100832558, (uint64_t)&protocol conformance descriptor for AsyncStream<A>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v5, v8);
  v9 = AsyncMapSequence.transform.getter(v4);
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  v12 = AsyncMapSequence.Iterator.init(_:transform:)(v3, v9, v11, v5, &type metadata for Bool, v8);
  v13 = static MainActor.shared.getter(v12);
  v0[43] = v13;
  if (v13)
  {
    ObjectType = swift_getObjectType(v13);
    v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v17 = v16;
  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  v0[44] = v15;
  v0[45] = v17;
  return swift_task_switch(sub_1003E220C, v15, v17);
}

uint64_t sub_1003E220C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[43];
  v0[46] = AsyncMapSequence.Iterator.baseIterator.modify(v0 + 8, v0[35]);
  sub_100028384((unint64_t *)&unk_100832580, &qword_100832560, (uint64_t)&protocol conformance descriptor for AsyncStream<A>.Iterator);
  v2 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[47] = v2;
  *v2 = v0;
  v2[1] = sub_1003E22B4;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[24], v1, &protocol witness table for MainActor);
}

uint64_t sub_1003E22B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 376));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 352);
    v4 = *(_QWORD *)(v2 + 360);
    v5 = sub_1003E2468;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 368))(v2 + 64, 0);
    v3 = *(_QWORD *)(v2 + 352);
    v4 = *(_QWORD *)(v2 + 360);
    v5 = sub_1003E2324;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_1003E2324()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;

  v1 = v0[25];
  v2 = v0[26];
  v3 = v0[24];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = v0[43];
    sub_10001BE90(v3, &qword_100832550);
    swift_release(v4);
    return swift_task_switch(sub_1003E2478, v0[41], v0[42]);
  }
  else
  {
    v7 = v0[37];
    v6 = v0[38];
    v8 = v0[35];
    v9 = v0[36];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[27], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    v10 = (int *)AsyncMapSequence.Iterator.transform.getter(v8);
    v0[48] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v13 = (int *)((char *)v10 + *v10);
    v12 = (_QWORD *)swift_task_alloc(v10[1]);
    v0[49] = v12;
    *v12 = v0;
    v12[1] = sub_1003E2560;
    return ((uint64_t (*)(_QWORD *, _QWORD))v13)(v0 + 50, v0[27]);
  }
}

uint64_t sub_1003E2468()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 368))(v0 + 64, 1);
}

uint64_t sub_1003E2478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(v2, *(_QWORD *)(v0 + 280));
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003E2560()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 384);
  v4 = *(_QWORD *)(*v0 + 208);
  v3 = *(_QWORD *)(*v0 + 216);
  v5 = *(_QWORD *)(*v0 + 200);
  swift_task_dealloc(*(_QWORD *)(*v0 + 392));
  v6 = swift_release(v2);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
  return swift_task_switch(sub_1003E25DC, *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
}

uint64_t sub_1003E25DC()
{
  _QWORD *v0;

  swift_release(v0[43]);
  return swift_task_switch(sub_1003E2614, v0[41], v0[42]);
}

uint64_t sub_1003E2614()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v0[22];
  v1 = v0[23];
  v4 = v0[20];
  v3 = v0[21];
  v5 = v0[19];
  v6 = v0[16];
  v30 = v0[18];
  v31 = v0[17];
  v7 = v0[14];
  v29 = v0[15];
  v8 = v0[13];
  v9 = type metadata accessor for OSSignposter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v1, 1, 1, v9);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v28 = (void *)static OS_dispatch_queue.main.getter(v10);
  v11 = swift_allocObject(&unk_10079DDC8, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v8);
  sub_100021CC0(v1, v2, &qword_100832420);
  v12 = *(unsigned __int8 *)(v4 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = (v3 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject(&unk_10079E138, v14 + 8, v12 | 7);
  *(_QWORD *)(v15 + 16) = v11;
  sub_100045AD4(v2, v15 + v13, &qword_100832420);
  *(_QWORD *)(v15 + v14) = 0;
  v0[6] = sub_1003E7E1C;
  v0[7] = v15;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10002D0F8;
  v0[5] = &unk_10079E150;
  v16 = _Block_copy(v0 + 2);
  swift_release(v0[7]);
  static DispatchQoS.unspecified.getter(v17);
  v0[12] = &_swiftEmptyArrayStorage;
  v18 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100047110(&qword_100828C80);
  v20 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 12, v19, v20, v7, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v5, v6, v16);
  _Block_release(v16);

  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v5, v31);
  v21 = sub_10001BE90(v1, &qword_100832420);
  v22 = static MainActor.shared.getter(v21);
  v0[43] = v22;
  if (v22)
  {
    ObjectType = swift_getObjectType(v22);
    v24 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v26 = v25;
  }
  else
  {
    v24 = 0;
    v26 = 0;
  }
  v0[44] = v24;
  v0[45] = v26;
  return swift_task_switch(sub_1003E220C, v24, v26);
}

void sub_1003E29AC()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  Class v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  uint64_t v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  Class isa;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_1008324E0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
  if (v10)
  {
    v25 = 1;
    v11 = v10;
    UICollectionViewDiffableDataSource.snapshot(for:)(&v25);
    v12 = (CHWorkoutDetailHeartRateTableViewCell *)NSDiffableDataSourceSectionSnapshot.items.getter(v6);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v13 = *(_QWORD *)v12->cellPadding;
    swift_bridgeObjectRelease(v12, v14, v15, v16, v17, v18, v19, v20);
    if (v13)
    {
      v21 = objc_msgSend(v1, "collectionView");
      if (!v21)
      {
        __break(1u);
        return;
      }
      v22 = v21;
      IndexPath.init(row:section:)(0, 1);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      objc_msgSend(v22, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 4, 1);

      v11 = isa;
    }

  }
}

void sub_1003E2B74()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  Class v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  uint64_t v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  char *v25;
  Class isa;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_1008324E0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
  if (v10)
  {
    v28 = 1;
    v11 = v10;
    UICollectionViewDiffableDataSource.snapshot(for:)(&v28);
    v12 = (CHWorkoutDetailHeartRateTableViewCell *)NSDiffableDataSourceSectionSnapshot.items.getter(v6);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v13 = *(_QWORD *)v12->cellPadding;
    swift_bridgeObjectRelease(v12, v14, v15, v16, v17, v18, v19, v20);
    if (!v13)
    {
LABEL_7:

      return;
    }
    v21 = objc_msgSend(v1, "collectionView");
    if (v21)
    {
      v22 = v21;
      v23 = objc_msgSend(v1, "collectionView");
      if (!v23)
      {
LABEL_11:
        __break(1u);
        return;
      }
      v24 = v23;
      v25 = (char *)objc_msgSend(v23, "numberOfItemsInSection:", 1);

      if (!__OFSUB__(v25, 1))
      {
        IndexPath.init(row:section:)(v25 - 1, 1);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        objc_msgSend(v22, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 1, 1);

        v11 = isa;
        goto LABEL_7;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
}

void sub_1003E2D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v1 = sub_100047110(&qword_100828440);
  __chkstk_darwin(v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context)
                + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_avatarSettingsProvider);
  v5 = v4[3];
  v6 = v4[4];
  sub_100016804(v4, v5);
  dispatch thunk of AvatarSettingsCoordinating.fetchAvatarSettings()(v5, v6);
  v7 = type metadata accessor for AvatarSettings(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) == 1)
  {
    sub_10001BE90((uint64_t)v3, &qword_100828440);
    v9 = 0;
  }
  else
  {
    v9 = (void *)AvatarSettings.contact.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v3, v7);
  }
  dispatch thunk of AccountButton.updateContact(_:)(v9);

}

void sub_1003E2E98()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  char *v14;
  void (*v15)(_BYTE *, _QWORD);
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  void (*v20)(_BYTE *, _QWORD);
  uint64_t v21;
  _BYTE v22[32];

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = objc_msgSend(v1, "collectionView");
  if (v3)
  {
    v4 = v3;
    v5 = swift_allocObject(&unk_10079DDC8, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, v1);
    v6 = swift_allocObject(&unk_10079DE68, 32, 7);
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = ObjectType;
    v7 = objc_allocWithZone((Class)sub_100047110(&qword_100832448));
    v8 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v4, sub_1003E7F3C, v6);
    v9 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource;
    v10 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
    *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource] = v8;

    v11 = *(void **)&v1[v9];
    if (v11)
    {
      v12 = swift_allocObject(&unk_10079DE90, 24, 7);
      *(_QWORD *)(v12 + 16) = v1;
      v13 = v11;
      v14 = v1;
      v15 = (void (*)(_BYTE *, _QWORD))UICollectionViewDiffableDataSource.reorderingHandlers.modify(v22);
      v16 = sub_100047110(&qword_100832450);
      UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter(sub_1003E7F44, v12, v16);
      v15(v22, 0);

      v17 = *(void **)&v1[v9];
      if (v17)
      {
        v18 = swift_allocObject(&unk_10079DDC8, 24, 7);
        swift_unknownObjectWeakInit(v18 + 16, v14);
        v19 = v17;
        v20 = (void (*)(_BYTE *, _QWORD))UICollectionViewDiffableDataSource.reorderingHandlers.modify(v22);
        v21 = sub_100047110(&qword_100832450);
        UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter(sub_1003E7F4C, v18, v21);
        v20(v22, 0);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_1003E3070(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  char *v22;
  uint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  NSString v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  Class isa;
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  void *v43;
  id v44;
  id v45;
  _QWORD *v46;
  uint64_t v47;
  id v48;
  char *v49;
  __n128 v50;
  os_log_type_t v51;
  NSObject *v52;
  NSObject *v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  NSString v69;
  Class v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  id v76;
  unint64_t v77;
  const char *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  NSString v85;
  Class v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSString v94;
  Class v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  id v107;
  __n128 v108;
  id v109;
  id v110;
  void *v111;
  id v112;
  unsigned __int8 *v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  unsigned __int8 *v117;
  uint64_t TrackingTip;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  uint64_t v130[3];
  uint64_t v131;
  uint64_t v132;
  char v133[32];

  v121 = a5;
  v125 = a3;
  v126 = a1;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&TrackingTip - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100832468);
  v123 = *(_QWORD *)(v11 - 8);
  v124 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&TrackingTip - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_100832470);
  v122 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&TrackingTip - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  TrackingTip = type metadata accessor for TrainingLoadTrackingTip(0);
  __chkstk_darwin(TrackingTip);
  v18 = (char *)&TrackingTip - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for CustomizeSummaryTip(0);
  __chkstk_darwin(v120);
  v20 = (char *)&TrackingTip - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v133, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (!Strong)
    return objc_msgSend(objc_allocWithZone((Class)UICollectionViewCell), "init");
  v22 = (char *)Strong;
  v23 = IndexPath.section.getter(Strong);
  switch(v23)
  {
    case 0:
      v24 = *(CHWorkoutDetailHeartRateTableViewCell **)&v22[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dashboardTipReuseIdentifier
                                                          + 8];
      swift_bridgeObjectRetain(v24);
      v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v24, v26, v27, v28, v29, v30, v31, v32);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v34 = objc_msgSend(v126, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v25, isa);

      v35 = type metadata accessor for TipUICollectionViewCell(0);
      v36 = (void *)swift_dynamicCastClass(v34, v35);
      if (v36)
        v37 = v34;
      v38 = v125;
      v39 = (uint64_t)&v22[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip];
      sub_10004F8C8((uint64_t)&v22[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip], (uint64_t)v20, type metadata accessor for CustomizeSummaryTip);
      v40 = static UUID.== infix(_:_:)(v38, v20);
      v41 = type metadata accessor for UUID(0);
      v42 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v41 - 8) + 8);
      v42(v20, v41);
      if ((v40 & 1) != 0)
      {
        if (!v36)
          goto LABEL_24;
        v43 = (void *)objc_opt_self(UIColor);
        v44 = v36;
        v45 = objc_msgSend(v43, "grayColor");
        objc_msgSend(v44, "setTintColor:", v45);

        v131 = v120;
        v132 = sub_1000083D8((unint64_t *)&unk_100832438, type metadata accessor for CustomizeSummaryTip, (uint64_t)&unk_10063D40C);
        v46 = sub_10004C480(v130);
        sub_10004F8C8(v39, (uint64_t)v46, type metadata accessor for CustomizeSummaryTip);
        v47 = swift_allocObject(&unk_10079DEB8, 24, 7);
        *(_QWORD *)(v47 + 16) = v22;
        v48 = v44;
        v49 = v22;

        swift_release(v47);
LABEL_23:
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v130);
        return v34;
      }
      v103 = v38;
      v104 = (uint64_t)&v22[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_trainingLoadTip];
      sub_10004F8C8((uint64_t)&v22[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_trainingLoadTip], (uint64_t)v18, type metadata accessor for TrainingLoadTrackingTip);
      LOBYTE(v103) = static UUID.== infix(_:_:)(v103, v18);
      v42(v18, v41);
      if ((v103 & 1) != 0)
      {
        if (!v36)
          goto LABEL_24;
        v131 = TrackingTip;
        v132 = sub_1000083D8(&qword_100832418, type metadata accessor for TrainingLoadTrackingTip, (uint64_t)&unk_100640920);
        v105 = sub_10004C480(v130);
        sub_10004F8C8(v104, (uint64_t)v105, type metadata accessor for TrainingLoadTrackingTip);
        v106 = swift_allocObject(&unk_10079DDC8, 24, 7);
        swift_unknownObjectWeakInit(v106 + 16, v22);
        v107 = v36;
        v108 = swift_retain(v106);

        swift_release_n(v106, 2);
        goto LABEL_23;
      }

      return v34;
    case 1:
      v69 = String._bridgeToObjectiveC()();
      v70 = IndexPath._bridgeToObjectiveC()().super.isa;
      v34 = objc_msgSend(v126, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v69, v70);

      v71 = type metadata accessor for ActivityDashboardCardCell();
      v72 = swift_dynamicCastClass(v34, v71);
      if (!v72)
        goto LABEL_24;
      v73 = (char *)v72;
      v74 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator;
      v75 = *(CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)&v22[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator]
                                                      + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_cardForId);
      if (*(_QWORD *)v75->cellPadding)
      {
        v76 = v34;
        swift_bridgeObjectRetain(v75);
        v77 = sub_100439A1C(v125);
        if ((v78 & 1) != 0)
        {
          sub_1000252E0(*(_QWORD *)v75[1].cellInset + 40 * v77, (uint64_t)&v127);
        }
        else
        {
          v129 = 0;
          v127 = 0u;
          v128 = 0u;
        }
        swift_bridgeObjectRelease(v75, v78, v79, v80, v81, v82, v83, v84);
        if (*((_QWORD *)&v128 + 1))
          goto LABEL_32;
LABEL_29:

        sub_10001BE90((uint64_t)&v127, &qword_100832410);
        return v34;
      }
      v129 = 0;
      v127 = 0u;
      v128 = 0u;
      v109 = v34;
      if (!*((_QWORD *)&v128 + 1))
        goto LABEL_29;
LABEL_32:
      sub_10002411C(&v127, (uint64_t)v130);
      v110 = objc_msgSend(v22, "view");
      if (!v110)
      {
        __break(1u);
        JUMPOUT(0x1003E3B54);
      }
      v111 = v110;
      v112 = objc_msgSend(v110, "window");

      if (v112)
      {
        objc_msgSend(v112, "bounds");

      }
      v113 = *(unsigned __int8 **)&v22[v74];
      v114 = *(_QWORD *)&v22[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dashboardCardCellViewCache];
      v115 = *(_QWORD *)&v22[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_loadingCardHeightProvider];
      v116 = v113[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode];
      v117 = v113;
      sub_1003E7AB8(v130, v22, v117, v114, v115, v116, v73);

      _s10FitnessApp24HistoryViewActionContextVwxx_0(v130);
      return v34;
    case 2:
      v85 = String._bridgeToObjectiveC()();
      v86 = IndexPath._bridgeToObjectiveC()().super.isa;
      v34 = objc_msgSend(v126, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v85, v86);

      v87 = type metadata accessor for ActivityDashboardEditButtonCell();
      v88 = swift_dynamicCastClass(v34, v87);
      if (!v88)
        goto LABEL_24;
      __chkstk_darwin(v88);
      *(&TrackingTip - 2) = (uint64_t)v22;
      v89 = v34;
      v90 = sub_100047110(&qword_100832490);
      v91 = sub_100028384(&qword_100832498, &qword_100832490, (uint64_t)&protocol conformance descriptor for VStack<A>);
      v92 = UIHostingConfiguration<>.init(content:)(sub_1003E7F5C, &TrackingTip - 4, v90, v91);
      v93 = static Edge.Set.all.getter(v92);
      v131 = v14;
      v132 = sub_100028384(&qword_1008324A0, &qword_100832470, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
      sub_10004C480(v130);
      UIHostingConfiguration.margins(_:_:)(v93, v14, 0.0);
      (*(void (**)(char *, uint64_t))(v122 + 8))(v16, v14);
      goto LABEL_19;
    case 3:
      v94 = String._bridgeToObjectiveC()();
      v95 = IndexPath._bridgeToObjectiveC()().super.isa;
      v34 = objc_msgSend(v126, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v94, v95);

      v96 = type metadata accessor for ActivityDashboardEntryLinksButtonCell();
      v97 = swift_dynamicCastClass(v34, v96);
      if (v97)
      {
        __chkstk_darwin(v97);
        *(&TrackingTip - 2) = (uint64_t)v22;
        v89 = v34;
        v98 = sub_100047110(&qword_100832478);
        v99 = sub_100028384(&qword_100832480, &qword_100832478, (uint64_t)&protocol conformance descriptor for HStack<A>);
        v100 = UIHostingConfiguration<>.init(content:)(sub_1003E7F54, &TrackingTip - 4, v98, v99);
        v101 = static Edge.Set.all.getter(v100);
        v102 = v124;
        v131 = v124;
        v132 = sub_100028384(&qword_100832488, &qword_100832468, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
        sub_10004C480(v130);
        UIHostingConfiguration.margins(_:_:)(v101, v102, 0.0);
        (*(void (**)(char *, uint64_t))(v123 + 8))(v13, v102);
LABEL_19:
        UICollectionViewCell.contentConfiguration.setter(v130);

      }
      else
      {
LABEL_24:

      }
      return v34;
    default:
      v51 = static os_log_type_t.error.getter(v23);
      v52 = HKLogActivity;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
      if (os_log_type_enabled(v52, v51))
      {
        v53 = v52;
        v126 = v22;
        v54 = v53;
        v55 = swift_slowAlloc(22, -1);
        v56 = swift_slowAlloc(32, -1);
        v130[0] = v56;
        *(_DWORD *)v55 = 136315394;
        v57 = _typeName(_:qualified:)(v121, 0);
        v59 = (CHWorkoutDetailHeartRateTableViewCell *)v58;
        *(_QWORD *)&v127 = sub_10003E8EC(v57, v58, v130);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, (char *)&v127 + 8, v55 + 4);
        swift_bridgeObjectRelease(v59, v60, v61, v62, v63, v64, v65, v66);
        *(_WORD *)(v55 + 12) = 2048;
        v68 = IndexPath.section.getter(v67);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        *(_QWORD *)&v127 = v68;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, (char *)&v127 + 8, v55 + 14);
        _os_log_impl((void *)&_mh_execute_header, v54, v51, "%s Found unexpected section with value: %ld. Unable to configure cell.", (uint8_t *)v55, 0x16u);
        swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v56, -1, -1);
        swift_slowDealloc(v55, -1, -1);

      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

      }
      return 0;
  }
}

void sub_1003E3B64()
{
  uint64_t v0;
  const char *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  char v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v0 = Tips.Action.id.getter();
  v8 = (CHWorkoutDetailHeartRateTableViewCell *)v1;
  if (v0 == 0xD000000000000013 && v1 == (const char *)0x800000010069E470)
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x800000010069E470, v1, v2, v3, v4, v5, v6, v7);
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v0, v1, 0xD000000000000013, 0x800000010069E470, 0);
    swift_bridgeObjectRelease(v8, v10, v11, v12, v13, v14, v15, v16);
    if ((v9 & 1) == 0)
      return;
  }
  sub_1003DFA3C();
}

void sub_1003E3BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  const char *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  char v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t Strong;
  void *v22;
  _BYTE v23[24];

  v3 = Tips.Action.id.getter();
  v11 = (CHWorkoutDetailHeartRateTableViewCell *)v4;
  if (v3 == 0xD000000000000013 && v4 == (const char *)0x800000010069E490)
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x800000010069E490, v4, v5, v6, v7, v8, v9, v10);
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000013, 0x800000010069E490, 0);
    swift_bridgeObjectRelease(v11, v13, v14, v15, v16, v17, v18, v19);
    if ((v12 & 1) == 0)
      return;
  }
  v20 = a2 + 16;
  swift_beginAccess(v20, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v20);
  if (Strong)
  {
    v22 = (void *)Strong;
    sub_1003E4470();

  }
}

uint64_t sub_1003E3CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TrackingTip;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t);
  char v35;
  char *v36;
  char *v37;
  char v38;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  char v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;

  v62 = sub_100047110((uint64_t *)&unk_100828360);
  __chkstk_darwin(v62);
  v65 = (uint64_t)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v5);
  v60 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v63 = (char *)&v58 - v8;
  __chkstk_darwin(v9);
  v64 = (char *)&v58 - v10;
  TrackingTip = type metadata accessor for TrainingLoadTrackingTip(0);
  __chkstk_darwin(TrackingTip);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v59 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v68 = (char *)&v58 - v18;
  __chkstk_darwin(v19);
  v67 = (char *)&v58 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v58 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v58 - v25;
  v27 = type metadata accessor for CustomizeSummaryTip(0);
  __chkstk_darwin(v27);
  v29 = (char *)&v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = a2;
  sub_10004F8C8(a2 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip, (uint64_t)v29, v30);
  v31 = sub_1000083D8((unint64_t *)&unk_10082E6B0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v32 = dispatch thunk of static Equatable.== infix(_:_:)(a1, v29, v14, v31);
  v33 = *(void (**)(char *, uint64_t))(v15 + 8);
  v33(v29, v14);
  v61 = v15;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v34(v26, a1, v14);
  if ((v32 & 1) != 0)
  {
    v33(v26, v14);
    v34(v23, a1, v14);
LABEL_4:
    v33(v23, v14);
    v36 = v67;
    v34(v67, a1, v14);
LABEL_5:
    v33(v36, v14);
    v37 = v68;
    v34(v68, a1, v14);
    goto LABEL_6;
  }
  sub_10004F8C8(v66 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_trainingLoadTip, (uint64_t)v13, type metadata accessor for TrainingLoadTrackingTip);
  v35 = dispatch thunk of static Equatable.== infix(_:_:)(v26, v13, v14, v31);
  v33(v26, v14);
  v33(v13, v14);
  v34(v23, a1, v14);
  if ((v35 & 1) != 0)
    goto LABEL_4;
  v40 = dispatch thunk of static Equatable.== infix(_:_:)(v23, v66 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_editButtonIdentifier, v14, v31);
  v33(v23, v14);
  v36 = v67;
  v34(v67, a1, v14);
  if ((v40 & 1) != 0)
    goto LABEL_5;
  v41 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v66 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_entryLinksButtonIdentifier, v14, v31);
  v33(v36, v14);
  v37 = v68;
  v34(v68, a1, v14);
  if ((v41 & 1) == 0)
  {
    v67 = (char *)v33;
    v58 = v31;
    v42 = (uint64_t)v64;
    v34(v64, (uint64_t)v37, v14);
    v43 = v61;
    v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
    v44(v42, 0, 1, v14);
    v45 = *(_QWORD *)(*(_QWORD *)(v66 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator)
                    + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
    if (*(_QWORD *)(v45 + 16))
    {
      sub_1000252E0(v45 + 32, (uint64_t)v69);
      v46 = v70;
      v47 = v71;
      sub_100016804(v69, v70);
      v48 = (uint64_t)v63;
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
      v44(v48, 0, 1, v14);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v69);
    }
    else
    {
      v48 = (uint64_t)v63;
      v44((uint64_t)v63, 1, 1, v14);
    }
    v49 = v65;
    v50 = v65 + *(int *)(v62 + 48);
    sub_100021CC0(v42, v65, (uint64_t *)&unk_10082E690);
    sub_100021CC0(v48, v50, (uint64_t *)&unk_10082E690);
    v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
    if (v51(v49, 1, v14) == 1)
    {
      sub_10001BE90(v48, (uint64_t *)&unk_10082E690);
      sub_10001BE90(v42, (uint64_t *)&unk_10082E690);
      ((void (*)(char *, uint64_t))v67)(v37, v14);
      if (v51(v50, 1, v14) == 1)
      {
        sub_10001BE90(v49, (uint64_t *)&unk_10082E690);
        goto LABEL_7;
      }
    }
    else
    {
      v52 = v60;
      sub_100021CC0(v49, v60, (uint64_t *)&unk_10082E690);
      if (v51(v50, 1, v14) != 1)
      {
        v54 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
        v55 = v59;
        v54(v59, v50, v14);
        v56 = dispatch thunk of static Equatable.== infix(_:_:)(v52, v55, v14, v58);
        v57 = (void (*)(char *, uint64_t))v67;
        ((void (*)(char *, uint64_t))v67)(v55, v14);
        sub_10001BE90(v48, (uint64_t *)&unk_10082E690);
        sub_10001BE90(v42, (uint64_t *)&unk_10082E690);
        v57(v37, v14);
        v57((char *)v52, v14);
        sub_10001BE90(v49, (uint64_t *)&unk_10082E690);
        v38 = v56 ^ 1;
        return v38 & 1;
      }
      sub_10001BE90(v48, (uint64_t *)&unk_10082E690);
      sub_10001BE90(v42, (uint64_t *)&unk_10082E690);
      v53 = (void (*)(uint64_t, uint64_t))v67;
      ((void (*)(char *, uint64_t))v67)(v37, v14);
      v53(v52, v14);
    }
    sub_10001BE90(v49, (uint64_t *)&unk_100828360);
    v38 = 1;
    return v38 & 1;
  }
LABEL_6:
  v33(v37, v14);
LABEL_7:
  v38 = 0;
  return v38 & 1;
}

void sub_1003E4374(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  id v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  _BYTE v20[24];

  v3 = sub_100047110((uint64_t *)&unk_100832428);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = sub_100047110((uint64_t *)&unk_100832458);
    NSDiffableDataSourceTransaction.finalSnapshot.getter(v9);
    v10 = (CHWorkoutDetailHeartRateTableViewCell *)NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v11 = *(id *)&v8[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
    sub_100362FB4((uint64_t)v10);

    swift_bridgeObjectRelease(v10, v12, v13, v14, v15, v16, v17, v18);
  }
}

void sub_1003E4470()
{
  void *v0;
  void *v1;
  uint64_t OnboardingNavigationView;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  OnboardingNavigationView = type metadata accessor for TrainingLoadOnboardingNavigationView(0);
  __chkstk_darwin(OnboardingNavigationView);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = swift_allocObject(&unk_10079DDC8, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v1);
  *(_QWORD *)v4 = sub_1003E7E0C;
  *((_QWORD *)v4 + 1) = v5;
  *((_QWORD *)v4 + 2) = 0;
  *((_QWORD *)v4 + 3) = 0;
  v14 = &_swiftEmptyArrayStorage;
  swift_retain(v5);
  v6 = sub_100047110((uint64_t *)&unk_10082E630);
  State.init(wrappedValue:)(&v15, &v14, v6);
  v7 = v16;
  *((_QWORD *)v4 + 4) = v15;
  *((_QWORD *)v4 + 5) = v7;
  LOBYTE(v14) = 0;
  State.init(wrappedValue:)(&v15, &v14, &type metadata for Bool);
  v8 = v16;
  v4[48] = v15;
  *((_QWORD *)v4 + 7) = v8;
  v9 = &v4[*(int *)(OnboardingNavigationView + 32)];
  *(_QWORD *)v9 = swift_getKeyPath(&unk_10063B428);
  v10 = sub_100047110((uint64_t *)&unk_100832400);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  swift_release(v5);
  v11 = objc_allocWithZone((Class)sub_100047110(&qword_10082E640));
  v12 = (void *)UIHostingController.init(rootView:)(v4);
  objc_msgSend(v1, "presentViewController:animated:completion:", v12, 1, 0);

}

void sub_1003E45E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t TrackingTip;
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;
  _BYTE v34[24];

  v2 = type metadata accessor for Tips.InvalidationReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v28 - v11;
  a1 += 16;
  swift_beginAccess(a1, v34, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = *(void **)(*(_QWORD *)(Strong
                               + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator)
                   + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_loadCardFactory);
    v33 = 0;
    memset(v32, 0, sizeof(v32));
    v16 = v15;
    sub_100570258(1, 0, 3u, 1, (uint64_t)v32, 0, v16, (uint64_t)&v30);
    sub_10001BE90((uint64_t)v32, &qword_100832410);
    if (v31)
    {
      sub_10002411C(&v30, (uint64_t)v32);

      sub_1000252E0((uint64_t)v32, (uint64_t)&v30);
      v29 = 0;
      memset(v28, 0, sizeof(v28));
      sub_10058C67C(0, (uint64_t)&v30, (uint64_t)v28);
      sub_10001BE90((uint64_t)v28, &qword_100832410);
      sub_10001BE90((uint64_t)&v30, &qword_100832410);
      sub_100360DFC((uint64_t)v32, 0, 1);
      v17 = _s10FitnessApp24HistoryViewActionContextVwxx_0(v32);
    }
    else
    {
      sub_10001BE90((uint64_t)&v30, &qword_100832410);

    }
    v22 = static WOLog.trainingLoad.getter(v17);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Added Training Load Card in Summary", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Tips.InvalidationReason.actionPerformed(_:), v2);
    TrackingTip = type metadata accessor for TrainingLoadTrackingTip(0);
    v27 = sub_1000083D8(&qword_100832418, type metadata accessor for TrainingLoadTrackingTip, (uint64_t)&unk_100640920);
    Tip.invalidate(reason:)(v5, TrackingTip, v27);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1003E2B74();

  }
  else
  {
    v18 = static WOLog.trainingLoad.getter(0);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "No self after returning from Training Load Onboarding Flow", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
}

uint64_t sub_1003E49CC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[16];
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  char *v14;
  char *v15;
  void *v16;
  void *v17;
  char *v18;

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = " ";
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = &unk_10063B1C8;
  v4[7] = &unk_10063B1C8;
  v4[8] = &unk_10063B1C8;
  v4[9] = &unk_10063B1C8;
  v4[10] = &unk_10063B1E0;
  v4[11] = &unk_10063B1E0;
  v4[12] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = v5;
    v7 = &unk_10063B1F8;
    v8 = &unk_10063B210;
    v9 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v10 = v5;
    v11 = v5;
    v12 = &unk_10063B228;
    v13 = &unk_10063B240;
    v14 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v15 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v16 = &unk_10063B1C8;
    v17 = &unk_10063B258;
    v18 = (char *)&value witness table for Builtin.Int64 + 64;
    return swift_updateClassMetadata2(a1, 256, 30, v4, a1 + 80);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityDashboardViewController.InitialPresentation()
{
  return &type metadata for ActivityDashboardViewController.InitialPresentation;
}

uint64_t storeEnumTagSinglePayload for ActivityDashboardViewController.Visibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003E4F68 + 4 * byte_10063B175[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1003E4F9C + 4 * byte_10063B170[v4]))();
}

uint64_t sub_1003E4F9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003E4FA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003E4FACLL);
  return result;
}

uint64_t sub_1003E4FB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003E4FC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1003E4FC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003E4FCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityDashboardViewController.Visibility()
{
  return &type metadata for ActivityDashboardViewController.Visibility;
}

unint64_t sub_1003E4FEC()
{
  unint64_t result;

  result = qword_1008323E8[0];
  if (!qword_1008323E8[0])
  {
    result = swift_getWitnessTable(&unk_10063B2E0, &type metadata for ActivityDashboardViewController.Visibility);
    atomic_store(result, qword_1008323E8);
  }
  return result;
}

void sub_1003E5030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t TrackingTip;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  uint64_t v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  SEL v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, char *, uint64_t);
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  SEL v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  void *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  __n128 v109;
  void (*v110)(char *, uint64_t, __n128);
  __int128 v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  char v123[24];

  v118 = a2;
  v5 = sub_100047110(&qword_100832420);
  v117 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v119 = v6;
  v7 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TrackingTip = type metadata accessor for TrainingLoadTrackingTip(0);
  __chkstk_darwin(TrackingTip);
  v10 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CustomizeSummaryTip(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110((uint64_t *)&unk_100832428);
  v120 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v116 = (char *)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v111 - v17;
  a1 += 16;
  swift_beginAccess(a1, v123, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v20 = (char *)Strong;
    v113 = v10;
    v21 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(Strong
                                           + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator)
                               + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards)
                   + 16))
    {
      v115 = v7;
      v112 = a3;
      v22 = type metadata accessor for UUID(0);
      v23 = sub_1000083D8((unint64_t *)&qword_100828330, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v114 = v22;
      NSDiffableDataSourceSnapshot.init()(&type metadata for Int, v22, &protocol witness table for Int, v23);
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_100782E10);
      v24 = (uint64_t)&v20[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip];
      sub_10004F8C8((uint64_t)&v20[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_customizeSummaryTip], (uint64_t)v13, type metadata accessor for CustomizeSummaryTip);
      v25 = sub_1000083D8((unint64_t *)&unk_100832438, type metadata accessor for CustomizeSummaryTip, (uint64_t)&unk_10063D40C);
      LOBYTE(v22) = Tip.shouldDisplay.getter(v11, v25);
      sub_100011F54((uint64_t)v13, type metadata accessor for CustomizeSummaryTip);
      if ((v22 & 1) != 0)
      {
        v26 = sub_100047110((uint64_t *)&unk_10082E670);
        *(_QWORD *)&v111 = v21;
        v27 = v114;
        v28 = *(_QWORD *)(v114 - 8);
        v29 = *(unsigned __int8 *)(v28 + 80);
        v30 = (v29 + 32) & ~v29;
        v31 = swift_allocObject(v26, v30 + *(_QWORD *)(v28 + 72), v29 | 7);
        *(_OWORD *)(v31 + 16) = xmmword_100622F90;
        sub_10004F8C8(v24, (uint64_t)v13, type metadata accessor for CustomizeSummaryTip);
        v32 = v27;
        v21 = v111;
        (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v31 + v30, v13, v32);
        v121 = 0;
        v122 = 0;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v31, &v121, v14);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v31, v33, v34, v35, v36, v37, v38, v39);
      }
      v40 = &v20[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_trainingLoadTip];
      v41 = sub_1000083D8(&qword_100832418, type metadata accessor for TrainingLoadTrackingTip, (uint64_t)&unk_100640920);
      if ((Tip.shouldDisplay.getter(TrackingTip, v41) & 1) != 0)
      {
        v42 = sub_100047110((uint64_t *)&unk_10082E670);
        v43 = v21;
        v44 = v114;
        v45 = *(_QWORD *)(v114 - 8);
        v46 = *(unsigned __int8 *)(v45 + 80);
        v47 = (v46 + 32) & ~v46;
        v48 = swift_allocObject(v42, v47 + *(_QWORD *)(v45 + 72), v46 | 7);
        *(_OWORD *)(v48 + 16) = xmmword_100622F90;
        v49 = (uint64_t)v40;
        v50 = (uint64_t)v113;
        sub_10004F8C8(v49, (uint64_t)v113, type metadata accessor for TrainingLoadTrackingTip);
        v51 = v44;
        v21 = v43;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v48 + v47, v50, v51);
        v121 = 0;
        v122 = 0;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v48, &v121, v14);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v48, v52, v53, v54, v55, v56, v57, v58);
      }
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_100782E38);
      v59 = *(CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)&v20[v21]
                                                      + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
      swift_bridgeObjectRetain(v59);
      v61 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002ACA8C(v60);
      swift_bridgeObjectRelease(v59, v62, v63, v64, v65, v66, v67, v68);
      v121 = 1;
      v122 = 0;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v61, &v121, v14);
      swift_bridgeObjectRelease(v61, v69, v70, v71, v72, v73, v74, v75);
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_100782E60);
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_100782E88);
      v76 = (uint64_t)v115;
      if ((*(_BYTE *)(*(_QWORD *)&v20[v21] + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_editMode) & 1) == 0)
      {
        v113 = (char *)sub_100047110((uint64_t *)&unk_10082E670);
        v77 = v114;
        v78 = *(_QWORD *)(v114 - 8);
        v79 = *(unsigned __int8 *)(v78 + 80);
        v80 = (v79 + 32) & ~v79;
        v81 = v80 + *(_QWORD *)(v78 + 72);
        v82 = v79 | 7;
        v83 = swift_allocObject(v113, v81, v79 | 7);
        v111 = xmmword_100622F90;
        *(_OWORD *)(v83 + 16) = xmmword_100622F90;
        v84 = *(void (**)(uint64_t, char *, uint64_t))(v78 + 16);
        v84(v83 + v80, &v20[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_editButtonIdentifier], v77);
        v121 = 2;
        v122 = 0;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v83, &v121, v14);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v83, v85, v86, v87, v88, v89, v90, v91);
        v92 = swift_allocObject(v113, v81, v82);
        *(_OWORD *)(v92 + 16) = v111;
        v84(v92 + v80, &v20[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_entryLinksButtonIdentifier], v77);
        v76 = (uint64_t)v115;
        v121 = 3;
        v122 = 0;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v92, &v121, v14);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v92, v93, v94, v95, v96, v97, v98, v99);
      }
      v100 = *(void **)&v20[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
      if (v100)
      {
        v101 = v120;
        v102 = v116;
        (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v116, v18, v14);
        sub_100021CC0(v118, v76, &qword_100832420);
        v103 = *(unsigned __int8 *)(v117 + 80);
        v104 = (v103 + 16) & ~v103;
        v105 = (v119 + v104 + 7) & 0xFFFFFFFFFFFFFFF8;
        v106 = swift_allocObject(&unk_10079DE40, v105 + 8, v103 | 7);
        sub_100045AD4(v76, v106 + v104, &qword_100832420);
        v107 = v112;
        *(_QWORD *)(v106 + v105) = v112;
        swift_retain(v107);
        v108 = v100;
        dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v102, 1, sub_1003E7ED4, v106);

        v109 = swift_release(v106);
        v110 = *(void (**)(char *, uint64_t, __n128))(v101 + 8);
        v110(v102, v14, v109);
        ((void (*)(char *, uint64_t))v110)(v18, v14);
        return;
      }
      (*(void (**)(char *, uint64_t))(v120 + 8))(v18, v14);
    }

  }
}

void sub_1003E56A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  os_signpost_type_t v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  const char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  os_signpost_id_t v32;
  os_signpost_type_t v33;
  os_log_t v34;
  void (*v35)(char *, uint64_t);
  __n128 v36;
  os_log_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a2;
  v3 = type metadata accessor for OSSignpostError(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OSSignpostID(0);
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  __chkstk_darwin(v7);
  v39 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v37 - v10;
  v12 = sub_100047110(&qword_100832420);
  __chkstk_darwin(v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for OSSignposter(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100021CC0(a1, (uint64_t)v14, &qword_100832420);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10001BE90((uint64_t)v14, &qword_100832420);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    v19 = v42;
    if (v42)
    {
      v38 = v3;
      swift_retain(v42);
      v21 = OSSignposter.logHandle.getter(v20);
      v22 = OSSignpostIntervalState.signpostID.getter();
      v23 = static os_signpost_type_t.end.getter(v22);
      if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
      {
        v37 = v21;
        v24 = swift_retain(v19);
        checkForErrorAndConsumeState(state:)(v24);
        v25 = swift_release(v19);
        v26 = v38;
        if ((*(unsigned int (**)(char *, uint64_t, __n128))(v4 + 88))(v6, v38, v25) == enum case for OSSignpostError.doubleEnd(_:))
        {
          v27 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
          v27 = "";
        }
        v28 = v39;
        v29 = v40;
        v30 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v39, v11, v41);
        v31 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v31 = 0;
        v32 = OSSignpostID.rawValue.getter();
        v33 = v23;
        v34 = v37;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v37, v33, v32, "addCardTest", v27, v31, 2u);
        swift_slowDealloc(v31, -1, -1);

        v35 = *(void (**)(char *, uint64_t))(v29 + 8);
        v35(v11, v30);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        v36 = swift_release(v42);
        ((void (*)(char *, uint64_t, __n128))v35)(v28, v30, v36);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v41);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        swift_release(v19);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
  }
}

uint64_t sub_1003E59D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  _QWORD *v25;

  v2 = v1;
  ObjectType = swift_getObjectType(v1);
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_10079DDC8, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v2);
  v14 = (_QWORD *)swift_allocObject(&unk_10079DFA8, 40, 7);
  v14[2] = v13;
  v14[3] = a1;
  v14[4] = ObjectType;
  aBlock[4] = sub_1003E7FF0;
  v25 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_10079DFC0;
  v15 = _Block_copy(aBlock);
  v16 = v25;
  swift_bridgeObjectRetain(a1);
  swift_release(v16);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100047110(&qword_100828C80);
  v20 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v5, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v22);
}

void sub_1003E5C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  _QWORD *v21;
  void *v22;
  Swift::OpaquePointer v23;
  __n128 v24;
  void *v25;
  id v26;
  uint64_t v27;
  _BYTE v28[32];
  _BYTE v29[24];

  v6 = sub_100047110((uint64_t *)&unk_100832428);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_100047110((uint64_t *)&unk_1008324F0);
  __chkstk_darwin(v10);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = (char *)Strong;
    v27 = a3;
    v16 = swift_allocBox(v6);
    v17 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource;
    v18 = *(void **)&v14[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource];
    if (v18)
    {
      v19 = v15;
      v20 = v18;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) != 1)
      {
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(v19, v12, v6);
        v21 = sub_1002ACA8C(a2);
        swift_retain(v16);
        sub_1003E72E4((uint64_t)v21, v16, v27);
        v23._rawValue = v22;
        swift_release(v16);
        swift_beginAccess(v19, v28, 33, 0);
        NSDiffableDataSourceSnapshot.reconfigureItems(_:)(v23);
        swift_endAccess(v28);
        v24 = swift_bridgeObjectRelease(v23._rawValue);
        v25 = *(void **)&v14[v17];
        if (v25)
        {
          (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v19, v6, v24);
          v26 = v25;
          dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v9, 1, 0, 0);

          (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
          swift_release(v16);
        }
        else
        {
          swift_release(v16);

        }
        return;
      }
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
    }

    sub_10001BE90((uint64_t)v12, (uint64_t *)&unk_1008324F0);
    swift_deallocBox(v16);
  }
}

BOOL sub_1003E5E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  double (*v15)(char *, uint64_t);
  BOOL v16;
  uint64_t v17;
  os_log_type_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  __n128 v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47[16];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52[24];
  uint64_t v53;

  v42 = a3;
  v6 = type metadata accessor for UUID(0);
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  __chkstk_darwin(v6);
  v44 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110((uint64_t *)&unk_100832428);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a2;
  v12 = swift_projectBox(a2);
  swift_beginAccess(v12, v52, 0, 0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v13(v11, v12, v8);
  v14 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v8);
  v15 = *(double (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  v48 = a1;
  v16 = sub_1004C66C0((uint64_t (*)(char *))sub_1003E7FFC, (_BOOL8)v47, v14);
  swift_bridgeObjectRelease(v14);
  if (!v16)
  {
    v41 = v3;
    v18 = static os_log_type_t.default.getter(v17);
    v19 = HKLogActivity;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, a1, v46);
    if (os_log_type_enabled(v19, v18))
    {
      swift_retain_n(v43, 2);
      v40 = v19;
      v20 = swift_slowAlloc(32, -1);
      v39 = swift_slowAlloc(96, -1);
      v53 = v39;
      *(_DWORD *)v20 = 136315650;
      v21 = _typeName(_:qualified:)(v42, 0);
      LODWORD(v42) = v18;
      v23 = v22;
      v50 = sub_10003E8EC(v21, v22, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v20 + 4);
      swift_bridgeObjectRelease(v23);
      *(_WORD *)(v20 + 12) = 2080;
      swift_beginAccess(v12, &v50, 0, 0);
      v13(v11, v12, v8);
      v24 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v8);
      v25.n128_f64[0] = v15(v11, v8);
      v26 = v46;
      v27 = Array.description.getter(v25);
      v29 = v28;
      swift_bridgeObjectRelease(v24);
      v49 = sub_10003E8EC(v27, v29, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v20 + 14);
      swift_release_n(v43, 2);
      swift_bridgeObjectRelease(v29);
      *(_WORD *)(v20 + 22) = 2080;
      v30 = sub_1000083D8((unint64_t *)&qword_100821498, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v31 = v44;
      v32 = dispatch thunk of CustomStringConvertible.description.getter(v26, v30);
      v34 = v33;
      v49 = sub_10003E8EC(v32, v33, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v20 + 24);
      v35 = swift_bridgeObjectRelease(v34);
      (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v31, v26, v35);
      v36 = v40;
      _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v42, "%s Not updating card content as the snapshot item identifiers\ndon't contain the uuid for the card we are trying to update.\nsnapshot: %s\n uuid: %s", (uint8_t *)v20, 0x20u);
      v37 = v39;
      swift_arrayDestroy(v39, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v20, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v46);
    }
  }
  return v16;
}

double sub_1003E625C@<D0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  double result;

  v3 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_impressionsTracker);
  a1[3] = type metadata accessor for ActivityDashboardImpressionsTracker();
  a1[4] = sub_1000083D8(&qword_10082E610, (uint64_t (*)(uint64_t))type metadata accessor for ActivityDashboardImpressionsTracker, (uint64_t)&unk_10063D134);
  *a1 = v3;
  *(_QWORD *)&result = swift_retain(v3).n128_u64[0];
  return result;
}

uint64_t sub_1003E62C0()
{
  _QWORD *v0;

  return swift_unknownObjectRetain(*(_QWORD *)(*(_QWORD *)(*v0
                                                         + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context)
                                             + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_eventHub));
}

uint64_t sub_1003E6304()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_resignActiveObserver);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_resignActiveObserver, v3, 0, 0);
  return swift_unknownObjectRetain(*v1);
}

uint64_t sub_1003E634C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_resignActiveObserver);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_unknownObjectRelease(v4);
}

void *sub_1003E639C(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_resignActiveObserver, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t sub_1003E63E0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10063B3D0, a1);
  return MetricResignActiveObserving<>.addResignActiveObserver()(a1, WitnessTable, a2);
}

uint64_t sub_1003E6424(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10063B3D0, a1);
  return MetricResignActiveObserving<>.removeResignActiveObserver()(a1, WitnessTable, a2);
}

double sub_1003E6468()
{
  return 2.5;
}

void *sub_1003E647C()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerViewController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerViewController, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1003E64C8(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerViewController);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

void *sub_1003E6518(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerViewController, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t sub_1003E655C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryBannerActionPresenter));
}

uint64_t sub_1003E656C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to MarketingPaletteBannerDisplaying<>.showMarketingPaletteBanner(request:)[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1000DA0E4;
  return MarketingPaletteBannerDisplaying<>.showMarketingPaletteBanner(request:)(a1, a2, a3);
}

uint64_t sub_1003E65D8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (result)
    *a2 = result;
  else
    __break(1u);
  return result;
}

void sub_1003E65E8(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13;

  v13 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t sub_1003E6668(uint64_t a1, char *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t (*v18)(uint64_t, uint64_t (**)(_QWORD), __n128);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;
  void (**v42)(_QWORD, _QWORD);
  char v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  os_log_type_t v46;
  NSObject *v47;
  os_log_type_t v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  char v63;
  int v64;
  void *v65;
  _QWORD *v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  id v78;
  uint64_t KeyPath;
  uint64_t *v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t);
  char *v91;
  char *v92;
  id (**v93)();
  _QWORD *v94;
  uint64_t v95;
  id v96;
  id v97;
  void *v98;
  id v99;
  void *v100;
  uint64_t v101;
  void *v102;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(uint64_t, uint64_t (**)(_QWORD), __n128);
  id v108;
  uint64_t ObjectType;
  _QWORD *v110;
  uint64_t *v111;
  char *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t (**v116)(_QWORD);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119[5];
  _QWORD *v120[3];
  uint64_t v121;
  uint64_t v122;
  _QWORD v123[5];

  ObjectType = swift_getObjectType(a2);
  v105 = type metadata accessor for CardTypeConfigurationRoomView(0);
  v8 = __chkstk_darwin(v105);
  v106 = (uint64_t)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v111 = (uint64_t *)((char *)&v104 - v10);
  v11 = type metadata accessor for UUID(0);
  v113 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v104 - v15;
  v123[3] = a3;
  v123[4] = a4;
  v17 = sub_10004C480(v123);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(v17, a1, a3);
  v18 = (uint64_t (*)(uint64_t, uint64_t (**)(_QWORD), __n128))a4[2];
  v114 = v17;
  v115 = a3;
  v116 = (uint64_t (**)(_QWORD))a4;
  v107 = v18;
  v19 = ((uint64_t (*)(uint64_t, _QWORD *))v18)(a3, a4);
  v21 = v20;
  LOBYTE(a3) = v22;
  v23 = sub_10054FEFC(v19, v20, v22);
  sub_1000EB41C(v19, v21, a3);
  v112 = a2;
  v24 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  v25 = sub_10035FF38(v23);
  if (*(_QWORD *)(v25 + 16) && (v26 = sub_100049DE0(v23), (v27 & 1) != 0))
  {
    v28 = *(_QWORD **)(*(_QWORD *)(v25 + 56) + 8 * v26);
    swift_bridgeObjectRetain(v28);
  }
  else
  {
    v28 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v25);
  v108 = v24;
  v29 = *(char **)&v24[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  if (*((_QWORD *)v29 + 2))
  {
    v110 = v28;
    v30 = (uint64_t)(v29 + 32);
    v104 = v29;
    swift_bridgeObjectRetain_n(v29, 2);
    sub_1000252E0(v30, (uint64_t)v120);
    v31 = v121;
    v32 = v122;
    sub_100016804(v120, v121);
    (*(void (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
    __asm { BR              X9 }
  }
  v120[0] = v28;
  sub_10013C280((uint64_t)_swiftEmptyArrayStorage);
  v34 = v120[0];
  v35 = (char *)*(id *)&v112[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain(v34);
  sub_100419154(v120, v35);
  swift_bridgeObjectRelease(v34);

  v36 = v120[0];
  v37 = v120[0][2];
  if (!v37)
  {
LABEL_12:
    swift_release(v36);
    v46 = static os_log_type_t.default.getter(v45);
    v47 = HKLogActivity;
    sub_1000252E0((uint64_t)v123, (uint64_t)v120);
    v48 = v46;
    if (os_log_type_enabled(v47, v46))
    {
      v49 = v47;
      v50 = swift_slowAlloc(22, -1);
      v51 = swift_slowAlloc(64, -1);
      v119[0] = v51;
      *(_DWORD *)v50 = 136315394;
      v52 = _typeName(_:qualified:)(ObjectType, 0);
      v54 = v53;
      v117 = sub_10003E8EC(v52, v53, v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v117, &v118, v50 + 4);
      swift_bridgeObjectRelease(v54);
      *(_WORD *)(v50 + 12) = 2080;
      sub_100016804(v120, v121);
      v55 = v116[5](v115);
      v57 = v56;
      v117 = sub_10003E8EC(v55, v56, v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v117, &v118, v50 + 14);
      swift_bridgeObjectRelease(v57);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v120);
      _os_log_impl((void *)&_mh_execute_header, v49, v48, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy(v51, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v50, -1, -1);

    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v120);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v123);
  }
  v104 = v35;
  v38 = v120[0] + 4;
  v39 = v116[1];
  v110 = v120[0];
  swift_retain(v120[0]);
  v40 = 0;
  while (1)
  {
    v41 = v38[3];
    v42 = (void (**)(_QWORD, _QWORD))v38[4];
    sub_100016804(v38, v41);
    v42[1](v41, v42);
    ((void (*)(uint64_t, uint64_t (**)(_QWORD)))v39)(v115, v116);
    v43 = static UUID.== infix(_:_:)(v16, v14);
    v44 = *(void (**)(char *, uint64_t))(v113 + 8);
    v44(v14, v11);
    v44(v16, v11);
    if ((v43 & 1) != 0)
      break;
    ++v40;
    v38 += 5;
    if (v37 == v40)
    {
      v36 = v110;
      swift_release(v110);
      goto LABEL_12;
    }
  }
  v58 = swift_release(v110);
  v59 = v107(v115, v116, v58);
  v61 = v60;
  v63 = v62;
  v64 = sub_10054FEFC(v59, v60, v62);
  sub_1000EB41C(v59, v61, v63);
  sub_1000252E0((uint64_t)v123, (uint64_t)v120);
  v65 = *(void **)&v104[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  v116 = (uint64_t (**)(_QWORD))v108;
  v66 = v65;
  v67 = objc_msgSend(v112, "view");
  if (!v67)
  {
    __break(1u);
    goto LABEL_30;
  }
  v42 = (void (**)(_QWORD, _QWORD))v67;
  v68 = objc_msgSend(v67, "window");

  if (v68)
  {
    objc_msgSend(v68, "bounds");
    v70 = v69;

  }
  else
  {
    v70 = 0;
  }
  v71 = objc_msgSend(v112, "view");
  if (!v71)
  {
LABEL_30:
    __break(1u);

    swift_release(v120[0]);
    __break(1u);
    JUMPOUT(0x1003E7218);
  }
  v72 = v71;
  v73 = objc_msgSend(v71, "window");

  LODWORD(v115) = v64;
  v114 = v66;
  if (v73)
  {
    objc_msgSend(v73, "bounds");
    v75 = v74;

  }
  else
  {
    v75 = 0;
  }
  LODWORD(v113) = v73 == 0;
  v76 = v68 == 0;
  v77 = swift_allocObject(&unk_10079E228, 24, 7);
  v78 = v112;
  *(_QWORD *)(v77 + 16) = v112;
  KeyPath = swift_getKeyPath(&unk_10063B488);
  v80 = v111;
  *v111 = KeyPath;
  v81 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v80, v81, 0);
  v82 = (int *)v105;
  v83 = *(int *)(v105 + 40);
  v84 = type metadata accessor for DashboardCardCellViewCache();
  v85 = swift_allocObject(v84, 40, 7);
  *(_BYTE *)(v85 + 16) = 1;
  *(_QWORD *)(v85 + 24) = sub_10043D6F8((uint64_t)_swiftEmptyArrayStorage);
  v86 = sub_10043D6F8((uint64_t)_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v80 + v83) = v85;
  *(_QWORD *)(v85 + 32) = v86;
  v87 = (char *)v80 + v82[15];
  v88 = enum case for DynamicTypeSize.accessibility1(_:);
  v89 = type metadata accessor for DynamicTypeSize(0);
  v90 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 104);
  v90(v87, v88, v89);
  v90((char *)v80 + v82[16], enum case for DynamicTypeSize.xLarge(_:), v89);
  *((_BYTE *)v80 + v82[5]) = v115;
  sub_100045AD4((uint64_t)v120, (uint64_t)v80 + v82[6], &qword_100832410);
  *(uint64_t *)((char *)v80 + v82[7]) = (uint64_t)v110;
  *(uint64_t *)((char *)v80 + v82[8]) = (uint64_t)v116;
  *(uint64_t *)((char *)v80 + v82[9]) = (uint64_t)v114;
  v91 = (char *)v80 + v82[11];
  *(_QWORD *)v91 = v70;
  v91[8] = v76;
  v92 = (char *)v80 + v82[12];
  *(_QWORD *)v92 = v75;
  v92[8] = v113;
  v93 = (id (**)())((char *)v80 + v82[13]);
  *v93 = sub_10033CFD4;
  v93[1] = (id (*)())v77;
  v94 = (uint64_t *)((char *)v80 + v82[14]);
  *v94 = v40;
  v94[1] = 0;
  v95 = v106;
  sub_10004F8C8((uint64_t)v80, v106, type metadata accessor for CardTypeConfigurationRoomView);
  v96 = objc_allocWithZone((Class)sub_100047110(&qword_1008325D8));
  v97 = v78;
  v98 = (void *)UIHostingController.init(rootView:)(v95);
  v99 = objc_msgSend(v98, "presentationController");
  if (v99)
  {
    v100 = v99;
    v101 = objc_opt_self(UISheetPresentationController);
    v102 = (void *)swift_dynamicCastObjCClass(v100, v101);
    if (v102)
      objc_msgSend(v102, "setPrefersGrabberVisible:", 1);

  }
  objc_msgSend(v97, "presentViewController:animated:completion:", v98, 1, 0);

  sub_100011F54((uint64_t)v111, type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v123);
}

void sub_1003E72E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  BOOL v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;

  v4 = v3;
  v32 = a2;
  v33 = a3;
  v6 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v30 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v34 = (char *)&v25 - v13;
  v35 = (char *)_swiftEmptyArrayStorage;
  v31 = *(_QWORD *)(a1 + 16);
  if (v31)
  {
    v14 = 0;
    v26 = a1;
    v29 = v8;
    while (v14 < *(_QWORD *)(a1 + 16))
    {
      v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v16 = a1;
      v17 = *(_QWORD *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, a1 + v15 + v17 * v14, v9);
      v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v28(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        goto LABEL_18;
      v18 = v8;
      v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v20 = (uint64_t)v34;
      v19(v34, v18, v9);
      v21 = sub_1003E5E98(v20, v32, v33);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v34, v9);
        swift_bridgeObjectRelease(v16);
        swift_release(v35);
        return;
      }
      if (v21)
      {
        v27 = 0;
        v19(v30, v34, v9);
        v22 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
        {
          sub_1001216CC(0, *((_QWORD *)v22 + 2) + 1, 1);
          v22 = v35;
        }
        v24 = *((_QWORD *)v22 + 2);
        v23 = *((_QWORD *)v22 + 3);
        if (v24 >= v23 >> 1)
        {
          sub_1001216CC(v23 > 1, v24 + 1, 1);
          v22 = v35;
        }
        *((_QWORD *)v22 + 2) = v24 + 1;
        v19(&v22[v15 + v24 * v17], v30, v9);
        v35 = v22;
        a1 = v26;
        v4 = v27;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v34, v9);
        a1 = v16;
      }
      ++v14;
      v8 = v29;
      if (v31 == v14)
      {
        v28(v29, 1, 1, v9);
        goto LABEL_18;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_18:
    swift_bridgeObjectRelease(a1);
    sub_10001BE90((uint64_t)v8, (uint64_t *)&unk_10082E690);
  }
}

void sub_1003E75BC(uint64_t a1, void (*a2)(char *, char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  v4 = sub_100047110((uint64_t *)&unk_1008325C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v26 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v11 = 0;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v26)
        goto LABEL_23;
      v22 = *(_QWORD *)(v25 + 8 * v11);
      if (!v22)
      {
        v11 = v21 + 2;
        if (v21 + 2 >= v26)
          goto LABEL_23;
        v22 = *(_QWORD *)(v25 + 8 * v11);
        if (!v22)
        {
          v11 = v21 + 3;
          if (v21 + 3 >= v26)
            goto LABEL_23;
          v22 = *(_QWORD *)(v25 + 8 * v11);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v22 - 1) & v22;
    v13 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_5:
    v14 = *(_QWORD *)(a1 + 48);
    v15 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v6, v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v13, v15);
    v16 = *(_QWORD *)(a1 + 56);
    v17 = type metadata accessor for ImpressionMetrics(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = v16 + *(_QWORD *)(v18 + 72) * v13;
    v20 = &v6[*(int *)(v4 + 48)];
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v19, v17);
    a2(v6, v20);
    sub_10001BE90((uint64_t)v6, (uint64_t *)&unk_1008325C0);
  }
  v23 = v21 + 4;
  if (v23 >= v26)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_1003E7808()
{
  _BYTE *v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  v1 = &v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_paletteBannerInsets];
  *v1 = xmmword_10063B150;
  v1[1] = xmmword_10063B150;
  v2 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_impressionsTracker;
  v3 = type metadata accessor for ActivityDashboardImpressionsTracker();
  v4 = (_QWORD *)swift_allocObject(v3, 48, 7);
  type metadata accessor for BasicImpressionsTracker(0);
  v4[2] = BasicImpressionsTracker.__allocating_init(threshold:)(0.5);
  v4[3] = &protocol witness table for BasicImpressionsTracker;
  v4[4] = 0;
  v5 = sub_10004D47C((uint64_t)&_swiftEmptyArrayStorage);
  *(_QWORD *)&v0[v2] = v4;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_achievementTransitionAnimator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_marketingBannerViewController] = 0;
  v4[5] = v5;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_transitionAnimatorFromViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dataSource] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_trophyCaseViewControllerDelegate], 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_historyPagingViewControllerDelegate], 0);
  v6 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dashboardCardCellViewCache;
  v7 = type metadata accessor for DashboardCardCellViewCache();
  v8 = swift_allocObject(v7, 40, 7);
  *(_BYTE *)(v8 + 16) = 1;
  *(_QWORD *)(v8 + 24) = sub_10043D6F8((uint64_t)&_swiftEmptyArrayStorage);
  *(_QWORD *)(v8 + 32) = sub_10043D6F8((uint64_t)&_swiftEmptyArrayStorage);
  *(_QWORD *)&v0[v6] = v8;
  v9 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_addButton;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v10 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_doneButton;
  v11 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  *(_QWORD *)&v0[v10] = v11;
  v12 = UUID.init()(v11);
  UUID.init()(v12);
  v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_visibility] = 0;
  v13 = &v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_initialPresentation];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v14 = OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_accountButton;
  v15 = type metadata accessor for AccountButton(0);
  v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v15)), "init");
  *(_QWORD *)&v0[v14] = v16;
  v17 = UUID.init()(v16);
  UUID.init()(v17);
  v18 = &v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_dashboardTipReuseIdentifier];
  *v18 = 0xD00000000000001ELL;
  v18[1] = 0x800000010069E520;
  v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_isNavigationBarSetup] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_observers] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_keyValueObservers] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_resignActiveObserver] = 0;
  v19 = &v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController____lazy_storage___onDismissAddCardModal];
  *v19 = 0;
  v19[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_ringCardIndex] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/ActivityDashboardViewController.swift", 48, 2, 168, 0);
  __break(1u);
}

uint64_t sub_1003E7AB8(_QWORD *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, int a6, char *a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  int v38;
  uint64_t v39;
  uint64_t v41;
  int v42;
  _BYTE v43[16];
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  char v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[5];
  _QWORD v52[6];

  v42 = a6;
  v13 = sub_100047110(&qword_1008324A8);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SummaryCoordinator();
  v52[4] = &off_100798200;
  v52[3] = v17;
  v52[0] = a3;
  v18 = *(void **)&a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController];
  *(_QWORD *)&a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController] = a2;
  v19 = a3;
  v20 = a2;

  sub_1000252E0((uint64_t)v52, (uint64_t)v51);
  v21 = (uint64_t)&a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator];
  swift_beginAccess(&a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator], v48, 33, 0);
  sub_100025DA0((uint64_t)v51, v21, &qword_1008324B0);
  swift_endAccess(v48);
  v22 = *(_QWORD *)&a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_loadingCardHeightProvider];
  *(_QWORD *)&a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_loadingCardHeightProvider] = a5;
  swift_retain(a5);
  swift_release(v22);
  sub_1000252E0((uint64_t)a1, (uint64_t)v51);
  v23 = (uint64_t)&a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_card];
  swift_beginAccess(&a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_card], v48, 33, 0);
  sub_100025DA0((uint64_t)v51, v23, &qword_100832410);
  swift_endAccess(v48);
  v44 = a1;
  v45 = a7;
  v46 = a4;
  v47 = v42;
  v24 = sub_100047110(&qword_1008324B8);
  v25 = sub_100007050(&qword_1008324C0);
  v26 = sub_100028384(&qword_1008324C8, &qword_1008324C0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  v51[0] = v25;
  v51[1] = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v51, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v28 = UIHostingConfiguration<>.init(content:)(sub_1003E7F74, v43, v24, OpaqueTypeConformance2);
  v29 = static Edge.Set.all.getter(v28);
  v51[3] = v13;
  v51[4] = sub_100028384((unint64_t *)&unk_1008324D0, &qword_1008324A8, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
  sub_10004C480(v51);
  UIHostingConfiguration.margins(_:_:)(v29, v13, 0.0);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  UICollectionViewCell.contentConfiguration.setter(v51);
  v30 = a1[3];
  v31 = a1[4];
  sub_100016804(a1, v30);
  LOBYTE(v16) = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 32))(v30, v31);
  sub_1000252E0((uint64_t)a1, (uint64_t)v48);
  if ((v16 & 1) != 0)
  {
    v32 = v49;
    v33 = v50;
    sub_100016804(v48, v49);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 16))(v32, v33);
    v38 = v36 != 3 || (v34 | v35) != 0;
    sub_1000EB41C(v34, v35, v36);
  }
  else
  {
    v38 = 0;
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v48);
  v39 = OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_isJiggling;
  if (v38 != a7[OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_isJiggling])
  {
    sub_1005C34D8(v38, a7);
    a7[v39] = v38;
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v52);
}

uint64_t sub_1003E7DE8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003E7E0C()
{
  uint64_t v0;

  sub_1003E45E8(v0);
}

uint64_t sub_1003E7E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_100047110(&qword_100832420) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for OSSignposter(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v8, v2 | 7);
}

void sub_1003E7ED4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_100047110(&qword_100832420) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1003E56A0(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1003E7F18()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

id sub_1003E7F3C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1003E3070(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1003E7F44(uint64_t a1)
{
  uint64_t v1;

  return sub_1003E3CC4(a1, *(_QWORD *)(v1 + 16));
}

void sub_1003E7F4C(uint64_t a1)
{
  uint64_t v1;

  sub_1003E4374(a1, v1);
}

uint64_t sub_1003E7F54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10019C648(*(void **)(v1 + 16), a1);
}

uint64_t sub_1003E7F5C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;

  return sub_10019E36C(*(void **)(v5 + 16), a1, a2, a3, a4, a5);
}

void sub_1003E7F64(uint64_t a1)
{
  uint64_t v1;

  sub_1003E3BFC(a1, v1);
}

void sub_1003E7F6C()
{
  sub_1003E3B64();
}

uint64_t sub_1003E7F74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10055FC78(*(_QWORD **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), a1);
}

void sub_1003E7F84(char a1)
{
  uint64_t v1;

  sub_1003DFF74(a1, *(void **)(v1 + 16));
}

uint64_t sub_1003E7F8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003E7FB0()
{
  uint64_t v0;

  sub_1003E0038(*(_BYTE *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_1003E7FBC()
{
  uint64_t v0;

  return sub_1003DFD3C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1003E7FC4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1003E7FF0()
{
  uint64_t *v0;

  sub_1003E5C28(v0[2], v0[3], v0[4]);
}

uint64_t sub_1003E7FFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for UUID(0);
  v5 = sub_1000083D8((unint64_t *)&unk_10082E6B0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, v3, v4, v5) & 1;
}

void sub_1003E8070(uint64_t a1)
{
  uint64_t v1;

  sub_1003DD428(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1003E8078(uint64_t a1)
{
  uint64_t v1;

  sub_1003DD6C0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1003E8080(uint64_t a1)
{
  uint64_t v1;

  sub_1003DD860(a1, v1);
}

uint64_t sub_1003E808C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100832524);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_1003E0C84(a1, v4, v5, v6);
}

uint64_t sub_1003E80FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100832534);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000DA0E4;
  return sub_1003E19A0(a1, v4, v5, v6);
}

uint64_t sub_1003E816C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100832544);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_1003E1E9C(a1, v4, v5, v6);
}

uint64_t sub_1003E81E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_100047110(&qword_100832420) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v5 = type metadata accessor for OSSignposter(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v8, v2 | 7);
}

void sub_1003E829C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_100047110(&qword_100832420) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1003E5030(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_1003E82E4()
{
  uint64_t v0;

  sub_1003DCBA8(v0);
}

uint64_t sub_1003E82EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void *sub_1003E8310(uint64_t a1)
{
  uint64_t v1;

  return sub_1003DC69C(a1, *(_QWORD *)(v1 + 16));
}

id sub_1003E8318@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "contentSize");
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_1003E8348(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setContentSize:", *a1, a1[1]);
}

void sub_1003E835C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003DE228(a1, a2, v2);
}

void sub_1003E8364(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10044969C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1003E83C8()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_1003E83F8(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A8B8, 0xD00000000000001CLL, 0x800000010069E6C0);
}

uint64_t sub_1003E841C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t KeyPath;
  uint64_t v7;
  Swift::String v8;
  uint64_t v10;

  v0 = sub_100047110(&qword_100832708);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_100832700);
  sub_100008398(v3, qword_10086A8D0);
  sub_10003CE9C(v3, (uint64_t)qword_10086A8D0);
  v4 = sub_1002EF9DC();
  IntentURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for OpenTrophyCaseIntent, v4);
  v5._object = (void *)0x800000010069E6E0;
  v5._countAndFlagsBits = 0xD000000000000014;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v5);
  KeyPath = swift_getKeyPath(&unk_10063B988);
  v7 = sub_100047110(&qword_1008326F8);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v0, v7);
  swift_release(KeyPath);
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v8);
  return IntentURLRepresentation.init(stringInterpolation:)(v2, &type metadata for OpenTrophyCaseIntent, v4);
}

uint64_t sub_1003E8554@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10081DD10 != -1)
    swift_once(&qword_10081DD10, sub_1003E841C);
  v2 = sub_100047110(&qword_100832700);
  v3 = sub_10003CE9C(v2, (uint64_t)qword_10086A8D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_1003E85CC()
{
  unint64_t result;

  result = qword_1008325E0;
  if (!qword_1008325E0)
  {
    result = swift_getWitnessTable(&unk_10063B580, &type metadata for OpenTrophyCaseIntent);
    atomic_store(result, (unint64_t *)&qword_1008325E0);
  }
  return result;
}

unint64_t sub_1003E8614()
{
  unint64_t result;

  result = qword_1008325E8;
  if (!qword_1008325E8)
  {
    result = swift_getWitnessTable(&unk_10063B5A8, &type metadata for OpenTrophyCaseIntent);
    atomic_store(result, (unint64_t *)&qword_1008325E8);
  }
  return result;
}

uint64_t sub_1003E8658(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B6E78, 1);
}

uint64_t sub_1003E8668@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B13F8(&qword_10081DD08, (uint64_t)qword_10086A8B8, (uint64_t)sub_1003E83F8, a1);
}

uint64_t sub_1003E8684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v4 = sub_100047110(&qword_1008326E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_1008326F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, a1, a2);
  v10._countAndFlagsBits = 0x206E65704FLL;
  v10._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_10063B988);
  v12 = sub_100047110(&qword_1008326F8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release(KeyPath);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0, 0, a1, a2);
}

uint64_t sub_1003E87DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  v4 = (_QWORD *)swift_task_alloc(async function pointer to URLRepresentableIntent.perform()[1]);
  *(_QWORD *)(v2 + 16) = v4;
  v5 = sub_1003EAB98();
  *v4 = v2;
  v4[1] = sub_1003863D0;
  return URLRepresentableIntent.perform()(a2, v5);
}

uint64_t sub_1003E8840@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1003EA2D0();
  *a1 = result;
  return result;
}

uint64_t sub_1003E8864(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002EF9DC();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1003E8890()
{
  unint64_t result;

  result = qword_1008325F8;
  if (!qword_1008325F8)
  {
    result = swift_getWitnessTable(&unk_10063B644, &type metadata for OpenAwardIntent);
    atomic_store(result, (unint64_t *)&qword_1008325F8);
  }
  return result;
}

unint64_t sub_1003E88D8()
{
  unint64_t result;

  result = qword_100832600;
  if (!qword_100832600)
  {
    result = swift_getWitnessTable(&unk_1006440DC, &type metadata for AwardEntity);
    atomic_store(result, (unint64_t *)&qword_100832600);
  }
  return result;
}

uint64_t sub_1003E891C(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A8E8, 0x617741206E65704FLL, 0xEA00000000006472);
}

double sub_1003E8940@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  IntentParameter.wrappedValue.getter(&v3);
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1003E8978(uint64_t *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  _QWORD v5[2];

  v1 = *a1;
  v2 = (void *)a1[1];
  v5[0] = v1;
  v5[1] = v2;
  swift_retain(v1);
  v3 = v2;
  IntentParameter.wrappedValue.setter(v5);

  return swift_release(v1);
}

uint64_t sub_1003E89D4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_1003EAACC();
  v5 = sub_100171194();
  return static URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

unint64_t sub_1003E8A2C()
{
  unint64_t result;

  result = qword_100832608;
  if (!qword_100832608)
  {
    result = swift_getWitnessTable(&unk_10063B6FC, &type metadata for OpenAwardIntent);
    atomic_store(result, (unint64_t *)&qword_100832608);
  }
  return result;
}

unint64_t sub_1003E8A74()
{
  unint64_t result;

  result = qword_100832610;
  if (!qword_100832610)
  {
    result = swift_getWitnessTable(&unk_10063B724, &type metadata for OpenAwardIntent);
    atomic_store(result, (unint64_t *)&qword_100832610);
  }
  return result;
}

uint64_t sub_1003E8AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B1618(a1, a2, a3, (uint64_t (*)(void))sub_1002EFA20);
}

uint64_t sub_1003E8AC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B13F8(&qword_10081DD18, (uint64_t)qword_10086A8E8, (uint64_t)sub_1003E891C, a1);
}

uint64_t sub_1003E8AE0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003EAACC();
  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_1003E8B08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = (_QWORD *)swift_task_alloc(async function pointer to URLRepresentableIntent<>.perform()[1]);
  *(_QWORD *)(v2 + 16) = v4;
  v5 = sub_1003EAACC();
  v6 = sub_1003EAB10();
  v7 = sub_100171194();
  *v4 = v2;
  v4[1] = sub_10010123C;
  return URLRepresentableIntent<>.perform()(a2, v5, v6, v7);
}

uint64_t sub_1003E8B8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1003EA504();
  *a1 = result;
  return result;
}

uint64_t sub_1003E8BB0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002EFA20();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1003E8BE0()
{
  unint64_t result;

  result = qword_100832620;
  if (!qword_100832620)
  {
    result = swift_getWitnessTable(&unk_10063B7F8, &type metadata for MoveStreakIntent);
    atomic_store(result, (unint64_t *)&qword_100832620);
  }
  return result;
}

unint64_t sub_1003E8C28()
{
  unint64_t result;

  result = qword_100832628;
  if (!qword_100832628)
  {
    result = swift_getWitnessTable(&unk_10063B820, &type metadata for MoveStreakIntent);
    atomic_store(result, (unint64_t *)&qword_100832628);
  }
  return result;
}

uint64_t sub_1003E8C6C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1006B6E34, 1) + 8);
}

uint64_t sub_1003E8C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B1618(a1, a2, a3, (uint64_t (*)(void))sub_1002EFA64);
}

uint64_t sub_1003E8C9C(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A900, 0xD000000000000011, 0x800000010069E660);
}

uint64_t sub_1003E8CC0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[7] = a1;
  v2[8] = a2;
  v3 = type metadata accessor for LocalizedStringResource(0);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_1008201C8);
  v2[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IntentDialog(0);
  v2[11] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[12] = v6;
  v2[13] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v2[15] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003E8DB8, v9, v10);
}

void sub_1003E8DB8()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  double v7;
  double v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  unint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  id v19;
  void *v20;
  id v21;
  double v22;
  double v23;
  Swift::String v24;
  Swift::String v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(void);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  swift_release(v0[15]);
  if (qword_10081DD38 != -1)
    swift_once(&qword_10081DD38, sub_100421E50);
  v1 = sub_100422634(0xD00000000000001ALL, 0x800000010069E600);
  if (!v1)
  {
    v16 = sub_1003EA98C();
    v17 = swift_allocError(&type metadata for AwardIntentError, v16, 0, 0);
    *v18 = 0;
    swift_willThrow(v17);
LABEL_19:
    v41 = v0[13];
    v43 = v0[9];
    v42 = v0[10];
    swift_task_dealloc(v0[14]);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    v30 = (void (*)(void))v0[1];
    goto LABEL_20;
  }
  v2 = v1;
  IntentParameter.wrappedValue.getter(v0 + 16);
  if ((v0[16] & 1) == 0)
  {
    v19 = objc_msgSend(v2, "progress");
    if (!v19)
    {
LABEL_18:
      v31 = v0[11];
      v32 = v0[12];
      v34 = v0[9];
      v33 = v0[10];
      v0[4] = v0[8];
      LocalizedStringResource.init(stringLiteral:)(0xD000000000000029, 0x800000010069DC40);
      IntentDialog.init(_:)(v34);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v33, 0, 1, v31);
      v35 = swift_allocObject(&unk_10079E3E8, 24, 7);
      *(_QWORD *)(v35 + 16) = v2;
      v36 = type metadata accessor for AppIntentError(0);
      v37 = sub_1003EAA40();
      swift_allocError(v36, v37, 0, 0);
      v38 = sub_1003EAA88();
      v39 = v2;
      ForegroundContinuableIntent.needsToContinueInForegroundError(_:requestConfirmation:continuation:)(v33, 0, &unk_1008326B0, v35, &type metadata for MoveStreakIntent, v38);
      swift_release(v35);
      v40 = sub_10001BE90(v33, &qword_1008201C8);
      swift_willThrow(v40);

      goto LABEL_19;
    }
    v20 = v19;
    v21 = objc_msgSend((id)objc_opt_self(HKUnit), "countUnit");
    objc_msgSend(v20, "doubleValueForUnit:", v21);
    v23 = v22;

    if ((~*(_QWORD *)&v23 & 0x7FF0000000000000) != 0)
    {
      if (v23 > -9.22337204e18)
      {
        if (v23 < 9.22337204e18)
        {
          v9 = v0 + 5;
          v10 = v0 + 6;
          v12 = v0[13];
          v11 = v0[14];
          v13 = v0[11];
          v14 = v0[12];
          v0[5] = (uint64_t)v23;
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 1);
          v24._countAndFlagsBits = 0xD00000000000001CLL;
          v24._object = (void *)0x800000010069E640;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
          v0[6] = (uint64_t)v23;
          goto LABEL_17;
        }
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v3 = objc_msgSend(v2, "relevantEarnedInstance");
  if (!v3)
    goto LABEL_18;
  v4 = v3;
  v5 = objc_msgSend(v3, "value");

  if (!v5)
    goto LABEL_18;
  v6 = objc_msgSend((id)objc_opt_self(HKUnit), "countUnit");
  objc_msgSend(v5, "doubleValueForUnit:", v6);
  v8 = v7;

  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v8 < 9.22337204e18)
  {
    v9 = v0 + 2;
    v10 = v0 + 3;
    v12 = v0[13];
    v11 = v0[14];
    v13 = v0[11];
    v14 = v0[12];
    v0[2] = (uint64_t)v8;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 1);
    v15._countAndFlagsBits = 0xD00000000000001DLL;
    v15._object = (void *)0x800000010069E620;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v15);
    v0[3] = (uint64_t)v8;
LABEL_17:
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v10, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v25._countAndFlagsBits = 0x7379616420;
    v25._object = (void *)0xE500000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v25);
    IntentDialog.init(stringInterpolation:)(v11);
    v26 = sub_10024A564();
    static IntentResult.result<A>(value:dialog:)(v9, v12, &type metadata for Int, v26);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    v27 = v0[13];
    v29 = v0[9];
    v28 = v0[10];
    swift_task_dealloc(v0[14]);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    v30 = (void (*)(void))v0[1];
LABEL_20:
    v30();
    return;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1003E9284(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1[4] = a1;
  v2 = sub_100047110(&qword_10081E640);
  v1[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v1[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[7] = v4;
  v1[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LocalizedStringResource(0);
  v1[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v1[10] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v1[11] = v7;
  v1[12] = v8;
  return swift_task_switch(sub_1003E935C, v7, v8);
}

uint64_t sub_1003E935C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(void **)(v0 + 32);
  sub_100047110((uint64_t *)&unk_10083D730);
  v3 = v2;
  LocalizedStringResource.init(stringLiteral:)(0x64656E726145, 0xE600000000000000);
  v4 = EntityProperty<>.init(title:)(v1);
  *(_QWORD *)(v0 + 104) = v4;
  v5 = v3;
  *(_BYTE *)(v0 + 120) = objc_msgSend(v5, "unearned") ^ 1;
  EntityProperty.wrappedValue.setter(v0 + 120);

  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v5;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to URLRepresentableEntity.urlRepresentation.getter[1]);
  *(_QWORD *)(v0 + 112) = v6;
  v7 = sub_100171194();
  *v6 = v0;
  v6[1] = sub_1003E9448;
  return URLRepresentableEntity.urlRepresentation.getter(*(_QWORD *)(v0 + 40), &type metadata for AwardEntity, v7);
}

uint64_t sub_1003E9448()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  return swift_task_switch(sub_1003E9494, *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t sub_1003E9494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = swift_release(*(_QWORD *)(v0 + 80));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v4) == 1)
  {
    v5 = *(void **)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    swift_release(*(_QWORD *)(v0 + 104));

    sub_10001BE90(v6, &qword_10081E640);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 32))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
    if (qword_10081DDA8 != -1)
      swift_once(&qword_10081DDA8, sub_10044A45C);
    v7 = *(_QWORD *)(v0 + 104);
    v9 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 48);
    v11 = *(void **)(v0 + 32);
    sub_10044AD80(v8);
    swift_release(v7);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v12 = *(_QWORD *)(v0 + 64);
  v13 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003E95B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B13F8(&qword_10081DD20, (uint64_t)qword_10086A900, (uint64_t)sub_1003E8C9C, a1);
}

uint64_t sub_1003E95CC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_10083269C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000DA0E4;
  return sub_1003E8CC0(a1, v4);
}

uint64_t sub_1003E9624@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1003EA724();
  *a1 = result;
  return result;
}

uint64_t sub_1003E9648(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002EFA64();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1003E9674()
{
  unint64_t result;

  result = qword_100832638;
  if (!qword_100832638)
  {
    result = swift_getWitnessTable(&unk_10063B8CC, &type metadata for NextLimitedEditionAwardIntent);
    atomic_store(result, (unint64_t *)&qword_100832638);
  }
  return result;
}

unint64_t sub_1003E96BC()
{
  unint64_t result;

  result = qword_100832640;
  if (!qword_100832640)
  {
    result = swift_getWitnessTable(&unk_10063B8F4, &type metadata for NextLimitedEditionAwardIntent);
    atomic_store(result, (unint64_t *)&qword_100832640);
  }
  return result;
}

uint64_t sub_1003E9700(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1006B6DF0, 1) + 8);
}

uint64_t sub_1003E9724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B1618(a1, a2, a3, (uint64_t (*)(void))sub_1002EFAA8);
}

uint64_t sub_1003E9730(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A918, 0xD00000000000001ALL, 0x800000010069E5C0);
}

uint64_t sub_1003E9754(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1[8] = a1;
  v2 = type metadata accessor for IntentDialog(0);
  v1[9] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[10] = v3;
  v1[11] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  v1[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100047110(&qword_10081E640) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[13] = swift_task_alloc(v5);
  v1[14] = swift_task_alloc(v5);
  v6 = type metadata accessor for URL(0);
  v1[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[16] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[17] = swift_task_alloc(v8);
  v1[18] = swift_task_alloc(v8);
  v9 = type metadata accessor for LocalizedStringResource(0);
  v1[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchTimeInterval(0);
  v1[20] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[21] = v11;
  v1[22] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchTime(0);
  v1[23] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v1[24] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[25] = swift_task_alloc(v14);
  v1[26] = swift_task_alloc(v14);
  v15 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v1[27] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v1[28] = v16;
  v1[29] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MainActor(0);
  v1[30] = static MainActor.shared.getter(v17);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  v1[31] = v18;
  v1[32] = v19;
  return swift_task_switch(sub_1003E991C, v18, v19);
}

uint64_t sub_1003E991C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  _QWORD *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  if (qword_10081DD38 != -1)
    goto LABEL_19;
  while (1)
  {
    v1 = *(_QWORD *)(v0 + 232);
    v2 = *(_QWORD *)(v0 + 208);
    v49 = *(_QWORD *)(v0 + 216);
    v50 = *(_QWORD *)(v0 + 224);
    v3 = *(_QWORD *)(v0 + 200);
    v48 = *(_QWORD *)(v0 + 192);
    v5 = *(_QWORD **)(v0 + 176);
    v4 = *(_QWORD *)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 160);
    v7 = *(_QWORD *)(v0 + 168);
    v8 = qword_10086A930;
    v9 = (*(uint64_t (**)(uint64_t, _QWORD))(v50 + 104))(v1, enum case for AAUIAwardsDataProviderSection.limitedEdtion(_:));
    static DispatchTime.now()(v9);
    *v5 = 3;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v5, enum case for DispatchTimeInterval.seconds(_:), v6);
    + infix(_:_:)(v3, v5);
    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v5, v6);
    v10 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    v10(v3, v4);
    OS_dispatch_group.wait(timeout:)(v2);
    v10(v2, v4);
    v11 = *(_QWORD *)(v8 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider + 24);
    v12 = *(_QWORD *)(v8 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider + 32);
    sub_100016804((_QWORD *)(v8 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider), v11);
    v13 = dispatch thunk of AAUIAwardsDataProviding.achievements(forSection:)(v1, v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v1, v49);
    if ((unint64_t)v13 >> 62)
      break;
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v13);
    if (!v14)
      goto LABEL_11;
LABEL_4:
    v15 = 0;
    while (1)
    {
      v16 = (v13 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v13)
          : *(id *)(v13 + 8 * v15 + 32);
      v17 = v16;
      *(_QWORD *)(v0 + 264) = v16;
      v18 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      if ((objc_msgSend(v16, "unearned") & 1) != 0)
      {
        v41 = *(_QWORD *)(v0 + 152);
        swift_bridgeObjectRelease_n(v13, 2);
        sub_100047110((uint64_t *)&unk_10083D730);
        v42 = v17;
        LocalizedStringResource.init(stringLiteral:)(0x64656E726145, 0xE600000000000000);
        v43 = EntityProperty<>.init(title:)(v41);
        *(_QWORD *)(v0 + 272) = v43;
        v44 = v42;
        *(_BYTE *)(v0 + 289) = objc_msgSend(v44, "unearned", swift_retain(v43).n128_f64[0]) ^ 1;
        EntityProperty.wrappedValue.setter(v0 + 289);
        swift_release(v43);

        *(_QWORD *)(v0 + 32) = v43;
        *(_QWORD *)(v0 + 40) = v44;
        v45 = (_QWORD *)swift_task_alloc(async function pointer to URLRepresentableEntity.urlRepresentation.getter[1]);
        *(_QWORD *)(v0 + 280) = v45;
        v46 = sub_100171194();
        *v45 = v0;
        v45[1] = sub_1003E9DE0;
        return URLRepresentableEntity.urlRepresentation.getter(*(_QWORD *)(v0 + 112), &type metadata for AwardEntity, v46);
      }

      ++v15;
      if (v18 == v14)
        goto LABEL_11;
    }
    __break(1u);
LABEL_19:
    swift_once(&qword_10081DD38, sub_100421E50);
  }
  if (v13 < 0)
    v47 = v13;
  else
    v47 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v14 = _CocoaArrayWrapper.endIndex.getter(v47);
  if (v14)
    goto LABEL_4;
LABEL_11:
  v19 = *(_QWORD *)(v0 + 120);
  v20 = *(_QWORD *)(v0 + 128);
  v21 = *(_QWORD *)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 240));
  swift_bridgeObjectRelease_n(v13, 2);
  *(_BYTE *)(v0 + 288) = 5;
  v22 = sub_1003EA28C();
  URLRepresentableEnum.urlRepresentation.getter(&type metadata for TrophyCaseSectionEnum, v22);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v19) == 1)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 104), &qword_10081E640);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 120));
    if (qword_10081DDA8 != -1)
      swift_once(&qword_10081DDA8, sub_10044A45C);
    v24 = *(_QWORD *)(v0 + 128);
    v23 = *(_QWORD *)(v0 + 136);
    v25 = *(_QWORD *)(v0 + 120);
    sub_10044AD80(v23);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }
  v27 = *(_QWORD *)(v0 + 80);
  v26 = *(_QWORD *)(v0 + 88);
  v28 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  IntentDialog.init(stringLiteral:)(0xD00000000000003BLL, 0x800000010069E580);
  v29 = sub_100047110(&qword_1008233C8);
  v30 = sub_1001711D8();
  static IntentResult.result<A>(value:dialog:)(v0 + 16, v26, v29, v30);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  v31 = *(_QWORD *)(v0 + 200);
  v32 = *(_QWORD *)(v0 + 208);
  v33 = *(_QWORD *)(v0 + 176);
  v35 = *(_QWORD *)(v0 + 144);
  v34 = *(_QWORD *)(v0 + 152);
  v36 = *(_QWORD *)(v0 + 136);
  v38 = *(_QWORD *)(v0 + 104);
  v37 = *(_QWORD *)(v0 + 112);
  v39 = *(_QWORD *)(v0 + 96);
  v51 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v32);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003E9DE0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 280));
  return swift_task_switch(sub_1003E9E2C, *(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 256));
}

uint64_t sub_1003E9E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  Swift::String v11;
  id v12;
  id v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  Swift::String v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = swift_release(*(_QWORD *)(v0 + 240));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v4) == 1)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 112), &qword_10081E640);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
    if (qword_10081DDA8 != -1)
      swift_once(&qword_10081DDA8, sub_10044A45C);
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 128);
    sub_10044AD80(v5);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  v8 = *(void **)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 272);
  *(_QWORD *)(v0 + 48) = v9;
  *(_QWORD *)(v0 + 56) = v8;
  v10 = v8;
  swift_retain(v9);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1);
  v11._countAndFlagsBits = 0x3A7478654E207055;
  v11._object = (void *)0xE900000000000020;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v11);
  v12 = objc_msgSend(objc_allocWithZone((Class)ACHAchievementLocalizationProvider), "init");
  v13 = objc_msgSend(v12, "titleForAchievement:", v10);

  if (v13)
  {
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

  }
  else
  {
    sub_10052F8FC(*(void **)(v0 + 264));
    v14 = v17;
    v16 = v18;
  }
  v20 = *(void **)(v0 + 264);
  v19 = *(_QWORD *)(v0 + 272);
  v22 = *(_QWORD *)(v0 + 88);
  v21 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 72);
  v23 = *(_QWORD *)(v0 + 80);
  v25._countAndFlagsBits = v14;
  v25._object = v16;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v25);
  swift_bridgeObjectRelease(v16, v26, v27, v28, v29, v30, v31, v32);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v33);
  IntentDialog.init(stringInterpolation:)(v21);
  v34 = sub_100047110(&qword_1008233C8);
  v35 = sub_1001711D8();
  static IntentResult.result<A>(value:dialog:)(v0 + 48, v22, v34, v35);
  swift_release(v19);

  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  sub_100171280(*(_QWORD *)(v0 + 48), *(void **)(v0 + 56));
  v36 = *(_QWORD *)(v0 + 200);
  v37 = *(_QWORD *)(v0 + 208);
  v38 = *(_QWORD *)(v0 + 176);
  v40 = *(_QWORD *)(v0 + 144);
  v39 = *(_QWORD *)(v0 + 152);
  v41 = *(_QWORD *)(v0 + 136);
  v43 = *(_QWORD *)(v0 + 104);
  v42 = *(_QWORD *)(v0 + 112);
  v44 = *(_QWORD *)(v0 + 96);
  v46 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v37);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003EA0DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B13F8(&qword_10081DD28, (uint64_t)qword_10086A918, (uint64_t)sub_1003E9730, a1);
}

uint64_t sub_1003EA0F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10083267C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1000EA380;
  return sub_1003E9754(a1);
}

uint64_t sub_1003EA148(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002EFAA8();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for NextLimitedEditionAwardIntent()
{
  return &type metadata for NextLimitedEditionAwardIntent;
}

ValueMetadata *type metadata accessor for MoveStreakIntent()
{
  return &type metadata for MoveStreakIntent;
}

ValueMetadata *type metadata accessor for OpenAwardIntent()
{
  return &type metadata for OpenAwardIntent;
}

ValueMetadata *type metadata accessor for OpenTrophyCaseIntent()
{
  return &type metadata for OpenTrophyCaseIntent;
}

uint64_t sub_1003EA1B0()
{
  return sub_100028384(&qword_100823398, &qword_1008233A0, (uint64_t)&protocol conformance descriptor for <> IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1003EA1DC()
{
  return sub_100028384(&qword_1008233A8, &qword_1008233A0, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1003EA208()
{
  return sub_100028384(&qword_100832650, &qword_100832658, (uint64_t)&protocol conformance descriptor for <> IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1003EA234()
{
  return sub_100028384(&qword_100832660, &qword_100832658, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1003EA260()
{
  return sub_100028384(&qword_100832668, &qword_100832670, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

unint64_t sub_1003EA28C()
{
  unint64_t result;

  result = qword_100832680;
  if (!qword_100832680)
  {
    result = swift_getWitnessTable(&unk_100644384, &type metadata for TrophyCaseSectionEnum);
    atomic_store(result, (unint64_t *)&qword_100832680);
  }
  return result;
}

uint64_t sub_1003EA2D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t, uint64_t);
  unint64_t v19;
  _BYTE v21[15];
  char v22;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v21[-v8];
  v10 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v10);
  v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047110(&qword_1008326D0);
  LocalizedStringResource.init(stringLiteral:)(0x43207968706F7254, 0xEB00000000657361);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ALL, 0x800000010069E6A0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v22 = 0;
  v17 = type metadata accessor for IntentDialog(0);
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v9, 1, 1, v17);
  v18(v6, 1, 1, v17);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  v19 = sub_1003EAB54();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v16, v12, &v22, v9, v6, v3, &off_1007824D0, v19);
}

uint64_t sub_1003EA504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v19;
  _QWORD v21[2];

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v21 - v8;
  v10 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_1008233B0);
  LocalizedStringResource.init(stringLiteral:)(0x6472617741, 0xE500000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000012, 0x800000010069E680);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v17 = type metadata accessor for IntentDialog(0);
  v21[0] = 0;
  v21[1] = 0;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v9, 1, 1, v17);
  v18(v6, 1, 1, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  v19 = sub_1000F49B4();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v16, v12, v21, v9, v6, v3, v19);
}

uint64_t sub_1003EA724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t, uint64_t);
  unint64_t v19;
  _BYTE v21[15];
  char v22;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v21[-v8];
  v10 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v10);
  v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047110(&qword_100832688);
  LocalizedStringResource.init(stringLiteral:)(1701869908, 0xE400000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000016, 0x800000010069E5E0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v22 = 0;
  v17 = type metadata accessor for IntentDialog(0);
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v9, 1, 1, v17);
  v18(v6, 1, 1, v17);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  v19 = sub_1003EA948();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v16, v12, &v22, v9, v6, v3, &off_1007824F8, v19);
}

unint64_t sub_1003EA948()
{
  unint64_t result;

  result = qword_100832690;
  if (!qword_100832690)
  {
    result = swift_getWitnessTable(&unk_10064034C, &type metadata for MoveStreakDuration);
    atomic_store(result, &qword_100832690);
  }
  return result;
}

unint64_t sub_1003EA98C()
{
  unint64_t result;

  result = qword_1008326A0;
  if (!qword_1008326A0)
  {
    result = swift_getWitnessTable(&unk_10063A974, &type metadata for AwardIntentError);
    atomic_store(result, &qword_1008326A0);
  }
  return result;
}

uint64_t sub_1003EA9D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003EA9F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1008326AC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1000DA0E4;
  return sub_1003E9284(v2);
}

unint64_t sub_1003EAA40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008296C8;
  if (!qword_1008296C8)
  {
    v1 = type metadata accessor for AppIntentError(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AppIntentError, v1);
    atomic_store(result, (unint64_t *)&qword_1008296C8);
  }
  return result;
}

unint64_t sub_1003EAA88()
{
  unint64_t result;

  result = qword_1008326B8;
  if (!qword_1008326B8)
  {
    result = swift_getWitnessTable(&unk_10063B740, &type metadata for MoveStreakIntent);
    atomic_store(result, (unint64_t *)&qword_1008326B8);
  }
  return result;
}

unint64_t sub_1003EAACC()
{
  unint64_t result;

  result = qword_1008326C0;
  if (!qword_1008326C0)
  {
    result = swift_getWitnessTable(&unk_10063B5C4, &type metadata for OpenAwardIntent);
    atomic_store(result, (unint64_t *)&qword_1008326C0);
  }
  return result;
}

unint64_t sub_1003EAB10()
{
  unint64_t result;

  result = qword_1008326C8;
  if (!qword_1008326C8)
  {
    result = swift_getWitnessTable(&unk_10063B614, &type metadata for OpenAwardIntent);
    atomic_store(result, (unint64_t *)&qword_1008326C8);
  }
  return result;
}

unint64_t sub_1003EAB54()
{
  unint64_t result;

  result = qword_1008326D8;
  if (!qword_1008326D8)
  {
    result = swift_getWitnessTable(&unk_100644344, &type metadata for TrophyCaseSectionEnum);
    atomic_store(result, (unint64_t *)&qword_1008326D8);
  }
  return result;
}

unint64_t sub_1003EAB98()
{
  unint64_t result;

  result = qword_1008326E0;
  if (!qword_1008326E0)
  {
    result = swift_getWitnessTable(&unk_10063B4C0, &type metadata for OpenTrophyCaseIntent);
    atomic_store(result, (unint64_t *)&qword_1008326E0);
  }
  return result;
}

uint64_t sub_1003EABDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

double sub_1003EAC04@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v36;
  double v37;
  double v38;
  uint64_t v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  double result;
  unsigned int v46;
  unsigned int v47;
  double v48;
  double v49;
  double v50;
  double v51;
  _OWORD v52[7];

  v20 = a19;
  v21 = a18;
  v22 = a17;
  v24 = a14;
  v23 = a15;
  v25 = a12;
  v26 = a10;
  v27 = a2 & 1;
  v28 = a1;
  if ((_DWORD)v27)
    v28 = -INFINITY;
  v29 = a4 & 1;
  v30 = a3;
  if ((_DWORD)v29)
    v30 = v28;
  v31 = a6 & 1;
  v32 = a8 & 1;
  v33 = a13 & 1;
  v34 = a5;
  if ((a6 & 1) != 0)
    v34 = v30;
  if (v28 > v30 || v30 > v34)
    goto LABEL_22;
  v36 = a7;
  if ((a8 & 1) != 0)
    v36 = -INFINITY;
  v37 = a10;
  if ((a11 & 1) != 0)
    v37 = v36;
  v38 = a12;
  if ((a13 & 1) != 0)
    v38 = v37;
  if (v36 > v37 || v37 > v38)
  {
LABEL_22:
    v50 = a7;
    v51 = a5;
    v48 = a1;
    v49 = a3;
    v47 = v27;
    v46 = v29;
    v40 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v41 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v41, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v33 = a13 & 1;
    v29 = v46;
    v24 = a14;
    v23 = a15;
    v27 = v47;
    v26 = a10;
    v25 = a12;
    a1 = v48;
    a3 = v49;
    a7 = v50;
    a5 = v51;
    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v52, *(_QWORD *)&a1, v27, *(_QWORD *)&a3, v29, *(_QWORD *)&a5, v31, *(_QWORD *)&a7, v32, *(_QWORD *)&v26, a11 & 1, *(_QWORD *)&v25, v33, v24, v23);
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  v42 = v52[5];
  *(_OWORD *)(a9 + 96) = v52[4];
  *(_OWORD *)(a9 + 112) = v42;
  *(_OWORD *)(a9 + 128) = v52[6];
  v43 = v52[1];
  *(_OWORD *)(a9 + 32) = v52[0];
  *(_OWORD *)(a9 + 48) = v43;
  v44 = v52[3];
  *(_OWORD *)(a9 + 64) = v52[2];
  *(_OWORD *)(a9 + 80) = v44;
  sub_1000E439C(a16, v22, v21 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v20).n128_u64[0];
  return result;
}

double sub_1003EADE4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10081F4F8, &qword_10081F500).n128_u64[0];
  return result;
}

uint64_t sub_1003EAE3C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  unsigned int v45;
  double v46;
  double v47;
  double v48;
  double v49;
  _OWORD v50[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v48 = a5;
    v49 = a7;
    v47 = a3;
    v46 = a1;
    v45 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v45;
    v19 = a10;
    a1 = v46;
    a3 = v47;
    v18 = a12;
    a5 = v48;
    a7 = v49;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v50, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 208);
  *(_OWORD *)(a9 + 192) = *(_OWORD *)(v15 + 192);
  *(_OWORD *)(a9 + 208) = v34;
  *(_QWORD *)(a9 + 224) = *(_QWORD *)(v15 + 224);
  v35 = *(_OWORD *)(v15 + 144);
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v15 + 128);
  *(_OWORD *)(a9 + 144) = v35;
  v36 = *(_OWORD *)(v15 + 176);
  *(_OWORD *)(a9 + 160) = *(_OWORD *)(v15 + 160);
  *(_OWORD *)(a9 + 176) = v36;
  v37 = *(_OWORD *)(v15 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v15 + 64);
  *(_OWORD *)(a9 + 80) = v37;
  v38 = *(_OWORD *)(v15 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v15 + 96);
  *(_OWORD *)(a9 + 112) = v38;
  v39 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v15;
  *(_OWORD *)(a9 + 16) = v39;
  v40 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(a9 + 48) = v40;
  v41 = v50[5];
  *(_OWORD *)(a9 + 296) = v50[4];
  *(_OWORD *)(a9 + 312) = v41;
  *(_OWORD *)(a9 + 328) = v50[6];
  v42 = v50[1];
  *(_OWORD *)(a9 + 232) = v50[0];
  *(_OWORD *)(a9 + 248) = v42;
  v43 = v50[3];
  *(_OWORD *)(a9 + 264) = v50[2];
  *(_OWORD *)(a9 + 280) = v43;
  return sub_10041B054(v15);
}

double sub_1003EB018@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100823150, &qword_100823158).n128_u64[0];
  return result;
}

__n128 sub_1003EB070@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = v17;
  v19 = a9;
  v20 = a17;
  v22 = a14;
  v21 = a15;
  v23 = a12;
  v24 = a10;
  v25 = a2 & 1;
  v26 = a1;
  if ((_DWORD)v25)
    v26 = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = v26;
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (v26 > v28 || v28 > v31)
    goto LABEL_22;
  v33 = a7;
  if ((a8 & 1) != 0)
    v33 = -INFINITY;
  v34 = a10;
  if ((a11 & 1) != 0)
    v34 = v33;
  v35 = a12;
  if ((a13 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v47 = a3;
    v48 = a1;
    v46 = v25;
    v45 = v27;
    v38 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = v45;
    v22 = a14;
    v21 = a15;
    v25 = v46;
    v24 = a10;
    v23 = a12;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    a7 = v50;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v25, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, *(_QWORD *)&a7, v30, *(_QWORD *)&v24, a11 & 1, *(_QWORD *)&v23, a13 & 1, v22, v21);
  sub_100021CC0(v18, v19, a16);
  v41 = v19 + *(int *)(sub_100047110(v20) + 36);
  v42 = v51[5];
  *(_OWORD *)(v41 + 64) = v51[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v51[6];
  v43 = v51[1];
  *(_OWORD *)v41 = v51[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v51[3];
  *(_OWORD *)(v41 + 32) = v51[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

double sub_1003EB23C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100823760, &qword_100823768).n128_u64[0];
  return result;
}

double sub_1003EB294@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1008241A0, &qword_1008241A8).n128_u64[0];
  return result;
}

double sub_1003EB2EC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003ED794(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100825DA0, &qword_100825DA8).n128_u64[0];
  return result;
}

double sub_1003EB344@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100825F80, &qword_100825F88).n128_u64[0];
  return result;
}

double sub_1003EB39C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100825FA8, &qword_100825FB0).n128_u64[0];
  return result;
}

double sub_1003EB3F4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  double result;
  __int128 v38;
  unsigned int v39;
  double v40;
  double v41;
  double v42;
  double v43;
  _OWORD v44[7];

  v16 = v15;
  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v43 = a7;
    v41 = a3;
    v42 = a5;
    v40 = a1;
    v39 = v21;
    v33 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &_mh_execute_header, v34, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a15;
    v21 = v39;
    v20 = a10;
    a1 = v40;
    a3 = v41;
    a5 = v42;
    v19 = a12;
    a7 = v43;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v44, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  sub_1001DDCAC(v16, a9);
  v35 = v44[2];
  *(_OWORD *)(a9 + 136) = v44[3];
  v36 = v44[5];
  *(_OWORD *)(a9 + 152) = v44[4];
  *(_OWORD *)(a9 + 168) = v36;
  *(_OWORD *)(a9 + 184) = v44[6];
  result = *(double *)v44;
  v38 = v44[1];
  *(_OWORD *)(a9 + 88) = v44[0];
  *(_OWORD *)(a9 + 104) = v38;
  *(_OWORD *)(a9 + 120) = v35;
  return result;
}

uint64_t sub_1003EB5A0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v44 = a7;
    v42 = a1;
    v43 = a5;
    v41 = a3;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v19 = a10;
    v20 = v40;
    a3 = v41;
    a1 = v42;
    a5 = v43;
    v18 = a12;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(a9 + 48) = v34;
  v35 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v15;
  *(_OWORD *)(a9 + 16) = v35;
  v36 = v45[2];
  *(_OWORD *)(a9 + 120) = v45[3];
  v37 = v45[5];
  *(_OWORD *)(a9 + 136) = v45[4];
  *(_OWORD *)(a9 + 152) = v37;
  *(_OWORD *)(a9 + 168) = v45[6];
  v38 = v45[1];
  *(_OWORD *)(a9 + 72) = v45[0];
  *(_OWORD *)(a9 + 88) = v38;
  *(_DWORD *)(a9 + 64) = *(_DWORD *)(v15 + 64);
  *(_OWORD *)(a9 + 104) = v36;
  return sub_10041B178(v15);
}

uint64_t sub_1003EB758@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, char a19, uint64_t a20)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v36;
  double v37;
  double v38;
  uint64_t v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  unsigned int v46;
  unsigned int v47;
  double v48;
  double v49;
  double v50;
  double v51;
  _OWORD v52[7];

  v22 = a16;
  v21 = a17;
  v24 = a14;
  v23 = a15;
  v25 = a12;
  v26 = a10;
  v27 = a2 & 1;
  v28 = a1;
  if ((_DWORD)v27)
    v28 = -INFINITY;
  v29 = a4 & 1;
  v30 = a3;
  if ((_DWORD)v29)
    v30 = v28;
  v31 = a6 & 1;
  v32 = a8 & 1;
  v33 = a11 & 1;
  v34 = a5;
  if ((a6 & 1) != 0)
    v34 = v30;
  if (v28 > v30 || v30 > v34)
    goto LABEL_22;
  v36 = a7;
  if ((a8 & 1) != 0)
    v36 = -INFINITY;
  v37 = a10;
  if ((a11 & 1) != 0)
    v37 = v36;
  v38 = a12;
  if ((a13 & 1) != 0)
    v38 = v37;
  if (v36 > v37 || v37 > v38)
  {
LABEL_22:
    v51 = a7;
    v49 = a1;
    v50 = a5;
    v48 = a3;
    v47 = v27;
    v46 = v29;
    v40 = static os_log_type_t.fault.getter();
    v41 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v41, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v33 = a11 & 1;
    v29 = v46;
    v24 = a14;
    v23 = a15;
    v27 = v47;
    v26 = a10;
    v25 = a12;
    a3 = v48;
    a1 = v49;
    a5 = v50;
    a7 = v51;
    v21 = a17;
    v22 = a16;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v52, *(_QWORD *)&a1, v27, *(_QWORD *)&a3, v29, *(_QWORD *)&a5, v31, *(_QWORD *)&a7, v32, *(_QWORD *)&v26, v33, *(_QWORD *)&v25, a13 & 1, v24, v23);
  *(_QWORD *)a9 = v22;
  *(_QWORD *)(a9 + 8) = v21;
  *(_BYTE *)(a9 + 16) = a18 & 1;
  *(_BYTE *)(a9 + 17) = a19 & 1;
  *(_QWORD *)(a9 + 24) = a20;
  v42 = v52[5];
  *(_OWORD *)(a9 + 96) = v52[4];
  *(_OWORD *)(a9 + 112) = v42;
  *(_OWORD *)(a9 + 128) = v52[6];
  v43 = v52[1];
  *(_OWORD *)(a9 + 32) = v52[0];
  *(_OWORD *)(a9 + 48) = v43;
  v44 = v52[3];
  *(_OWORD *)(a9 + 64) = v52[2];
  *(_OWORD *)(a9 + 80) = v44;
  swift_retain(v22);
  return swift_retain(a20);
}

double sub_1003EB934@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100827098, &qword_100827080).n128_u64[0];
  return result;
}

double sub_1003EB98C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003ED794(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10081EE68, &qword_100827060).n128_u64[0];
  return result;
}

_QWORD *sub_1003EB9E4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v40;
    v19 = a10;
    a1 = v41;
    a3 = v42;
    v18 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 48);
  a9[2] = *(_OWORD *)(v15 + 32);
  a9[3] = v34;
  a9[4] = *(_OWORD *)(v15 + 64);
  *(_OWORD *)((char *)a9 + 73) = *(_OWORD *)(v15 + 73);
  v35 = *(_OWORD *)(v15 + 16);
  *a9 = *(_OWORD *)v15;
  a9[1] = v35;
  v36 = v45[5];
  a9[10] = v45[4];
  a9[11] = v36;
  a9[12] = v45[6];
  v37 = v45[1];
  a9[6] = v45[0];
  a9[7] = v37;
  v38 = v45[3];
  a9[8] = v45[2];
  a9[9] = v38;
  return sub_100419B68((_QWORD *)v15);
}

id sub_1003EBB98@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, void *a19)
{
  double v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v35;
  double v36;
  double v37;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  unsigned int v46;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v19 = a1;
  v21 = a18;
  v22 = a16;
  v24 = a14;
  v23 = a15;
  v25 = a12;
  v26 = a10;
  v27 = a2 & 1;
  v28 = a1;
  if ((_DWORD)v27)
    v28 = -INFINITY;
  v29 = a4 & 1;
  v30 = a3;
  if ((a4 & 1) != 0)
    v30 = v28;
  v31 = a6 & 1;
  v32 = a8 & 1;
  v33 = a5;
  if ((_DWORD)v31)
    v33 = v30;
  if (v28 > v30 || v30 > v33)
    goto LABEL_22;
  v35 = a7;
  if ((a8 & 1) != 0)
    v35 = -INFINITY;
  v36 = a10;
  if ((a11 & 1) != 0)
    v36 = v35;
  v37 = a12;
  if ((a13 & 1) != 0)
    v37 = v36;
  if (v35 > v36 || v36 > v37)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v48 = a3;
    v46 = v27;
    v39 = v31;
    v40 = static os_log_type_t.fault.getter();
    v41 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v41, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v31 = v39;
    v24 = a14;
    v23 = a15;
    v27 = v46;
    v26 = a10;
    v25 = a12;
    v19 = a1;
    a3 = v48;
    v22 = a16;
    a5 = v49;
    v21 = a18;
    a7 = v50;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&v19, v27, *(_QWORD *)&a3, v29, *(_QWORD *)&a5, v31, *(_QWORD *)&a7, v32, *(_QWORD *)&v26, a11 & 1, *(_QWORD *)&v25, a13 & 1, v24, v23);
  *(_QWORD *)a9 = v22;
  *(_QWORD *)(a9 + 8) = a17;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = a19;
  v42 = v51[5];
  *(_OWORD *)(a9 + 96) = v51[4];
  *(_OWORD *)(a9 + 112) = v42;
  *(_OWORD *)(a9 + 128) = v51[6];
  v43 = v51[1];
  *(_OWORD *)(a9 + 32) = v51[0];
  *(_OWORD *)(a9 + 48) = v43;
  v44 = v51[3];
  *(_OWORD *)(a9 + 64) = v51[2];
  *(_OWORD *)(a9 + 80) = v44;
  return a19;
}

double sub_1003EBD68@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100829080, &qword_100829088).n128_u64[0];
  return result;
}

double sub_1003EBDC0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100829030, &qword_100829038).n128_u64[0];
  return result;
}

uint64_t sub_1003EBE18@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  unsigned int v43;
  double v44;
  double v45;
  double v46;
  double v47;
  _OWORD v48[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v46 = a5;
    v47 = a7;
    v45 = a3;
    v44 = a1;
    v43 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v43;
    v19 = a10;
    a1 = v44;
    a3 = v45;
    v18 = a12;
    a5 = v46;
    a7 = v47;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v48, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v15 + 64);
  *(_OWORD *)(a9 + 80) = v34;
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v15 + 96);
  *(_BYTE *)(a9 + 112) = *(_BYTE *)(v15 + 112);
  v35 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v15;
  *(_OWORD *)(a9 + 16) = v35;
  v36 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(a9 + 48) = v36;
  v37 = v48[0];
  v38 = v48[1];
  v39 = v48[3];
  *(_OWORD *)(a9 + 152) = v48[2];
  *(_OWORD *)(a9 + 136) = v38;
  *(_OWORD *)(a9 + 120) = v37;
  v40 = v48[4];
  v41 = v48[5];
  *(_OWORD *)(a9 + 216) = v48[6];
  *(_OWORD *)(a9 + 200) = v41;
  *(_OWORD *)(a9 + 184) = v40;
  *(_OWORD *)(a9 + 168) = v39;
  return sub_10024E204(v15);
}

uint64_t sub_1003EBFE4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  unsigned int v43;
  double v44;
  double v45;
  double v46;
  double v47;
  _OWORD v48[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v47 = a7;
    v45 = a1;
    v46 = a5;
    v44 = a3;
    v43 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v19 = a10;
    v20 = v43;
    a3 = v44;
    a1 = v45;
    a5 = v46;
    v18 = a12;
    a7 = v47;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v48, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 144);
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v15 + 128);
  *(_OWORD *)(a9 + 144) = v34;
  v35 = *(_OWORD *)(v15 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v15 + 64);
  *(_OWORD *)(a9 + 80) = v35;
  v36 = *(_OWORD *)(v15 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v15 + 96);
  *(_OWORD *)(a9 + 112) = v36;
  v37 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v15;
  *(_OWORD *)(a9 + 16) = v37;
  v38 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(a9 + 48) = v38;
  v39 = v48[2];
  *(_OWORD *)(a9 + 216) = v48[3];
  v40 = v48[5];
  *(_OWORD *)(a9 + 232) = v48[4];
  *(_OWORD *)(a9 + 248) = v40;
  *(_OWORD *)(a9 + 264) = v48[6];
  v41 = v48[1];
  *(_OWORD *)(a9 + 168) = v48[0];
  *(_OWORD *)(a9 + 184) = v41;
  *(_BYTE *)(a9 + 160) = *(_BYTE *)(v15 + 160);
  *(_OWORD *)(a9 + 200) = v39;
  return sub_10024E204(v15);
}

double sub_1003EC1BC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003ED794(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100829E80, &qword_100829E88).n128_u64[0];
  return result;
}

double sub_1003EC214@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  double result;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v48 = a3;
    v47 = a1;
    v46 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v46;
    v19 = a10;
    a1 = v47;
    a3 = v48;
    v18 = a12;
    a5 = v49;
    a7 = v50;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_QWORD *)(v15 + 24);
  v35 = *(_QWORD *)(v15 + 32);
  v36 = *(_QWORD *)(v15 + 48);
  v37 = *(_QWORD *)(v15 + 56);
  v38 = *(_BYTE *)(v15 + 40) & 1;
  v39 = *(_OWORD *)(v15 + 16);
  *a9 = *(_OWORD *)v15;
  a9[1] = v39;
  v40 = *(_OWORD *)(v15 + 48);
  a9[2] = *(_OWORD *)(v15 + 32);
  a9[3] = v40;
  v41 = v51[6];
  v42 = v51[4];
  a9[9] = v51[5];
  a9[10] = v41;
  v43 = v51[1];
  a9[4] = v51[0];
  a9[5] = v43;
  v44 = v51[2];
  a9[7] = v51[3];
  a9[8] = v42;
  a9[6] = v44;
  sub_1000E439C(v34, v35, v38);
  swift_retain(v37);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v36).n128_u64[0];
  return result;
}

uint64_t sub_1003EC3D4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v44 = a7;
    v42 = a1;
    v43 = a5;
    v41 = a3;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v19 = a10;
    v20 = v40;
    a3 = v41;
    a1 = v42;
    a5 = v43;
    v18 = a12;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v15 + 64);
  v35 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v15;
  *(_OWORD *)(a9 + 16) = v35;
  v36 = v45[2];
  *(_OWORD *)(a9 + 136) = v45[3];
  v37 = v45[5];
  *(_OWORD *)(a9 + 152) = v45[4];
  *(_OWORD *)(a9 + 168) = v37;
  *(_OWORD *)(a9 + 184) = v45[6];
  v38 = v45[1];
  *(_OWORD *)(a9 + 88) = v45[0];
  *(_OWORD *)(a9 + 104) = v38;
  *(_QWORD *)(a9 + 80) = *(_QWORD *)(v15 + 80);
  *(_OWORD *)(a9 + 120) = v36;
  return sub_10041AFD0(v15);
}

double sub_1003EC594@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10082C530, &qword_10082C538).n128_u64[0];
  return result;
}

double sub_1003EC5EC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10082EB08, &qword_10082EB58).n128_u64[0];
  return result;
}

double sub_1003EC644@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003ED794(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10082F188, &qword_10082F190).n128_u64[0];
  return result;
}

double sub_1003EC69C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003ED794(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10082FE20, &qword_10082FE28).n128_u64[0];
  return result;
}

double sub_1003EC6F4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100832DE0, &qword_100832DE8).n128_u64[0];
  return result;
}

double sub_1003EC74C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003ED794(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100832D98, &qword_100832DA0).n128_u64[0];
  return result;
}

double sub_1003EC7A4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100832E60, &qword_100832E68).n128_u64[0];
  return result;
}

double sub_1003EC7FC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100832E50, &qword_100832E58).n128_u64[0];
  return result;
}

uint64_t sub_1003EC854@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  _OWORD *v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  unsigned int v44;
  double v45;
  double v46;
  double v47;
  double v48;
  _OWORD v49[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v47 = a5;
    v48 = a7;
    v46 = a3;
    v45 = a1;
    v44 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter(v32);
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v44;
    v19 = a10;
    a1 = v45;
    a3 = v46;
    v18 = a12;
    a5 = v47;
    a7 = v48;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v49, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v15[5];
  a9[4] = v15[4];
  a9[5] = v34;
  v35 = v15[7];
  a9[6] = v15[6];
  a9[7] = v35;
  v36 = v15[1];
  *a9 = *v15;
  a9[1] = v36;
  v37 = v15[3];
  a9[2] = v15[2];
  a9[3] = v37;
  v38 = v49[1];
  a9[8] = v49[0];
  a9[9] = v38;
  v39 = v49[2];
  v40 = v49[3];
  v41 = v49[6];
  v42 = v49[4];
  a9[13] = v49[5];
  a9[14] = v41;
  a9[11] = v40;
  a9[12] = v42;
  a9[10] = v39;
  return sub_10014E284((uint64_t)v15);
}

_QWORD *sub_1003ECA0C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  __int128 *v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  unsigned int v41;
  double v42;
  double v43;
  double v44;
  double v45;
  _OWORD v46[7];
  uint64_t v47;
  char v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  _BYTE v52[32];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v44 = a5;
    v45 = a7;
    v43 = a3;
    v42 = a1;
    v41 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter(v32);
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v41;
    v19 = a10;
    a1 = v42;
    a3 = v43;
    v18 = a12;
    a5 = v44;
    a7 = v45;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v46, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v15[1];
  v49 = *v15;
  v50 = v34;
  sub_10041B214((uint64_t)&v49, (uint64_t)v52);
  v51 = *((_QWORD *)&v50 + 1);
  v47 = *((_QWORD *)v15 + 4);
  v48 = *((_BYTE *)v15 + 40);
  v35 = v15[1];
  *a9 = *v15;
  a9[1] = v35;
  *(_OWORD *)((char *)a9 + 25) = *(__int128 *)((char *)v15 + 25);
  v36 = v46[6];
  v37 = v46[4];
  a9[8] = v46[5];
  a9[9] = v36;
  v38 = v46[1];
  a9[3] = v46[0];
  a9[4] = v38;
  v39 = v46[2];
  a9[6] = v46[3];
  a9[7] = v37;
  a9[5] = v39;
  sub_10041B250((uint64_t)v52);
  sub_100126C98(&v51);
  return sub_10010799C(&v47);
}

uint64_t sub_1003ECBE4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  _OWORD *v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  unsigned int v43;
  double v44;
  double v45;
  double v46;
  double v47;
  _OWORD v48[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v46 = a5;
    v47 = a7;
    v45 = a3;
    v44 = a1;
    v43 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter(v32);
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v43;
    v19 = a10;
    a1 = v44;
    a3 = v45;
    v18 = a12;
    a5 = v46;
    a7 = v47;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v48, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v15[5];
  a9[4] = v15[4];
  a9[5] = v34;
  a9[6] = v15[6];
  *(_OWORD *)((char *)a9 + 106) = *(_OWORD *)((char *)v15 + 106);
  v35 = v15[1];
  *a9 = *v15;
  a9[1] = v35;
  v36 = v15[3];
  a9[2] = v15[2];
  a9[3] = v36;
  v37 = v48[1];
  a9[8] = v48[0];
  a9[9] = v37;
  v38 = v48[2];
  v39 = v48[3];
  v40 = v48[6];
  v41 = v48[4];
  a9[13] = v48[5];
  a9[14] = v40;
  a9[11] = v39;
  a9[12] = v41;
  a9[10] = v38;
  return sub_10041B2F4((uint64_t)v15);
}

double sub_1003ECDA0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100832DD0, &qword_100832DD8).n128_u64[0];
  return result;
}

uint64_t sub_1003ECDF8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  unsigned int v43;
  double v44;
  double v45;
  double v46;
  double v47;
  _OWORD v48[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v47 = a7;
    v45 = a1;
    v46 = a5;
    v44 = a3;
    v43 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter(v32);
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v17 = a15;
    v19 = a10;
    v20 = v43;
    a3 = v44;
    a1 = v45;
    a5 = v46;
    v18 = a12;
    a7 = v47;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v48, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 144);
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v15 + 128);
  *(_OWORD *)(a9 + 144) = v34;
  v35 = *(_OWORD *)(v15 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v15 + 64);
  *(_OWORD *)(a9 + 80) = v35;
  v36 = *(_OWORD *)(v15 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v15 + 96);
  *(_OWORD *)(a9 + 112) = v36;
  v37 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v15;
  *(_OWORD *)(a9 + 16) = v37;
  v38 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(a9 + 48) = v38;
  v39 = v48[2];
  *(_OWORD *)(a9 + 216) = v48[3];
  v40 = v48[5];
  *(_OWORD *)(a9 + 232) = v48[4];
  *(_OWORD *)(a9 + 248) = v40;
  *(_OWORD *)(a9 + 264) = v48[6];
  v41 = v48[1];
  *(_OWORD *)(a9 + 168) = v48[0];
  *(_OWORD *)(a9 + 184) = v41;
  *(_BYTE *)(a9 + 160) = *(_BYTE *)(v15 + 160);
  *(_OWORD *)(a9 + 200) = v39;
  return sub_10041B280(v15);
}

__n128 sub_1003ECFCC@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v26;
  double v27;
  double v28;
  uint64_t v30;
  void *v31;
  __int128 v32;
  __int128 v33;
  __n128 result;
  unsigned int v35;
  double v36;
  double v37;
  double v38;
  double v39;
  _OWORD v40[7];

  v16 = a12;
  v17 = a10;
  v18 = a2 & 1;
  v19 = a1;
  if ((_DWORD)v18)
    v19 = -INFINITY;
  v20 = a4 & 1;
  v21 = a3;
  if ((a4 & 1) != 0)
    v21 = v19;
  v22 = a6 & 1;
  v23 = a8 & 1;
  v24 = a5;
  if ((a6 & 1) != 0)
    v24 = v21;
  if (v19 > v21 || v21 > v24)
    goto LABEL_22;
  v26 = a7;
  if ((a8 & 1) != 0)
    v26 = -INFINITY;
  v27 = a10;
  if ((a11 & 1) != 0)
    v27 = v26;
  v28 = a12;
  if ((a13 & 1) != 0)
    v28 = v27;
  if (v26 > v27 || v27 > v28)
  {
LABEL_22:
    v39 = a7;
    v38 = a5;
    v36 = a1;
    v37 = a3;
    v35 = v18;
    v30 = static os_log_type_t.fault.getter();
    v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v30, &_mh_execute_header, v31, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = v35;
    a1 = v36;
    a3 = v37;
    v17 = a10;
    a5 = v38;
    v16 = a12;
    a7 = v39;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v40, *(_QWORD *)&a1, v18, *(_QWORD *)&a3, v20, *(_QWORD *)&a5, v22, *(_QWORD *)&a7, v23, *(_QWORD *)&v17, a11 & 1, *(_QWORD *)&v16, a13 & 1, a14, a15);
  v32 = v40[5];
  *(_OWORD *)(a9 + 64) = v40[4];
  *(_OWORD *)(a9 + 80) = v32;
  *(_OWORD *)(a9 + 96) = v40[6];
  v33 = v40[1];
  *(_OWORD *)a9 = v40[0];
  *(_OWORD *)(a9 + 16) = v33;
  result = (__n128)v40[3];
  *(_OWORD *)(a9 + 32) = v40[2];
  *(__n128 *)(a9 + 48) = result;
  return result;
}

double sub_1003ED154@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100832E30, &qword_100832E38).n128_u64[0];
  return result;
}

double sub_1003ED1AC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100832B38, &qword_100832B40).n128_u64[0];
  return result;
}

double sub_1003ED204@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100832B28, &qword_100832B30).n128_u64[0];
  return result;
}

double sub_1003ED25C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003ED794(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100832DC0, &qword_100832DC8).n128_u64[0];
  return result;
}

uint64_t sub_1003ED2B4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v44 = a7;
    v42 = a1;
    v43 = a5;
    v41 = a3;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter(v32);
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v17 = a15;
    v19 = a10;
    v20 = v40;
    a3 = v41;
    a1 = v42;
    a5 = v43;
    v18 = a12;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v15 + 64);
  v35 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v15;
  *(_OWORD *)(a9 + 16) = v35;
  v36 = v45[2];
  *(_OWORD *)(a9 + 136) = v45[3];
  v37 = v45[5];
  *(_OWORD *)(a9 + 152) = v45[4];
  *(_OWORD *)(a9 + 168) = v37;
  *(_OWORD *)(a9 + 184) = v45[6];
  v38 = v45[1];
  *(_OWORD *)(a9 + 88) = v45[0];
  *(_OWORD *)(a9 + 104) = v38;
  *(_DWORD *)(a9 + 80) = *(_DWORD *)(v15 + 80);
  *(_OWORD *)(a9 + 120) = v36;
  return sub_10041B104(v15);
}

double sub_1003ED474@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100832E00, &qword_100832E08).n128_u64[0];
  return result;
}

uint64_t sub_1003ED4CC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  unsigned int v42;
  double v43;
  double v44;
  double v45;
  double v46;
  _OWORD v47[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v45 = a5;
    v46 = a7;
    v44 = a3;
    v43 = a1;
    v42 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter(v32);
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v42;
    v19 = a10;
    a1 = v43;
    a3 = v44;
    v18 = a12;
    a5 = v45;
    a7 = v46;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v47, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v15 + 64);
  *(_OWORD *)(a9 + 80) = v34;
  *(_BYTE *)(a9 + 96) = *(_BYTE *)(v15 + 96);
  v35 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v15;
  *(_OWORD *)(a9 + 16) = v35;
  v36 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(a9 + 48) = v36;
  v37 = v47[1];
  *(_OWORD *)(a9 + 104) = v47[0];
  *(_OWORD *)(a9 + 120) = v37;
  v38 = v47[3];
  *(_OWORD *)(a9 + 136) = v47[2];
  v39 = v47[4];
  v40 = v47[5];
  *(_OWORD *)(a9 + 200) = v47[6];
  *(_OWORD *)(a9 + 184) = v40;
  *(_OWORD *)(a9 + 168) = v39;
  *(_OWORD *)(a9 + 152) = v38;
  return sub_10041B1E0(v15);
}

double sub_1003ED68C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100832DF0, &qword_100832DF8).n128_u64[0];
  return result;
}

double sub_1003ED6E4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100832E20, &qword_100832E28).n128_u64[0];
  return result;
}

double sub_1003ED73C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003ED794(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100832E10, &qword_100832E18).n128_u64[0];
  return result;
}

__n128 sub_1003ED794@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v32;
  double v33;
  double v34;
  uint64_t v36;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __n128 result;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = a9;
  v19 = a16;
  v21 = a14;
  v20 = a15;
  v22 = a12;
  v23 = a10;
  v24 = a2 & 1;
  v25 = a1;
  if ((_DWORD)v24)
    v25 = -INFINITY;
  v26 = a4 & 1;
  v27 = a3;
  if ((_DWORD)v26)
    v27 = v25;
  v28 = a6 & 1;
  v29 = a8 & 1;
  v30 = a5;
  if ((a6 & 1) != 0)
    v30 = v27;
  if (v25 > v27 || v27 > v30)
    goto LABEL_22;
  v32 = a7;
  if ((a8 & 1) != 0)
    v32 = -INFINITY;
  v33 = a10;
  if ((a11 & 1) != 0)
    v33 = v32;
  v34 = a12;
  if ((a13 & 1) != 0)
    v34 = v33;
  if (v32 > v33 || v33 > v34)
  {
LABEL_22:
    v49 = a7;
    v50 = a5;
    v47 = a1;
    v48 = a3;
    v46 = v24;
    v36 = v26;
    v38 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v18 = a9;
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v26 = v36;
    v21 = a14;
    v20 = a15;
    v24 = v46;
    v23 = a10;
    v22 = a12;
    a1 = v47;
    a3 = v48;
    a7 = v49;
    a5 = v50;
    v19 = a16;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v24, *(_QWORD *)&a3, v26, *(_QWORD *)&a5, v28, *(_QWORD *)&a7, v29, *(_QWORD *)&v23, a11 & 1, *(_QWORD *)&v22, a13 & 1, v21, v20);
  v41 = sub_100047110(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v18, v17, v41);
  v42 = v18 + *(int *)(sub_100047110(a17) + 36);
  v43 = v51[5];
  *(_OWORD *)(v42 + 64) = v51[4];
  *(_OWORD *)(v42 + 80) = v43;
  *(_OWORD *)(v42 + 96) = v51[6];
  v44 = v51[1];
  *(_OWORD *)v42 = v51[0];
  *(_OWORD *)(v42 + 16) = v44;
  result = (__n128)v51[3];
  *(_OWORD *)(v42 + 32) = v51[2];
  *(__n128 *)(v42 + 48) = result;
  return result;
}

_QWORD *sub_1003ED970@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  __int128 *v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  unsigned int v41;
  double v42;
  double v43;
  double v44;
  double v45;
  _OWORD v46[7];
  __int128 v47;
  char v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  _BYTE v52[32];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v44 = a5;
    v45 = a7;
    v43 = a3;
    v42 = a1;
    v41 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter(v32);
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v41;
    v19 = a10;
    a1 = v42;
    a3 = v43;
    v18 = a12;
    a5 = v44;
    a7 = v45;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v46, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v15[1];
  v49 = *v15;
  v50 = v34;
  sub_10041B214((uint64_t)&v49, (uint64_t)v52);
  v36 = v15[1];
  v47 = v15[2];
  v35 = v47;
  *(_OWORD *)a9 = *v15;
  *(_OWORD *)(a9 + 16) = v36;
  *(_OWORD *)(a9 + 32) = v35;
  *(_OWORD *)(a9 + 152) = v46[6];
  v37 = v46[4];
  *(_OWORD *)(a9 + 136) = v46[5];
  *(_OWORD *)(a9 + 120) = v37;
  v38 = v46[2];
  *(_OWORD *)(a9 + 104) = v46[3];
  v39 = v46[1];
  *(_OWORD *)(a9 + 56) = v46[0];
  v51 = *((_QWORD *)&v50 + 1);
  v48 = *((_BYTE *)v15 + 48);
  *(_BYTE *)(a9 + 48) = v48;
  *(_OWORD *)(a9 + 72) = v39;
  *(_OWORD *)(a9 + 88) = v38;
  sub_10041B250((uint64_t)v52);
  sub_100126C98(&v51);
  return sub_10010799C(&v47);
}

uint64_t sub_1003EDB54@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  _OWORD *v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter(v32);
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v40;
    v19 = a10;
    a1 = v41;
    a3 = v42;
    v18 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v15[3];
  a9[2] = v15[2];
  a9[3] = v34;
  *(_OWORD *)((char *)a9 + 57) = *(_OWORD *)((char *)v15 + 57);
  v35 = v15[1];
  *a9 = *v15;
  a9[1] = v35;
  v36 = v45[5];
  a9[9] = v45[4];
  a9[10] = v36;
  a9[11] = v45[6];
  v37 = v45[1];
  a9[5] = v45[0];
  a9[6] = v37;
  v38 = v45[3];
  a9[7] = v45[2];
  a9[8] = v38;
  return sub_10014E284((uint64_t)v15);
}

double sub_1003EDD04@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1003EB070(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100832E40, &qword_100832E48).n128_u64[0];
  return result;
}

uint64_t sub_1003EDD5C()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_1003EDD7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for DynamicTypeSize(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.dynamicTypeSize.setter(v4);
}

_QWORD *sub_1003EDDFC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *result;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = 0;
  State.init(wrappedValue:)(&v18, &v17, &type metadata for Int);
  v10 = v18;
  v11 = v19;
  LOBYTE(v17) = 1;
  State.init(wrappedValue:)(&v18, &v17, &type metadata for Bool);
  v12 = v18;
  v13 = v19;
  LOBYTE(v17) = 0;
  result = State.init(wrappedValue:)(&v18, &v17, &type metadata for Bool);
  v15 = v18;
  v16 = v19;
  *(_QWORD *)a5 = v10;
  *(_QWORD *)(a5 + 8) = v11;
  *(_BYTE *)(a5 + 16) = v12;
  *(_QWORD *)(a5 + 24) = v13;
  *(_BYTE *)(a5 + 32) = v15;
  *(_QWORD *)(a5 + 40) = v16;
  *(_QWORD *)(a5 + 48) = a1;
  *(_BYTE *)(a5 + 56) = a2;
  *(_QWORD *)(a5 + 64) = a3;
  *(_QWORD *)(a5 + 72) = a4;
  return result;
}

void sub_1003EDECC(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10063BB48);
  v6 = v3;
  v5 = sub_1000083D8((unint64_t *)&qword_100820FC0, type metadata accessor for TrainingLoadOnboardingStateHandler, (uint64_t)&unk_1006333E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 16);
}

double sub_1003EDF58(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10063BB48);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_1000083D8((unint64_t *)&qword_100820FC0, type metadata accessor for TrainingLoadOnboardingStateHandler, (uint64_t)&unk_1006333E0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_100118EE0, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1003EE000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5[11] = a4;
  v5[12] = a5;
  v6 = sub_100047110(&qword_100822168);
  v5[13] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[14] = v7;
  v5[15] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StandardArtworkDescriptor(0);
  v5[16] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[17] = v9;
  v5[18] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkDescriptor(0);
  v5[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Artwork(0);
  v5[20] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[21] = v12;
  v5[22] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CatalogLockup(0);
  v5[23] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[24] = v14;
  v5[25] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003EE0FC, 0, 0);
}

uint64_t sub_1003EE0FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t View;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  SEL v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 208) = v2;
  if (!v2)
    goto LABEL_5;
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 96);
  View = type metadata accessor for FitnessPlusUpNextView(0);
  *(_QWORD *)(v0 + 216) = View;
  v6 = *(int *)(View + 20);
  *(_DWORD *)(v0 + 424) = v6;
  v7 = (_QWORD *)(v4 + v6);
  LODWORD(v6) = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 428) = v6;
  *(_QWORD *)(v0 + 224) = *(_QWORD *)(v3 + 72);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16);
  *(_QWORD *)(v0 + 232) = v8;
  *(_QWORD *)(v0 + 240) = 0;
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 184);
  v11 = v1 + ((v6 + 32) & ~(unint64_t)v6);
  v12 = swift_bridgeObjectRetain(v1);
  v13 = v8(v9, v11, v10, v12);
  v14 = CatalogLockup.identifier.getter(v13);
  v16 = v15;
  v17 = v7[1];
  *(_QWORD *)(v0 + 16) = *v7;
  *(_QWORD *)(v0 + 24) = v17;
  v18 = sub_100047110(&qword_1008328C8);
  *(_QWORD *)(v0 + 248) = v18;
  State.wrappedValue.getter((_QWORD *)(v0 + 64), v18);
  v26 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 64);
  if (*(_QWORD *)v26->cellPadding)
  {
    sub_100438F74(v14, (uint64_t)v16);
    if ((v19 & 1) != 0)
    {
      swift_bridgeObjectRelease(v26, v19, v20, v21, v22, v23, v24, v25);
      swift_bridgeObjectRelease(v16, v27, v28, v29, v30, v31, v32, v33);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
      swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 88), v34, v35, v36, v37, v38, v39, v40);
LABEL_5:
      v41 = *(_QWORD *)(v0 + 176);
      v43 = *(_QWORD *)(v0 + 144);
      v42 = *(_QWORD *)(v0 + 152);
      v44 = *(_QWORD *)(v0 + 120);
      swift_task_dealloc(*(_QWORD *)(v0 + 200));
      swift_task_dealloc(v41);
      swift_task_dealloc(v42);
      swift_task_dealloc(v43);
      swift_task_dealloc(v44);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  swift_bridgeObjectRelease(v26, v19, v20, v21, v22, v23, v24, v25);
  swift_bridgeObjectRelease(v16, v46, v47, v48, v49, v50, v51, v52);
  *(_QWORD *)(v0 + 256) = objc_opt_self(UIScreen);
  v53 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 264) = v53;
  *(_QWORD *)(v0 + 272) = static MainActor.shared.getter(v53);
  v54 = dispatch thunk of Actor.unownedExecutor.getter(v53, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003EE2E0, v54, v55);
}

uint64_t sub_1003EE2E0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 280) = objc_msgSend(*(id *)(v0 + 256), "mainScreen", swift_release(*(_QWORD *)(v0 + 272)).n128_f64[0]);
  return swift_task_switch(sub_1003EE33C, 0, 0);
}

uint64_t sub_1003EE33C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 264);
  *(_QWORD *)(v1 + 288) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003EE39C, v3, v4);
}

uint64_t sub_1003EE39C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (void *)v0[35];
  objc_msgSend(v1, "bounds", swift_release(v0[36]).n128_f64[0]);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v0[37] = v3;
  v0[38] = v5;
  v0[39] = v7;
  v0[40] = v9;
  return swift_task_switch(sub_1003EE414, 0, 0);
}

void sub_1003EE414()
{
  uint64_t v0;
  uint64_t v1;
  double Width;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  Width = CGRectGetWidth(*(CGRect *)(v0 + 296));
  *(double *)(v0 + 328) = Width;
  if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (Width < 9.22337204e18)
  {
    v3 = *(_QWORD *)(v0 + 264);
    *(_QWORD *)(v0 + 336) = static MainActor.shared.getter(v1);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
    swift_task_switch(sub_1003EE4C4, v4, v5);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1003EE4C4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 344) = objc_msgSend(*(id *)(v0 + 256), "mainScreen", swift_release(*(_QWORD *)(v0 + 336)).n128_f64[0]);
  return swift_task_switch(sub_1003EE520, 0, 0);
}

uint64_t sub_1003EE520(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 264);
  *(_QWORD *)(v1 + 352) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003EE580, v3, v4);
}

uint64_t sub_1003EE580()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (void *)v0[43];
  objc_msgSend(v1, "bounds", swift_release(v0[44]).n128_f64[0]);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v0[45] = v3;
  v0[46] = v5;
  v0[47] = v7;
  v0[48] = v9;
  return swift_task_switch(sub_1003EE5F8, 0, 0);
}

void sub_1003EE5F8()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1.n128_f64[0] = CGRectGetWidth(*(CGRect *)(v0 + 360)) / 1.77777778;
  if ((~v1.n128_u64[0] & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1.n128_f64[0] <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1.n128_f64[0] < 9.22337204e18)
  {
    v2 = *(_QWORD *)(v0 + 216);
    v3 = *(_QWORD *)(v0 + 176);
    v5 = *(_QWORD *)(v0 + 144);
    v4 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 96);
    v10 = (double)(uint64_t)*(double *)(v0 + 328);
    v1.n128_u64[0] = (uint64_t)v1.n128_f64[0];
    v11 = (double)v1.n128_i64[0];
    v12 = CatalogLockup.artworkDescriptor.getter(v1);
    ArtworkDescriptor.standardArtworkDescriptor.getter(v12);
    v13 = sub_100011F54(v4, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkDescriptor);
    StandardArtworkDescriptor.artwork.getter(v13);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v14 = *(int *)(v2 + 28);
    v15 = (_QWORD *)(v9 + *(int *)(type metadata accessor for FitnessPlusUpNextCard(0) + 44) + v14);
    v16 = v15[3];
    v17 = v15[4];
    sub_100016804(v15, v16);
    dispatch thunk of ArtworkImageLoading.fetchArtwork(_:size:)(v3, v16, v17, v10, v11);
    v18 = swift_task_alloc(64);
    *(_QWORD *)(v0 + 392) = v18;
    *(_QWORD *)(v18 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Views/Fitne"
                            "ssPlusUpNext/FitnessPlusUpNextView.swift";
    *(_QWORD *)(v18 + 24) = 132;
    *(_BYTE *)(v18 + 32) = 2;
    *(_QWORD *)(v18 + 40) = 43;
    *(_QWORD *)(v18 + 48) = v8;
    v20 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1008328D0
                                                                                    + dword_1008328D0);
    v19 = (_QWORD *)swift_task_alloc(unk_1008328D4);
    *(_QWORD *)(v0 + 400) = v19;
    *v19 = v0;
    v19[1] = sub_1003EE7E0;
    v20(0, 0, 0xD000000000000013, 0x800000010069E840, (uint64_t)sub_100406220, v18);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1003EE7E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 400);
  *(_QWORD *)(*(_QWORD *)v2 + 408) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1003EEB78;
  }
  else
  {
    v7 = v4[49];
    v9 = v4[14];
    v8 = v4[15];
    v10 = v4[13];
    v4[52] = a1;
    swift_task_dealloc(v7);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    v6 = sub_1003EE87C;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1003EE87C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  char isUniquelyReferenced_nonNull_native;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  __n128 v35;
  const char *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t (*v43)(_QWORD, unint64_t, _QWORD);
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v2 = *(void **)(v1 + 416);
  v3 = *(_QWORD *)(v1 + 248);
  v87 = *(_QWORD *)(v1 + 192);
  v88 = *(_QWORD *)(v1 + 184);
  v89 = *(_QWORD *)(v1 + 208);
  v82 = *(_QWORD *)(v1 + 168);
  v83 = *(_QWORD *)(v1 + 200);
  v84 = *(_QWORD *)(v1 + 160);
  v85 = *(_QWORD *)(v1 + 176);
  v86 = *(_QWORD *)(v1 + 240) + 1;
  v4 = *(_QWORD *)(v1 + 96) + *(int *)(v1 + 424);
  v5 = CatalogLockup.identifier.getter(a1);
  v7 = v6;
  v8 = v2;
  v9 = Image.init(uiImage:)(v8);
  v11 = *(CHWorkoutDetailHeartRateTableViewCell **)v4;
  v10 = *(_QWORD *)(v4 + 8);
  *(_QWORD *)(v1 + 32) = v11;
  *(_QWORD *)(v1 + 40) = v10;
  swift_retain(v10);
  swift_bridgeObjectRetain(v11);
  State.wrappedValue.getter((_QWORD *)(v1 + 72), v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + 72));
  v90 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 72) = 0x8000000000000000;
  sub_1003FFC60(v9, v5, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  v13 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 72);
  *(_QWORD *)(v1 + 72) = v90;
  swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
  swift_bridgeObjectRelease(v7, v21, v22, v23, v24, v25, v26, v27);
  *(_QWORD *)(v1 + 80) = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 48) = v11;
  *(_QWORD *)(v1 + 56) = v10;
  State.wrappedValue.setter(v1 + 80, v3);

  swift_bridgeObjectRelease(v11, v28, v29, v30, v31, v32, v33, v34);
  v35 = swift_release(v10);
  (*(void (**)(uint64_t, uint64_t, __n128))(v82 + 8))(v85, v84, v35);
  (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v83, v88);
  if (v86 == v89)
    goto LABEL_5;
  v43 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v1 + 232);
  v44 = *(_QWORD *)(v1 + 240) + 1;
  *(_QWORD *)(v1 + 240) = v44;
  v45 = (_QWORD *)(*(_QWORD *)(v1 + 96) + *(int *)(v1 + 424));
  v46 = v43(*(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 88)+ ((*(unsigned __int8 *)(v1 + 428) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 428))+ *(_QWORD *)(v1 + 224) * v44, *(_QWORD *)(v1 + 184));
  v47 = CatalogLockup.identifier.getter(v46);
  v49 = v48;
  v50 = v45[1];
  *(_QWORD *)(v1 + 16) = *v45;
  *(_QWORD *)(v1 + 24) = v50;
  v51 = sub_100047110(&qword_1008328C8);
  *(_QWORD *)(v1 + 248) = v51;
  State.wrappedValue.getter((_QWORD *)(v1 + 64), v51);
  v59 = *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 64);
  if (*(_QWORD *)v59->cellPadding)
  {
    sub_100438F74(v47, (uint64_t)v49);
    if ((v52 & 1) != 0)
    {
      swift_bridgeObjectRelease(v59, v52, v53, v54, v55, v56, v57, v58);
      swift_bridgeObjectRelease(v49, v60, v61, v62, v63, v64, v65, v66);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 192) + 8))(*(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 184));
LABEL_5:
      swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 88), v36, v37, v38, v39, v40, v41, v42);
      v67 = *(_QWORD *)(v1 + 176);
      v69 = *(_QWORD *)(v1 + 144);
      v68 = *(_QWORD *)(v1 + 152);
      v70 = *(_QWORD *)(v1 + 120);
      swift_task_dealloc(*(_QWORD *)(v1 + 200));
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      return (*(uint64_t (**)(void))(v1 + 8))();
    }
  }
  swift_bridgeObjectRelease(v59, v52, v53, v54, v55, v56, v57, v58);
  swift_bridgeObjectRelease(v49, v72, v73, v74, v75, v76, v77, v78);
  *(_QWORD *)(v1 + 256) = objc_opt_self(UIScreen);
  v79 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 264) = v79;
  *(_QWORD *)(v1 + 272) = static MainActor.shared.getter(v79);
  v80 = dispatch thunk of Actor.unownedExecutor.getter(v79, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003EE2E0, v80, v81);
}

uint64_t sub_1003EEB78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 104);
  swift_errorRelease(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  v8 = *(_QWORD *)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003EEC48@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  _QWORD *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *(*v47)(uint64_t *__return_ptr);
  uint64_t *v48;
  uint64_t *v49;
  _BYTE *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _BYTE *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t result;
  _BYTE v68[12];
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  _QWORD *(*v77)(uint64_t *__return_ptr);
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  void (*v81)(void);
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  _OWORD v88[9];
  _BYTE v89[151];
  char v90;

  v75 = a5;
  v80 = a4;
  v81 = a3;
  v77 = a1;
  v78 = a2;
  v7 = sub_100047110(&qword_1008329E8);
  __chkstk_darwin(v7);
  v76 = &v68[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v79 = &v68[-v10];
  v86 = sub_100047110(&qword_1008329B8);
  __chkstk_darwin(v86);
  v82 = (uint64_t *)&v68[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v83 = sub_100047110(&qword_1008329F0);
  __chkstk_darwin(v83);
  v85 = &v68[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_100047110(&qword_1008329A8);
  __chkstk_darwin(v13);
  v15 = &v68[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v84 = sub_100047110(&qword_100832988);
  __chkstk_darwin(v84);
  v17 = &v68[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  v20 = &v68[-v19];
  v21 = type metadata accessor for DynamicTypeSize(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = &v68[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1003F6E80(&qword_1008325D0, v25, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)v24);
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t))(v22 + 88))(v24, v21);
  v87 = a6;
  if ((_DWORD)v26 == enum case for DynamicTypeSize.xSmall(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.small(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.medium(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.large(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.xLarge(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.xxLarge(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.xxxLarge(_:))
  {
    v82 = (uint64_t *)static HorizontalAlignment.center.getter(v26, v27, v28, v29, v30);
    v54 = sub_1003F0228(v77, v75, (uint64_t)v88);
    *(_OWORD *)&v89[87] = v88[5];
    *(_OWORD *)&v89[103] = v88[6];
    *(_OWORD *)&v89[119] = v88[7];
    *(_OWORD *)&v89[135] = v88[8];
    *(_OWORD *)&v89[23] = v88[1];
    *(_OWORD *)&v89[39] = v88[2];
    *(_OWORD *)&v89[55] = v88[3];
    *(_OWORD *)&v89[71] = v88[4];
    v90 = 0;
    *(_OWORD *)&v89[7] = v88[0];
    v55 = static Alignment.bottom.getter(v54);
    v57 = v56;
    v81();
    v58 = (uint64_t *)&v15[*(int *)(v13 + 36)];
    *v58 = v55;
    v58[1] = v57;
    v59 = v84;
    sub_100021CC0((uint64_t)v15, (uint64_t)&v17[*(int *)(v84 + 36)], &qword_1008329A8);
    v60 = *(_OWORD *)&v89[112];
    *(_OWORD *)(v17 + 113) = *(_OWORD *)&v89[96];
    *(_OWORD *)(v17 + 129) = v60;
    *(_OWORD *)(v17 + 145) = *(_OWORD *)&v89[128];
    v61 = *(_OWORD *)&v89[48];
    *(_OWORD *)(v17 + 49) = *(_OWORD *)&v89[32];
    *(_OWORD *)(v17 + 65) = v61;
    v62 = *(_OWORD *)&v89[80];
    *(_OWORD *)(v17 + 81) = *(_OWORD *)&v89[64];
    *(_OWORD *)(v17 + 97) = v62;
    v63 = *(_OWORD *)&v89[16];
    *(_OWORD *)(v17 + 17) = *(_OWORD *)v89;
    *(_QWORD *)v17 = v82;
    *((_QWORD *)v17 + 1) = 0;
    v17[16] = 0;
    *((_QWORD *)v17 + 20) = *(_QWORD *)&v89[143];
    *(_OWORD *)(v17 + 33) = v63;
    sub_10001BE90((uint64_t)v15, &qword_1008329A8);
    v48 = &qword_100832988;
    sub_100045AD4((uint64_t)v17, (uint64_t)v20, &qword_100832988);
    v64 = v85;
    sub_100021CC0((uint64_t)v20, (uint64_t)v85, &qword_100832988);
    swift_storeEnumTagMultiPayload(v64, v83, 0);
    v65 = sub_100419730();
    v66 = sub_100028384(&qword_1008329B0, &qword_1008329B8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v64, v59, v86, v65, v66);
    v53 = (uint64_t)v20;
    return sub_10001BE90(v53, v48);
  }
  if ((_DWORD)v26 == enum case for DynamicTypeSize.accessibility1(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.accessibility2(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.accessibility3(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.accessibility4(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.accessibility5(_:))
  {
    v31 = static HorizontalAlignment.leading.getter(v26);
    v32 = v82;
    *v82 = v31;
    v32[1] = 0;
    *((_BYTE *)v32 + 16) = 0;
    v33 = (char *)v32 + *(int *)(sub_100047110(&qword_1008329F8) + 44);
    v34 = v77((uint64_t *)v89);
    v35 = *(_OWORD *)v89;
    v36 = *(_QWORD *)&v89[24];
    v37 = *(_QWORD *)&v89[40];
    v70 = *(_QWORD *)&v89[32];
    v71 = *(_QWORD *)&v89[16];
    v38 = *(_QWORD *)&v89[56];
    v77 = *(_QWORD *(**)(uint64_t *__return_ptr))&v89[24];
    v78 = *(_QWORD *)&v89[48];
    v39 = v89[64];
    v74 = *(_QWORD *)&v89[72];
    v75 = *(_QWORD *)v89;
    v72 = v89[81];
    v73 = v89[80];
    v40 = v79;
    ((void (*)(_QWORD *))v81)(v34);
    v41 = v76;
    sub_100021CC0((uint64_t)v40, (uint64_t)v76, &qword_1008329E8);
    *(_OWORD *)v33 = v35;
    v42 = v70;
    v43 = v71;
    *((_QWORD *)v33 + 2) = v71;
    *((_QWORD *)v33 + 3) = v36;
    *((_QWORD *)v33 + 4) = v42;
    *((_QWORD *)v33 + 5) = v37;
    v44 = v78;
    *((_QWORD *)v33 + 6) = v78;
    *((_QWORD *)v33 + 7) = v38;
    v69 = v39;
    v33[64] = v39;
    *((_QWORD *)v33 + 9) = v74;
    v33[80] = v73;
    v33[81] = v72;
    v45 = sub_100047110(&qword_100832A00);
    sub_100021CC0((uint64_t)v41, (uint64_t)&v33[*(int *)(v45 + 48)], &qword_1008329E8);
    v46 = v75;
    v47 = v77;
    sub_1004199E0(v75, *((uint64_t *)&v35 + 1), v43, (uint64_t)v77, v42, v37, v44, v38, v39);
    sub_10001BE90((uint64_t)v79, &qword_1008329E8);
    sub_10001BE90((uint64_t)v41, &qword_1008329E8);
    sub_100419A10(v46, *((uint64_t *)&v35 + 1), v43, (uint64_t)v47, v42, v37, v78, v38, v69);
    v48 = &qword_1008329B8;
    v49 = v82;
    v50 = v85;
    sub_100021CC0((uint64_t)v82, (uint64_t)v85, &qword_1008329B8);
    swift_storeEnumTagMultiPayload(v50, v83, 1);
    v51 = sub_100419730();
    v52 = sub_100028384(&qword_1008329B0, &qword_1008329B8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v50, v84, v86, v51, v52);
    v53 = (uint64_t)v49;
    return sub_10001BE90(v53, v48);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v21, v21);
  __break(1u);
  return result;
}

uint64_t sub_1003EF318@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  _QWORD *(*v56)(uint64_t *__return_ptr);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *(*v72)(uint64_t *__return_ptr);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(void);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  _QWORD *(*v85)(uint64_t *__return_ptr);
  unsigned __int8 v86;
  uint64_t v87;
  unsigned __int8 v88;
  uint64_t v89;
  uint64_t v90;

  v69 = a5;
  v75 = a4;
  v76 = a3;
  v72 = a1;
  v73 = a2;
  v7 = sub_100047110(&qword_100832868);
  __chkstk_darwin(v7);
  v71 = (uint64_t)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v63 - v10;
  v12 = sub_100047110(&qword_1008327D0);
  __chkstk_darwin(v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100047110(&qword_100832928);
  __chkstk_darwin(v77);
  v79 = (uint64_t)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100047110(&qword_1008327C0);
  __chkstk_darwin(v68);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100047110(&qword_1008327A0);
  __chkstk_darwin(v78);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v70 = (uint64_t)&v63 - v21;
  v22 = type metadata accessor for DynamicTypeSize(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003F6E80(&qword_1008325D0, v26, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)v25);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v25, v22);
  v74 = v12;
  if ((_DWORD)v27 == enum case for DynamicTypeSize.xSmall(_:)
    || (_DWORD)v27 == enum case for DynamicTypeSize.small(_:)
    || (_DWORD)v27 == enum case for DynamicTypeSize.medium(_:)
    || (_DWORD)v27 == enum case for DynamicTypeSize.large(_:)
    || (_DWORD)v27 == enum case for DynamicTypeSize.xLarge(_:)
    || (_DWORD)v27 == enum case for DynamicTypeSize.xxLarge(_:)
    || (_DWORD)v27 == enum case for DynamicTypeSize.xxxLarge(_:))
  {
    v71 = static HorizontalAlignment.center.getter(v27, v28, v29, v30, v31);
    v45 = sub_1003F038C(v72, v69, (uint64_t)&v80);
    v46 = v80;
    v47 = v81;
    v48 = v82;
    v49 = v83;
    v73 = a6;
    v50 = v84;
    v72 = v85;
    LODWORD(v69) = v86;
    v67 = v87;
    v66 = v88;
    v65 = v89;
    v64 = v90;
    v51 = static Alignment.bottom.getter(v45);
    v53 = v52;
    v76();
    v54 = (uint64_t *)&v17[*(int *)(v68 + 36)];
    *v54 = v51;
    v54[1] = v53;
    v55 = v78;
    sub_100021CC0((uint64_t)v17, (uint64_t)&v19[*(int *)(v78 + 36)], &qword_1008327C0);
    *(_QWORD *)v19 = v71;
    *((_QWORD *)v19 + 1) = 0;
    v19[16] = 0;
    *((_QWORD *)v19 + 3) = v46;
    *((_QWORD *)v19 + 4) = v47;
    v19[40] = v48;
    v19[41] = v49;
    v56 = v72;
    *((_QWORD *)v19 + 6) = v50;
    *((_QWORD *)v19 + 7) = v56;
    v19[64] = v69;
    *((_QWORD *)v19 + 9) = v67;
    v19[80] = v66;
    v57 = v64;
    *((_QWORD *)v19 + 11) = v65;
    *((_QWORD *)v19 + 12) = v57;
    sub_10001BE90((uint64_t)v17, &qword_1008327C0);
    v40 = &qword_1008327A0;
    v58 = v70;
    sub_100045AD4((uint64_t)v19, v70, &qword_1008327A0);
    v59 = v79;
    sub_100021CC0(v58, v79, &qword_1008327A0);
    swift_storeEnumTagMultiPayload(v59, v77, 0);
    v60 = sub_1003F6D78(&qword_100832798, &qword_1008327A0, &qword_1008327A8, &qword_1008327B0);
    v61 = sub_100028384(&qword_1008327C8, &qword_1008327D0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v59, v55, v74, v60, v61);
    v44 = v58;
    return sub_10001BE90(v44, v40);
  }
  if ((_DWORD)v27 == enum case for DynamicTypeSize.accessibility1(_:)
    || (_DWORD)v27 == enum case for DynamicTypeSize.accessibility2(_:)
    || (_DWORD)v27 == enum case for DynamicTypeSize.accessibility3(_:)
    || (_DWORD)v27 == enum case for DynamicTypeSize.accessibility4(_:)
    || (_DWORD)v27 == enum case for DynamicTypeSize.accessibility5(_:))
  {
    *(_QWORD *)v14 = static HorizontalAlignment.leading.getter(v27);
    *((_QWORD *)v14 + 1) = 0;
    v14[16] = 0;
    v32 = &v14[*(int *)(sub_100047110(&qword_100832930) + 44)];
    v33 = v72(&v80);
    v34 = v80;
    v35 = v81;
    v36 = v82;
    v37 = v83;
    ((void (*)(_QWORD *))v76)(v33);
    v38 = v71;
    sub_100021CC0((uint64_t)v11, v71, &qword_100832868);
    *(_QWORD *)v32 = v34;
    *((_QWORD *)v32 + 1) = v35;
    v32[16] = v36;
    v32[17] = v37;
    v39 = sub_100047110(&qword_100832938);
    sub_100021CC0(v38, (uint64_t)&v32[*(int *)(v39 + 48)], &qword_100832868);
    swift_retain(v34);
    sub_10001BE90((uint64_t)v11, &qword_100832868);
    sub_10001BE90(v38, &qword_100832868);
    swift_release(v34);
    v40 = &qword_1008327D0;
    v41 = v79;
    sub_100021CC0((uint64_t)v14, v79, &qword_1008327D0);
    swift_storeEnumTagMultiPayload(v41, v77, 1);
    v42 = sub_1003F6D78(&qword_100832798, &qword_1008327A0, &qword_1008327A8, &qword_1008327B0);
    v43 = sub_100028384(&qword_1008327C8, &qword_1008327D0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v41, v78, v74, v42, v43);
    v44 = (uint64_t)v14;
    return sub_10001BE90(v44, v40);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v22, v22);
  __break(1u);
  return result;
}

uint64_t sub_1003EF95C@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *(*v64)(uint64_t *__return_ptr);
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t *v72;
  _QWORD *(*v73)(uint64_t *__return_ptr);
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t result;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  _QWORD *(*v93)(uint64_t *__return_ptr);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _OWORD v101[8];
  uint64_t v102;
  _BYTE v103[143];
  char v104;

  *(_QWORD *)&v88 = a3;
  v93 = a1;
  v94 = a2;
  v100 = a4;
  v95 = sub_100047110(&qword_100832868);
  __chkstk_darwin(v95);
  v91 = (uint64_t)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v90 = (uint64_t)&v85 - v6;
  v99 = sub_100047110(&qword_100832860);
  __chkstk_darwin(v99);
  v92 = (uint64_t *)((char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v97 = sub_100047110(&qword_100832870);
  __chkstk_darwin(v97);
  v98 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100832878);
  __chkstk_darwin(v9);
  v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100832880);
  __chkstk_darwin(v12);
  v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v87 = sub_100047110(&qword_1008327C0);
  __chkstk_darwin(v87);
  v16 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100047110(&qword_100832840);
  __chkstk_darwin(v96);
  v18 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v89 = (uint64_t)&v85 - v20;
  v21 = type metadata accessor for DynamicTypeSize(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003F6E80(&qword_1008325D0, v25, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)v24);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v24, v21);
  if ((_DWORD)v26 == enum case for DynamicTypeSize.xSmall(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.small(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.medium(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.large(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.xLarge(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.xxLarge(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.xxxLarge(_:))
  {
    v92 = (uint64_t *)static HorizontalAlignment.center.getter(v26, v27, v28, v29, v30);
    v62 = sub_1003F0448(v93, v88, (uint64_t)v101);
    *(_OWORD *)&v103[87] = v101[5];
    *(_OWORD *)&v103[103] = v101[6];
    *(_OWORD *)&v103[119] = v101[7];
    *(_OWORD *)&v103[23] = v101[1];
    *(_OWORD *)&v103[39] = v101[2];
    *(_OWORD *)&v103[55] = v101[3];
    *(_OWORD *)&v103[71] = v101[4];
    v104 = 0;
    *(_QWORD *)&v103[135] = v102;
    *(_OWORD *)&v103[7] = v101[0];
    LODWORD(v94) = 0;
    v63 = static Alignment.bottom.getter(v62);
    v93 = v64;
    *(_QWORD *)v11 = static HorizontalAlignment.leading.getter(v63);
    *((_QWORD *)v11 + 1) = 0;
    v11[16] = 0;
    v65 = sub_100047110(&qword_100832890);
    sub_1003F3154((uint64_t)&v11[*(int *)(v65 + 44)]);
    v67 = static Alignment.leading.getter(v66);
    sub_1003EB070(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1, v67, v68, &qword_100832878, &qword_100832880);
    v69 = sub_10001BE90((uint64_t)v11, &qword_100832878);
    v70 = static Edge.Set.all.getter(v69);
    sub_100021CC0((uint64_t)v14, (uint64_t)v16, &qword_100832880);
    v71 = &v16[*(int *)(v95 + 36)];
    *v71 = v70;
    *(_OWORD *)(v71 + 8) = xmmword_10063B9C0;
    *(_OWORD *)(v71 + 24) = xmmword_10063B9D0;
    v71[40] = 0;
    sub_10001BE90((uint64_t)v14, &qword_100832880);
    v72 = (uint64_t *)&v16[*(int *)(v87 + 36)];
    v73 = v93;
    *v72 = v63;
    v72[1] = (uint64_t)v73;
    v74 = v96;
    sub_100021CC0((uint64_t)v16, (uint64_t)&v18[*(int *)(v96 + 36)], &qword_1008327C0);
    v75 = *(_OWORD *)&v103[64];
    *(_OWORD *)(v18 + 97) = *(_OWORD *)&v103[80];
    v76 = *(_OWORD *)&v103[112];
    *(_OWORD *)(v18 + 113) = *(_OWORD *)&v103[96];
    *(_OWORD *)(v18 + 129) = v76;
    *((_OWORD *)v18 + 9) = *(_OWORD *)&v103[127];
    v77 = *(_OWORD *)v103;
    *(_OWORD *)(v18 + 33) = *(_OWORD *)&v103[16];
    v78 = *(_OWORD *)&v103[48];
    *(_OWORD *)(v18 + 49) = *(_OWORD *)&v103[32];
    *(_OWORD *)(v18 + 65) = v78;
    *(_OWORD *)(v18 + 81) = v75;
    *(_QWORD *)v18 = v92;
    *((_QWORD *)v18 + 1) = 0;
    v18[16] = v94;
    *(_OWORD *)(v18 + 17) = v77;
    sub_10001BE90((uint64_t)v16, &qword_1008327C0);
    v57 = &qword_100832840;
    v79 = (uint64_t)v18;
    v80 = v89;
    sub_100045AD4(v79, v89, &qword_100832840);
    v81 = v98;
    sub_100021CC0(v80, v98, &qword_100832840);
    swift_storeEnumTagMultiPayload(v81, v97, 0);
    v82 = sub_1003F6D78(&qword_100832838, &qword_100832840, &qword_100832848, &qword_100832850);
    v83 = sub_100028384(&qword_100832858, &qword_100832860, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v81, v74, v99, v82, v83);
    v61 = v80;
    return sub_10001BE90(v61, v57);
  }
  if ((_DWORD)v26 == enum case for DynamicTypeSize.accessibility1(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.accessibility2(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.accessibility3(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.accessibility4(_:)
    || (_DWORD)v26 == enum case for DynamicTypeSize.accessibility5(_:))
  {
    v31 = static HorizontalAlignment.leading.getter(v26);
    v32 = (uint64_t)v92;
    *v92 = v31;
    *(_QWORD *)(v32 + 8) = 0;
    *(_BYTE *)(v32 + 16) = 0;
    v33 = v32 + *(int *)(sub_100047110(&qword_100832888) + 44);
    v34 = v93((uint64_t *)v103);
    v35 = *(_QWORD *)v103;
    v94 = *(_QWORD *)&v103[8];
    LODWORD(v93) = v103[16];
    LODWORD(v89) = v103[17];
    v87 = *(_OWORD *)&v103[48];
    v88 = *(_OWORD *)&v103[32];
    v36 = *(CHWorkoutDetailHeartRateTableViewCell **)&v103[24];
    v85 = *(_QWORD *)&v103[72];
    v86 = *(_QWORD *)&v103[64];
    *(_QWORD *)v11 = static HorizontalAlignment.leading.getter(v34);
    *((_QWORD *)v11 + 1) = 0;
    v11[16] = 0;
    v37 = sub_100047110(&qword_100832890);
    sub_1003F3154((uint64_t)&v11[*(int *)(v37 + 44)]);
    v39 = static Alignment.leading.getter(v38);
    sub_1003EB070(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1, v39, v40, &qword_100832878, &qword_100832880);
    v41 = sub_10001BE90((uint64_t)v11, &qword_100832878);
    v42 = static Edge.Set.all.getter(v41);
    v43 = v90;
    sub_100021CC0((uint64_t)v14, v90, &qword_100832880);
    v44 = v43 + *(int *)(v95 + 36);
    *(_BYTE *)v44 = v42;
    *(_OWORD *)(v44 + 8) = xmmword_10063B9C0;
    *(_OWORD *)(v44 + 24) = xmmword_10063B9D0;
    *(_BYTE *)(v44 + 40) = 0;
    sub_10001BE90((uint64_t)v14, &qword_100832880);
    v45 = v91;
    sub_100021CC0(v43, v91, &qword_100832868);
    v46 = v94;
    *(_QWORD *)v33 = v35;
    *(_QWORD *)(v33 + 8) = v46;
    *(_BYTE *)(v33 + 16) = (_BYTE)v93;
    *(_BYTE *)(v33 + 17) = v89;
    *(_QWORD *)(v33 + 24) = v36;
    v47 = v87;
    *(_OWORD *)(v33 + 32) = v88;
    *(_OWORD *)(v33 + 48) = v47;
    v48 = v85;
    *(_QWORD *)(v33 + 64) = v86;
    *(_QWORD *)(v33 + 72) = v48;
    v49 = sub_100047110(&qword_100832898);
    sub_100021CC0(v45, v33 + *(int *)(v49 + 48), &qword_100832868);
    swift_bridgeObjectRetain(v36);
    swift_retain(v35);
    sub_10001BE90(v43, &qword_100832868);
    sub_10001BE90(v45, &qword_100832868);
    swift_bridgeObjectRelease(v36, v50, v51, v52, v53, v54, v55, v56);
    swift_release(v35);
    v57 = &qword_100832860;
    v58 = v98;
    sub_100021CC0(v32, v98, &qword_100832860);
    swift_storeEnumTagMultiPayload(v58, v97, 1);
    v59 = sub_1003F6D78(&qword_100832838, &qword_100832840, &qword_100832848, &qword_100832850);
    v60 = sub_100028384(&qword_100832858, &qword_100832860, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v58, v96, v99, v59, v60);
    v61 = v32;
    return sub_10001BE90(v61, v57);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v21, v21);
  __break(1u);
  return result;
}

uint64_t sub_1003F0228@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;

  v4 = a1(&v24);
  v5 = v25;
  v20 = v24;
  v6 = v26;
  v7 = v27;
  v8 = v28;
  v9 = v29;
  v10 = v30;
  v11 = v31;
  v22 = v32;
  v12 = v33;
  v21 = v34;
  v13 = static Alignment.center.getter(v4);
  _FrameLayout.init(width:height:alignment:)(&v24, 0, 1, 0x4045000000000000, 0, v13, v14);
  v15 = v24;
  v16 = v25;
  v17 = v26;
  v18 = v27;
  v38 = v11;
  v37 = v12;
  v36 = v25;
  v35 = v27;
  *(_QWORD *)a3 = v20;
  *(_QWORD *)(a3 + 8) = v5;
  *(_QWORD *)(a3 + 16) = v6;
  *(_QWORD *)(a3 + 24) = v7;
  *(_OWORD *)(a3 + 32) = v8;
  *(_QWORD *)(a3 + 48) = v9;
  *(_QWORD *)(a3 + 56) = v10;
  *(_BYTE *)(a3 + 64) = v11;
  *(_QWORD *)(a3 + 72) = v22;
  *(_BYTE *)(a3 + 80) = v12;
  *(_BYTE *)(a3 + 81) = v21;
  *(_QWORD *)(a3 + 88) = a2;
  *(_QWORD *)(a3 + 96) = v15;
  *(_BYTE *)(a3 + 104) = v16;
  *(_QWORD *)(a3 + 112) = v17;
  *(_BYTE *)(a3 + 120) = v18;
  *(_OWORD *)(a3 + 128) = v28;
  sub_1004199E0(v20, v5, v6, v7, v8, *((uint64_t *)&v8 + 1), v9, v10, v11);
  swift_retain(a2);
  return sub_100419A10(v20, v5, v6, v7, v8, *((uint64_t *)&v8 + 1), v9, v10, v11);
}

uint64_t sub_1003F038C@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;

  v5 = a1(&v17);
  v6 = v17;
  v7 = v18;
  v8 = v19;
  v9 = BYTE1(v19);
  v10 = static Alignment.center.getter(v5);
  _FrameLayout.init(width:height:alignment:)(&v17, 0, 1, 0x4045000000000000, 0, v10, v11);
  v12 = v17;
  v13 = v18;
  v14 = v19;
  v15 = v20;
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v7;
  *(_BYTE *)(a3 + 16) = v8;
  *(_BYTE *)(a3 + 17) = v9;
  *(_QWORD *)(a3 + 24) = a2;
  *(_QWORD *)(a3 + 32) = v12;
  *(_BYTE *)(a3 + 40) = v13;
  *(_QWORD *)(a3 + 48) = v14;
  *(_BYTE *)(a3 + 56) = v15;
  *(_OWORD *)(a3 + 64) = v21;
  swift_retain(v6);
  swift_retain(a2);
  return swift_release(v6);
}

uint64_t sub_1003F0448@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;

  v5 = a1(&v22);
  v6 = v22;
  v7 = v23;
  v8 = v24;
  v9 = BYTE1(v24);
  v10 = v25;
  v20 = v27;
  v21 = v26;
  v11 = v28;
  v12 = v29;
  v13 = static Alignment.center.getter(v5);
  _FrameLayout.init(width:height:alignment:)(&v22, 0, 1, 0x4045000000000000, 0, v13, v14);
  v15 = v22;
  v16 = v23;
  v17 = v24;
  v18 = v25;
  v32 = v8;
  v31 = v23;
  v30 = v25;
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v7;
  *(_BYTE *)(a3 + 16) = v8;
  *(_BYTE *)(a3 + 17) = v9;
  *(_QWORD *)(a3 + 24) = v10;
  *(_OWORD *)(a3 + 32) = v21;
  *(_OWORD *)(a3 + 48) = v20;
  *(_QWORD *)(a3 + 64) = v11;
  *(_QWORD *)(a3 + 72) = v12;
  *(_QWORD *)(a3 + 80) = a2;
  *(_QWORD *)(a3 + 88) = v15;
  *(_BYTE *)(a3 + 96) = v16;
  *(_QWORD *)(a3 + 104) = v17;
  *(_BYTE *)(a3 + 112) = v18;
  *(_OWORD *)(a3 + 120) = v26;
  swift_bridgeObjectRetain(v10);
  swift_retain(a2);
  return swift_bridgeObjectRelease(v10);
}

double sub_1003F0548@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  unint64_t v33;
  uint64_t v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  SEL v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  Swift::String v80;
  UIColor v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  double result;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  char v90;
  _OWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _OWORD *v98;
  uint64_t v99;
  _BYTE v100[40];
  __int128 v101;
  char v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  char v107;

  v3 = v2;
  v98 = a2;
  v96 = type metadata accessor for Artwork(0);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v6 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for StandardArtworkDescriptor(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v8 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ArtworkDescriptor(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Image.ResizingMode(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = a1;
  v17 = CatalogLockup.identifier.getter(v16);
  v19 = v18;
  v20 = *(int *)(type metadata accessor for FitnessPlusUpNextView(0) + 20);
  v92 = v3;
  v21 = (uint64_t *)(v3 + v20);
  v23 = *v21;
  v22 = v21[1];
  *(_QWORD *)&v103 = v23;
  *((_QWORD *)&v103 + 1) = v22;
  v24 = sub_100047110(&qword_1008328C8);
  State.wrappedValue.getter(&v99, v24);
  v32 = (CHWorkoutDetailHeartRateTableViewCell *)v99;
  if (*(_QWORD *)(v99 + 16) && (v33 = sub_100438F74(v17, (uint64_t)v19), (v25 & 1) != 0))
  {
    v34 = *(_QWORD *)(*(_QWORD *)v32[1].cellInset + 8 * v33);
    swift_retain(v34);
    swift_bridgeObjectRelease(v19, v35, v36, v37, v38, v39, v40, v41);
    swift_bridgeObjectRelease(v32, v42, v43, v44, v45, v46, v47, v48);
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for Image.ResizingMode.stretch(_:), v12);
    v49 = Image.resizable(capInsets:resizingMode:)(v15, v34, 0.0, 0.0, 0.0, 0.0);
    v50 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v51 = static Alignment.bottom.getter(v50);
    v53 = v52;
    sub_1003F0974(v97, (uint64_t *)&v103);
    v99 = v49;
    *(_OWORD *)v100 = v103;
    *(_OWORD *)&v100[16] = v104;
    *(_QWORD *)&v100[32] = v105;
    *(_QWORD *)&v101 = v51;
    *((_QWORD *)&v101 + 1) = v53;
    v102 = 0;
    v54 = (CHWorkoutDetailHeartRateTableViewCell *)v103;
    swift_bridgeObjectRetain(v103);
    swift_retain(v49);
    v55 = sub_100047110(&qword_100832A30);
    v56 = sub_100047110(&qword_10082C558);
    v57 = sub_100419A48();
    v58 = sub_100028384(&qword_10082C568, &qword_10082C558, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    _ConditionalContent<>.init(storage:)(&v99, v55, v56, v57, v58);
    swift_bridgeObjectRelease(v54, v59, v60, v61, v62, v63, v64, v65);
    swift_release(v49);
    swift_release(v34);
  }
  else
  {
    swift_bridgeObjectRelease(v19, v25, v26, v27, v28, v29, v30, v31);
    swift_bridgeObjectRelease(v32, v66, v67, v68, v69, v70, v71, v72);
    sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
    v74 = CatalogLockup.artworkDescriptor.getter(v73);
    ArtworkDescriptor.standardArtworkDescriptor.getter(v74);
    v75 = sub_100011F54((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkDescriptor);
    StandardArtworkDescriptor.artwork.getter(v75);
    v76 = (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v8, v94);
    v77 = Artwork.backgroundColor.getter(v76);
    v79 = v78;
    (*(void (**)(char *, uint64_t))(v95 + 8))(v6, v96);
    v80._countAndFlagsBits = v77;
    v80._object = v79;
    v81.super.isa = UIColor.init(hex:)(v80).super.isa;
    v99 = Color.init(_:)(v81.super.isa);
    *(_QWORD *)v100 = 256;
    memset(&v100[8], 0, 32);
    v101 = 0u;
    v102 = 1;
    v82 = sub_100047110(&qword_100832A30);
    v83 = sub_100047110(&qword_10082C558);
    v84 = sub_100419A48();
    v85 = sub_100028384(&qword_10082C568, &qword_10082C558, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    _ConditionalContent<>.init(storage:)(&v99, v82, v83, v84, v85);
  }
  result = *(double *)&v103;
  v87 = v104;
  v88 = v105;
  v89 = v106;
  v90 = v107;
  v91 = v98;
  *v98 = v103;
  v91[1] = v87;
  v91[2] = v88;
  v91[3] = v89;
  *((_BYTE *)v91 + 64) = v90;
  return result;
}

_QWORD *sub_1003F0974@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD);
  char v19;
  void (*v20)(char *, uint64_t);
  _QWORD *result;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  Swift::String v33;
  UIColor v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  Swift::String v44;
  UIColor v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  double v51;
  double v52;
  double v53;
  uint64_t v54;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;

  v67 = a1;
  v69 = a2;
  v68 = type metadata accessor for Artwork(0);
  v66 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v3 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StandardArtworkDescriptor(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkDescriptor(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DynamicTypeSize(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v63 - v16;
  sub_1003F6E80(&qword_1008325D0, v18, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)&v63 - v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DynamicTypeSize.accessibility1(_:), v11);
  v19 = static DynamicTypeSize.< infix(_:_:)(v17, v14);
  v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v14, v11);
  result = (_QWORD *)((uint64_t (*)(char *, uint64_t))v20)(v17, v11);
  if ((v19 & 1) != 0)
  {
    v22 = sub_100047110((uint64_t *)&unk_10082BDC0);
    v65 = swift_allocObject(v22, 48, 7);
    *(_OWORD *)(v65 + 16) = xmmword_100620BC0;
    v63 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
    v64 = v4;
    v24 = CatalogLockup.artworkDescriptor.getter(v23);
    ArtworkDescriptor.standardArtworkDescriptor.getter(v24);
    v25 = sub_100011F54((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkDescriptor);
    StandardArtworkDescriptor.artwork.getter(v25);
    v26 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    v27 = v26(v7, v4);
    v28 = Artwork.backgroundColor.getter(v27);
    v30 = v29;
    v31 = *(void (**)(char *, uint64_t))(v66 + 8);
    v32 = v68;
    v31(v3, v68);
    v33._countAndFlagsBits = v28;
    v33._object = v30;
    v34.super.isa = UIColor.init(hex:)(v33).super.isa;
    v35 = Color.init(_:)(v34.super.isa);
    v36 = v65;
    *(_QWORD *)(v65 + 32) = v35;
    v38 = CatalogLockup.artworkDescriptor.getter(v37);
    ArtworkDescriptor.standardArtworkDescriptor.getter(v38);
    v39 = sub_100011F54((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkDescriptor);
    StandardArtworkDescriptor.artwork.getter(v39);
    v40 = v26(v7, v64);
    v41 = Artwork.backgroundColor.getter(v40);
    v43 = v42;
    v31(v3, v32);
    v44._countAndFlagsBits = v41;
    v44._object = v43;
    v45.super.isa = UIColor.init(hex:)(v44).super.isa;
    v46 = Color.init(_:)(v45.super.isa);
    v47 = Color.opacity(_:)(0.0);
    swift_release(v46);
    *(_QWORD *)(v36 + 40) = v47;
    v70 = v36;
    v49 = specialized Array._endMutation()(v48);
    v50 = v70;
    v51 = static UnitPoint.bottom.getter(v49);
    v53 = v52;
    v55 = static UnitPoint.center.getter(v54);
    v57 = v56;
    Gradient.init(colors:)(v50);
    result = LinearGradient.init(gradient:startPoint:endPoint:)(&v70, v58, v51, v53, v55, v57);
    v59 = v70;
    v60 = v71;
    v61 = v72;
  }
  else
  {
    v59 = 0;
    v60 = 0uLL;
    v61 = 0uLL;
  }
  v62 = v69;
  *v69 = v59;
  *(_OWORD *)(v62 + 1) = v60;
  *(_OWORD *)(v62 + 3) = v61;
  return result;
}

double sub_1003F0D24@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  void *v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  Swift::String v61;
  UIColor v62;
  uint64_t v63;
  double result;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77[16];
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83[16];
  uint64_t v84;
  uint64_t v85;

  v76 = a2;
  v4 = type metadata accessor for Artwork(0);
  v74 = *(_QWORD *)(v4 - 8);
  v75 = v4;
  __chkstk_darwin(v4);
  v72 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for StandardArtworkDescriptor(0);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v70 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ArtworkDescriptor(0);
  v8 = __chkstk_darwin(v7);
  v69 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MediaTagStringBuilderOptions(0, v8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v2 + *(int *)(type metadata accessor for FitnessPlusUpNextView(0) + 28);
  v15 = (_QWORD *)(v14 + *(int *)(type metadata accessor for FitnessPlusUpNextCard(0) + 48));
  v17 = v15[3];
  v16 = v15[4];
  sub_100016804(v15, v17);
  v18 = (CHWorkoutDetailHeartRateTableViewCell *)CatalogLockup.titleTags.getter();
  static MediaTagStringBuilderOptions.workout.getter();
  v67 = dispatch thunk of MediaTagStringBuilding.attributedString(for:options:)(v18, v13, v17, v16);
  swift_bridgeObjectRelease(v18, v19, v20, v21, v22, v23, v24, v25);
  v26 = *(void (**)(char *, uint64_t))(v11 + 8);
  v26(v13, v10);
  v27 = v15[3];
  v28 = v15[4];
  sub_100016804(v15, v27);
  v29 = (CHWorkoutDetailHeartRateTableViewCell *)CatalogLockup.subtitleTags.getter();
  static MediaTagStringBuilderOptions.workout.getter();
  v66 = dispatch thunk of MediaTagStringBuilding.attributedString(for:options:)(v29, v13, v27, v28);
  swift_bridgeObjectRelease(v29, v30, v31, v32, v33, v34, v35, v36);
  v26(v13, v10);
  v37 = v15[3];
  v38 = v15[4];
  sub_100016804(v15, v37);
  v39 = (CHWorkoutDetailHeartRateTableViewCell *)CatalogLockup.detailTags.getter();
  static MediaTagStringBuilderOptions.workout.getter();
  v40 = (void *)dispatch thunk of MediaTagStringBuilding.attributedString(for:options:)(v39, v13, v37, v38);
  swift_bridgeObjectRelease(v39, v41, v42, v43, v44, v45, v46, v47);
  v26(v13, v10);
  v84 = v68;
  v85 = a1;
  v48 = (void *)v67;
  v78 = v40;
  v79 = v67;
  v49 = (void *)v66;
  v80 = v66;
  v81 = v68;
  v82 = a1;
  sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  v50 = (uint64_t)v69;
  v52 = CatalogLockup.artworkDescriptor.getter(v51);
  v53 = v70;
  ArtworkDescriptor.standardArtworkDescriptor.getter(v52);
  v54 = sub_100011F54(v50, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkDescriptor);
  v55 = v72;
  StandardArtworkDescriptor.artwork.getter(v54);
  v56 = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v53, v73);
  v57 = v55;
  v58 = Artwork.backgroundColor.getter(v56);
  v60 = v59;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v57, v75);
  v61._countAndFlagsBits = v58;
  v61._object = v60;
  v62.super.isa = UIColor.init(hex:)(v61).super.isa;
  v63 = Color.init(_:)(v62.super.isa);
  sub_1003EEC48((_QWORD *(*)(uint64_t *__return_ptr))sub_1004199C8, (uint64_t)v83, (void (*)(void))sub_1004199D0, (uint64_t)v77, v63, v76);

  *(_QWORD *)&result = swift_release(v63).n128_u64[0];
  return result;
}

double sub_1003F10A4@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  char v3;
  __int128 v4;
  double result;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;
  char v10;

  sub_1003F0548(a1, v7);
  v3 = v10;
  v4 = v7[1];
  *(_OWORD *)a2 = v7[0];
  *(_OWORD *)(a2 + 16) = v4;
  result = *(double *)&v8;
  v6 = v9;
  *(_OWORD *)(a2 + 32) = v8;
  *(_OWORD *)(a2 + 48) = v6;
  *(_BYTE *)(a2 + 64) = v3;
  *(_QWORD *)(a2 + 72) = 0x3FFC71C71C71C71CLL;
  *(_WORD *)(a2 + 80) = 0;
  return result;
}

uint64_t sub_1003F1108@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  Swift::String v48;
  UIColor v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;

  v60 = a5;
  v66 = a3;
  v67 = a4;
  v64 = a1;
  v65 = a2;
  v68 = a6;
  v6 = type metadata accessor for Artwork(0);
  v62 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  __chkstk_darwin(v6);
  v61 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StandardArtworkDescriptor(0);
  v58 = *(_QWORD *)(v8 - 8);
  v59 = v8;
  __chkstk_darwin(v8);
  v57 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkDescriptor(0);
  __chkstk_darwin(v10);
  v56 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DynamicTypeSize(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v55 - v17;
  v19 = sub_100047110(&qword_100832A08);
  __chkstk_darwin(v19);
  v21 = (uint64_t)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100047110(&qword_100832A10);
  __chkstk_darwin(v22);
  v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100047110(&qword_100832A18);
  __chkstk_darwin(v25);
  v27 = (char *)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v21 = static HorizontalAlignment.leading.getter(v28);
  *(_QWORD *)(v21 + 8) = 0;
  *(_BYTE *)(v21 + 16) = 0;
  v29 = sub_100047110(&qword_100832A20);
  sub_1003F1564(v64, v65, v66, v21 + *(int *)(v29 + 44));
  v31 = static Alignment.leading.getter(v30);
  sub_1003EB070(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v24, 0.0, 1, 0.0, 1, v31, v32, &qword_100832A08, &qword_100832A10);
  v33 = sub_10001BE90(v21, &qword_100832A08);
  LOBYTE(v21) = static Edge.Set.all.getter(v33);
  sub_100021CC0((uint64_t)v24, (uint64_t)v27, &qword_100832A10);
  v34 = &v27[*(int *)(v25 + 36)];
  *v34 = v21;
  *(_OWORD *)(v34 + 8) = xmmword_10063B9C0;
  *(_OWORD *)(v34 + 24) = xmmword_10063B9D0;
  v34[40] = 0;
  sub_10001BE90((uint64_t)v24, &qword_100832A10);
  sub_1003F6E80(&qword_1008325D0, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DynamicTypeSize.accessibility1(_:), v12);
  LOBYTE(v21) = static DynamicTypeSize.< infix(_:_:)(v18, v15);
  v35 = *(void (**)(char *, uint64_t))(v13 + 8);
  v35(v15, v12);
  v36 = ((uint64_t (*)(char *, uint64_t))v35)(v18, v12);
  if ((v21 & 1) != 0)
  {
    v37 = static Color.clear.getter(v36);
  }
  else
  {
    sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
    v38 = (uint64_t)v56;
    v40 = CatalogLockup.artworkDescriptor.getter(v39);
    v41 = v57;
    ArtworkDescriptor.standardArtworkDescriptor.getter(v40);
    v42 = sub_100011F54(v38, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkDescriptor);
    v43 = v61;
    StandardArtworkDescriptor.artwork.getter(v42);
    v44 = (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v41, v59);
    v45 = Artwork.backgroundColor.getter(v44);
    v47 = v46;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v43, v63);
    v48._countAndFlagsBits = v45;
    v48._object = v47;
    v49.super.isa = UIColor.init(hex:)(v48).super.isa;
    v37 = Color.init(_:)(v49.super.isa);
  }
  v50 = v37;
  v51 = static Edge.Set.all.getter(v37);
  v52 = v68;
  sub_100021CC0((uint64_t)v27, v68, &qword_100832A18);
  v53 = v52 + *(int *)(sub_100047110(&qword_1008329E8) + 36);
  *(_QWORD *)v53 = v50;
  *(_BYTE *)(v53 + 8) = v51;
  return sub_10001BE90((uint64_t)v27, &qword_100832A18);
}

uint64_t sub_1003F1564@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  char v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t KeyPath;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char v87;
  SEL v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  CHWorkoutDetailHeartRateTableViewCell *v102;
  CHWorkoutDetailHeartRateTableViewCell *v103;
  char v104;
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  CHWorkoutDetailHeartRateTableViewCell *v115;
  CHWorkoutDetailHeartRateTableViewCell *v116;
  SEL v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  uint64_t v124;
  __n128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  CHWorkoutDetailHeartRateTableViewCell *v133;
  uint64_t v134;
  char v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  SEL v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  SEL v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  char *v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  id v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;

  v165 = a3;
  v166 = a4;
  v161 = a2;
  v5 = type metadata accessor for Font.Leading(0);
  v163 = *(_QWORD *)(v5 - 8);
  v164 = v5;
  __chkstk_darwin(v5);
  v162 = (char *)&v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_100047110(&qword_100820C60);
  __chkstk_darwin(v158);
  v157 = (uint64_t *)((char *)&v155 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100047110(&qword_100820C68);
  __chkstk_darwin(v8);
  v155 = (char *)&v155 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_100047110(&qword_1008328A0);
  __chkstk_darwin(v156);
  v11 = (char *)&v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_100047110(&qword_1008328A8);
  __chkstk_darwin(v160);
  v168 = (uint64_t)&v155 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v14 = __chkstk_darwin(v13).n128_u64[0];
  v167 = (uint64_t)&v155 - v15;
  v16 = objc_msgSend(a1, "string", v14);
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v169 = v17;
  v170 = v19;
  v159 = sub_100038CA0();
  v20 = Text.init<A>(_:)(&v169, &type metadata for String, v159);
  v22 = v21;
  v24 = v23;
  v26 = v25 & 1;
  v28 = static Font.caption.getter(v27);
  static Font.Weight.medium.getter(v28);
  v29 = Font.weight(_:)(v28);
  v30 = swift_release(v28);
  v31 = Text.font(_:)(v29, v20, v22, v26, v24, v30);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_release(v29);
  LOBYTE(v29) = v35 & 1;
  sub_1000E4458(v20, v22, v26);
  swift_bridgeObjectRelease(v24, v38, v39, v40, v41, v42, v43, v44);
  KeyPath = swift_getKeyPath(&unk_10063BA88);
  v46 = enum case for Text.Case.uppercase(_:);
  v47 = type metadata accessor for Text.Case(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = v155;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 104))(v155, v46, v47);
  v50 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56);
  v51 = (uint64_t)v49;
  v50(v49, 0, 1, v47);
  v52 = swift_getKeyPath(&unk_10063BAB8);
  v53 = v157;
  sub_100021CC0(v51, (uint64_t)v157 + *(int *)(v158 + 28), &qword_100820C68);
  *v53 = v52;
  sub_100021CC0((uint64_t)v53, (uint64_t)&v11[*(int *)(v156 + 36)], &qword_100820C60);
  *(_QWORD *)v11 = v31;
  *((_QWORD *)v11 + 1) = v33;
  v11[16] = v29;
  *((_QWORD *)v11 + 3) = v37;
  *((_QWORD *)v11 + 4) = KeyPath;
  *((_QWORD *)v11 + 5) = 1;
  v11[48] = 0;
  sub_1000E439C(v31, v33, v29);
  swift_bridgeObjectRetain(v37);
  swift_retain(KeyPath);
  sub_10001BE90((uint64_t)v53, &qword_100820C60);
  sub_10001BE90(v51, &qword_100820C68);
  sub_1000E4458(v31, v33, v29);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v37, v54, v55, v56, v57, v58, v59, v60);
  v61 = static ShapeStyle<>.keyTint.getter();
  v62 = v168;
  sub_100021CC0((uint64_t)v11, v168, &qword_1008328A0);
  *(_QWORD *)(v62 + *(int *)(v160 + 36)) = v61;
  sub_10001BE90((uint64_t)v11, &qword_1008328A0);
  sub_100045AD4(v62, v167, &qword_1008328A8);
  v63 = objc_msgSend(v161, "string");
  v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
  v66 = v65;

  v169 = v64;
  v170 = v66;
  v67 = v159;
  v68 = Text.init<A>(_:)(&v169, &type metadata for String, v159);
  v70 = v69;
  v72 = v71;
  v74 = v73 & 1;
  v75 = static Font.title3.getter();
  v76 = Font.bold()(v75);
  v77 = swift_release(v75);
  v79 = v162;
  v78 = v163;
  v80 = v164;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v163 + 104))(v162, enum case for Font.Leading.tight(_:), v164, v77);
  v81 = Font.leading(_:)(v79, v76);
  v82 = swift_release(v76);
  v83.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v78 + 8))(v79, v80, v82);
  v84 = Text.font(_:)(v81, v68, v70, v74, v72, v83);
  v163 = v85;
  v164 = v84;
  v162 = v86;
  LOBYTE(v79) = v87;
  swift_release(v81);
  LOBYTE(v81) = v79 & 1;
  sub_1000E4458(v68, v70, v74);
  swift_bridgeObjectRelease(v72, v88, v89, v90, v91, v92, v93, v94);
  v161 = (id)swift_getKeyPath(&unk_10063BA88);
  v95 = objc_msgSend(v165, "string");
  v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
  v98 = v97;

  v169 = v96;
  v170 = v98;
  v99 = Text.init<A>(_:)(&v169, &type metadata for String, v67);
  v101 = v100;
  v103 = v102;
  v105 = v104 & 1;
  v107 = static Font.caption.getter(v106);
  static Font.Weight.regular.getter(v108);
  v109 = Font.weight(_:)(v107);
  v110 = swift_release(v107);
  v111 = Text.font(_:)(v109, v99, v101, v105, v103, v110);
  v113 = v112;
  LOBYTE(v68) = v114;
  v116 = v115;
  swift_release(v109);
  LOBYTE(v109) = v68 & 1;
  sub_1000E4458(v99, v101, v105);
  swift_bridgeObjectRelease(v103, v117, v118, v119, v120, v121, v122, v123);
  v124 = swift_getKeyPath(&unk_10063BA88);
  LODWORD(v101) = static HierarchicalShapeStyle.secondary.getter(v125);
  v127 = v167;
  v126 = v168;
  sub_100021CC0(v167, v168, &qword_1008328A8);
  LOBYTE(v169) = v81;
  v128 = v126;
  v129 = v166;
  sub_100021CC0(v128, v166, &qword_1008328A8);
  v130 = sub_100047110(&qword_100832A28);
  v131 = v129 + *(int *)(v130 + 48);
  v133 = (CHWorkoutDetailHeartRateTableViewCell *)v163;
  v132 = v164;
  v134 = (uint64_t)v162;
  *(_QWORD *)v131 = v164;
  *(_QWORD *)(v131 + 8) = v134;
  v135 = v81;
  *(_BYTE *)(v131 + 16) = v81;
  v136 = v161;
  *(_QWORD *)(v131 + 24) = v133;
  *(_QWORD *)(v131 + 32) = v136;
  *(_QWORD *)(v131 + 40) = 2;
  *(_BYTE *)(v131 + 48) = 0;
  *(_WORD *)(v131 + 49) = 256;
  v137 = v129 + *(int *)(v130 + 64);
  *(_QWORD *)v137 = v111;
  *(_QWORD *)(v137 + 8) = v113;
  *(_BYTE *)(v137 + 16) = v109;
  *(_QWORD *)(v137 + 24) = v116;
  *(_QWORD *)(v137 + 32) = v124;
  *(_QWORD *)(v137 + 40) = 1;
  *(_BYTE *)(v137 + 48) = 0;
  *(_DWORD *)(v137 + 52) = v101;
  v138 = v132;
  v139 = v134;
  sub_1000E439C(v132, v134, v135);
  swift_bridgeObjectRetain(v133);
  swift_retain(v136);
  sub_1000E439C(v111, v113, v109);
  swift_bridgeObjectRetain(v116);
  swift_retain(v124);
  sub_10001BE90(v127, &qword_1008328A8);
  sub_1000E4458(v111, v113, v109);
  swift_release(v124);
  swift_bridgeObjectRelease(v116, v140, v141, v142, v143, v144, v145, v146);
  sub_1000E4458(v138, v139, v169);
  swift_release(v136);
  swift_bridgeObjectRelease(v133, v147, v148, v149, v150, v151, v152, v153);
  return sub_10001BE90(v168, &qword_1008328A8);
}

uint64_t sub_1003F1C68@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = static Color.clear.getter();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = 0x3FFC71C71C71C71CLL;
  *(_WORD *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_1003F1CA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = sub_100047110(&qword_100832878);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100832880);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v4 = static HorizontalAlignment.leading.getter(v8);
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 0;
  v9 = sub_100047110(&qword_100832890);
  sub_1003F1E20((uint64_t)&v4[*(int *)(v9 + 44)]);
  v11 = static Alignment.leading.getter(v10);
  sub_1003EB070(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v7, 0.0, 1, 0.0, 1, v11, v12, &qword_100832878, &qword_100832880);
  v13 = sub_10001BE90((uint64_t)v4, &qword_100832878);
  LOBYTE(v4) = static Edge.Set.all.getter(v13);
  sub_100021CC0((uint64_t)v7, a1, &qword_100832880);
  v14 = a1 + *(int *)(sub_100047110(&qword_100832868) + 36);
  *(_BYTE *)v14 = (_BYTE)v4;
  *(_OWORD *)(v14 + 8) = xmmword_10063B9C0;
  *(_OWORD *)(v14 + 24) = xmmword_10063B9D0;
  *(_BYTE *)(v14 + 40) = 0;
  return sub_10001BE90((uint64_t)v7, &qword_100832880);
}

uint64_t sub_1003F1E20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  char v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  __n128 v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char v80;
  SEL v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  CHWorkoutDetailHeartRateTableViewCell *v93;
  CHWorkoutDetailHeartRateTableViewCell *v94;
  char v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  CHWorkoutDetailHeartRateTableViewCell *v106;
  SEL v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  CHWorkoutDetailHeartRateTableViewCell *v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  CHWorkoutDetailHeartRateTableViewCell *v128;
  uint64_t v129;
  uint64_t v130;
  SEL v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  SEL v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  uint64_t v146;
  uint64_t v147;
  CHWorkoutDetailHeartRateTableViewCell *v148;
  char *v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  CHWorkoutDetailHeartRateTableViewCell *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;

  v158 = a1;
  v1 = type metadata accessor for Font.Leading(0);
  v156 = *(_QWORD *)(v1 - 8);
  v157 = v1;
  __chkstk_darwin(v1);
  v155 = (char *)&v146 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_100047110(&qword_100820C60);
  __chkstk_darwin(v152);
  v151 = (uint64_t *)((char *)&v146 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100047110(&qword_100820C68);
  __chkstk_darwin(v4);
  v149 = (char *)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_100047110(&qword_1008328A0);
  __chkstk_darwin(v150);
  v7 = (char *)&v146 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_100047110(&qword_1008328A8);
  __chkstk_darwin(v154);
  v163 = (uint64_t)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v153 = (uint64_t)&v146 - v10;
  __chkstk_darwin(v11);
  v162 = (uint64_t)&v146 - v12;
  v13 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(18, &type metadata for Character);
  v13[2] = 18;
  v13[4] = 88;
  v13[5] = 0xE100000000000000;
  v13[6] = 88;
  v13[7] = 0xE100000000000000;
  v13[8] = 88;
  v13[9] = 0xE100000000000000;
  v13[10] = 88;
  v13[11] = 0xE100000000000000;
  v13[12] = 88;
  v13[13] = 0xE100000000000000;
  v13[14] = 88;
  v13[15] = 0xE100000000000000;
  v13[16] = 88;
  v13[17] = 0xE100000000000000;
  v13[18] = 88;
  v13[19] = 0xE100000000000000;
  v13[20] = 88;
  v13[21] = 0xE100000000000000;
  v13[22] = 88;
  v13[23] = 0xE100000000000000;
  v13[24] = 88;
  v13[25] = 0xE100000000000000;
  v13[26] = 88;
  v13[27] = 0xE100000000000000;
  v13[28] = 88;
  v13[29] = 0xE100000000000000;
  v13[30] = 88;
  v13[31] = 0xE100000000000000;
  v13[32] = 88;
  v13[33] = 0xE100000000000000;
  v13[34] = 88;
  v13[35] = 0xE100000000000000;
  v13[36] = 88;
  v13[37] = 0xE100000000000000;
  v13[38] = 88;
  v13[39] = 0xE100000000000000;
  v164 = (uint64_t)v13;
  v14 = sub_100047110(&qword_100832940);
  v161 = (CHWorkoutDetailHeartRateTableViewCell *)v14;
  v160 = sub_100028384(&qword_100832948, &qword_100832940, (uint64_t)&protocol conformance descriptor for [A]);
  v164 = String.init<A>(_:)(&v164, v14, v160);
  v165 = v15;
  v159 = sub_100038CA0();
  v16 = Text.init<A>(_:)(&v164, &type metadata for String, v159);
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  v24 = static Font.caption.getter(v23);
  static Font.Weight.medium.getter(v24);
  v25 = Font.weight(_:)(v24);
  v26 = swift_release(v24);
  v147 = Text.font(_:)(v25, v16, v18, v22, v20, v26);
  v28 = v27;
  v30 = v29;
  v148 = v31;
  swift_release(v25);
  LOBYTE(v25) = v30 & 1;
  sub_1000E4458(v16, v18, v22);
  swift_bridgeObjectRelease(v20, v32, v33, v34, v35, v36, v37, v38);
  KeyPath = swift_getKeyPath(&unk_10063BA88);
  v40 = enum case for Text.Case.uppercase(_:);
  v41 = type metadata accessor for Text.Case(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = v149;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 104))(v149, v40, v41);
  v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56);
  v45 = (uint64_t)v43;
  v44(v43, 0, 1, v41);
  v46 = swift_getKeyPath(&unk_10063BAB8);
  v47 = v151;
  sub_100021CC0(v45, (uint64_t)v151 + *(int *)(v152 + 28), &qword_100820C68);
  *v47 = v46;
  sub_100021CC0((uint64_t)v47, (uint64_t)&v7[*(int *)(v150 + 36)], &qword_100820C60);
  v48 = v147;
  *(_QWORD *)v7 = v147;
  *((_QWORD *)v7 + 1) = v28;
  v7[16] = v25;
  v49 = v148;
  *((_QWORD *)v7 + 3) = v148;
  *((_QWORD *)v7 + 4) = KeyPath;
  *((_QWORD *)v7 + 5) = 1;
  v7[48] = 0;
  sub_1000E439C(v48, v28, v25);
  swift_bridgeObjectRetain(v49);
  swift_retain(KeyPath);
  sub_10001BE90((uint64_t)v47, &qword_100820C60);
  sub_10001BE90(v45, &qword_100820C68);
  sub_1000E4458(v48, v28, v25);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v49, v50, v51, v52, v53, v54, v55, v56);
  v57 = static ShapeStyle<>.keyTint.getter();
  v58 = v153;
  sub_100021CC0((uint64_t)v7, v153, &qword_1008328A0);
  *(_QWORD *)(v58 + *(int *)(v154 + 36)) = v57;
  sub_10001BE90((uint64_t)v7, &qword_1008328A0);
  sub_100045AD4(v58, v162, &qword_1008328A8);
  v59 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(20, &type metadata for Character);
  v59[2] = 20;
  v59[4] = 88;
  v59[5] = 0xE100000000000000;
  v59[6] = 88;
  v59[7] = 0xE100000000000000;
  v59[8] = 88;
  v59[9] = 0xE100000000000000;
  v59[10] = 88;
  v59[11] = 0xE100000000000000;
  v59[12] = 88;
  v59[13] = 0xE100000000000000;
  v59[14] = 88;
  v59[15] = 0xE100000000000000;
  v59[16] = 88;
  v59[17] = 0xE100000000000000;
  v59[18] = 88;
  v59[19] = 0xE100000000000000;
  v59[20] = 88;
  v59[21] = 0xE100000000000000;
  v59[22] = 88;
  v59[23] = 0xE100000000000000;
  v59[24] = 88;
  v59[25] = 0xE100000000000000;
  v59[26] = 88;
  v59[27] = 0xE100000000000000;
  v59[28] = 88;
  v59[29] = 0xE100000000000000;
  v59[30] = 88;
  v59[31] = 0xE100000000000000;
  v59[32] = 88;
  v59[33] = 0xE100000000000000;
  v59[34] = 88;
  v59[35] = 0xE100000000000000;
  v59[36] = 88;
  v59[37] = 0xE100000000000000;
  v59[38] = 88;
  v59[39] = 0xE100000000000000;
  v59[40] = 88;
  v59[41] = 0xE100000000000000;
  v59[42] = 88;
  v59[43] = 0xE100000000000000;
  v164 = (uint64_t)v59;
  v164 = String.init<A>(_:)(&v164, v161, v160);
  v165 = v60;
  v61 = Text.init<A>(_:)(&v164, &type metadata for String, v159);
  v63 = v62;
  v154 = v64;
  v66 = v65 & 1;
  v67 = static Font.title3.getter();
  v68 = Font.bold()(v67);
  v69 = swift_release(v67);
  v70 = v155;
  v71 = v156;
  v72 = v157;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v156 + 104))(v155, enum case for Font.Leading.tight(_:), v157, v69);
  v73 = Font.leading(_:)(v70, v68);
  v74 = swift_release(v68);
  v75.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v71 + 8))(v70, v72, v74);
  v76 = (CHWorkoutDetailHeartRateTableViewCell *)v154;
  v77 = Text.font(_:)(v73, v61, v63, v66, v154, v75);
  v156 = v78;
  v157 = v77;
  v155 = v79;
  LOBYTE(v71) = v80;
  swift_release(v73);
  LODWORD(v153) = v71 & 1;
  sub_1000E4458(v61, v63, v66);
  swift_bridgeObjectRelease(v76, v81, v82, v83, v84, v85, v86, v87);
  v154 = swift_getKeyPath(&unk_10063BA88);
  v88 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(20, &type metadata for Character);
  v88[2] = 20;
  v88[4] = 88;
  v88[5] = 0xE100000000000000;
  v88[6] = 88;
  v88[7] = 0xE100000000000000;
  v88[8] = 88;
  v88[9] = 0xE100000000000000;
  v88[10] = 88;
  v88[11] = 0xE100000000000000;
  v88[12] = 88;
  v88[13] = 0xE100000000000000;
  v88[14] = 88;
  v88[15] = 0xE100000000000000;
  v88[16] = 88;
  v88[17] = 0xE100000000000000;
  v88[18] = 88;
  v88[19] = 0xE100000000000000;
  v88[20] = 88;
  v88[21] = 0xE100000000000000;
  v88[22] = 88;
  v88[23] = 0xE100000000000000;
  v88[24] = 88;
  v88[25] = 0xE100000000000000;
  v88[26] = 88;
  v88[27] = 0xE100000000000000;
  v88[28] = 88;
  v88[29] = 0xE100000000000000;
  v88[30] = 88;
  v88[31] = 0xE100000000000000;
  v88[32] = 88;
  v88[33] = 0xE100000000000000;
  v88[34] = 88;
  v88[35] = 0xE100000000000000;
  v88[36] = 88;
  v88[37] = 0xE100000000000000;
  v88[38] = 88;
  v88[39] = 0xE100000000000000;
  v88[40] = 88;
  v88[41] = 0xE100000000000000;
  v88[42] = 88;
  v88[43] = 0xE100000000000000;
  v164 = (uint64_t)v88;
  v164 = String.init<A>(_:)(&v164, v161, v160);
  v165 = v89;
  v90 = Text.init<A>(_:)(&v164, &type metadata for String, v159);
  v92 = v91;
  v94 = v93;
  v96 = v95 & 1;
  v98 = static Font.caption.getter(v97);
  static Font.Weight.regular.getter(v99);
  v100 = Font.weight(_:)(v98);
  v101 = swift_release(v98);
  v102 = Text.font(_:)(v100, v90, v92, v96, v94, v101);
  v104 = v103;
  LOBYTE(v70) = v105;
  v161 = v106;
  swift_release(v100);
  LOBYTE(v100) = v70 & 1;
  sub_1000E4458(v90, v92, v96);
  swift_bridgeObjectRelease(v94, v107, v108, v109, v110, v111, v112, v113);
  v114 = swift_getKeyPath(&unk_10063BA88);
  LODWORD(v92) = static HierarchicalShapeStyle.secondary.getter(v115);
  v117 = v162;
  v116 = v163;
  sub_100021CC0(v162, v163, &qword_1008328A8);
  LOBYTE(v98) = v153;
  LOBYTE(v164) = v153;
  v118 = v116;
  v119 = v158;
  sub_100021CC0(v118, v158, &qword_1008328A8);
  v120 = sub_100047110(&qword_1008328B0);
  v121 = v119 + *(int *)(v120 + 48);
  v123 = (CHWorkoutDetailHeartRateTableViewCell *)v156;
  v122 = v157;
  v125 = v154;
  v124 = (uint64_t)v155;
  *(_QWORD *)v121 = v157;
  *(_QWORD *)(v121 + 8) = v124;
  v126 = v98;
  *(_BYTE *)(v121 + 16) = v98;
  *(_QWORD *)(v121 + 24) = v123;
  *(_QWORD *)(v121 + 32) = v125;
  *(_QWORD *)(v121 + 40) = 2;
  *(_BYTE *)(v121 + 48) = 0;
  v127 = v119 + *(int *)(v120 + 64);
  *(_QWORD *)v127 = v102;
  *(_QWORD *)(v127 + 8) = v104;
  *(_BYTE *)(v127 + 16) = v100;
  v128 = v161;
  *(_QWORD *)(v127 + 24) = v161;
  *(_QWORD *)(v127 + 32) = v114;
  *(_QWORD *)(v127 + 40) = 1;
  *(_BYTE *)(v127 + 48) = 0;
  *(_DWORD *)(v127 + 52) = v92;
  v129 = v122;
  v130 = v124;
  sub_1000E439C(v122, v124, v126);
  swift_bridgeObjectRetain(v123);
  swift_retain(v125);
  sub_1000E439C(v102, v104, v100);
  swift_bridgeObjectRetain(v128);
  swift_retain(v114);
  sub_10001BE90(v117, &qword_1008328A8);
  sub_1000E4458(v102, v104, v100);
  swift_release(v114);
  swift_bridgeObjectRelease(v128, v131, v132, v133, v134, v135, v136, v137);
  sub_1000E4458(v129, v130, v164);
  swift_release(v125);
  swift_bridgeObjectRelease(v123, v138, v139, v140, v141, v142, v143, v144);
  return sub_10001BE90(v163, &qword_1008328A8);
}

uint64_t sub_1003F2668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t View;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  Swift::String v23;
  UIColor v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t OpaqueTypeConformance2;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)();
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t Card;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  ValueMetadata *v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  char v92;

  v79 = a1;
  View = type metadata accessor for FitnessPlusUpNextView(0);
  v3 = *(_QWORD *)(View - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(View);
  v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100832710);
  __chkstk_darwin(v6);
  v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100832718);
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100047110(&qword_100832720);
  __chkstk_darwin(v85);
  v74 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100047110(&qword_100832728);
  v76 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v80 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_100832730);
  v78 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v75 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v77 = (char *)&v68 - v17;
  v81 = sub_100047110(&qword_100832738);
  __chkstk_darwin(v81);
  v83 = (uint64_t)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100047110(&qword_100832740);
  __chkstk_darwin(v82);
  v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = View;
  if (*(_BYTE *)(v1 + *(int *)(View + 36)) == 1)
  {
    __chkstk_darwin(v19);
    *(&v68 - 2) = v22;
    sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
    v23._countAndFlagsBits = 0x353035313232;
    v23._object = (void *)0xE600000000000000;
    v24.super.isa = UIColor.init(hex:)(v23).super.isa;
    v25 = Color.init(_:)(v24.super.isa);
    sub_1003EF95C((_QWORD *(*)(uint64_t *__return_ptr))sub_1003F6E10, (uint64_t)(&v68 - 4), v25, (uint64_t)v21);
    swift_release(v25);
    v26 = v83;
    sub_100021CC0((uint64_t)v21, v83, &qword_100832740);
    swift_storeEnumTagMultiPayload(v26, v81, 0);
    v27 = sub_1003F6CD4();
    v28 = sub_1003F6818(&qword_100832748, &qword_100832720, (void (*)(void))sub_1003F67FC);
    v86 = v85;
    v87 = (ValueMetadata *)&type metadata for Bool;
    v88 = v28;
    v89 = &protocol witness table for Bool;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v86, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v30 = sub_1003F6C90();
    v86 = v84;
    v87 = &type metadata for FitnessPlusCardDataProvider.State;
    v88 = OpaqueTypeConformance2;
    v89 = (void *)v30;
    v31 = swift_getOpaqueTypeConformance2(&v86, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v26, v82, v14, v27, v31);
    return sub_10001BE90((uint64_t)v21, &qword_100832740);
  }
  else
  {
    v33 = v1;
    sub_1003F384C(v1, (uint64_t)v8);
    sub_10004F8C8(v1, (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FitnessPlusUpNextView);
    v34 = *(unsigned __int8 *)(v3 + 80);
    v72 = ((v34 + 16) & ~v34) + v4;
    v35 = (v34 + 16) & ~v34;
    v36 = v34 | 7;
    v37 = swift_allocObject(&unk_10079E528, v72, v34 | 7);
    v71 = v14;
    v38 = v37;
    v39 = v9;
    v40 = v35;
    v69 = v35;
    sub_100047C88((uint64_t)v5, v37 + v35, type metadata accessor for FitnessPlusUpNextView);
    sub_100021CC0((uint64_t)v8, (uint64_t)v11, &qword_100832710);
    v41 = (uint64_t (**)())&v11[*(int *)(v39 + 36)];
    *v41 = sub_1003F667C;
    v41[1] = (uint64_t (*)())v38;
    v41[2] = 0;
    v41[3] = 0;
    sub_10001BE90((uint64_t)v8, &qword_100832710);
    sub_10004F8C8(v1, (uint64_t)v5, type metadata accessor for FitnessPlusUpNextView);
    v42 = v72;
    v70 = v36;
    v43 = swift_allocObject(&unk_10079E550, v72, v36);
    sub_100047C88((uint64_t)v5, v43 + v40, type metadata accessor for FitnessPlusUpNextView);
    v44 = v74;
    sub_100021CC0((uint64_t)v11, v74, &qword_100832718);
    v45 = (_QWORD *)(v44 + *(int *)(v85 + 36));
    *v45 = 0;
    v45[1] = 0;
    v45[2] = sub_1003F67E0;
    v45[3] = v43;
    sub_10001BE90((uint64_t)v11, &qword_100832718);
    v46 = v33 + *(int *)(v73 + 28);
    Card = type metadata accessor for FitnessPlusUpNextCard(0);
    LOBYTE(v86) = *(_BYTE *)(v46 + *(int *)(Card + 40));
    sub_10004F8C8(v33, (uint64_t)v5, type metadata accessor for FitnessPlusUpNextView);
    v48 = swift_allocObject(&unk_10079E578, v42, v36);
    v49 = v69;
    sub_100047C88((uint64_t)v5, v48 + v69, type metadata accessor for FitnessPlusUpNextView);
    v50 = sub_1003F6818(&qword_100832748, &qword_100832720, (void (*)(void))sub_1003F67FC);
    v51 = v85;
    View.onChange<A>(of:initial:_:)(&v86, 0, sub_1003F67F0, v48, v85, &type metadata for Bool, v50, &protocol witness table for Bool);
    swift_release(v48);
    sub_10001BE90(v44, &qword_100832720);
    v52 = v46 + *(int *)(Card + 36);
    v54 = *(_QWORD *)(v52 + 8);
    LOBYTE(v40) = *(_BYTE *)(v52 + 16);
    v90 = *(_QWORD *)v52;
    v53 = v90;
    v91 = v54;
    v92 = v40;
    sub_10004F8C8(v33, (uint64_t)v5, type metadata accessor for FitnessPlusUpNextView);
    v55 = swift_allocObject(&unk_10079E5A0, v72, v70);
    sub_100047C88((uint64_t)v5, v55 + v49, type metadata accessor for FitnessPlusUpNextView);
    sub_1001B73B0(v53, v54, v40);
    v86 = v51;
    v87 = (ValueMetadata *)&type metadata for Bool;
    v88 = v50;
    v89 = &protocol witness table for Bool;
    v56 = swift_getOpaqueTypeConformance2(&v86, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v57 = sub_1003F6C90();
    v58 = v75;
    v59 = v84;
    v60 = v80;
    View.onChange<A>(of:initial:_:)(&v90, 0, sub_1003F6C44, v55, v84, &type metadata for FitnessPlusCardDataProvider.State, v56, v57);
    swift_release(v55);
    sub_10027DC80(v90, v91, v92);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v60, v59);
    v62 = v77;
    v61 = v78;
    v63 = v58;
    v64 = v71;
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v77, v63, v71);
    v65 = v83;
    (*(void (**)(uint64_t, char *, uint64_t))(v61 + 16))(v83, v62, v64);
    swift_storeEnumTagMultiPayload(v65, v81, 1);
    v66 = sub_1003F6CD4();
    v86 = v59;
    v87 = &type metadata for FitnessPlusCardDataProvider.State;
    v88 = v56;
    v89 = (void *)v57;
    v67 = swift_getOpaqueTypeConformance2(&v86, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v65, v82, v64, v66, v67);
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v62, v64);
  }
}

__n128 sub_1003F2DFC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[2];
  uint64_t v17;

  v2 = type metadata accessor for Image.ResizingMode(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Image.init(_:bundle:)(0xD00000000000001DLL, 0x800000010069E790, 0);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Image.ResizingMode.stretch(_:), v2);
  v7 = Image.resizable(capInsets:resizingMode:)(v5, v6, 0.0, 0.0, 0.0, 0.0);
  v8 = swift_release(v6);
  v9 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v8);
  v10 = static Alignment.bottom.getter(v9);
  v12 = v11;
  sub_1003F2F34((uint64_t)v16);
  v13 = v17;
  result = (__n128)v16[0];
  v15 = v16[1];
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = 0x3FFC71C71C71C71CLL;
  *(_WORD *)(a1 + 16) = 0;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v15;
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v12;
  return result;
}

_QWORD *sub_1003F2F34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  char v10;
  void (*v11)(char *, uint64_t);
  _QWORD *result;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  UIColor v16;
  Swift::String v17;
  UIColor v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;

  v2 = type metadata accessor for DynamicTypeSize(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - v7;
  sub_1003F6E80(&qword_1008325D0, v9, 0x5463696D616E7944, 0xEF657A6953657079, (uint64_t)&v35 - v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DynamicTypeSize.accessibility1(_:), v2);
  v10 = static DynamicTypeSize.< infix(_:_:)(v8, v5);
  v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v2);
  result = (_QWORD *)((uint64_t (*)(char *, uint64_t))v11)(v8, v2);
  if ((v10 & 1) != 0)
  {
    v13 = sub_100047110((uint64_t *)&unk_10082BDC0);
    v14 = swift_allocObject(v13, 48, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100620BC0;
    sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
    v15._countAndFlagsBits = 0x353035313232;
    v15._object = (void *)0xE600000000000000;
    v16.super.isa = UIColor.init(hex:)(v15).super.isa;
    *(_QWORD *)(v14 + 32) = Color.init(_:)(v16.super.isa);
    v17._countAndFlagsBits = 0x353035313232;
    v17._object = (void *)0xE600000000000000;
    v18.super.isa = UIColor.init(hex:)(v17).super.isa;
    v19 = Color.init(_:)(v18.super.isa);
    v20 = Color.opacity(_:)(0.0);
    swift_release(v19);
    *(_QWORD *)(v14 + 40) = v20;
    v36 = v14;
    v22 = specialized Array._endMutation()(v21);
    v23 = v36;
    v24 = static UnitPoint.bottom.getter(v22);
    v26 = v25;
    v28 = static UnitPoint.center.getter(v27);
    v30 = v29;
    Gradient.init(colors:)(v23);
    result = LinearGradient.init(gradient:startPoint:endPoint:)(&v36, v31, v24, v26, v28, v30);
    v32 = v36;
    v33 = v37;
    v34 = v38;
  }
  else
  {
    v32 = 0;
    v33 = 0uLL;
    v34 = 0uLL;
  }
  *(_QWORD *)a1 = v32;
  *(_OWORD *)(a1 + 8) = v33;
  *(_OWORD *)(a1 + 24) = v34;
  return result;
}

uint64_t sub_1003F3154@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  char v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char v75;
  SEL v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  CHWorkoutDetailHeartRateTableViewCell *v88;
  char v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  CHWorkoutDetailHeartRateTableViewCell *v100;
  CHWorkoutDetailHeartRateTableViewCell *v101;
  SEL v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  CHWorkoutDetailHeartRateTableViewCell *v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  SEL v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  SEL v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;

  v149 = a1;
  v1 = type metadata accessor for Font.Leading(0);
  v147 = *(_QWORD *)(v1 - 8);
  v148 = v1;
  __chkstk_darwin(v1);
  v146 = (char *)&v140 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_100047110(&qword_100820C60);
  __chkstk_darwin(v144);
  v143 = (uint64_t *)((char *)&v140 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100047110(&qword_100820C68);
  __chkstk_darwin(v4);
  v141 = (char *)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_100047110(&qword_1008328A0);
  __chkstk_darwin(v142);
  v7 = (char *)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_100047110(&qword_1008328A8);
  __chkstk_darwin(v145);
  v151 = (uint64_t)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v150 = (uint64_t)&v140 - v10;
  v11 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000025, 0x800000010069E700);
  v12 = Text.init(_:tableName:bundle:comment:)(v11);
  v14 = v13;
  v16 = v15;
  v18 = v17 & 1;
  v20 = static Font.caption.getter(v19);
  static Font.Weight.medium.getter(v20);
  v21 = Font.weight(_:)(v20);
  v22 = swift_release(v20);
  v23 = Text.font(_:)(v21, v12, v14, v18, v16, v22);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  swift_release(v21);
  LOBYTE(v21) = v27 & 1;
  sub_1000E4458(v12, v14, v18);
  swift_bridgeObjectRelease(v16, v30, v31, v32, v33, v34, v35, v36);
  KeyPath = swift_getKeyPath(&unk_10063BA88);
  v38 = enum case for Text.Case.uppercase(_:);
  v39 = type metadata accessor for Text.Case(0);
  v40 = *(_QWORD *)(v39 - 8);
  v41 = v141;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 104))(v141, v38, v39);
  v42 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56);
  v43 = (uint64_t)v41;
  v42(v41, 0, 1, v39);
  v44 = swift_getKeyPath(&unk_10063BAB8);
  v45 = v143;
  sub_100021CC0(v43, (uint64_t)v143 + *(int *)(v144 + 28), &qword_100820C68);
  *v45 = v44;
  sub_100021CC0((uint64_t)v45, (uint64_t)&v7[*(int *)(v142 + 36)], &qword_100820C60);
  *(_QWORD *)v7 = v23;
  *((_QWORD *)v7 + 1) = v25;
  v7[16] = v21;
  *((_QWORD *)v7 + 3) = v29;
  *((_QWORD *)v7 + 4) = KeyPath;
  *((_QWORD *)v7 + 5) = 1;
  v7[48] = 0;
  sub_1000E439C(v23, v25, v21);
  swift_bridgeObjectRetain(v29);
  swift_retain(KeyPath);
  sub_10001BE90((uint64_t)v45, &qword_100820C60);
  sub_10001BE90(v43, &qword_100820C68);
  sub_1000E4458(v23, v25, v21);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v29, v46, v47, v48, v49, v50, v51, v52);
  v53 = static ShapeStyle<>.keyTint.getter();
  v54 = v151;
  sub_100021CC0((uint64_t)v7, v151, &qword_1008328A0);
  *(_QWORD *)(v54 + *(int *)(v145 + 36)) = v53;
  sub_10001BE90((uint64_t)v7, &qword_1008328A0);
  sub_100045AD4(v54, v150, &qword_1008328A8);
  v55 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000023, 0x800000010069E730);
  v56 = Text.init(_:tableName:bundle:comment:)(v55);
  v58 = v57;
  v60 = v59;
  v62 = v61 & 1;
  v63 = static Font.title3.getter();
  v64 = Font.bold()(v63);
  v65 = swift_release(v63);
  v67 = v146;
  v66 = v147;
  v68 = v148;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v147 + 104))(v146, enum case for Font.Leading.tight(_:), v148, v65);
  v69 = Font.leading(_:)(v67, v64);
  v70 = swift_release(v64);
  v71.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v66 + 8))(v67, v68, v70);
  v72 = Text.font(_:)(v69, v56, v58, v62, v60, v71);
  v147 = v73;
  v148 = v72;
  v146 = v74;
  LOBYTE(v67) = v75;
  swift_release(v69);
  LOBYTE(v69) = v67 & 1;
  sub_1000E4458(v56, v58, v62);
  swift_bridgeObjectRelease(v60, v76, v77, v78, v79, v80, v81, v82);
  v145 = swift_getKeyPath(&unk_10063BA88);
  v83 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000026, 0x800000010069E760);
  v84 = Text.init(_:tableName:bundle:comment:)(v83);
  v86 = v85;
  v88 = v87;
  v90 = v89 & 1;
  v92 = static Font.caption.getter(v91);
  static Font.Weight.regular.getter(v93);
  v94 = Font.weight(_:)(v92);
  v95 = swift_release(v92);
  v96 = Text.font(_:)(v94, v84, v86, v90, v88, v95);
  v98 = v97;
  LOBYTE(v58) = v99;
  v101 = v100;
  swift_release(v94);
  LOBYTE(v94) = v58 & 1;
  sub_1000E4458(v84, v86, v90);
  swift_bridgeObjectRelease(v88, v102, v103, v104, v105, v106, v107, v108);
  v109 = swift_getKeyPath(&unk_10063BA88);
  LODWORD(v86) = static HierarchicalShapeStyle.secondary.getter(v110);
  v112 = v150;
  v111 = v151;
  sub_100021CC0(v150, v151, &qword_1008328A8);
  v152 = v69;
  v113 = v111;
  v114 = v149;
  sub_100021CC0(v113, v149, &qword_1008328A8);
  v115 = sub_100047110(&qword_1008328B0);
  v116 = v114 + *(int *)(v115 + 48);
  v118 = (CHWorkoutDetailHeartRateTableViewCell *)v147;
  v117 = v148;
  v119 = (uint64_t)v146;
  *(_QWORD *)v116 = v148;
  *(_QWORD *)(v116 + 8) = v119;
  v120 = v69;
  *(_BYTE *)(v116 + 16) = v69;
  v121 = v145;
  *(_QWORD *)(v116 + 24) = v118;
  *(_QWORD *)(v116 + 32) = v121;
  *(_QWORD *)(v116 + 40) = 2;
  *(_BYTE *)(v116 + 48) = 0;
  v122 = v114 + *(int *)(v115 + 64);
  *(_QWORD *)v122 = v96;
  *(_QWORD *)(v122 + 8) = v98;
  *(_BYTE *)(v122 + 16) = v94;
  *(_QWORD *)(v122 + 24) = v101;
  *(_QWORD *)(v122 + 32) = v109;
  *(_QWORD *)(v122 + 40) = 1;
  *(_BYTE *)(v122 + 48) = 0;
  *(_DWORD *)(v122 + 52) = v86;
  v123 = v117;
  v124 = v119;
  sub_1000E439C(v117, v119, v120);
  swift_bridgeObjectRetain(v118);
  swift_retain(v121);
  sub_1000E439C(v96, v98, v94);
  swift_bridgeObjectRetain(v101);
  swift_retain(v109);
  sub_10001BE90(v112, &qword_1008328A8);
  sub_1000E4458(v96, v98, v94);
  swift_release(v109);
  swift_bridgeObjectRelease(v101, v125, v126, v127, v128, v129, v130, v131);
  sub_1000E4458(v123, v124, v152);
  swift_release(v121);
  swift_bridgeObjectRelease(v118, v132, v133, v134, v135, v136, v137, v138);
  return sub_10001BE90(v151, &qword_1008328A8);
}

_QWORD *sub_1003F384C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t View;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t Card;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t KeyPath;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  char *v79;
  __int128 v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t OpaqueTypeConformance2;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  _QWORD *result;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  void *v114;
  int wapiCapability;
  uint64_t v116;
  SEL v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  Swift::String v124;
  SEL v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  Swift::String v132;
  CHWorkoutDetailHeartRateTableViewCell *v133;
  id v134;
  NSString v135;
  id v136;
  uint64_t v137;
  const char *v138;
  CHWorkoutDetailHeartRateTableViewCell *v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  CHWorkoutDetailHeartRateTableViewCell *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  SEL v175;
  id v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  char v217;
  _DWORD v218[2];
  _DWORD v219[2];
  char v220;
  char v221;
  int v222;
  __int16 v223;
  char v224;
  char v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;

  v214 = a2;
  v199 = sub_100047110(&qword_1008328F0);
  __chkstk_darwin(v199);
  v201 = (uint64_t)&v186 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = sub_100047110(&qword_1008327F0);
  __chkstk_darwin(v213);
  v202 = (char *)&v186 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_1008328F8);
  __chkstk_darwin(v5);
  v196 = (uint64_t *)((char *)&v186 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v193 = sub_100047110(&qword_100832900);
  __chkstk_darwin(v193);
  v194 = (uint64_t)&v186 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = sub_100047110(&qword_100832820);
  __chkstk_darwin(v195);
  v197 = (uint64_t)&v186 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_100047110(&qword_100832800);
  __chkstk_darwin(v198);
  v10 = (char *)&v186 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v200 = (uint64_t)&v186 - v12;
  View = type metadata accessor for FitnessPlusUpNextView(0);
  v192 = *(_QWORD *)(View - 8);
  v14 = *(_QWORD *)(v192 + 64);
  __chkstk_darwin(View);
  v15 = (char *)&v186 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = sub_100047110(&qword_100832908);
  __chkstk_darwin(v210);
  v212 = (uint64_t)&v186 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = sub_100047110(&qword_100832910);
  __chkstk_darwin(v205);
  v207 = (char *)&v186 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = sub_100047110(&qword_100832778);
  v18 = __chkstk_darwin(v211);
  v208 = (char *)&v186 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = type metadata accessor for RedactionReasons(0, v18);
  v188 = *(_QWORD *)(v189 - 8);
  __chkstk_darwin(v189);
  v21 = (char *)&v186 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = sub_100047110(&qword_100832788);
  __chkstk_darwin(v203);
  v23 = (char *)&v186 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = sub_100047110(&qword_100832780);
  v187 = *(_QWORD *)(v204 - 8);
  __chkstk_darwin(v204);
  v25 = (char *)&v186 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = sub_100047110(&qword_100832918);
  v191 = *(_QWORD *)(v206 - 8);
  __chkstk_darwin(v206);
  v27 = (char *)&v186 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v190 = (char *)&v186 - v29;
  v30 = *(int *)(View + 28);
  v209 = a1;
  v31 = a1 + v30;
  Card = type metadata accessor for FitnessPlusUpNextCard(0);
  v37 = v31 + *(int *)(Card + 36);
  v38 = *(_QWORD *)v37;
  v39 = *(_QWORD *)(v37 + 8);
  v40 = *(unsigned __int8 *)(v37 + 16);
  if (!v40)
  {
    v73 = *(_BYTE *)(v209 + *(int *)(View + 40));
    sub_10004F8C8(v209, (uint64_t)&v186 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FitnessPlusUpNextView);
    v74 = *(unsigned __int8 *)(v192 + 80);
    v75 = (v74 + 24) & ~v74;
    v76 = swift_allocObject(&unk_10079E690, v75 + v14, v74 | 7);
    *(_QWORD *)(v76 + 16) = v38;
    sub_100047C88((uint64_t)v15, v76 + v75, type metadata accessor for FitnessPlusUpNextView);
    sub_1001B73B0(v38, v39, 0);
    swift_bridgeObjectRetain(v38);
    sub_1003EDDFC(v77, v73, (uint64_t)sub_1004195B8, v76, (uint64_t)&v226);
    v78 = v229;
    v79 = v207;
    *((_OWORD *)v207 + 2) = v228;
    *((_OWORD *)v79 + 3) = v78;
    *((_OWORD *)v79 + 4) = v230;
    v80 = v227;
    *(_OWORD *)v79 = v226;
    *((_OWORD *)v79 + 1) = v80;
    swift_storeEnumTagMultiPayload(v79, v205, 1);
    sub_100292E00(&v226);
    v81 = sub_100047110(&qword_1008327E0);
    v82 = sub_1003F6A30();
    v215 = v203;
    v216 = v82;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v215, &opaque type descriptor for <<opaque return type of View.containerRelativeFrame(_:alignment:)>>, 1);
    v215 = v204;
    v216 = OpaqueTypeConformance2;
    v84 = swift_getOpaqueTypeConformance2(&v215, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    v85 = sub_100028384(&qword_1008327D8, &qword_1008327E0, (uint64_t)&unk_100632628);
    v86 = (uint64_t)v208;
    _ConditionalContent<>.init(storage:)(v79, v206, v81, v84, v85);
    v87 = v212;
    sub_100021CC0(v86, v212, &qword_100832778);
    swift_storeEnumTagMultiPayload(v87, v210, 0);
    v88 = sub_1003F6954();
    v89 = sub_1003F6AD4();
    _ConditionalContent<>.init(storage:)(v87, v211, v213, v88, v89);
    sub_10001BE90(v86, &qword_100832778);
    return sub_1004195F8(&v226);
  }
  if (v40 == 1)
  {
    v41 = static HorizontalAlignment.center.getter(Card, v33, v34, v35, v36);
    sub_1003F5690((uint64_t)&v226);
    v42 = *((_QWORD *)&v226 + 1);
    v192 = v226;
    v43 = v227;
    LODWORD(v205) = BYTE1(v227);
    v204 = *((_QWORD *)&v227 + 1);
    v203 = v228;
    v44 = BYTE8(v228);
    v206 = v229;
    v45 = BYTE8(v229);
    v207 = (char *)*((_QWORD *)&v230 + 1);
    v208 = (char *)v230;
    v47 = static Edge.Set.all.getter(v46);
    v48 = v47;
    LOBYTE(v226) = 0;
    LOBYTE(v215) = v43;
    LOBYTE(v219[0]) = v44;
    LOBYTE(v218[0]) = v45;
    LOBYTE(v222) = 0;
    v49 = static Alignment.center.getter(v47);
    v51 = v50;
    v55 = static HorizontalAlignment.center.getter(v49, v50, v52, v53, v54);
    v56 = (uint64_t)v196;
    *v196 = v55;
    *(_QWORD *)(v56 + 8) = 0x4014000000000000;
    *(_BYTE *)(v56 + 16) = 0;
    v57 = sub_100047110(&qword_100832920);
    sub_1003F4E20(v209, (uint64_t *)(v56 + *(int *)(v57 + 44)));
    KeyPath = swift_getKeyPath(&unk_10063BB18);
    v59 = v194;
    sub_100021CC0(v56, v194, &qword_1008328F8);
    v60 = v59 + *(int *)(v193 + 36);
    *(_QWORD *)v60 = KeyPath;
    *(_BYTE *)(v60 + 8) = 1;
    sub_10001BE90(v56, &qword_1008328F8);
    v61 = v197;
    sub_100045AD4(v59, v197, &qword_100832900);
    v62 = (uint64_t *)(v61 + *(int *)(v195 + 36));
    *v62 = v49;
    v62[1] = v51;
    v63 = v198;
    sub_100021CC0(v61, (uint64_t)&v10[*(int *)(v198 + 36)], &qword_100832820);
    *(_QWORD *)v10 = v41;
    *((_QWORD *)v10 + 1) = 0;
    v10[16] = v226;
    *((_QWORD *)v10 + 3) = v192;
    *((_QWORD *)v10 + 4) = v42;
    v10[40] = v215;
    v10[41] = v205;
    v64 = v203;
    *((_QWORD *)v10 + 6) = v204;
    *((_QWORD *)v10 + 7) = v64;
    v10[64] = v219[0];
    *((_QWORD *)v10 + 9) = v206;
    v10[80] = v218[0];
    v65 = v207;
    *((_QWORD *)v10 + 11) = v208;
    *((_QWORD *)v10 + 12) = v65;
    v10[104] = v48;
    *((_OWORD *)v10 + 7) = xmmword_10063B9C0;
    *((_OWORD *)v10 + 8) = xmmword_10063B9C0;
    v10[144] = v222;
    sub_10001BE90(v61, &qword_100832820);
    v66 = v200;
    sub_100045AD4((uint64_t)v10, v200, &qword_100832800);
    v67 = v201;
    sub_100021CC0(v66, v201, &qword_100832800);
    swift_storeEnumTagMultiPayload(v67, v199, 0);
    v68 = sub_1003F6B38();
    v69 = (uint64_t)v202;
    v70 = v67;
    v71 = v63;
    v72 = v63;
  }
  else
  {
    if (__PAIR128__(v39, v38) < 2)
    {
      v91 = static Color.clear.getter(Card);
      sub_1003EF318((_QWORD *(*)(uint64_t *__return_ptr))sub_1003F1C68, 0, (void (*)(void))sub_1003F1CA0, 0, v91, (uint64_t)v23);
      v92 = swift_release(v91);
      v93 = static Axis.Set.horizontal.getter(v92);
      v94 = static Alignment.center.getter(v93);
      v96 = v95;
      v97 = sub_1003F6A30();
      v98 = v94;
      v99 = v203;
      View.containerRelativeFrame(_:alignment:)(v93, v98, v96, v203, v97);
      v100 = sub_10001BE90((uint64_t)v23, &qword_100832788);
      static RedactionReasons.placeholder.getter(v100);
      *(_QWORD *)&v226 = v99;
      *((_QWORD *)&v226 + 1) = v97;
      v101 = swift_getOpaqueTypeConformance2(&v226, &opaque type descriptor for <<opaque return type of View.containerRelativeFrame(_:alignment:)>>, 1);
      v102 = v204;
      View.redacted(reason:)(v21, v204, v101);
      (*(void (**)(char *, uint64_t))(v188 + 8))(v21, v189);
      (*(void (**)(char *, uint64_t))(v187 + 8))(v25, v102);
      v103 = v191;
      v104 = v190;
      v105 = v206;
      (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v190, v27, v206);
      v106 = v207;
      (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v207, v104, v105);
      swift_storeEnumTagMultiPayload(v106, v205, 0);
      v107 = sub_100047110(&qword_1008327E0);
      *(_QWORD *)&v226 = v102;
      *((_QWORD *)&v226 + 1) = v101;
      v108 = swift_getOpaqueTypeConformance2(&v226, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
      v109 = sub_100028384(&qword_1008327D8, &qword_1008327E0, (uint64_t)&unk_100632628);
      v110 = (uint64_t)v208;
      _ConditionalContent<>.init(storage:)(v106, v105, v107, v108, v109);
      v111 = v212;
      sub_100021CC0(v110, v212, &qword_100832778);
      swift_storeEnumTagMultiPayload(v111, v210, 0);
      v112 = sub_1003F6954();
      v113 = sub_1003F6AD4();
      _ConditionalContent<>.init(storage:)(v111, v211, v213, v112, v113);
      sub_10001BE90(v110, &qword_100832778);
      return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v104, v105);
    }
    result = (id)MobileGestalt_get_current_device();
    if (!result)
    {
      __break(1u);
      return result;
    }
    v114 = result;
    wapiCapability = MobileGestalt_get_wapiCapability();

    if (wapiCapability)
      v116 = 1312902231;
    else
      v116 = 1229343063;
    *(_QWORD *)&v226 = 0;
    *((_QWORD *)&v226 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease(*((CHWorkoutDetailHeartRateTableViewCell **)&v226 + 1), v117, v118, v119, v120, v121, v122, v123);
    *(_QWORD *)&v226 = 0xD000000000000017;
    *((_QWORD *)&v226 + 1) = 0x800000010069E860;
    v124._countAndFlagsBits = v116;
    v124._object = (void *)0xE400000000000000;
    String.append(_:)(v124);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE400000000000000, v125, v126, v127, v128, v129, v130, v131);
    v132._object = (void *)0x800000010069E880;
    v132._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v132);
    v133 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)&v226 + 1);
    v134 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v135 = String._bridgeToObjectiveC()();
    v136 = objc_msgSend(v134, "localizedStringForKey:value:table:", v135, 0, 0);

    v137 = static String._unconditionallyBridgeFromObjectiveC(_:)(v136);
    v139 = (CHWorkoutDetailHeartRateTableViewCell *)v138;
    swift_bridgeObjectRelease(v133, v138, v140, v141, v142, v143, v144, v145);

    v151 = static HorizontalAlignment.center.getter(v146, v147, v148, v149, v150);
    sub_1003F5690((uint64_t)&v226);
    v152 = *((_QWORD *)&v226 + 1);
    v191 = v226;
    LOBYTE(v136) = v227;
    LODWORD(v192) = BYTE1(v227);
    v204 = *((_QWORD *)&v227 + 1);
    v203 = v228;
    v153 = BYTE8(v228);
    v205 = v229;
    v154 = BYTE8(v229);
    v207 = (char *)*((_QWORD *)&v230 + 1);
    v208 = (char *)v230;
    v156 = static Edge.Set.all.getter(v155);
    LODWORD(v206) = v156;
    v225 = 0;
    v224 = (char)v136;
    v221 = v153;
    v220 = v154;
    v217 = 0;
    v157 = static Alignment.center.getter(v156);
    v159 = v158;
    v163 = static HorizontalAlignment.center.getter(v157, v158, v160, v161, v162);
    v164 = (uint64_t)v196;
    *v196 = v163;
    *(_QWORD *)(v164 + 8) = 0x4014000000000000;
    *(_BYTE *)(v164 + 16) = 0;
    v165 = sub_100047110(&qword_100832920);
    v166 = v139;
    sub_1003F5730(v137, v139, v209, (uint64_t *)(v164 + *(int *)(v165 + 44)));
    v167 = swift_getKeyPath(&unk_10063BB18);
    v168 = v194;
    sub_100021CC0(v164, v194, &qword_1008328F8);
    v169 = v168 + *(int *)(v193 + 36);
    *(_QWORD *)v169 = v167;
    *(_BYTE *)(v169 + 8) = 1;
    sub_10001BE90(v164, &qword_1008328F8);
    v170 = v197;
    sub_100045AD4(v168, v197, &qword_100832900);
    v171 = (uint64_t *)(v170 + *(int *)(v195 + 36));
    *v171 = v157;
    v171[1] = v159;
    v172 = v198;
    sub_100021CC0(v170, (uint64_t)&v10[*(int *)(v198 + 36)], &qword_100832820);
    *(_QWORD *)v10 = v151;
    *((_QWORD *)v10 + 1) = 0;
    v10[16] = v225;
    *(_DWORD *)(v10 + 17) = v226;
    *((_DWORD *)v10 + 5) = *(_DWORD *)((char *)&v226 + 3);
    *((_QWORD *)v10 + 3) = v191;
    *((_QWORD *)v10 + 4) = v152;
    v10[40] = v224;
    v10[41] = v192;
    *(_DWORD *)(v10 + 42) = v222;
    *((_WORD *)v10 + 23) = v223;
    v173 = v203;
    *((_QWORD *)v10 + 6) = v204;
    *((_QWORD *)v10 + 7) = v173;
    v10[64] = v221;
    *(_DWORD *)(v10 + 65) = v215;
    *((_DWORD *)v10 + 17) = *(_DWORD *)((char *)&v215 + 3);
    *((_QWORD *)v10 + 9) = v205;
    v10[80] = v220;
    *(_DWORD *)(v10 + 81) = v219[0];
    *((_DWORD *)v10 + 21) = *(_DWORD *)((char *)v219 + 3);
    v174 = v207;
    *((_QWORD *)v10 + 11) = v208;
    *((_QWORD *)v10 + 12) = v174;
    v10[104] = v206;
    LODWORD(v174) = v218[0];
    *((_DWORD *)v10 + 27) = *(_DWORD *)((char *)v218 + 3);
    *(_DWORD *)(v10 + 105) = (_DWORD)v174;
    *((_OWORD *)v10 + 7) = xmmword_10063B9C0;
    *((_OWORD *)v10 + 8) = xmmword_10063B9C0;
    v10[144] = v217;
    sub_10001BE90(v170, &qword_100832820);
    swift_bridgeObjectRelease(v166, v175, v176, v177, v178, v179, v180, v181);
    v66 = v200;
    sub_100045AD4((uint64_t)v10, v200, &qword_100832800);
    v182 = v201;
    sub_100021CC0(v66, v201, &qword_100832800);
    swift_storeEnumTagMultiPayload(v182, v199, 1);
    v68 = sub_1003F6B38();
    v69 = (uint64_t)v202;
    v70 = v182;
    v71 = v172;
    v72 = v172;
  }
  _ConditionalContent<>.init(storage:)(v70, v71, v72, v68, v68);
  v183 = v212;
  sub_100021CC0(v69, v212, &qword_1008327F0);
  swift_storeEnumTagMultiPayload(v183, v210, 1);
  v184 = sub_1003F6954();
  v185 = sub_1003F6AD4();
  _ConditionalContent<>.init(storage:)(v183, v211, v213, v184, v185);
  sub_10001BE90(v69, &qword_1008327F0);
  return (_QWORD *)sub_10001BE90(v66, &qword_100832800);
}

uint64_t sub_1003F4844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t View;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t OpaqueTypeConformance2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  View = type metadata accessor for FitnessPlusUpNextView(0);
  v7 = *(_QWORD *)(View - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(View);
  *(_QWORD *)a3 = static VerticalAlignment.center.getter(v9);
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  sub_100047110(&qword_100832950);
  v26 = a1;
  sub_10004F8C8(a2, (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FitnessPlusUpNextView);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = swift_allocObject(&unk_10079E6B8, v11 + v8, v10 | 7);
  sub_100047C88((uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, type metadata accessor for FitnessPlusUpNextView);
  swift_bridgeObjectRetain(a1);
  v13 = sub_100047110(&qword_100830B08);
  v14 = sub_100047110(&qword_100832958);
  v15 = sub_100028384(&qword_100832960, &qword_100830B08, (uint64_t)&protocol conformance descriptor for [A]);
  v16 = sub_100007050(&qword_100832968);
  v17 = sub_100007050(&qword_100832970);
  v18 = sub_1004196AC();
  v24 = v17;
  v25 = v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of View.containerRelativeFrame(_:alignment:)>>, 1);
  v24 = v16;
  v25 = OpaqueTypeConformance2;
  v20 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v21 = sub_1000083D8(&qword_1008329C0, (uint64_t (*)(uint64_t))&type metadata accessor for CatalogLockup, (uint64_t)&protocol conformance descriptor for CatalogLockup);
  return ForEach<>.init(_:content:)(&v26, sub_100419660, v12, v13, &type metadata for String, v14, v15, v20, v21);
}

uint64_t sub_1003F4A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t View;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t OpaqueTypeConformance2;
  uint64_t v30;
  __n128 v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];

  v33 = a2;
  v42 = a3;
  View = type metadata accessor for FitnessPlusUpNextView(0);
  v38 = *(_QWORD *)(View - 8);
  v40 = *(_QWORD *)(v38 + 64);
  __chkstk_darwin(View);
  v37 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CatalogLockup(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v35 = v6;
  v36 = v8;
  __chkstk_darwin(v6);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100832970);
  v34 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100047110(&qword_100832968);
  v41 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16.n128_f64[0] = sub_1003F0D24(a1, (uint64_t)v13);
  v17 = static Axis.Set.horizontal.getter(v16);
  v18 = static Alignment.center.getter(v17);
  v20 = v19;
  v21 = sub_1004196AC();
  View.containerRelativeFrame(_:alignment:)(v17, v18, v20, v11, v21);
  sub_10001BE90((uint64_t)v13, &qword_100832970);
  v22 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v35);
  v23 = v37;
  sub_10004F8C8(v33, v37, type metadata accessor for FitnessPlusUpNextView);
  v24 = *(unsigned __int8 *)(v7 + 80);
  v25 = (v24 + 16) & ~v24;
  v26 = *(unsigned __int8 *)(v38 + 80);
  v27 = (v36 + v26 + v25) & ~v26;
  v28 = swift_allocObject(&unk_10079E6E0, v27 + v40, v24 | v26 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v28 + v25, v10, v22);
  sub_100047C88(v23, v28 + v27, type metadata accessor for FitnessPlusUpNextView);
  v43[0] = v34;
  v43[1] = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v43, &opaque type descriptor for <<opaque return type of View.containerRelativeFrame(_:alignment:)>>, 1);
  v30 = v39;
  View.onTapGesture(count:perform:)(1, sub_100419960, v28, v39, OpaqueTypeConformance2);
  v31 = swift_release(v28);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v41 + 8))(v15, v30, v31);
}

uint64_t sub_1003F4CBC(uint64_t a1, uint64_t a2)
{
  uint64_t CardActionContext;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t View;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v14[4];
  _QWORD v15[3];
  uint64_t v16;

  CardActionContext = type metadata accessor for FitnessPlusUpNextCardActionContext(0);
  __chkstk_darwin(CardActionContext);
  v6 = (char *)&v14[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CatalogLockup(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a1, v7);
  View = type metadata accessor for FitnessPlusUpNextView(0);
  sub_100021CC0(a2 + *(int *)(View + 32), (uint64_t)v15, &qword_10081F600);
  if (v16)
  {
    v9 = sub_100016804(v15, v16);
    v10 = a2 + *(int *)(View + 28);
    v14[3] = CardActionContext;
    v11 = sub_10004C480(v14);
    sub_10004F8C8((uint64_t)v6, (uint64_t)v11, type metadata accessor for FitnessPlusUpNextCardActionContext);
    sub_10040BD48(v10, (uint64_t)v14, *v9, type metadata accessor for FitnessPlusUpNextCard, (uint64_t)&off_100792D50, (void (*)(_QWORD *, id))sub_10040EAB8);
    sub_100011F54((uint64_t)v6, type metadata accessor for FitnessPlusUpNextCardActionContext);
    sub_10001BE90((uint64_t)v14, (uint64_t *)&unk_100828420);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v15);
  }
  else
  {
    sub_100011F54((uint64_t)v6, type metadata accessor for FitnessPlusUpNextCardActionContext);
    return sub_10001BE90((uint64_t)v15, &qword_10081F600);
  }
}

void sub_1003F4E20(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  char v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  uint64_t v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  __n128 v35;
  double v36;
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  char v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  char v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  uint64_t v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  char v77;
  SEL v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t KeyPath;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  CHWorkoutDetailHeartRateTableViewCell *v114;
  CHWorkoutDetailHeartRateTableViewCell *v115;
  uint64_t v116;
  SEL v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  SEL v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  uint64_t *v131;
  int v132;
  CHWorkoutDetailHeartRateTableViewCell *v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  CHWorkoutDetailHeartRateTableViewCell *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t View;
  uint64_t v152;
  char v153;
  int v154[9];

  v143 = a1;
  v131 = a2;
  View = type metadata accessor for FitnessPlusUpNextView(0);
  v139 = *(_QWORD *)(View - 8);
  v140 = *(_QWORD *)(v139 + 64);
  __chkstk_darwin(View);
  v138 = (uint64_t)&v131 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_100047110(&qword_100820FE0);
  v147 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin(v149);
  v141 = (char *)&v131 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_100047110(&qword_100832A50);
  __chkstk_darwin(v145);
  v142 = (char *)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_100047110(&qword_100832A58);
  __chkstk_darwin(v148);
  v144 = (uint64_t)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_100047110(&qword_100832A60);
  __chkstk_darwin(v150);
  v146 = (uint64_t)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v152 = (uint64_t)&v131 - v8;
  v9 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000002BLL, 0x800000010069E900);
  v10 = Text.init(_:tableName:bundle:comment:)(v9);
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  v18 = static Font.title2.getter(v17);
  v20 = Text.font(_:)(v18, v10, v12, v16, v14, v19);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  swift_release(v18);
  v27 = v24 & 1;
  sub_1000E4458(v10, v12, v16);
  swift_bridgeObjectRelease(v14, v28, v29, v30, v31, v32, v33, v34);
  v36 = static Font.Weight.bold.getter(v35);
  v136 = Text.fontWeight(_:)(*(_QWORD *)&v36, 0, v20, v22, v27, v26);
  v135 = v37;
  v137 = v38;
  v134 = v39 & 1;
  sub_1000E4458(v20, v22, v27);
  swift_bridgeObjectRelease(v26, v40, v41, v42, v43, v44, v45, v46);
  v47 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000031, 0x800000010069E930);
  v48 = Text.init(_:tableName:bundle:comment:)(v47);
  v50 = v49;
  v52 = v51;
  v54 = v53 & 1;
  v56 = static Font.subheadline.getter(v55);
  v58 = Text.font(_:)(v56, v48, v50, v54, v52, v57);
  v60 = v59;
  LOBYTE(v16) = v61;
  v63 = v62;
  swift_release(v56);
  v64 = v16 & 1;
  sub_1000E4458(v48, v50, v54);
  swift_bridgeObjectRelease(v52, v65, v66, v67, v68, v69, v70, v71);
  v154[0] = static HierarchicalShapeStyle.secondary.getter(v72);
  v73 = Text.foregroundStyle<A>(_:)(v154, v58, v60, v64, v63, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v75 = v74;
  v133 = v76;
  v132 = v77 & 1;
  sub_1000E4458(v58, v60, v64);
  swift_bridgeObjectRelease(v63, v78, v79, v80, v81, v82, v83, v84);
  v85 = v143;
  v86 = v138;
  sub_10004F8C8(v143, v138, type metadata accessor for FitnessPlusUpNextView);
  v87 = *(unsigned __int8 *)(v139 + 80);
  v88 = (v87 + 16) & ~v87;
  v89 = swift_allocObject(&unk_10079E708, v88 + v140, v87 | 7);
  sub_100047C88(v86, v89 + v88, type metadata accessor for FitnessPlusUpNextView);
  v90 = v141;
  v91 = Button.init(action:label:)(sub_100419AD0, v89, sub_1003F55A0, 0, &type metadata for Text, &protocol witness table for Text);
  v92 = static Color.keyTint.getter(v91);
  KeyPath = swift_getKeyPath(&unk_10063BB70);
  v94 = v147;
  v95 = (uint64_t)v142;
  v96 = v149;
  (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v142, v90, v149);
  v97 = (uint64_t *)(v95 + *(int *)(v145 + 36));
  *v97 = KeyPath;
  v97[1] = v92;
  (*(void (**)(char *, uint64_t))(v94 + 8))(v90, v96);
  v98 = v85 + *(int *)(View + 28);
  LOBYTE(v98) = *(_BYTE *)(v98 + *(int *)(type metadata accessor for FitnessPlusUpNextCard(0) + 28));
  v99 = v144;
  sub_100021CC0(v95, v144, &qword_100832A50);
  *(_BYTE *)(v99 + *(int *)(v148 + 36)) = (v98 & 1) == 0;
  v100 = sub_10001BE90(v95, &qword_100832A50);
  LOBYTE(v98) = static Edge.Set.top.getter(v100);
  v101 = EdgeInsets.init(_all:)(5.0);
  v103 = v102;
  v105 = v104;
  v107 = v106;
  v108 = v146;
  sub_100021CC0(v99, v146, &qword_100832A58);
  v109 = v108 + *(int *)(v150 + 36);
  *(_BYTE *)v109 = v98;
  *(double *)(v109 + 8) = v101;
  *(_QWORD *)(v109 + 16) = v103;
  *(_QWORD *)(v109 + 24) = v105;
  *(_QWORD *)(v109 + 32) = v107;
  *(_BYTE *)(v109 + 40) = 0;
  sub_10001BE90(v99, &qword_100832A58);
  v110 = v152;
  sub_100045AD4(v108, v152, &qword_100832A60);
  LOBYTE(v95) = v134;
  v153 = v134;
  sub_100021CC0(v110, v108, &qword_100832A60);
  v111 = v136;
  v112 = v131;
  v113 = v135;
  *v131 = v136;
  v112[1] = v113;
  *((_BYTE *)v112 + 16) = v95;
  v114 = v137;
  v112[3] = (uint64_t)v137;
  v112[4] = v73;
  v112[5] = v75;
  LOBYTE(v85) = v132;
  *((_BYTE *)v112 + 48) = v132;
  v115 = v133;
  v112[7] = (uint64_t)v133;
  v116 = sub_100047110(&qword_100832A68);
  sub_100021CC0(v108, (uint64_t)v112 + *(int *)(v116 + 64), &qword_100832A60);
  sub_1000E439C(v111, v113, v95);
  swift_bridgeObjectRetain(v114);
  sub_1000E439C(v73, v75, v85);
  swift_bridgeObjectRetain(v115);
  sub_10001BE90(v152, &qword_100832A60);
  sub_10001BE90(v108, &qword_100832A60);
  sub_1000E4458(v73, v75, v85);
  swift_bridgeObjectRelease(v115, v117, v118, v119, v120, v121, v122, v123);
  sub_1000E4458(v111, v113, v153);
  swift_bridgeObjectRelease(v114, v124, v125, v126, v127, v128, v129, v130);
}

uint64_t sub_1003F54E4(uint64_t a1)
{
  uint64_t View;
  uint64_t *v3;
  uint64_t v4;
  _OWORD v6[2];
  _QWORD v7[3];
  uint64_t v8;

  View = type metadata accessor for FitnessPlusUpNextView(0);
  sub_100021CC0(a1 + *(int *)(View + 32), (uint64_t)v7, &qword_10081F600);
  if (!v8)
    return sub_10001BE90((uint64_t)v7, &qword_10081F600);
  v3 = sub_100016804(v7, v8);
  v4 = a1 + *(int *)(View + 28);
  memset(v6, 0, sizeof(v6));
  sub_10041482C(v4, (uint64_t)v6, *v3, type metadata accessor for FitnessPlusUpNextCard, (uint64_t)&off_100792D50, (void (*)(_QWORD *, id))sub_10040EAB8);
  sub_10001BE90((uint64_t)v6, (uint64_t *)&unk_100828420);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v7);
}

void sub_1003F55A0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  char v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  SEL v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;

  v2 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000002CLL, 0x800000010069E970);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  v11 = static Font.subheadline.getter(v10);
  v13 = Text.font(_:)(v11, v3, v5, v9, v7, v12);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_release(v11);
  sub_1000E4458(v3, v5, v9);
  swift_bridgeObjectRelease(v7, v20, v21, v22, v23, v24, v25, v26);
  *(_QWORD *)a1 = v13;
  *(_QWORD *)(a1 + 8) = v15;
  *(_BYTE *)(a1 + 16) = v17 & 1;
  *(_QWORD *)(a1 + 24) = v19;
}

double sub_1003F5690@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  double result;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  __int128 v15;

  v2 = static Color.clear.getter();
  v3 = static Color.clear.getter();
  v4 = static Alignment.center.getter(v3);
  _FrameLayout.init(width:height:alignment:)(&v11, 0, 1, 0x4045000000000000, 0, v4, v5);
  v6 = v11;
  v7 = v12;
  v8 = v13;
  v9 = v14;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0x3FFC71C71C71C71CLL;
  *(_WORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  result = *(double *)&v15;
  *(_OWORD *)(a1 + 64) = v15;
  return result;
}

void sub_1003F5730(uint64_t a1@<X0>, CHWorkoutDetailHeartRateTableViewCell *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  char v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  uint64_t v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  __n128 v47;
  double v48;
  uint64_t v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  char v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  CHWorkoutDetailHeartRateTableViewCell *v59;
  __n128 v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  CHWorkoutDetailHeartRateTableViewCell *v69;
  char v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  CHWorkoutDetailHeartRateTableViewCell *v80;
  SEL v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  CHWorkoutDetailHeartRateTableViewCell *v91;
  char v92;
  SEL v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t KeyPath;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  double v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  CHWorkoutDetailHeartRateTableViewCell *v124;
  uint64_t v125;
  uint64_t v126;
  CHWorkoutDetailHeartRateTableViewCell *v127;
  uint64_t *v128;
  uint64_t v129;
  SEL v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  SEL v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  uint64_t v144;
  char *v145;
  char *v146;
  int v147;
  uint64_t v148;
  CHWorkoutDetailHeartRateTableViewCell *v149;
  uint64_t v150;
  CHWorkoutDetailHeartRateTableViewCell *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;

  v162 = a3;
  v151 = a2;
  v152 = a1;
  v163 = a4;
  v159 = sub_100047110(&qword_100820FE0);
  v157 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v153 = (char *)&v144 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_100047110(&qword_100832A50);
  __chkstk_darwin(v155);
  v154 = (char *)&v144 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_100047110(&qword_100832A58);
  __chkstk_darwin(v160);
  v156 = (uint64_t)&v144 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_100047110(&qword_100832A60);
  __chkstk_darwin(v161);
  v158 = (uint64_t)&v144 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v164 = (uint64_t)&v144 - v9;
  v10 = type metadata accessor for Locale(0);
  v11 = __chkstk_darwin(v10);
  v146 = (char *)&v144 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0, v11);
  __chkstk_darwin(v13);
  v145 = (char *)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "localizedStringForKey:value:table:", v16, 0, 0);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v165 = v18;
  v166 = v20;
  v21 = sub_100038CA0();
  v22 = Text.init<A>(_:)(&v165, &type metadata for String, v21);
  v24 = v23;
  v26 = v25;
  v28 = v27 & 1;
  v30 = static Font.title2.getter(v29);
  v32 = Text.font(_:)(v30, v22, v24, v28, v26, v31);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  swift_release(v30);
  v39 = v36 & 1;
  sub_1000E4458(v22, v24, v28);
  swift_bridgeObjectRelease(v26, v40, v41, v42, v43, v44, v45, v46);
  v48 = static Font.Weight.bold.getter(v47);
  v150 = Text.fontWeight(_:)(*(_QWORD *)&v48, 0, v32, v34, v39, v38);
  v148 = v49;
  v149 = v50;
  v147 = v51 & 1;
  sub_1000E4458(v32, v34, v39);
  swift_bridgeObjectRelease(v38, v52, v53, v54, v55, v56, v57, v58);
  v59 = v151;
  v60 = swift_bridgeObjectRetain(v151);
  v61 = v145;
  v62 = String.LocalizationValue.init(_:)(v152, v59, v60);
  v63 = v146;
  static Locale.current.getter(v62);
  v165 = String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, 0, v63, 0, 0, 256);
  v166 = v64;
  v65 = Text.init<A>(_:)(&v165, &type metadata for String, v21);
  v67 = v66;
  v69 = v68;
  v71 = v70 & 1;
  v73 = static Font.subheadline.getter(v72);
  v75 = Text.font(_:)(v73, v65, v67, v71, v69, v74);
  v77 = v76;
  LOBYTE(v26) = v78;
  v80 = v79;
  swift_release(v73);
  LOBYTE(v22) = v26 & 1;
  sub_1000E4458(v65, v67, v71);
  swift_bridgeObjectRelease(v69, v81, v82, v83, v84, v85, v86, v87);
  LODWORD(v165) = static HierarchicalShapeStyle.secondary.getter(v88);
  v89 = Text.foregroundStyle<A>(_:)(&v165, v75, v77, v26 & 1, v80, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v152 = v90;
  v151 = v91;
  LODWORD(v146) = v92 & 1;
  sub_1000E4458(v75, v77, v22);
  swift_bridgeObjectRelease(v80, v93, v94, v95, v96, v97, v98, v99);
  v100 = v153;
  v101 = Button.init(action:label:)(sub_1003F5E64, 0, sub_1003F6010, 0, &type metadata for Text, &protocol witness table for Text);
  v102 = static Color.keyTint.getter(v101);
  KeyPath = swift_getKeyPath(&unk_10063BB70);
  v104 = v157;
  v105 = (uint64_t)v154;
  v106 = v159;
  (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v154, v100, v159);
  v107 = (uint64_t *)(v105 + *(int *)(v155 + 36));
  *v107 = KeyPath;
  v107[1] = v102;
  (*(void (**)(char *, uint64_t))(v104 + 8))(v100, v106);
  v108 = v162 + *(int *)(type metadata accessor for FitnessPlusUpNextView(0) + 28);
  LOBYTE(v108) = *(_BYTE *)(v108 + *(int *)(type metadata accessor for FitnessPlusUpNextCard(0) + 28));
  v109 = v156;
  sub_100021CC0(v105, v156, &qword_100832A50);
  *(_BYTE *)(v109 + *(int *)(v160 + 36)) = (v108 & 1) == 0;
  v110 = sub_10001BE90(v105, &qword_100832A50);
  LOBYTE(v108) = static Edge.Set.top.getter(v110);
  v111 = EdgeInsets.init(_all:)(5.0);
  v113 = v112;
  v115 = v114;
  v117 = v116;
  v118 = v158;
  sub_100021CC0(v109, v158, &qword_100832A58);
  v119 = v118 + *(int *)(v161 + 36);
  *(_BYTE *)v119 = v108;
  *(double *)(v119 + 8) = v111;
  *(_QWORD *)(v119 + 16) = v113;
  *(_QWORD *)(v119 + 24) = v115;
  *(_QWORD *)(v119 + 32) = v117;
  *(_BYTE *)(v119 + 40) = 0;
  sub_10001BE90(v109, &qword_100832A58);
  v120 = v164;
  sub_100045AD4(v118, v164, &qword_100832A60);
  LOBYTE(v73) = v147;
  LOBYTE(v165) = v147;
  sub_100021CC0(v120, v118, &qword_100832A60);
  v121 = v163;
  v122 = v150;
  v123 = v148;
  *v163 = v150;
  v121[1] = v123;
  *((_BYTE *)v121 + 16) = v73;
  v124 = v149;
  v121[3] = (uint64_t)v149;
  v121[4] = v89;
  v125 = v89;
  v126 = v152;
  v121[5] = v152;
  LOBYTE(KeyPath) = (_BYTE)v146;
  *((_BYTE *)v121 + 48) = (_BYTE)v146;
  v127 = v151;
  v121[7] = (uint64_t)v151;
  v128 = v121;
  v129 = sub_100047110(&qword_100832A68);
  sub_100021CC0(v118, (uint64_t)v128 + *(int *)(v129 + 64), &qword_100832A60);
  sub_1000E439C(v122, v123, v73);
  swift_bridgeObjectRetain(v124);
  sub_1000E439C(v125, v126, KeyPath);
  swift_bridgeObjectRetain(v127);
  sub_10001BE90(v164, &qword_100832A60);
  sub_10001BE90(v118, &qword_100832A60);
  sub_1000E4458(v125, v126, KeyPath);
  swift_bridgeObjectRelease(v127, v130, v131, v132, v133, v134, v135, v136);
  sub_1000E4458(v122, v123, v165);
  swift_bridgeObjectRelease(v124, v137, v138, v139, v140, v141, v142, v143);
}

id sub_1003F5E64()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id result;
  NSURL *v8;
  void *v9;
  void *v10;
  void *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  Class isa;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;

  v0 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v0);
  v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD000000000000028, 0x800000010069EA00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    return (id)sub_10001BE90((uint64_t)v2, &qword_10081E640);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (result)
  {
    v9 = result;
    URL._bridgeToObjectiveC()(v8);
    v11 = v10;
    v12 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435AC8((uint64_t)&_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v12, v14, v15, v16, v17, v18, v19, v20);
    objc_msgSend(v9, "openSensitiveURL:withOptions:", v11, isa);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003F6010@<X0>(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD v13[2];

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, 0, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v13[0] = v5;
  v13[1] = v7;
  v8 = sub_100038CA0();
  result = Text.init<A>(_:)(v13, &type metadata for String, v8);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v10;
  *(_BYTE *)(a1 + 16) = v11 & 1;
  *(_QWORD *)(a1 + 24) = v12;
  return result;
}

uint64_t sub_1003F60F8(uint64_t a1)
{
  int *View;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t Card;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t *v23;
  _OWORD v24[2];
  _QWORD v25[3];
  uint64_t v26;

  View = (int *)type metadata accessor for FitnessPlusUpNextView(0);
  v3 = *((_QWORD *)View - 1);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(View);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1 + View[7];
  Card = type metadata accessor for FitnessPlusUpNextCard(0);
  v11 = v9 + *(int *)(Card + 36);
  if (!*(_BYTE *)(v11 + 16))
  {
    v12 = *(_QWORD *)v11;
    v13 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
    sub_10004F8C8(a1, (uint64_t)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FitnessPlusUpNextView);
    v14 = *(unsigned __int8 *)(v3 + 80);
    v15 = (v14 + 40) & ~v14;
    v16 = (_QWORD *)swift_allocObject(&unk_10079E668, v15 + v4, v14 | 7);
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v12;
    sub_100047C88((uint64_t)v5, (uint64_t)v16 + v15, type metadata accessor for FitnessPlusUpNextView);
    swift_bridgeObjectRetain(v12);
    v17 = sub_10020D9C0((uint64_t)v8, (uint64_t)&unk_1008328E8, (uint64_t)v16);
    swift_release(v17);
  }
  v18 = a1 + View[6];
  v19 = *(_BYTE *)v18;
  v20 = *(_QWORD *)(v18 + 8);
  LOBYTE(v25[0]) = v19;
  v25[1] = v20;
  LOBYTE(v24[0]) = 1;
  v21 = sub_100047110(&qword_100820D80);
  result = State.wrappedValue.setter(v24, v21);
  if (*(_BYTE *)(v9 + *(int *)(Card + 40)) == 1 || *(_BYTE *)(v11 + 16) == 1)
  {
    sub_100021CC0(a1 + View[8], (uint64_t)v25, &qword_10081F600);
    if (v26)
    {
      v23 = sub_100016804(v25, v26);
      memset(v24, 0, sizeof(v24));
      sub_10040E8AC(v9, (uint64_t)v24, *v23, type metadata accessor for FitnessPlusUpNextCard, (void (*)(char *, char *))sub_10040EAB8);
      sub_10001BE90((uint64_t)v24, (uint64_t *)&unk_100828420);
      return _s10FitnessApp24HistoryViewActionContextVwxx_0(v25);
    }
    else
    {
      return sub_10001BE90((uint64_t)v25, &qword_10081F600);
    }
  }
  return result;
}

uint64_t sub_1003F6340(uint64_t a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[9];
  uint64_t v7;

  v1 = (char *)(a1 + *(int *)(type metadata accessor for FitnessPlusUpNextView(0) + 24));
  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 0;
  v4 = sub_100047110(&qword_100820D80);
  return State.wrappedValue.setter(v6, v4);
}

_QWORD *sub_1003F63A4(uint64_t a1)
{
  int *View;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  uint64_t *v9;
  _OWORD v10[2];
  _QWORD v11[3];
  uint64_t v12;

  View = (int *)type metadata accessor for FitnessPlusUpNextView(0);
  v3 = (char *)(a1 + View[6]);
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  LOBYTE(v11[0]) = v4;
  v11[1] = v5;
  v6 = sub_100047110(&qword_100820D80);
  result = State.wrappedValue.getter(v10, v6);
  if (LOBYTE(v10[0]) == 1)
  {
    v8 = a1 + View[7];
    result = (_QWORD *)type metadata accessor for FitnessPlusUpNextCard(0);
    if (*(_BYTE *)(v8 + *((int *)result + 10)) == 1)
    {
      sub_100021CC0(a1 + View[8], (uint64_t)v11, &qword_10081F600);
      if (v12)
      {
        v9 = sub_100016804(v11, v12);
        memset(v10, 0, sizeof(v10));
        sub_10040E8AC(v8, (uint64_t)v10, *v9, type metadata accessor for FitnessPlusUpNextCard, (void (*)(char *, char *))sub_10040EAB8);
        sub_10001BE90((uint64_t)v10, (uint64_t *)&unk_100828420);
        return (_QWORD *)_s10FitnessApp24HistoryViewActionContextVwxx_0(v11);
      }
      else
      {
        return (_QWORD *)sub_10001BE90((uint64_t)v11, &qword_10081F600);
      }
    }
  }
  return result;
}

double sub_1003F64B4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t View;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  View = type metadata accessor for FitnessPlusUpNextView(0);
  v6 = *(_QWORD *)(View - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(View);
  v8 = sub_100047110(&qword_10081E650);
  *(_QWORD *)&result = __chkstk_darwin(v8).n128_u64[0];
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*((_BYTE *)a2 + 16))
  {
    v12 = *a2;
    v13 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
    sub_10004F8C8(a3, (uint64_t)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FitnessPlusUpNextView);
    v14 = *(unsigned __int8 *)(v6 + 80);
    v15 = (v14 + 40) & ~v14;
    v16 = (_QWORD *)swift_allocObject(&unk_10079E5C8, v15 + v7, v14 | 7);
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v12;
    sub_100047C88((uint64_t)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v16 + v15, type metadata accessor for FitnessPlusUpNextView);
    swift_bridgeObjectRetain(v12);
    v17 = sub_10020D9C0((uint64_t)v11, (uint64_t)&unk_1008328C0, (uint64_t)v16);
    *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003F6608@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CatalogLockup.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1003F662C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B6EC8, 1);
}

uint64_t type metadata accessor for FitnessPlusUpNextView(uint64_t a1)
{
  uint64_t result;

  result = qword_100832D38;
  if (!qword_100832D38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FitnessPlusUpNextView);
  return result;
}

uint64_t sub_1003F667C()
{
  return sub_100419ADC(sub_1003F60F8);
}

uint64_t sub_1003F668C()
{
  uint64_t v0;
  int *View;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int *Card;
  _QWORD *v20;

  View = (int *)type metadata accessor for FitnessPlusUpNextView(0);
  v2 = *((_QWORD *)View - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v16 = (char *)v6 + View[5];
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)v16, v9, v10, v11, v12, v13, v14, v15);
  swift_release(*((_QWORD *)v16 + 1));
  swift_release(*(_QWORD *)((char *)v6 + View[6] + 8));
  v17 = (char *)v6 + View[7];
  v18 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  Card = (int *)type metadata accessor for FitnessPlusUpNextCard(0);
  sub_1000EB41C(*(_QWORD *)&v17[Card[5]], *(_QWORD *)&v17[Card[5] + 8], v17[Card[5] + 16]);
  sub_10027DC80(*(_QWORD *)&v17[Card[9]], *(_QWORD *)&v17[Card[9] + 8], v17[Card[9] + 16]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v17[Card[11]]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v17[Card[12]]);
  v20 = (_QWORD *)((char *)v6 + View[8]);
  if (v20[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v20);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1003F67E0()
{
  return sub_100419ADC(sub_1003F6340);
}

uint64_t sub_1003F67F0()
{
  return sub_100419ADC((uint64_t (*)(uint64_t))sub_1003F63A4);
}

uint64_t sub_1003F67FC()
{
  return sub_1003F6818(&qword_100832750, &qword_100832718, (void (*)(void))sub_1003F6884);
}

uint64_t sub_1003F6818(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100007050(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1003F6884()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100832758;
  if (!qword_100832758)
  {
    v1 = sub_100007050(&qword_100832710);
    sub_1003F68E8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100832758);
  }
  return result;
}

unint64_t sub_1003F68E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100832760;
  if (!qword_100832760)
  {
    v1 = sub_100007050(&qword_100832768);
    sub_1003F6954();
    sub_1003F6AD4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100832760);
  }
  return result;
}

unint64_t sub_1003F6954()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_100832770;
  if (!qword_100832770)
  {
    v1 = sub_100007050(&qword_100832778);
    v2 = sub_100007050(&qword_100832780);
    v4 = sub_100007050(&qword_100832788);
    v5 = sub_1003F6A30();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.containerRelativeFrame(_:alignment:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    sub_100028384(&qword_1008327D8, &qword_1008327E0, (uint64_t)&unk_100632628);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100832770);
  }
  return result;
}

unint64_t sub_1003F6A30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100832790;
  if (!qword_100832790)
  {
    v1 = sub_100007050(&qword_100832788);
    sub_1003F6D78(&qword_100832798, &qword_1008327A0, &qword_1008327A8, &qword_1008327B0);
    sub_100028384(&qword_1008327C8, &qword_1008327D0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100832790);
  }
  return result;
}

unint64_t sub_1003F6AD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008327E8;
  if (!qword_1008327E8)
  {
    v1 = sub_100007050(&qword_1008327F0);
    sub_1003F6B38();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008327E8);
  }
  return result;
}

unint64_t sub_1003F6B38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008327F8;
  if (!qword_1008327F8)
  {
    v1 = sub_100007050(&qword_100832800);
    sub_1003F6BBC();
    sub_100028384(&qword_100832818, &qword_100832820, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008327F8);
  }
  return result;
}

unint64_t sub_1003F6BBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100832808;
  if (!qword_100832808)
  {
    v1 = sub_100007050(&qword_100832810);
    sub_100028384(&qword_1008327A8, &qword_1008327B0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100832808);
  }
  return result;
}

double sub_1003F6C44(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FitnessPlusUpNextView(0) - 8) + 80);
  return sub_1003F64B4(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_1003F6C90()
{
  unint64_t result;

  result = qword_100832828;
  if (!qword_100832828)
  {
    result = swift_getWitnessTable(&unk_100644B28, &type metadata for FitnessPlusCardDataProvider.State);
    atomic_store(result, (unint64_t *)&qword_100832828);
  }
  return result;
}

unint64_t sub_1003F6CD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100832830;
  if (!qword_100832830)
  {
    v1 = sub_100007050(&qword_100832740);
    sub_1003F6D78(&qword_100832838, &qword_100832840, &qword_100832848, &qword_100832850);
    sub_100028384(&qword_100832858, &qword_100832860, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100832830);
  }
  return result;
}

uint64_t sub_1003F6D78(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100007050(a2);
    sub_100028384(a3, a4, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100028384(&qword_1008327B8, &qword_1008327C0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

double sub_1003F6E10@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1003F2DFC(a1).n128_u64[0];
  return result;
}

uint64_t sub_1003F6E18@<X0>(uint64_t a1@<X8>)
{
  return sub_1003F6E80(&qword_1008325D0, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_1003F6E4C@<X0>(uint64_t a1@<X8>)
{
  return sub_1003F6E80((uint64_t *)&unk_100832400, (uint64_t (*)(_QWORD))&type metadata accessor for DismissAction, 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_1003F6E80@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v21;
  os_log_type_t v22;
  NSObject *v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100021CC0(v9, (uint64_t)v17, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v15);
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v19 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a5, v17, v19);
  }
  else
  {
    v21 = *v17;
    v22 = static os_log_type_t.fault.getter(EnumCaseMultiPayload);
    v23 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v23, v22))
    {
      v29 = a4;
      v24 = swift_slowAlloc(12, -1);
      v30 = a5;
      v25 = (uint8_t *)v24;
      v26 = swift_slowAlloc(32, -1);
      v33 = v26;
      *(_DWORD *)v25 = 136315138;
      v32 = sub_10003E8EC(v31, v29, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v25 + 4);
      _os_log_impl((void *)&_mh_execute_header, v23, v22, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v14, v21);
    v27 = swift_release(v21);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v27);
  }
}

id sub_1003F70B8(void *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v15 = a1;
  v3 = type metadata accessor for EnvironmentValues(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return v15;
  swift_retain(v15);
  v8 = static os_log_type_t.fault.getter(v7);
  v9 = static Log.runtimeIssuesLog.getter();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v17 = v12;
    *(_DWORD *)v11 = 136315138;
    v16 = sub_10003E8EC(0xD000000000000013, 0x800000010068CB00, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v11 + 4);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v6, v15);
  sub_10010C5EC(v15, 0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (id)v17;
}

uint64_t sub_1003F7298@<X0>(uint64_t a1@<X8>)
{
  return sub_1003F6E80(&qword_1008251E0, (uint64_t (*)(_QWORD))&type metadata accessor for Calendar, 0x7261646E656C6143, 0xE800000000000000, a1);
}

id sub_1003F72C0(void *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a1;
  v3 = type metadata accessor for EnvironmentValues(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return v19;
  swift_retain(v19);
  v8 = static os_log_type_t.fault.getter(v7);
  v9 = static Log.runtimeIssuesLog.getter();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v21 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = sub_10001E724(0, (unint64_t *)&qword_100836600, FIUIFormattingManager_ptr);
    v14 = _typeName(_:qualified:)(v13, 0);
    v16 = v15;
    v20 = sub_10003E8EC(v14, v15, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v11 + 4);
    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v6, v19);
  sub_10010C5EC(v19, 0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (id)v21;
}

uint64_t sub_1003F74B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1003F6E80(&qword_100830DE8, (uint64_t (*)(_QWORD))&type metadata accessor for WorkoutAnimationStyle, 0xD000000000000015, 0x800000010069EA30, a1);
}

uint64_t sub_1003F74E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1003F6E80(&qword_100828058, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

void sub_1003F7514(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, *(_QWORD *)(a3 + 40));
  __asm { BR              X10 }
}

unint64_t sub_1003F7580()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  Swift::Int v3;
  unint64_t result;
  uint64_t v5;

  String.hash(into:)(&v5, 0xD000000000000012, 0x80000001006879F0);
  swift_bridgeObjectRelease(0x80000001006879F0);
  v3 = Hasher._finalize()();
  result = _HashTable.nextHole(atOrAfter:)(v3 & ~(-1 << *(_BYTE *)(v0 + 32)), v0 + 64, ~(-1 << *(_BYTE *)(v0 + 32)));
  *(_QWORD *)(v0 + 64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_BYTE *)(*(_QWORD *)(v0 + 48) + result) = v2;
  *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * result) = v1;
  ++*(_QWORD *)(v0 + 16);
  return result;
}

uint64_t sub_1003F7664(uint64_t a1, uint64_t a2, unsigned int a3, __int128 *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD v17[9];

  Hasher.init(_seed:)(v17, *(_QWORD *)(a5 + 40));
  sub_10054FFE4(a1, a2, a3);
  v11 = v10;
  String.hash(into:)(v17, v12, v10);
  swift_bridgeObjectRelease(v11);
  if (!(_BYTE)a3 || a3 == 2)
  {
    Hasher._combine(_:)(a1);
  }
  else if (a3 == 1)
  {
    String.hash(into:)(v17, a1, a2);
  }
  Hasher._combine(_:)((a3 >> 8) & 1);
  v13 = Hasher._finalize()();
  v14 = _HashTable.nextHole(atOrAfter:)(v13 & ~(-1 << *(_BYTE *)(a5 + 32)), a5 + 64, ~(-1 << *(_BYTE *)(a5 + 32)));
  *(_QWORD *)(a5 + 64 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
  v15 = *(_QWORD *)(a5 + 48) + 24 * v14;
  *(_QWORD *)v15 = a1;
  *(_QWORD *)(v15 + 8) = a2;
  *(_BYTE *)(v15 + 16) = a3;
  *(_BYTE *)(v15 + 17) = BYTE1(a3) & 1;
  result = sub_10002411C(a4, *(_QWORD *)(a5 + 56) + 40 * v14);
  ++*(_QWORD *)(a5 + 16);
  return result;
}

void sub_1003F77B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  Swift::UInt v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;
  uint64_t v44[9];

  v3 = v2;
  v6 = type metadata accessor for MetricDetailViewModel(0);
  v42 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_100047110(&qword_100832DB8);
  v43 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (*(_QWORD *)(v9 + 16))
  {
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v41 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v39 = v3;
    v40 = (unint64_t)(v14 + 63) >> 6;
    v17 = v10 + 64;
    while (1)
    {
      if (v16)
      {
        v24 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v25 = v24 | (v12 << 6);
      }
      else
      {
        v26 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          return;
        }
        if (v26 >= v40)
          goto LABEL_38;
        v27 = v41[v26];
        ++v12;
        if (!v27)
        {
          v12 = v26 + 1;
          if (v26 + 1 >= v40)
            goto LABEL_38;
          v27 = v41[v12];
          if (!v27)
          {
            v28 = v26 + 2;
            if (v28 >= v40)
            {
LABEL_38:
              if ((v43 & 1) == 0)
              {
                swift_release(v9);
                v3 = v39;
                goto LABEL_45;
              }
              v38 = 1 << *(_BYTE *)(v9 + 32);
              if (v38 >= 64)
                bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v41 = -1 << v38;
              v3 = v39;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v27 = v41[v28];
            if (!v27)
            {
              while (1)
              {
                v12 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_47;
                if (v12 >= v40)
                  goto LABEL_38;
                v27 = v41[v12];
                ++v28;
                if (v27)
                  goto LABEL_32;
              }
            }
            v12 = v28;
          }
        }
LABEL_32:
        v16 = (v27 - 1) & v27;
        v25 = __clz(__rbit64(v27)) + (v12 << 6);
      }
      v33 = *(_QWORD *)(v9 + 48) + 16 * v25;
      v34 = *(_QWORD *)v33;
      v35 = *(_BYTE *)(v33 + 8);
      v36 = *(_QWORD *)(v42 + 72);
      v37 = *(_QWORD *)(v9 + 56) + v36 * v25;
      if ((v43 & 1) != 0)
        sub_100047C88(v37, (uint64_t)v8, type metadata accessor for MetricDetailViewModel);
      else
        sub_10004F8C8(v37, (uint64_t)v8, type metadata accessor for MetricDetailViewModel);
      Hasher.init(_seed:)(v44, *(_QWORD *)(v11 + 40));
      if ((v35 & 1) == 0)
        Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(v34);
      v18 = Hasher._finalize()();
      v19 = -1 << *(_BYTE *)(v11 + 32);
      v20 = v18 & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v17 + 8 * (v20 >> 6))) != 0)
      {
        v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v17 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_46;
          }
          v31 = v21 == v30;
          if (v21 == v30)
            v21 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v17 + 8 * v21);
        }
        while (v32 == -1);
        v22 = __clz(__rbit64(~v32)) + (v21 << 6);
      }
      *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      v23 = *(_QWORD *)(v11 + 48) + 16 * v22;
      *(_QWORD *)v23 = v34;
      *(_BYTE *)(v23 + 8) = v35;
      sub_100047C88((uint64_t)v8, *(_QWORD *)(v11 + 56) + v36 * v22, type metadata accessor for MetricDetailViewModel);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  swift_release(v9);
LABEL_45:
  *v3 = v11;
}

void sub_1003F7B24(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  char v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832C48);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v3;
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v38 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v38 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v37;
          if ((v39 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v38 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v22);
    v32 = *(_QWORD *)(v5 + 56) + 16 * v22;
    v33 = *(void **)v32;
    v34 = *(_BYTE *)(v32 + 8);
    if ((v39 & 1) == 0)
    {
      v35 = v31;
      sub_10010C5D0(v33, v34);
    }
    v15 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19) = v31;
    v20 = *(_QWORD *)(v8 + 56) + 16 * v19;
    *(_QWORD *)v20 = v33;
    *(_BYTE *)(v20 + 8) = v34;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v37;
  v24 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1003F7E14(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  Swift::UInt v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  uint64_t v35[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_1008328E0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = v3;
    v9 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v21 >= v33)
          goto LABEL_36;
        v22 = v34[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_36;
          v22 = v34[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release(v5);
                v3 = v32;
                goto LABEL_43;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v31;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v34[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_45;
                if (v9 >= v33)
                  goto LABEL_36;
                v22 = v34[v9];
                ++v23;
                if (v22)
                  goto LABEL_33;
              }
            }
            v9 = v23;
          }
        }
LABEL_33:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = *(_QWORD *)(v5 + 56);
      v29 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v20);
      v30 = *(_QWORD *)(v28 + 8 * v20);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain(*(_QWORD *)(v28 + 8 * v20));
      Hasher.init(_seed:)(v35, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v29);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v30;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_43:
  *v3 = v8;
}

void sub_1003F80E4(uint64_t a1, uint64_t a2)
{
  sub_1003FAED0(a1, a2, &qword_100832CD8);
}

void sub_1003F80F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832CD0);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_46;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_25;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      return;
    }
    if (v18 >= v41)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v42 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v41)
        goto LABEL_39;
      v20 = *(_QWORD *)(v42 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v41)
        {
LABEL_39:
          swift_release(v5);
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_46;
          goto LABEL_42;
        }
        v20 = *(_QWORD *)(v42 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_48;
            if (v13 >= v41)
              goto LABEL_39;
            v20 = *(_QWORD *)(v42 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_24;
          }
        }
        v13 = v21;
      }
    }
LABEL_24:
    v11 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_25:
    v22 = *(_QWORD *)(v5 + 48) + 16 * v17;
    v23 = *(void **)v22;
    v24 = *(void **)(v22 + 8);
    v25 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v17);
    if ((v43 & 1) == 0)
    {
      v26 = v25;
      v27 = v23;
      v28 = v24;
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
    v29 = v23;
    NSObject.hash(into:)(v44);

    if (v24)
    {
      Hasher._combine(_:)(1u);
      v30 = v24;
      NSObject.hash(into:)(v44);

    }
    else
    {
      Hasher._combine(_:)(0);
    }
    v31 = Hasher._finalize()();
    v32 = -1 << *(_BYTE *)(v8 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v12 + 8 * (v33 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v12 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_47;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v12 + 8 * v34);
      }
      while (v38 == -1);
      v14 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
    *v15 = v29;
    v15[1] = v24;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v25;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v19 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_46;
LABEL_42:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v19, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_46:
  swift_release(v5);
  *v3 = v8;
}

void sub_1003F8430(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  uint64_t v43;
  char v44;
  _QWORD v45[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832B08);
  v44 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v43 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v41 = v3;
  v42 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_34;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v42)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v43 + 8 * v24);
    ++v13;
    if (!v26)
    {
      v13 = v24 + 1;
      if (v24 + 1 >= v42)
        goto LABEL_36;
      v26 = *(_QWORD *)(v43 + 8 * v13);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v42)
        {
LABEL_36:
          swift_release(v5);
          v3 = v41;
          if ((v44 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v43 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v13 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v13 >= v42)
              goto LABEL_36;
            v26 = *(_QWORD *)(v43 + 8 * v13);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v13 = v27;
      }
    }
LABEL_33:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_34:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v36 = *(_QWORD *)(v5 + 56) + v32;
    v38 = *(void **)v36;
    v37 = *(_QWORD *)(v36 + 8);
    if ((v44 & 1) == 0)
    {
      swift_bridgeObjectRetain(v33[1]);
      v39 = v38;
    }
    Hasher.init(_seed:)(v45, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v45, v35, v34);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v17 == v29;
        if (v17 == v29)
          v17 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v35;
    v20[1] = v34;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v38;
    v21[1] = v37;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v41;
  v25 = (_QWORD *)(v5 + 64);
  if ((v44 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v40 = 1 << *(_BYTE *)(v5 + 32);
  if (v40 >= 64)
    bzero(v25, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v40;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1003F8750(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832CC8);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v3;
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v22);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain(v31[1]);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v33, v32);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1003F8A54(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  Swift::UInt v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char v34;
  uint64_t v35[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832CC0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = a2;
    v33 = v3;
    v9 = 0;
    v10 = (_QWORD *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v19 >= v14)
          goto LABEL_34;
        v20 = v10[v19];
        ++v9;
        if (!v20)
        {
          v9 = v19 + 1;
          if (v19 + 1 >= v14)
            goto LABEL_34;
          v20 = v10[v9];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v14)
            {
LABEL_34:
              if ((v34 & 1) == 0)
              {
                swift_release(v5);
                v3 = v33;
                goto LABEL_41;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v10 = -1 << v32;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v10[v21];
            if (!v20)
            {
              while (1)
              {
                v9 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_43;
                if (v9 >= v14)
                  goto LABEL_34;
                v20 = v10[v9];
                ++v21;
                if (v20)
                  goto LABEL_24;
              }
            }
            v9 = v21;
          }
        }
LABEL_24:
        v13 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      v22 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v18);
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      Hasher.init(_seed:)(v35, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v22);
      v24 = Hasher._finalize()();
      v25 = -1 << *(_BYTE *)(v8 + 32);
      v26 = v24 & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        v16 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v16) = v22;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v16) = v23;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_41:
  *v3 = v8;
}

void sub_1003F8D1C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832AF0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_28:
    swift_release(v5);
    goto LABEL_29;
  }
  v19 = v3;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v8 + 63) >> 6;
  swift_retain(v5);
  if (v11)
  {
    v13 = __clz(__rbit64(v11));
    goto LABEL_21;
  }
  if (v12 > 1)
  {
    v14 = *(_QWORD *)(v5 + 72);
    v15 = 1;
    if (v14)
      goto LABEL_20;
    v15 = 2;
    if (v12 <= 2)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 80);
    if (v14)
    {
LABEL_20:
      v13 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_21:
      v17 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v13);
      Hasher.init(_seed:)(v20, *(_QWORD *)(v7 + 40));
      __asm { BR              X8 }
    }
    v16 = 3;
    if (v12 > 3)
    {
      v14 = *(_QWORD *)(v5 + 88);
      if (v14)
      {
        v15 = 3;
        goto LABEL_20;
      }
      while (1)
      {
        v15 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
          __break(1u);
          JUMPOUT(0x1003F912CLL);
        }
        if (v15 >= v12)
          break;
        v14 = v9[v15];
        ++v16;
        if (v14)
          goto LABEL_20;
      }
    }
  }
LABEL_22:
  swift_release(v5);
  if ((a2 & 1) != 0)
  {
    v18 = 1 << *(_BYTE *)(v5 + 32);
    if (v18 >= 64)
      bzero((void *)(v5 + 64), ((unint64_t)(v18 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v9 = -1 << v18;
    v3 = v19;
    *(_QWORD *)(v5 + 16) = 0;
    goto LABEL_28;
  }
  swift_release(v5);
  v3 = v19;
LABEL_29:
  *v3 = v7;
}

void sub_1003F915C(uint64_t a1, uint64_t a2)
{
  sub_1003FAED0(a1, a2, &qword_100832B60);
}

uint64_t sub_1003F9168(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832CB0);
  result = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v38 = a2;
    v37 = v3;
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v35 = -1 << v11;
    v36 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
        if (v20 >= v14)
          goto LABEL_37;
        v21 = v10[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v14)
            goto LABEL_37;
          v21 = v10[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_37:
              if ((v38 & 1) == 0)
              {
                result = swift_release(v5);
                v3 = v37;
                goto LABEL_44;
              }
              if (v36 >= 64)
                bzero((void *)(v5 + 64), 8 * v14);
              else
                *v10 = v35;
              v3 = v37;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v10[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_46;
                if (v9 >= v14)
                  goto LABEL_37;
                v21 = v10[v9];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v9 = v22;
          }
        }
LABEL_24:
        v13 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v23 = 8 * v19;
      v24 = *(_QWORD *)(v5 + 48);
      v25 = *(_QWORD *)(v24 + v23);
      v26 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v23);
      if ((v25 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v27 = *(_QWORD *)(v24 + v23);
      else
        v27 = 0;
      result = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v27);
      v28 = -1 << *(_BYTE *)(v8 + 32);
      v29 = result & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v15 + 8 * v30);
        }
        while (v34 == -1);
        v16 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v17) = v25;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v17) = v26;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
LABEL_44:
  *v3 = v8;
  return result;
}

Swift::Int sub_1003F9410(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  Swift::Int v5;
  uint64_t v6;
  Swift::Int result;
  Swift::Int v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  Swift::Int v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  Swift::UInt v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  Swift::Int *v35;
  char v36;
  uint64_t v37[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832CA0);
  result = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v36 = a2;
    v35 = v3;
    v9 = 0;
    v10 = (_QWORD *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v20 >= v14)
          goto LABEL_34;
        v21 = v10[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v14)
            goto LABEL_34;
          v21 = v10[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_34:
              if ((v36 & 1) == 0)
              {
                result = swift_release(v5);
                v3 = v35;
                goto LABEL_41;
              }
              v34 = 1 << *(_BYTE *)(v5 + 32);
              if (v34 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v10 = -1 << v34;
              v3 = v35;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v10[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v9 >= v14)
                  goto LABEL_34;
                v21 = v10[v9];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v9 = v22;
          }
        }
LABEL_24:
        v13 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v23 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v19);
      v24 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      v26 = *v24;
      v25 = v24[1];
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v23);
      result = Hasher._finalize()();
      v27 = -1 << *(_BYTE *)(v8 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v15 + 8 * v29);
        }
        while (v33 == -1);
        v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v16) = v23;
      v17 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v16);
      *v17 = v26;
      v17[1] = v25;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
LABEL_41:
  *v3 = v8;
  return result;
}

Swift::Int sub_1003F96E0(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  Swift::Int v5;
  uint64_t v6;
  Swift::Int result;
  Swift::Int v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  Swift::Int v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  Swift::UInt v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  Swift::Int *v37;
  _QWORD *v38;
  uint64_t v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832CA8);
  result = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v37 = v3;
    v9 = 0;
    v38 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v13)
          goto LABEL_34;
        v20 = v38[v19];
        ++v9;
        if (!v20)
        {
          v9 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_34;
          v20 = v38[v9];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                result = swift_release(v5);
                v3 = v37;
                goto LABEL_41;
              }
              v36 = 1 << *(_BYTE *)(v5 + 32);
              if (v36 >= 64)
                bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v38 = -1 << v36;
              v3 = v37;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v38[v21];
            if (!v20)
            {
              while (1)
              {
                v9 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_43;
                if (v9 >= v13)
                  goto LABEL_34;
                v20 = v38[v9];
                ++v21;
                if (v20)
                  goto LABEL_24;
              }
            }
            v9 = v21;
          }
        }
LABEL_24:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      v22 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v18);
      v23 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 40 * v18);
      v25 = v23[3];
      v24 = v23[4];
      v27 = v23[1];
      v26 = v23[2];
      v28 = *v23;
      Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v22);
      result = Hasher._finalize()();
      v29 = -1 << *(_BYTE *)(v8 + 32);
      v30 = result & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v14 + 8 * (v30 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v14 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v32 = 0;
        v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v34 = v31 == v33;
          if (v31 == v33)
            v31 = 0;
          v32 |= v34;
          v35 = *(_QWORD *)(v14 + 8 * v31);
        }
        while (v35 == -1);
        v15 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v15) = v22;
      v16 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 40 * v15);
      *v16 = v28;
      v16[1] = v27;
      v16[2] = v26;
      v16[3] = v25;
      v16[4] = v24;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
LABEL_41:
  *v3 = v8;
  return result;
}

void sub_1003F99D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  Swift::UInt v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  char v37;
  uint64_t v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832DA8);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 0;
    v36 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          return;
        }
        if (v22 >= v35)
          goto LABEL_38;
        v23 = v36[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v35)
            goto LABEL_38;
          v23 = v36[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_38:
              if ((v37 & 1) == 0)
              {
                swift_release(v5);
                v3 = v34;
                goto LABEL_45;
              }
              v33 = 1 << *(_BYTE *)(v5 + 32);
              if (v33 >= 64)
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v36 = -1 << v33;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_47;
                if (v9 >= v35)
                  goto LABEL_38;
                v23 = v36[v9];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v9 = v24;
          }
        }
LABEL_33:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(_QWORD *)(v5 + 48) + 16 * v21;
      v30 = *(_QWORD *)v29;
      v31 = *(_BYTE *)(v29 + 8);
      v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
      if ((v37 & 1) == 0)
        swift_bridgeObjectRetain(v32);
      Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
      if ((v31 & 1) == 0)
        Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(v30);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_46;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = *(_QWORD *)(v8 + 48) + 16 * v18;
      *(_QWORD *)v19 = v30;
      *(_BYTE *)(v19 + 8) = v31;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v32;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_45:
  *v3 = v8;
}

void sub_1003F9CD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  Swift::UInt v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  uint64_t v45[9];

  v7 = v4;
  v10 = a3(0);
  v43 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - v11;
  v13 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  sub_100047110(a4);
  v44 = a2;
  v14 = static _DictionaryStorage.resize(original:capacity:move:)(v13, a1, a2);
  v15 = v14;
  if (*(_QWORD *)(v13 + 16))
  {
    v16 = 0;
    v17 = *(_QWORD *)(v13 + 64);
    v42 = (_QWORD *)(v13 + 64);
    v18 = 1 << *(_BYTE *)(v13 + 32);
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v20 = v19 & v17;
    v40 = v7;
    v41 = (unint64_t)(v18 + 63) >> 6;
    v21 = v14 + 64;
    while (1)
    {
      if (v20)
      {
        v23 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        v24 = v23 | (v16 << 6);
      }
      else
      {
        v25 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v25 >= v41)
          goto LABEL_36;
        v26 = v42[v25];
        ++v16;
        if (!v26)
        {
          v16 = v25 + 1;
          if (v25 + 1 >= v41)
            goto LABEL_36;
          v26 = v42[v16];
          if (!v26)
          {
            v27 = v25 + 2;
            if (v27 >= v41)
            {
LABEL_36:
              if ((v44 & 1) == 0)
              {
                swift_release(v13);
                v7 = v40;
                goto LABEL_43;
              }
              v39 = 1 << *(_BYTE *)(v13 + 32);
              if (v39 >= 64)
                bzero(v42, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v42 = -1 << v39;
              v7 = v40;
              *(_QWORD *)(v13 + 16) = 0;
              break;
            }
            v26 = v42[v27];
            if (!v26)
            {
              while (1)
              {
                v16 = v27 + 1;
                if (__OFADD__(v27, 1))
                  goto LABEL_45;
                if (v16 >= v41)
                  goto LABEL_36;
                v26 = v42[v16];
                ++v27;
                if (v26)
                  goto LABEL_23;
              }
            }
            v16 = v27;
          }
        }
LABEL_23:
        v20 = (v26 - 1) & v26;
        v24 = __clz(__rbit64(v26)) + (v16 << 6);
      }
      v28 = *(unsigned __int8 *)(*(_QWORD *)(v13 + 48) + v24);
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(_QWORD *)(v13 + 56) + v29 * v24;
      if ((v44 & 1) != 0)
        sub_100047C88(v30, (uint64_t)v12, a3);
      else
        sub_10004F8C8(v30, (uint64_t)v12, a3);
      Hasher.init(_seed:)(v45, *(_QWORD *)(v15 + 40));
      Hasher._combine(_:)(v28);
      v31 = Hasher._finalize()();
      v32 = -1 << *(_BYTE *)(v15 + 32);
      v33 = v31 & ~v32;
      v34 = v33 >> 6;
      if (((-1 << v33) & ~*(_QWORD *)(v21 + 8 * (v33 >> 6))) != 0)
      {
        v22 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v21 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v35 = 0;
        v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v37 = v34 == v36;
          if (v34 == v36)
            v34 = 0;
          v35 |= v37;
          v38 = *(_QWORD *)(v21 + 8 * v34);
        }
        while (v38 == -1);
        v22 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(_QWORD *)(v21 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_BYTE *)(*(_QWORD *)(v15 + 48) + v22) = v28;
      sub_100047C88((uint64_t)v12, *(_QWORD *)(v15 + 56) + v29 * v22, a3);
      ++*(_QWORD *)(v15 + 16);
    }
  }
  swift_release(v13);
LABEL_43:
  *v7 = v15;
}

void sub_1003FA00C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  void *v20;
  id v21;
  uint64_t v22;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832C98);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    v10 = -1;
    if (v8 < 64)
      v10 = ~(-1 << v8);
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return;
        }
        if (v16 >= v12)
          goto LABEL_25;
        v17 = v9[v16];
        ++v13;
        if (!v17)
        {
          v13 = v16 + 1;
          if (v16 + 1 >= v12)
            goto LABEL_25;
          v17 = v9[v13];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v12)
            {
LABEL_25:
              swift_release(v5);
              if ((a2 & 1) != 0)
              {
                v22 = 1 << *(_BYTE *)(v5 + 32);
                if (v22 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v22;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v9[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_32;
                if (v13 >= v12)
                  goto LABEL_25;
                v17 = v9[v13];
                ++v18;
                if (v17)
                  goto LABEL_22;
              }
            }
            v13 = v18;
          }
        }
LABEL_22:
        v11 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v15);
      v20 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0)
        v21 = v20;
      sub_1003F7514(v19, (uint64_t)v20, v7);
    }
  }
  swift_release(v5);
  *v3 = v7;
}

void sub_1003FA1E8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832B68);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      swift_bridgeObjectRetain(v33);
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1003FA4FC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  char v42;
  _QWORD v43[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832AA0);
  v42 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v39 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v41 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v40 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v22 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v23 = v22 | (v13 << 6);
      }
      else
      {
        v24 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v24 >= v40)
          goto LABEL_36;
        v25 = v41[v24];
        ++v13;
        if (!v25)
        {
          v13 = v24 + 1;
          if (v24 + 1 >= v40)
            goto LABEL_36;
          v25 = v41[v13];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v40)
            {
LABEL_36:
              swift_release(v5);
              v3 = v39;
              if ((v42 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v5 + 32);
                if (v38 >= 64)
                  bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v41 = -1 << v38;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v25 = v41[v26];
            if (!v25)
            {
              while (1)
              {
                v13 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_43;
                if (v13 >= v40)
                  goto LABEL_36;
                v25 = v41[v13];
                ++v26;
                if (v25)
                  goto LABEL_33;
              }
            }
            v13 = v26;
          }
        }
LABEL_33:
        v11 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v13 << 6);
      }
      v31 = 16 * v23;
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
      v34 = *v32;
      v33 = v32[1];
      v35 = *(_QWORD *)(v5 + 56) + v31;
      v36 = *(void **)v35;
      v37 = *(_BYTE *)(v35 + 8);
      if ((v42 & 1) == 0)
      {
        swift_bridgeObjectRetain(v32[1]);
        sub_10010C5D0(v36, v37);
      }
      Hasher.init(_seed:)(v43, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v43, v34, v33);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v29 = v17 == v28;
          if (v17 == v28)
            v17 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v30 == -1);
        v18 = __clz(__rbit64(~v30)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v34;
      v20[1] = v33;
      v21 = *(_QWORD *)(v8 + 56) + v19;
      *(_QWORD *)v21 = v36;
      *(_BYTE *)(v21 + 8) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_1003FA818(uint64_t a1, uint64_t a2)
{
  sub_1003FAED0(a1, a2, &qword_100832C78);
}

void sub_1003FA824(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  unsigned __int8 *v32;
  Swift::UInt v33;
  Swift::UInt v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46[9];

  v3 = v2;
  v6 = type metadata accessor for MetricDetailViewModel(0);
  v43 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v45 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_100047110(&qword_10082F318);
  v44 = a2;
  v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v42 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v40 = v3;
    v41 = (unint64_t)(v13 + 63) >> 6;
    v16 = v9 + 64;
    while (1)
    {
      if (v15)
      {
        v23 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v24 = v23 | (v11 << 6);
      }
      else
      {
        v25 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          return;
        }
        if (v25 >= v41)
          goto LABEL_38;
        v26 = v42[v25];
        ++v11;
        if (!v26)
        {
          v11 = v25 + 1;
          if (v25 + 1 >= v41)
            goto LABEL_38;
          v26 = v42[v11];
          if (!v26)
          {
            v27 = v25 + 2;
            if (v27 >= v41)
            {
LABEL_38:
              if ((v44 & 1) == 0)
              {
                swift_release(v8);
                v3 = v40;
                goto LABEL_45;
              }
              v38 = 1 << *(_BYTE *)(v8 + 32);
              if (v38 >= 64)
                bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v42 = -1 << v38;
              v3 = v40;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v26 = v42[v27];
            if (!v26)
            {
              while (1)
              {
                v11 = v27 + 1;
                if (__OFADD__(v27, 1))
                  goto LABEL_47;
                if (v11 >= v41)
                  goto LABEL_38;
                v26 = v42[v11];
                ++v27;
                if (v26)
                  goto LABEL_32;
              }
            }
            v11 = v27;
          }
        }
LABEL_32:
        v15 = (v26 - 1) & v26;
        v24 = __clz(__rbit64(v26)) + (v11 << 6);
      }
      v32 = (unsigned __int8 *)(*(_QWORD *)(v8 + 48) + 24 * v24);
      v33 = *v32;
      v34 = *((_QWORD *)v32 + 1);
      v35 = v32[16];
      v36 = *(_QWORD *)(v43 + 72);
      v37 = *(_QWORD *)(v8 + 56) + v36 * v24;
      if ((v44 & 1) != 0)
        sub_100047C88(v37, v45, type metadata accessor for MetricDetailViewModel);
      else
        sub_10004F8C8(v37, v45, type metadata accessor for MetricDetailViewModel);
      Hasher.init(_seed:)(v46, *(_QWORD *)(v10 + 40));
      Hasher._combine(_:)(v33);
      if ((v35 & 1) == 0)
        Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(v34);
      v17 = Hasher._finalize()();
      v18 = -1 << *(_BYTE *)(v10 + 32);
      v19 = v17 & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v16 + 8 * (v19 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v16 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v18) >> 6;
        do
        {
          if (++v20 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_46;
          }
          v30 = v20 == v29;
          if (v20 == v29)
            v20 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v16 + 8 * v20);
        }
        while (v31 == -1);
        v21 = __clz(__rbit64(~v31)) + (v20 << 6);
      }
      *(_QWORD *)(v16 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      v22 = *(_QWORD *)(v10 + 48) + 24 * v21;
      *(_BYTE *)v22 = v33;
      *(_QWORD *)(v22 + 8) = v34;
      *(_BYTE *)(v22 + 16) = v35;
      sub_100047C88(v45, *(_QWORD *)(v10 + 56) + v36 * v21, type metadata accessor for MetricDetailViewModel);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  swift_release(v8);
LABEL_45:
  *v3 = v10;
}

void sub_1003FABA8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  unsigned __int8 *v29;
  Swift::UInt v30;
  Swift::UInt v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  char v38;
  uint64_t v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832C88);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = v3;
    v9 = 0;
    v37 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          return;
        }
        if (v22 >= v36)
          goto LABEL_38;
        v23 = v37[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v36)
            goto LABEL_38;
          v23 = v37[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_38:
              if ((v38 & 1) == 0)
              {
                swift_release(v5);
                v3 = v35;
                goto LABEL_45;
              }
              v34 = 1 << *(_BYTE *)(v5 + 32);
              if (v34 >= 64)
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v34;
              v3 = v35;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_47;
                if (v9 >= v36)
                  goto LABEL_38;
                v23 = v37[v9];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v9 = v24;
          }
        }
LABEL_33:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = (unsigned __int8 *)(*(_QWORD *)(v5 + 48) + 24 * v21);
      v30 = *v29;
      v31 = *((_QWORD *)v29 + 1);
      v32 = v29[16];
      v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
      if ((v38 & 1) == 0)
        swift_retain(v33);
      Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v30);
      if ((v32 & 1) == 0)
        Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(v31);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_46;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = *(_QWORD *)(v8 + 48) + 24 * v18;
      *(_BYTE *)v19 = v30;
      *(_QWORD *)(v19 + 8) = v31;
      *(_BYTE *)(v19 + 16) = v32;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_45:
  *v3 = v8;
}

void sub_1003FAEC4(uint64_t a1, uint64_t a2)
{
  sub_1003FAED0(a1, a2, &qword_100832C80);
}

void sub_1003FAED0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t i;
  int v48;

  v5 = v3;
  v8 = type metadata accessor for DateComponents(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v5;
  if (*(_QWORD *)(*v5 + 24) > a1)
    a1 = *(_QWORD *)(*v5 + 24);
  sub_100047110(a3);
  v48 = a2;
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v12, a1, a2);
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_43;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 64);
  v46 = (_QWORD *)(v12 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v44 = v5;
  v45 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  v20 = swift_retain(v12);
  v21 = 0;
  for (i = v12; ; v12 = i)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v25 >= v45)
      break;
    v26 = v46;
    v27 = v46[v25];
    ++v21;
    if (!v27)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_36;
      v27 = v46[v21];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_36:
          swift_release(v12);
          v5 = v44;
          if ((v48 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            v21 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_45;
            if (v21 >= v45)
              goto LABEL_36;
            v27 = v46[v21];
            ++v28;
            if (v27)
              goto LABEL_23;
          }
        }
        v21 = v28;
      }
    }
LABEL_23:
    v18 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_24:
    v29 = *(_QWORD *)(v9 + 72);
    v30 = *(_QWORD *)(v12 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 32))(v11, v30, v8, v20);
      v31 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v24);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16))(v11, v30, v8, v20);
      v31 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v24);
      swift_bridgeObjectRetain(v31);
    }
    v32 = *(_QWORD *)(v14 + 40);
    v33 = sub_1000083D8(&qword_100822030, (uint64_t (*)(uint64_t))&type metadata accessor for DateComponents, (uint64_t)&protocol conformance descriptor for DateComponents);
    v34 = dispatch thunk of Hashable._rawHashValue(seed:)(v32, v8, v33);
    v35 = -1 << *(_BYTE *)(v14 + 32);
    v36 = v34 & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v19 + 8 * (v36 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v19 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v19 + 8 * v37);
      }
      while (v41 == -1);
      v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v29 * v22, v11, v8);
    *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v22) = v31;
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release(v12);
  v5 = v44;
  v26 = v46;
  if ((v48 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v42 = 1 << *(_BYTE *)(v12 + 32);
  if (v42 >= 64)
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v42;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_43:
  swift_release(v12);
  *v5 = v14;
}

void sub_1003FB268(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832C68);
  v27 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  if (*(_QWORD *)(v5 + 16))
  {
    v26 = v3;
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain(v5);
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_38:
          __break(1u);
          return;
        }
        if (v16 >= v11)
          goto LABEL_29;
        v17 = v8[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v11)
            goto LABEL_29;
          v17 = v8[v12];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_29:
              swift_release(v5);
              if ((a2 & 1) == 0)
              {
                swift_release(v5);
                v3 = v26;
                goto LABEL_36;
              }
              v25 = 1 << *(_BYTE *)(v5 + 32);
              if (v25 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v8 = -1 << v25;
              v3 = v26;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                v12 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_38;
                if (v12 >= v11)
                  goto LABEL_29;
                v17 = v8[v12];
                ++v18;
                if (v17)
                  goto LABEL_26;
              }
            }
            v12 = v18;
          }
        }
LABEL_26:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(v5 + 48) + 24 * v15;
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(unsigned __int8 *)(v19 + 16);
      v23 = *(unsigned __int8 *)(v19 + 17);
      v24 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v15);
      if ((a2 & 1) != 0)
      {
        sub_10002411C(v24, (uint64_t)v28);
      }
      else
      {
        sub_1000252E0((uint64_t)v24, (uint64_t)v28);
        sub_1000EB3F4(v20, v21, v22);
      }
      if (v23)
        v13 = 256;
      else
        v13 = 0;
      sub_1003F7664(v20, v21, v13 | v22, v28, v27);
    }
  }
  swift_release(v5);
LABEL_36:
  *v3 = v27;
}

void sub_1003FB4A8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  int v44;
  __int128 v45[2];

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832C60);
  v44 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_43;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v43 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v41 = v2;
  v42 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v18 = swift_retain(v10);
  v19 = 0;
  while (1)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_24;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v42)
      break;
    v24 = v43;
    v25 = v43[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v42)
        goto LABEL_36;
      v25 = v43[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_36:
          swift_release(v10);
          v3 = v41;
          if ((v44 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v19 >= v42)
              goto LABEL_36;
            v25 = v43[v19];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v19 = v26;
      }
    }
LABEL_23:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v7 + 72);
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 32))(v9, v28, v6, v18);
      sub_10002411C((__int128 *)(*(_QWORD *)(v10 + 56) + 40 * v22), (uint64_t)v45);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16))(v9, v28, v6, v18);
      sub_1000252E0(*(_QWORD *)(v10 + 56) + 40 * v22, (uint64_t)v45);
    }
    v29 = *(_QWORD *)(v12 + 40);
    v30 = sub_1000083D8((unint64_t *)&qword_100828330, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v31 = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v6, v30);
    v32 = -1 << *(_BYTE *)(v12 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v17 + 8 * (v33 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v17 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v17 + 8 * v34);
      }
      while (v38 == -1);
      v20 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v9, v6);
    sub_10002411C(v45, *(_QWORD *)(v12 + 56) + 40 * v20);
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release(v10);
  v3 = v41;
  v24 = v43;
  if ((v44 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v10 + 32);
  if (v39 >= 64)
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v39;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_43:
  swift_release(v10);
  *v3 = v12;
}

void sub_1003FB850(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_10082B048);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v18 >= v35)
          goto LABEL_37;
        v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v35)
            goto LABEL_37;
          v19 = v36[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_37:
              swift_release(v5);
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_44;
                if (v13 >= v35)
                  goto LABEL_37;
                v19 = v36[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_100038FD4(v24, v38);
      }
      else
      {
        sub_10003E9BC((uint64_t)v24, (uint64_t)v38);
        swift_bridgeObjectRetain(v22);
      }
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v37, v23, v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      sub_100038FD4(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

Swift::Int sub_1003FBB4C(uint64_t a1, uint64_t a2)
{
  return sub_1003FD92C(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for CatalogWorkout, &qword_1008329E0);
}

void sub_1003FBB60(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unsigned int v23;
  Swift::UInt v24;
  uint64_t v25;
  Swift::UInt v26;
  Swift::UInt8 v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char v38;
  int64_t v39;
  uint64_t v40[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832B50);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_51;
  v38 = a2;
  v37 = v3;
  v9 = 0;
  v10 = (_QWORD *)(v5 + 64);
  v11 = 1 << *(_BYTE *)(v5 + 32);
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v5 + 64);
  v39 = (unint64_t)(v11 + 63) >> 6;
  v14 = v7 + 64;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v9 << 6);
      goto LABEL_25;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_53;
    if (v19 >= v39)
      break;
    v20 = v10[v19];
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v39)
        break;
      v20 = v10[v9];
      if (!v20)
      {
        v21 = v19 + 2;
        if (v21 >= v39)
          break;
        v20 = v10[v21];
        if (!v20)
        {
          while (1)
          {
            v9 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_54;
            if (v9 >= v39)
              goto LABEL_45;
            v20 = v10[v9];
            ++v21;
            if (v20)
              goto LABEL_24;
          }
        }
        v9 = v21;
      }
    }
LABEL_24:
    v13 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_25:
    v22 = *(_QWORD *)(v5 + 48) + 16 * v18;
    v23 = *(unsigned __int16 *)(v22 + 8);
    v24 = *(_QWORD *)v22;
    v25 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
    Hasher.init(_seed:)(v40, *(_QWORD *)(v8 + 40));
    switch(v23 >> 8)
    {
      case 2u:
        v26 = 0;
        goto LABEL_33;
      case 3u:
        v26 = 1;
        goto LABEL_33;
      case 4u:
        v26 = 3;
        goto LABEL_33;
      case 5u:
        v26 = 4;
        goto LABEL_33;
      case 6u:
        v26 = 5;
LABEL_33:
        Hasher._combine(_:)(v26);
        break;
      default:
        Hasher._combine(_:)(2uLL);
        Hasher._combine(_:)(v24);
        if (v23 == 2)
        {
          v27 = 0;
        }
        else
        {
          Hasher._combine(_:)(1u);
          v27 = v23 & 1;
        }
        Hasher._combine(_:)(v27);
        Hasher._combine(_:)(BYTE1(v23) & 1);
        v10 = (_QWORD *)(v5 + 64);
        break;
    }
    v28 = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v14 + 8 * (v30 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v14 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_10;
    }
    v32 = 0;
    v33 = (unint64_t)(63 - v29) >> 6;
    do
    {
      if (++v31 == v33 && (v32 & 1) != 0)
      {
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        JUMPOUT(0x1003FBEECLL);
      }
      v34 = v31 == v33;
      if (v31 == v33)
        v31 = 0;
      v32 |= v34;
      v35 = *(_QWORD *)(v14 + 8 * v31);
    }
    while (v35 == -1);
    v15 = __clz(__rbit64(~v35)) + (v31 << 6);
LABEL_10:
    *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v8 + 48) + 16 * v15;
    *(_QWORD *)v16 = v24;
    *(_WORD *)(v16 + 8) = v23;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v15) = v25;
    ++*(_QWORD *)(v8 + 16);
  }
LABEL_45:
  if ((v38 & 1) != 0)
  {
    v36 = 1 << *(_BYTE *)(v5 + 32);
    if (v36 >= 64)
      bzero(v10, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v10 = -1 << v36;
    v3 = v37;
    *(_QWORD *)(v5 + 16) = 0;
LABEL_51:
    swift_release(v5);
  }
  else
  {
    swift_release(v5);
    v3 = v37;
  }
  *v3 = v8;
}

void sub_1003FBF00(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  int v22;
  Swift::UInt v23;
  uint64_t v24;
  Swift::UInt8 v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832B48);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v36 = a2;
    v35 = v3;
    v9 = 0;
    v38 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v9 << 6);
      }
      else
      {
        v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return;
        }
        if (v18 >= v37)
          goto LABEL_37;
        v19 = v38[v18];
        ++v9;
        if (!v19)
        {
          v9 = v18 + 1;
          if (v18 + 1 >= v37)
            goto LABEL_37;
          v19 = v38[v9];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v37)
            {
LABEL_37:
              if ((v36 & 1) == 0)
              {
                swift_release(v5);
                v3 = v35;
                goto LABEL_44;
              }
              v34 = 1 << *(_BYTE *)(v5 + 32);
              if (v34 >= 64)
                bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v38 = -1 << v34;
              v3 = v35;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v38[v20];
            if (!v19)
            {
              while (1)
              {
                v9 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_46;
                if (v9 >= v37)
                  goto LABEL_37;
                v19 = v38[v9];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v9 = v20;
          }
        }
LABEL_24:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      v21 = *(_QWORD *)(v5 + 48) + 16 * v17;
      v22 = *(unsigned __int8 *)(v21 + 8);
      v23 = *(_QWORD *)v21;
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
      Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v23);
      if (v22 == 2)
      {
        v25 = 0;
      }
      else
      {
        v25 = v22 & 1;
        Hasher._combine(_:)(1u);
      }
      Hasher._combine(_:)(v25);
      v26 = Hasher._finalize()();
      v27 = -1 << *(_BYTE *)(v8 + 32);
      v28 = v26 & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v13 + 8 * (v28 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v13 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v13 + 8 * v29);
        }
        while (v33 == -1);
        v14 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = *(_QWORD *)(v8 + 48) + 16 * v14;
      *(_QWORD *)v15 = v23;
      *(_BYTE *)(v15 + 8) = v22;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v24;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_44:
  *v3 = v8;
}

void sub_1003FC208(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_1008328D8);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      swift_retain(v33);
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

Swift::Int sub_1003FC51C(uint64_t a1, uint64_t a2)
{
  return sub_1003FE408(a1, a2, &qword_100832B10);
}

void sub_1003FC528(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::UInt v21;
  char v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;
  _QWORD *v34;
  uint64_t v35[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832E70);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v9 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v9 << 6);
      }
      else
      {
        v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v18 >= v13)
          goto LABEL_34;
        v19 = v34[v18];
        ++v9;
        if (!v19)
        {
          v9 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_34;
          v19 = v34[v9];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((v33 & 1) == 0)
              {
                swift_release(v5);
                v3 = v32;
                goto LABEL_41;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v31;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v9 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v9 >= v13)
                  goto LABEL_34;
                v19 = v34[v9];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v9 = v20;
          }
        }
LABEL_24:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      v21 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v17);
      v22 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v17);
      Hasher.init(_seed:)(v35, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v21);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v8 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v14 + 8 * v26);
        }
        while (v30 == -1);
        v15 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v15) = v21;
      *(_BYTE *)(*(_QWORD *)(v8 + 56) + v15) = v22;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_41:
  *v3 = v8;
}

void sub_1003FC7EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t *v36;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832B00);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v36 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v33 = -1 << v10;
    v34 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v22 >= v35)
          goto LABEL_36;
        v23 = v36[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v35)
            goto LABEL_36;
          v23 = v36[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_36:
              if ((a2 & 1) != 0)
              {
                if (v34 >= 64)
                  bzero(v36, 8 * v35);
                else
                  *v36 = v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_44;
                if (v9 >= v35)
                  goto LABEL_36;
                v23 = v36[v9];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v9 = v24;
          }
        }
LABEL_33:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v21);
      v30 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v21);
      v31 = *v30;
      v32 = v30[1];
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain(v30[1]);
      v14 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v29);
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v18) = v29;
      v19 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v18);
      *v19 = v31;
      v19[1] = v32;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_1003FCAA0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832AF8);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v11;
    v35 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v11 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v21 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v22 = v21 | (v9 << 6);
      }
      else
      {
        v23 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v23 >= v36)
          goto LABEL_36;
        v24 = v10[v23];
        ++v9;
        if (!v24)
        {
          v9 = v23 + 1;
          if (v23 + 1 >= v36)
            goto LABEL_36;
          v24 = v10[v9];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_36:
              if ((a2 & 1) != 0)
              {
                if (v35 >= 64)
                  bzero((void *)(v5 + 64), 8 * v36);
                else
                  *v10 = v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v10[v25];
            if (!v24)
            {
              while (1)
              {
                v9 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_44;
                if (v9 >= v36)
                  goto LABEL_36;
                v24 = v10[v9];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v9 = v25;
          }
        }
LABEL_33:
        v13 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v9 << 6);
      }
      v30 = 8 * v22;
      v31 = *(_QWORD *)(v5 + 56);
      v32 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *(_QWORD *)(v31 + v30);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain(*(_QWORD *)(v31 + v30));
      v15 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v32);
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v28 = v18 == v27;
          if (v18 == v27)
            v18 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v18);
        }
        while (v29 == -1);
        v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(_QWORD *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 8 * v19;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_1003FCD54(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  int v46;

  v3 = v2;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832A78);
  v46 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_43;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v44 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v42 = v2;
  v43 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v18 = swift_retain(v10);
  v19 = 0;
  for (i = v10; ; v10 = i)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_24;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v43)
      break;
    v24 = v44;
    v25 = v44[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v43)
        goto LABEL_36;
      v25 = v44[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v43)
        {
LABEL_36:
          swift_release(v10);
          v3 = v42;
          if ((v46 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = v44[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v19 >= v43)
              goto LABEL_36;
            v25 = v44[v19];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v19 = v26;
      }
    }
LABEL_23:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v7 + 72);
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    if ((v46 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 32))(v9, v28, v6, v18);
      v29 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16))(v9, v28, v6, v18);
      v29 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
      swift_retain(v29);
    }
    v30 = *(_QWORD *)(v12 + 40);
    v31 = sub_1000083D8((unint64_t *)&qword_1008214E8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v32 = dispatch thunk of Hashable._rawHashValue(seed:)(v30, v6, v31);
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v20 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v9, v6);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release(v10);
  v3 = v42;
  v24 = v44;
  if ((v46 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v40 = 1 << *(_BYTE *)(v10 + 32);
  if (v40 >= 64)
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v40;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_43:
  swift_release(v10);
  *v3 = v12;
}

void sub_1003FD0E8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  int64_t v24;
  _QWORD *v25;
  uint64_t v26;
  int v27;
  _QWORD v28[9];

  v3 = v2;
  v6 = type metadata accessor for WorkoutChartViewModel(0);
  v26 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_100047110(&qword_100832A70);
  v27 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  if (*(_QWORD *)(v9 + 16))
  {
    v23[0] = v3;
    v11 = 1 << *(_BYTE *)(v9 + 32);
    v12 = *(_QWORD *)(v9 + 64);
    v25 = (_QWORD *)(v9 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v24 = (unint64_t)(v11 + 63) >> 6;
    swift_retain(v9);
    v23[1] = "groundContactTime";
    v23[2] = "tro";
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      goto LABEL_20;
    }
    if (v24 <= 1)
    {
      swift_release(v9);
      v3 = (uint64_t *)v23[0];
      v16 = v25;
      if ((v27 & 1) == 0)
        goto LABEL_31;
      goto LABEL_27;
    }
    v16 = v25;
    v17 = v25[1];
    v18 = 1;
    if (!v17)
    {
      v18 = 2;
      if (v24 <= 2)
        goto LABEL_24;
      v17 = v25[2];
      if (!v17)
      {
        v19 = 3;
        if (v24 > 3)
        {
          v17 = v25[3];
          if (v17)
          {
            v18 = 3;
            goto LABEL_19;
          }
          while (1)
          {
            v18 = v19 + 1;
            if (__OFADD__(v19, 1))
            {
              __break(1u);
              JUMPOUT(0x1003FD5C4);
            }
            if (v18 >= v24)
              break;
            v17 = v25[v18];
            ++v19;
            if (v17)
              goto LABEL_19;
          }
        }
LABEL_24:
        swift_release(v9);
        v3 = (uint64_t *)v23[0];
        if ((v27 & 1) == 0)
          goto LABEL_31;
LABEL_27:
        v22 = 1 << *(_BYTE *)(v9 + 32);
        if (v22 >= 64)
          bzero(v16, ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v16 = -1 << v22;
        *(_QWORD *)(v9 + 16) = 0;
        goto LABEL_31;
      }
    }
LABEL_19:
    v15 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_20:
    v20 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 48) + v15);
    v21 = *(_QWORD *)(v9 + 56) + *(_QWORD *)(v26 + 72) * v15;
    if ((v27 & 1) != 0)
      sub_100047C88(v21, (uint64_t)v8, type metadata accessor for WorkoutChartViewModel);
    else
      sub_10004F8C8(v21, (uint64_t)v8, type metadata accessor for WorkoutChartViewModel);
    Hasher.init(_seed:)(v28, *(_QWORD *)(v10 + 40));
    __asm { BR              X8 }
  }
LABEL_31:
  swift_release(v9);
  *v3 = v10;
}

void sub_1003FD5F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110((uint64_t *)&unk_10082E620);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_34;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v24);
    ++v13;
    if (!v26)
    {
      v13 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_36;
      v26 = *(_QWORD *)(v42 + 8 * v13);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_36:
          swift_release(v5);
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v13 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v13 >= v41)
              goto LABEL_36;
            v26 = *(_QWORD *)(v42 + 8 * v13);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v13 = v27;
      }
    }
LABEL_33:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_34:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v36 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v32);
    v37 = *v36;
    v38 = v36[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain(v33[1]);
      swift_bridgeObjectRetain(v38);
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v44, v35, v34);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v17 == v29;
        if (v17 == v29)
          v17 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v35;
    v20[1] = v34;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v37;
    v21[1] = v38;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

Swift::Int sub_1003FD918(uint64_t a1, uint64_t a2)
{
  return sub_1003FD92C(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for CatalogLockup, &qword_100832AB0);
}

Swift::Int sub_1003FD92C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  Swift::Int result;
  int64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  int v47;
  char *v48;
  uint64_t v49;
  _QWORD v50[9];

  v6 = v4;
  v49 = a3(0);
  v9 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v48 = (char *)&v43 - v10;
  v11 = *v6;
  if (*(_QWORD *)(*v6 + 24) > a1)
    a1 = *(_QWORD *)(*v6 + 24);
  sub_100047110(a4);
  v47 = a2;
  v12 = static _DictionaryStorage.resize(original:capacity:move:)(v11, a1, a2);
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v44 = v6;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v46 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v45 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain(v11);
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_24;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45)
      goto LABEL_36;
    v26 = v46[v25];
    ++v20;
    if (!v26)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_36;
      v26 = v46[v20];
      if (!v26)
        break;
    }
LABEL_23:
    v17 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v11 + 56);
    v29 = v11;
    v30 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v24);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v9 + 72);
    v34 = v28 + v33 * v24;
    if ((v47 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v48, v34, v49);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v48, v34, v49);
      swift_bridgeObjectRetain(v31);
    }
    Hasher.init(_seed:)(v50, *(_QWORD *)(v13 + 40));
    String.hash(into:)(v50, v32, v31);
    result = Hasher._finalize()();
    v35 = -1 << *(_BYTE *)(v13 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      v21 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = (_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v21);
    *v22 = v32;
    v22[1] = v31;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v13 + 56) + v33 * v21, v48, v49);
    ++*(_QWORD *)(v13 + 16);
    v11 = v29;
  }
  v27 = v25 + 2;
  if (v27 < v45)
  {
    v26 = v46[v27];
    if (!v26)
    {
      while (1)
      {
        v20 = v27 + 1;
        if (__OFADD__(v27, 1))
          goto LABEL_43;
        if (v20 >= v45)
          goto LABEL_36;
        v26 = v46[v20];
        ++v27;
        if (v26)
          goto LABEL_23;
      }
    }
    v20 = v27;
    goto LABEL_23;
  }
LABEL_36:
  swift_release(v11);
  v6 = v44;
  if ((v47 & 1) != 0)
  {
    v42 = 1 << *(_BYTE *)(v11 + 32);
    if (v42 >= 64)
      bzero(v46, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v46 = -1 << v42;
    *(_QWORD *)(v11 + 16) = 0;
  }
LABEL_41:
  result = swift_release(v11);
  *v6 = v13;
  return result;
}

void sub_1003FDC90(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  Swift::UInt v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  uint64_t v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  Swift::Int v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char v52;
  unint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  int64_t v58;
  _QWORD *v59;
  uint64_t v60;
  char v61;
  int64_t v62;
  _QWORD v63[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100047110(&qword_100832AA8);
  v61 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v57 = v2;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v59 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v58 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    v60 = v5;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v62 = v13;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return;
        }
        if (v18 >= v58)
          goto LABEL_41;
        v19 = v59[v18];
        v20 = v13 + 1;
        if (!v19)
        {
          v20 = v13 + 2;
          if (v13 + 2 >= v58)
            goto LABEL_41;
          v19 = v59[v20];
          if (!v19)
          {
            v21 = v13 + 3;
            if (v13 + 3 >= v58)
            {
LABEL_41:
              swift_release(v5);
              v3 = v57;
              if ((v61 & 1) != 0)
              {
                v56 = 1 << *(_BYTE *)(v5 + 32);
                if (v56 >= 64)
                  bzero(v59, ((unint64_t)(v56 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v59 = -1 << v56;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v59[v21];
            if (!v19)
            {
              while (1)
              {
                v20 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_48;
                if (v20 >= v58)
                  goto LABEL_41;
                v19 = v59[v20];
                ++v21;
                if (v19)
                  goto LABEL_24;
              }
            }
            v20 = v13 + 3;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v62 = v20;
        v17 = __clz(__rbit64(v19)) + (v20 << 6);
      }
      v22 = *(_QWORD *)(v5 + 56);
      v23 = *(_QWORD *)(v5 + 48) + 40 * v17;
      v25 = *(_QWORD *)v23;
      v24 = *(_QWORD *)(v23 + 8);
      v26 = *(unsigned __int8 *)(v23 + 16);
      v27 = *(unsigned __int8 *)(v23 + 17);
      v29 = *(_QWORD *)(v23 + 24);
      v28 = *(CHWorkoutDetailHeartRateTableViewCell **)(v23 + 32);
      v30 = *(_QWORD *)(v22 + 8 * v17);
      if ((v61 & 1) == 0)
      {
        sub_1000EB3F4(*(_QWORD *)v23, *(_QWORD *)(v23 + 8), *(_BYTE *)(v23 + 16));
        swift_bridgeObjectRetain(v28);
      }
      Hasher.init(_seed:)(v63, *(_QWORD *)(v8 + 40));
      sub_1000EB3F4(v25, v24, v26);
      sub_10054FFE4(v25, v24, v26);
      v32 = v31;
      String.hash(into:)(v63, v33, v31);
      swift_bridgeObjectRelease(v32, v34, v35, v36, v37, v38, v39, v40);
      if (!v26 || v26 == 2)
      {
        Hasher._combine(_:)(v25);
      }
      else if (v26 == 1)
      {
        String.hash(into:)(v63, v25, v24);
      }
      Hasher._combine(_:)(v27);
      sub_1000EB41C(v25, v24, v26);
      swift_bridgeObjectRetain(v28);
      String.hash(into:)(v63, v29, v28);
      swift_bridgeObjectRelease(v28, v41, v42, v43, v44, v45, v46, v47);
      v48 = Hasher._finalize()();
      v49 = -1 << *(_BYTE *)(v8 + 32);
      v50 = v48 & ~v49;
      v51 = v50 >> 6;
      if (((-1 << v50) & ~*(_QWORD *)(v12 + 8 * (v50 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v50) & ~*(_QWORD *)(v12 + 8 * (v50 >> 6)))) | v50 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v52 = 0;
        v53 = (unint64_t)(63 - v49) >> 6;
        do
        {
          if (++v51 == v53 && (v52 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          v54 = v51 == v53;
          if (v51 == v53)
            v51 = 0;
          v52 |= v54;
          v55 = *(_QWORD *)(v12 + 8 * v51);
        }
        while (v55 == -1);
        v14 = __clz(__rbit64(~v55)) + (v51 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = *(_QWORD *)(v8 + 48) + 40 * v14;
      *(_QWORD *)v15 = v25;
      *(_QWORD *)(v15 + 8) = v24;
      *(_BYTE *)(v15 + 16) = v26;
      *(_BYTE *)(v15 + 17) = v27;
      *(_QWORD *)(v15 + 24) = v29;
      *(_QWORD *)(v15 + 32) = v28;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v30;
      ++*(_QWORD *)(v8 + 16);
      v5 = v60;
      v13 = v62;
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_1003FE070(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t *a4, unint64_t *a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __n128 v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  int64_t v47;
  _QWORD *v48;
  uint64_t i;
  uint64_t (*v50)(uint64_t);
  unint64_t *v51;
  uint64_t v52;
  int v53;

  v51 = a5;
  v52 = a6;
  v8 = v6;
  v50 = a3;
  v11 = a3(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v46 - v13;
  v15 = *v8;
  if (*(_QWORD *)(*v8 + 24) > a1)
    a1 = *(_QWORD *)(*v8 + 24);
  sub_100047110(a4);
  v53 = a2;
  v16 = static _DictionaryStorage.resize(original:capacity:move:)(v15, a1, a2);
  v17 = v16;
  if (!*(_QWORD *)(v15 + 16))
    goto LABEL_43;
  v18 = 1 << *(_BYTE *)(v15 + 32);
  v19 = *(_QWORD *)(v15 + 64);
  v48 = (_QWORD *)(v15 + 64);
  if (v18 < 64)
    v20 = ~(-1 << v18);
  else
    v20 = -1;
  v21 = v20 & v19;
  v46 = v8;
  v47 = (unint64_t)(v18 + 63) >> 6;
  v22 = v16 + 64;
  v23 = swift_retain(v15);
  v24 = 0;
  for (i = v15; ; v15 = i)
  {
    if (v21)
    {
      v26 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v27 = v26 | (v24 << 6);
      goto LABEL_24;
    }
    v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v28 >= v47)
      break;
    v29 = v48;
    v30 = v48[v28];
    ++v24;
    if (!v30)
    {
      v24 = v28 + 1;
      if (v28 + 1 >= v47)
        goto LABEL_36;
      v30 = v48[v24];
      if (!v30)
      {
        v31 = v28 + 2;
        if (v31 >= v47)
        {
LABEL_36:
          swift_release(v15);
          v8 = v46;
          if ((v53 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v30 = v48[v31];
        if (!v30)
        {
          while (1)
          {
            v24 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_45;
            if (v24 >= v47)
              goto LABEL_36;
            v30 = v48[v24];
            ++v31;
            if (v30)
              goto LABEL_23;
          }
        }
        v24 = v31;
      }
    }
LABEL_23:
    v21 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v24 << 6);
LABEL_24:
    v32 = *(_QWORD *)(v12 + 72);
    v33 = *(_QWORD *)(v15 + 48) + v32 * v27;
    if ((v53 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v12 + 32))(v14, v33, v11, v23);
      v34 = *(id *)(*(_QWORD *)(v15 + 56) + 8 * v27);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v12 + 16))(v14, v33, v11, v23);
      v34 = *(id *)(*(_QWORD *)(v15 + 56) + 8 * v27);
    }
    v35 = *(_QWORD *)(v17 + 40);
    v36 = sub_1000083D8(v51, v50, v52);
    v37 = dispatch thunk of Hashable._rawHashValue(seed:)(v35, v11, v36);
    v38 = -1 << *(_BYTE *)(v17 + 32);
    v39 = v37 & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v22 + 8 * (v39 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v22 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v22 + 8 * v40);
      }
      while (v44 == -1);
      v25 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v22 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(*(_QWORD *)(v17 + 48) + v32 * v25, v14, v11);
    *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v25) = v34;
    ++*(_QWORD *)(v17 + 16);
  }
  swift_release(v15);
  v8 = v46;
  v29 = v48;
  if ((v53 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v45 = 1 << *(_BYTE *)(v15 + 32);
  if (v45 >= 64)
    bzero(v29, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v29 = -1 << v45;
  *(_QWORD *)(v15 + 16) = 0;
LABEL_43:
  swift_release(v15);
  *v8 = v17;
}

Swift::Int sub_1003FE3FC(uint64_t a1, uint64_t a2)
{
  return sub_1003FE408(a1, a2, &qword_100832A88);
}

Swift::Int sub_1003FE408(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  _QWORD v41[9];

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_100047110(a3);
  v40 = a2;
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v39 = v6 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 64);
  v37 = v4;
  v38 = (unint64_t)(v10 + 63) >> 6;
  v13 = v8 + 64;
  result = swift_retain(v6);
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_34;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v23 >= v38)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v39 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v38)
        goto LABEL_36;
      v25 = *(_QWORD *)(v39 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v38)
        {
LABEL_36:
          swift_release(v6);
          v4 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v39 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v15 >= v38)
              goto LABEL_36;
            v25 = *(_QWORD *)(v39 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v15 = v26;
      }
    }
LABEL_33:
    v12 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v22);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain(v31[1]);
      v35 = v34;
    }
    Hasher.init(_seed:)(v41, *(_QWORD *)(v9 + 40));
    String.hash(into:)(v41, v33, v32);
    result = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v9 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v6);
  v4 = v37;
  v24 = (_QWORD *)(v6 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v6 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  result = swift_release(v6);
  *v4 = v9;
  return result;
}

uint64_t sub_1003FE710(uint64_t a1, Swift::UInt a2, char a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  char v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v9 = a3 & 1;
  v10 = (_QWORD *)*v4;
  v12 = sub_100439058(a2, a3 & 1);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = type metadata accessor for MetricDetailViewModel(0);
        return sub_100419FA8(a1, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, type metadata accessor for MetricDetailViewModel);
      }
      return sub_1004005A8(v12, a2, v9, a1, v18);
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_100400C10();
      goto LABEL_7;
    }
    sub_1003F77B0(v15, a4 & 1);
    v22 = sub_100439058(a2, v9);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
      return sub_1004005A8(v12, a2, v9, a1, v18);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MetricDataProviderTimeScale);
  __break(1u);
  return result;
}

void sub_1003FE848(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_10043939C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1004049AC((uint64_t (*)(_QWORD))&type metadata accessor for Date, &qword_100832A80);
    goto LABEL_7;
  }
  sub_1003FE070(v17, a3 & 1, (uint64_t (*)(uint64_t))&type metadata accessor for Date, &qword_100832A80, (unint64_t *)&qword_1008214E8, (uint64_t)&protocol conformance descriptor for Date);
  v22 = sub_10043939C(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_100400B78(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
}

void sub_1003FE9DC(uint64_t a1, char a2, void *a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v19;
  _QWORD *v20;
  BOOL v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v5 = (_QWORD **)v4;
  v9 = (_QWORD *)*v4;
  v11 = sub_100439434((uint64_t)a3);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_13;
  }
  v15 = v10;
  v16 = v9[3];
  if (v16 >= v14 && (a4 & 1) != 0)
    goto LABEL_9;
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_100400E64();
    goto LABEL_9;
  }
  sub_1003F7B24(v14, a4 & 1);
  v17 = sub_100439434((uint64_t)a3);
  if ((v15 & 1) != (v18 & 1))
  {
LABEL_13:
    v24 = type metadata accessor for CatalogItemViewModel(0);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
    __break(1u);
    return;
  }
  v11 = v17;
LABEL_9:
  v19 = a2 & 1;
  v20 = *v5;
  if ((v15 & 1) != 0)
  {
    v21 = v19 != 0;
    v22 = v20[7] + 16 * v11;
    sub_10010C5EC(*(id *)v22, *(_BYTE *)(v22 + 8));
    *(_QWORD *)v22 = a1;
    *(_BYTE *)(v22 + 8) = v21;
  }
  else
  {
    sub_100400640(v11, (uint64_t)a3, a1, v19, v20);
    v23 = a3;
  }
}

void sub_1003FEB18(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_100049DE0(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_10040102C();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8 * v10));
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_1003F7E14(v13, a3 & 1);
  v18 = sub_100049DE0(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CardTypeFamily);
  __break(1u);
}

void sub_1003FEC4C(uint64_t a1, void *a2, void *a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  id v25;
  id v26;

  v5 = v4;
  v9 = *v4;
  v11 = sub_10043960C(a2, a3);
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = v10;
  v16 = *(_QWORD *)(v9 + 24);
  if (v16 >= v14 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_1004011CC();
LABEL_7:
    v17 = (_QWORD *)*v5;
    if ((v15 & 1) != 0)
    {
LABEL_8:
      v18 = v17[7];

      *(_QWORD *)(v18 + 8 * v11) = a1;
      return;
    }
LABEL_11:
    v17[(v11 >> 6) + 8] |= 1 << v11;
    v21 = (_QWORD *)(v17[6] + 16 * v11);
    *v21 = a2;
    v21[1] = a3;
    *(_QWORD *)(v17[7] + 8 * v11) = a1;
    v22 = v17[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v17[2] = v24;
      v25 = a3;
      v26 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_1003F80F0(v14, a4 & 1);
  v19 = sub_10043960C(a2, a3);
  if ((v15 & 1) == (v20 & 1))
  {
    v11 = v19;
    v17 = (_QWORD *)*v5;
    if ((v15 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for BalanceDataProvider.WorkoutAndActivityKey);
  __break(1u);
}

void sub_1003FEDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v6 = v5;
  v12 = *v5;
  v14 = sub_100438F74(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_100401388();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 16 * v14;

      *(_QWORD *)v21 = a1;
      *(_QWORD *)(v21 + 8) = a2;
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v24 = (uint64_t *)(v20[6] + 16 * v14);
    *v24 = a3;
    v24[1] = a4;
    v25 = (_QWORD *)(v20[7] + 16 * v14);
    *v25 = a1;
    v25[1] = a2;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      swift_bridgeObjectRetain(a4);
      return;
    }
    goto LABEL_14;
  }
  sub_1003F8430(v17, a5 & 1);
  v22 = sub_100438F74(a3, a4);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1003FEF30(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for DateComponents(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_100439544(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1004049AC((uint64_t (*)(_QWORD))&type metadata accessor for DateComponents, &qword_100832B58);
    goto LABEL_7;
  }
  sub_1003FE070(v17, a3 & 1, (uint64_t (*)(uint64_t))&type metadata accessor for DateComponents, &qword_100832B58, &qword_100822030, (uint64_t)&protocol conformance descriptor for DateComponents);
  v22 = sub_100439544(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_100400B78(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))&type metadata accessor for DateComponents);
}

uint64_t sub_1003FF0C4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1003FF4B0(a1, a2, a3, sub_100049DE0, type metadata accessor for TrendListMetric, &qword_100832C90, (uint64_t)&type metadata for ActivityTrendType);
}

void *sub_1003FF0E8(uint64_t a1, char a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  void *result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  double *v19;
  char v20;
  double *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_100049DE0(a1);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = (void *)(v13 + v14);
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= (uint64_t)result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v17 >= (uint64_t)result && (a2 & 1) == 0)
  {
    result = sub_1004020E0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (double *)(v18[7] + 16 * v12);
      *v19 = a3;
      v19[1] = a4;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_BYTE *)(v18[6] + v12) = a1;
    v21 = (double *)(v18[7] + 16 * v12);
    *v21 = a3;
    v21[1] = a4;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1003F9410((uint64_t)result, a2 & 1);
  result = (void *)sub_100049DE0(a1);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = (unint64_t)result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for ActivityTrendType);
  __break(1u);
  return result;
}

void *sub_1003FF218(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  void *result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v4 = v3;
  v8 = *v3;
  v10 = sub_100049DE0(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = (void *)(v11 + v12);
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= (uint64_t)result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= (uint64_t)result && (a3 & 1) == 0)
  {
    result = sub_10040226C();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7] + 40 * v10;
      v18 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)v17 = *(_OWORD *)a1;
      *(_OWORD *)(v17 + 16) = v18;
      *(_QWORD *)(v17 + 32) = *(_QWORD *)(a1 + 32);
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    v20 = v16[7] + 40 * v10;
    v21 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v20 = *(_OWORD *)a1;
    *(_OWORD *)(v20 + 16) = v21;
    *(_QWORD *)(v20 + 32) = *(_QWORD *)(a1 + 32);
    v22 = v16[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v16[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1003F96E0((uint64_t)result, a3 & 1);
  result = (void *)sub_100049DE0(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = (unint64_t)result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for ActivityTrendType);
  __break(1u);
  return result;
}

void sub_1003FF368(uint64_t a1, Swift::UInt a2, char a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  char v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v9 = a3 & 1;
  v10 = (_QWORD *)*v4;
  v12 = sub_100439058(a2, a3 & 1);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        swift_bridgeObjectRelease(*(_QWORD *)(v19 + 8 * v12));
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10040240C();
      goto LABEL_7;
    }
    sub_1003F99D8(v15, a4 & 1);
    v20 = sub_100439058(a2, v9);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10040076C(v12, a2, v9, a1, v18);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MetricDataProviderTimeScale);
  __break(1u);
}

uint64_t sub_1003FF48C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1003FF4B0(a1, a2, a3, sub_100049DE0, type metadata accessor for MetricDetailViewModel, &qword_100832DB0, (uint64_t)&type metadata for ActivityDashboardMetric);
}

uint64_t sub_1003FF4B0(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(_QWORD), uint64_t *a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD **v11;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  char v28;

  v11 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = a4(a2);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a3 & 1) != 0)
    {
LABEL_7:
      v23 = *v11;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = v23[7];
        v25 = a5(0);
        return sub_100419FA8(a1, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a5);
      }
      return sub_1004007BC(v17, a2, a1, v23, a5);
    }
    if (v22 >= v20 && (a3 & 1) == 0)
    {
      sub_1004025D4(a5, a6);
      goto LABEL_7;
    }
    sub_1003F9CD4(v20, a3 & 1, a5, a6);
    v27 = a4(a2);
    if ((v21 & 1) == (v28 & 1))
    {
      v17 = v27;
      v23 = *v11;
      if ((v21 & 1) != 0)
        goto LABEL_8;
      return sub_1004007BC(v17, a2, a1, v23, a5);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(a7);
  __break(1u);
  return result;
}

void sub_1003FF5F4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_100438F74(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_13;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_9;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_100402B48();
    goto LABEL_9;
  }
  sub_1003FA4FC(v17, a5 & 1);
  v20 = sub_100438F74(a3, a4);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_13:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return;
  }
  v14 = v20;
LABEL_9:
  v22 = a2 & 1;
  v23 = *v6;
  if ((v18 & 1) != 0)
  {
    v24 = v22 != 0;
    v25 = v23[7] + 16 * v14;
    sub_10010C5EC(*(id *)v25, *(_BYTE *)(v25 + 8));
    *(_QWORD *)v25 = a1;
    *(_BYTE *)(v25 + 8) = v24;
  }
  else
  {
    sub_100400850(v14, a3, a4, a1, v22, v23);
    swift_bridgeObjectRetain(a4);
  }
}

uint64_t sub_1003FF740(uint64_t a1, char a2, Swift::UInt a3, char a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  char v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;

  v6 = (_QWORD **)v5;
  v11 = a4 & 1;
  v12 = (_QWORD *)*v5;
  v14 = sub_1004398B4(a2, a3, a4 & 1);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for MetricDetailViewModel(0);
        return sub_100419FA8(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, type metadata accessor for MetricDetailViewModel);
      }
      return sub_1004008A8(v14, a2, a3, v11, a1, v20);
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_100402D14();
      goto LABEL_7;
    }
    sub_1003FA824(v17, a5 & 1);
    v24 = sub_1004398B4(a2, a3, v11);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
      return sub_1004008A8(v14, a2, a3, v11, a1, v20);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MetricsDataProvider.MetricDataCacheEntry);
  __break(1u);
  return result;
}

void sub_1003FF894(uint64_t a1, char a2, Swift::UInt a3, char a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  char v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;

  v6 = (_QWORD **)v5;
  v11 = a4 & 1;
  v12 = (_QWORD *)*v5;
  v14 = sub_1004398B4(a2, a3, a4 & 1);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        swift_release(*(_QWORD *)(v21 + 8 * v14));
        *(_QWORD *)(v21 + 8 * v14) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_100402F78();
      goto LABEL_7;
    }
    sub_1003FABA8(v17, a5 & 1);
    v22 = sub_1004398B4(a2, a3, v11);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_100400948(v14, a2, a3, v11, a1, v20);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MetricsDataProvider.MetricDataCacheEntry);
  __break(1u);
}

void sub_1003FF9D4(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_100438F74(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v19);
        sub_100038FD4(a1, v19);
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10040357C();
      goto LABEL_7;
    }
    sub_1003FB850(v15, a4 & 1);
    v20 = sub_100438F74(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1004009A0(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1003FFB04(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_100438F74(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = type metadata accessor for Trainer(0, v11);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, a1, v20);
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10040456C((uint64_t (*)(_QWORD))&type metadata accessor for Trainer, &qword_100832A98);
      goto LABEL_7;
    }
    sub_1003FD92C(v15, a4 & 1, (uint64_t (*)(_QWORD))&type metadata accessor for Trainer, &qword_100832A98);
    v21 = sub_100438F74(a2, a3);
    if ((v16 & 1) == (v11 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_100400A08(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1003FFC60(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_100438F74(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100403AC8();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      swift_release(*(_QWORD *)(v19 + 8 * v12));
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_1003FC208(v15, a4 & 1);
  v20 = sub_100438F74(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1003FFDBC(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_100049DE0(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_100403C88();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v16[7] + v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_BYTE *)(v16[7] + v10) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return;
    }
    goto LABEL_14;
  }
  sub_1003FC528(v13, a3 & 1);
  v17 = sub_100049DE0(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = v17;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for ActivityTrendType);
  __break(1u);
}

void sub_1003FFEE4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_100030DDC(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_100403FBC();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8 * v10));
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_1003FCAA0(v13, a3 & 1);
  v18 = sub_100030DDC(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_10040001C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_10043939C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      swift_release(*(_QWORD *)(v21 + 8 * v14));
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10040415C();
    goto LABEL_7;
  }
  sub_1003FCD54(v17, a3 & 1);
  v22 = sub_10043939C(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_100400B78(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
}

uint64_t sub_100400180(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_100439D68(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = type metadata accessor for WorkoutChartViewModel(0);
        return sub_100419FA8(a1, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, type metadata accessor for WorkoutChartViewModel);
      }
      return sub_1004007BC(v10, a2, a1, v16, type metadata accessor for WorkoutChartViewModel);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1004025D4(type metadata accessor for WorkoutChartViewModel, &qword_100832A70);
      goto LABEL_7;
    }
    sub_1003FD0E8(v13, a3 & 1);
    v20 = sub_100439D68(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1004007BC(v10, a2, a1, v16, type metadata accessor for WorkoutChartViewModel);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for ChartableMetric);
  __break(1u);
  return result;
}

void sub_1004002B0(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int16 v27;

  v4 = v3;
  v8 = *v3;
  v10 = sub_100439D10(a1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a2 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a2 & 1) == 0)
  {
    sub_1004047C8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a3;
      return;
    }
LABEL_11:
    v19 = *(_OWORD *)a1;
    v27 = *(_WORD *)(a1 + 16);
    v25 = *(_OWORD *)(a1 + 24);
    v26 = v19;
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = v16[6] + 40 * v10;
    *(_QWORD *)(v20 + 32) = *(_QWORD *)(a1 + 32);
    v21 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v20 = v19;
    *(_OWORD *)(v20 + 16) = v21;
    *(double *)(v16[7] + 8 * v10) = a3;
    v22 = v16[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v16[2] = v24;
      sub_100419BBC((uint64_t)&v26);
      sub_100133118((uint64_t)&v25);
      return;
    }
    goto LABEL_14;
  }
  sub_1003FDC90(v13, a2 & 1);
  v17 = sub_100439D10(a1);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = v17;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for LoadingCardHeightProvider.HeightKey);
  __break(1u);
}

void sub_100400414(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_100439A1C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1004049AC((uint64_t (*)(_QWORD))&type metadata accessor for UUID, &qword_100832A90);
    goto LABEL_7;
  }
  sub_1003FE070(v17, a3 & 1, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, &qword_100832A90, (unint64_t *)&qword_100828330, (uint64_t)&protocol conformance descriptor for UUID);
  v22 = sub_100439A1C(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_100400B78(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))&type metadata accessor for UUID);
}

uint64_t sub_1004005A8(unint64_t a1, uint64_t a2, char a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a5[6] + 16 * a1;
  *(_QWORD *)v8 = a2;
  *(_BYTE *)(v8 + 8) = a3 & 1;
  v9 = a5[7];
  v10 = type metadata accessor for MetricDetailViewModel(0);
  result = sub_100047C88(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, type metadata accessor for MetricDetailViewModel);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

unint64_t sub_100400640(unint64_t result, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a5[6] + 8 * result) = a2;
  v5 = a5[7] + 16 * result;
  *(_QWORD *)v5 = a3;
  *(_BYTE *)(v5 + 8) = a4 & 1;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_100400690(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_1004006D4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

unint64_t sub_100400724(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4, double a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a4[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(double *)(a4[7] + 8 * result) = a5;
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_10040076C(unint64_t result, uint64_t a2, char a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = a5[6] + 16 * result;
  *(_QWORD *)v5 = a2;
  *(_BYTE *)(v5 + 8) = a3 & 1;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_1004007BC(unint64_t a1, char a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  v9 = a4[7];
  v10 = a5(0);
  result = sub_100047C88(a3, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a5);
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

unint64_t sub_100400850(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, _QWORD *a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = a6[7] + 16 * result;
  *(_QWORD *)v7 = a4;
  *(_BYTE *)(v7 + 8) = a5 & 1;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

uint64_t sub_1004008A8(unint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a6[(a1 >> 6) + 8] |= 1 << a1;
  v9 = a6[6] + 24 * a1;
  *(_BYTE *)v9 = a2;
  *(_QWORD *)(v9 + 8) = a3;
  *(_BYTE *)(v9 + 16) = a4 & 1;
  v10 = a6[7];
  v11 = type metadata accessor for MetricDetailViewModel(0);
  result = sub_100047C88(a5, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, type metadata accessor for MetricDetailViewModel);
  v13 = a6[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a6[2] = v15;
  return result;
}

unint64_t sub_100400948(unint64_t result, char a2, uint64_t a3, char a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = a6[6] + 24 * result;
  *(_BYTE *)v6 = a2;
  *(_QWORD *)(v6 + 8) = a3;
  *(_BYTE *)(v6 + 16) = a4 & 1;
  *(_QWORD *)(a6[7] + 8 * result) = a5;
  v7 = a6[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a6[2] = v9;
  return result;
}

_OWORD *sub_1004009A0(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_100038FD4(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_100400A08(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for Trainer(0, a2);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

unint64_t sub_100400A98(unint64_t result, uint64_t a2, __int16 a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = a5[6] + 16 * result;
  *(_QWORD *)v5 = a2;
  *(_WORD *)(v5 + 8) = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_100400AE4(unint64_t result, uint64_t a2, char a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = a5[6] + 16 * result;
  *(_QWORD *)v5 = a2;
  *(_BYTE *)(v5 + 8) = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_100400B30(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_100400B78(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v9 = a4[6];
  v10 = a5(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a2, v10);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

void sub_100400C10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for MetricDetailViewModel(0);
  v29 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_100832DB8);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v26 = v1;
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v27 = v5 + 64;
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      v11 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v11);
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = *(_QWORD *)(v5 + 48) + 16 * v16;
    v19 = *(_QWORD *)v18;
    v20 = *(_BYTE *)(v18 + 8);
    v21 = *(_QWORD *)(v29 + 72) * v16;
    sub_10004F8C8(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for MetricDetailViewModel);
    v22 = *(_QWORD *)(v7 + 48) + v17;
    *(_QWORD *)v22 = v19;
    *(_BYTE *)(v22 + 8) = v20;
    sub_100047C88((uint64_t)v4, *(_QWORD *)(v7 + 56) + v21, type metadata accessor for MetricDetailViewModel);
  }
  v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    swift_release(v5);
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v11 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v11 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v11);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_100400E50()
{
  sub_1004049AC((uint64_t (*)(_QWORD))&type metadata accessor for Date, &qword_100832A80);
}

void sub_100400E64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  uint64_t v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_100047110(&qword_100832C48);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(void **)v19;
    v21 = *(_BYTE *)(v19 + 8);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v22 = v20;
    *(_BYTE *)(v22 + 8) = v21;
    v23 = v17;
    sub_10010C5D0(v20, v21);
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10040102C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_100047110(&qword_1008328E0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    swift_bridgeObjectRetain(v16);
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1004011CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  id v23;
  id v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  sub_100047110(&qword_100832CD0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(void **)v17;
    v19 = *(void **)(v17 + 8);
    v20 = 8 * v15;
    v21 = *(void **)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    v23 = v21;
    v24 = v18;
    v25 = v19;
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100401388()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  _QWORD *v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  sub_100047110(&qword_100832B08);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_QWORD *)(v2 + 56) + v16;
    v22 = *(void **)v20;
    v21 = *(_QWORD *)(v20 + 8);
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v22;
    v24[1] = v21;
    swift_bridgeObjectRetain(v18);
    v25 = v22;
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10040153C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100047110(&qword_100832CC8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1004016E8()
{
  sub_100401700(&qword_100832CC0);
}

void sub_1004016F4()
{
  sub_100401700(&qword_100832AF0);
}

void sub_100401700(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v2 = v1;
  sub_100047110(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v13 = (v19 - 1) & v19;
    v16 = v21 + (v10 << 6);
LABEL_12:
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v16);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100401884()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_100047110(&qword_100832C70);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    swift_retain(*((_QWORD *)&v19 + 1));
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

char *sub_100401A2C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = type metadata accessor for ImpressionMetrics(0);
  v37 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for IndexPath(0);
  v36 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_100832B18);
  v33 = v0;
  v3 = *v0;
  v4 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    result = (char *)swift_release(v3);
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return result;
  }
  v6 = v4;
  result = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    result = (char *)memmove(result, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    result = (char *)swift_release(v42);
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_100401D0C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = type metadata accessor for ImpressionMetrics(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_100832CB8);
  v24 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release(v5);
    *v24 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100401F2C()
{
  sub_1004049AC((uint64_t (*)(_QWORD))&type metadata accessor for DateComponents, &qword_100832B58);
}

void sub_100401F40()
{
  sub_1004025D4(type metadata accessor for TrendListMetric, &qword_100832C90);
}

void *sub_100401F54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  sub_100047110(&qword_100832CB0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004020E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  sub_100047110(&qword_100832CA0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10040226C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;

  v1 = v0;
  sub_100047110(&qword_100832CA8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v24 = __clz(__rbit64(v22));
    v12 = (v22 - 1) & v22;
    v15 = v24 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 40 * v15;
    v17 = *(_QWORD *)(v16 + 32);
    v18 = *(_OWORD *)v16;
    v19 = *(_OWORD *)(v16 + 16);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v20 = *(_QWORD *)(v4 + 56) + 40 * v15;
    *(_OWORD *)v20 = v18;
    *(_OWORD *)(v20 + 16) = v19;
    *(_QWORD *)(v20 + 32) = v17;
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_10040240C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100047110(&qword_100832DA8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v18;
    *(_BYTE *)(v21 + 8) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1004025C0()
{
  sub_1004025D4(type metadata accessor for MetricDetailViewModel, &qword_100832DB0);
}

void sub_1004025D4(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v5 = v2;
  v6 = a1(0);
  v30 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - v7;
  sub_100047110(a2);
  v9 = *v2;
  v10 = static _DictionaryStorage.copy(original:)(*v2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
LABEL_28:
    *v5 = v11;
    return;
  }
  v28 = v5;
  v12 = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)v12 >= v9 + 64 + 8 * v13)
    memmove(v12, (const void *)(v9 + 64), 8 * v13);
  v29 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v19)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v15;
    if (!v25)
    {
      v15 = v24 + 1;
      if (v24 + 1 >= v19)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v15);
      if (!v25)
        break;
    }
LABEL_25:
    v18 = (v25 - 1) & v25;
    v21 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_12:
    v22 = *(_BYTE *)(*(_QWORD *)(v9 + 48) + v21);
    v23 = *(_QWORD *)(v30 + 72) * v21;
    sub_10004F8C8(*(_QWORD *)(v9 + 56) + v23, (uint64_t)v8, a1);
    *(_BYTE *)(*(_QWORD *)(v11 + 48) + v21) = v22;
    sub_100047C88((uint64_t)v8, *(_QWORD *)(v11 + 56) + v23, a1);
  }
  v26 = v24 + 2;
  if (v26 >= v19)
  {
LABEL_26:
    swift_release(v9);
    v5 = v28;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v15 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v15);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1004027F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_100047110(&qword_100832C98);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    v17 = v16;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100402994()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100047110(&qword_100832B68);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100402B48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_100047110(&qword_100832AA0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(void **)(v17 + v16);
    v22 = *(_BYTE *)(v17 + v16 + 8);
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v20;
    v23[1] = v19;
    v24 = *(_QWORD *)(v4 + 56) + v16;
    *(_QWORD *)v24 = v21;
    *(_BYTE *)(v24 + 8) = v22;
    swift_bridgeObjectRetain(v19);
    sub_10010C5D0(v21, v22);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100402D14()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = type metadata accessor for MetricDetailViewModel(0);
  v34 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_10082F318);
  v31 = v0;
  v4 = *v0;
  v5 = static _DictionaryStorage.copy(original:)(*v0);
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    swift_release(v4);
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return;
  }
  v7 = v5;
  v8 = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)v8 >= v4 + 64 + 8 * v9)
  {
    memmove(v8, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v32 = v4 + 64;
  v33 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v16 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v17 = 24 * v16;
    v18 = *(_QWORD *)(v4 + 48) + 24 * v16;
    v19 = *(_BYTE *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_BYTE *)(v18 + 16);
    v22 = *(_QWORD *)(v34 + 72) * v16;
    sub_10004F8C8(*(_QWORD *)(v4 + 56) + v22, (uint64_t)v3, type metadata accessor for MetricDetailViewModel);
    v23 = v35;
    v24 = *(_QWORD *)(v35 + 48) + v17;
    *(_BYTE *)v24 = v19;
    *(_QWORD *)(v24 + 8) = v20;
    *(_BYTE *)(v24 + 16) = v21;
    sub_100047C88((uint64_t)v3, *(_QWORD *)(v23 + 56) + v22, type metadata accessor for MetricDetailViewModel);
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    swift_release(v4);
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_100402F78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_100047110(&qword_100832C88);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 24 * v15;
    v18 = *(_BYTE *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    LOBYTE(v17) = *(_BYTE *)(v17 + 16);
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *(_QWORD *)(v4 + 48) + v16;
    *(_BYTE *)v22 = v18;
    *(_QWORD *)(v22 + 8) = v19;
    *(_BYTE *)(v22 + 16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    swift_retain(v21);
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100403138()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;
  __int128 v27[2];

  sub_100047110(&qword_100832C68);
  v24 = v0;
  v1 = *v0;
  v2 = static _DictionaryStorage.copy(original:)(*v0);
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    swift_release(v1);
    *v24 = v3;
    return;
  }
  v4 = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)v4 >= v1 + 64 + 8 * v5)
    memmove(v4, (const void *)(v1 + 64), 8 * v5);
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v25 = v1 + 64;
  v26 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    v21 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v26)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v7;
    if (!v22)
    {
      v7 = v21 + 1;
      if (v21 + 1 >= v26)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v7);
      if (!v22)
        break;
    }
LABEL_25:
    v10 = (v22 - 1) & v22;
    v12 = __clz(__rbit64(v22)) + (v7 << 6);
LABEL_12:
    v13 = 24 * v12;
    v14 = *(_QWORD *)(v1 + 48) + 24 * v12;
    v15 = *(_QWORD *)v14;
    v16 = *(_QWORD *)(v14 + 8);
    v17 = *(_BYTE *)(v14 + 17);
    v18 = *(_BYTE *)(v14 + 16);
    v19 = 40 * v12;
    sub_1000252E0(*(_QWORD *)(v1 + 56) + 40 * v12, (uint64_t)v27);
    v20 = *(_QWORD *)(v3 + 48) + v13;
    *(_QWORD *)v20 = v15;
    *(_QWORD *)(v20 + 8) = v16;
    *(_BYTE *)(v20 + 16) = v18;
    *(_BYTE *)(v20 + 17) = v17;
    sub_10002411C(v27, *(_QWORD *)(v3 + 56) + v19);
    sub_1000EB3F4(v15, v16, v18);
  }
  v23 = v21 + 2;
  if (v23 >= v26)
    goto LABEL_26;
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v7 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v7 >= v26)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v7);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10040333C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v27[2];

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_100832C60);
  v6 = *v0;
  v7 = static _DictionaryStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release(v6);
LABEL_28:
    *v1 = v8;
    return;
  }
  v25 = v1;
  v9 = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 64 + 8 * v10)
    memmove(v9, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 40 * v18;
    sub_1000252E0(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    sub_10002411C(v27, *(_QWORD *)(v8 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    swift_release(v6);
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10040357C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_100047110(&qword_10082B048);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_10003E9BC(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_100038FD4(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_100403760()
{
  sub_10040456C((uint64_t (*)(_QWORD))&type metadata accessor for Trainer, &qword_100832A98);
}

void sub_100403774()
{
  sub_10040456C((uint64_t (*)(_QWORD))&type metadata accessor for CatalogWorkout, &qword_1008329E0);
}

void sub_100403788()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;

  v1 = v0;
  sub_100047110(&qword_100832B50);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v25 = __clz(__rbit64(v23));
    v12 = (v23 - 1) & v23;
    v15 = v25 + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(_QWORD *)v17;
    LOWORD(v17) = *(_WORD *)(v17 + 8);
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v18;
    *(_WORD *)(v21 + 8) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100403928()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;

  v1 = v0;
  sub_100047110(&qword_100832B48);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v25 = __clz(__rbit64(v23));
    v12 = (v23 - 1) & v23;
    v15 = v25 + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v18;
    *(_BYTE *)(v21 + 8) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100403AC8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100047110(&qword_1008328D8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    swift_retain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

id sub_100403C7C()
{
  return sub_100404BE0(&qword_100832B10);
}

void sub_100403C88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  sub_100047110(&qword_100832E70);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100403E10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_100047110(&qword_100832B00);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    swift_bridgeObjectRetain(v20);
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100403FBC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_100047110(&qword_100832AF8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_bridgeObjectRetain(v17);
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10040415C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_100832A78);
  v24 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release(v5);
    *v24 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    swift_retain(v19);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10040438C()
{
  sub_1004025D4(type metadata accessor for WorkoutChartViewModel, &qword_100832A70);
}

void sub_1004043A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_100047110((uint64_t *)&unk_10082E620);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100404558()
{
  sub_10040456C((uint64_t (*)(_QWORD))&type metadata accessor for CatalogLockup, &qword_100832AB0);
}

void sub_10040456C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1(0);
  v4 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v6 = (char *)&v33 - v5;
  sub_100047110(a2);
  v34 = v2;
  v7 = *v2;
  v8 = static _DictionaryStorage.copy(original:)(*v2);
  v9 = *(_QWORD *)(v7 + 16);
  v38 = v8;
  if (!v9)
  {
    swift_release(v7);
    v32 = v38;
    v31 = v34;
LABEL_28:
    *v31 = v32;
    return;
  }
  v10 = v8;
  v11 = (void *)(v8 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)v11 >= v7 + 64 + 8 * v12)
  {
    memmove(v11, (const void *)(v7 + 64), 8 * v12);
    v10 = v38;
  }
  v35 = v7 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 64);
  v36 = (unint64_t)(v15 + 63) >> 6;
  v18 = v37;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      v14 = v28 + 1;
      if (v28 + 1 >= v36)
        goto LABEL_26;
      v29 = *(_QWORD *)(v35 + 8 * v14);
      if (!v29)
        break;
    }
LABEL_25:
    v17 = (v29 - 1) & v29;
    v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    v21 = 16 * v20;
    v22 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 56) + v25, v18);
    v26 = v38;
    v27 = (_QWORD *)(*(_QWORD *)(v38 + 48) + v21);
    *v27 = v24;
    v27[1] = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v26 + 56) + v25, v6, v18);
    swift_bridgeObjectRetain(v23);
  }
  v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    swift_release(v7);
    v31 = v34;
    v32 = v38;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v35 + 8 * v30);
  if (v29)
  {
    v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v14 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v14);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1004047C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  sub_100047110(&qword_100832AA8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 40 * v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 17);
    v21 = *(_QWORD *)(v17 + 24);
    v22 = *(_QWORD *)(v17 + 32);
    v23 = 8 * v15;
    v24 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v23);
    v25 = *(_QWORD *)(v4 + 48) + v16;
    v26 = *(_BYTE *)(v17 + 16);
    *(_QWORD *)v25 = *(_QWORD *)v17;
    *(_QWORD *)(v25 + 8) = v19;
    *(_BYTE *)(v25 + 16) = v26;
    *(_BYTE *)(v25 + 17) = v20;
    *(_QWORD *)(v25 + 24) = v21;
    *(_QWORD *)(v25 + 32) = v22;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v23) = v24;
    sub_1000EB3F4(v18, v19, v26);
    swift_bridgeObjectRetain(v22);
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100404998()
{
  sub_1004049AC((uint64_t (*)(_QWORD))&type metadata accessor for UUID, &qword_100832A90);
}

void sub_1004049AC(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  int64_t v30;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - v6;
  sub_100047110(a2);
  v28 = v2;
  v8 = *v2;
  v9 = static _DictionaryStorage.copy(original:)(*v2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    swift_release(v8);
    *v28 = v10;
    return;
  }
  v11 = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)v11 >= v8 + 64 + 8 * v12)
    memmove(v11, (const void *)(v8 + 64), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v29 = v8 + 64;
  v30 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v30)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v14;
    if (!v25)
    {
      v14 = v24 + 1;
      if (v24 + 1 >= v30)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v14);
      if (!v25)
        break;
    }
LABEL_25:
    v17 = (v25 - 1) & v25;
    v19 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v20, v4);
    v21 = 8 * v19;
    v22 = *(void **)(*(_QWORD *)(v8 + 56) + v21);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v20, v7, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + v21) = v22;
    v23 = v22;
  }
  v26 = v24 + 2;
  if (v26 >= v30)
    goto LABEL_26;
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v14 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v14 >= v30)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v14);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

id sub_100404BD4()
{
  return sub_100404BE0(&qword_100832A88);
}

id sub_100404BE0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  sub_100047110(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release(v3);
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain(v19);
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100404D90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100404DB8(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_100404DDC(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100149F48(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_100404E54(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_100404E54(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::Int v10;
  uint64_t v11;
  char **v12;
  Swift::Int v13;
  unint64_t v14;
  Swift::Int v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  id *v30;
  int v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v46;
  Swift::Int v47;
  Swift::Int v48;
  uint64_t *v49;
  uint64_t v50;
  Swift::Int v51;
  uint64_t v52;
  Swift::Int v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v69;
  void *v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  Swift::Int v130;
  char *v131;
  char *v132;
  Swift::Int v133;
  Swift::Int v134;
  Swift::Int v135;
  int v136;
  uint64_t v137;
  id *v138;
  uint64_t v139;
  Swift::Int v140;
  Swift::Int v141;
  Swift::Int v142;
  uint64_t v143;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_155;
    if (v3)
      sub_100405770(0, v3, 1, a1);
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
    {
LABEL_169:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
      __break(1u);
    }
    else
    {
      v130 = v4;
      v135 = v3;
      v127 = a1;
      if (v3 >= 2)
      {
        v6 = v5 >> 1;
        v7 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
        v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
        *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
        v138 = (id *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
        v143 = v8;
LABEL_12:
        v10 = 0;
        v11 = *a1;
        v128 = *a1 + 16;
        v129 = *a1 - 8;
        v9 = (char *)_swiftEmptyArrayStorage;
        v12 = &selRef_celebrationMovieURLForAchievementIdentifer_;
        v13 = v135;
        v139 = *a1;
        while (1)
        {
          v15 = v10 + 1;
          v134 = v10;
          if (v10 + 1 >= v13)
            goto LABEL_49;
          v131 = v9;
          v16 = *(void **)(v11 + 8 * v10);
          v17 = *(id *)(v11 + 8 * v15);
          v18 = v16;
          v19 = objc_msgSend(v17, v12[243]);
          if (!v19)
            goto LABEL_167;
          v20 = v19;
          v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
          v23 = v22;

          v24 = objc_msgSend(v18, v12[243]);
          if (!v24)
          {
LABEL_168:
            __break(1u);
            goto LABEL_169;
          }
          v25 = v24;
          v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
          v28 = v27;

          v29 = v21 == v26 && v23 == v28;
          v10 = v134;
          if (v29)
          {
            v136 = 0;
            v28 = v23;
          }
          else
          {
            v136 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v26, v28, 1);
          }
          swift_bridgeObjectRelease(v23);
          swift_bridgeObjectRelease(v28);

          v15 = v134 + 2;
          v12 = &selRef_celebrationMovieURLForAchievementIdentifer_;
          if (v134 + 2 >= v135)
            goto LABEL_40;
          v30 = (id *)(v128 + 8 * v134);
          while (1)
          {
            v140 = v15;
            v32 = *(v30 - 1);
            v33 = *v30;
            v34 = v32;
            v35 = objc_msgSend(v33, v12[243]);
            if (!v35)
              goto LABEL_163;
            v36 = v35;
            v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
            v39 = v38;

            v40 = objc_msgSend(v34, v12[243]);
            if (!v40)
              goto LABEL_164;
            v41 = v40;
            v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
            v44 = v43;

            if (v37 == v42 && v39 == v44)
            {

              swift_bridgeObjectRelease_n(v39, 2);
              if ((v136 & 1) != 0)
              {
                v9 = v131;
                v11 = v139;
                v15 = v140;
                v12 = &selRef_celebrationMovieURLForAchievementIdentifer_;
                v10 = v134;
                goto LABEL_41;
              }
              goto LABEL_27;
            }
            v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v42, v44, 1);

            swift_bridgeObjectRelease(v39);
            swift_bridgeObjectRelease(v44);
            if (((v136 ^ v31) & 1) != 0)
              break;
LABEL_27:
            v15 = v140 + 1;
            ++v30;
            v12 = &selRef_celebrationMovieURLForAchievementIdentifer_;
            if (v135 == v140 + 1)
            {
              v15 = v135;
              goto LABEL_39;
            }
          }
          v12 = &selRef_celebrationMovieURLForAchievementIdentifer_;
          v15 = v140;
LABEL_39:
          v10 = v134;
LABEL_40:
          v9 = v131;
          v11 = v139;
          if ((v136 & 1) != 0)
          {
LABEL_41:
            if (v15 < v10)
              goto LABEL_156;
            if (v10 < v15)
            {
              v46 = (uint64_t *)(v129 + 8 * v15);
              v47 = v15;
              v48 = v10;
              v49 = (uint64_t *)(v11 + 8 * v10);
              do
              {
                if (v48 != --v47)
                {
                  if (!v11)
                    goto LABEL_165;
                  v50 = *v49;
                  *v49 = *v46;
                  *v46 = v50;
                }
                ++v48;
                --v46;
                ++v49;
              }
              while (v48 < v47);
            }
          }
LABEL_49:
          if (v15 < v135)
          {
            if (__OFSUB__(v15, v10))
              goto LABEL_154;
            if (v15 - v10 < v130)
            {
              if (__OFADD__(v10, v130))
                goto LABEL_157;
              v51 = v135;
              if (v10 + v130 < v135)
                v51 = v10 + v130;
              if (v51 >= v10)
              {
                if (v15 != v51)
                {
                  v132 = v9;
                  v133 = v51;
                  v52 = v129 + 8 * v15;
                  do
                  {
                    v54 = *(void **)(v11 + 8 * v15);
                    v137 = v52;
                    v141 = v15;
                    while (1)
                    {
                      v55 = *(void **)v52;
                      v56 = v54;
                      v57 = v55;
                      v58 = objc_msgSend(v56, v12[243]);
                      if (!v58)
                        goto LABEL_160;
                      v59 = v58;
                      v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
                      v62 = v61;

                      v63 = objc_msgSend(v57, v12[243]);
                      if (!v63)
                        goto LABEL_159;
                      v64 = v63;
                      v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
                      v67 = v66;

                      if (v60 == v65 && v62 == v67)
                        break;
                      v69 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v62, v65, v67, 1);

                      swift_bridgeObjectRelease(v62);
                      swift_bridgeObjectRelease(v67);
                      v11 = v139;
                      if ((v69 & 1) == 0)
                        goto LABEL_59;
                      v53 = v141;
                      if (!v139)
                        goto LABEL_161;
                      v70 = *(void **)v52;
                      v54 = *(void **)(v52 + 8);
                      *(_QWORD *)v52 = v54;
                      *(_QWORD *)(v52 + 8) = v70;
                      v52 -= 8;
                      ++v10;
                      v12 = &selRef_celebrationMovieURLForAchievementIdentifer_;
                      if (v141 == v10)
                        goto LABEL_60;
                    }

                    swift_bridgeObjectRelease_n(v62, 2);
                    v11 = v139;
LABEL_59:
                    v12 = &selRef_celebrationMovieURLForAchievementIdentifer_;
                    v53 = v141;
LABEL_60:
                    v15 = v53 + 1;
                    v52 = v137 + 8;
                    v10 = v134;
                  }
                  while (v15 != v133);
                  v15 = v133;
                  v9 = v132;
                }
                goto LABEL_73;
              }
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
              goto LABEL_168;
            }
          }
LABEL_73:
          if (v15 < v10)
            goto LABEL_149;
          if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
            v9 = sub_100147150(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
          v72 = *((_QWORD *)v9 + 2);
          v71 = *((_QWORD *)v9 + 3);
          v14 = v72 + 1;
          v142 = v15;
          if (v72 >= v71 >> 1)
            v9 = sub_100147150((char *)(v71 > 1), v72 + 1, 1, v9);
          *((_QWORD *)v9 + 2) = v14;
          v73 = v9 + 32;
          v74 = &v9[16 * v72 + 32];
          *(_QWORD *)v74 = v134;
          *((_QWORD *)v74 + 1) = v142;
          if (v72)
          {
            while (2)
            {
              v75 = v14 - 1;
              if (v14 >= 4)
              {
                v80 = &v73[16 * v14];
                v81 = *((_QWORD *)v80 - 8);
                v82 = *((_QWORD *)v80 - 7);
                v86 = __OFSUB__(v82, v81);
                v83 = v82 - v81;
                if (v86)
                  goto LABEL_138;
                v85 = *((_QWORD *)v80 - 6);
                v84 = *((_QWORD *)v80 - 5);
                v86 = __OFSUB__(v84, v85);
                v78 = v84 - v85;
                v79 = v86;
                if (v86)
                  goto LABEL_139;
                v87 = v14 - 2;
                v88 = &v73[16 * v14 - 32];
                v90 = *(_QWORD *)v88;
                v89 = *((_QWORD *)v88 + 1);
                v86 = __OFSUB__(v89, v90);
                v91 = v89 - v90;
                if (v86)
                  goto LABEL_141;
                v86 = __OFADD__(v78, v91);
                v92 = v78 + v91;
                if (v86)
                  goto LABEL_144;
                if (v92 >= v83)
                {
                  v110 = &v73[16 * v75];
                  v112 = *(_QWORD *)v110;
                  v111 = *((_QWORD *)v110 + 1);
                  v86 = __OFSUB__(v111, v112);
                  v113 = v111 - v112;
                  if (v86)
                    goto LABEL_148;
                  v103 = v78 < v113;
                }
                else
                {
LABEL_92:
                  if ((v79 & 1) != 0)
                    goto LABEL_140;
                  v87 = v14 - 2;
                  v93 = &v73[16 * v14 - 32];
                  v95 = *(_QWORD *)v93;
                  v94 = *((_QWORD *)v93 + 1);
                  v96 = __OFSUB__(v94, v95);
                  v97 = v94 - v95;
                  v98 = v96;
                  if (v96)
                    goto LABEL_143;
                  v99 = &v73[16 * v75];
                  v101 = *(_QWORD *)v99;
                  v100 = *((_QWORD *)v99 + 1);
                  v86 = __OFSUB__(v100, v101);
                  v102 = v100 - v101;
                  if (v86)
                    goto LABEL_146;
                  if (__OFADD__(v97, v102))
                    goto LABEL_147;
                  if (v97 + v102 < v78)
                    goto LABEL_104;
                  v103 = v78 < v102;
                }
                if (v103)
                  v75 = v87;
              }
              else
              {
                if (v14 == 3)
                {
                  v77 = *((_QWORD *)v9 + 4);
                  v76 = *((_QWORD *)v9 + 5);
                  v86 = __OFSUB__(v76, v77);
                  v78 = v76 - v77;
                  v79 = v86;
                  goto LABEL_92;
                }
                v104 = *((_QWORD *)v9 + 4);
                v105 = *((_QWORD *)v9 + 5);
                v86 = __OFSUB__(v105, v104);
                v97 = v105 - v104;
                v98 = v86;
LABEL_104:
                if ((v98 & 1) != 0)
                  goto LABEL_142;
                v106 = &v73[16 * v75];
                v108 = *(_QWORD *)v106;
                v107 = *((_QWORD *)v106 + 1);
                v86 = __OFSUB__(v107, v108);
                v109 = v107 - v108;
                if (v86)
                  goto LABEL_145;
                if (v109 < v97)
                  goto LABEL_14;
              }
              v114 = v75 - 1;
              if (v75 - 1 >= v14)
              {
                __break(1u);
LABEL_135:
                __break(1u);
LABEL_136:
                __break(1u);
LABEL_137:
                __break(1u);
LABEL_138:
                __break(1u);
LABEL_139:
                __break(1u);
LABEL_140:
                __break(1u);
LABEL_141:
                __break(1u);
LABEL_142:
                __break(1u);
LABEL_143:
                __break(1u);
LABEL_144:
                __break(1u);
LABEL_145:
                __break(1u);
LABEL_146:
                __break(1u);
LABEL_147:
                __break(1u);
LABEL_148:
                __break(1u);
LABEL_149:
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                __break(1u);
LABEL_153:
                __break(1u);
LABEL_154:
                __break(1u);
LABEL_155:
                __break(1u);
LABEL_156:
                __break(1u);
LABEL_157:
                __break(1u);
                goto LABEL_158;
              }
              if (!v11)
                goto LABEL_162;
              v115 = &v73[16 * v114];
              v116 = *(_QWORD *)v115;
              v117 = &v73[16 * v75];
              v118 = *((_QWORD *)v117 + 1);
              sub_100405918((id *)(v11 + 8 * *(_QWORD *)v115), (id *)(v11 + 8 * *(_QWORD *)v117), (id *)(v11 + 8 * v118), v138);
              if (v1)
                goto LABEL_132;
              if (v118 < v116)
                goto LABEL_135;
              if (v75 > *((_QWORD *)v9 + 2))
                goto LABEL_136;
              *(_QWORD *)v115 = v116;
              *(_QWORD *)&v73[16 * v114 + 8] = v118;
              v119 = *((_QWORD *)v9 + 2);
              if (v75 >= v119)
                goto LABEL_137;
              v14 = v119 - 1;
              memmove(&v73[16 * v75], v117 + 16, 16 * (v119 - 1 - v75));
              *((_QWORD *)v9 + 2) = v119 - 1;
              if (v119 <= 2)
                goto LABEL_14;
              continue;
            }
          }
          v14 = 1;
LABEL_14:
          v13 = v135;
          v10 = v142;
          v12 = &selRef_celebrationMovieURLForAchievementIdentifer_;
          if (v142 >= v135)
            goto LABEL_121;
        }
      }
      v9 = (char *)_swiftEmptyArrayStorage;
      v143 = (uint64_t)_swiftEmptyArrayStorage;
      v138 = (id *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
      if (v3 == 1)
        goto LABEL_12;
      v14 = _swiftEmptyArrayStorage[2];
LABEL_121:
      if (v14 >= 2)
      {
        v120 = *v127;
        do
        {
          v121 = v14 - 2;
          if (v14 < 2)
            goto LABEL_150;
          if (!v120)
            goto LABEL_166;
          v122 = *(_QWORD *)&v9[16 * v121 + 32];
          v123 = *(_QWORD *)&v9[16 * v14 + 24];
          sub_100405918((id *)(v120 + 8 * v122), (id *)(v120 + 8 * *(_QWORD *)&v9[16 * v14 + 16]), (id *)(v120 + 8 * v123), v138);
          if (v1)
            break;
          if (v123 < v122)
            goto LABEL_151;
          if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
            v9 = sub_100147754((uint64_t)v9);
          if (v121 >= *((_QWORD *)v9 + 2))
            goto LABEL_152;
          v124 = &v9[16 * v121 + 32];
          *(_QWORD *)v124 = v122;
          *((_QWORD *)v124 + 1) = v123;
          v125 = *((_QWORD *)v9 + 2);
          if (v14 > v125)
            goto LABEL_153;
          memmove(&v9[16 * v14 + 16], &v9[16 * v14 + 32], 16 * (v125 - v14));
          *((_QWORD *)v9 + 2) = v125 - 1;
          v14 = v125 - 1;
        }
        while (v125 > 2);
      }
LABEL_132:
      swift_bridgeObjectRelease(v9);
      *(_QWORD *)((v143 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v126);
      swift_bridgeObjectRelease(v143);
    }
  }
}

char *sub_100405770(char *result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  char **v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  void *v22;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;

  v24 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v26 = *a4;
    v5 = *a4 + 8 * a3 - 8;
    v6 = &selRef_celebrationMovieURLForAchievementIdentifer_;
LABEL_6:
    v7 = *(void **)(v26 + 8 * v4);
    v27 = v24;
    v25 = v5;
    while (1)
    {
      v8 = *(void **)v5;
      v9 = v7;
      v10 = v8;
      result = (char *)objc_msgSend(v9, v6[243]);
      if (!result)
        break;
      v11 = result;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
      v14 = v13;

      result = (char *)objc_msgSend(v10, v6[243]);
      if (!result)
        goto LABEL_18;
      v15 = result;
      v16 = v4;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
      v19 = v18;

      if (v12 == v17 && v14 == v19)
      {

        result = (char *)swift_bridgeObjectRelease_n(v14, 2);
        v4 = v16;
        v6 = &selRef_celebrationMovieURLForAchievementIdentifer_;
LABEL_5:
        ++v4;
        v5 = v25 + 8;
        if (v4 == a2)
          return result;
        goto LABEL_6;
      }
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v17, v19, 1);

      swift_bridgeObjectRelease(v14);
      result = (char *)swift_bridgeObjectRelease(v19);
      v4 = v16;
      v6 = &selRef_celebrationMovieURLForAchievementIdentifer_;
      if ((v21 & 1) != 0)
      {
        if (!v26)
          goto LABEL_19;
        v22 = *(void **)v5;
        v7 = *(void **)(v5 + 8);
        *(_QWORD *)v5 = v7;
        *(_QWORD *)(v5 + 8) = v22;
        v5 -= 8;
        if ((char *)v4 != ++v27)
          continue;
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  return result;
}

uint64_t sub_100405918(id *__src, id *a2, id *a3, id *__dst)
{
  id *v5;
  id *v6;
  id *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char **v14;
  void **v15;
  id *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char **v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  id *v33;
  void **v34;
  id *v35;
  char *v36;
  char **v37;
  id *v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v55;
  id *v56;
  unint64_t v57;
  uint64_t result;
  char *v59;
  void **v60;
  id *v61;
  void **v62;
  id *v63;
  void **v64;
  char *v65;
  id *v66;
  id *v67;
  char *v68;
  id *v69;
  id *v70;

  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = (char *)a3 - (char *)a2;
  v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v12 = (char *)a3 - (char *)a2;
  v13 = v12 >> 3;
  v70 = __src;
  v69 = __dst;
  if (v10 < v12 >> 3)
  {
    if (v8 < -7)
      goto LABEL_65;
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v60 = &__dst[v10];
    v68 = (char *)v60;
    if (v6 < v5 && v8 >= 8)
    {
      v14 = &selRef_celebrationMovieURLForAchievementIdentifer_;
      v15 = __dst;
      v66 = v5;
      while (1)
      {
        v62 = v7;
        v64 = v15;
        v16 = v6;
        v17 = *v15;
        v18 = *v6;
        v19 = v17;
        v20 = objc_msgSend(v18, v14[243]);
        if (!v20)
          goto LABEL_63;
        v21 = v20;
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v24 = v23;

        v25 = v14;
        v26 = objc_msgSend(v19, v14[243]);
        if (!v26)
          goto LABEL_64;
        v27 = v26;
        v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
        v30 = v29;

        if (v22 == v28 && v24 == v30)
          break;
        v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v28, v30, 1);

        swift_bridgeObjectRelease(v24);
        swift_bridgeObjectRelease(v30);
        if ((v32 & 1) == 0)
          goto LABEL_25;
        v33 = v16 + 1;
        v34 = v62;
        v15 = v64;
        v35 = v66;
        if (v62 >= v16 && v62 < v33)
        {
          v14 = v25;
          if (v62 != v16)
            *v62 = *v16;
          goto LABEL_29;
        }
        *v62 = *v16;
LABEL_28:
        v14 = v25;
LABEL_29:
        v7 = v34 + 1;
        if (v15 < v60)
        {
          v6 = v33;
          if (v33 < v35)
            continue;
        }
        v70 = v7;
        goto LABEL_60;
      }

      swift_bridgeObjectRelease_n(v24, 2);
LABEL_25:
      v34 = v62;
      v35 = v66;
      if (v62 != v64)
        *v62 = *v64;
      v15 = v64 + 1;
      v69 = v64 + 1;
      v33 = v16;
      goto LABEL_28;
    }
LABEL_60:
    sub_100147308(&v70, &v69, &v68);
    return 1;
  }
  if (v11 < -7)
    goto LABEL_65;
  if (__dst != a2 || &a2[v13] <= __dst)
    memmove(__dst, a2, 8 * v13);
  v65 = (char *)__dst;
  v36 = (char *)&__dst[v13];
  v68 = v36;
  v70 = v6;
  if (v7 >= v6 || v11 < 8)
    goto LABEL_60;
  v37 = &selRef_celebrationMovieURLForAchievementIdentifer_;
  v38 = v6;
  v63 = v7;
  while (1)
  {
    v59 = v36;
    v61 = v6;
    v67 = v5;
    v40 = (void *)*((_QWORD *)v36 - 1);
    v36 -= 8;
    v39 = v40;
    v41 = *--v38;
    v42 = v39;
    v43 = v41;
    v44 = objc_msgSend(v42, v37[243]);
    if (!v44)
      break;
    v45 = v44;
    v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    v48 = v47;

    v49 = objc_msgSend(v43, v37[243]);
    if (!v49)
      goto LABEL_62;
    v50 = v49;
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v53 = v52;

    if (v46 == v51 && v48 == v53)
    {

      swift_bridgeObjectRelease_n(v48, 2);
      v56 = v67;
      v5 = v67 - 1;
LABEL_52:
      v38 = v61;
      v57 = (unint64_t)v63;
      v68 = v36;
      v37 = &selRef_celebrationMovieURLForAchievementIdentifer_;
      if (v56 < (id *)v59 || v5 >= (id *)v59 || v56 != (id *)v59)
        *v5 = *(id *)v36;
      goto LABEL_56;
    }
    v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, v48, v51, v53, 1);

    swift_bridgeObjectRelease(v48);
    swift_bridgeObjectRelease(v53);
    v56 = v67;
    v5 = v67 - 1;
    if ((v55 & 1) == 0)
      goto LABEL_52;
    v57 = (unint64_t)v63;
    v36 = v59;
    if (v67 != v61 || v5 >= v61)
      *v5 = *v38;
    v70 = v38;
    v37 = &selRef_celebrationMovieURLForAchievementIdentifer_;
LABEL_56:
    if ((unint64_t)v38 > v57)
    {
      v6 = v38;
      if (v36 > v65)
        continue;
    }
    goto LABEL_60;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100405D7C()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100405D9C()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100405DBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100047110(&qword_100820C68);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100021CC0(a1, (uint64_t)v4, &qword_100820C68);
  return EnvironmentValues.textCase.setter(v4);
}

uint64_t sub_100405E44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FitnessPlusUpNextView(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1008328BC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000EA380;
  return sub_1003EE000(a1, v5, v6, v7, v8);
}

double sub_100405ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  double result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v12 = sub_100047110(&qword_100820A30);
  v61 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v59 = v13;
  v60 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10004D28C(0x65uLL);
  v18 = static Log.triage.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v56 = a6;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v53 = v23;
    *(_DWORD *)v22 = 134218498;
    v63 = v62;
    v64 = v23;
    v54 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 4);
    *(_WORD *)(v22 + 12) = 2080;
    v52 = v22 + 14;
    v24 = StaticString.description.getter(a2, a3, a4);
    v55 = a2;
    v25 = v12;
    v26 = a3;
    v27 = a4;
    a4 = a5;
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)v28;
    v63 = sub_10003E8EC(v24, v28, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v52);
    v30 = v29;
    a5 = a4;
    LOBYTE(a4) = v27;
    a3 = v26;
    v12 = v25;
    a2 = v55;
    swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    *(_WORD *)(v22 + 22) = 2048;
    v63 = a5;
    a1 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v22, 0x20u);
    v38 = v53;
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v58);
  v40 = v60;
  v39 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, a1, v12);
  v41 = *(unsigned __int8 *)(v39 + 80);
  v42 = (v41 + 56) & ~v41;
  v43 = swift_allocObject(&unk_10079E5F0, v42 + v59, v41 | 7);
  *(_QWORD *)(v43 + 16) = v62;
  *(_QWORD *)(v43 + 24) = a2;
  *(_QWORD *)(v43 + 32) = a3;
  *(_BYTE *)(v43 + 40) = a4;
  *(_QWORD *)(v43 + 48) = a5;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v43 + v42, v40, v12);
  v44 = sub_100047110(&qword_100822168);
  v45 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v44);
  v47 = v46;
  v48 = swift_allocObject(&unk_10079E618, 32, 7);
  *(_QWORD *)(v48 + 16) = sub_10040E880;
  *(_QWORD *)(v48 + 24) = v43;
  v49 = swift_retain(v43);
  v45(sub_10039F514, v48, v49);
  swift_release(v43);
  swift_release(v47);
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

double sub_100406220(uint64_t a1)
{
  uint64_t v1;

  return sub_100405ED8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

double sub_100406230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  double result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v12 = sub_100047110(&qword_100832C58);
  v61 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v59 = v13;
  v60 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10004D28C(0x65uLL);
  v18 = static Log.triage.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v56 = a6;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v53 = v23;
    *(_DWORD *)v22 = 134218498;
    v63 = v62;
    v64 = v23;
    v54 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 4);
    *(_WORD *)(v22 + 12) = 2080;
    v52 = v22 + 14;
    v24 = StaticString.description.getter(a2, a3, a4);
    v55 = a2;
    v25 = v12;
    v26 = a3;
    v27 = a4;
    a4 = a5;
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)v28;
    v63 = sub_10003E8EC(v24, v28, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v52);
    v30 = v29;
    a5 = a4;
    LOBYTE(a4) = v27;
    a3 = v26;
    v12 = v25;
    a2 = v55;
    swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    *(_WORD *)(v22 + 22) = 2048;
    v63 = a5;
    a1 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v22, 0x20u);
    v38 = v53;
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v58);
  v40 = v60;
  v39 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, a1, v12);
  v41 = *(unsigned __int8 *)(v39 + 80);
  v42 = (v41 + 56) & ~v41;
  v43 = swift_allocObject(&unk_10079EAA0, v42 + v59, v41 | 7);
  *(_QWORD *)(v43 + 16) = v62;
  *(_QWORD *)(v43 + 24) = a2;
  *(_QWORD *)(v43 + 32) = a3;
  *(_BYTE *)(v43 + 40) = a4;
  *(_QWORD *)(v43 + 48) = a5;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v43 + v42, v40, v12);
  v44 = sub_100047110(&qword_100830B70);
  v45 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v44);
  v47 = v46;
  v48 = swift_allocObject(&unk_10079EAC8, 32, 7);
  *(_QWORD *)(v48 + 16) = sub_100419F90;
  *(_QWORD *)(v48 + 24) = v43;
  v49 = swift_retain(v43);
  v45(sub_10039F514, v48, v49);
  swift_release(v43);
  swift_release(v47);
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

double sub_100406578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  double result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v12 = sub_100047110(&qword_100832AE8);
  v61 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v59 = v13;
  v60 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10004D28C(0x65uLL);
  v18 = static Log.triage.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v56 = a6;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v53 = v23;
    *(_DWORD *)v22 = 134218498;
    v63 = v62;
    v64 = v23;
    v54 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 4);
    *(_WORD *)(v22 + 12) = 2080;
    v52 = v22 + 14;
    v24 = StaticString.description.getter(a2, a3, a4);
    v55 = a2;
    v25 = v12;
    v26 = a3;
    v27 = a4;
    a4 = a5;
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)v28;
    v63 = sub_10003E8EC(v24, v28, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v52);
    v30 = v29;
    a5 = a4;
    LOBYTE(a4) = v27;
    a3 = v26;
    v12 = v25;
    a2 = v55;
    swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    *(_WORD *)(v22 + 22) = 2048;
    v63 = a5;
    a1 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v22, 0x20u);
    v38 = v53;
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v58);
  v40 = v60;
  v39 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, a1, v12);
  v41 = *(unsigned __int8 *)(v39 + 80);
  v42 = (v41 + 56) & ~v41;
  v43 = swift_allocObject(&unk_10079E820, v42 + v59, v41 | 7);
  *(_QWORD *)(v43 + 16) = v62;
  *(_QWORD *)(v43 + 24) = a2;
  *(_QWORD *)(v43 + 32) = a3;
  *(_BYTE *)(v43 + 40) = a4;
  *(_QWORD *)(v43 + 48) = a5;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v43 + v42, v40, v12);
  v44 = sub_100047110((uint64_t *)&unk_100836170);
  v45 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v44);
  v47 = v46;
  v48 = swift_allocObject(&unk_10079E848, 32, 7);
  *(_QWORD *)(v48 + 16) = sub_100419D54;
  *(_QWORD *)(v48 + 24) = v43;
  v49 = swift_retain(v43);
  v45(sub_100110028, v48, v49);
  swift_release(v43);
  swift_release(v47);
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

double sub_1004068C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  double result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v12 = sub_100047110(&qword_100832C38);
  v61 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v59 = v13;
  v60 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10004D28C(0x65uLL);
  v18 = static Log.triage.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v56 = a6;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v53 = v23;
    *(_DWORD *)v22 = 134218498;
    v63 = v62;
    v64 = v23;
    v54 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 4);
    *(_WORD *)(v22 + 12) = 2080;
    v52 = v22 + 14;
    v24 = StaticString.description.getter(a2, a3, a4);
    v55 = a2;
    v25 = v12;
    v26 = a3;
    v27 = a4;
    a4 = a5;
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)v28;
    v63 = sub_10003E8EC(v24, v28, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v52);
    v30 = v29;
    a5 = a4;
    LOBYTE(a4) = v27;
    a3 = v26;
    v12 = v25;
    a2 = v55;
    swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    *(_WORD *)(v22 + 22) = 2048;
    v63 = a5;
    a1 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v22, 0x20u);
    v38 = v53;
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v58);
  v40 = v60;
  v39 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, a1, v12);
  v41 = *(unsigned __int8 *)(v39 + 80);
  v42 = (v41 + 56) & ~v41;
  v43 = swift_allocObject(&unk_10079EA50, v42 + v59, v41 | 7);
  *(_QWORD *)(v43 + 16) = v62;
  *(_QWORD *)(v43 + 24) = a2;
  *(_QWORD *)(v43 + 32) = a3;
  *(_BYTE *)(v43 + 40) = a4;
  *(_QWORD *)(v43 + 48) = a5;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v43 + v42, v40, v12);
  v44 = sub_100047110(&qword_100832C40);
  v45 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v44);
  v47 = v46;
  v48 = swift_allocObject(&unk_10079EA78, 32, 7);
  *(_QWORD *)(v48 + 16) = sub_100419F18;
  *(_QWORD *)(v48 + 24) = v43;
  v49 = swift_retain(v43);
  v45(sub_10039F514, v48, v49);
  swift_release(v43);
  swift_release(v47);
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

double sub_100406C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  double result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v12 = sub_100047110(&qword_100832C18);
  v61 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v59 = v13;
  v60 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10004D28C(0x65uLL);
  v18 = static Log.triage.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v56 = a6;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v53 = v23;
    *(_DWORD *)v22 = 134218498;
    v63 = v62;
    v64 = v23;
    v54 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 4);
    *(_WORD *)(v22 + 12) = 2080;
    v52 = v22 + 14;
    v24 = StaticString.description.getter(a2, a3, a4);
    v55 = a2;
    v25 = v12;
    v26 = a3;
    v27 = a4;
    a4 = a5;
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)v28;
    v63 = sub_10003E8EC(v24, v28, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v52);
    v30 = v29;
    a5 = a4;
    LOBYTE(a4) = v27;
    a3 = v26;
    v12 = v25;
    a2 = v55;
    swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    *(_WORD *)(v22 + 22) = 2048;
    v63 = a5;
    a1 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v22, 0x20u);
    v38 = v53;
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v58);
  v40 = v60;
  v39 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, a1, v12);
  v41 = *(unsigned __int8 *)(v39 + 80);
  v42 = (v41 + 56) & ~v41;
  v43 = swift_allocObject(&unk_10079EA00, v42 + v59, v41 | 7);
  *(_QWORD *)(v43 + 16) = v62;
  *(_QWORD *)(v43 + 24) = a2;
  *(_QWORD *)(v43 + 32) = a3;
  *(_BYTE *)(v43 + 40) = a4;
  *(_QWORD *)(v43 + 48) = a5;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v43 + v42, v40, v12);
  v44 = sub_100047110(&qword_100832C20);
  v45 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v44);
  v47 = v46;
  v48 = swift_allocObject(&unk_10079EA28, 32, 7);
  *(_QWORD *)(v48 + 16) = sub_100419EFC;
  *(_QWORD *)(v48 + 24) = v43;
  v49 = swift_retain(v43);
  v45(sub_10039F514, v48, v49);
  swift_release(v43);
  swift_release(v47);
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

double sub_100406F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  double result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v12 = sub_100047110(&qword_100832BF8);
  v61 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v59 = v13;
  v60 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10004D28C(0x65uLL);
  v18 = static Log.triage.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v56 = a6;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v53 = v23;
    *(_DWORD *)v22 = 134218498;
    v63 = v62;
    v64 = v23;
    v54 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 4);
    *(_WORD *)(v22 + 12) = 2080;
    v52 = v22 + 14;
    v24 = StaticString.description.getter(a2, a3, a4);
    v55 = a2;
    v25 = v12;
    v26 = a3;
    v27 = a4;
    a4 = a5;
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)v28;
    v63 = sub_10003E8EC(v24, v28, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v52);
    v30 = v29;
    a5 = a4;
    LOBYTE(a4) = v27;
    a3 = v26;
    v12 = v25;
    a2 = v55;
    swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    *(_WORD *)(v22 + 22) = 2048;
    v63 = a5;
    a1 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v22, 0x20u);
    v38 = v53;
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v58);
  v40 = v60;
  v39 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, a1, v12);
  v41 = *(unsigned __int8 *)(v39 + 80);
  v42 = (v41 + 56) & ~v41;
  v43 = swift_allocObject(&unk_10079E9B0, v42 + v59, v41 | 7);
  *(_QWORD *)(v43 + 16) = v62;
  *(_QWORD *)(v43 + 24) = a2;
  *(_QWORD *)(v43 + 32) = a3;
  *(_BYTE *)(v43 + 40) = a4;
  *(_QWORD *)(v43 + 48) = a5;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v43 + v42, v40, v12);
  v44 = sub_100047110(&qword_100832C00);
  v45 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v44);
  v47 = v46;
  v48 = swift_allocObject(&unk_10079E9D8, 32, 7);
  *(_QWORD *)(v48 + 16) = sub_100419EE0;
  *(_QWORD *)(v48 + 24) = v43;
  v49 = swift_retain(v43);
  v45(sub_10039F514, v48, v49);
  swift_release(v43);
  swift_release(v47);
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

double sub_100407298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  double result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v12 = sub_100047110(&qword_100832BD8);
  v61 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v59 = v13;
  v60 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10004D28C(0x65uLL);
  v18 = static Log.triage.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v56 = a6;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v53 = v23;
    *(_DWORD *)v22 = 134218498;
    v63 = v62;
    v64 = v23;
    v54 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 4);
    *(_WORD *)(v22 + 12) = 2080;
    v52 = v22 + 14;
    v24 = StaticString.description.getter(a2, a3, a4);
    v55 = a2;
    v25 = v12;
    v26 = a3;
    v27 = a4;
    a4 = a5;
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)v28;
    v63 = sub_10003E8EC(v24, v28, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v52);
    v30 = v29;
    a5 = a4;
    LOBYTE(a4) = v27;
    a3 = v26;
    v12 = v25;
    a2 = v55;
    swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    *(_WORD *)(v22 + 22) = 2048;
    v63 = a5;
    a1 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v22, 0x20u);
    v38 = v53;
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v58);
  v40 = v60;
  v39 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, a1, v12);
  v41 = *(unsigned __int8 *)(v39 + 80);
  v42 = (v41 + 56) & ~v41;
  v43 = swift_allocObject(&unk_10079E960, v42 + v59, v41 | 7);
  *(_QWORD *)(v43 + 16) = v62;
  *(_QWORD *)(v43 + 24) = a2;
  *(_QWORD *)(v43 + 32) = a3;
  *(_BYTE *)(v43 + 40) = a4;
  *(_QWORD *)(v43 + 48) = a5;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v43 + v42, v40, v12);
  v44 = sub_100047110(&qword_100832BE0);
  v45 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v44);
  v47 = v46;
  v48 = swift_allocObject(&unk_10079E988, 32, 7);
  *(_QWORD *)(v48 + 16) = sub_100419EC4;
  *(_QWORD *)(v48 + 24) = v43;
  v49 = swift_retain(v43);
  v45(sub_10039F514, v48, v49);
  swift_release(v43);
  swift_release(v47);
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

double sub_1004075E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  double result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v12 = sub_100047110(&qword_100832BB8);
  v61 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v59 = v13;
  v60 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10004D28C(0x65uLL);
  v18 = static Log.triage.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v56 = a6;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v53 = v23;
    *(_DWORD *)v22 = 134218498;
    v63 = v62;
    v64 = v23;
    v54 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 4);
    *(_WORD *)(v22 + 12) = 2080;
    v52 = v22 + 14;
    v24 = StaticString.description.getter(a2, a3, a4);
    v55 = a2;
    v25 = v12;
    v26 = a3;
    v27 = a4;
    a4 = a5;
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)v28;
    v63 = sub_10003E8EC(v24, v28, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v52);
    v30 = v29;
    a5 = a4;
    LOBYTE(a4) = v27;
    a3 = v26;
    v12 = v25;
    a2 = v55;
    swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    *(_WORD *)(v22 + 22) = 2048;
    v63 = a5;
    a1 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v22, 0x20u);
    v38 = v53;
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v58);
  v40 = v60;
  v39 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, a1, v12);
  v41 = *(unsigned __int8 *)(v39 + 80);
  v42 = (v41 + 56) & ~v41;
  v43 = swift_allocObject(&unk_10079E910, v42 + v59, v41 | 7);
  *(_QWORD *)(v43 + 16) = v62;
  *(_QWORD *)(v43 + 24) = a2;
  *(_QWORD *)(v43 + 32) = a3;
  *(_BYTE *)(v43 + 40) = a4;
  *(_QWORD *)(v43 + 48) = a5;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v43 + v42, v40, v12);
  v44 = sub_100047110(&qword_100832BC0);
  v45 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v44);
  v47 = v46;
  v48 = swift_allocObject(&unk_10079E938, 32, 7);
  *(_QWORD *)(v48 + 16) = sub_100419EA8;
  *(_QWORD *)(v48 + 24) = v43;
  v49 = swift_retain(v43);
  v45(sub_10039F514, v48, v49);
  swift_release(v43);
  swift_release(v47);
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

double sub_100407928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  double result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v12 = sub_100047110(&qword_100832B98);
  v61 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v59 = v13;
  v60 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10004D28C(0x65uLL);
  v18 = static Log.triage.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v56 = a6;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v53 = v23;
    *(_DWORD *)v22 = 134218498;
    v63 = v62;
    v64 = v23;
    v54 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 4);
    *(_WORD *)(v22 + 12) = 2080;
    v52 = v22 + 14;
    v24 = StaticString.description.getter(a2, a3, a4);
    v55 = a2;
    v25 = v12;
    v26 = a3;
    v27 = a4;
    a4 = a5;
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)v28;
    v63 = sub_10003E8EC(v24, v28, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v52);
    v30 = v29;
    a5 = a4;
    LOBYTE(a4) = v27;
    a3 = v26;
    v12 = v25;
    a2 = v55;
    swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    *(_WORD *)(v22 + 22) = 2048;
    v63 = a5;
    a1 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v22, 0x20u);
    v38 = v53;
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v58);
  v40 = v60;
  v39 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, a1, v12);
  v41 = *(unsigned __int8 *)(v39 + 80);
  v42 = (v41 + 56) & ~v41;
  v43 = swift_allocObject(&unk_10079E8C0, v42 + v59, v41 | 7);
  *(_QWORD *)(v43 + 16) = v62;
  *(_QWORD *)(v43 + 24) = a2;
  *(_QWORD *)(v43 + 32) = a3;
  *(_BYTE *)(v43 + 40) = a4;
  *(_QWORD *)(v43 + 48) = a5;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v43 + v42, v40, v12);
  v44 = sub_100047110(&qword_100832BA0);
  v45 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v44);
  v47 = v46;
  v48 = swift_allocObject(&unk_10079E8E8, 32, 7);
  *(_QWORD *)(v48 + 16) = sub_100419E8C;
  *(_QWORD *)(v48 + 24) = v43;
  v49 = swift_retain(v43);
  v45(sub_10039F514, v48, v49);
  swift_release(v43);
  swift_release(v47);
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

double sub_100407C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  double result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v12 = sub_100047110(&qword_100832B78);
  v61 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v59 = v13;
  v60 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10004D28C(0x65uLL);
  v18 = static Log.triage.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v56 = a6;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v53 = v23;
    *(_DWORD *)v22 = 134218498;
    v63 = v62;
    v64 = v23;
    v54 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 4);
    *(_WORD *)(v22 + 12) = 2080;
    v52 = v22 + 14;
    v24 = StaticString.description.getter(a2, a3, a4);
    v55 = a2;
    v25 = v12;
    v26 = a3;
    v27 = a4;
    a4 = a5;
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)v28;
    v63 = sub_10003E8EC(v24, v28, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v52);
    v30 = v29;
    a5 = a4;
    LOBYTE(a4) = v27;
    a3 = v26;
    v12 = v25;
    a2 = v55;
    swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    *(_WORD *)(v22 + 22) = 2048;
    v63 = a5;
    a1 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v22, 0x20u);
    v38 = v53;
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v58);
  v40 = v60;
  v39 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, a1, v12);
  v41 = *(unsigned __int8 *)(v39 + 80);
  v42 = (v41 + 56) & ~v41;
  v43 = swift_allocObject(&unk_10079E870, v42 + v59, v41 | 7);
  *(_QWORD *)(v43 + 16) = v62;
  *(_QWORD *)(v43 + 24) = a2;
  *(_QWORD *)(v43 + 32) = a3;
  *(_BYTE *)(v43 + 40) = a4;
  *(_QWORD *)(v43 + 48) = a5;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v43 + v42, v40, v12);
  v44 = sub_100047110(&qword_100832B80);
  v45 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v44);
  v47 = v46;
  v48 = swift_allocObject(&unk_10079E898, 32, 7);
  *(_QWORD *)(v48 + 16) = sub_100419DD8;
  *(_QWORD *)(v48 + 24) = v43;
  v49 = swift_retain(v43);
  v45(sub_100419E40, v48, v49);
  swift_release(v43);
  swift_release(v47);
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

double sub_100407FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  double result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v12 = sub_100047110(&qword_100832AC0);
  v61 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v59 = v13;
  v60 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10004D28C(0x65uLL);
  v18 = static Log.triage.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v56 = a6;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v53 = v23;
    *(_DWORD *)v22 = 134218498;
    v63 = v62;
    v64 = v23;
    v54 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 4);
    *(_WORD *)(v22 + 12) = 2080;
    v52 = v22 + 14;
    v24 = StaticString.description.getter(a2, a3, a4);
    v55 = a2;
    v25 = v12;
    v26 = a3;
    v27 = a4;
    a4 = a5;
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)v28;
    v63 = sub_10003E8EC(v24, v28, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v52);
    v30 = v29;
    a5 = a4;
    LOBYTE(a4) = v27;
    a3 = v26;
    v12 = v25;
    a2 = v55;
    swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    *(_WORD *)(v22 + 22) = 2048;
    v63 = a5;
    a1 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v22, 0x20u);
    v38 = v53;
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v58);
  v40 = v60;
  v39 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, a1, v12);
  v41 = *(unsigned __int8 *)(v39 + 80);
  v42 = (v41 + 56) & ~v41;
  v43 = swift_allocObject(&unk_10079E730, v42 + v59, v41 | 7);
  *(_QWORD *)(v43 + 16) = v62;
  *(_QWORD *)(v43 + 24) = a2;
  *(_QWORD *)(v43 + 32) = a3;
  *(_BYTE *)(v43 + 40) = a4;
  *(_QWORD *)(v43 + 48) = a5;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v43 + v42, v40, v12);
  v44 = sub_100047110(&qword_100820A48);
  v45 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v44);
  v47 = v46;
  v48 = swift_allocObject(&unk_10079E758, 32, 7);
  *(_QWORD *)(v48 + 16) = sub_100419BF8;
  *(_QWORD *)(v48 + 24) = v43;
  v49 = swift_retain(v43);
  v45(sub_10039F514, v48, v49);
  swift_release(v43);
  swift_release(v47);
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

double sub_100408300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t (*)(uint64_t), uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  double result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v12 = sub_100047110(&qword_100832AC8);
  v61 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v59 = v13;
  v60 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10004D28C(0x65uLL);
  v18 = static Log.triage.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v56 = a6;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v53 = v23;
    *(_DWORD *)v22 = 134218498;
    v63 = v62;
    v64 = v23;
    v54 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 4);
    *(_WORD *)(v22 + 12) = 2080;
    v52 = v22 + 14;
    v24 = StaticString.description.getter(a2, a3, a4);
    v55 = a2;
    v25 = v12;
    v26 = a3;
    v27 = a4;
    a4 = a5;
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)v28;
    v63 = sub_10003E8EC(v24, v28, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v52);
    v30 = v29;
    a5 = a4;
    LOBYTE(a4) = v27;
    a3 = v26;
    v12 = v25;
    a2 = v55;
    swift_bridgeObjectRelease(v30, v31, v32, v33, v34, v35, v36, v37);
    *(_WORD *)(v22 + 22) = 2048;
    v63 = a5;
    a1 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v22, 0x20u);
    v38 = v53;
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v58);
  v40 = v60;
  v39 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, a1, v12);
  v41 = *(unsigned __int8 *)(v39 + 80);
  v42 = (v41 + 56) & ~v41;
  v43 = swift_allocObject(&unk_10079E780, v42 + v59, v41 | 7);
  *(_QWORD *)(v43 + 16) = v62;
  *(_QWORD *)(v43 + 24) = a2;
  *(_QWORD *)(v43 + 32) = a3;
  *(_BYTE *)(v43 + 40) = a4;
  *(_QWORD *)(v43 + 48) = a5;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v43 + v42, v40, v12);
  v44 = sub_100047110(&qword_100832AD0);
  v45 = (void (*)(uint64_t (*)(uint64_t), uint64_t, __n128))Promise.operation.getter(v44);
  v47 = v46;
  v48 = swift_allocObject(&unk_10079E7A8, 32, 7);
  *(_QWORD *)(v48 + 16) = sub_100419C80;
  *(_QWORD *)(v48 + 24) = v43;
  v49 = swift_retain(v43);
  v45(sub_100167CD8, v48, v49);
  swift_release(v43);
  swift_release(v47);
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

uint64_t sub_100408648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  if (sub_1005F175C(2, 18, 0, 0))
  {
    v13 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v6[16] = v13;
    v14 = sub_10001E724(0, (unint64_t *)&qword_1008284B0, UIImage_ptr);
    *v13 = v6;
    v13[1] = sub_10041B49C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6 + 10, a1, a2, a3, a4, a5, a6, v14);
  }
  else
  {
    if (a1)
    {
      ObjectType = swift_getObjectType(a1);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
      v19 = v18;
    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    return swift_task_switch(sub_100408774, v17, v19);
  }
}

uint64_t sub_100408774()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0 + 2;
  v2 = (void (*)(uint64_t))v0[14];
  v4 = v0[12];
  v3 = v0[13];
  v0[7] = v0 + 11;
  v0[2] = v0;
  v0[3] = sub_10041B4BC;
  v5 = swift_continuation_init(v0 + 2, 1);
  v6 = sub_100047110(&qword_100820A30);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10001E724(0, (unint64_t *)&qword_1008284B0, UIImage_ptr);
  swift_bridgeObjectRetain(v3);
  v10 = sub_100047110(&qword_10082EEA0);
  CheckedContinuation.init(continuation:function:)(v5, v4, v3, v9, v10, &protocol self-conformance witness table for Error);
  v2(v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  swift_task_dealloc(v8);
  return swift_continuation_await(v1);
}

uint64_t sub_100408888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  if (sub_1005F175C(2, 18, 0, 0))
  {
    v13 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v6[16] = v13;
    v14 = sub_100047110(&qword_100827568);
    *v13 = v6;
    v13[1] = sub_10041B49C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6 + 10, a1, a2, a3, a4, a5, a6, v14);
  }
  else
  {
    if (a1)
    {
      ObjectType = swift_getObjectType(a1);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
      v19 = v18;
    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    return swift_task_switch(sub_1004089A8, v17, v19);
  }
}

uint64_t sub_1004089A8()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0 + 2;
  v2 = (void (*)(uint64_t))v0[14];
  v4 = v0[12];
  v3 = v0[13];
  v0[7] = v0 + 11;
  v0[2] = v0;
  v0[3] = sub_10041B4BC;
  v5 = swift_continuation_init(v0 + 2, 1);
  v6 = sub_100047110(&qword_100832C58);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(v3);
  v9 = sub_100047110(&qword_100827568);
  v10 = sub_100047110(&qword_10082EEA0);
  CheckedContinuation.init(continuation:function:)(v5, v4, v3, v9, v10, &protocol self-conformance witness table for Error);
  v2(v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  swift_task_dealloc(v8);
  return swift_continuation_await(v1);
}

uint64_t sub_100408AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  if (sub_1005F175C(2, 18, 0, 0))
  {
    v13 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v6[16] = v13;
    v14 = sub_100047110(&qword_100832C30);
    *v13 = v6;
    v13[1] = sub_10041B49C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6 + 10, a1, a2, a3, a4, a5, a6, v14);
  }
  else
  {
    if (a1)
    {
      ObjectType = swift_getObjectType(a1);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
      v19 = v18;
    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    return swift_task_switch(sub_100408BD0, v17, v19);
  }
}

uint64_t sub_100408BD0()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0 + 2;
  v2 = (void (*)(uint64_t))v0[14];
  v4 = v0[12];
  v3 = v0[13];
  v0[7] = v0 + 11;
  v0[2] = v0;
  v0[3] = sub_10041B4BC;
  v5 = swift_continuation_init(v0 + 2, 1);
  v6 = sub_100047110(&qword_100832C38);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(v3);
  v9 = sub_100047110(&qword_100832C30);
  v10 = sub_100047110(&qword_10082EEA0);
  CheckedContinuation.init(continuation:function:)(v5, v4, v3, v9, v10, &protocol self-conformance witness table for Error);
  v2(v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  swift_task_dealloc(v8);
  return swift_continuation_await(v1);
}

uint64_t sub_100408CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  if (sub_1005F175C(2, 18, 0, 0))
  {
    v13 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v6[16] = v13;
    v14 = sub_100047110(&qword_100832C10);
    *v13 = v6;
    v13[1] = sub_10041B49C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6 + 10, a1, a2, a3, a4, a5, a6, v14);
  }
  else
  {
    if (a1)
    {
      ObjectType = swift_getObjectType(a1);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
      v19 = v18;
    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    return swift_task_switch(sub_100408DF8, v17, v19);
  }
}

uint64_t sub_100408DF8()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0 + 2;
  v2 = (void (*)(uint64_t))v0[14];
  v4 = v0[12];
  v3 = v0[13];
  v0[7] = v0 + 11;
  v0[2] = v0;
  v0[3] = sub_10041B4BC;
  v5 = swift_continuation_init(v0 + 2, 1);
  v6 = sub_100047110(&qword_100832C18);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(v3);
  v9 = sub_100047110(&qword_100832C10);
  v10 = sub_100047110(&qword_10082EEA0);
  CheckedContinuation.init(continuation:function:)(v5, v4, v3, v9, v10, &protocol self-conformance witness table for Error);
  v2(v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  swift_task_dealloc(v8);
  return swift_continuation_await(v1);
}

uint64_t sub_100408F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  if (sub_1005F175C(2, 18, 0, 0))
  {
    v13 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v6[16] = v13;
    v14 = sub_100047110(&qword_100832BF0);
    *v13 = v6;
    v13[1] = sub_10041B49C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6 + 10, a1, a2, a3, a4, a5, a6, v14);
  }
  else
  {
    if (a1)
    {
      ObjectType = swift_getObjectType(a1);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
      v19 = v18;
    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    return swift_task_switch(sub_100409020, v17, v19);
  }
}

uint64_t sub_100409020()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0 + 2;
  v2 = (void (*)(uint64_t))v0[14];
  v4 = v0[12];
  v3 = v0[13];
  v0[7] = v0 + 11;
  v0[2] = v0;
  v0[3] = sub_10041B4BC;
  v5 = swift_continuation_init(v0 + 2, 1);
  v6 = sub_100047110(&qword_100832BF8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(v3);
  v9 = sub_100047110(&qword_100832BF0);
  v10 = sub_100047110(&qword_10082EEA0);
  CheckedContinuation.init(continuation:function:)(v5, v4, v3, v9, v10, &protocol self-conformance witness table for Error);
  v2(v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  swift_task_dealloc(v8);
  return swift_continuation_await(v1);
}

uint64_t sub_100409128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  if (sub_1005F175C(2, 18, 0, 0))
  {
    v13 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v6[16] = v13;
    v14 = sub_100047110(&qword_100832BD0);
    *v13 = v6;
    v13[1] = sub_10041B49C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6 + 10, a1, a2, a3, a4, a5, a6, v14);
  }
  else
  {
    if (a1)
    {
      ObjectType = swift_getObjectType(a1);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
      v19 = v18;
    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    return swift_task_switch(sub_100409248, v17, v19);
  }
}

uint64_t sub_100409248()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0 + 2;
  v2 = (void (*)(uint64_t))v0[14];
  v4 = v0[12];
  v3 = v0[13];
  v0[7] = v0 + 11;
  v0[2] = v0;
  v0[3] = sub_10041B4BC;
  v5 = swift_continuation_init(v0 + 2, 1);
  v6 = sub_100047110(&qword_100832BD8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(v3);
  v9 = sub_100047110(&qword_100832BD0);
  v10 = sub_100047110(&qword_10082EEA0);
  CheckedContinuation.init(continuation:function:)(v5, v4, v3, v9, v10, &protocol self-conformance witness table for Error);
  v2(v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  swift_task_dealloc(v8);
  return swift_continuation_await(v1);
}

uint64_t sub_100409350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  if (sub_1005F175C(2, 18, 0, 0))
  {
    v13 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v6[16] = v13;
    v14 = sub_100047110(&qword_100832BB0);
    *v13 = v6;
    v13[1] = sub_10041B49C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6 + 10, a1, a2, a3, a4, a5, a6, v14);
  }
  else
  {
    if (a1)
    {
      ObjectType = swift_getObjectType(a1);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
      v19 = v18;
    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    return swift_task_switch(sub_100409470, v17, v19);
  }
}

uint64_t sub_100409470()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0 + 2;
  v2 = (void (*)(uint64_t))v0[14];
  v4 = v0[12];
  v3 = v0[13];
  v0[7] = v0 + 11;
  v0[2] = v0;
  v0[3] = sub_10041B4BC;
  v5 = swift_continuation_init(v0 + 2, 1);
  v6 = sub_100047110(&qword_100832BB8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(v3);
  v9 = sub_100047110(&qword_100832BB0);
  v10 = sub_100047110(&qword_10082EEA0);
  CheckedContinuation.init(continuation:function:)(v5, v4, v3, v9, v10, &protocol self-conformance witness table for Error);
  v2(v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  swift_task_dealloc(v8);
  return swift_continuation_await(v1);
}

uint64_t sub_100409578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  if (sub_1005F175C(2, 18, 0, 0))
  {
    v13 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v6[16] = v13;
    v14 = sub_100047110(&qword_100832B90);
    *v13 = v6;
    v13[1] = sub_10041B49C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6 + 10, a1, a2, a3, a4, a5, a6, v14);
  }
  else
  {
    if (a1)
    {
      ObjectType = swift_getObjectType(a1);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
      v19 = v18;
    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    return swift_task_switch(sub_100409698, v17, v19);
  }
}

uint64_t sub_100409698()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0 + 2;
  v2 = (void (*)(uint64_t))v0[14];
  v4 = v0[12];
  v3 = v0[13];
  v0[7] = v0 + 11;
  v0[2] = v0;
  v0[3] = sub_10041B4BC;
  v5 = swift_continuation_init(v0 + 2, 1);
  v6 = sub_100047110(&qword_100832B98);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(v3);
  v9 = sub_100047110(&qword_100832B90);
  v10 = sub_100047110(&qword_10082EEA0);
  CheckedContinuation.init(continuation:function:)(v5, v4, v3, v9, v10, &protocol self-conformance witness table for Error);
  v2(v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  swift_task_dealloc(v8);
  return swift_continuation_await(v1);
}

uint64_t sub_1004097A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v13;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6[16] = a5;
  v6[17] = a6;
  v6[14] = a3;
  v6[15] = a4;
  if (sub_1005F175C(2, 18, 0, 0))
  {
    v13 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v6[18] = v13;
    *v13 = v6;
    v13[1] = sub_1004098B8;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6 + 10, a1, a2, a3, a4, a5, a6, &type metadata for String);
  }
  else
  {
    if (a1)
    {
      ObjectType = swift_getObjectType(a1);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
      v18 = v17;
    }
    else
    {
      v16 = 0;
      v18 = 0;
    }
    return swift_task_switch(sub_100409918, v16, v18);
  }
}

uint64_t sub_1004098B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (v0)
    return (*(uint64_t (**)(void))(v4 + 8))();
  else
    return (*(uint64_t (**)(_QWORD, _QWORD))(v4 + 8))(*(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_100409918()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0 + 2;
  v2 = (void (*)(uint64_t))v0[16];
  v4 = v0[14];
  v3 = v0[15];
  v0[7] = v0 + 12;
  v0[2] = v0;
  v0[3] = sub_100409A0C;
  v5 = swift_continuation_init(v0 + 2, 1);
  v6 = sub_100047110(&qword_100832B78);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(v3);
  v9 = sub_100047110(&qword_10082EEA0);
  CheckedContinuation.init(continuation:function:)(v5, v4, v3, &type metadata for String, v9, &protocol self-conformance witness table for Error);
  v2(v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  swift_task_dealloc(v8);
  return swift_continuation_await(v1);
}

uint64_t sub_100409A0C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (!*(_QWORD *)(v1 + 48))
    return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
  swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100409A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  if (sub_1005F175C(2, 18, 0, 0))
  {
    v13 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v6[16] = v13;
    v14 = sub_100047110(&qword_100830B08);
    *v13 = v6;
    v13[1] = sub_100409B9C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6 + 10, a1, a2, a3, a4, a5, a6, v14);
  }
  else
  {
    if (a1)
    {
      ObjectType = swift_getObjectType(a1);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
      v19 = v18;
    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    return swift_task_switch(sub_100409C00, v17, v19);
  }
}

uint64_t sub_100409B9C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (v0)
    return (*(uint64_t (**)(void))(v4 + 8))();
  else
    return (*(uint64_t (**)(_QWORD))(v4 + 8))(*(_QWORD *)(v2 + 80));
}

uint64_t sub_100409C00()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0 + 2;
  v2 = (void (*)(uint64_t))v0[14];
  v4 = v0[12];
  v3 = v0[13];
  v0[7] = v0 + 11;
  v0[2] = v0;
  v0[3] = sub_100409D08;
  v5 = swift_continuation_init(v0 + 2, 1);
  v6 = sub_100047110(&qword_100832AC0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(v3);
  v9 = sub_100047110(&qword_100830B08);
  v10 = sub_100047110(&qword_10082EEA0);
  CheckedContinuation.init(continuation:function:)(v5, v4, v3, v9, v10, &protocol self-conformance witness table for Error);
  v2(v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  swift_task_dealloc(v8);
  return swift_continuation_await(v1);
}

uint64_t sub_100409D08()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (!*(_QWORD *)(v1 + 48))
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(_QWORD *)(v1 + 88));
  swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100409D78(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a7;
  v40 = a6;
  v39 = a5;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = static Log.triage.getter(v13);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(32, -1);
    v38 = v12;
    v20 = v19;
    v36 = swift_slowAlloc(32, -1);
    v42 = a3;
    v43 = v36;
    *(_DWORD *)v20 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v20 + 4);
    *(_WORD *)(v20 + 12) = 2080;
    v37 = v11;
    v21 = StaticString.description.getter(a4, v39, v40);
    v23 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
    v42 = sub_10003E8EC(v21, v22, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v20 + 14);
    swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
    *(_WORD *)(v20 + 22) = 2048;
    v42 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v20 + 24);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    v31 = v36;
    swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v37);
    if ((a2 & 1) != 0)
    {
LABEL_3:
      v43 = (uint64_t)a1;
      swift_errorRetain(a1);
      v32 = sub_100047110(&qword_100820A30);
      return CheckedContinuation.resume(throwing:)(&v43, v32);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    if ((a2 & 1) != 0)
      goto LABEL_3;
  }
  v43 = (uint64_t)a1;
  v34 = a1;
  v35 = sub_100047110(&qword_100820A30);
  return CheckedContinuation.resume(returning:)(&v43, v35);
}

uint64_t sub_100409FF0(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a7;
  v40 = a6;
  v39 = a5;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = static Log.triage.getter(v13);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(32, -1);
    v38 = v12;
    v20 = v19;
    v36 = swift_slowAlloc(32, -1);
    v42 = a3;
    v43 = v36;
    *(_DWORD *)v20 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v20 + 4);
    *(_WORD *)(v20 + 12) = 2080;
    v37 = v11;
    v21 = StaticString.description.getter(a4, v39, v40);
    v23 = (CHWorkoutDetailHeartRateTableViewCell *)v22;
    v42 = sub_10003E8EC(v21, v22, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v20 + 14);
    swift_bridgeObjectRelease(v23, v24, v25, v26, v27, v28, v29, v30);
    *(_WORD *)(v20 + 22) = 2048;
    v42 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v20 + 24);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    v31 = v36;
    swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v37);
    if ((a2 & 1) != 0)
    {
LABEL_3:
      v43 = (uint64_t)a1;
      swift_errorRetain(a1);
      v32 = sub_100047110(&qword_100832C58);
      return CheckedContinuation.resume(throwing:)(&v43, v32);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    if ((a2 & 1) != 0)
      goto LABEL_3;
  }
  v43 = (uint64_t)a1;
  v34 = a1;
  v35 = sub_100047110(&qword_100832C58);
  return CheckedContinuation.resume(returning:)(&v43, v35);
}

uint64_t sub_10040A268(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v44 = a7;
  v43 = a6;
  v42 = a5;
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = static Log.triage.getter(v15);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v40 = a1;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v41 = a8;
    v24 = v23;
    v45 = a3;
    v46 = v23;
    *(_DWORD *)v22 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v22 + 4);
    *(_WORD *)(v22 + 12) = 2080;
    v39 = v13;
    v25 = StaticString.description.getter(a4, v42, v43);
    v27 = (CHWorkoutDetailHeartRateTableViewCell *)v26;
    v45 = sub_10003E8EC(v25, v26, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v22 + 14);
    swift_bridgeObjectRelease(v27, v28, v29, v30, v31, v32, v33, v34);
    *(_WORD *)(v22 + 22) = 2048;
    v45 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    v35 = v22;
    a1 = v40;
    swift_slowDealloc(v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v39);
    if ((a2 & 1) != 0)
    {
LABEL_3:
      v46 = a1;
      swift_errorRetain(a1);
      v36 = sub_100047110(&qword_100832AE8);
      return CheckedContinuation.resume(throwing:)(&v46, v36);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    if ((a2 & 1) != 0)
      goto LABEL_3;
  }
  v38 = sub_100047110(&qword_100832AE8);
  return CheckedContinuation.resume(returning:)(v38, v38);
}

uint64_t sub_10040A4CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[2];

  v44 = a8;
  v43 = a7;
  v42 = a6;
  v14 = type metadata accessor for Logger(0);
  v45 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = static Log.triage.getter(v15);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v40 = a2;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v41 = a9;
    v24 = v23;
    v46 = a4;
    v47[0] = v23;
    *(_DWORD *)v22 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v22 + 4);
    *(_WORD *)(v22 + 12) = 2080;
    v39 = v14;
    v25 = StaticString.description.getter(a5, v42, v43);
    v27 = (CHWorkoutDetailHeartRateTableViewCell *)v26;
    v46 = sub_10003E8EC(v25, v26, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v22 + 14);
    swift_bridgeObjectRelease(v27, v28, v29, v30, v31, v32, v33, v34);
    *(_WORD *)(v22 + 22) = 2048;
    v46 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v22 + 24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    v35 = v22;
    a2 = v40;
    swift_slowDealloc(v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v39);
    if ((a3 & 1) != 0)
    {
LABEL_3:
      v47[0] = a1;
      swift_errorRetain(a1);
      v36 = sub_100047110(&qword_100832B78);
      return CheckedContinuation.resume(throwing:)(v47, v36);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v14);
    if ((a3 & 1) != 0)
      goto LABEL_3;
  }
  v47[0] = a1;
  v47[1] = a2;
  swift_bridgeObjectRetain(a2);
  v38 = sub_100047110(&qword_100832B78);
  return CheckedContinuation.resume(returning:)(v47, v38);
}

uint64_t sub_10040A758(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  char v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v43 = a7;
  v42 = a6;
  v41 = a5;
  v13 = type metadata accessor for Logger(0);
  v44 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = static Log.triage.getter(v14);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(32, -1);
    v39 = v13;
    v21 = v20;
    v38 = swift_slowAlloc(32, -1);
    v45 = a3;
    v46 = v38;
    *(_DWORD *)v21 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v21 + 4);
    *(_WORD *)(v21 + 12) = 2080;
    v40 = a2;
    v22 = StaticString.description.getter(a4, v41, v42);
    v24 = (CHWorkoutDetailHeartRateTableViewCell *)v23;
    v45 = sub_10003E8EC(v22, v23, &v46);
    v25 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v21 + 14);
    swift_bridgeObjectRelease(v24, v26, v27, v28, v29, v30, v31, v32);
    *(_WORD *)(v21 + 22) = 2048;
    v45 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v21 + 24);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v21, 0x20u);
    v33 = v38;
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v39);
    if ((v25 & 1) != 0)
    {
LABEL_3:
      v46 = a1;
      swift_errorRetain(a1);
      v34 = sub_100047110(a9);
      return CheckedContinuation.resume(throwing:)(&v46, v34);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v13);
    if ((a2 & 1) != 0)
      goto LABEL_3;
  }
  v46 = a1;
  swift_bridgeObjectRetain(a1);
  v36 = sub_100047110(a9);
  return CheckedContinuation.resume(returning:)(&v46, v36);
}

uint64_t sub_10040A9E0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(_QWORD), uint64_t *a9, uint64_t *a10)
{
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;

  v54 = a6;
  v53 = a5;
  v51 = a3;
  v52 = a4;
  v50 = a2;
  v12 = a10;
  v13 = a8(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v45 - v15;
  v58 = a9;
  v57 = sub_100047110(a9);
  __chkstk_darwin(v57);
  v18 = (uint64_t *)((char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = type metadata accessor for Logger(0);
  v55 = *(_QWORD *)(v19 - 8);
  v56 = v19;
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = static Log.triage.getter(v20);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(32, -1);
    v49 = a7;
    v27 = v26;
    v28 = swift_slowAlloc(32, -1);
    v48 = v13;
    v46 = v28;
    *(_DWORD *)v27 = 134218498;
    v59 = (uint64_t)v50;
    v60 = v28;
    v50 = a10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60, v27 + 4);
    *(_WORD *)(v27 + 12) = 2080;
    v47 = a1;
    v29 = StaticString.description.getter(v51, v52, v53);
    v30 = v14;
    v32 = (CHWorkoutDetailHeartRateTableViewCell *)v31;
    v59 = sub_10003E8EC(v29, v31, &v60);
    a1 = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60, v27 + 14);
    v33 = v32;
    v14 = v30;
    swift_bridgeObjectRelease(v33, v34, v35, v36, v37, v38, v39, v40);
    *(_WORD *)(v27 + 22) = 2048;
    v59 = v54;
    v12 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60, v27 + 24);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v27, 0x20u);
    v41 = v46;
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    v13 = v48;
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v27, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v55 + 8))(v22, v56);
  sub_100021CC0(a1, (uint64_t)v18, v58);
  if (swift_getEnumCaseMultiPayload(v18, v57) == 1)
  {
    v60 = *v18;
    v42 = sub_100047110(v12);
    return CheckedContinuation.resume(throwing:)(&v60, v42);
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v14 + 32))(v16, v18, v13);
    v44 = sub_100047110(v12);
    return CheckedContinuation.resume(returning:)(v16, v44);
  }
}

void (*sub_10040ACDC(void (**a1)(id *), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_10040AD88(v6, a2, a3);
  return sub_10040AD30;
}

void (*sub_10040AD34(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_10040ADF4(v6, a2, a3);
  return sub_10040AD30;
}

void (*sub_10040AD88(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s10FitnessApp24ActivitySharingHighlightV13HighlightTypeOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_10040ADF4(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for ActivitySharingHighlight.HighlightType;
  }
  __break(1u);
  return result;
}

uint64_t sub_10040AE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10040BD48(a1, a2, a3, type metadata accessor for FriendCard, (uint64_t)&off_1007A9638, (void (*)(_QWORD *, id))sub_100410200);
}

uint64_t sub_10040AE7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  char *v29;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t i;
  uint64_t v37;
  uint64_t v38;
  char v39;
  id v40;
  uint64_t v41;
  _QWORD v42[11];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t CardActionContext;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _BYTE v56[24];
  uint64_t v57;
  _QWORD v58[4];
  _BYTE v59[8];
  uint64_t v60[5];

  v54 = a2;
  v5 = sub_100047110(&qword_10082EDD0);
  __chkstk_darwin(v5);
  v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TrendListMetric(0);
  v51 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_1008329C8);
  __chkstk_darwin(v11);
  v55 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for TrendsActionContext(0);
  v52 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100824DE0);
  __chkstk_darwin(v15);
  v44 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for CatalogTipSection(0);
  v42[9] = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42[7] = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100047110(&qword_100820040);
  __chkstk_darwin(v18);
  v50 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for CatalogTipCard(0);
  v47 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v42[10] = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100047110(&qword_1008329D0);
  __chkstk_darwin(v21);
  v48 = (char *)v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  CardActionContext = type metadata accessor for FitnessPlusUpNextCardActionContext(0);
  v45 = *(_QWORD *)(CardActionContext - 8);
  __chkstk_darwin(CardActionContext);
  v42[8] = (char *)v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for UUID(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60[3] = type metadata accessor for HistoryItemsCard(0);
  v60[4] = (uint64_t)&off_1007876D0;
  v60[0] = a1;
  v28 = *(void **)(a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController);
  if (!v28)
    goto LABEL_6;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_editMode) & 1) == 0)
  {
    v42[4] = a3;
    v31 = a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator;
    swift_beginAccess(v31, v59, 0, 0);
    sub_100021CC0(v31, (uint64_t)v56, &qword_1008324B0);
    v42[6] = v8;
    if (v57)
    {
      v42[5] = v10;
      sub_1000252E0((uint64_t)v56, (uint64_t)v58);
      swift_retain(a1);
      v32 = v28;
      sub_10001BE90((uint64_t)v56, &qword_1008324B0);
      v33 = *(_QWORD *)(*sub_100016804(v58, v58[3]) + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
      v34 = *(_QWORD *)(v33 + 16);
      if (v34)
      {
        v42[1] = v7;
        v42[2] = v14;
        v42[3] = v28;
        v35 = (_QWORD *)(v33 + 32);
        v42[0] = v33;
        swift_bridgeObjectRetain(v33);
        for (i = 0; i != v34; ++i)
        {
          v38 = v35[3];
          v37 = v35[4];
          sub_100016804(v35, v38);
          (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v37);
          v39 = static UUID.== infix(_:_:)(v27, v60[0] + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_uuid);
          (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
          if ((v39 & 1) != 0)
            break;
          v35 += 5;
        }
        swift_bridgeObjectRelease(v42[0]);
      }
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v58);
    }
    else
    {
      swift_retain(a1);
      v40 = v28;
      sub_10001BE90((uint64_t)v56, &qword_1008324B0);
    }
    v41 = v60[0];
    sub_10041548C(v60[0]);
    __asm { BR              X10 }
  }
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 16) == 3
    && *(_OWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type) == 0)
  {
LABEL_6:
    swift_retain(a1);
  }
  else
  {
    swift_retain(a1);
    v29 = v28;
    sub_100410DA4(a1, v29);

  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v60);
}

void sub_10040B454(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  int v4;

  v4 = sub_10054FEFC(v2, a2, 0);
  sub_1003123C8(v2, v4, 1, 0, 256);

  JUMPOUT(0x10040B218);
}

uint64_t sub_10040B484()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_10040B48C + *((int *)qword_10040BCF0 + v0)))();
}

void sub_10040B49C()
{
  void *v0;

  JUMPOUT(0x10040B218);
}

void sub_10040B4D0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  sub_100021CC0(*(_QWORD *)(v1 - 336), v1 - 320, (uint64_t *)&unk_100828420);
  if (*(_QWORD *)(v1 - 296))
  {
    if ((swift_dynamicCast(v1 - 208, v1 - 320, (char *)&type metadata for Any + 8, &type metadata for FriendCardActionContext, 6) & 1) != 0)
    {
      v2 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                     + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_activitySharingNavigationCoordinator);
      v3 = *(id *)(v1 - 208);
      swift_retain(v2);
      sub_10029D3A0(v3, 1);

      swift_release(v2);
    }
    else
    {

    }
  }
  else
  {

    sub_10001BE90(v1 - 320, (uint64_t *)&unk_100828420);
  }
  JUMPOUT(0x10040B218);
}

void sub_10040B974()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  id v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  sub_100021CC0(*(_QWORD *)(v1 - 336), v1 - 320, (uint64_t *)&unk_100828420);
  if (*(_QWORD *)(v1 - 296))
  {
    v2 = *(_QWORD *)(v1 - 384);
    v3 = *(_QWORD *)(v1 - 400);
    v4 = swift_dynamicCast(v2, v1 - 320, (char *)&type metadata for Any + 8, v3, 6);
    v5 = *(_QWORD *)(v1 - 408);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v2, v4 ^ 1u, 1, v3);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3) != 1)
    {
      v6 = *(_QWORD *)(v1 - 448);
      v7 = sub_100047C88(v2, v6, type metadata accessor for FitnessPlusUpNextCardActionContext);
      v8 = CatalogLockup.identifier.getter(v7);
      v10 = v9;
      v11 = objc_retain(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                              + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext));
      sub_1005366D0(v8, (uint64_t)v10);
      swift_bridgeObjectRelease(v10, v12, v13, v14, v15, v16, v17, v18);

      sub_100011F54(v6, type metadata accessor for FitnessPlusUpNextCardActionContext);
      goto LABEL_6;
    }
  }
  else
  {
    sub_10001BE90(v1 - 320, (uint64_t *)&unk_100828420);
    v2 = *(_QWORD *)(v1 - 384);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 - 408) + 56))(v2, 1, 1, *(_QWORD *)(v1 - 400));
  }

  sub_10001BE90(v2, &qword_1008329D0);
LABEL_6:
  JUMPOUT(0x10040B218);
}

void sub_10040BA8C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1000252E0(v1 - 128, v1 - 320);
  v2 = sub_100047110(&qword_1008200C0);
  v3 = *(_QWORD *)(v1 - 368);
  v4 = *(_QWORD *)(v1 - 376);
  v5 = swift_dynamicCast(v3, v1 - 320, v2, v4, 6);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 392) + 56);
  if ((v5 & 1) != 0)
  {
    v6(v3, 0, 1, v4);
    v7 = *(_QWORD *)(v1 - 432);
    sub_100047C88(v3, v7, type metadata accessor for CatalogTipCard);
    v8 = v7 + *(int *)(v4 + 36);
    v9 = *(_QWORD *)(v1 - 416);
    sub_100021CC0(v8, v9, &qword_100824DE0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 - 440) + 48))(v9, 1, *(_QWORD *)(v1 - 424)) == 1)
    {
      sub_100011F54(v7, type metadata accessor for CatalogTipCard);

      JUMPOUT(0x10040BC40);
    }
    v10 = *(_QWORD *)(v1 - 456);
    sub_100047C88(v9, v10, type metadata accessor for CatalogTipSection);
    sub_1003176F0(v10);
    sub_100316A50(v10);

    sub_100011F54(v10, type metadata accessor for CatalogTipSection);
    sub_100011F54(v7, type metadata accessor for CatalogTipCard);
  }
  else
  {
    v6(v3, 1, 1, v4);

    sub_10001BE90(v3, &qword_100820040);
  }
  JUMPOUT(0x10040B218);
}

uint64_t sub_10040BD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10040BD48(a1, a2, a3, type metadata accessor for FriendsHighlightCard, (uint64_t)&off_10079DA28, (void (*)(_QWORD *, id))sub_100411964);
}

uint64_t sub_10040BD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10040BD48(a1, a2, a3, type metadata accessor for TrendsCard, (uint64_t)&off_1007A4840, (void (*)(_QWORD *, id))sub_1004130AC);
}

uint64_t sub_10040BD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5, void (*a6)(_QWORD *, id))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  char *v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t i;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  id v46;
  _QWORD v48[9];
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t CardActionContext;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(_QWORD *, id);
  uint64_t (*v65)(_QWORD);
  _BYTE v66[24];
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  _BYTE v70[8];
  _QWORD v71[5];

  v64 = a6;
  v63 = a2;
  v10 = sub_100047110(&qword_10082EDD0);
  __chkstk_darwin(v10);
  v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for TrendListMetric(0);
  v57 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v14 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_1008329C8);
  __chkstk_darwin(v15);
  v61 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for TrendsActionContext(0);
  v60 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v59 = (char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100047110(&qword_100824DE0);
  __chkstk_darwin(v18);
  v50 = (char *)v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for CatalogTipSection(0);
  v48[7] = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v48[5] = (char *)v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100047110(&qword_100820040);
  __chkstk_darwin(v21);
  v56 = (char *)v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for CatalogTipCard(0);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v48[8] = (char *)v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100047110(&qword_1008329D0);
  __chkstk_darwin(v24);
  v54 = (char *)v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  CardActionContext = type metadata accessor for FitnessPlusUpNextCardActionContext(0);
  v51 = *(_QWORD *)(CardActionContext - 8);
  __chkstk_darwin(CardActionContext);
  v48[6] = (char *)v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for UUID(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)v48 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a4(0);
  v71[3] = v31;
  v71[4] = a5;
  v32 = sub_10004C480(v71);
  v65 = a4;
  sub_10004F8C8(a1, (uint64_t)v32, a4);
  v33 = *(void **)(a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController);
  if (v33)
  {
    if ((*((_BYTE *)v32 + *(int *)(v31 + 28)) & 1) == 0)
    {
      v64 = (void (*)(_QWORD *, id))v31;
      v48[3] = v14;
      v36 = a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator;
      swift_beginAccess(a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator, v70, 0, 0);
      sub_100021CC0(v36, (uint64_t)v66, &qword_1008324B0);
      if (v67)
      {
        v48[4] = a3;
        sub_1000252E0((uint64_t)v66, (uint64_t)&v68);
        v37 = v33;
        sub_10001BE90((uint64_t)v66, &qword_1008324B0);
        v38 = *(_QWORD *)(*sub_100016804(&v68, *((uint64_t *)&v69 + 1))
                        + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
        v39 = *(_QWORD *)(v38 + 16);
        if (v39)
        {
          v48[1] = v12;
          v48[2] = v33;
          v40 = (_QWORD *)(v38 + 32);
          v48[0] = v38;
          swift_bridgeObjectRetain(v38);
          for (i = 0; i != v39; ++i)
          {
            v43 = v40[3];
            v42 = v40[4];
            sub_100016804(v40, v43);
            (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v42);
            v44 = static UUID.== infix(_:_:)(v30, v32);
            (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
            if ((v44 & 1) != 0)
              goto LABEL_12;
            v40 += 5;
          }
          i = 0;
LABEL_12:
          v45 = v44 ^ 1;
          swift_bridgeObjectRelease(v48[0]);
        }
        else
        {
          i = 0;
          v45 = 1;
        }
        _s10FitnessApp24HistoryViewActionContextVwxx_0(&v68);
      }
      else
      {
        v46 = v33;
        sub_10001BE90((uint64_t)v66, &qword_1008324B0);
        i = 0;
        v45 = 1;
      }
      sub_100415204((uint64_t)v32, i, v45 & 1, 0, v65);
      __asm { BR              X10 }
    }
    v34 = (char *)v32 + *(int *)(v31 + 20);
    if (v34[16] != 3 || *(_OWORD *)v34 != 0)
    {
      v35 = v33;
      v64(v32, v35);

    }
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v71);
}

void sub_10040C834()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  id v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  sub_100021CC0(*(_QWORD *)(v1 - 344), v1 - 320, (uint64_t *)&unk_100828420);
  if (*(_QWORD *)(v1 - 296))
  {
    v2 = *(_QWORD *)(v1 - 416);
    v3 = *(_QWORD *)(v1 - 432);
    v4 = swift_dynamicCast(v2, v1 - 320, (char *)&type metadata for Any + 8, v3, 6);
    v5 = *(_QWORD *)(v1 - 440);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v2, v4 ^ 1u, 1, v3);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3) != 1)
    {
      v6 = *(_QWORD *)(v1 - 480);
      v7 = sub_100047C88(v2, v6, type metadata accessor for FitnessPlusUpNextCardActionContext);
      v8 = CatalogLockup.identifier.getter(v7);
      v10 = v9;
      v11 = objc_retain(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                              + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext));
      sub_1005366D0(v8, (uint64_t)v10);
      swift_bridgeObjectRelease(v10, v12, v13, v14, v15, v16, v17, v18);

      sub_100011F54(v6, type metadata accessor for FitnessPlusUpNextCardActionContext);
      JUMPOUT(0x10040C80CLL);
    }
  }
  else
  {
    sub_10001BE90(v1 - 320, (uint64_t *)&unk_100828420);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 - 440) + 56))(*(_QWORD *)(v1 - 416), 1, 1, *(_QWORD *)(v1 - 432));
  }

  JUMPOUT(0x10040C5C0);
}

void sub_10040C94C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1000252E0(v1 - 128, v1 - 320);
  v2 = sub_100047110(&qword_1008200C0);
  v3 = *(_QWORD *)(v1 - 400);
  v4 = *(_QWORD *)(v1 - 408);
  v5 = swift_dynamicCast(v3, v1 - 320, v2, v4, 6);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 424) + 56);
  if ((v5 & 1) != 0)
  {
    v6(v3, 0, 1, v4);
    v7 = *(_QWORD *)(v1 - 464);
    sub_100047C88(v3, v7, type metadata accessor for CatalogTipCard);
    v8 = v7 + *(int *)(v4 + 36);
    v9 = *(_QWORD *)(v1 - 448);
    sub_100021CC0(v8, v9, &qword_100824DE0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 - 472) + 48))(v9, 1, *(_QWORD *)(v1 - 456)) == 1)
    {
      sub_100011F54(v7, type metadata accessor for CatalogTipCard);

      JUMPOUT(0x10040C5C0);
    }
    v10 = *(_QWORD *)(v1 - 488);
    sub_100047C88(v9, v10, type metadata accessor for CatalogTipSection);
    sub_1003176F0(v10);
    sub_100316A50(v10);

    sub_100011F54(v10, type metadata accessor for CatalogTipSection);
    sub_100011F54(v7, type metadata accessor for CatalogTipCard);
    JUMPOUT(0x10040C80CLL);
  }
  v6(v3, 1, 1, v4);

  JUMPOUT(0x10040C5C4);
}

uint64_t sub_10040CBC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t Card;
  _QWORD *v26;
  void *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  id v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  uint64_t i;
  Class isa;
  uint64_t v37;
  char v38;
  const char *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  char v46;
  id v47;
  uint64_t v49;
  CHWorkoutDetailHeartRateTableViewCell *v50;
  char *v51;
  void *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t CardActionContext;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE v75[24];
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  char v79[8];
  _QWORD v80[5];

  v73 = a2;
  v5 = type metadata accessor for UUID(0);
  v74 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_10082EDD0);
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for TrendListMetric(0);
  v68 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v67 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_1008329C8);
  __chkstk_darwin(v12);
  v71 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for TrendsActionContext(0);
  v70 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_100824DE0);
  __chkstk_darwin(v16);
  v60 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for CatalogTipSection(0);
  v57 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v55 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_100820040);
  __chkstk_darwin(v19);
  v66 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for CatalogTipCard(0);
  v63 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v58 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100047110(&qword_1008329D0);
  __chkstk_darwin(v22);
  v64 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  CardActionContext = type metadata accessor for FitnessPlusUpNextCardActionContext(0);
  v61 = *(_QWORD *)(CardActionContext - 8);
  __chkstk_darwin(CardActionContext);
  v56 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  Card = type metadata accessor for LoadCard(0);
  v80[3] = Card;
  v80[4] = &off_1007A5EF8;
  v26 = sub_10004C480(v80);
  sub_10004F8C8(a1, (uint64_t)v26, type metadata accessor for LoadCard);
  v27 = *(void **)(a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController);
  if (v27)
  {
    if ((*((_BYTE *)v26 + *(int *)(Card + 28)) & 1) == 0)
    {
      v30 = a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator;
      swift_beginAccess(a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator, v79, 0, 0);
      sub_100021CC0(v30, (uint64_t)v75, &qword_1008324B0);
      v53 = a3;
      if (v76)
      {
        v54 = v10;
        sub_1000252E0((uint64_t)v75, (uint64_t)&v77);
        v31 = v27;
        sub_10001BE90((uint64_t)v75, &qword_1008324B0);
        v32 = *(CHWorkoutDetailHeartRateTableViewCell **)(*sub_100016804(&v77, *((uint64_t *)&v78 + 1))
                                                        + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
        v33 = *(_QWORD *)v32->cellPadding;
        if (v33)
        {
          v51 = v15;
          v52 = v27;
          v34 = v32 + 1;
          v50 = v32;
          swift_bridgeObjectRetain(v32);
          for (i = 0; i != v33; ++i)
          {
            v37 = *(_QWORD *)v34->cellInset;
            isa = v34[1].super.super.super.super.isa;
            sub_100016804(v34, v37);
            (*((void (**)(uint64_t, Class))isa + 1))(v37, isa);
            v38 = static UUID.== infix(_:_:)(v7, v26);
            (*(void (**)(char *, uint64_t))(v74 + 8))(v7, v5);
            if ((v38 & 1) != 0)
              goto LABEL_12;
            v34 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)v34 + 40);
          }
          i = 0;
LABEL_12:
          v46 = v38 ^ 1;
          swift_bridgeObjectRelease(v50, v39, v40, v41, v42, v43, v44, v45);
        }
        else
        {
          i = 0;
          v46 = 1;
        }
        _s10FitnessApp24HistoryViewActionContextVwxx_0(&v77);
      }
      else
      {
        v47 = v27;
        sub_10001BE90((uint64_t)v75, &qword_1008324B0);
        i = 0;
        v46 = 1;
      }
      sub_100415204((uint64_t)v26, i, v46 & 1, 0, type metadata accessor for LoadCard);
      __asm { BR              X10 }
    }
    v28 = (char *)v26 + *(int *)(Card + 20);
    if (v28[16] != 3 || *(_OWORD *)v28 != 0)
    {
      v29 = v27;
      sub_100412508((uint64_t)v26, v29);

    }
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v80);
}

void sub_10040D698()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  id v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  sub_100021CC0(*(_QWORD *)(v1 - 336), v1 - 320, (uint64_t *)&unk_100828420);
  if (*(_QWORD *)(v1 - 296))
  {
    v2 = *(_QWORD *)(v1 - 408);
    v3 = *(_QWORD *)(v1 - 424);
    v4 = swift_dynamicCast(v2, v1 - 320, (char *)&type metadata for Any + 8, v3, 6);
    v5 = *(_QWORD *)(v1 - 432);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v2, v4 ^ 1u, 1, v3);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3) != 1)
    {
      v6 = *(_QWORD *)(v1 - 472);
      v7 = sub_100047C88(v2, v6, type metadata accessor for FitnessPlusUpNextCardActionContext);
      v8 = CatalogLockup.identifier.getter(v7);
      v10 = v9;
      v11 = objc_retain(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                              + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext));
      sub_1005366D0(v8, (uint64_t)v10);
      swift_bridgeObjectRelease(v10, v12, v13, v14, v15, v16, v17, v18);

      sub_100011F54(v6, type metadata accessor for FitnessPlusUpNextCardActionContext);
      JUMPOUT(0x10040D670);
    }
  }
  else
  {
    sub_10001BE90(v1 - 320, (uint64_t *)&unk_100828420);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 - 432) + 56))(*(_QWORD *)(v1 - 408), 1, 1, *(_QWORD *)(v1 - 424));
  }

  JUMPOUT(0x10040D420);
}

void sub_10040D7B0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1000252E0(v1 - 128, v1 - 320);
  v2 = sub_100047110(&qword_1008200C0);
  v3 = *(_QWORD *)(v1 - 392);
  v4 = *(_QWORD *)(v1 - 400);
  v5 = swift_dynamicCast(v3, v1 - 320, v2, v4, 6);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 416) + 56);
  if ((v5 & 1) != 0)
  {
    v6(v3, 0, 1, v4);
    v7 = *(_QWORD *)(v1 - 456);
    sub_100047C88(v3, v7, type metadata accessor for CatalogTipCard);
    v8 = v7 + *(int *)(v4 + 36);
    v9 = *(_QWORD *)(v1 - 440);
    sub_100021CC0(v8, v9, &qword_100824DE0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 - 464) + 48))(v9, 1, *(_QWORD *)(v1 - 448)) == 1)
    {
      sub_100011F54(v7, type metadata accessor for CatalogTipCard);

      JUMPOUT(0x10040D420);
    }
    v10 = *(_QWORD *)(v1 - 480);
    sub_100047C88(v9, v10, type metadata accessor for CatalogTipSection);
    sub_1003176F0(v10);
    sub_100316A50(v10);

    sub_100011F54(v10, type metadata accessor for CatalogTipSection);
    sub_100011F54(v7, type metadata accessor for CatalogTipCard);
    JUMPOUT(0x10040D670);
  }
  v6(v3, 1, 1, v4);

  JUMPOUT(0x10040D424);
}

uint64_t sub_10040DA24(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  uint64_t v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  uint64_t i;
  Class isa;
  uint64_t v37;
  char v38;
  const char *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  char v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  CHWorkoutDetailHeartRateTableViewCell *v49[9];
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t CardActionContext;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE v65[24];
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  char v69[8];
  _QWORD v70[5];

  v63 = a2;
  v5 = type metadata accessor for UUID(0);
  v64 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_10082EDD0);
  __chkstk_darwin(v8);
  v10 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = type metadata accessor for TrendListMetric(0);
  v58 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v57 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_1008329C8);
  __chkstk_darwin(v12);
  v61 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for TrendsActionContext(0);
  v60 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v15 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_100047110(&qword_100824DE0);
  __chkstk_darwin(v16);
  v51 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for CatalogTipSection(0);
  v49[7] = *(CHWorkoutDetailHeartRateTableViewCell **)(v50 - 8);
  __chkstk_darwin(v50);
  v49[5] = (CHWorkoutDetailHeartRateTableViewCell *)((char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_100047110(&qword_100820040);
  __chkstk_darwin(v19);
  v56 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for CatalogTipCard(0);
  v54 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v49[8] = (CHWorkoutDetailHeartRateTableViewCell *)((char *)v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = sub_100047110(&qword_1008329D0);
  __chkstk_darwin(v23);
  v55 = (char *)v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  CardActionContext = type metadata accessor for FitnessPlusUpNextCardActionContext(0);
  v52 = *(_QWORD *)(CardActionContext - 8);
  __chkstk_darwin(CardActionContext);
  v49[6] = (CHWorkoutDetailHeartRateTableViewCell *)((char *)v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70[3] = v21;
  v70[4] = &off_100792DA0;
  v26 = sub_10004C480(v70);
  sub_10004F8C8(a1, (uint64_t)v26, type metadata accessor for CatalogTipCard);
  v27 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)&a3->super.super.super.super.isa
                                                  + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController);
  if (v27)
  {
    if ((*((_BYTE *)v26 + *(int *)(v21 + 28)) & 1) == 0)
    {
      v30 = (uint64_t)a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator;
      swift_beginAccess((char *)a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator, v69, 0, 0);
      sub_100021CC0(v30, (uint64_t)v65, &qword_1008324B0);
      v49[4] = v10;
      v49[3] = a3;
      if (v66)
      {
        sub_1000252E0((uint64_t)v65, (uint64_t)&v67);
        v31 = v27;
        sub_10001BE90((uint64_t)v65, &qword_1008324B0);
        v32 = *(CHWorkoutDetailHeartRateTableViewCell **)(*sub_100016804(&v67, *((uint64_t *)&v68 + 1))
                                                        + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
        v33 = *(_QWORD *)v32->cellPadding;
        if (v33)
        {
          v49[1] = v15;
          v49[2] = v27;
          v34 = v32 + 1;
          v49[0] = v32;
          swift_bridgeObjectRetain(v32);
          for (i = 0; i != v33; ++i)
          {
            v37 = *(_QWORD *)v34->cellInset;
            isa = v34[1].super.super.super.super.isa;
            sub_100016804(v34, v37);
            (*((void (**)(uint64_t, Class))isa + 1))(v37, isa);
            v38 = static UUID.== infix(_:_:)(v7, v26);
            (*(void (**)(char *, uint64_t))(v64 + 8))(v7, v5);
            if ((v38 & 1) != 0)
              goto LABEL_12;
            v34 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)v34 + 40);
          }
          i = 0;
LABEL_12:
          v46 = v38 ^ 1;
          swift_bridgeObjectRelease(v49[0], v39, v40, v41, v42, v43, v44, v45);
        }
        else
        {
          i = 0;
          v46 = 1;
        }
        _s10FitnessApp24HistoryViewActionContextVwxx_0(&v67);
      }
      else
      {
        v47 = v27;
        sub_10001BE90((uint64_t)v65, &qword_1008324B0);
        i = 0;
        v46 = 1;
      }
      sub_100415204((uint64_t)v26, i, v46 & 1, 0, type metadata accessor for CatalogTipCard);
      __asm { BR              X10 }
    }
    v28 = (char *)v26 + *(int *)(v21 + 20);
    if (v28[16] != 3 || *(_OWORD *)v28 != 0)
    {
      v29 = v27;
      sub_100413C50((uint64_t)v26, v29);

    }
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v70);
}

void sub_10040E4F0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  id v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  sub_100021CC0(*(_QWORD *)(v1 - 336), v1 - 320, (uint64_t *)&unk_100828420);
  if (*(_QWORD *)(v1 - 296))
  {
    v2 = *(_QWORD *)(v1 - 400);
    v3 = *(_QWORD *)(v1 - 416);
    v4 = swift_dynamicCast(v2, v1 - 320, (char *)&type metadata for Any + 8, v3, 6);
    v5 = *(_QWORD *)(v1 - 424);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v2, v4 ^ 1u, 1, v3);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3) != 1)
    {
      v6 = *(_QWORD *)(v1 - 464);
      v7 = sub_100047C88(v2, v6, type metadata accessor for FitnessPlusUpNextCardActionContext);
      v8 = CatalogLockup.identifier.getter(v7);
      v10 = v9;
      v11 = objc_retain(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                              + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessAppContext));
      sub_1005366D0(v8, (uint64_t)v10);
      swift_bridgeObjectRelease(v10, v12, v13, v14, v15, v16, v17, v18);

      sub_100011F54(v6, type metadata accessor for FitnessPlusUpNextCardActionContext);
      JUMPOUT(0x10040E4C8);
    }
  }
  else
  {
    sub_10001BE90(v1 - 320, (uint64_t *)&unk_100828420);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 - 424) + 56))(*(_QWORD *)(v1 - 400), 1, 1, *(_QWORD *)(v1 - 416));
  }

  JUMPOUT(0x10040E27CLL);
}

void sub_10040E608()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1000252E0(v2 - 128, v2 - 320);
  v3 = sub_100047110(&qword_1008200C0);
  v4 = *(_QWORD *)(v2 - 392);
  v5 = swift_dynamicCast(v4, v2 - 320, v3, v1, 6);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 408) + 56);
  if ((v5 & 1) != 0)
  {
    v6(v4, 0, 1, v1);
    v7 = *(_QWORD *)(v2 - 448);
    sub_100047C88(v4, v7, type metadata accessor for CatalogTipCard);
    v8 = *(_QWORD *)(v2 - 432);
    sub_100021CC0(v7 + *(int *)(v1 + 36), v8, &qword_100824DE0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 - 456) + 48))(v8, 1, *(_QWORD *)(v2 - 440)) == 1)
    {
      sub_100011F54(v7, type metadata accessor for CatalogTipCard);

      JUMPOUT(0x10040E27CLL);
    }
    v9 = *(_QWORD *)(v2 - 472);
    sub_100047C88(v8, v9, type metadata accessor for CatalogTipSection);
    sub_1003176F0(v9);
    sub_100316A50(v9);

    sub_100011F54(v9, type metadata accessor for CatalogTipSection);
    sub_100011F54(v7, type metadata accessor for CatalogTipCard);
    JUMPOUT(0x10040E4C8);
  }
  v6(v4, 1, 1, v1);

  JUMPOUT(0x10040E280);
}

uint64_t sub_10040E874()
{
  return sub_100419F34(&qword_100820A30);
}

uint64_t sub_10040E880(uint64_t a1)
{
  return sub_100419D68(a1, &qword_100820A30, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_100409D78);
}

uint64_t sub_10040E898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10040E8AC(a1, a2, a3, type metadata accessor for FriendsHighlightCard, (void (*)(char *, char *))sub_100411964);
}

uint64_t sub_10040E8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(char *, char *))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  _BYTE v26[24];
  uint64_t v27;

  v10 = a4(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - v11;
  sub_10004F8C8(a1, (uint64_t)&v24 - v11, a4);
  v13 = *(char **)(a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController);
  if (!v13)
    return sub_100011F54((uint64_t)v12, a4);
  v14 = &v12[*(int *)(v10 + 20)];
  v15 = v14[16];
  if ((v12[*(int *)(v10 + 28)] & 1) == 0)
  {
    if (v15 != 3)
      return sub_100011F54((uint64_t)v12, a4);
    v18 = *(_QWORD *)v14;
    v17 = *((_QWORD *)v14 + 1);
    if (v18 ^ 4 | v17)
    {
      if (v18 ^ 5 | v17)
        return sub_100011F54((uint64_t)v12, a4);
      v19 = *(void **)(*(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context]
                     + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_fitnessPlusCardDataProvider);
      v20 = v13;
      v21 = v19;
      sub_100541730();
    }
    else
    {
      sub_100021CC0(a2, (uint64_t)v26, (uint64_t *)&unk_100828420);
      if (!v27)
      {
        sub_10001BE90((uint64_t)v26, (uint64_t *)&unk_100828420);
        return sub_100011F54((uint64_t)v12, a4);
      }
      v22 = sub_10001E724(0, (unint64_t *)&qword_100828310, UIViewController_ptr);
      v21 = v13;
      if ((swift_dynamicCast(&v25, v26, (char *)&type metadata for Any + 8, v22, 6) & 1) == 0)
        goto LABEL_14;
      v20 = v25;
      objc_msgSend(v21, "dismissViewControllerAnimated:completion:", 0, 0);
      objc_msgSend(v21, "presentViewController:animated:completion:", v20, 1, 0);
    }

LABEL_14:
    return sub_100011F54((uint64_t)v12, a4);
  }
  if (v15 != 3 || *(_OWORD *)v14 != 0)
  {
    v16 = v13;
    a5(v12, v16);

  }
  return sub_100011F54((uint64_t)v12, a4);
}

uint64_t sub_10040EAB8(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Card;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  const char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  char *v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  os_log_type_t v49;
  NSObject *v50;
  os_log_type_t v51;
  NSObject *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  void (**v77)(char *, uint64_t);
  id v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t KeyPath;
  uint64_t *v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t);
  char *v104;
  char *v105;
  id (**v106)(int);
  _QWORD *v107;
  uint64_t v108;
  id v109;
  id v110;
  void *v111;
  id v112;
  void *v113;
  uint64_t v114;
  void *v115;
  _QWORD v117[2];
  uint64_t v118;
  uint64_t v119;
  char *v120;
  id v121;
  uint64_t ObjectType;
  uint64_t *v123;
  id v124;
  void (**v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129[5];
  _QWORD *v130[3];
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[5];

  ObjectType = swift_getObjectType(a2);
  v118 = type metadata accessor for CardTypeConfigurationRoomView(0);
  __chkstk_darwin(v118);
  v119 = (uint64_t)v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v123 = (_QWORD *)((char *)v117 - v6);
  v126 = type metadata accessor for UUID(0);
  v125 = *(void (***)(char *, uint64_t))(v126 - 8);
  __chkstk_darwin(v126);
  v8 = (char *)v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Card = type metadata accessor for FitnessPlusUpNextCard(0);
  v133[3] = Card;
  v133[4] = &off_100792D50;
  v10 = sub_10004C480(v133);
  sub_10004F8C8(a1, (uint64_t)v10, type metadata accessor for FitnessPlusUpNextCard);
  v11 = (char *)v10 + *(int *)(Card + 20);
  v12 = *(_QWORD *)v11;
  v13 = *((_QWORD *)v11 + 1);
  v120 = v11;
  v14 = sub_10054FEFC(v12, v13, v11[16]);
  v15 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  v23 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10035FF38(v14);
  if (*(_QWORD *)v23->cellPadding && (v24 = sub_100049DE0(v14), (v16 & 1) != 0))
  {
    v25 = *(CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)v23[1].cellInset + 8 * v24);
    swift_bridgeObjectRetain(v25);
  }
  else
  {
    v25 = &_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v23, v16, v17, v18, v19, v20, v21, v22);
  v121 = v15;
  v26 = *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  v27 = *(_QWORD *)(v26 + 16);
  v124 = a2;
  if (v27)
  {
    v117[1] = v25;
    v28 = v26 + 32;
    v117[0] = v26;
    swift_bridgeObjectRetain_n(v26, 2);
    sub_1000252E0(v28, (uint64_t)v130);
    v29 = v131;
    v30 = v132;
    sub_100016804(v130, v131);
    (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
    __asm { BR              X9 }
  }
  v130[0] = &v25->super.super.super.super.isa;
  sub_10013C280((uint64_t)&_swiftEmptyArrayStorage);
  v32 = (CHWorkoutDetailHeartRateTableViewCell *)v130[0];
  v33 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain(v32);
  sub_100419154(v130, v33);
  swift_bridgeObjectRelease(v32, v34, v35, v36, v37, v38, v39, v40);

  v41 = v130[0];
  v42 = v130[0][2];
  if (!v42)
  {
LABEL_12:
    swift_release(v41);
    v49 = static os_log_type_t.default.getter(v48);
    v50 = HKLogActivity;
    sub_1000252E0((uint64_t)v133, (uint64_t)v130);
    v51 = v49;
    if (os_log_type_enabled(v50, v49))
    {
      v52 = v50;
      v53 = swift_slowAlloc(22, -1);
      v54 = swift_slowAlloc(64, -1);
      v129[0] = v54;
      *(_DWORD *)v53 = 136315394;
      v55 = ASFriendListDisplayMode.id.getter(ObjectType);
      v56 = _typeName(_:qualified:)(v55, 0);
      v58 = (CHWorkoutDetailHeartRateTableViewCell *)v57;
      v127 = sub_10003E8EC(v56, v57, v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, &v128, v53 + 4);
      swift_bridgeObjectRelease(v58, v59, v60, v61, v62, v63, v64, v65);
      *(_WORD *)(v53 + 12) = 2080;
      sub_100016804(v130, v131);
      v66 = sub_10027DA28();
      v68 = (CHWorkoutDetailHeartRateTableViewCell *)v67;
      v127 = sub_10003E8EC(v66, v67, v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, &v128, v53 + 14);
      swift_bridgeObjectRelease(v68, v69, v70, v71, v72, v73, v74, v75);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v130);
      _os_log_impl((void *)&_mh_execute_header, v52, v51, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy(v54, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1, -1);
      swift_slowDealloc(v53, -1, -1);

    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v130);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v133);
  }
  v43 = v130[0] + 4;
  swift_retain(v130[0]);
  v44 = 0;
  while (1)
  {
    v45 = v43[3];
    v46 = v43[4];
    sub_100016804(v43, v45);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v46);
    v47 = static UUID.== infix(_:_:)(v8, v10);
    v125[1](v8, v126);
    if ((v47 & 1) != 0)
      break;
    ++v44;
    v43 += 5;
    if (v42 == v44)
    {
      swift_release(v41);
      goto LABEL_12;
    }
  }
  swift_release(v41);
  LODWORD(v126) = sub_10054FEFC(*(_QWORD *)v120, *((_QWORD *)v120 + 1), v120[16]);
  sub_1000252E0((uint64_t)v133, (uint64_t)v130);
  v76 = *(void **)&v33[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  v77 = (void (**)(char *, uint64_t))v121;
  v78 = v76;
  v79 = v124;
  v80 = objc_msgSend(v124, "view");
  if (!v80)
  {
    __break(1u);
    goto LABEL_30;
  }
  v81 = v80;
  v82 = objc_msgSend(v80, "window");

  if (v82)
  {
    objc_msgSend(v82, "bounds");
    v84 = v83;

  }
  else
  {
    v84 = 0;
  }
  v85 = objc_msgSend(v79, "view");
  if (!v85)
  {
LABEL_30:
    __break(1u);

    swift_release(v130[0]);
    __break(1u);
    JUMPOUT(0x10040F590);
  }
  v86 = v85;
  v87 = objc_msgSend(v85, "window");

  v125 = v77;
  ObjectType = (uint64_t)v78;
  if (v87)
  {
    objc_msgSend(v87, "bounds");
    v89 = v88;

  }
  else
  {
    v89 = 0;
  }
  LODWORD(v121) = v87 == 0;
  v90 = v82 == 0;
  v91 = swift_allocObject(&unk_10079E640, 24, 7);
  *(_QWORD *)(v91 + 16) = v79;
  KeyPath = swift_getKeyPath(&unk_10063BAE8);
  v93 = v123;
  *v123 = KeyPath;
  v94 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v93, v94, 0);
  v95 = (int *)v118;
  v96 = *(int *)(v118 + 40);
  v97 = type metadata accessor for DashboardCardCellViewCache();
  v98 = swift_allocObject(v97, 40, 7);
  *(_BYTE *)(v98 + 16) = 1;
  *(_QWORD *)(v98 + 24) = sub_10043D6F8((uint64_t)&_swiftEmptyArrayStorage);
  v99 = sub_10043D6F8((uint64_t)&_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v93 + v96) = v98;
  *(_QWORD *)(v98 + 32) = v99;
  v100 = (char *)v93 + v95[15];
  v101 = enum case for DynamicTypeSize.accessibility1(_:);
  v102 = type metadata accessor for DynamicTypeSize(0);
  v103 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 104);
  v103(v100, v101, v102);
  v103((char *)v93 + v95[16], enum case for DynamicTypeSize.xLarge(_:), v102);
  *((_BYTE *)v93 + v95[5]) = v126;
  sub_100045AD4((uint64_t)v130, (uint64_t)v93 + v95[6], &qword_100832410);
  *(uint64_t *)((char *)v93 + v95[7]) = (uint64_t)v41;
  *(uint64_t *)((char *)v93 + v95[8]) = (uint64_t)v125;
  *(uint64_t *)((char *)v93 + v95[9]) = ObjectType;
  v104 = (char *)v93 + v95[11];
  *(_QWORD *)v104 = v84;
  v104[8] = v90;
  v105 = (char *)v93 + v95[12];
  *(_QWORD *)v105 = v89;
  v105[8] = (char)v121;
  v106 = (id (**)(int))((char *)v93 + v95[13]);
  *v106 = sub_1004191E8;
  v106[1] = (id (*)(int))v91;
  v107 = (uint64_t *)((char *)v93 + v95[14]);
  *v107 = v44;
  v107[1] = 0;
  v108 = v119;
  sub_10004F8C8((uint64_t)v93, v119, type metadata accessor for CardTypeConfigurationRoomView);
  v109 = objc_allocWithZone((Class)sub_100047110(&qword_1008325D8));
  v110 = v124;
  v111 = (void *)UIHostingController.init(rootView:)(v108);
  v112 = objc_msgSend(v111, "presentationController");
  if (v112)
  {
    v113 = v112;
    v114 = objc_opt_self(UISheetPresentationController);
    v115 = (void *)swift_dynamicCastObjCClass(v113, v114);
    if (v115)
      objc_msgSend(v115, "setPrefersGrabberVisible:", 1);

  }
  objc_msgSend(v110, "presentViewController:animated:completion:", v111, 1, 0);

  sub_100011F54((uint64_t)v123, type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v133);
}

uint64_t sub_10040F65C(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  os_log_type_t v36;
  NSObject *v37;
  os_log_type_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void *v49;
  void (**v50)(char *, uint64_t);
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t KeyPath;
  uint64_t *v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  char *v77;
  char *v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  id v82;
  id v83;
  void *v84;
  id v85;
  void *v86;
  uint64_t v87;
  void *v88;
  _QWORD v90[2];
  uint64_t v91;
  uint64_t v92;
  char *v93;
  id v94;
  uint64_t ObjectType;
  uint64_t *v96;
  id v97;
  void (**v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102[5];
  _QWORD *v103[3];
  uint64_t v104;
  uint64_t v105;
  _QWORD v106[5];

  ObjectType = swift_getObjectType(a2);
  v91 = type metadata accessor for CardTypeConfigurationRoomView(0);
  v4 = __chkstk_darwin(v91);
  v92 = (uint64_t)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v96 = (_QWORD *)((char *)v90 - v6);
  v99 = type metadata accessor for UUID(0);
  v98 = *(void (***)(char *, uint64_t))(v99 - 8);
  __chkstk_darwin(v99);
  v8 = (char *)v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AwardsCard(0);
  v106[3] = v9;
  v106[4] = &off_100793248;
  v10 = sub_10004C480(v106);
  sub_10004F8C8(a1, (uint64_t)v10, type metadata accessor for AwardsCard);
  v11 = (char *)v10 + *(int *)(v9 + 20);
  v12 = *(_QWORD *)v11;
  v13 = *((_QWORD *)v11 + 1);
  v93 = v11;
  v14 = sub_10054FEFC(v12, v13, v11[16]);
  v15 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  v16 = sub_10035FF38(v14);
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_100049DE0(v14), (v18 & 1) != 0))
  {
    v19 = *(_QWORD **)(*(_QWORD *)(v16 + 56) + 8 * v17);
    swift_bridgeObjectRetain(v19);
  }
  else
  {
    v19 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v16);
  v94 = v15;
  v20 = *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  v21 = *(_QWORD *)(v20 + 16);
  v97 = a2;
  if (v21)
  {
    v90[1] = v19;
    v22 = v20 + 32;
    v90[0] = v20;
    swift_bridgeObjectRetain_n(v20, 2);
    sub_1000252E0(v22, (uint64_t)v103);
    v23 = v104;
    v24 = v105;
    sub_100016804(v103, v104);
    (*(void (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
    __asm { BR              X9 }
  }
  v103[0] = v19;
  sub_10013C280((uint64_t)_swiftEmptyArrayStorage);
  v26 = v103[0];
  v27 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain(v26);
  sub_100419154(v103, v27);
  swift_bridgeObjectRelease(v26);

  v28 = v103[0];
  v29 = v103[0][2];
  if (!v29)
  {
LABEL_12:
    swift_release(v28);
    v36 = static os_log_type_t.default.getter(v35);
    v37 = HKLogActivity;
    sub_1000252E0((uint64_t)v106, (uint64_t)v103);
    v38 = v36;
    if (os_log_type_enabled(v37, v36))
    {
      v39 = v37;
      v40 = swift_slowAlloc(22, -1);
      v41 = swift_slowAlloc(64, -1);
      v102[0] = v41;
      *(_DWORD *)v40 = 136315394;
      v42 = ASFriendListDisplayMode.id.getter(ObjectType);
      v43 = _typeName(_:qualified:)(v42, 0);
      v45 = v44;
      v100 = sub_10003E8EC(v43, v44, v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101, v40 + 4);
      swift_bridgeObjectRelease(v45);
      *(_WORD *)(v40 + 12) = 2080;
      sub_100016804(v103, v104);
      v46 = sub_10028D528();
      v48 = v47;
      v100 = sub_10003E8EC(v46, v47, v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101, v40 + 14);
      swift_bridgeObjectRelease(v48);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v103);
      _os_log_impl((void *)&_mh_execute_header, v39, v38, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v40, -1, -1);

    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v103);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v106);
  }
  v30 = v103[0] + 4;
  swift_retain(v103[0]);
  v31 = 0;
  while (1)
  {
    v32 = v30[3];
    v33 = v30[4];
    sub_100016804(v30, v32);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
    v34 = static UUID.== infix(_:_:)(v8, v10);
    v98[1](v8, v99);
    if ((v34 & 1) != 0)
      break;
    ++v31;
    v30 += 5;
    if (v29 == v31)
    {
      swift_release(v28);
      goto LABEL_12;
    }
  }
  swift_release(v28);
  LODWORD(v99) = sub_10054FEFC(*(_QWORD *)v93, *((_QWORD *)v93 + 1), v93[16]);
  sub_1000252E0((uint64_t)v106, (uint64_t)v103);
  v49 = *(void **)&v27[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  v50 = (void (**)(char *, uint64_t))v94;
  v51 = v49;
  v52 = v97;
  v53 = objc_msgSend(v97, "view");
  if (!v53)
  {
    __break(1u);
    goto LABEL_30;
  }
  v54 = v53;
  v55 = objc_msgSend(v53, "window");

  if (v55)
  {
    objc_msgSend(v55, "bounds");
    v57 = v56;

  }
  else
  {
    v57 = 0;
  }
  v58 = objc_msgSend(v52, "view");
  if (!v58)
  {
LABEL_30:
    __break(1u);

    swift_release(v103[0]);
    __break(1u);
    JUMPOUT(0x100410134);
  }
  v59 = v58;
  v60 = objc_msgSend(v58, "window");

  v98 = v50;
  ObjectType = (uint64_t)v51;
  if (v60)
  {
    objc_msgSend(v60, "bounds");
    v62 = v61;

  }
  else
  {
    v62 = 0;
  }
  LODWORD(v94) = v60 == 0;
  v63 = v55 == 0;
  v64 = swift_allocObject(&unk_10079EB18, 24, 7);
  *(_QWORD *)(v64 + 16) = v52;
  KeyPath = swift_getKeyPath(&unk_10063BAE8);
  v66 = v96;
  *v96 = KeyPath;
  v67 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v66, v67, 0);
  v68 = (int *)v91;
  v69 = *(int *)(v91 + 40);
  v70 = type metadata accessor for DashboardCardCellViewCache();
  v71 = swift_allocObject(v70, 40, 7);
  *(_BYTE *)(v71 + 16) = 1;
  *(_QWORD *)(v71 + 24) = sub_10043D6F8((uint64_t)_swiftEmptyArrayStorage);
  v72 = sub_10043D6F8((uint64_t)_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v66 + v69) = v71;
  *(_QWORD *)(v71 + 32) = v72;
  v73 = (char *)v66 + v68[15];
  v74 = enum case for DynamicTypeSize.accessibility1(_:);
  v75 = type metadata accessor for DynamicTypeSize(0);
  v76 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 104);
  v76(v73, v74, v75);
  v76((char *)v66 + v68[16], enum case for DynamicTypeSize.xLarge(_:), v75);
  *((_BYTE *)v66 + v68[5]) = v99;
  sub_100045AD4((uint64_t)v103, (uint64_t)v66 + v68[6], &qword_100832410);
  *(uint64_t *)((char *)v66 + v68[7]) = (uint64_t)v28;
  *(uint64_t *)((char *)v66 + v68[8]) = (uint64_t)v98;
  *(uint64_t *)((char *)v66 + v68[9]) = ObjectType;
  v77 = (char *)v66 + v68[11];
  *(_QWORD *)v77 = v57;
  v77[8] = v63;
  v78 = (char *)v66 + v68[12];
  *(_QWORD *)v78 = v62;
  v78[8] = (char)v94;
  v79 = (uint64_t *)((char *)v66 + v68[13]);
  *v79 = sub_10041B498;
  v79[1] = v64;
  v80 = (uint64_t *)((char *)v66 + v68[14]);
  *v80 = v31;
  v80[1] = 0;
  v81 = v92;
  sub_10004F8C8((uint64_t)v66, v92, type metadata accessor for CardTypeConfigurationRoomView);
  v82 = objc_allocWithZone((Class)sub_100047110(&qword_1008325D8));
  v83 = v97;
  v84 = (void *)UIHostingController.init(rootView:)(v81);
  v85 = objc_msgSend(v84, "presentationController");
  if (v85)
  {
    v86 = v85;
    v87 = objc_opt_self(UISheetPresentationController);
    v88 = (void *)swift_dynamicCastObjCClass(v86, v87);
    if (v88)
      objc_msgSend(v88, "setPrefersGrabberVisible:", 1);

  }
  objc_msgSend(v83, "presentViewController:animated:completion:", v84, 1, 0);

  sub_100011F54((uint64_t)v96, type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v106);
}

uint64_t sub_100410200(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  os_log_type_t v36;
  NSObject *v37;
  os_log_type_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void *v49;
  void (**v50)(char *, uint64_t);
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t KeyPath;
  uint64_t *v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  char *v77;
  char *v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  id v82;
  id v83;
  void *v84;
  id v85;
  void *v86;
  uint64_t v87;
  void *v88;
  _QWORD v90[2];
  uint64_t v91;
  uint64_t v92;
  char *v93;
  id v94;
  uint64_t ObjectType;
  uint64_t *v96;
  id v97;
  void (**v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102[5];
  _QWORD *v103[3];
  uint64_t v104;
  uint64_t v105;
  _QWORD v106[5];

  ObjectType = swift_getObjectType(a2);
  v91 = type metadata accessor for CardTypeConfigurationRoomView(0);
  v4 = __chkstk_darwin(v91);
  v92 = (uint64_t)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v96 = (_QWORD *)((char *)v90 - v6);
  v99 = type metadata accessor for UUID(0);
  v98 = *(void (***)(char *, uint64_t))(v99 - 8);
  __chkstk_darwin(v99);
  v8 = (char *)v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FriendCard(0);
  v106[3] = v9;
  v106[4] = &off_1007A9638;
  v10 = sub_10004C480(v106);
  sub_10004F8C8(a1, (uint64_t)v10, type metadata accessor for FriendCard);
  v11 = (char *)v10 + *(int *)(v9 + 20);
  v12 = *(_QWORD *)v11;
  v13 = *((_QWORD *)v11 + 1);
  v93 = v11;
  v14 = sub_10054FEFC(v12, v13, v11[16]);
  v15 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  v16 = sub_10035FF38(v14);
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_100049DE0(v14), (v18 & 1) != 0))
  {
    v19 = *(_QWORD **)(*(_QWORD *)(v16 + 56) + 8 * v17);
    swift_bridgeObjectRetain(v19);
  }
  else
  {
    v19 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v16);
  v94 = v15;
  v20 = *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  v21 = *(_QWORD *)(v20 + 16);
  v97 = a2;
  if (v21)
  {
    v90[1] = v19;
    v22 = v20 + 32;
    v90[0] = v20;
    swift_bridgeObjectRetain_n(v20, 2);
    sub_1000252E0(v22, (uint64_t)v103);
    v23 = v104;
    v24 = v105;
    sub_100016804(v103, v104);
    (*(void (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
    __asm { BR              X9 }
  }
  v103[0] = v19;
  sub_10013C280((uint64_t)_swiftEmptyArrayStorage);
  v26 = v103[0];
  v27 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain(v26);
  sub_100419154(v103, v27);
  swift_bridgeObjectRelease(v26);

  v28 = v103[0];
  v29 = v103[0][2];
  if (!v29)
  {
LABEL_12:
    swift_release(v28);
    v36 = static os_log_type_t.default.getter(v35);
    v37 = HKLogActivity;
    sub_1000252E0((uint64_t)v106, (uint64_t)v103);
    v38 = v36;
    if (os_log_type_enabled(v37, v36))
    {
      v39 = v37;
      v40 = swift_slowAlloc(22, -1);
      v41 = swift_slowAlloc(64, -1);
      v102[0] = v41;
      *(_DWORD *)v40 = 136315394;
      v42 = ASFriendListDisplayMode.id.getter(ObjectType);
      v43 = _typeName(_:qualified:)(v42, 0);
      v45 = v44;
      v100 = sub_10003E8EC(v43, v44, v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101, v40 + 4);
      swift_bridgeObjectRelease(v45);
      *(_WORD *)(v40 + 12) = 2080;
      sub_100016804(v103, v104);
      v46 = sub_10055AF5C();
      v48 = v47;
      v100 = sub_10003E8EC(v46, v47, v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101, v40 + 14);
      swift_bridgeObjectRelease(v48);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v103);
      _os_log_impl((void *)&_mh_execute_header, v39, v38, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v40, -1, -1);

    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v103);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v106);
  }
  v30 = v103[0] + 4;
  swift_retain(v103[0]);
  v31 = 0;
  while (1)
  {
    v32 = v30[3];
    v33 = v30[4];
    sub_100016804(v30, v32);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
    v34 = static UUID.== infix(_:_:)(v8, v10);
    v98[1](v8, v99);
    if ((v34 & 1) != 0)
      break;
    ++v31;
    v30 += 5;
    if (v29 == v31)
    {
      swift_release(v28);
      goto LABEL_12;
    }
  }
  swift_release(v28);
  LODWORD(v99) = sub_10054FEFC(*(_QWORD *)v93, *((_QWORD *)v93 + 1), v93[16]);
  sub_1000252E0((uint64_t)v106, (uint64_t)v103);
  v49 = *(void **)&v27[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  v50 = (void (**)(char *, uint64_t))v94;
  v51 = v49;
  v52 = v97;
  v53 = objc_msgSend(v97, "view");
  if (!v53)
  {
    __break(1u);
    goto LABEL_30;
  }
  v54 = v53;
  v55 = objc_msgSend(v53, "window");

  if (v55)
  {
    objc_msgSend(v55, "bounds");
    v57 = v56;

  }
  else
  {
    v57 = 0;
  }
  v58 = objc_msgSend(v52, "view");
  if (!v58)
  {
LABEL_30:
    __break(1u);

    swift_release(v103[0]);
    __break(1u);
    JUMPOUT(0x100410CD8);
  }
  v59 = v58;
  v60 = objc_msgSend(v58, "window");

  v98 = v50;
  ObjectType = (uint64_t)v51;
  if (v60)
  {
    objc_msgSend(v60, "bounds");
    v62 = v61;

  }
  else
  {
    v62 = 0;
  }
  LODWORD(v94) = v60 == 0;
  v63 = v55 == 0;
  v64 = swift_allocObject(&unk_10079EB40, 24, 7);
  *(_QWORD *)(v64 + 16) = v52;
  KeyPath = swift_getKeyPath(&unk_10063BAE8);
  v66 = v96;
  *v96 = KeyPath;
  v67 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v66, v67, 0);
  v68 = (int *)v91;
  v69 = *(int *)(v91 + 40);
  v70 = type metadata accessor for DashboardCardCellViewCache();
  v71 = swift_allocObject(v70, 40, 7);
  *(_BYTE *)(v71 + 16) = 1;
  *(_QWORD *)(v71 + 24) = sub_10043D6F8((uint64_t)_swiftEmptyArrayStorage);
  v72 = sub_10043D6F8((uint64_t)_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v66 + v69) = v71;
  *(_QWORD *)(v71 + 32) = v72;
  v73 = (char *)v66 + v68[15];
  v74 = enum case for DynamicTypeSize.accessibility1(_:);
  v75 = type metadata accessor for DynamicTypeSize(0);
  v76 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 104);
  v76(v73, v74, v75);
  v76((char *)v66 + v68[16], enum case for DynamicTypeSize.xLarge(_:), v75);
  *((_BYTE *)v66 + v68[5]) = v99;
  sub_100045AD4((uint64_t)v103, (uint64_t)v66 + v68[6], &qword_100832410);
  *(uint64_t *)((char *)v66 + v68[7]) = (uint64_t)v28;
  *(uint64_t *)((char *)v66 + v68[8]) = (uint64_t)v98;
  *(uint64_t *)((char *)v66 + v68[9]) = ObjectType;
  v77 = (char *)v66 + v68[11];
  *(_QWORD *)v77 = v57;
  v77[8] = v63;
  v78 = (char *)v66 + v68[12];
  *(_QWORD *)v78 = v62;
  v78[8] = (char)v94;
  v79 = (uint64_t *)((char *)v66 + v68[13]);
  *v79 = sub_10041B498;
  v79[1] = v64;
  v80 = (uint64_t *)((char *)v66 + v68[14]);
  *v80 = v31;
  v80[1] = 0;
  v81 = v92;
  sub_10004F8C8((uint64_t)v66, v92, type metadata accessor for CardTypeConfigurationRoomView);
  v82 = objc_allocWithZone((Class)sub_100047110(&qword_1008325D8));
  v83 = v97;
  v84 = (void *)UIHostingController.init(rootView:)(v81);
  v85 = objc_msgSend(v84, "presentationController");
  if (v85)
  {
    v86 = v85;
    v87 = objc_opt_self(UISheetPresentationController);
    v88 = (void *)swift_dynamicCastObjCClass(v86, v87);
    if (v88)
      objc_msgSend(v88, "setPrefersGrabberVisible:", 1);

  }
  objc_msgSend(v83, "presentViewController:animated:completion:", v84, 1, 0);

  sub_100011F54((uint64_t)v96, type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v106);
}

uint64_t sub_100410DA4(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  os_log_type_t v32;
  NSObject *v33;
  os_log_type_t v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  id v60;
  uint64_t KeyPath;
  uint64_t *v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  char *v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  void *v82;
  uint64_t v83;
  void *v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t ObjectType;
  _QWORD *v91;
  uint64_t *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97[5];
  _QWORD *v98[3];
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[6];

  ObjectType = swift_getObjectType(a2);
  v87 = type metadata accessor for CardTypeConfigurationRoomView(0);
  __chkstk_darwin(v87);
  v88 = (uint64_t)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v92 = (uint64_t *)((char *)&v86 - v6);
  v7 = type metadata accessor for UUID(0);
  v94 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for HistoryItemsCard(0);
  v101[4] = &off_1007876D0;
  v101[3] = v10;
  v101[0] = a1;
  v11 = sub_10054FEFC(*(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type), *(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 8), *(_BYTE *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 16));
  v93 = a2;
  v12 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  swift_retain(a1);
  v13 = sub_10035FF38(v11);
  if (*(_QWORD *)(v13 + 16) && (v14 = sub_100049DE0(v11), (v15 & 1) != 0))
  {
    v16 = *(_QWORD **)(*(_QWORD *)(v13 + 56) + 8 * v14);
    swift_bridgeObjectRetain(v16);
  }
  else
  {
    v16 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v13);
  v89 = v12;
  v17 = *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  if (*(_QWORD *)(v17 + 16))
  {
    v91 = v16;
    v18 = v17 + 32;
    v86 = v17;
    swift_bridgeObjectRetain_n(v17, 2);
    sub_1000252E0(v18, (uint64_t)v98);
    v20 = v99;
    v19 = v100;
    sub_100016804(v98, v99);
    (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v20, v19);
    __asm { BR              X9 }
  }
  v98[0] = v16;
  sub_10013C280((uint64_t)_swiftEmptyArrayStorage);
  v22 = v98[0];
  v23 = (char *)*(id *)&v93[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain(v22);
  sub_100419154(v98, v23);
  swift_bridgeObjectRelease(v22);

  v24 = v98[0];
  v25 = v98[0][2];
  if (!v25)
  {
LABEL_12:
    swift_release(v24);
    v32 = static os_log_type_t.default.getter(v31);
    v33 = HKLogActivity;
    sub_1000252E0((uint64_t)v101, (uint64_t)v98);
    v34 = v32;
    if (os_log_type_enabled(v33, v32))
    {
      v35 = v33;
      v36 = swift_slowAlloc(22, -1);
      v37 = swift_slowAlloc(64, -1);
      v97[0] = v37;
      *(_DWORD *)v36 = 136315394;
      v38 = ASFriendListDisplayMode.id.getter(ObjectType);
      v39 = _typeName(_:qualified:)(v38, 0);
      v41 = v40;
      v95 = sub_10003E8EC(v39, v40, v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96, v36 + 4);
      swift_bridgeObjectRelease(v41);
      *(_WORD *)(v36 + 12) = 2080;
      sub_100016804(v98, v99);
      v42 = sub_100121254();
      v44 = v43;
      v95 = sub_10003E8EC(v42, v43, v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96, v36 + 14);
      swift_bridgeObjectRelease(v44);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v98);
      _os_log_impl((void *)&_mh_execute_header, v35, v34, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v36, -1, -1);

    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v98);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v101);
  }
  v26 = v98[0] + 4;
  v91 = v98[0];
  swift_retain(v98[0]);
  v27 = 0;
  while (1)
  {
    v28 = v26[3];
    v29 = v26[4];
    sub_100016804(v26, v28);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
    v30 = static UUID.== infix(_:_:)(v9, v101[0] + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_uuid);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v9, v7);
    if ((v30 & 1) != 0)
      break;
    ++v27;
    v26 += 5;
    if (v25 == v27)
    {
      v24 = v91;
      swift_release(v91);
      goto LABEL_12;
    }
  }
  swift_release(v91);
  LODWORD(v94) = sub_10054FEFC(*(_QWORD *)(v101[0] + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type), *(_QWORD *)(v101[0] + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 8), *(_BYTE *)(v101[0] + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 16));
  sub_1000252E0((uint64_t)v101, (uint64_t)v98);
  v45 = *(void **)&v23[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  v46 = v89;
  v47 = v45;
  v48 = objc_msgSend(v93, "view");
  if (!v48)
  {
    __break(1u);
    goto LABEL_30;
  }
  v49 = v48;
  v50 = objc_msgSend(v48, "window");

  if (v50)
  {
    objc_msgSend(v50, "bounds");
    v52 = v51;

  }
  else
  {
    v52 = 0;
  }
  v53 = objc_msgSend(v93, "view");
  if (!v53)
  {
LABEL_30:
    __break(1u);

    swift_release(v98[0]);
    __break(1u);
    JUMPOUT(0x100411898);
  }
  v54 = v53;
  v55 = objc_msgSend(v53, "window");

  ObjectType = (uint64_t)v46;
  v89 = v47;
  if (v55)
  {
    objc_msgSend(v55, "bounds");
    v57 = v56;

  }
  else
  {
    v57 = 0;
  }
  LODWORD(v86) = v55 == 0;
  v58 = v50 == 0;
  v59 = swift_allocObject(&unk_10079EBE0, 24, 7);
  v60 = v93;
  *(_QWORD *)(v59 + 16) = v93;
  KeyPath = swift_getKeyPath(&unk_10063BAE8);
  v62 = v92;
  *v92 = KeyPath;
  v63 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v62, v63, 0);
  v64 = (int *)v87;
  v65 = *(int *)(v87 + 40);
  v66 = type metadata accessor for DashboardCardCellViewCache();
  v67 = swift_allocObject(v66, 40, 7);
  *(_BYTE *)(v67 + 16) = 1;
  *(_QWORD *)(v67 + 24) = sub_10043D6F8((uint64_t)_swiftEmptyArrayStorage);
  v68 = sub_10043D6F8((uint64_t)_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v62 + v65) = v67;
  *(_QWORD *)(v67 + 32) = v68;
  v69 = (char *)v62 + v64[15];
  v70 = enum case for DynamicTypeSize.accessibility1(_:);
  v71 = type metadata accessor for DynamicTypeSize(0);
  v72 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 104);
  v72(v69, v70, v71);
  v72((char *)v62 + v64[16], enum case for DynamicTypeSize.xLarge(_:), v71);
  *((_BYTE *)v62 + v64[5]) = v94;
  sub_100045AD4((uint64_t)v98, (uint64_t)v62 + v64[6], &qword_100832410);
  *(uint64_t *)((char *)v62 + v64[7]) = (uint64_t)v91;
  *(uint64_t *)((char *)v62 + v64[8]) = ObjectType;
  *(uint64_t *)((char *)v62 + v64[9]) = (uint64_t)v89;
  v73 = (char *)v62 + v64[11];
  *(_QWORD *)v73 = v52;
  v73[8] = v58;
  v74 = (char *)v62 + v64[12];
  *(_QWORD *)v74 = v57;
  v74[8] = v86;
  v75 = (uint64_t *)((char *)v62 + v64[13]);
  *v75 = sub_10041B498;
  v75[1] = v59;
  v76 = (uint64_t *)((char *)v62 + v64[14]);
  *v76 = v27;
  v76[1] = 0;
  v77 = v88;
  sub_10004F8C8((uint64_t)v62, v88, type metadata accessor for CardTypeConfigurationRoomView);
  v78 = objc_allocWithZone((Class)sub_100047110(&qword_1008325D8));
  v79 = v60;
  v80 = (void *)UIHostingController.init(rootView:)(v77);
  v81 = objc_msgSend(v80, "presentationController");
  if (v81)
  {
    v82 = v81;
    v83 = objc_opt_self(UISheetPresentationController);
    v84 = (void *)swift_dynamicCastObjCClass(v82, v83);
    if (v84)
      objc_msgSend(v84, "setPrefersGrabberVisible:", 1);

  }
  objc_msgSend(v79, "presentViewController:animated:completion:", v80, 1, 0, v86);

  sub_100011F54((uint64_t)v92, type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v101);
}

uint64_t sub_100411964(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  const char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  char *v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  os_log_type_t v49;
  NSObject *v50;
  os_log_type_t v51;
  NSObject *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  void (**v77)(char *, uint64_t);
  id v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t KeyPath;
  uint64_t *v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t);
  char *v104;
  char *v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  id v109;
  id v110;
  void *v111;
  id v112;
  void *v113;
  uint64_t v114;
  void *v115;
  _QWORD v117[2];
  uint64_t v118;
  uint64_t v119;
  char *v120;
  id v121;
  uint64_t ObjectType;
  uint64_t *v123;
  id v124;
  void (**v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129[5];
  _QWORD *v130[3];
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[5];

  ObjectType = swift_getObjectType(a2);
  v118 = type metadata accessor for CardTypeConfigurationRoomView(0);
  __chkstk_darwin(v118);
  v119 = (uint64_t)v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v123 = (_QWORD *)((char *)v117 - v6);
  v126 = type metadata accessor for UUID(0);
  v125 = *(void (***)(char *, uint64_t))(v126 - 8);
  __chkstk_darwin(v126);
  v8 = (char *)v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FriendsHighlightCard(0);
  v133[3] = v9;
  v133[4] = &off_10079DA28;
  v10 = sub_10004C480(v133);
  sub_10004F8C8(a1, (uint64_t)v10, type metadata accessor for FriendsHighlightCard);
  v11 = (char *)v10 + *(int *)(v9 + 20);
  v12 = *(_QWORD *)v11;
  v13 = *((_QWORD *)v11 + 1);
  v120 = v11;
  v14 = sub_10054FEFC(v12, v13, v11[16]);
  v15 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  v23 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10035FF38(v14);
  if (*(_QWORD *)v23->cellPadding && (v24 = sub_100049DE0(v14), (v16 & 1) != 0))
  {
    v25 = *(CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)v23[1].cellInset + 8 * v24);
    swift_bridgeObjectRetain(v25);
  }
  else
  {
    v25 = &_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v23, v16, v17, v18, v19, v20, v21, v22);
  v121 = v15;
  v26 = *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  v27 = *(_QWORD *)(v26 + 16);
  v124 = a2;
  if (v27)
  {
    v117[1] = v25;
    v28 = v26 + 32;
    v117[0] = v26;
    swift_bridgeObjectRetain_n(v26, 2);
    sub_1000252E0(v28, (uint64_t)v130);
    v29 = v131;
    v30 = v132;
    sub_100016804(v130, v131);
    (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
    __asm { BR              X9 }
  }
  v130[0] = &v25->super.super.super.super.isa;
  sub_10013C280((uint64_t)&_swiftEmptyArrayStorage);
  v32 = (CHWorkoutDetailHeartRateTableViewCell *)v130[0];
  v33 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain(v32);
  sub_100419154(v130, v33);
  swift_bridgeObjectRelease(v32, v34, v35, v36, v37, v38, v39, v40);

  v41 = v130[0];
  v42 = v130[0][2];
  if (!v42)
  {
LABEL_12:
    swift_release(v41);
    v49 = static os_log_type_t.default.getter(v48);
    v50 = HKLogActivity;
    sub_1000252E0((uint64_t)v133, (uint64_t)v130);
    v51 = v49;
    if (os_log_type_enabled(v50, v49))
    {
      v52 = v50;
      v53 = swift_slowAlloc(22, -1);
      v54 = swift_slowAlloc(64, -1);
      v129[0] = v54;
      *(_DWORD *)v53 = 136315394;
      v55 = ASFriendListDisplayMode.id.getter(ObjectType);
      v56 = _typeName(_:qualified:)(v55, 0);
      v58 = (CHWorkoutDetailHeartRateTableViewCell *)v57;
      v127 = sub_10003E8EC(v56, v57, v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, &v128, v53 + 4);
      swift_bridgeObjectRelease(v58, v59, v60, v61, v62, v63, v64, v65);
      *(_WORD *)(v53 + 12) = 2080;
      sub_100016804(v130, v131);
      v66 = sub_1003D7F00();
      v68 = (CHWorkoutDetailHeartRateTableViewCell *)v67;
      v127 = sub_10003E8EC(v66, v67, v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, &v128, v53 + 14);
      swift_bridgeObjectRelease(v68, v69, v70, v71, v72, v73, v74, v75);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v130);
      _os_log_impl((void *)&_mh_execute_header, v52, v51, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy(v54, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1, -1);
      swift_slowDealloc(v53, -1, -1);

    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v130);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v133);
  }
  v43 = v130[0] + 4;
  swift_retain(v130[0]);
  v44 = 0;
  while (1)
  {
    v45 = v43[3];
    v46 = v43[4];
    sub_100016804(v43, v45);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v46);
    v47 = static UUID.== infix(_:_:)(v8, v10);
    v125[1](v8, v126);
    if ((v47 & 1) != 0)
      break;
    ++v44;
    v43 += 5;
    if (v42 == v44)
    {
      swift_release(v41);
      goto LABEL_12;
    }
  }
  swift_release(v41);
  LODWORD(v126) = sub_10054FEFC(*(_QWORD *)v120, *((_QWORD *)v120 + 1), v120[16]);
  sub_1000252E0((uint64_t)v133, (uint64_t)v130);
  v76 = *(void **)&v33[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  v77 = (void (**)(char *, uint64_t))v121;
  v78 = v76;
  v79 = v124;
  v80 = objc_msgSend(v124, "view");
  if (!v80)
  {
    __break(1u);
    goto LABEL_30;
  }
  v81 = v80;
  v82 = objc_msgSend(v80, "window");

  if (v82)
  {
    objc_msgSend(v82, "bounds");
    v84 = v83;

  }
  else
  {
    v84 = 0;
  }
  v85 = objc_msgSend(v79, "view");
  if (!v85)
  {
LABEL_30:
    __break(1u);

    swift_release(v130[0]);
    __break(1u);
    JUMPOUT(0x10041243CLL);
  }
  v86 = v85;
  v87 = objc_msgSend(v85, "window");

  v125 = v77;
  ObjectType = (uint64_t)v78;
  if (v87)
  {
    objc_msgSend(v87, "bounds");
    v89 = v88;

  }
  else
  {
    v89 = 0;
  }
  LODWORD(v121) = v87 == 0;
  v90 = v82 == 0;
  v91 = swift_allocObject(&unk_10079EB68, 24, 7);
  *(_QWORD *)(v91 + 16) = v79;
  KeyPath = swift_getKeyPath(&unk_10063BAE8);
  v93 = v123;
  *v123 = KeyPath;
  v94 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v93, v94, 0);
  v95 = (int *)v118;
  v96 = *(int *)(v118 + 40);
  v97 = type metadata accessor for DashboardCardCellViewCache();
  v98 = swift_allocObject(v97, 40, 7);
  *(_BYTE *)(v98 + 16) = 1;
  *(_QWORD *)(v98 + 24) = sub_10043D6F8((uint64_t)&_swiftEmptyArrayStorage);
  v99 = sub_10043D6F8((uint64_t)&_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v93 + v96) = v98;
  *(_QWORD *)(v98 + 32) = v99;
  v100 = (char *)v93 + v95[15];
  v101 = enum case for DynamicTypeSize.accessibility1(_:);
  v102 = type metadata accessor for DynamicTypeSize(0);
  v103 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 104);
  v103(v100, v101, v102);
  v103((char *)v93 + v95[16], enum case for DynamicTypeSize.xLarge(_:), v102);
  *((_BYTE *)v93 + v95[5]) = v126;
  sub_100045AD4((uint64_t)v130, (uint64_t)v93 + v95[6], &qword_100832410);
  *(uint64_t *)((char *)v93 + v95[7]) = (uint64_t)v41;
  *(uint64_t *)((char *)v93 + v95[8]) = (uint64_t)v125;
  *(uint64_t *)((char *)v93 + v95[9]) = ObjectType;
  v104 = (char *)v93 + v95[11];
  *(_QWORD *)v104 = v84;
  v104[8] = v90;
  v105 = (char *)v93 + v95[12];
  *(_QWORD *)v105 = v89;
  v105[8] = (char)v121;
  v106 = (uint64_t *)((char *)v93 + v95[13]);
  *v106 = sub_10041B498;
  v106[1] = v91;
  v107 = (uint64_t *)((char *)v93 + v95[14]);
  *v107 = v44;
  v107[1] = 0;
  v108 = v119;
  sub_10004F8C8((uint64_t)v93, v119, type metadata accessor for CardTypeConfigurationRoomView);
  v109 = objc_allocWithZone((Class)sub_100047110(&qword_1008325D8));
  v110 = v124;
  v111 = (void *)UIHostingController.init(rootView:)(v108);
  v112 = objc_msgSend(v111, "presentationController");
  if (v112)
  {
    v113 = v112;
    v114 = objc_opt_self(UISheetPresentationController);
    v115 = (void *)swift_dynamicCastObjCClass(v113, v114);
    if (v115)
      objc_msgSend(v115, "setPrefersGrabberVisible:", 1);

  }
  objc_msgSend(v110, "presentViewController:animated:completion:", v111, 1, 0);

  sub_100011F54((uint64_t)v123, type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v133);
}

uint64_t sub_100412508(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Card;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  const char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  char *v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  os_log_type_t v49;
  NSObject *v50;
  os_log_type_t v51;
  NSObject *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  void (**v77)(char *, uint64_t);
  id v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t KeyPath;
  uint64_t *v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t);
  char *v104;
  char *v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  id v109;
  id v110;
  void *v111;
  id v112;
  void *v113;
  uint64_t v114;
  void *v115;
  _QWORD v117[2];
  uint64_t v118;
  uint64_t v119;
  char *v120;
  id v121;
  uint64_t ObjectType;
  uint64_t *v123;
  id v124;
  void (**v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129[5];
  _QWORD *v130[3];
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[5];

  ObjectType = swift_getObjectType(a2);
  v118 = type metadata accessor for CardTypeConfigurationRoomView(0);
  __chkstk_darwin(v118);
  v119 = (uint64_t)v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v123 = (_QWORD *)((char *)v117 - v6);
  v126 = type metadata accessor for UUID(0);
  v125 = *(void (***)(char *, uint64_t))(v126 - 8);
  __chkstk_darwin(v126);
  v8 = (char *)v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Card = type metadata accessor for LoadCard(0);
  v133[3] = Card;
  v133[4] = &off_1007A5EF8;
  v10 = sub_10004C480(v133);
  sub_10004F8C8(a1, (uint64_t)v10, type metadata accessor for LoadCard);
  v11 = (char *)v10 + *(int *)(Card + 20);
  v12 = *(_QWORD *)v11;
  v13 = *((_QWORD *)v11 + 1);
  v120 = v11;
  v14 = sub_10054FEFC(v12, v13, v11[16]);
  v15 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  v23 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10035FF38(v14);
  if (*(_QWORD *)v23->cellPadding && (v24 = sub_100049DE0(v14), (v16 & 1) != 0))
  {
    v25 = *(CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)v23[1].cellInset + 8 * v24);
    swift_bridgeObjectRetain(v25);
  }
  else
  {
    v25 = &_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v23, v16, v17, v18, v19, v20, v21, v22);
  v121 = v15;
  v26 = *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  v27 = *(_QWORD *)(v26 + 16);
  v124 = a2;
  if (v27)
  {
    v117[1] = v25;
    v28 = v26 + 32;
    v117[0] = v26;
    swift_bridgeObjectRetain_n(v26, 2);
    sub_1000252E0(v28, (uint64_t)v130);
    v29 = v131;
    v30 = v132;
    sub_100016804(v130, v131);
    (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
    __asm { BR              X9 }
  }
  v130[0] = &v25->super.super.super.super.isa;
  sub_10013C280((uint64_t)&_swiftEmptyArrayStorage);
  v32 = (CHWorkoutDetailHeartRateTableViewCell *)v130[0];
  v33 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain(v32);
  sub_100419154(v130, v33);
  swift_bridgeObjectRelease(v32, v34, v35, v36, v37, v38, v39, v40);

  v41 = v130[0];
  v42 = v130[0][2];
  if (!v42)
  {
LABEL_12:
    swift_release(v41);
    v49 = static os_log_type_t.default.getter(v48);
    v50 = HKLogActivity;
    sub_1000252E0((uint64_t)v133, (uint64_t)v130);
    v51 = v49;
    if (os_log_type_enabled(v50, v49))
    {
      v52 = v50;
      v53 = swift_slowAlloc(22, -1);
      v54 = swift_slowAlloc(64, -1);
      v129[0] = v54;
      *(_DWORD *)v53 = 136315394;
      v55 = ASFriendListDisplayMode.id.getter(ObjectType);
      v56 = _typeName(_:qualified:)(v55, 0);
      v58 = (CHWorkoutDetailHeartRateTableViewCell *)v57;
      v127 = sub_10003E8EC(v56, v57, v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, &v128, v53 + 4);
      swift_bridgeObjectRelease(v58, v59, v60, v61, v62, v63, v64, v65);
      *(_WORD *)(v53 + 12) = 2080;
      sub_100016804(v130, v131);
      v66 = sub_10050BE94();
      v68 = (CHWorkoutDetailHeartRateTableViewCell *)v67;
      v127 = sub_10003E8EC(v66, v67, v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, &v128, v53 + 14);
      swift_bridgeObjectRelease(v68, v69, v70, v71, v72, v73, v74, v75);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v130);
      _os_log_impl((void *)&_mh_execute_header, v52, v51, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy(v54, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1, -1);
      swift_slowDealloc(v53, -1, -1);

    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v130);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v133);
  }
  v43 = v130[0] + 4;
  swift_retain(v130[0]);
  v44 = 0;
  while (1)
  {
    v45 = v43[3];
    v46 = v43[4];
    sub_100016804(v43, v45);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v46);
    v47 = static UUID.== infix(_:_:)(v8, v10);
    v125[1](v8, v126);
    if ((v47 & 1) != 0)
      break;
    ++v44;
    v43 += 5;
    if (v42 == v44)
    {
      swift_release(v41);
      goto LABEL_12;
    }
  }
  swift_release(v41);
  LODWORD(v126) = sub_10054FEFC(*(_QWORD *)v120, *((_QWORD *)v120 + 1), v120[16]);
  sub_1000252E0((uint64_t)v133, (uint64_t)v130);
  v76 = *(void **)&v33[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  v77 = (void (**)(char *, uint64_t))v121;
  v78 = v76;
  v79 = v124;
  v80 = objc_msgSend(v124, "view");
  if (!v80)
  {
    __break(1u);
    goto LABEL_30;
  }
  v81 = v80;
  v82 = objc_msgSend(v80, "window");

  if (v82)
  {
    objc_msgSend(v82, "bounds");
    v84 = v83;

  }
  else
  {
    v84 = 0;
  }
  v85 = objc_msgSend(v79, "view");
  if (!v85)
  {
LABEL_30:
    __break(1u);

    swift_release(v130[0]);
    __break(1u);
    JUMPOUT(0x100412FE0);
  }
  v86 = v85;
  v87 = objc_msgSend(v85, "window");

  v125 = v77;
  ObjectType = (uint64_t)v78;
  if (v87)
  {
    objc_msgSend(v87, "bounds");
    v89 = v88;

  }
  else
  {
    v89 = 0;
  }
  LODWORD(v121) = v87 == 0;
  v90 = v82 == 0;
  v91 = swift_allocObject(&unk_10079EAF0, 24, 7);
  *(_QWORD *)(v91 + 16) = v79;
  KeyPath = swift_getKeyPath(&unk_10063BAE8);
  v93 = v123;
  *v123 = KeyPath;
  v94 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v93, v94, 0);
  v95 = (int *)v118;
  v96 = *(int *)(v118 + 40);
  v97 = type metadata accessor for DashboardCardCellViewCache();
  v98 = swift_allocObject(v97, 40, 7);
  *(_BYTE *)(v98 + 16) = 1;
  *(_QWORD *)(v98 + 24) = sub_10043D6F8((uint64_t)&_swiftEmptyArrayStorage);
  v99 = sub_10043D6F8((uint64_t)&_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v93 + v96) = v98;
  *(_QWORD *)(v98 + 32) = v99;
  v100 = (char *)v93 + v95[15];
  v101 = enum case for DynamicTypeSize.accessibility1(_:);
  v102 = type metadata accessor for DynamicTypeSize(0);
  v103 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 104);
  v103(v100, v101, v102);
  v103((char *)v93 + v95[16], enum case for DynamicTypeSize.xLarge(_:), v102);
  *((_BYTE *)v93 + v95[5]) = v126;
  sub_100045AD4((uint64_t)v130, (uint64_t)v93 + v95[6], &qword_100832410);
  *(uint64_t *)((char *)v93 + v95[7]) = (uint64_t)v41;
  *(uint64_t *)((char *)v93 + v95[8]) = (uint64_t)v125;
  *(uint64_t *)((char *)v93 + v95[9]) = ObjectType;
  v104 = (char *)v93 + v95[11];
  *(_QWORD *)v104 = v84;
  v104[8] = v90;
  v105 = (char *)v93 + v95[12];
  *(_QWORD *)v105 = v89;
  v105[8] = (char)v121;
  v106 = (uint64_t *)((char *)v93 + v95[13]);
  *v106 = sub_10041B498;
  v106[1] = v91;
  v107 = (uint64_t *)((char *)v93 + v95[14]);
  *v107 = v44;
  v107[1] = 0;
  v108 = v119;
  sub_10004F8C8((uint64_t)v93, v119, type metadata accessor for CardTypeConfigurationRoomView);
  v109 = objc_allocWithZone((Class)sub_100047110(&qword_1008325D8));
  v110 = v124;
  v111 = (void *)UIHostingController.init(rootView:)(v108);
  v112 = objc_msgSend(v111, "presentationController");
  if (v112)
  {
    v113 = v112;
    v114 = objc_opt_self(UISheetPresentationController);
    v115 = (void *)swift_dynamicCastObjCClass(v113, v114);
    if (v115)
      objc_msgSend(v115, "setPrefersGrabberVisible:", 1);

  }
  objc_msgSend(v110, "presentViewController:animated:completion:", v111, 1, 0);

  sub_100011F54((uint64_t)v123, type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v133);
}

uint64_t sub_1004130AC(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  const char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  char *v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  os_log_type_t v49;
  NSObject *v50;
  os_log_type_t v51;
  NSObject *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  void (**v77)(char *, uint64_t);
  id v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t KeyPath;
  uint64_t *v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t);
  char *v104;
  char *v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  id v109;
  id v110;
  void *v111;
  id v112;
  void *v113;
  uint64_t v114;
  void *v115;
  _QWORD v117[2];
  uint64_t v118;
  uint64_t v119;
  char *v120;
  id v121;
  uint64_t ObjectType;
  uint64_t *v123;
  id v124;
  void (**v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129[5];
  _QWORD *v130[3];
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[5];

  ObjectType = swift_getObjectType(a2);
  v118 = type metadata accessor for CardTypeConfigurationRoomView(0);
  __chkstk_darwin(v118);
  v119 = (uint64_t)v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v123 = (_QWORD *)((char *)v117 - v6);
  v126 = type metadata accessor for UUID(0);
  v125 = *(void (***)(char *, uint64_t))(v126 - 8);
  __chkstk_darwin(v126);
  v8 = (char *)v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TrendsCard(0);
  v133[3] = v9;
  v133[4] = &off_1007A4840;
  v10 = sub_10004C480(v133);
  sub_10004F8C8(a1, (uint64_t)v10, type metadata accessor for TrendsCard);
  v11 = (char *)v10 + *(int *)(v9 + 20);
  v12 = *(_QWORD *)v11;
  v13 = *((_QWORD *)v11 + 1);
  v120 = v11;
  v14 = sub_10054FEFC(v12, v13, v11[16]);
  v15 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  v23 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10035FF38(v14);
  if (*(_QWORD *)v23->cellPadding && (v24 = sub_100049DE0(v14), (v16 & 1) != 0))
  {
    v25 = *(CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)v23[1].cellInset + 8 * v24);
    swift_bridgeObjectRetain(v25);
  }
  else
  {
    v25 = &_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v23, v16, v17, v18, v19, v20, v21, v22);
  v121 = v15;
  v26 = *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  v27 = *(_QWORD *)(v26 + 16);
  v124 = a2;
  if (v27)
  {
    v117[1] = v25;
    v28 = v26 + 32;
    v117[0] = v26;
    swift_bridgeObjectRetain_n(v26, 2);
    sub_1000252E0(v28, (uint64_t)v130);
    v29 = v131;
    v30 = v132;
    sub_100016804(v130, v131);
    (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
    __asm { BR              X9 }
  }
  v130[0] = &v25->super.super.super.super.isa;
  sub_10013C280((uint64_t)&_swiftEmptyArrayStorage);
  v32 = (CHWorkoutDetailHeartRateTableViewCell *)v130[0];
  v33 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain(v32);
  sub_100419154(v130, v33);
  swift_bridgeObjectRelease(v32, v34, v35, v36, v37, v38, v39, v40);

  v41 = v130[0];
  v42 = v130[0][2];
  if (!v42)
  {
LABEL_12:
    swift_release(v41);
    v49 = static os_log_type_t.default.getter(v48);
    v50 = HKLogActivity;
    sub_1000252E0((uint64_t)v133, (uint64_t)v130);
    v51 = v49;
    if (os_log_type_enabled(v50, v49))
    {
      v52 = v50;
      v53 = swift_slowAlloc(22, -1);
      v54 = swift_slowAlloc(64, -1);
      v129[0] = v54;
      *(_DWORD *)v53 = 136315394;
      v55 = ASFriendListDisplayMode.id.getter(ObjectType);
      v56 = _typeName(_:qualified:)(v55, 0);
      v58 = (CHWorkoutDetailHeartRateTableViewCell *)v57;
      v127 = sub_10003E8EC(v56, v57, v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, &v128, v53 + 4);
      swift_bridgeObjectRelease(v58, v59, v60, v61, v62, v63, v64, v65);
      *(_WORD *)(v53 + 12) = 2080;
      sub_100016804(v130, v131);
      v66 = sub_1004D45F4();
      v68 = (CHWorkoutDetailHeartRateTableViewCell *)v67;
      v127 = sub_10003E8EC(v66, v67, v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, &v128, v53 + 14);
      swift_bridgeObjectRelease(v68, v69, v70, v71, v72, v73, v74, v75);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v130);
      _os_log_impl((void *)&_mh_execute_header, v52, v51, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy(v54, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1, -1);
      swift_slowDealloc(v53, -1, -1);

    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v130);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v133);
  }
  v43 = v130[0] + 4;
  swift_retain(v130[0]);
  v44 = 0;
  while (1)
  {
    v45 = v43[3];
    v46 = v43[4];
    sub_100016804(v43, v45);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v46);
    v47 = static UUID.== infix(_:_:)(v8, v10);
    v125[1](v8, v126);
    if ((v47 & 1) != 0)
      break;
    ++v44;
    v43 += 5;
    if (v42 == v44)
    {
      swift_release(v41);
      goto LABEL_12;
    }
  }
  swift_release(v41);
  LODWORD(v126) = sub_10054FEFC(*(_QWORD *)v120, *((_QWORD *)v120 + 1), v120[16]);
  sub_1000252E0((uint64_t)v133, (uint64_t)v130);
  v76 = *(void **)&v33[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  v77 = (void (**)(char *, uint64_t))v121;
  v78 = v76;
  v79 = v124;
  v80 = objc_msgSend(v124, "view");
  if (!v80)
  {
    __break(1u);
    goto LABEL_30;
  }
  v81 = v80;
  v82 = objc_msgSend(v80, "window");

  if (v82)
  {
    objc_msgSend(v82, "bounds");
    v84 = v83;

  }
  else
  {
    v84 = 0;
  }
  v85 = objc_msgSend(v79, "view");
  if (!v85)
  {
LABEL_30:
    __break(1u);

    swift_release(v130[0]);
    __break(1u);
    JUMPOUT(0x100413B84);
  }
  v86 = v85;
  v87 = objc_msgSend(v85, "window");

  v125 = v77;
  ObjectType = (uint64_t)v78;
  if (v87)
  {
    objc_msgSend(v87, "bounds");
    v89 = v88;

  }
  else
  {
    v89 = 0;
  }
  LODWORD(v121) = v87 == 0;
  v90 = v82 == 0;
  v91 = swift_allocObject(&unk_10079EBB8, 24, 7);
  *(_QWORD *)(v91 + 16) = v79;
  KeyPath = swift_getKeyPath(&unk_10063BAE8);
  v93 = v123;
  *v123 = KeyPath;
  v94 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v93, v94, 0);
  v95 = (int *)v118;
  v96 = *(int *)(v118 + 40);
  v97 = type metadata accessor for DashboardCardCellViewCache();
  v98 = swift_allocObject(v97, 40, 7);
  *(_BYTE *)(v98 + 16) = 1;
  *(_QWORD *)(v98 + 24) = sub_10043D6F8((uint64_t)&_swiftEmptyArrayStorage);
  v99 = sub_10043D6F8((uint64_t)&_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v93 + v96) = v98;
  *(_QWORD *)(v98 + 32) = v99;
  v100 = (char *)v93 + v95[15];
  v101 = enum case for DynamicTypeSize.accessibility1(_:);
  v102 = type metadata accessor for DynamicTypeSize(0);
  v103 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 104);
  v103(v100, v101, v102);
  v103((char *)v93 + v95[16], enum case for DynamicTypeSize.xLarge(_:), v102);
  *((_BYTE *)v93 + v95[5]) = v126;
  sub_100045AD4((uint64_t)v130, (uint64_t)v93 + v95[6], &qword_100832410);
  *(uint64_t *)((char *)v93 + v95[7]) = (uint64_t)v41;
  *(uint64_t *)((char *)v93 + v95[8]) = (uint64_t)v125;
  *(uint64_t *)((char *)v93 + v95[9]) = ObjectType;
  v104 = (char *)v93 + v95[11];
  *(_QWORD *)v104 = v84;
  v104[8] = v90;
  v105 = (char *)v93 + v95[12];
  *(_QWORD *)v105 = v89;
  v105[8] = (char)v121;
  v106 = (uint64_t *)((char *)v93 + v95[13]);
  *v106 = sub_10041B498;
  v106[1] = v91;
  v107 = (uint64_t *)((char *)v93 + v95[14]);
  *v107 = v44;
  v107[1] = 0;
  v108 = v119;
  sub_10004F8C8((uint64_t)v93, v119, type metadata accessor for CardTypeConfigurationRoomView);
  v109 = objc_allocWithZone((Class)sub_100047110(&qword_1008325D8));
  v110 = v124;
  v111 = (void *)UIHostingController.init(rootView:)(v108);
  v112 = objc_msgSend(v111, "presentationController");
  if (v112)
  {
    v113 = v112;
    v114 = objc_opt_self(UISheetPresentationController);
    v115 = (void *)swift_dynamicCastObjCClass(v113, v114);
    if (v115)
      objc_msgSend(v115, "setPrefersGrabberVisible:", 1);

  }
  objc_msgSend(v110, "presentViewController:animated:completion:", v111, 1, 0);

  sub_100011F54((uint64_t)v123, type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v133);
}

uint64_t sub_100413C50(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  const char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  char *v33;
  SEL v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  os_log_type_t v49;
  NSObject *v50;
  os_log_type_t v51;
  NSObject *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  SEL v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  void (**v77)(char *, uint64_t);
  id v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t KeyPath;
  uint64_t *v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t);
  char *v104;
  char *v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  id v109;
  id v110;
  void *v111;
  id v112;
  void *v113;
  uint64_t v114;
  void *v115;
  _QWORD v117[2];
  uint64_t v118;
  uint64_t v119;
  char *v120;
  id v121;
  uint64_t ObjectType;
  uint64_t *v123;
  id v124;
  void (**v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129[5];
  _QWORD *v130[3];
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[5];

  ObjectType = swift_getObjectType(a2);
  v118 = type metadata accessor for CardTypeConfigurationRoomView(0);
  __chkstk_darwin(v118);
  v119 = (uint64_t)v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v123 = (_QWORD *)((char *)v117 - v6);
  v126 = type metadata accessor for UUID(0);
  v125 = *(void (***)(char *, uint64_t))(v126 - 8);
  __chkstk_darwin(v126);
  v8 = (char *)v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CatalogTipCard(0);
  v133[3] = v9;
  v133[4] = &off_100792DA0;
  v10 = sub_10004C480(v133);
  sub_10004F8C8(a1, (uint64_t)v10, type metadata accessor for CatalogTipCard);
  v11 = (char *)v10 + *(int *)(v9 + 20);
  v12 = *(_QWORD *)v11;
  v13 = *((_QWORD *)v11 + 1);
  v120 = v11;
  v14 = sub_10054FEFC(v12, v13, v11[16]);
  v15 = *(char **)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_summaryCoordinator];
  v23 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10035FF38(v14);
  if (*(_QWORD *)v23->cellPadding && (v24 = sub_100049DE0(v14), (v16 & 1) != 0))
  {
    v25 = *(CHWorkoutDetailHeartRateTableViewCell **)(*(_QWORD *)v23[1].cellInset + 8 * v24);
    swift_bridgeObjectRetain(v25);
  }
  else
  {
    v25 = &_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v23, v16, v17, v18, v19, v20, v21, v22);
  v121 = v15;
  v26 = *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards];
  v27 = *(_QWORD *)(v26 + 16);
  v124 = a2;
  if (v27)
  {
    v117[1] = v25;
    v28 = v26 + 32;
    v117[0] = v26;
    swift_bridgeObjectRetain_n(v26, 2);
    sub_1000252E0(v28, (uint64_t)v130);
    v29 = v131;
    v30 = v132;
    sub_100016804(v130, v131);
    (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
    __asm { BR              X9 }
  }
  v130[0] = &v25->super.super.super.super.isa;
  sub_10013C280((uint64_t)&_swiftEmptyArrayStorage);
  v32 = (CHWorkoutDetailHeartRateTableViewCell *)v130[0];
  v33 = (char *)*(id *)&a2[OBJC_IVAR____TtC10FitnessApp31ActivityDashboardViewController_context];
  swift_bridgeObjectRetain(v32);
  sub_100419154(v130, v33);
  swift_bridgeObjectRelease(v32, v34, v35, v36, v37, v38, v39, v40);

  v41 = v130[0];
  v42 = v130[0][2];
  if (!v42)
  {
LABEL_12:
    swift_release(v41);
    v49 = static os_log_type_t.default.getter(v48);
    v50 = HKLogActivity;
    sub_1000252E0((uint64_t)v133, (uint64_t)v130);
    v51 = v49;
    if (os_log_type_enabled(v50, v49))
    {
      v52 = v50;
      v53 = swift_slowAlloc(22, -1);
      v54 = swift_slowAlloc(64, -1);
      v129[0] = v54;
      *(_DWORD *)v53 = 136315394;
      v55 = ASFriendListDisplayMode.id.getter(ObjectType);
      v56 = _typeName(_:qualified:)(v55, 0);
      v58 = (CHWorkoutDetailHeartRateTableViewCell *)v57;
      v127 = sub_10003E8EC(v56, v57, v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, &v128, v53 + 4);
      swift_bridgeObjectRelease(v58, v59, v60, v61, v62, v63, v64, v65);
      *(_WORD *)(v53 + 12) = 2080;
      sub_100016804(v130, v131);
      v66 = sub_10027E890();
      v68 = (CHWorkoutDetailHeartRateTableViewCell *)v67;
      v127 = sub_10003E8EC(v66, v67, v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, &v128, v53 + 14);
      swift_bridgeObjectRelease(v68, v69, v70, v71, v72, v73, v74, v75);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v130);
      _os_log_impl((void *)&_mh_execute_header, v52, v51, "%s Not presenting edit card modal. Unable to determine current card index for card: %s.", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy(v54, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1, -1);
      swift_slowDealloc(v53, -1, -1);

    }
    else
    {
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v130);
    }
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v133);
  }
  v43 = v130[0] + 4;
  swift_retain(v130[0]);
  v44 = 0;
  while (1)
  {
    v45 = v43[3];
    v46 = v43[4];
    sub_100016804(v43, v45);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v46);
    v47 = static UUID.== infix(_:_:)(v8, v10);
    v125[1](v8, v126);
    if ((v47 & 1) != 0)
      break;
    ++v44;
    v43 += 5;
    if (v42 == v44)
    {
      swift_release(v41);
      goto LABEL_12;
    }
  }
  swift_release(v41);
  LODWORD(v126) = sub_10054FEFC(*(_QWORD *)v120, *((_QWORD *)v120 + 1), v120[16]);
  sub_1000252E0((uint64_t)v133, (uint64_t)v130);
  v76 = *(void **)&v33[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_configurationProvider];
  v77 = (void (**)(char *, uint64_t))v121;
  v78 = v76;
  v79 = v124;
  v80 = objc_msgSend(v124, "view");
  if (!v80)
  {
    __break(1u);
    goto LABEL_30;
  }
  v81 = v80;
  v82 = objc_msgSend(v80, "window");

  if (v82)
  {
    objc_msgSend(v82, "bounds");
    v84 = v83;

  }
  else
  {
    v84 = 0;
  }
  v85 = objc_msgSend(v79, "view");
  if (!v85)
  {
LABEL_30:
    __break(1u);

    swift_release(v130[0]);
    __break(1u);
    JUMPOUT(0x100414728);
  }
  v86 = v85;
  v87 = objc_msgSend(v85, "window");

  v125 = v77;
  ObjectType = (uint64_t)v78;
  if (v87)
  {
    objc_msgSend(v87, "bounds");
    v89 = v88;

  }
  else
  {
    v89 = 0;
  }
  LODWORD(v121) = v87 == 0;
  v90 = v82 == 0;
  v91 = swift_allocObject(&unk_10079EB90, 24, 7);
  *(_QWORD *)(v91 + 16) = v79;
  KeyPath = swift_getKeyPath(&unk_10063BAE8);
  v93 = v123;
  *v123 = KeyPath;
  v94 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v93, v94, 0);
  v95 = (int *)v118;
  v96 = *(int *)(v118 + 40);
  v97 = type metadata accessor for DashboardCardCellViewCache();
  v98 = swift_allocObject(v97, 40, 7);
  *(_BYTE *)(v98 + 16) = 1;
  *(_QWORD *)(v98 + 24) = sub_10043D6F8((uint64_t)&_swiftEmptyArrayStorage);
  v99 = sub_10043D6F8((uint64_t)&_swiftEmptyArrayStorage);
  *(uint64_t *)((char *)v93 + v96) = v98;
  *(_QWORD *)(v98 + 32) = v99;
  v100 = (char *)v93 + v95[15];
  v101 = enum case for DynamicTypeSize.accessibility1(_:);
  v102 = type metadata accessor for DynamicTypeSize(0);
  v103 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 104);
  v103(v100, v101, v102);
  v103((char *)v93 + v95[16], enum case for DynamicTypeSize.xLarge(_:), v102);
  *((_BYTE *)v93 + v95[5]) = v126;
  sub_100045AD4((uint64_t)v130, (uint64_t)v93 + v95[6], &qword_100832410);
  *(uint64_t *)((char *)v93 + v95[7]) = (uint64_t)v41;
  *(uint64_t *)((char *)v93 + v95[8]) = (uint64_t)v125;
  *(uint64_t *)((char *)v93 + v95[9]) = ObjectType;
  v104 = (char *)v93 + v95[11];
  *(_QWORD *)v104 = v84;
  v104[8] = v90;
  v105 = (char *)v93 + v95[12];
  *(_QWORD *)v105 = v89;
  v105[8] = (char)v121;
  v106 = (uint64_t *)((char *)v93 + v95[13]);
  *v106 = sub_10041B498;
  v106[1] = v91;
  v107 = (uint64_t *)((char *)v93 + v95[14]);
  *v107 = v44;
  v107[1] = 0;
  v108 = v119;
  sub_10004F8C8((uint64_t)v93, v119, type metadata accessor for CardTypeConfigurationRoomView);
  v109 = objc_allocWithZone((Class)sub_100047110(&qword_1008325D8));
  v110 = v124;
  v111 = (void *)UIHostingController.init(rootView:)(v108);
  v112 = objc_msgSend(v111, "presentationController");
  if (v112)
  {
    v113 = v112;
    v114 = objc_opt_self(UISheetPresentationController);
    v115 = (void *)swift_dynamicCastObjCClass(v113, v114);
    if (v115)
      objc_msgSend(v115, "setPrefersGrabberVisible:", 1);

  }
  objc_msgSend(v110, "presentViewController:animated:completion:", v111, 1, 0);

  sub_100011F54((uint64_t)v123, type metadata accessor for CardTypeConfigurationRoomView);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v133);
}

uint64_t sub_1004147F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10041482C(a1, a2, a3, type metadata accessor for AwardsCard, (uint64_t)&off_100793248, (void (*)(_QWORD *, id))sub_10040F65C);
}

uint64_t sub_100414810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10041482C(a1, a2, a3, type metadata accessor for FriendsHighlightCard, (uint64_t)&off_10079DA28, (void (*)(_QWORD *, id))sub_100411964);
}

uint64_t sub_10041482C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5, void (*a6)(_QWORD *, id))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  void *v30;
  char *v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t i;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  id v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD);
  char *v48;
  void *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(_QWORD *, id);
  uint64_t v64;
  _QWORD v65[6];
  _BYTE v66[24];
  _QWORD v67[4];
  _QWORD v68[5];

  v63 = a6;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_100820038);
  __chkstk_darwin(v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for TrendsCard(0);
  v59 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_100824DE0);
  __chkstk_darwin(v19);
  v55 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for CatalogTipSection(0);
  v53 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v51 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for URL(0);
  v61 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v60 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100047110(&qword_100820040);
  __chkstk_darwin(v23);
  v58 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for CatalogTipCard(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v52 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a4(0);
  v68[3] = v26;
  v68[4] = a5;
  v27 = sub_10004C480(v68);
  v28 = a1;
  v29 = a4;
  sub_10004F8C8(v28, (uint64_t)v27, a4);
  v30 = *(void **)(a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_hostViewController);
  if (v30)
  {
    if ((*((_BYTE *)v27 + *(int *)(v26 + 28)) & 1) == 0)
    {
      v63 = (void (*)(_QWORD *, id))v26;
      v33 = a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator;
      swift_beginAccess(a3 + OBJC_IVAR____TtC10FitnessApp25ActivityDashboardCardCell_summaryCoordinator, v66, 0, 0);
      sub_100021CC0(v33, (uint64_t)v67, &qword_1008324B0);
      if (v67[3])
      {
        v50 = v16;
        sub_1000252E0((uint64_t)v67, (uint64_t)v65);
        v34 = v30;
        sub_10001BE90((uint64_t)v67, &qword_1008324B0);
        v35 = *(_QWORD *)(*sub_100016804(v65, v65[3])
                        + OBJC_IVAR____TtC10FitnessApp18SummaryCoordinator_clientActiveCards);
        v36 = *(_QWORD *)(v35 + 16);
        if (v36)
        {
          v47 = v29;
          v48 = v18;
          v49 = v30;
          v37 = (_QWORD *)(v35 + 32);
          v46 = v35;
          swift_bridgeObjectRetain(v35);
          for (i = 0; i != v36; ++i)
          {
            v39 = v37[3];
            v40 = v37[4];
            sub_100016804(v37, v39);
            (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
            v41 = static UUID.== infix(_:_:)(v13, v27);
            (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
            if ((v41 & 1) != 0)
              goto LABEL_12;
            v37 += 5;
          }
          i = 0;
LABEL_12:
          v42 = v41 ^ 1;
          swift_bridgeObjectRelease(v46);
          v29 = v47;
        }
        else
        {
          i = 0;
          v42 = 1;
        }
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v65);
      }
      else
      {
        v43 = v30;
        sub_10001BE90((uint64_t)v67, &qword_1008324B0);
        i = 0;
        v42 = 1;
      }
      sub_100415204((uint64_t)v27, i, v42 & 1, 1, v29);
      __asm { BR              X10 }
    }
    v31 = (char *)v27 + *(int *)(v26 + 20);
    if (v31[16] != 3 || *(_OWORD *)v31 != 0)
    {
      v32 = v30;
      v63(v27, v32);

    }
  }
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v68);
}

void sub_100415204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  id v7;
  NSString v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  Class isa;
  unint64_t v16;
  NSString v17;
  uint64_t v18;
  Class v19;
  __n128 v20;
  _BYTE v21[160];

  v7 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "BOOLForKey:", v8);

  v9 = sub_100047110(&qword_100830BC0);
  inited = swift_initStackObject(v9, v21);
  *(_OWORD *)(inited + 16) = xmmword_100624EB0;
  *(_QWORD *)(inited + 32) = 0x7463617265746E69;
  *(_QWORD *)(inited + 40) = 0xEF657079546E6F69;
  *(NSNumber *)(inited + 48) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 56) = 0x6570795464726163;
  *(_QWORD *)(inited + 64) = 0xE800000000000000;
  v11 = a1 + *(int *)(a5(0) + 20);
  v12 = *(_QWORD *)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v14 = *(_BYTE *)(v11 + 16);
  sub_1000EB3F4(*(_QWORD *)v11, v13, v14);
  isa = sub_10058CACC(v12, v13, v14).super.super.isa;
  sub_1000EB41C(v12, v13, v14);
  *(_QWORD *)(inited + 72) = isa;
  *(_QWORD *)(inited + 80) = 0x657A695364726163;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(NSNumber *)(inited + 96) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 104) = 0x65646E4964726163;
  *(_QWORD *)(inited + 112) = 0xE900000000000078;
  *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 128) = 0xD000000000000016;
  *(_QWORD *)(inited + 136) = 0x800000010069E8C0;
  *(NSNumber *)(inited + 144) = Bool._bridgeToObjectiveC()();
  v16 = sub_10043574C(inited);
  v17 = String._bridgeToObjectiveC()();
  v18 = sub_1002F7258(v16);
  swift_bridgeObjectRelease(v16);
  sub_10001E724(0, (unint64_t *)&qword_10081E630, NSObject_ptr);
  v19 = Dictionary._bridgeToObjectiveC()().super.isa;
  v20 = swift_bridgeObjectRelease(v18);
  FIActivityAnalyticsSubmissionWithPayload(v17, v19, v20);

}

void sub_10041548C(uint64_t a1)
{
  id v2;
  NSString v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  char v8;
  Class isa;
  unint64_t v10;
  NSString v11;
  uint64_t v12;
  Class v13;
  __n128 v14;
  _BYTE v15[160];

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "BOOLForKey:", v3);

  v4 = sub_100047110(&qword_100830BC0);
  inited = swift_initStackObject(v4, v15);
  *(_OWORD *)(inited + 16) = xmmword_100624EB0;
  *(_QWORD *)(inited + 32) = 0x7463617265746E69;
  *(_QWORD *)(inited + 40) = 0xEF657079546E6F69;
  *(NSNumber *)(inited + 48) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 56) = 0x6570795464726163;
  *(_QWORD *)(inited + 64) = 0xE800000000000000;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type);
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 8);
  v8 = *(_BYTE *)(a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_type + 16);
  sub_1000EB3F4(v6, v7, v8);
  isa = sub_10058CACC(v6, v7, v8).super.super.isa;
  sub_1000EB41C(v6, v7, v8);
  *(_QWORD *)(inited + 72) = isa;
  *(_QWORD *)(inited + 80) = 0x657A695364726163;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(NSNumber *)(inited + 96) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 104) = 0x65646E4964726163;
  *(_QWORD *)(inited + 112) = 0xE900000000000078;
  *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 128) = 0xD000000000000016;
  *(_QWORD *)(inited + 136) = 0x800000010069E8C0;
  *(NSNumber *)(inited + 144) = Bool._bridgeToObjectiveC()();
  v10 = sub_10043574C(inited);
  v11 = String._bridgeToObjectiveC()();
  v12 = sub_1002F7258(v10);
  swift_bridgeObjectRelease(v10);
  sub_10001E724(0, (unint64_t *)&qword_10081E630, NSObject_ptr);
  v13 = Dictionary._bridgeToObjectiveC()().super.isa;
  v14 = swift_bridgeObjectRelease(v12);
  FIActivityAnalyticsSubmissionWithPayload(v11, v13, v14);

}

uint64_t sub_100415710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a3;
  v35 = a2;
  v4 = sub_100047110((uint64_t *)&unk_10082E690);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v30 - v8;
  if ((unint64_t)a1 >> 62)
    goto LABEL_21;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v10)
  {
    v11 = 0;
    v12 = a1 & 0xC000000000000001;
    v31 = a1 & 0xC000000000000001;
    v32 = v7;
    v34 = a1;
    while (1)
    {
      v13 = v12
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a1)
          : *(id *)(a1 + 8 * v11 + 32);
      v14 = v13;
      v15 = objc_msgSend(v13, "UUID");
      if (v15)
      {
        v16 = v15;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        v17 = type metadata accessor for UUID(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 0, 1, v17);
      }
      else
      {
        v17 = type metadata accessor for UUID(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
      }
      sub_100045AD4((uint64_t)v7, (uint64_t)v9, (uint64_t *)&unk_10082E690);
      type metadata accessor for UUID(0);
      v18 = *(_QWORD *)(v17 - 8);
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17);
      if ((_DWORD)v19 == 1)
      {
        sub_10001BE90((uint64_t)v9, (uint64_t *)&unk_10082E690);

        a1 = v34;
      }
      else
      {
        v20 = v10;
        v21 = v34;
        v22 = UUID.uuidString.getter(v19);
        v24 = v23;
        (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v17);
        if (v22 == v35 && v24 == v33)
        {
          v27 = v33;

          swift_bridgeObjectRelease(v27);
          return v11;
        }
        v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v35, v33, 0);

        swift_bridgeObjectRelease(v24);
        a1 = v21;
        v10 = v20;
        v12 = v31;
        v7 = v32;
        if ((v25 & 1) != 0)
          return v11;
      }
      v26 = v11 + 1;
      if (__OFADD__(v11, 1))
        break;
      ++v11;
      if (v26 == v10)
        return 0;
    }
    __break(1u);
LABEL_21:
    if (a1 < 0)
      v29 = a1;
    else
      v29 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v10 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(a1);
  }
  return 0;
}

uint64_t sub_1004159A8(char *__src, char *a2, unint64_t a3, char *__dst, char *a5)
{
  char *v6;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char v48;
  char v49;
  _BOOL4 v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  char *v60;
  __int128 v61;
  __int128 v62;
  void *v63;
  void *v64;
  char *v66;
  unint64_t v67;
  __int128 v68;
  __int128 v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  unint64_t v81;
  void *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  id v97;
  void *v98;
  uint64_t v99;
  unint64_t v100;
  void *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  char v105;
  char v106;
  _BOOL4 v107;
  uint64_t v108;
  uint64_t v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  unint64_t v114;
  char *v115;
  __int128 v116;
  __int128 v117;
  void *v118;
  void *v119;
  uint64_t result;
  id v121;
  id v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD v128[3];
  uint64_t v129;
  uint64_t v130;
  _QWORD v131[3];
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;

  v6 = __dst;
  v9 = __src;
  v10 = a2 - __src;
  v11 = (a2 - __src) / 40;
  v12 = a3 - (_QWORD)a2;
  v13 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v136 = __src;
  v135 = __dst;
  if (v11 < v13)
  {
    if (v10 < -39)
      goto LABEL_126;
    if (__dst != __src || &__src[40 * v11] <= __dst)
      memmove(__dst, __src, 40 * v11);
    v14 = (unint64_t)&v6[40 * v11];
    v134 = (char *)v14;
    if ((unint64_t)a2 < a3 && v10 >= 40)
    {
      v121 = *(id *)&a5[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager];
      v123 = &v6[40 * v11];
      while (1)
      {
        sub_1000252E0((uint64_t)a2, (uint64_t)v131);
        sub_1000252E0((uint64_t)v6, (uint64_t)v128);
        v15 = v132;
        v16 = v133;
        sub_100016804(v131, v132);
        v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
        a5 = (char *)v17;
        if (v19 == 2)
          break;
        v20 = v18;
        if (v19 == 1)
        {
          v22 = objc_msgSend(v121, "allFriends");
          if (v22)
          {
            v23 = v22;
            v24 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
            v25 = sub_100364684();
            v26 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v23, v24, v25);

          }
          else
          {
            v26 = &_swiftEmptySetSingleton;
            if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
              && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
            {
              sub_1002305A8((uint64_t)_swiftEmptyArrayStorage);
              v26 = v63;
            }
          }
          v27 = (uint64_t)sub_100295A4C((uint64_t)v26);
          swift_bridgeObjectRelease(v26);
          swift_bridgeObjectRetain(v27);
          if (v27 < 0 || (v28 = (_QWORD *)v27, (v27 & 0x4000000000000000) != 0))
          {
            v28 = sub_1002965FC(v27);
            swift_release(v27);
          }
          v127 = v28;
          sub_100404DDC((uint64_t *)&v127);
          if (v126)
            goto LABEL_125;
          swift_release(v27);
          v29 = (uint64_t)v127;
          swift_bridgeObjectRetain(v20);
          v30 = sub_100415710(v29, (uint64_t)a5, v20);
          v32 = v31;
          v126 = 0;
          sub_1000EB41C((uint64_t)a5, v20, 1);
          swift_release(v29);
          sub_1000EB41C((uint64_t)a5, v20, 1);
          if ((v32 & 1) != 0)
            v21 = 0;
          else
            v21 = v30;
          v14 = (unint64_t)v123;
        }
        else
        {
          if (!v19)
            break;
          sub_1000EB41C(v17, v18, v19);
          v21 = -1;
        }
LABEL_24:
        v33 = v129;
        v34 = v130;
        sub_100016804(v128, v129);
        v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
        a5 = (char *)v35;
        if (v37 == 2)
          goto LABEL_27;
        v38 = v36;
        if (v37 == 1)
        {
          v40 = objc_msgSend(v121, "allFriends");
          if (v40)
          {
            v41 = v40;
            v42 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
            v43 = sub_100364684();
            v44 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v41, v42, v43);

          }
          else
          {
            v44 = &_swiftEmptySetSingleton;
            if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
              && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
            {
              sub_1002305A8((uint64_t)_swiftEmptyArrayStorage);
              v44 = v64;
            }
          }
          v45 = (uint64_t)sub_100295A4C((uint64_t)v44);
          swift_bridgeObjectRelease(v44);
          swift_bridgeObjectRetain(v45);
          if (v45 < 0 || (v46 = (_QWORD *)v45, (v45 & 0x4000000000000000) != 0))
          {
            v46 = sub_1002965FC(v45);
            swift_release(v45);
          }
          v127 = v46;
          sub_100404DDC((uint64_t *)&v127);
          if (v126)
            goto LABEL_125;
          swift_release(v45);
          v47 = (uint64_t)v127;
          swift_bridgeObjectRetain(v38);
          v39 = sub_100415710(v47, (uint64_t)a5, v38);
          v49 = v48;
          v126 = 0;
          sub_1000EB41C((uint64_t)a5, v38, 1);
          swift_release(v47);
          sub_1000EB41C((uint64_t)a5, v38, 1);
          if ((v49 & 1) != 0)
          {
            if (!v21)
            {
              v14 = (unint64_t)v123;
LABEL_44:
              v51 = v132;
              v52 = v133;
              sub_100016804(v131, v132);
              v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 24))(v51, v52) & 1;
              v54 = v129;
              v55 = v130;
              sub_100016804(v128, v129);
              v50 = ((*(unint64_t (**)(uint64_t, uint64_t))(v55 + 24))(v54, v55) & 1) < v53;
              goto LABEL_45;
            }
            v39 = 0;
            v14 = (unint64_t)v123;
          }
          else
          {
            v14 = (unint64_t)v123;
            if (v21 == v39)
              goto LABEL_44;
          }
        }
        else
        {
          if (!v37)
          {
LABEL_27:
            v39 = v35;
            if (v21 == v35)
              goto LABEL_44;
            goto LABEL_42;
          }
          sub_1000EB41C(v35, v36, v37);
          if (v21 == -1)
            goto LABEL_44;
          v39 = -1;
        }
LABEL_42:
        v50 = v21 < v39;
LABEL_45:
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v128);
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v131);
        v56 = v136;
        if (v50)
        {
          v57 = a2 + 40;
          if (v136 >= a2 && v136 < v57 && v136 == a2)
          {
            v56 = a2;
          }
          else
          {
            v58 = *(_OWORD *)a2;
            v59 = *((_OWORD *)a2 + 1);
            *((_QWORD *)v136 + 4) = *((_QWORD *)a2 + 4);
            *v56 = v58;
            v56[1] = v59;
          }
        }
        else
        {
          v60 = v135 + 40;
          if (v136 != v135 || v136 >= v60)
          {
            v61 = *(_OWORD *)v135;
            v62 = *((_OWORD *)v135 + 1);
            *((_QWORD *)v136 + 4) = *((_QWORD *)v135 + 4);
            *v56 = v61;
            v56[1] = v62;
          }
          v135 = v60;
          v57 = a2;
        }
        v136 = (char *)v56 + 40;
        v6 = v135;
        if ((unint64_t)v135 < v14)
        {
          a2 = v57;
          if ((unint64_t)v57 < a3)
            continue;
        }
        goto LABEL_124;
      }
      v21 = v17;
      goto LABEL_24;
    }
LABEL_124:
    sub_100147248((void **)&v136, (const void **)&v135, &v134);
    return 1;
  }
  if (v12 < -39)
    goto LABEL_126;
  if (__dst != a2 || &a2[40 * v13] <= __dst)
  {
    memmove(__dst, a2, 40 * v13);
    v9 = __src;
  }
  v66 = &v6[40 * v13];
  v134 = v66;
  v136 = a2;
  if (v9 >= a2 || v12 < 40)
    goto LABEL_124;
  v122 = *(id *)&a5[OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager];
  v67 = a3 - 40;
  v124 = v9;
  v125 = v6;
  while (1)
  {
    sub_1000252E0((uint64_t)(v66 - 40), (uint64_t)v131);
    v70 = a2 - 40;
    sub_1000252E0((uint64_t)(a2 - 40), (uint64_t)v128);
    v71 = v132;
    v72 = v133;
    sub_100016804(v131, v132);
    v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 16))(v71, v72);
    a5 = (char *)v73;
    if (v75 == 2)
    {
LABEL_77:
      v77 = v73;
      goto LABEL_88;
    }
    v76 = v74;
    if (v75 == 1)
      break;
    if (!v75)
      goto LABEL_77;
    sub_1000EB41C(v73, v74, v75);
    v77 = -1;
LABEL_88:
    v89 = v129;
    v90 = v130;
    sub_100016804(v128, v129);
    v91 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 16))(v89, v90);
    a5 = (char *)v91;
    if (v93 == 2)
      goto LABEL_91;
    v94 = v92;
    if (v93 != 1)
    {
      if (v93)
      {
        sub_1000EB41C(v91, v92, v93);
        if (v77 == -1)
        {
          v96 = (unint64_t)v125;
          goto LABEL_107;
        }
        v95 = -1;
        v96 = (unint64_t)v125;
        goto LABEL_105;
      }
LABEL_91:
      v95 = v91;
      goto LABEL_92;
    }
    v97 = objc_msgSend(v122, "allFriends");
    if (v97)
    {
      v98 = v97;
      v99 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
      v100 = sub_100364684();
      v101 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v98, v99, v100);

    }
    else
    {
      v101 = &_swiftEmptySetSingleton;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
        && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      {
        sub_1002305A8((uint64_t)_swiftEmptyArrayStorage);
        v101 = v119;
      }
    }
    v102 = (uint64_t)sub_100295A4C((uint64_t)v101);
    swift_bridgeObjectRelease(v101);
    swift_bridgeObjectRetain(v102);
    if (v102 < 0 || (v103 = (_QWORD *)v102, (v102 & 0x4000000000000000) != 0))
    {
      v103 = sub_1002965FC(v102);
      swift_release(v102);
    }
    v127 = v103;
    sub_100404DDC((uint64_t *)&v127);
    if (v126)
      goto LABEL_125;
    swift_release(v102);
    v104 = (uint64_t)v127;
    swift_bridgeObjectRetain(v94);
    v95 = sub_100415710(v104, (uint64_t)a5, v94);
    v106 = v105;
    v126 = 0;
    sub_1000EB41C((uint64_t)a5, v94, 1);
    swift_release(v104);
    sub_1000EB41C((uint64_t)a5, v94, 1);
    if ((v106 & 1) != 0)
    {
      v96 = (unint64_t)v125;
      if (!v77)
        goto LABEL_107;
      v95 = 0;
LABEL_105:
      v107 = v77 < v95;
      goto LABEL_108;
    }
LABEL_92:
    v96 = (unint64_t)v125;
    if (v77 != v95)
      goto LABEL_105;
LABEL_107:
    v108 = v132;
    v109 = v133;
    sub_100016804(v131, v132);
    v110 = (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 24))(v108, v109) & 1;
    v111 = v129;
    v112 = v130;
    sub_100016804(v128, v129);
    v107 = ((*(unint64_t (**)(uint64_t, uint64_t))(v112 + 24))(v111, v112) & 1) < v110;
LABEL_108:
    v113 = (char *)(v67 + 40);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v128);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v131);
    if (v107)
    {
      v114 = (unint64_t)v124;
      if (v113 != a2 || v67 >= (unint64_t)a2)
      {
        v68 = *(_OWORD *)v70;
        v69 = *(_OWORD *)(a2 - 24);
        *(_QWORD *)(v67 + 32) = *((_QWORD *)a2 - 1);
        *(_OWORD *)v67 = v68;
        *(_OWORD *)(v67 + 16) = v69;
      }
      v136 -= 40;
      v66 = v134;
      if ((unint64_t)v134 <= v96)
        goto LABEL_124;
    }
    else
    {
      v115 = v134;
      v66 = v134 - 40;
      v134 -= 40;
      v114 = (unint64_t)v124;
      if (v113 < v115 || v67 >= (unint64_t)v115 || v113 != v115)
      {
        v116 = *(_OWORD *)v66;
        v117 = *(_OWORD *)(v115 - 24);
        *(_QWORD *)(v67 + 32) = *((_QWORD *)v115 - 1);
        *(_OWORD *)v67 = v116;
        *(_OWORD *)(v67 + 16) = v117;
      }
      v70 = a2;
      if ((unint64_t)v66 <= v96)
        goto LABEL_124;
    }
    v67 -= 40;
    a2 = v70;
    if ((unint64_t)v70 <= v114)
      goto LABEL_124;
  }
  v78 = objc_msgSend(v122, "allFriends");
  if (v78)
  {
    v79 = v78;
    v80 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
    v81 = sub_100364684();
    v82 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v79, v80, v81);

  }
  else
  {
    v82 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
      && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_1002305A8((uint64_t)_swiftEmptyArrayStorage);
      v82 = v118;
    }
  }
  v83 = (uint64_t)sub_100295A4C((uint64_t)v82);
  swift_bridgeObjectRelease(v82);
  swift_bridgeObjectRetain(v83);
  if (v83 < 0 || (v84 = (_QWORD *)v83, (v83 & 0x4000000000000000) != 0))
  {
    v84 = sub_1002965FC(v83);
    swift_release(v83);
  }
  v127 = v84;
  sub_100404DDC((uint64_t *)&v127);
  if (!v126)
  {
    swift_release(v83);
    v85 = (uint64_t)v127;
    swift_bridgeObjectRetain(v76);
    v86 = sub_100415710(v85, (uint64_t)a5, v76);
    v88 = v87;
    v126 = 0;
    sub_1000EB41C((uint64_t)a5, v76, 1);
    swift_release(v85);
    sub_1000EB41C((uint64_t)a5, v76, 1);
    if ((v88 & 1) != 0)
      v77 = 0;
    else
      v77 = v86;
    goto LABEL_88;
  }
LABEL_125:
  swift_release(v127);
  __break(1u);
LABEL_126:

  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_1004164F8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  uint64_t v87;
  id v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  _BOOL4 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  uint64_t v133;
  _QWORD v134[3];
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;

  v124 = a1;
  v9 = sub_100047110((uint64_t *)&unk_10082E690);
  v10 = __chkstk_darwin(v9);
  v132 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v129 = (char *)&v119 - v13;
  v14 = __chkstk_darwin(v12);
  v140 = (char *)&v119 - v15;
  __chkstk_darwin(v14);
  v130 = (uint64_t)&v119 - v16;
  v120 = a2;
  if (a3 == a2)
    return;
  v123 = *(id *)(a5 + OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager);
  v122 = a4;
LABEL_5:
  v121 = a3;
  v17 = a3;
LABEL_6:
  v18 = *a4 + 40 * v17;
  sub_1000252E0(v18, (uint64_t)&v137);
  sub_1000252E0(v18 - 40, (uint64_t)v134);
  v19 = v138;
  v20 = v139;
  sub_100016804(&v137, v138);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
  if (v23 == 2)
    goto LABEL_9;
  if (v23 != 1)
  {
    if (v23)
    {
      sub_1000EB41C(v21, v22, v23);
      v24 = -1;
      goto LABEL_56;
    }
LABEL_9:
    v24 = v21;
    goto LABEL_56;
  }
  v127 = v21;
  v128 = v22;
  v125 = v17;
  v25 = objc_msgSend(v123, "allFriends");
  v26 = (uint64_t)v140;
  if (v25)
  {
    v27 = v25;
    v28 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
    v29 = sub_100364684();
    v30 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v27, v28, v29);

  }
  else
  {
    v30 = (uint64_t)&_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      {
        sub_1002305A8((uint64_t)_swiftEmptyArrayStorage);
        v30 = v117;
      }
      else
      {
        v30 = (uint64_t)&_swiftEmptySetSingleton;
      }
    }
  }
  if ((v30 & 0xC000000000000001) != 0)
  {
    if (v30 < 0)
      v31 = v30;
    else
      v31 = v30 & 0xFFFFFFFFFFFFFF8;
    v32 = __CocoaSet.count.getter(v31);
    if (v32)
      goto LABEL_19;
  }
  else
  {
    v32 = *(_QWORD *)(v30 + 16);
    if (v32)
    {
LABEL_19:
      if (v32 <= 0)
      {
        v34 = (uint64_t)_swiftEmptyArrayStorage;
      }
      else
      {
        v33 = sub_100047110((uint64_t *)&unk_100828340);
        v34 = swift_allocObject(v33, 8 * v32 + 32, 7);
        v35 = j__malloc_size((const void *)v34);
        v36 = v35 - 32;
        if (v35 < 32)
          v36 = v35 - 25;
        *(_QWORD *)(v34 + 16) = v32;
        *(_QWORD *)(v34 + 24) = (2 * (v36 >> 3)) | 1;
      }
      swift_bridgeObjectRetain(v30);
      v37 = sub_1002976E4(&v133, (uint64_t **)(v34 + 32), v32, v30);
      sub_100133140(v133);
      if (v37 != (uint64_t *)v32)
        goto LABEL_124;
      swift_bridgeObjectRelease(v30);
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRelease(v30);
  v34 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_28:
  swift_bridgeObjectRetain(v34);
  if (v34 < 0 || (v38 = (_QWORD *)v34, (v34 & 0x4000000000000000) != 0))
  {
    v38 = sub_1002965FC(v34);
    swift_release(v34);
  }
  v133 = (uint64_t)v38;
  v39 = v126;
  sub_100404DDC(&v133);
  v126 = v39;
  if (v39)
    goto LABEL_127;
  swift_release(v34);
  v40 = v133;
  if (v133 < 0 || (v133 & 0x4000000000000000) != 0)
  {
    sub_1000EB3F4(v127, v128, 1);
    v59 = swift_retain(v40);
    v41 = _CocoaArrayWrapper.endIndex.getter(v59);
    swift_release(v40);
    if (!v41)
    {
LABEL_54:
      v61 = v127;
      v60 = v128;
      sub_1000EB41C(v127, v128, 1);
      swift_release(v40);
      sub_1000EB41C(v61, v60, 1);
      v24 = 0;
      goto LABEL_55;
    }
  }
  else
  {
    v41 = *(_QWORD *)(v133 + 16);
    swift_bridgeObjectRetain(v128);
    if (!v41)
      goto LABEL_54;
  }
  v24 = 0;
  v131 = v40 & 0xC000000000000001;
  while (1)
  {
    if (v131)
      v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v40);
    else
      v42 = *(id *)(v40 + 8 * v24 + 32);
    v43 = v42;
    v44 = objc_msgSend(v42, "UUID");
    if (v44)
    {
      v45 = v44;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v46 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v26, 0, 1, v46);
    }
    else
    {
      v46 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v26, 1, 1, v46);
    }
    v47 = v130;
    sub_100045AD4(v26, v130, (uint64_t *)&unk_10082E690);
    type metadata accessor for UUID(0);
    v48 = *(_QWORD *)(v46 - 8);
    v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v47, 1, v46);
    if ((_DWORD)v49 == 1)
    {
      sub_10001BE90(v47, (uint64_t *)&unk_10082E690);

      v26 = (uint64_t)v140;
      goto LABEL_46;
    }
    v50 = UUID.uuidString.getter(v49);
    v52 = v51;
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v46);
    if (v50 == v127 && v128 == v52)
      break;
    v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v52, v127, v128, 0);

    swift_bridgeObjectRelease(v52);
    v26 = (uint64_t)v140;
    if ((v53 & 1) != 0)
      goto LABEL_50;
LABEL_46:
    v54 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
      goto LABEL_125;
    }
    ++v24;
    if (v54 == v41)
    {
      v56 = v127;
      v55 = v128;
      sub_1000EB41C(v127, v128, 1);
      swift_release(v40);
      sub_1000EB41C(v56, v55, 1);
      v24 = 0;
      goto LABEL_51;
    }
  }

  swift_bridgeObjectRelease(v52);
LABEL_50:
  v58 = v127;
  v57 = v128;
  sub_1000EB41C(v127, v128, 1);
  swift_release(v40);
  sub_1000EB41C(v58, v57, 1);
LABEL_51:
  a4 = v122;
LABEL_55:
  v17 = v125;
LABEL_56:
  v62 = v135;
  v63 = v136;
  sub_100016804(v134, v135);
  v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 16))(v62, v63);
  if (v66 == 2)
  {
LABEL_59:
    v67 = v64;
    if (v24 == v64)
      goto LABEL_105;
    goto LABEL_108;
  }
  if (v66 != 1)
  {
    if (!v66)
      goto LABEL_59;
    sub_1000EB41C(v64, v65, v66);
    if (v24 == -1)
      goto LABEL_105;
    v67 = -1;
LABEL_108:
    v111 = v24 < v67;
    goto LABEL_109;
  }
  v127 = v64;
  v128 = v65;
  v125 = v17;
  v68 = objc_msgSend(v123, "allFriends");
  if (v68)
  {
    v69 = v68;
    v70 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
    v71 = sub_100364684();
    v72 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v69, v70, v71);

    v73 = (uint64_t)v132;
  }
  else
  {
    v72 = (uint64_t)&_swiftEmptySetSingleton;
    v73 = (uint64_t)v132;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      {
        sub_1002305A8((uint64_t)_swiftEmptyArrayStorage);
        v72 = v118;
      }
      else
      {
        v72 = (uint64_t)&_swiftEmptySetSingleton;
      }
    }
  }
  if ((v72 & 0xC000000000000001) == 0)
  {
    v75 = *(_QWORD *)(v72 + 16);
    if (v75)
      goto LABEL_71;
LABEL_76:
    swift_bridgeObjectRelease(v72);
    v77 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_80:
    swift_bridgeObjectRetain(v77);
    if (v77 < 0 || (v81 = (_QWORD *)v77, (v77 & 0x4000000000000000) != 0))
    {
      v81 = sub_1002965FC(v77);
      swift_release(v77);
    }
    v133 = (uint64_t)v81;
    v82 = v126;
    sub_100404DDC(&v133);
    v126 = v82;
    if (v82)
      goto LABEL_127;
    swift_release(v77);
    v83 = v133;
    if (v133 < 0 || (v133 & 0x4000000000000000) != 0)
    {
      sub_1000EB3F4(v127, v128, 1);
      v116 = swift_retain(v83);
      v84 = _CocoaArrayWrapper.endIndex.getter(v116);
      swift_release(v83);
      if (!v84)
      {
LABEL_100:
        v100 = v127;
        v101 = v128;
        sub_1000EB41C(v127, v128, 1);
        swift_release(v83);
        sub_1000EB41C(v100, v101, 1);
        if (!v24)
        {
          a4 = v122;
          v17 = v125;
          goto LABEL_105;
        }
        v67 = 0;
        a4 = v122;
        v17 = v125;
        goto LABEL_108;
      }
    }
    else
    {
      v84 = *(_QWORD *)(v133 + 16);
      swift_bridgeObjectRetain(v128);
      if (!v84)
        goto LABEL_100;
    }
    v67 = 0;
    v131 = v83 & 0xC000000000000001;
    while (1)
    {
      if (v131)
        v85 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v67, v83);
      else
        v85 = *(id *)(v83 + 8 * v67 + 32);
      v86 = v85;
      v87 = (uint64_t)v129;
      v88 = objc_msgSend(v85, "UUID");
      if (v88)
      {
        v89 = v88;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        v90 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v73, 0, 1, v90);
      }
      else
      {
        v90 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v73, 1, 1, v90);
      }
      sub_100045AD4(v73, v87, (uint64_t *)&unk_10082E690);
      type metadata accessor for UUID(0);
      v91 = *(_QWORD *)(v90 - 8);
      v92 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v87, 1, v90);
      if ((_DWORD)v92 == 1)
      {
        sub_10001BE90(v87, (uint64_t *)&unk_10082E690);

        v73 = (uint64_t)v132;
      }
      else
      {
        v93 = UUID.uuidString.getter(v92);
        v94 = v87;
        v95 = v93;
        v97 = v96;
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v94, v90);
        if (v95 == v127 && v128 == v97)
        {

          swift_bridgeObjectRelease(v97);
LABEL_104:
          v102 = v127;
          v103 = v128;
          sub_1000EB41C(v127, v128, 1);
          swift_release(v83);
          sub_1000EB41C(v102, v103, 1);
          a4 = v122;
          v17 = v125;
          if (v24 != v67)
            goto LABEL_108;
LABEL_105:
          v104 = v138;
          v105 = v139;
          sub_100016804(&v137, v138);
          v106 = v17;
          v107 = (*(uint64_t (**)(uint64_t, uint64_t))(v105 + 24))(v104, v105) & 1;
          v108 = v135;
          v109 = v136;
          sub_100016804(v134, v135);
          v110 = ((*(unint64_t (**)(uint64_t, uint64_t))(v109 + 24))(v108, v109) & 1) >= v107;
          v17 = v106;
          v111 = !v110;
LABEL_109:
          _s10FitnessApp24HistoryViewActionContextVwxx_0(v134);
          _s10FitnessApp24HistoryViewActionContextVwxx_0(&v137);
          if (v111)
          {
            v112 = *a4;
            if (!*a4)
              goto LABEL_126;
            v113 = v112 + 40 * v17;
            v114 = v112 + 40 * (v17 - 1);
            sub_10002411C((__int128 *)v113, (uint64_t)&v137);
            v115 = *(_OWORD *)(v114 + 16);
            *(_OWORD *)v113 = *(_OWORD *)v114;
            *(_OWORD *)(v113 + 16) = v115;
            *(_QWORD *)(v113 + 32) = *(_QWORD *)(v114 + 32);
            sub_10002411C(&v137, v114);
            if (--v17 == v124)
              goto LABEL_4;
            goto LABEL_6;
          }
LABEL_4:
          a3 = v121 + 1;
          if (v121 + 1 == v120)
            return;
          goto LABEL_5;
        }
        v98 = _stringCompareWithSmolCheck(_:_:expecting:)(v95, v97, v127, v128, 0);

        swift_bridgeObjectRelease(v97);
        v73 = (uint64_t)v132;
        if ((v98 & 1) != 0)
          goto LABEL_104;
      }
      v99 = v67 + 1;
      if (__OFADD__(v67, 1))
        goto LABEL_123;
      ++v67;
      if (v99 == v84)
        goto LABEL_100;
    }
  }
  if (v72 < 0)
    v74 = v72;
  else
    v74 = v72 & 0xFFFFFFFFFFFFFF8;
  v75 = __CocoaSet.count.getter(v74);
  if (!v75)
    goto LABEL_76;
LABEL_71:
  if (v75 <= 0)
  {
    v77 = (uint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    v76 = sub_100047110((uint64_t *)&unk_100828340);
    v77 = swift_allocObject(v76, 8 * v75 + 32, 7);
    v78 = j__malloc_size((const void *)v77);
    v79 = v78 - 32;
    if (v78 < 32)
      v79 = v78 - 25;
    *(_QWORD *)(v77 + 16) = v75;
    *(_QWORD *)(v77 + 24) = (2 * (v79 >> 3)) | 1;
  }
  swift_bridgeObjectRetain(v72);
  v80 = sub_1002976E4(&v133, (uint64_t **)(v77 + 32), v75, v72);
  sub_100133140(v133);
  if (v80 == (uint64_t *)v75)
  {
    swift_bridgeObjectRelease(v72);
    goto LABEL_80;
  }
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  swift_release(v133);
  __break(1u);
}

void sub_1004170C4(uint64_t *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  void *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  unint64_t v66;
  void *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  _BOOL4 v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char v87;
  uint64_t v88;
  id v89;
  void *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int64_t v98;
  uint64_t v99;
  uint64_t *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  unint64_t v106;
  id v107;
  void *v108;
  id v109;
  void *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  char v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  int64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  void *v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int64_t v149;
  uint64_t v150;
  uint64_t *v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  id v156;
  void *v157;
  uint64_t v158;
  id v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unsigned int v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  __int128 v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  id v201;
  void *v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  int64_t v210;
  uint64_t v211;
  uint64_t *v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  id v218;
  void *v219;
  id v220;
  void *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  id v247;
  void *v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  int64_t v256;
  uint64_t v257;
  uint64_t *v258;
  _QWORD *v259;
  uint64_t v260;
  uint64_t v261;
  char v262;
  char v263;
  _BOOL4 v264;
  uint64_t v265;
  uint64_t v266;
  unsigned int v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  __int128 v274;
  uint64_t v275;
  uint64_t v276;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v278;
  unint64_t v279;
  unint64_t v280;
  char *v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  char v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  BOOL v296;
  unint64_t v297;
  uint64_t *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t *v303;
  uint64_t v304;
  uint64_t v305;
  BOOL v306;
  uint64_t v307;
  char v308;
  uint64_t *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  BOOL v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  unint64_t v324;
  uint64_t v325;
  uint64_t *v326;
  uint64_t v327;
  unint64_t v328;
  uint64_t *v329;
  uint64_t v330;
  uint64_t v331;
  char *v332;
  unint64_t v333;
  char *v334;
  uint64_t v335;
  char *v336;
  unint64_t v337;
  unint64_t v338;
  void *v339;
  void *v340;
  uint64_t v341;
  char *v342;
  unint64_t v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  char *v347;
  unint64_t v348;
  char *v349;
  uint64_t v350;
  char *v351;
  unint64_t v352;
  _QWORD *v353;
  id v354;
  id v355;
  id v356;
  id v357;
  id v358;
  uint64_t v359;
  _QWORD *v360;
  Swift::Int v361;
  uint64_t v362;
  id v363;
  int v364;
  char *v365;
  uint64_t v366;
  char *v367;
  uint64_t v368;
  char *v369;
  uint64_t v370;
  char *v371;
  char *v372;
  char *v373;
  id v374;
  uint64_t *v375;
  uint64_t v376;
  uint64_t v377;
  char *v378;
  uint64_t v379;
  uint64_t v380;
  int64_t v381;
  uint64_t v382;
  uint64_t v383;
  _QWORD v384[3];
  uint64_t v385;
  uint64_t v386;
  __int128 v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;

  v5 = sub_100047110((uint64_t *)&unk_10082E690);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v359 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v382 = (uint64_t)&v359 - v10;
  v11 = __chkstk_darwin(v9);
  v369 = (char *)&v359 - v12;
  v13 = __chkstk_darwin(v11);
  v368 = (uint64_t)&v359 - v14;
  v15 = __chkstk_darwin(v13);
  v371 = (char *)&v359 - v16;
  __chkstk_darwin(v15);
  v370 = (uint64_t)&v359 - v17;
  v18 = a1[1];
  v372 = a2;
  v19 = _minimumMergeRunLength(_:)(v18);
  v20 = v18;
  v377 = v2;
  if (v19 >= v18)
  {
    if (v18 < 0)
    {
LABEL_382:
      __break(1u);
LABEL_383:
      __break(1u);
LABEL_384:
      __break(1u);
      goto LABEL_385;
    }
    v25 = v372;
    if (v18)
    {
      v26 = v372;
      v27 = v377;
      sub_1004164F8(0, v18, 1, a1, (uint64_t)v26);

      v377 = v27;
    }
    else
    {

    }
    goto LABEL_353;
  }
  if (v18 >= 0)
    v21 = v18;
  else
    v21 = v18 + 1;
  if (v18 < -1)
    goto LABEL_391;
  v361 = v19;
  if (v18 < 2)
  {
    v367 = (char *)&_swiftEmptyArrayStorage[4];
    if (v18 == 1)
    {
      v360 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    v280 = _swiftEmptyArrayStorage[2];
    v360 = _swiftEmptyArrayStorage;
    v373 = (char *)_swiftEmptyArrayStorage;
LABEL_337:
    if (v280 >= 2)
    {
      v341 = *a1;
      v342 = v373;
      v390 = *a1;
      while (1)
      {
        v343 = v280 - 2;
        if (v280 < 2)
          goto LABEL_374;
        if (!v341)
          goto LABEL_389;
        v373 = v342;
        v344 = *(_QWORD *)&v342[16 * v343 + 32];
        v345 = *(_QWORD *)&v342[16 * v280 + 24];
        v346 = (char *)(v341 + 40 * v344);
        v347 = (char *)(v341 + 40 * *(_QWORD *)&v342[16 * v280 + 16]);
        v348 = v341 + 40 * v345;
        v349 = v372;
        v350 = v377;
        sub_1004159A8(v346, v347, v348, v367, v349);
        v377 = v350;
        if (v350)
          goto LABEL_349;

        if (v345 < v344)
          goto LABEL_375;
        v342 = v373;
        if ((swift_isUniquelyReferenced_nonNull_native(v373) & 1) == 0)
          v342 = sub_100147754((uint64_t)v342);
        if (v343 >= *((_QWORD *)v342 + 2))
          goto LABEL_376;
        v351 = &v342[16 * v343 + 32];
        *(_QWORD *)v351 = v344;
        *((_QWORD *)v351 + 1) = v345;
        v352 = *((_QWORD *)v342 + 2);
        if (v280 > v352)
          goto LABEL_377;
        memmove(&v342[16 * v280 + 16], &v342[16 * v280 + 32], 16 * (v352 - v280));
        *((_QWORD *)v342 + 2) = v352 - 1;
        v280 = v352 - 1;
        v341 = v390;
        if (v352 <= 2)
          goto LABEL_351;
      }
    }
    v342 = v373;
LABEL_351:
    swift_bridgeObjectRelease(v342);
    v353 = v360;
    v360[2] = 0;
    v25 = v372;
LABEL_352:

    swift_bridgeObjectRelease(v353);
LABEL_353:

    return;
  }
  v22 = v21 >> 1;
  v23 = sub_100047110(&qword_1008200C0);
  v24 = static Array._allocateBufferUninitialized(minimumCapacity:)(v22, v23);
  v20 = v18;
  *(_QWORD *)(v24 + 16) = v22;
  v360 = (_QWORD *)v24;
  v367 = (char *)(v24 + 32);
LABEL_13:
  v28 = 0;
  v362 = OBJC_IVAR____TtC10FitnessApp24ActivityDashboardContext_friendListManager;
  v29 = (uint64_t *)&unk_10082E690;
  v373 = (char *)_swiftEmptyArrayStorage;
  v375 = a1;
  v378 = v8;
  while (2)
  {
    v30 = v28 + 1;
    v366 = v20;
    v376 = v28;
    if (v28 + 1 >= v20)
    {
      v41 = v372;
      goto LABEL_170;
    }
    v31 = *a1;
    v32 = v28 + 1;
    sub_1000252E0(*a1 + 40 * v30, (uint64_t)&v387);
    v365 = (char *)v31;
    sub_1000252E0(v31 + 40 * v28, (uint64_t)v384);
    v33 = v388;
    v34 = v389;
    sub_100016804(&v387, v388);
    v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
    v38 = v35;
    v363 = *(id *)&v372[v362];
    if (v37 == 2)
      goto LABEL_18;
    v39 = v36;
    if (v37 == 1)
    {
      v42 = objc_msgSend(v363, "allFriends");
      if (v42)
      {
        v43 = v42;
        v44 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
        v45 = sub_100364684();
        v46 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v43, v44, v45);

      }
      else
      {
        v46 = &_swiftEmptySetSingleton;
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
          {
            sub_1002305A8((uint64_t)_swiftEmptyArrayStorage);
            v46 = v339;
          }
          v8 = v378;
          v29 = (uint64_t *)&unk_10082E690;
        }
      }
      v47 = (uint64_t)sub_100295A4C((uint64_t)v46);
      swift_bridgeObjectRelease(v46);
      swift_bridgeObjectRetain(v47);
      if (v47 < 0 || (v48 = (_QWORD *)v47, (v47 & 0x4000000000000000) != 0))
      {
        v48 = sub_1002965FC(v47);
        swift_release(v47);
      }
      v383 = (uint64_t)v48;
      v49 = v377;
      sub_100404DDC(&v383);
      if (v49)
        goto LABEL_390;
      swift_release(v47);
      v50 = v383;
      swift_bridgeObjectRetain(v39);
      v51 = sub_100415710(v50, v38, v39);
      v53 = v52;
      v377 = 0;
      sub_1000EB41C(v38, v39, 1);
      swift_release(v50);
      sub_1000EB41C(v38, v39, 1);
      if ((v53 & 1) != 0)
        v40 = 0;
      else
        v40 = v51;
      a1 = v375;
    }
    else
    {
      if (!v37)
      {
LABEL_18:
        v40 = v35;
        goto LABEL_31;
      }
      sub_1000EB41C(v35, v36, v37);
      v40 = -1;
    }
LABEL_31:
    v54 = v385;
    v55 = v386;
    sub_100016804(v384, v385);
    v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 16))(v54, v55);
    v59 = v56;
    if (v58 == 2)
    {
LABEL_34:
      v61 = v56;
      goto LABEL_35;
    }
    v60 = v57;
    if (v58 == 1)
    {
      v63 = objc_msgSend(v363, "allFriends");
      if (v63)
      {
        v64 = v63;
        v65 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
        v66 = sub_100364684();
        v67 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v64, v65, v66);

      }
      else
      {
        v67 = &_swiftEmptySetSingleton;
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
          {
            sub_1002305A8((uint64_t)_swiftEmptyArrayStorage);
            v67 = v340;
          }
          v8 = v378;
          v29 = (uint64_t *)&unk_10082E690;
        }
      }
      v68 = (uint64_t)sub_100295A4C((uint64_t)v67);
      swift_bridgeObjectRelease(v67);
      swift_bridgeObjectRetain(v68);
      if (v68 < 0 || (v69 = (_QWORD *)v68, (v68 & 0x4000000000000000) != 0))
      {
        v69 = sub_1002965FC(v68);
        swift_release(v68);
      }
      v383 = (uint64_t)v69;
      v70 = v377;
      sub_100404DDC(&v383);
      if (v70)
        goto LABEL_390;
      swift_release(v68);
      v71 = v383;
      swift_bridgeObjectRetain(v60);
      v61 = sub_100415710(v71, v59, v60);
      v73 = v72;
      v377 = 0;
      sub_1000EB41C(v59, v60, 1);
      swift_release(v71);
      sub_1000EB41C(v59, v60, 1);
      if ((v73 & 1) == 0)
      {
        a1 = v375;
LABEL_35:
        v62 = v32;
        if (v40 == v61)
          goto LABEL_50;
LABEL_49:
        v74 = v40 < v61;
        goto LABEL_51;
      }
      a1 = v375;
      if (v40)
      {
        v62 = v32;
        v61 = 0;
        goto LABEL_49;
      }
    }
    else
    {
      if (!v58)
        goto LABEL_34;
      sub_1000EB41C(v56, v57, v58);
      if (v40 != -1)
      {
        v61 = -1;
        v62 = v32;
        goto LABEL_49;
      }
    }
LABEL_50:
    v75 = v388;
    v76 = v389;
    sub_100016804(&v387, v388);
    v77 = (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 24))(v75, v76) & 1;
    v78 = v385;
    v79 = v386;
    sub_100016804(v384, v385);
    v80 = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 24))(v78, v79);
    v62 = v32;
    v74 = (v80 & 1u) < v77;
LABEL_51:
    v364 = v74;
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v384);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v387);
    v81 = v376 + 2;
    if (v376 + 2 >= v366)
      goto LABEL_159;
    while (2)
    {
      v82 = v365;
      v379 = v81;
      sub_1000252E0((uint64_t)&v365[40 * v81], (uint64_t)&v387);
      sub_1000252E0((uint64_t)&v82[40 * v62], (uint64_t)v384);
      v83 = v388;
      v84 = v389;
      sub_100016804(&v387, v388);
      v85 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 16))(v83, v84);
      if (v87 == 2)
        goto LABEL_55;
      if (v87 != 1)
      {
        if (v87)
        {
          sub_1000EB41C(v85, (uint64_t)v86, v87);
          v88 = -1;
          goto LABEL_99;
        }
LABEL_55:
        v88 = v85;
        goto LABEL_99;
      }
      v380 = v85;
      v381 = (int64_t)v86;
      v89 = objc_msgSend(v363, "allFriends");
      if (v89)
      {
        v90 = v89;
        v91 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
        v92 = sub_100364684();
        v93 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v90, v91, v92);

        v94 = (uint64_t)_swiftEmptyArrayStorage;
      }
      else
      {
        v93 = (uint64_t)&_swiftEmptySetSingleton;
        v94 = (uint64_t)_swiftEmptyArrayStorage;
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
          && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
        {
          sub_1002305A8((uint64_t)_swiftEmptyArrayStorage);
          v93 = v181;
        }
      }
      if ((v93 & 0xC000000000000001) != 0)
      {
        if (v93 < 0)
          v95 = v93;
        else
          v95 = v93 & 0xFFFFFFFFFFFFFF8;
        v96 = __CocoaSet.count.getter(v95);
        if (!v96)
          goto LABEL_72;
      }
      else
      {
        v96 = *(_QWORD *)(v93 + 16);
        if (!v96)
          goto LABEL_72;
      }
      if (v96 > 0)
      {
        v97 = sub_100047110((uint64_t *)&unk_100828340);
        v94 = swift_allocObject(v97, 8 * v96 + 32, 7);
        v98 = j__malloc_size((const void *)v94);
        v99 = v98 - 32;
        if (v98 < 32)
          v99 = v98 - 25;
        *(_QWORD *)(v94 + 16) = v96;
        *(_QWORD *)(v94 + 24) = (2 * (v99 >> 3)) | 1;
      }
      swift_bridgeObjectRetain(v93);
      v100 = sub_1002976E4(&v383, (uint64_t **)(v94 + 32), v96, v93);
      sub_100133140(v383);
      if (v100 != (uint64_t *)v96)
        goto LABEL_379;
LABEL_72:
      swift_bridgeObjectRelease(v93);
      swift_bridgeObjectRetain(v94);
      if (v94 < 0 || (v101 = (_QWORD *)v94, (v94 & 0x4000000000000000) != 0))
      {
        v101 = sub_1002965FC(v94);
        swift_release(v94);
      }
      v383 = (uint64_t)v101;
      v102 = v377;
      sub_100404DDC(&v383);
      v377 = v102;
      if (v102)
        goto LABEL_390;
      swift_release(v94);
      v103 = v383;
      if (v383 < 0 || (v383 & 0x4000000000000000) != 0)
      {
        v131 = v381;
        sub_1000EB3F4(v380, v381, 1);
        v132 = swift_retain(v103);
        v104 = _CocoaArrayWrapper.endIndex.getter(v132);
        swift_release(v103);
        v105 = (char *)v131;
        if (!v104)
        {
LABEL_98:
          v133 = v380;
          sub_1000EB41C(v380, (uint64_t)v105, 1);
          swift_release(v103);
          sub_1000EB41C(v133, (uint64_t)v105, 1);
          v88 = 0;
          a1 = v375;
          goto LABEL_99;
        }
      }
      else
      {
        v104 = *(_QWORD *)(v383 + 16);
        v105 = (char *)v381;
        swift_bridgeObjectRetain(v381);
        if (!v104)
          goto LABEL_98;
      }
      v88 = 0;
      v106 = v103 & 0xC000000000000001;
      while (1)
      {
        v107 = v106
             ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v88, v103)
             : *(id *)(v103 + 8 * v88 + 32);
        v108 = v107;
        v109 = objc_msgSend(v107, "UUID");
        if (v109)
        {
          v110 = v109;
          v111 = v371;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          v112 = v111;
          v113 = type metadata accessor for UUID(0);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v112, 0, 1, v113);
        }
        else
        {
          v113 = type metadata accessor for UUID(0);
          v112 = v371;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v371, 1, 1, v113);
        }
        v114 = (uint64_t)v112;
        v115 = v370;
        sub_100045AD4(v114, v370, v29);
        type metadata accessor for UUID(0);
        v116 = v29;
        v117 = *(_QWORD *)(v113 - 8);
        v118 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v115, 1, v113);
        if ((_DWORD)v118 != 1)
          break;
        sub_10001BE90(v115, v116);

        v29 = v116;
LABEL_90:
        v126 = v88 + 1;
        if (__OFADD__(v88, 1))
          goto LABEL_355;
        ++v88;
        if (v126 == v104)
        {
          v128 = v380;
          v127 = (char *)v381;
          sub_1000EB41C(v380, v381, 1);
          swift_release(v103);
          sub_1000EB41C(v128, (uint64_t)v127, 1);
          v88 = 0;
          goto LABEL_95;
        }
      }
      v390 = v88;
      v119 = v103;
      v120 = v104;
      v121 = v106;
      v122 = UUID.uuidString.getter(v118);
      v124 = v123;
      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v115, v113);
      if (v122 != v380 || (char *)v381 != v124)
      {
        v125 = _stringCompareWithSmolCheck(_:_:expecting:)(v122, v124, v380, v381, 0);

        swift_bridgeObjectRelease(v124);
        v29 = (uint64_t *)&unk_10082E690;
        v106 = v121;
        v104 = v120;
        v103 = v119;
        v88 = v390;
        if ((v125 & 1) != 0)
          goto LABEL_94;
        goto LABEL_90;
      }

      swift_bridgeObjectRelease(v124);
      v29 = (uint64_t *)&unk_10082E690;
      v103 = v119;
      v88 = v390;
LABEL_94:
      v130 = v380;
      v129 = (char *)v381;
      sub_1000EB41C(v380, v381, 1);
      swift_release(v103);
      sub_1000EB41C(v130, (uint64_t)v129, 1);
LABEL_95:
      a1 = v375;
      v8 = v378;
LABEL_99:
      v134 = v385;
      v135 = v386;
      sub_100016804(v384, v385);
      v136 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v135 + 16))(v134, v135);
      v390 = v138;
      if (v137 == 2)
      {
LABEL_102:
        v139 = v136;
        if (v88 == v136)
          goto LABEL_146;
        goto LABEL_147;
      }
      if (v137 != 1)
      {
        if (v137)
        {
          sub_1000EB41C((uint64_t)v136, v390, v137);
          if (v88 == -1)
            goto LABEL_146;
          v139 = -1;
          goto LABEL_147;
        }
        goto LABEL_102;
      }
      v374 = v136;
      v140 = objc_msgSend(v363, "allFriends");
      if (v140)
      {
        v141 = v140;
        v142 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
        v143 = sub_100364684();
        v144 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v141, v142, v143);

        v145 = (uint64_t)_swiftEmptyArrayStorage;
      }
      else
      {
        v144 = (uint64_t)&_swiftEmptySetSingleton;
        v145 = (uint64_t)_swiftEmptyArrayStorage;
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
          && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
        {
          sub_1002305A8((uint64_t)_swiftEmptyArrayStorage);
          v144 = v182;
        }
      }
      if ((v144 & 0xC000000000000001) != 0)
      {
        if (v144 < 0)
          v146 = v144;
        else
          v146 = v144 & 0xFFFFFFFFFFFFFF8;
        v147 = __CocoaSet.count.getter(v146);
        if (!v147)
          goto LABEL_121;
      }
      else
      {
        v147 = *(_QWORD *)(v144 + 16);
        if (!v147)
          goto LABEL_121;
      }
      if (v147 > 0)
      {
        v148 = sub_100047110((uint64_t *)&unk_100828340);
        v145 = swift_allocObject(v148, 8 * v147 + 32, 7);
        v149 = j__malloc_size((const void *)v145);
        v150 = v149 - 32;
        if (v149 < 32)
          v150 = v149 - 25;
        *(_QWORD *)(v145 + 16) = v147;
        *(_QWORD *)(v145 + 24) = (2 * (v150 >> 3)) | 1;
      }
      swift_bridgeObjectRetain(v144);
      v151 = sub_1002976E4(&v383, (uint64_t **)(v145 + 32), v147, v144);
      sub_100133140(v383);
      if (v151 != (uint64_t *)v147)
        goto LABEL_380;
LABEL_121:
      swift_bridgeObjectRelease(v144);
      swift_bridgeObjectRetain(v145);
      if (v145 < 0 || (v152 = (_QWORD *)v145, (v145 & 0x4000000000000000) != 0))
      {
        v152 = sub_1002965FC(v145);
        swift_release(v145);
      }
      v383 = (uint64_t)v152;
      v153 = v377;
      sub_100404DDC(&v383);
      v377 = v153;
      if (v153)
        goto LABEL_390;
      swift_release(v145);
      v154 = v383;
      if ((v383 & 0x8000000000000000) == 0 && (v383 & 0x4000000000000000) == 0)
      {
        v155 = *(_QWORD *)(v383 + 16);
        swift_bridgeObjectRetain(v390);
        if (v155)
          goto LABEL_127;
LABEL_141:
        v170 = (uint64_t)v374;
        v171 = v390;
        sub_1000EB41C((uint64_t)v374, v390, 1);
        swift_release(v154);
        sub_1000EB41C(v170, v171, 1);
        if (!v88)
        {
          a1 = v375;
          goto LABEL_146;
        }
        v139 = 0;
        a1 = v375;
        goto LABEL_147;
      }
      sub_1000EB3F4((uint64_t)v374, v390, 1);
      v180 = swift_retain(v154);
      v155 = _CocoaArrayWrapper.endIndex.getter(v180);
      swift_release(v154);
      if (!v155)
        goto LABEL_141;
LABEL_127:
      v139 = 0;
      v380 = v155;
      v381 = v154 & 0xC000000000000001;
      while (2)
      {
        if (v381)
          v156 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v139, v154);
        else
          v156 = *(id *)(v154 + 8 * v139 + 32);
        v157 = v156;
        v158 = (uint64_t)v369;
        v159 = objc_msgSend(v156, "UUID");
        if (v159)
        {
          v160 = v159;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          v161 = type metadata accessor for UUID(0);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 56))(v158, 0, 1, v161);
        }
        else
        {
          v161 = type metadata accessor for UUID(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 56))(v158, 1, 1, v161);
        }
        v162 = v368;
        sub_100045AD4(v158, v368, v29);
        type metadata accessor for UUID(0);
        v163 = *(_QWORD *)(v161 - 8);
        v164 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v163 + 48))(v162, 1, v161);
        if ((_DWORD)v164 == 1)
        {
          sub_10001BE90(v162, v29);

          v8 = v378;
          goto LABEL_139;
        }
        v165 = (id)UUID.uuidString.getter(v164);
        v167 = v166;
        (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v162, v161);
        if (v165 != v374 || v390 != v167)
        {
          v168 = _stringCompareWithSmolCheck(_:_:expecting:)(v165, v167, v374, v390, 0);

          swift_bridgeObjectRelease(v167);
          v8 = v378;
          v29 = (uint64_t *)&unk_10082E690;
          if ((v168 & 1) != 0)
            goto LABEL_145;
LABEL_139:
          v169 = v139 + 1;
          if (__OFADD__(v139, 1))
            goto LABEL_356;
          ++v139;
          if (v169 == v380)
            goto LABEL_141;
          continue;
        }
        break;
      }

      swift_bridgeObjectRelease(v167);
      v8 = v378;
      v29 = (uint64_t *)&unk_10082E690;
LABEL_145:
      v172 = (uint64_t)v374;
      v173 = v390;
      sub_1000EB41C((uint64_t)v374, v390, 1);
      swift_release(v154);
      sub_1000EB41C(v172, v173, 1);
      a1 = v375;
      if (v88 == v139)
      {
LABEL_146:
        v174 = v388;
        v175 = v389;
        sub_100016804(&v387, v388);
        v176 = (*(uint64_t (**)(uint64_t, uint64_t))(v175 + 24))(v174, v175) & 1;
        v177 = v385;
        v178 = v386;
        sub_100016804(v384, v385);
        v179 = ((*(unint64_t (**)(uint64_t, uint64_t))(v178 + 24))(v177, v178) & 1) < v176;
        goto LABEL_148;
      }
LABEL_147:
      v179 = v88 < v139;
LABEL_148:
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v384);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(&v387);
      if (v364 == v179)
      {
        v62 = v379;
        v81 = v379 + 1;
        if (v379 + 1 == v366)
        {
          v81 = v366;
          goto LABEL_159;
        }
        continue;
      }
      break;
    }
    v81 = v379;
LABEL_159:
    v41 = v372;
    if (!v364)
    {
      v30 = v81;
      goto LABEL_170;
    }
    v30 = v81;
    if (v81 < v376)
    {
LABEL_385:
      __break(1u);
LABEL_386:
      v354 = v372;

      __break(1u);
LABEL_387:
      v355 = v372;

      __break(1u);
LABEL_388:
      v356 = v372;

      __break(1u);
LABEL_389:
      v357 = v372;

      __break(1u);
      goto LABEL_390;
    }
    if (v376 < v81)
    {
      v183 = 40 * v81 - 40;
      v184 = 40 * v376;
      v185 = (char *)v81;
      v186 = v81;
      v187 = v376;
      do
      {
        if (v187 != --v186)
        {
          if (!v365)
            goto LABEL_388;
          v188 = &v365[v184];
          v189 = (uint64_t)&v365[v183];
          sub_10002411C((__int128 *)&v365[v184], (uint64_t)&v387);
          v190 = *(_QWORD *)(v189 + 32);
          v191 = *(_OWORD *)(v189 + 16);
          *(_OWORD *)v188 = *(_OWORD *)v189;
          *((_OWORD *)v188 + 1) = v191;
          *((_QWORD *)v188 + 4) = v190;
          sub_10002411C(&v387, v189);
          v41 = v372;
        }
        ++v187;
        v183 -= 40;
        v184 += 40;
      }
      while (v187 < v186);
      v30 = (int64_t)v185;
      a1 = v375;
    }
LABEL_170:
    if (v30 >= v366)
      goto LABEL_276;
    if (__OFSUB__(v30, v376))
      goto LABEL_381;
    if (v30 - v376 >= v361)
      goto LABEL_276;
    if (__OFADD__(v376, v361))
      goto LABEL_383;
    v192 = (char *)v366;
    if (v376 + v361 < v366)
      v192 = (char *)(v376 + v361);
    if ((uint64_t)v192 < v376)
      goto LABEL_384;
    if ((char *)v30 == v192)
    {
LABEL_276:
      if (v30 < v376)
        goto LABEL_378;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v373);
      v366 = v30;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v373 = sub_100147150(0, *((_QWORD *)v373 + 2) + 1, 1, v373);
      v279 = *((_QWORD *)v373 + 2);
      v278 = *((_QWORD *)v373 + 3);
      v280 = v279 + 1;
      if (v279 >= v278 >> 1)
        v373 = sub_100147150((char *)(v278 > 1), v279 + 1, 1, v373);
      v281 = v373;
      *((_QWORD *)v373 + 2) = v280;
      v282 = (uint64_t)(v281 + 32);
      v283 = &v281[16 * v279 + 32];
      v284 = v366;
      *(_QWORD *)v283 = v376;
      *((_QWORD *)v283 + 1) = v284;
      if (!v279)
      {
        v280 = 1;
LABEL_325:
        v20 = a1[1];
        v28 = v366;
        if (v366 >= v20)
          goto LABEL_337;
        continue;
      }
      v390 = v282;
      while (1)
      {
        v285 = v280 - 1;
        if (v280 >= 4)
        {
          v290 = v282 + 16 * v280;
          v291 = *(_QWORD *)(v290 - 64);
          v292 = *(_QWORD *)(v290 - 56);
          v296 = __OFSUB__(v292, v291);
          v293 = v292 - v291;
          if (v296)
            goto LABEL_363;
          v295 = *(_QWORD *)(v290 - 48);
          v294 = *(_QWORD *)(v290 - 40);
          v296 = __OFSUB__(v294, v295);
          v288 = v294 - v295;
          v289 = v296;
          if (v296)
            goto LABEL_364;
          v297 = v280 - 2;
          v298 = (uint64_t *)(v282 + 16 * (v280 - 2));
          v300 = *v298;
          v299 = v298[1];
          v296 = __OFSUB__(v299, v300);
          v301 = v299 - v300;
          if (v296)
            goto LABEL_366;
          v296 = __OFADD__(v288, v301);
          v302 = v288 + v301;
          if (v296)
            goto LABEL_369;
          if (v302 >= v293)
          {
            v320 = (uint64_t *)(v282 + 16 * v285);
            v322 = *v320;
            v321 = v320[1];
            v296 = __OFSUB__(v321, v322);
            v323 = v321 - v322;
            if (v296)
              goto LABEL_373;
            v313 = v288 < v323;
            goto LABEL_314;
          }
        }
        else
        {
          if (v280 != 3)
          {
            v314 = *((_QWORD *)v373 + 4);
            v315 = *((_QWORD *)v373 + 5);
            v296 = __OFSUB__(v315, v314);
            v307 = v315 - v314;
            v308 = v296;
            goto LABEL_308;
          }
          v287 = *((_QWORD *)v373 + 4);
          v286 = *((_QWORD *)v373 + 5);
          v296 = __OFSUB__(v286, v287);
          v288 = v286 - v287;
          v289 = v296;
        }
        if ((v289 & 1) != 0)
          goto LABEL_365;
        v297 = v280 - 2;
        v303 = (uint64_t *)(v282 + 16 * (v280 - 2));
        v305 = *v303;
        v304 = v303[1];
        v306 = __OFSUB__(v304, v305);
        v307 = v304 - v305;
        v308 = v306;
        if (v306)
          goto LABEL_368;
        v309 = (uint64_t *)(v282 + 16 * v285);
        v311 = *v309;
        v310 = v309[1];
        v296 = __OFSUB__(v310, v311);
        v312 = v310 - v311;
        if (v296)
          goto LABEL_371;
        if (__OFADD__(v307, v312))
          goto LABEL_372;
        if (v307 + v312 >= v288)
        {
          v313 = v288 < v312;
LABEL_314:
          if (v313)
            v285 = v297;
          goto LABEL_316;
        }
LABEL_308:
        if ((v308 & 1) != 0)
          goto LABEL_367;
        v316 = (uint64_t *)(v282 + 16 * v285);
        v318 = *v316;
        v317 = v316[1];
        v296 = __OFSUB__(v317, v318);
        v319 = v317 - v318;
        if (v296)
          goto LABEL_370;
        if (v319 < v307)
          goto LABEL_325;
LABEL_316:
        v324 = v285 - 1;
        if (v285 - 1 >= v280)
          goto LABEL_357;
        v325 = *a1;
        if (!*a1)
          goto LABEL_387;
        v326 = (uint64_t *)(v282 + 16 * v324);
        v327 = *v326;
        v328 = v285;
        v329 = (uint64_t *)(v282 + 16 * v285);
        v330 = *v329;
        v331 = v329[1];
        v381 = v325 + 40 * *v326;
        v332 = (char *)(v325 + 40 * v330);
        v333 = v325 + 40 * v331;
        v334 = v372;
        v335 = v377;
        sub_1004159A8((char *)v381, v332, v333, v367, v334);
        v377 = v335;
        if (v335)
        {
LABEL_349:
          swift_bridgeObjectRelease(v373);
          v25 = v372;

          v353 = v360;
          v360[2] = 0;
          goto LABEL_352;
        }

        v336 = v373;
        if (v331 < v327)
          goto LABEL_358;
        if (v328 > *((_QWORD *)v373 + 2))
          goto LABEL_359;
        v337 = v328;
        *v326 = v327;
        *(_QWORD *)(v390 + 16 * v324 + 8) = v331;
        v338 = *((_QWORD *)v336 + 2);
        if (v337 >= v338)
          goto LABEL_360;
        v280 = v338 - 1;
        memmove(v329, v329 + 2, 16 * (v338 - 1 - v337));
        v282 = v390;
        *((_QWORD *)v336 + 2) = v338 - 1;
        a1 = v375;
        v8 = v378;
        v29 = (uint64_t *)&unk_10082E690;
        if (v338 <= 2)
          goto LABEL_325;
      }
    }
    break;
  }
  v374 = *(id *)&v41[v362];
  v365 = v192;
LABEL_180:
  v366 = v30;
  while (2)
  {
    v193 = *a1;
    v381 = v30;
    v194 = v193 + 40 * v30;
    sub_1000252E0(v194, (uint64_t)&v387);
    sub_1000252E0(v194 - 40, (uint64_t)v384);
    v195 = v388;
    v196 = v389;
    sub_100016804(&v387, v388);
    v197 = (*(uint64_t (**)(uint64_t, uint64_t))(v196 + 16))(v195, v196);
    if (v199 == 2)
      goto LABEL_184;
    if (v199 != 1)
    {
      if (v199)
      {
        sub_1000EB41C(v197, v198, v199);
        v200 = -1;
        goto LABEL_229;
      }
LABEL_184:
      v200 = v197;
      goto LABEL_229;
    }
    v379 = v197;
    v380 = v198;
    v201 = objc_msgSend(v374, "allFriends");
    if (v201)
    {
      v202 = v201;
      v203 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
      v204 = sub_100364684();
      v205 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v202, v203, v204);

      v206 = (uint64_t)_swiftEmptyArrayStorage;
    }
    else
    {
      v205 = (uint64_t)&_swiftEmptySetSingleton;
      v206 = (uint64_t)_swiftEmptyArrayStorage;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
        && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      {
        sub_1002305A8((uint64_t)_swiftEmptyArrayStorage);
        v205 = v275;
      }
    }
    if ((v205 & 0xC000000000000001) != 0)
    {
      if (v205 < 0)
        v207 = v205;
      else
        v207 = v205 & 0xFFFFFFFFFFFFFF8;
      v208 = __CocoaSet.count.getter(v207);
      if (!v208)
        goto LABEL_201;
LABEL_196:
      if (v208 > 0)
      {
        v209 = sub_100047110((uint64_t *)&unk_100828340);
        v206 = swift_allocObject(v209, 8 * v208 + 32, 7);
        v210 = j__malloc_size((const void *)v206);
        v211 = v210 - 32;
        if (v210 < 32)
          v211 = v210 - 25;
        *(_QWORD *)(v206 + 16) = v208;
        *(_QWORD *)(v206 + 24) = (2 * (v211 >> 3)) | 1;
      }
      swift_bridgeObjectRetain(v205);
      v212 = sub_1002976E4(&v383, (uint64_t **)(v206 + 32), v208, v205);
      sub_100133140(v383);
      if (v212 != (uint64_t *)v208)
        goto LABEL_361;
      goto LABEL_201;
    }
    v208 = *(_QWORD *)(v205 + 16);
    if (v208)
      goto LABEL_196;
LABEL_201:
    swift_bridgeObjectRelease(v205);
    swift_bridgeObjectRetain(v206);
    if (v206 < 0 || (v213 = (_QWORD *)v206, (v206 & 0x4000000000000000) != 0))
    {
      v213 = sub_1002965FC(v206);
      swift_release(v206);
    }
    v383 = (uint64_t)v213;
    v214 = v377;
    sub_100404DDC(&v383);
    v377 = v214;
    if (v214)
      goto LABEL_390;
    swift_release(v206);
    v215 = v383;
    if (v383 < 0 || (v383 & 0x4000000000000000) != 0)
    {
      v237 = v380;
      sub_1000EB3F4(v379, v380, 1);
      v238 = swift_retain(v215);
      v216 = _CocoaArrayWrapper.endIndex.getter(v238);
      swift_release(v215);
      v217 = v237;
      if (!v216)
      {
LABEL_226:
        v232 = v379;
        v233 = v379;
        v234 = v217;
        v231 = v217;
        goto LABEL_227;
      }
    }
    else
    {
      v216 = *(_QWORD *)(v383 + 16);
      v217 = v380;
      swift_bridgeObjectRetain(v380);
      if (!v216)
        goto LABEL_226;
    }
    v200 = 0;
    v390 = v215 & 0xC000000000000001;
    while (1)
    {
      if (v390)
        v218 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v200, v215);
      else
        v218 = *(id *)(v215 + 8 * v200 + 32);
      v219 = v218;
      v220 = objc_msgSend(v218, "UUID");
      if (v220)
      {
        v221 = v220;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        v222 = type metadata accessor for UUID(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v222 - 8) + 56))(v8, 0, 1, v222);
      }
      else
      {
        v222 = type metadata accessor for UUID(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v222 - 8) + 56))(v8, 1, 1, v222);
      }
      v223 = v382;
      sub_100045AD4((uint64_t)v8, v382, v29);
      type metadata accessor for UUID(0);
      v224 = *(_QWORD *)(v222 - 8);
      v225 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v224 + 48))(v223, 1, v222);
      if ((_DWORD)v225 == 1)
      {
        sub_10001BE90(v223, v29);

        goto LABEL_219;
      }
      v226 = UUID.uuidString.getter(v225);
      v228 = v227;
      (*(void (**)(uint64_t, uint64_t))(v224 + 8))(v223, v222);
      if (v226 == v379 && v380 == v228)
        break;
      v229 = _stringCompareWithSmolCheck(_:_:expecting:)(v226, v228, v379, v380, 0);

      swift_bridgeObjectRelease(v228);
      v8 = v378;
      v29 = (uint64_t *)&unk_10082E690;
      if ((v229 & 1) != 0)
        goto LABEL_223;
LABEL_219:
      v230 = v200 + 1;
      if (__OFADD__(v200, 1))
      {
        __break(1u);
LABEL_355:
        __break(1u);
LABEL_356:
        __break(1u);
LABEL_357:
        __break(1u);
LABEL_358:
        __break(1u);
LABEL_359:
        __break(1u);
LABEL_360:
        __break(1u);
LABEL_361:
        __break(1u);
        goto LABEL_362;
      }
      ++v200;
      if (v230 == v216)
      {
        v232 = v379;
        v231 = v380;
        v233 = v379;
        v234 = v380;
LABEL_227:
        sub_1000EB41C(v233, v234, 1);
        swift_release(v215);
        sub_1000EB41C(v232, v231, 1);
        v200 = 0;
        goto LABEL_228;
      }
    }

    swift_bridgeObjectRelease(v228);
    v8 = v378;
    v29 = (uint64_t *)&unk_10082E690;
LABEL_223:
    v236 = v379;
    v235 = v380;
    sub_1000EB41C(v379, v380, 1);
    swift_release(v215);
    sub_1000EB41C(v236, v235, 1);
LABEL_228:
    a1 = v375;
LABEL_229:
    v239 = v385;
    v240 = v386;
    sub_100016804(v384, v385);
    v241 = (*(uint64_t (**)(uint64_t, uint64_t))(v240 + 16))(v239, v240);
    v244 = v241;
    if (v243 == 2)
    {
LABEL_232:
      v246 = v241;
      goto LABEL_233;
    }
    v245 = v242;
    if (v243 != 1)
    {
      if (!v243)
        goto LABEL_232;
      sub_1000EB41C(v241, v242, v243);
      if (v200 != -1)
      {
        v246 = -1;
        goto LABEL_262;
      }
LABEL_264:
      v265 = v388;
      v266 = v389;
      sub_100016804(&v387, v388);
      v267 = (*(uint64_t (**)(uint64_t, uint64_t))(v266 + 24))(v265, v266) & 1;
      v268 = v385;
      v269 = v386;
      sub_100016804(v384, v385);
      v264 = ((*(unint64_t (**)(uint64_t, uint64_t))(v269 + 24))(v268, v269) & 1) < v267;
LABEL_265:
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v384);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(&v387);
      if (v264)
      {
        v270 = *a1;
        if (!*a1)
          goto LABEL_386;
        v271 = (char *)(v381 - 1);
        v272 = v270 + 40 * v381;
        v273 = v270 + 40 * (v381 - 1);
        sub_10002411C((__int128 *)v272, (uint64_t)&v387);
        v274 = *(_OWORD *)(v273 + 16);
        *(_OWORD *)v272 = *(_OWORD *)v273;
        *(_OWORD *)(v272 + 16) = v274;
        *(_QWORD *)(v272 + 32) = *(_QWORD *)(v273 + 32);
        sub_10002411C(&v387, v273);
        v30 = (int64_t)v271;
        if (v271 == (char *)v376)
          goto LABEL_179;
        continue;
      }
LABEL_179:
      v30 = v366 + 1;
      if ((char *)(v366 + 1) == v365)
      {
        v30 = (int64_t)v365;
        goto LABEL_276;
      }
      goto LABEL_180;
    }
    break;
  }
  v247 = objc_msgSend(v374, "allFriends");
  if (v247)
  {
    v248 = v247;
    v249 = sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
    v250 = sub_100364684();
    v251 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v248, v249, v250);

  }
  else
  {
    v251 = (uint64_t)&_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      {
        sub_1002305A8((uint64_t)_swiftEmptyArrayStorage);
        v251 = v276;
      }
      else
      {
        v251 = (uint64_t)&_swiftEmptySetSingleton;
      }
    }
  }
  if ((v251 & 0xC000000000000001) == 0)
  {
    v253 = *(_QWORD *)(v251 + 16);
    if (v253)
      goto LABEL_245;
    goto LABEL_250;
  }
  if (v251 < 0)
    v252 = v251;
  else
    v252 = v251 & 0xFFFFFFFFFFFFFF8;
  v253 = __CocoaSet.count.getter(v252);
  if (!v253)
  {
LABEL_250:
    swift_bridgeObjectRelease(v251);
    v255 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_255;
  }
LABEL_245:
  if (v253 <= 0)
  {
    v255 = (uint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    v254 = sub_100047110((uint64_t *)&unk_100828340);
    v255 = swift_allocObject(v254, 8 * v253 + 32, 7);
    v256 = j__malloc_size((const void *)v255);
    v257 = v256 - 32;
    if (v256 < 32)
      v257 = v256 - 25;
    *(_QWORD *)(v255 + 16) = v253;
    *(_QWORD *)(v255 + 24) = (2 * (v257 >> 3)) | 1;
  }
  swift_bridgeObjectRetain(v251);
  v258 = sub_1002976E4(&v383, (uint64_t **)(v255 + 32), v253, v251);
  sub_100133140(v383);
  if (v258 != (uint64_t *)v253)
  {
LABEL_362:
    __break(1u);
LABEL_363:
    __break(1u);
LABEL_364:
    __break(1u);
LABEL_365:
    __break(1u);
LABEL_366:
    __break(1u);
LABEL_367:
    __break(1u);
LABEL_368:
    __break(1u);
LABEL_369:
    __break(1u);
LABEL_370:
    __break(1u);
LABEL_371:
    __break(1u);
LABEL_372:
    __break(1u);
LABEL_373:
    __break(1u);
LABEL_374:
    __break(1u);
LABEL_375:
    __break(1u);
LABEL_376:
    __break(1u);
LABEL_377:
    __break(1u);
LABEL_378:
    __break(1u);
LABEL_379:
    __break(1u);
LABEL_380:
    __break(1u);
LABEL_381:
    __break(1u);
    goto LABEL_382;
  }
  swift_bridgeObjectRelease(v251);
  v29 = (uint64_t *)&unk_10082E690;
LABEL_255:
  swift_bridgeObjectRetain(v255);
  if (v255 < 0 || (v259 = (_QWORD *)v255, (v255 & 0x4000000000000000) != 0))
  {
    v259 = sub_1002965FC(v255);
    swift_release(v255);
  }
  v383 = (uint64_t)v259;
  v260 = v377;
  sub_100404DDC(&v383);
  if (!v260)
  {
    swift_release(v255);
    v261 = v383;
    swift_bridgeObjectRetain(v245);
    v246 = sub_100415710(v261, v244, v245);
    v263 = v262;
    v377 = 0;
    sub_1000EB41C(v244, v245, 1);
    swift_release(v261);
    sub_1000EB41C(v244, v245, 1);
    if ((v263 & 1) != 0)
    {
      if (!v200)
      {
        a1 = v375;
        goto LABEL_264;
      }
      v246 = 0;
      a1 = v375;
LABEL_262:
      v264 = v200 < v246;
      goto LABEL_265;
    }
    a1 = v375;
LABEL_233:
    if (v200 != v246)
      goto LABEL_262;
    goto LABEL_264;
  }
LABEL_390:
  swift_release(v383);
  __break(1u);
LABEL_391:
  v358 = v372;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_100419154(_QWORD **a1, void *a2)
{
  _QWORD *v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7[2];

  v3 = *a1;
  v4 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
    v3 = (_QWORD *)sub_100147768(v3);
  v5 = v3[2];
  v7[0] = (uint64_t)(v3 + 4);
  v7[1] = v5;
  v6 = v4;
  sub_1004170C4(v7, v6);

  *a1 = v3;
}

id sub_1004191E8(int a1)
{
  uint64_t v1;

  return sub_1003E0214(a1, *(id *)(v1 + 16));
}

uint64_t sub_1004191F0()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_100419218()
{
  uint64_t v0;
  int *View;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  int *Card;
  _QWORD *v27;

  View = (int *)type metadata accessor for FitnessPlusUpNextView(0);
  v2 = *((_QWORD *)View - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 32), v6, v7, v8, v9, v10, v11, v12);
  v13 = (_QWORD *)(v0 + v4);
  v14 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v0 + v4, v15);
  }
  else
  {
    swift_release(*v13);
  }
  v23 = (char *)v13 + View[5];
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)v23, v16, v17, v18, v19, v20, v21, v22);
  swift_release(*((_QWORD *)v23 + 1));
  swift_release(*(_QWORD *)((char *)v13 + View[6] + 8));
  v24 = (char *)v13 + View[7];
  v25 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  Card = (int *)type metadata accessor for FitnessPlusUpNextCard(0);
  sub_1000EB41C(*(_QWORD *)&v24[Card[5]], *(_QWORD *)&v24[Card[5] + 8], v24[Card[5] + 16]);
  sub_10027DC80(*(_QWORD *)&v24[Card[9]], *(_QWORD *)&v24[Card[9] + 8], v24[Card[9] + 16]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v24[Card[11]]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v24[Card[12]]);
  v27 = (_QWORD *)((char *)v13 + View[8]);
  if (v27[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v27);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10041937C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FitnessPlusUpNextView(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1008328BC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000DA0E4;
  return sub_1003EE000(a1, v5, v6, v7, v8);
}

uint64_t sub_100419410@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100419438(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_10041945C()
{
  uint64_t v0;
  int *View;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  int *Card;
  _QWORD *v27;

  View = (int *)type metadata accessor for FitnessPlusUpNextView(0);
  v2 = *((_QWORD *)View - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 16), v6, v7, v8, v9, v10, v11, v12);
  v13 = (_QWORD *)(v0 + v4);
  v14 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v0 + v4, v15);
  }
  else
  {
    swift_release(*v13);
  }
  v23 = (char *)v13 + View[5];
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)v23, v16, v17, v18, v19, v20, v21, v22);
  swift_release(*((_QWORD *)v23 + 1));
  swift_release(*(_QWORD *)((char *)v13 + View[6] + 8));
  v24 = (char *)v13 + View[7];
  v25 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  Card = (int *)type metadata accessor for FitnessPlusUpNextCard(0);
  sub_1000EB41C(*(_QWORD *)&v24[Card[5]], *(_QWORD *)&v24[Card[5] + 8], v24[Card[5] + 16]);
  sub_10027DC80(*(_QWORD *)&v24[Card[9]], *(_QWORD *)&v24[Card[9] + 8], v24[Card[9] + 16]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v24[Card[11]]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v24[Card[12]]);
  v27 = (_QWORD *)((char *)v13 + View[8]);
  if (v27[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v27);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1004195B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FitnessPlusUpNextView(0) - 8) + 80);
  return sub_1003F4844(*(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3), a1);
}

_QWORD *sub_1004195F8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[6];
  swift_release(a1[9]);
  swift_bridgeObjectRelease(v5);
  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  return a1;
}

uint64_t sub_100419660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FitnessPlusUpNextView(0) - 8) + 80);
  return sub_1003F4A20(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_1004196AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100832978;
  if (!qword_100832978)
  {
    v1 = sub_100007050(&qword_100832970);
    sub_100419730();
    sub_100028384(&qword_1008329B0, &qword_1008329B8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100832978);
  }
  return result;
}

unint64_t sub_100419730()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100832980;
  if (!qword_100832980)
  {
    v1 = sub_100007050(&qword_100832988);
    sub_100028384(&qword_100832990, &qword_100832998, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100028384(&qword_1008329A0, &qword_1008329A8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100832980);
  }
  return result;
}

uint64_t sub_1004197CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *View;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int *Card;
  _QWORD *v25;

  v1 = type metadata accessor for CatalogLockup(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  View = (int *)type metadata accessor for FitnessPlusUpNextView(0);
  v7 = *((_QWORD *)View - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v11 = (_QWORD *)(v0 + v9);
  v12 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v0 + v9, v12) == 1)
  {
    v13 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v0 + v9, v13);
  }
  else
  {
    swift_release(*v11);
  }
  v21 = (char *)v11 + View[5];
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)v21, v14, v15, v16, v17, v18, v19, v20);
  swift_release(*((_QWORD *)v21 + 1));
  swift_release(*(_QWORD *)((char *)v11 + View[6] + 8));
  v22 = (char *)v11 + View[7];
  v23 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
  Card = (int *)type metadata accessor for FitnessPlusUpNextCard(0);
  sub_1000EB41C(*(_QWORD *)&v22[Card[5]], *(_QWORD *)&v22[Card[5] + 8], v22[Card[5] + 16]);
  sub_10027DC80(*(_QWORD *)&v22[Card[9]], *(_QWORD *)&v22[Card[9] + 8], v22[Card[9] + 16]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v22[Card[11]]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v22[Card[12]]);
  v25 = (_QWORD *)((char *)v11 + View[8]);
  if (v25[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v25);
  return swift_deallocObject(v0, v9 + v10, v3 | v8 | 7);
}

uint64_t sub_100419960()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for CatalogLockup(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FitnessPlusUpNextView(0) - 8) + 80);
  return sub_1003F4CBC(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

double sub_1004199C8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003F10A4(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1004199D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003F1108(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

uint64_t sub_1004199E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
    swift_bridgeObjectRetain(a2);
  return swift_retain(a1);
}

uint64_t sub_100419A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result;

  result = swift_release(a1);
  if ((a9 & 1) == 0)
    return swift_bridgeObjectRelease(a2);
  return result;
}

unint64_t sub_100419A48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100832A38;
  if (!qword_100832A38)
  {
    v1 = sub_100007050(&qword_100832A30);
    sub_100028384(&qword_100832A40, &qword_100832A48, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100832A38);
  }
  return result;
}

uint64_t sub_100419AD0()
{
  return sub_100419ADC(sub_1003F54E4);
}

uint64_t sub_100419ADC(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FitnessPlusUpNextView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_100419B18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100419B40(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tintColor.setter(v1);
}

_QWORD *sub_100419B68(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[4];
  v3 = a1[6];
  v4 = a1[10];
  swift_bridgeObjectRetain(a1[8]);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t sub_100419BBC(uint64_t a1)
{
  sub_1000EB3F4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_100419BEC()
{
  return sub_100419F34(&qword_100832AC0);
}

uint64_t sub_100419BF8(uint64_t a1)
{
  return sub_100419C04(a1, &qword_100832AC0);
}

uint64_t sub_100419C04(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_100047110(a2) - 8) + 80);
  return sub_10040A758(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(_QWORD *)(v2 + 48), v2 + ((v5 + 56) & ~v5), a2);
}

uint64_t sub_100419C74()
{
  return sub_100419F34(&qword_100832AC8);
}

uint64_t sub_100419C80(uint64_t a1)
{
  return sub_100419CC8(a1, &qword_100832AC8, (uint64_t (*)(_QWORD))&type metadata accessor for PersonalizationInferenceResponse, &qword_100832AD8);
}

uint64_t sub_100419CA0()
{
  return sub_100419F34(&qword_100832AE0);
}

uint64_t sub_100419CAC(uint64_t a1)
{
  return sub_100419CC8(a1, &qword_100832AE0, (uint64_t (*)(_QWORD))&type metadata accessor for ServiceSubscription, &qword_100830BA0);
}

uint64_t sub_100419CC8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_100047110(a2) - 8) + 80);
  return sub_10040A9E0(a1, *(uint64_t **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(unsigned __int8 *)(v4 + 40), *(_QWORD *)(v4 + 48), v4 + ((v9 + 56) & ~v9), a3, a4, a2);
}

uint64_t sub_100419D48()
{
  return sub_100419F34(&qword_100832AE8);
}

uint64_t sub_100419D54(uint64_t a1)
{
  return sub_100419D68(a1, &qword_100832AE8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_10040A268);
}

uint64_t sub_100419D68(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_100047110(a2) - 8) + 80);
  return a3(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(unsigned __int8 *)(v3 + 40), *(_QWORD *)(v3 + 48), v3 + ((v5 + 56) & ~v5));
}

uint64_t sub_100419DCC()
{
  return sub_100419F34(&qword_100832B78);
}

uint64_t sub_100419DD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_100047110(&qword_100832B78) - 8) + 80);
  return sub_10040A4CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), v1 + ((v3 + 56) & ~v3));
}

uint64_t sub_100419E40(uint64_t result)
{
  uint64_t v1;
  uint64_t (*v2)(__int128 *);
  char v3;
  __int128 v4;
  char v5;

  v2 = *(uint64_t (**)(__int128 *))(v1 + 16);
  v3 = *(_BYTE *)(result + 16);
  v4 = *(_OWORD *)result;
  v5 = v3;
  if (v2)
    return v2(&v4);
  return result;
}

uint64_t sub_100419E80()
{
  return sub_100419F34(&qword_100832B98);
}

uint64_t sub_100419E8C(uint64_t a1)
{
  return sub_100419C04(a1, &qword_100832B98);
}

uint64_t sub_100419E9C()
{
  return sub_100419F34(&qword_100832BB8);
}

uint64_t sub_100419EA8(uint64_t a1)
{
  return sub_100419C04(a1, &qword_100832BB8);
}

uint64_t sub_100419EB8()
{
  return sub_100419F34(&qword_100832BD8);
}

uint64_t sub_100419EC4(uint64_t a1)
{
  return sub_100419C04(a1, &qword_100832BD8);
}

uint64_t sub_100419ED4()
{
  return sub_100419F34(&qword_100832BF8);
}

uint64_t sub_100419EE0(uint64_t a1)
{
  return sub_100419C04(a1, &qword_100832BF8);
}

uint64_t sub_100419EF0()
{
  return sub_100419F34(&qword_100832C18);
}

uint64_t sub_100419EFC(uint64_t a1)
{
  return sub_100419C04(a1, &qword_100832C18);
}

uint64_t sub_100419F0C()
{
  return sub_100419F34(&qword_100832C38);
}

uint64_t sub_100419F18(uint64_t a1)
{
  return sub_100419C04(a1, &qword_100832C38);
}

uint64_t sub_100419F28()
{
  return sub_100419F34(&qword_100832C58);
}

uint64_t sub_100419F34(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_100047110(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 56) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100419F90(uint64_t a1)
{
  return sub_100419D68(a1, &qword_100832C58, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_100409FF0);
}

uint64_t sub_100419FA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

_QWORD *sub_100419FEC(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t, __n128);
  __n128 v28;
  int *Card;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = a3[6];
    v16 = (_QWORD *)((char *)a1 + v14);
    v17 = (_QWORD *)((char *)a2 + v14);
    v18 = *v17;
    v19 = v17[1];
    *v16 = *v17;
    v16[1] = v19;
    v20 = (char *)a1 + v15;
    v21 = (char *)a2 + v15;
    *v20 = *v21;
    v22 = *((_QWORD *)v21 + 1);
    *((_QWORD *)v20 + 1) = v22;
    v23 = a3[7];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = type metadata accessor for UUID(0);
    v27 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v26 - 8) + 16);
    swift_bridgeObjectRetain(v18);
    swift_retain(v19);
    v28 = swift_retain(v22);
    v27(v24, v25, v26, v28);
    Card = (int *)type metadata accessor for FitnessPlusUpNextCard(0);
    v30 = Card[5];
    v31 = &v24[v30];
    v32 = &v25[v30];
    v33 = *(_QWORD *)v32;
    v34 = *((_QWORD *)v32 + 1);
    LOBYTE(v26) = v32[16];
    sub_1000EB3F4(*(_QWORD *)v32, v34, v26);
    *(_QWORD *)v31 = v33;
    *((_QWORD *)v31 + 1) = v34;
    v31[16] = v26;
    v24[Card[6]] = v25[Card[6]];
    v24[Card[7]] = v25[Card[7]];
    v24[Card[8]] = v25[Card[8]];
    v35 = Card[9];
    v36 = &v24[v35];
    v37 = &v25[v35];
    v38 = *(_QWORD *)v37;
    v39 = *((_QWORD *)v37 + 1);
    LOBYTE(v26) = v37[16];
    sub_1001B73B0(*(_QWORD *)v37, v39, v26);
    *(_QWORD *)v36 = v38;
    *((_QWORD *)v36 + 1) = v39;
    v36[16] = v26;
    v24[Card[10]] = v25[Card[10]];
    v40 = Card[11];
    v41 = *(_OWORD *)&v25[v40 + 24];
    *(_OWORD *)&v24[v40 + 24] = v41;
    (**(void (***)(void))(v41 - 8))();
    v42 = Card[12];
    v43 = *(_OWORD *)&v25[v42 + 24];
    *(_OWORD *)&v24[v42 + 24] = v43;
    (**(void (***)(void))(v43 - 8))();
    v44 = a3[8];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    v47 = *(_QWORD *)((char *)a2 + v44 + 24);
    if (v47)
    {
      v48 = *((_QWORD *)v46 + 4);
      *((_QWORD *)v45 + 3) = v47;
      *((_QWORD *)v45 + 4) = v48;
      (**(void (***)(void))(v47 - 8))();
    }
    else
    {
      v49 = *((_OWORD *)v46 + 1);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v49;
      *((_QWORD *)v45 + 4) = *((_QWORD *)v46 + 4);
    }
    v50 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v50) = *((_BYTE *)a2 + v50);
  }
  return a1;
}

_QWORD *sub_10041A270(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *Card;
  _QWORD *result;

  v4 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v13 = (char *)a1 + a2[5];
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)v13, v6, v7, v8, v9, v10, v11, v12);
  swift_release(*((_QWORD *)v13 + 1));
  swift_release(*(_QWORD *)((char *)a1 + a2[6] + 8));
  v14 = (char *)a1 + a2[7];
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  Card = (int *)type metadata accessor for FitnessPlusUpNextCard(0);
  sub_1000EB41C(*(_QWORD *)&v14[Card[5]], *(_QWORD *)&v14[Card[5] + 8], v14[Card[5] + 16]);
  sub_10027DC80(*(_QWORD *)&v14[Card[9]], *(_QWORD *)&v14[Card[9] + 8], v14[Card[9] + 16]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v14[Card[11]]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v14[Card[12]]);
  result = (_QWORD *)((char *)a1 + a2[8]);
  if (result[3])
    return (_QWORD *)_s10FitnessApp24HistoryViewActionContextVwxx_0(result);
  return result;
}

_QWORD *sub_10041A38C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t, __n128);
  __n128 v26;
  int *Card;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = a3[6];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = *v15;
  v17 = v15[1];
  *v14 = *v15;
  v14[1] = v17;
  v18 = (char *)a1 + v13;
  v19 = (char *)a2 + v13;
  *v18 = *v19;
  v20 = *((_QWORD *)v19 + 1);
  *((_QWORD *)v18 + 1) = v20;
  v21 = a3[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for UUID(0);
  v25 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v24 - 8) + 16);
  swift_bridgeObjectRetain(v16);
  swift_retain(v17);
  v26 = swift_retain(v20);
  v25(v22, v23, v24, v26);
  Card = (int *)type metadata accessor for FitnessPlusUpNextCard(0);
  v28 = Card[5];
  v29 = &v22[v28];
  v30 = &v23[v28];
  v31 = *(_QWORD *)v30;
  v32 = *((_QWORD *)v30 + 1);
  LOBYTE(v24) = v30[16];
  sub_1000EB3F4(*(_QWORD *)v30, v32, v24);
  *(_QWORD *)v29 = v31;
  *((_QWORD *)v29 + 1) = v32;
  v29[16] = v24;
  v22[Card[6]] = v23[Card[6]];
  v22[Card[7]] = v23[Card[7]];
  v22[Card[8]] = v23[Card[8]];
  v33 = Card[9];
  v34 = &v22[v33];
  v35 = &v23[v33];
  v36 = *(_QWORD *)v35;
  v37 = *((_QWORD *)v35 + 1);
  LOBYTE(v24) = v35[16];
  sub_1001B73B0(*(_QWORD *)v35, v37, v24);
  *(_QWORD *)v34 = v36;
  *((_QWORD *)v34 + 1) = v37;
  v34[16] = v24;
  v22[Card[10]] = v23[Card[10]];
  v38 = Card[11];
  v39 = *(_OWORD *)&v23[v38 + 24];
  *(_OWORD *)&v22[v38 + 24] = v39;
  (**(void (***)(void))(v39 - 8))();
  v40 = Card[12];
  v41 = *(_OWORD *)&v23[v40 + 24];
  *(_OWORD *)&v22[v40 + 24] = v41;
  (**(void (***)(void))(v41 - 8))();
  v42 = a3[8];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = *(_QWORD *)((char *)a2 + v42 + 24);
  if (v45)
  {
    v46 = *((_QWORD *)v44 + 4);
    *((_QWORD *)v43 + 3) = v45;
    *((_QWORD *)v43 + 4) = v46;
    (**(void (***)(void))(v45 - 8))();
  }
  else
  {
    v47 = *((_OWORD *)v44 + 1);
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *((_OWORD *)v43 + 1) = v47;
    *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
  }
  v48 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v48) = *((_BYTE *)a2 + v48);
  return a1;
}

_QWORD *sub_10041A5E4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  int *Card;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)((char *)a2 + v12);
  v16 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)a1 + v12);
  *(_QWORD *)((char *)a1 + v12) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16, v17, v18, v19, v20, v21, v22, v23);
  v24 = *((_QWORD *)v13 + 1);
  v25 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v13 + 1) = v25;
  swift_retain(v25);
  swift_release(v24);
  v26 = a3[6];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  *v27 = *v28;
  v29 = *((_QWORD *)v27 + 1);
  v30 = *((_QWORD *)v28 + 1);
  *((_QWORD *)v27 + 1) = v30;
  swift_retain(v30);
  swift_release(v29);
  v31 = a3[7];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  Card = (int *)type metadata accessor for FitnessPlusUpNextCard(0);
  v36 = Card[5];
  v37 = &v32[v36];
  v38 = &v33[v36];
  v39 = *(_QWORD *)v38;
  v40 = *((_QWORD *)v38 + 1);
  v41 = v38[16];
  sub_1000EB3F4(*(_QWORD *)v38, v40, v41);
  v42 = *(_QWORD *)v37;
  v43 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v37 = v39;
  *((_QWORD *)v37 + 1) = v40;
  v44 = v37[16];
  v37[16] = v41;
  sub_1000EB41C(v42, v43, v44);
  v32[Card[6]] = v33[Card[6]];
  v32[Card[7]] = v33[Card[7]];
  v32[Card[8]] = v33[Card[8]];
  v45 = Card[9];
  v46 = &v32[v45];
  v47 = &v33[v45];
  v48 = *(_QWORD *)v47;
  v49 = *((_QWORD *)v47 + 1);
  v50 = v47[16];
  sub_1001B73B0(*(_QWORD *)v47, v49, v50);
  v51 = *(_QWORD *)v46;
  v52 = *((_QWORD *)v46 + 1);
  *(_QWORD *)v46 = v48;
  *((_QWORD *)v46 + 1) = v49;
  v53 = v46[16];
  v46[16] = v50;
  sub_10027DC80(v51, v52, v53);
  v32[Card[10]] = v33[Card[10]];
  sub_1000F1A58(&v32[Card[11]], &v33[Card[11]]);
  sub_1000F1A58(&v32[Card[12]], &v33[Card[12]]);
  v54 = a3[8];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = *(_QWORD *)((char *)a2 + v54 + 24);
  if (!*(_QWORD *)((char *)a1 + v54 + 24))
  {
    if (v57)
    {
      *((_QWORD *)v55 + 3) = v57;
      *((_QWORD *)v55 + 4) = *((_QWORD *)v56 + 4);
      (**(void (***)(char *, char *))(v57 - 8))(v55, v56);
      goto LABEL_13;
    }
LABEL_12:
    v58 = *(_OWORD *)v56;
    v59 = *((_OWORD *)v56 + 1);
    *((_QWORD *)v55 + 4) = *((_QWORD *)v56 + 4);
    *(_OWORD *)v55 = v58;
    *((_OWORD *)v55 + 1) = v59;
    goto LABEL_13;
  }
  if (!v57)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v55);
    goto LABEL_12;
  }
  sub_1000F1A58(v55, v56);
LABEL_13:
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  return a1;
}

char *sub_10041A898(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int *Card;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  v9 = a3[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  Card = (int *)type metadata accessor for FitnessPlusUpNextCard(0);
  v14 = Card[5];
  v15 = &v10[v14];
  v16 = &v11[v14];
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  v10[Card[6]] = v11[Card[6]];
  v10[Card[7]] = v11[Card[7]];
  v10[Card[8]] = v11[Card[8]];
  v17 = Card[9];
  v18 = &v10[v17];
  v19 = &v11[v17];
  *(_OWORD *)v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  v10[Card[10]] = v11[Card[10]];
  v20 = Card[11];
  v21 = &v10[v20];
  v22 = &v11[v20];
  *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
  v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  v24 = Card[12];
  v25 = &v10[v24];
  v26 = &v11[v24];
  v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
  v28 = a3[8];
  v29 = a3[9];
  v30 = &a1[v28];
  v31 = &a2[v28];
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
  a1[v29] = a2[v29];
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

char *sub_10041AA54(char *a1, char *a2, int *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  int *Card;
  uint64_t v27;
  char *v28;
  char *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  uint64_t v52;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v11 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v11) == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      swift_storeEnumTagMultiPayload(a1, v11, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = a3[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(CHWorkoutDetailHeartRateTableViewCell **)&a1[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  swift_bridgeObjectRelease(v16, a2, a3, a4, a5, a6, a7, a8);
  v17 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_release(v17);
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *v19 = *v20;
  v21 = *((_QWORD *)v19 + 1);
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_release(v21);
  v22 = a3[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  Card = (int *)type metadata accessor for FitnessPlusUpNextCard(0);
  v27 = Card[5];
  v28 = &v23[v27];
  v29 = &v24[v27];
  v30 = v29[16];
  v31 = *(_QWORD *)v28;
  v32 = *((_QWORD *)v28 + 1);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  v33 = v28[16];
  v28[16] = v30;
  sub_1000EB41C(v31, v32, v33);
  v23[Card[6]] = v24[Card[6]];
  v23[Card[7]] = v24[Card[7]];
  v23[Card[8]] = v24[Card[8]];
  v34 = Card[9];
  v35 = &v23[v34];
  v36 = &v24[v34];
  v37 = v36[16];
  v38 = *(_QWORD *)v35;
  v39 = *((_QWORD *)v35 + 1);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  v40 = v35[16];
  v35[16] = v37;
  sub_10027DC80(v38, v39, v40);
  v23[Card[10]] = v24[Card[10]];
  v41 = Card[11];
  v42 = &v23[v41];
  v43 = &v24[v41];
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&v23[v41]);
  v44 = *((_OWORD *)v43 + 1);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *((_OWORD *)v42 + 1) = v44;
  *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
  v45 = Card[12];
  v46 = &v23[v45];
  v47 = &v24[v45];
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v46);
  *((_QWORD *)v46 + 4) = *((_QWORD *)v47 + 4);
  v48 = *((_OWORD *)v47 + 1);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *((_OWORD *)v46 + 1) = v48;
  v49 = a3[8];
  v50 = &a1[v49];
  if (*(_QWORD *)&a1[v49 + 24])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&a1[v49]);
  v51 = *(_OWORD *)&a2[v49 + 16];
  *(_OWORD *)v50 = *(_OWORD *)&a2[v49];
  *((_OWORD *)v50 + 1) = v51;
  *((_QWORD *)v50 + 4) = *(_QWORD *)&a2[v49 + 32];
  v52 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v52] = a2[v52];
  return a1;
}

uint64_t sub_10041ACA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10041ACB4);
}

uint64_t sub_10041ACB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t Card;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_100047110(&qword_10081F440);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    Card = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, Card);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    Card = type metadata accessor for FitnessPlusUpNextCard(0);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Card - 8) + 48);
    return v9(v10, a2, Card);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_10041AD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10041AD6C);
}

uint64_t sub_10041AD6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t Card;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_100047110(&qword_10081F440);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    Card = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    Card = type metadata accessor for FitnessPlusUpNextCard(0);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Card - 8) + 56);
  }
  return v11(v12, a2, a2, Card);
}

void sub_10041AE14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t Card;
  unint64_t v5;
  _QWORD v6[7];

  sub_1000F2378(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_10063BBB8;
    v6[2] = &unk_10063BBD0;
    Card = type metadata accessor for FitnessPlusUpNextCard(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(Card - 8) + 64;
      v6[4] = &unk_10063BBE8;
      v6[5] = &unk_10063BC00;
      v6[6] = &unk_10063BC00;
      swift_initStructMetadata(a1, 256, 7, v6, a1 + 16);
    }
  }
}

unint64_t sub_10041AEC4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  unint64_t v4;
  uint64_t v5;
  ValueMetadata *v6;
  uint64_t v7;
  void *v8;

  result = qword_100832D88;
  if (!qword_100832D88)
  {
    v1 = sub_100007050(&qword_100832D90);
    sub_1003F6CD4();
    v2 = sub_100007050(&qword_100832728);
    v5 = sub_100007050(&qword_100832720);
    v6 = (ValueMetadata *)&type metadata for Bool;
    v7 = sub_1003F6818(&qword_100832748, &qword_100832720, (void (*)(void))sub_1003F67FC);
    v8 = &protocol witness table for Bool;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v4 = sub_1003F6C90();
    v5 = v2;
    v6 = &type metadata for FitnessPlusCardDataProvider.State;
    v7 = OpaqueTypeConformance2;
    v8 = (void *)v4;
    swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100832D88);
  }
  return result;
}

uint64_t sub_10041AFD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_BYTE *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  swift_retain(*(_QWORD *)(a1 + 24));
  swift_retain(v2);
  sub_1000E439C(v3, v4, v5);
  swift_retain(v8);
  swift_bridgeObjectRetain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_10041B054(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_BYTE *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 136);
  v8 = *(_QWORD *)(a1 + 200);
  v9 = *(_QWORD *)(a1 + 208);
  v10 = *(_BYTE *)(a1 + 216);
  v12 = *(_QWORD *)(a1 + 224);
  swift_retain(*(_QWORD *)(a1 + 24));
  sub_1000E439C(v2, v3, v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_retain(v7);
  sub_1000E439C(v8, v9, v10);
  swift_bridgeObjectRetain(v12);
  return a1;
}

uint64_t sub_10041B104(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 72);
  sub_1000E439C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return a1;
}

uint64_t sub_10041B154()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10041B178(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  sub_1000E439C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain(v5);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t sub_10041B1E0(uint64_t a1)
{
  sub_100283DC8(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

uint64_t sub_10041B214(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for Text.Storage - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_10041B250(uint64_t a1)
{
  sub_1000E439C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_10041B280(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  id v8;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_BYTE *)(a1 + 136);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(id *)(a1 + 24);
  sub_10003AFE0(v2, v3);
  sub_1000E439C(v4, v5, v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t sub_10041B2F4(uint64_t a1)
{
  sub_10041B35C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120), *(_BYTE *)(a1 + 121));
  return a1;
}

double sub_10041B35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, char a16, char a17)
{
  double result;

  if ((a17 & 1) == 0)
    return sub_10041B3C8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16 & 1);
  sub_1000E439C(a1, a2, a3 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRetain(a4).n128_u64[0];
  return result;
}

double sub_10041B3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, char a16)
{
  uint64_t v18;
  double result;

  v18 = a11;
  sub_1000E439C(a4, a5, a6 & 1);
  swift_bridgeObjectRetain(a7);
  sub_1000E439C(a8, a9, a10 & 1);
  if ((a16 & 1) != 0)
  {
    swift_bridgeObjectRetain(a11);
    sub_1000E439C(a12, a13, a14 & 1);
    v18 = a15;
  }
  *(_QWORD *)&result = swift_bridgeObjectRetain(v18).n128_u64[0];
  return result;
}

uint64_t *sub_10041B4C4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v21);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = (void *)a2[4];
    v10 = a3[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[4] = (uint64_t)v9;
    v13 = type metadata accessor for MetricPlatterType(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_retain(v7);
    swift_retain(v8);
    v15 = v9;
    v14(v11, v12, v13);
    v16 = a3[8];
    v17 = a3[9];
    v18 = *(void **)((char *)a2 + v16);
    *(uint64_t *)((char *)v4 + v16) = (uint64_t)v18;
    *(uint64_t *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    v19 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v19) = *(uint64_t *)((char *)a2 + v19);
    v20 = v18;
  }
  return v4;
}

void sub_10041B5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));

  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for MetricPlatterType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

_QWORD *sub_10041B62C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = (void *)a2[4];
  a1[4] = v8;
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for MetricPlatterType(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_retain(v6);
  swift_retain(v7);
  v14 = v8;
  v13(v10, v11, v12);
  v15 = a3[8];
  v16 = a3[9];
  v17 = *(void **)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v17;
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  v18 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v19 = v17;
  return a1;
}

_QWORD *sub_10041B6FC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = (void *)a2[4];
  v11 = (void *)a1[4];
  a1[4] = v10;
  v12 = v10;

  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for MetricPlatterType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = a3[8];
  v18 = *(void **)((char *)a2 + v17);
  v19 = *(void **)((char *)a1 + v17);
  *(_QWORD *)((char *)a1 + v17) = v18;
  v20 = v18;

  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_10041B7F0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for MetricPlatterType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  return a1;
}

_QWORD *sub_10041B88C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_release(v9);
  v10 = (void *)a1[4];
  a1[4] = a2[4];

  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for MetricPlatterType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[8];
  v16 = *(void **)((char *)a1 + v15);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);

  v17 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_10041B954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10041B960);
}

uint64_t sub_10041B960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for MetricPlatterType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_10041B9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10041B9E8);
}

uint64_t sub_10041B9E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for MetricPlatterType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MirrorSpeedometerPlatterView(uint64_t a1)
{
  uint64_t result;

  result = qword_100832ED0;
  if (!qword_100832ED0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MirrorSpeedometerPlatterView);
  return result;
}

uint64_t sub_10041BA98(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_10063BC50;
  v4[1] = &unk_10063BC50;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for MetricPlatterType(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[7] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 8, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10041BB30(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B6F18, 1);
}

BOOL sub_10041BB40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  double v19;
  uint64_t v20;
  void *v21;
  char v22;
  _BOOL8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  char v28;
  __n128 v29;
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for MirrorSpeedometerPlatterView(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - v12;
  v15 = *(int *)(v14 + 32);
  v16 = FIUIDistanceTypeForActivityType(*(_QWORD *)(v0 + v15));
  v17 = FIUIPaceFormatForDistanceType(v16);
  sub_10041D168(v1, (uint64_t)v13);
  if (v17 != 4)
  {
    sub_10041D1AC((uint64_t)v13);
    sub_10041D168(v1, (uint64_t)v10);
    goto LABEL_6;
  }
  v19 = MetricsPublisher.currentPace.getter(v18);
  sub_10041D1AC((uint64_t)v13);
  sub_10041D168(v1, (uint64_t)v10);
  if (v19 < 0.0)
  {
LABEL_6:
    sub_10041D1AC((uint64_t)v10);
    goto LABEL_7;
  }
  sub_10001E724(0, (unint64_t *)&qword_10081E630, NSObject_ptr);
  v20 = *(_QWORD *)&v10[*(int *)(v2 + 32)];
  sub_10001E724(0, (unint64_t *)&qword_10081F420, FIUIWorkoutActivityType_ptr);
  v21 = (void *)static FIUIWorkoutActivityType.indoorCycle.getter();
  v22 = static NSObject.== infix(_:_:)(v20, v21);

  sub_10041D1AC((uint64_t)v10);
  if ((v22 & 1) != 0)
    return 0;
LABEL_7:
  v24 = FIUIDistanceTypeForActivityType(*(_QWORD *)(v1 + v15));
  v25 = FIUIPaceFormatForDistanceType(v24);
  sub_10041D168(v1, (uint64_t)v7);
  if (v25 == 4)
  {
    v26 = *((_QWORD *)v7 + 3);
    v27 = swift_retain(v26);
    v28 = WorkoutStatePublisher.gpsUnavailable.getter(v27);
    swift_release(v26);
    sub_10041D168((uint64_t)v7, (uint64_t)v4);
    v23 = (v28 & 1) != 0 || MetricsPublisher.currentPace.getter(v29) < 0.0;
    sub_10041D1AC((uint64_t)v7);
  }
  else
  {
    v23 = 0;
    v4 = v7;
  }
  sub_10041D1AC((uint64_t)v4);
  return v23;
}

void sub_10041BD7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  __n128 v8;
  double v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for LocalizationFeature(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10041BB40())
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizationFeature.workout(_:), v2);
    static Localization.workoutUILocalizedString(_:feature:)(0xD00000000000001ALL, 0x8000000100688510, v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v6 = *(void **)(v0 + 32);
    v7 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
    v9 = MetricsPublisher.currentPace.getter(v8);
    v10 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v7, v9);

    v11 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for MirrorSpeedometerPlatterView(0) + 32));
    v12 = FIUIDistanceTypeForActivityType(v11);
    v13 = FIUIPaceFormatForDistanceType(v12);
    v14 = objc_msgSend(v6, "localizedPaceStringWithDistance:overDuration:paceFormat:distanceType:", v10, v13, FIUIDistanceTypeForActivityType(v11), 1.0);

    if (v14)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v14);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10041BF34@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t OpaqueTypeConformance2;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  char *v92;
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  int *v100;
  char *v101;
  void (*v102)(char *, uint64_t);
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  unsigned int v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(_QWORD);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  _QWORD *v137;
  void (*v138)(char *, uint64_t);
  uint64_t v139;
  char *v140;
  _QWORD v141[2];

  v108 = a1;
  v113 = a2;
  v129 = sub_100047110(&qword_10081EFB0);
  v127 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v119 = (char *)&v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_100047110(&qword_10082F1F0);
  v124 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v109 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_100047110(&qword_100832F28);
  v137 = *(_QWORD **)(v131 - 8);
  __chkstk_darwin(v131);
  v112 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v111 = (char *)&v106 - v7;
  __chkstk_darwin(v8);
  v110 = (char *)&v106 - v9;
  __chkstk_darwin(v10);
  v120 = (char *)&v106 - v11;
  __chkstk_darwin(v12);
  v133 = (char *)&v106 - v13;
  __chkstk_darwin(v14);
  v132 = (char *)&v106 - v15;
  __chkstk_darwin(v16);
  v140 = (char *)&v106 - v17;
  __chkstk_darwin(v18);
  v136 = (char *)&v106 - v19;
  v139 = type metadata accessor for AccessibilityChildBehavior(0);
  v125 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v117 = (char *)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for WorkoutViewStyle(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = (void (*)(char *, uint64_t))sub_100047110(&qword_100832F30);
  __chkstk_darwin(v138);
  v26 = (uint64_t *)((char *)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = sub_100047110(&qword_100832F38);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v106 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100047110(&qword_100832F40);
  __chkstk_darwin(v31);
  v33 = (char *)&v106 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_100047110(&qword_100832F48);
  v135 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v118 = (char *)&v106 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v134 = (char *)&v106 - v36;
  *v26 = static Alignment.center.getter(v37);
  v26[1] = v38;
  v39 = sub_100047110(&qword_100832F50);
  sub_10041C9D4(a1, (uint64_t)v26 + *(int *)(v39 + 44));
  v126 = *(uint64_t (**)(_QWORD))(v22 + 104);
  v121 = v21;
  ((void (*)(char *, _QWORD, uint64_t))v126)(v24, enum case for WorkoutViewStyle.iOSHeroEnclosedMetric(_:), v21);
  v40 = sub_100028384(&qword_100832F58, &qword_100832F30, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  View.workoutViewStyle(_:)(v24, v138, v40);
  v138 = *(void (**)(char *, uint64_t))(v22 + 8);
  v138(v24, v21);
  sub_10001BE90((uint64_t)v26, &qword_100832F30);
  v41 = Color.init(rgbHex:)(3860709);
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v33, v30, v27);
  *(_QWORD *)&v33[*(int *)(v31 + 36)] = v41;
  v42 = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  v43 = v117;
  static AccessibilityChildBehavior.combine.getter(v42);
  v44 = sub_10041D084();
  v45 = v118;
  View.accessibilityElement(children:)(v43, v31, v44);
  v122 = *(void (**)(char *, uint64_t))(v125 + 8);
  v46 = v139;
  v122(v43, v139);
  sub_10001BE90((uint64_t)v33, &qword_100832F40);
  (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v134, v45, v128);
  v47 = v108;
  v48 = *(_QWORD *)(v108 + 32);
  v115 = *(int *)(type metadata accessor for MirrorSpeedometerPlatterView(0) + 32);
  v49 = v119;
  static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)(8, v48, *(_QWORD *)(v47 + v115), *(_QWORD *)(v47 + 8));
  v114 = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
  v50 = v121;
  v51 = v126(v24);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v51, &opaque type descriptor for <<opaque return type of static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)>>, 1);
  v53 = v109;
  v54 = v129;
  v123 = OpaqueTypeConformance2;
  View.workoutViewStyle(_:)(v24, v129, OpaqueTypeConformance2);
  v138(v24, v50);
  v127 = *(_QWORD *)(v127 + 8);
  v55 = ((uint64_t (*)(char *, uint64_t))v127)(v49, v54);
  v56 = v43;
  static AccessibilityChildBehavior.combine.getter(v55);
  v141[0] = v54;
  v141[1] = OpaqueTypeConformance2;
  v57 = v54;
  v125 = swift_getOpaqueTypeConformance2(v141, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
  v58 = v140;
  v59 = v130;
  View.accessibilityElement(children:)(v56, v130, v125);
  v60 = v122;
  v122(v56, v46);
  v124 = *(_QWORD *)(v124 + 8);
  ((void (*)(char *, uint64_t))v124)(v53, v59);
  v116 = (void (*)(char *, char *, uint64_t))v137[4];
  v116(v136, v58, v131);
  v61 = v115;
  v62 = v49;
  static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)(5, *(_QWORD *)(v47 + 32), *(_QWORD *)(v47 + v115), *(_QWORD *)(v47 + 8));
  v63 = v24;
  v107 = v24;
  v64 = v24;
  v65 = v114;
  v66 = v121;
  v67 = (void (*)(char *, uint64_t, uint64_t))v126;
  ((void (*)(char *, _QWORD, uint64_t))v126)(v64, v114, v121);
  View.workoutViewStyle(_:)(v63, v57, v123);
  v138(v63, v66);
  v68 = ((uint64_t (*)(char *, uint64_t))v127)(v62, v57);
  v69 = v117;
  static AccessibilityChildBehavior.combine.getter(v68);
  v70 = v132;
  v71 = v130;
  View.accessibilityElement(children:)(v69, v130, v125);
  v60(v69, v139);
  ((void (*)(char *, uint64_t))v124)(v53, v71);
  v72 = v131;
  v116(v140, v70, v131);
  v73 = v119;
  static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)(48, *(_QWORD *)(v47 + 32), *(_QWORD *)(v47 + v61), *(_QWORD *)(v47 + 8));
  v74 = v107;
  v75 = v121;
  v67(v107, v65, v121);
  v76 = v129;
  View.workoutViewStyle(_:)(v74, v129, v123);
  v77 = v75;
  v138(v74, v75);
  v78 = ((uint64_t (*)(char *, uint64_t))v127)(v73, v76);
  static AccessibilityChildBehavior.combine.getter(v78);
  v79 = v133;
  v80 = v69;
  v81 = v69;
  v82 = v130;
  View.accessibilityElement(children:)(v80, v130, v125);
  v122(v81, v139);
  ((void (*)(char *, uint64_t))v124)(v53, v82);
  v83 = v72;
  v84 = v116;
  v116(v132, v79, v83);
  static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)(1, *(_QWORD *)(v47 + 32), *(_QWORD *)(v47 + v115), *(_QWORD *)(v47 + 8));
  ((void (*)(char *, _QWORD, uint64_t))v126)(v74, v114, v77);
  v85 = v53;
  v86 = v129;
  View.workoutViewStyle(_:)(v74, v129, v123);
  v138(v74, v77);
  v87 = ((uint64_t (*)(char *, uint64_t))v127)(v73, v86);
  static AccessibilityChildBehavior.combine.getter(v87);
  v88 = v120;
  View.accessibilityElement(children:)(v81, v82, v125);
  v122(v81, v139);
  ((void (*)(char *, uint64_t))v124)(v85, v82);
  v89 = v133;
  v90 = v131;
  v84(v133, v88, v131);
  v91 = *(void (**)(char *, char *, uint64_t))(v135 + 16);
  v92 = v118;
  v93 = v128;
  v91(v118, v134, v128);
  v94 = (void (*)(char *, char *, uint64_t))v137[2];
  v94(v88, v136, v90);
  v95 = v110;
  v94(v110, v140, v90);
  v96 = v111;
  v97 = v132;
  v94(v111, v132, v90);
  v98 = v112;
  v94(v112, v89, v90);
  v99 = v113;
  v91(v113, v92, v93);
  v100 = (int *)sub_100047110(&qword_100832F68);
  v101 = v120;
  v94(&v99[v100[12]], v120, v90);
  v94(&v99[v100[16]], v95, v90);
  v94(&v99[v100[20]], v96, v90);
  v94(&v99[v100[24]], v98, v90);
  v102 = (void (*)(char *, uint64_t))v137[1];
  v102(v133, v90);
  v102(v97, v90);
  v102(v140, v90);
  v102(v136, v90);
  v103 = *(void (**)(char *, uint64_t))(v135 + 8);
  v104 = v128;
  v103(v134, v128);
  v102(v98, v90);
  v102(v96, v90);
  v102(v95, v90);
  v102(v101, v90);
  return ((uint64_t (*)(char *, uint64_t))v103)(v92, v104);
}

uint64_t sub_10041C9D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[16];
  uint64_t v52;
  _OWORD v53[3];

  v50 = a2;
  v3 = type metadata accessor for MetricText(0);
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100047110(&qword_1008246D8);
  __chkstk_darwin(v46);
  v49 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - v11;
  v13 = sub_100047110(&qword_100832F70);
  __chkstk_darwin(v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v45 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v45 - v20;
  v52 = a1;
  v23 = static Animation.default.getter(v22);
  withAnimation<A>(_:_:)(v23, sub_10041D150, v51, v13);
  swift_release(v23);
  sub_100045AD4((uint64_t)v18, (uint64_t)v21, &qword_100832F70);
  sub_10041BD7C();
  v25 = v24;
  v27 = v26;
  v28 = objc_msgSend(*(id *)(a1 + 32), "localizedSpeedUnitStringForActivityType:", *(_QWORD *)(a1 + *(int *)(type metadata accessor for MirrorSpeedometerPlatterView(0) + 32)));
  if (v28)
  {
    v29 = v28;
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v32 = v31;

  }
  else
  {
    v30 = 0;
    v32 = 0;
  }
  v33 = MetricText.init(value:unit:description:stale:includesSlashes:)(v25, v27, v30, v32, 0, 0, 0, 0);
  if (qword_10081D528 != -1)
    v33 = swift_once(&qword_10081D528, sub_10010A2B0);
  v34 = qword_100869CC8;
  v35 = static Alignment.center.getter(v33);
  _FrameLayout.init(width:height:alignment:)(v53, v34, 0, v34, 0, v35, v36);
  v38 = v47;
  v37 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v9, v5, v48);
  v39 = &v9[*(int *)(v46 + 36)];
  v40 = v53[1];
  *(_OWORD *)v39 = v53[0];
  *((_OWORD *)v39 + 1) = v40;
  *((_OWORD *)v39 + 2) = v53[2];
  (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v37);
  sub_100045AD4((uint64_t)v9, (uint64_t)v12, &qword_1008246D8);
  sub_100021CC0((uint64_t)v21, (uint64_t)v15, &qword_100832F70);
  v41 = v49;
  sub_100021CC0((uint64_t)v12, v49, &qword_1008246D8);
  v42 = v50;
  sub_100021CC0((uint64_t)v15, v50, &qword_100832F70);
  v43 = sub_100047110(&qword_100832F78);
  sub_100021CC0(v41, v42 + *(int *)(v43 + 48), &qword_1008246D8);
  sub_10001BE90((uint64_t)v12, &qword_1008246D8);
  sub_10001BE90((uint64_t)v21, &qword_100832F70);
  sub_10001BE90(v41, &qword_1008246D8);
  return sub_10001BE90((uint64_t)v15, &qword_100832F70);
}

void sub_10041CD48(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  CHWorkoutDetailHeartRateTableViewCell *object;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  id v18;
  id v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  __n128 v22;
  __n128 v23;
  unint64_t v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;

  if (!sub_10041BB40())
    MetricsPublisher.currentPace.getter(v3);
  v4 = *(void **)(a1 + 32);
  v5 = objc_msgSend(v4, "unitManager", a2);
  if (!v5)
  {
    __break(1u);
    goto LABEL_14;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "userDistanceCyclingUnit");

  FIUIDistanceUnitIsMetric(v7);
  type metadata accessor for MirrorSpeedometerPlatterView(0);
  MetricsPublisher.fastestPace.getter();
  sub_1003B7E7C();
  object = (CHWorkoutDetailHeartRateTableViewCell *)BinaryInteger.formatted()()._object;
  v9 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
  v10 = objc_msgSend(v4, "unitManager");
  if (!v10)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, "userDistanceCyclingUnit");

  LODWORD(v12) = FIUIDistanceUnitIsMetric(v12);
  v13 = type metadata accessor for MirrorSpeedometerPlatterView(0);
  v14 = v13;
  v15 = 40;
  if ((_DWORD)v12)
    v15 = 36;
  v16 = *(double *)(a1 + *(int *)(v13 + v15));
  v17 = MetricsPublisher.fastestPace.getter();
  if (v16 <= v17)
    v16 = v17;
  v18 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v9, v16);

  v19 = objc_msgSend(v4, "localizedPaceStringWithDistance:overDuration:paceFormat:unitStyle:decimalTrimmingMode:distanceType:", v18, 4, 0, 2, FIUIDistanceTypeForActivityType(*(_QWORD *)(a1 + *(int *)(v14 + 32))), 1.0);
  if (!v19)
    goto LABEL_15;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v21 = v20;

  if (qword_10081E0A8 != -1)
    swift_once(&qword_10081E0A8, sub_1005CFD2C);
  v22.n128_u64[0] = 18.0;
  v23.n128_u64[0] = 18.0;
  static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(18.0, 18.0, v22, 18.0, v23, 20.0, 20.0);
  v24 = sub_10041D1E8();
  View.accessibilityHidden(_:)(1, &type metadata for MirrorArcView, v24);
  swift_bridgeObjectRelease(v21, v25, v26, v27, v28, v29, v30, v31);
  swift_bridgeObjectRelease(object, v32, v33, v34, v35, v36, v37, v38);
}

uint64_t sub_10041D048@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *a1 = 0;
  v3 = sub_100047110(&qword_100832F20);
  return sub_10041BF34(v1, &a1[*(int *)(v3 + 44)]);
}

unint64_t sub_10041D084()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100832F60;
  if (!qword_100832F60)
  {
    v1 = sub_100007050(&qword_100832F40);
    v2[0] = sub_100007050(&qword_100832F30);
    v2[1] = sub_100028384(&qword_100832F58, &qword_100832F30, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
    sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100832F60);
  }
  return result;
}

void sub_10041D150(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10041CD48(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10041D168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MirrorSpeedometerPlatterView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10041D1AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MirrorSpeedometerPlatterView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10041D1E8()
{
  unint64_t result;

  result = qword_100832F80;
  if (!qword_100832F80)
  {
    result = swift_getWitnessTable(&unk_10062978C, &type metadata for MirrorArcView);
    atomic_store(result, (unint64_t *)&qword_100832F80);
  }
  return result;
}

unint64_t sub_10041D230()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100832F88;
  if (!qword_100832F88)
  {
    v1 = sub_100007050(&qword_100832F20);
    sub_100028384(&qword_10082E9E0, &qword_10082E9E8, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_100028384(&qword_100832F90, &qword_100832F98, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100832F88);
  }
  return result;
}

uint64_t sub_10041D2CC(unint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  id v13;
  NSString v14;
  id v15;
  Class isa;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[2];

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0 && a1 > 1)
  {
    if (qword_10081DD30 != -1)
      swift_once(&qword_10081DD30, sub_10041FF28);
    v13 = (id)qword_100832FA0;
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setDateFormat:", v14);

    v15 = (id)qword_100832FA0;
    Date.init()(v15);
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v17 = objc_msgSend(v15, "stringFromDate:", isa);

    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    v23[0] = v18;
    v23[1] = v20;
    v21 = sub_100038CA0();
    v22 = StringProtocol.localizedUppercase.getter(&type metadata for String, v21);
    swift_bridgeObjectRelease(v20);
    return v22;
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, 0, 0);

    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    return v11;
  }
}

uint64_t sub_10041D5A8(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_100047110((uint64_t *)&unk_100827450);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Calendar.Component(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v11 = (unsigned int *)*(&off_10079ED40 + a1);
    v12 = qword_10063BD58[a1];
  }
  else
  {
    v11 = (unsigned int *)&enum case for Calendar.Component.month(_:);
    v12 = 1;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *v11, v7);
  v13 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  static AxisMarkValues.stride(by:count:roundLowerBound:roundUpperBound:calendar:)(v10, v12, 2, 2, v6);
  sub_10001BE90((uint64_t)v6, (uint64_t *)&unk_100827450);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10041D6FC(char *a1, char a2, double a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v5 = a2 & 1;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110((uint64_t *)&unk_100827440);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DateInterval(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10041E110(a1, v5, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10001BE90((uint64_t)v12, (uint64_t *)&unk_100827440);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    v18 = sub_100047110((uint64_t *)&unk_100828730);
    v17 = swift_allocObject(v18, ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ 2 * *(_QWORD *)(v7 + 72), *(unsigned __int8 *)(v7 + 80) | 7);
    *(_OWORD *)(v17 + 16) = xmmword_100620BC0;
    v19 = DateInterval.start.getter(v17);
    v20 = DateInterval.end.getter(v19);
    Date.addingTimeInterval(_:)(v20, a3);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return v17;
}

uint64_t sub_10041D8D4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  NSString v10;
  id v11;
  Class isa;
  id v13;
  uint64_t v14;
  id v16;
  NSString v17;
  id v18;
  Class v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  Class v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  __n128 v40;
  uint64_t v41;

  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) == 0)
  {
    if (qword_10081DD30 == -1)
      goto LABEL_7;
    goto LABEL_6;
  }
  if (a2)
  {
    if (qword_10081DD30 == -1)
    {
LABEL_7:
      v9 = (id)qword_100832FA0;
      v10 = String._bridgeToObjectiveC()();
      objc_msgSend(v9, "setDateFormat:", v10);

      v11 = (id)qword_100832FA0;
      isa = Date._bridgeToObjectiveC()().super.isa;
      v13 = objc_msgSend(v11, "stringFromDate:", isa);

      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      return v14;
    }
LABEL_6:
    swift_once(&qword_10081DD30, sub_10041FF28);
    goto LABEL_7;
  }
  if (qword_10081DD30 != -1)
    swift_once(&qword_10081DD30, sub_10041FF28);
  v16 = (id)qword_100832FA0;
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setDateFormat:", v17);

  v18 = (id)qword_100832FA0;
  v19 = Date._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(v18, "stringFromDate:", v19);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v24 = (id)qword_100832FA0;
  Date.addingTimeInterval(_:)(v24, 3600.0);
  v25 = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v26 = objc_msgSend(v24, "stringFromDate:", v25);

  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  if (v21 == v27 && v23 == v29)
  {
    v30 = v23;
  }
  else if ((_stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v27, v29, 0) & 1) != 0)
  {
    v30 = v29;
  }
  else
  {
    v31 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v32 = String._bridgeToObjectiveC()();
    v33 = objc_msgSend(v31, "localizedStringForKey:value:table:", v32, 0, 0);

    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v36 = v35;

    v37 = sub_100047110((uint64_t *)&unk_100827460);
    v38 = swift_allocObject(v37, 112, 7);
    *(_OWORD *)(v38 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v38 + 56) = &type metadata for String;
    v39 = sub_100038CF8();
    *(_QWORD *)(v38 + 32) = v21;
    *(_QWORD *)(v38 + 40) = v23;
    *(_QWORD *)(v38 + 96) = &type metadata for String;
    *(_QWORD *)(v38 + 104) = v39;
    *(_QWORD *)(v38 + 64) = v39;
    *(_QWORD *)(v38 + 72) = v27;
    *(_QWORD *)(v38 + 80) = v29;
    v21 = String.init(format:_:)(v34, v36, v38, v40);
    v30 = v36;
  }
  swift_bridgeObjectRelease(v30);
  return v21;
}

uint64_t sub_10041DD1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, _QWORD, uint64_t);
  void *v28;
  __n128 v29;
  uint64_t result;
  uint64_t v31;
  Class isa;
  Class v33;
  id v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, _QWORD, uint64_t);
  void *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v51 = a1;
  v7 = type metadata accessor for DateComponents(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100821648);
  __chkstk_darwin(v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Calendar(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.autoupdatingCurrent.getter(v16);
  if ((a3 & 1) == 0)
  {
    v19 = sub_100047110((uint64_t *)&unk_100828720);
    v20 = type metadata accessor for Calendar.Component(0);
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(_QWORD *)(v21 + 72);
    v23 = *(unsigned __int8 *)(v21 + 80);
    v24 = (v23 + 32) & ~v23;
    v25 = swift_allocObject(v19, v24 + 2 * v22, v23 | 7);
    *(_OWORD *)(v25 + 16) = xmmword_100620BC0;
    v26 = v25 + v24;
    v27 = *(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 104);
    v27(v26, enum case for Calendar.Component.year(_:), v20);
    v27(v26 + v22, enum case for Calendar.Component.month(_:), v20);
    v28 = sub_1002302F0(v25);
    swift_setDeallocating(v25);
    swift_arrayDestroy(v26, 2, v20);
    swift_deallocClassInstance(v25, 32, 7);
    Calendar.dateComponents(_:from:)(v28, v51);
    v29 = swift_bridgeObjectRelease(v28);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v18, v14, v29);
  }
  v48 = v15;
  v49 = v14;
  v31 = v51;
  v50 = a4;
  if (a2)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    v33 = Calendar._bridgeToObjectiveC()().super.isa;
    v34 = (id)_HKActivityCacheDateComponentsFromDate(isa, v33);

    if (v34)
    {
      static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v34);

      v35 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v35(v13, v10, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
      v36 = v50;
      if ((_DWORD)result != 1)
      {
        (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v49);
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v35)(v36, v13, v7);
      }
    }
    else
    {
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
    }
    __break(1u);
  }
  else
  {
    v37 = sub_100047110((uint64_t *)&unk_100828720);
    v38 = type metadata accessor for Calendar.Component(0);
    v39 = *(_QWORD *)(v38 - 8);
    v40 = *(_QWORD *)(v39 + 72);
    v41 = *(unsigned __int8 *)(v39 + 80);
    v42 = (v41 + 32) & ~v41;
    v43 = swift_allocObject(v37, v42 + 4 * v40, v41 | 7);
    *(_OWORD *)(v43 + 16) = xmmword_100624D00;
    v44 = v43 + v42;
    v45 = *(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 104);
    v45(v44, enum case for Calendar.Component.year(_:), v38);
    v45(v44 + v40, enum case for Calendar.Component.month(_:), v38);
    v45(v44 + 2 * v40, enum case for Calendar.Component.day(_:), v38);
    v45(v44 + 3 * v40, enum case for Calendar.Component.hour(_:), v38);
    v46 = sub_1002302F0(v43);
    swift_setDeallocating(v43);
    swift_arrayDestroy(v44, 4, v38);
    swift_deallocClassInstance(v43, 32, 7);
    Calendar.dateComponents(_:from:)(v46, v31);
    v47 = swift_bridgeObjectRelease(v46);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v48 + 8))(v18, v49, v47);
  }
  return result;
}

uint64_t sub_10041E110@<X0>(char *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  Class isa;
  uint64_t v87;
  char *v88;
  Class v89;
  id v90;
  char *v91;
  _QWORD *v92;
  void (*v93)(char *, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(_QWORD, _QWORD, _QWORD);
  void (*v98)(char *, _QWORD, _QWORD);
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  void (*v103)(_QWORD, _QWORD);
  unsigned int (*v104)(char *, uint64_t, uint64_t);
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(_QWORD, _QWORD, _QWORD);
  _QWORD *v117;
  void *v118;
  char *v119;
  char *v120;
  void (*v121)(_QWORD, _QWORD, _QWORD);
  void (*v122)(_QWORD, _QWORD);
  char *v123;
  void (*v124)(char *, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(uint64_t, uint64_t, _QWORD);
  void (*v133)(_QWORD, _QWORD, _QWORD);
  uint64_t v134;
  uint64_t v135;
  void *v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(uint64_t, _QWORD, _QWORD);
  void (*v152)(_QWORD, _QWORD, _QWORD);
  void *v153;
  char *v154;
  char *v155;
  char *v156;
  void (*v157)(_QWORD, _QWORD, _QWORD);
  void (*v158)(_QWORD, _QWORD);
  _QWORD *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  void (*v164)(_QWORD, _QWORD, _QWORD);
  void (*v165)(char *, uint64_t);
  char *v166;
  void (*v167)(char *, uint64_t, uint64_t, uint64_t);
  char *v168;
  void (*v169)(_QWORD, _QWORD);
  uint64_t v170;
  void (*v171)(char *, uint64_t);
  char *v172;
  char *v173;
  uint64_t v174;
  void (*v175)(char *, uint64_t, uint64_t, uint64_t);
  char *v176;
  char *v177;
  void (*v178)(char *, uint64_t);
  char *v179;
  _QWORD *v180;
  char *v181;
  void (*v182)(char *, char *, uint64_t);
  char *v183;
  char *v184;
  void (*v185)(_QWORD, _QWORD, _QWORD);
  uint64_t v186;
  void (*v187)(char *, uint64_t);
  char *v188;
  void (*v189)(char *, char *, uint64_t);
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  void (*v196)(char *, uint64_t);
  char *v197;
  uint64_t v198;
  void (*v199)(char *, char *, uint64_t);
  char *v200;
  void (*v201)(char *, uint64_t);
  char *v202;
  void (*v203)(char *, char *, uint64_t);
  void (*v204)(_QWORD, _QWORD, _QWORD);
  char *v205;
  char *v206;
  void (*v207)(char *, uint64_t);
  uint64_t v208;
  char *v210;
  _QWORD *v211;
  char *v212;
  void (*v213)(char *, char *, uint64_t);
  char *v214;
  char *v215;
  char *v216;
  void (*v217)(char *, uint64_t);
  uint64_t v218;
  char *v219;
  _QWORD *v220;
  char *v221;
  void (*v222)(char *, char *, uint64_t);
  char *v223;
  char *v224;
  uint64_t v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  char *v259;
  char *v260;
  char *v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  void (*v272)(char *, uint64_t, uint64_t, uint64_t);
  char *v273;
  _QWORD *v274;
  char *v275;
  char *v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  void (*v280)(_QWORD, _QWORD, _QWORD);
  void (*v281)(_QWORD, _QWORD);
  void (*v282)(_QWORD, _QWORD, _QWORD);
  uint64_t v283;
  uint64_t v284;
  char *v285;
  char *v286;

  LODWORD(v284) = a2;
  v285 = a1;
  v283 = a3;
  v3 = sub_100047110(&qword_100823FC8);
  __chkstk_darwin(v3);
  v5 = (char *)&v248 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110((uint64_t *)&unk_100827450);
  __chkstk_darwin(v6);
  v8 = (char *)&v248 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Calendar.Identifier(0);
  v269 = *(_QWORD *)(v9 - 8);
  v270 = v9;
  __chkstk_darwin(v9);
  v267 = (char *)&v248 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Calendar.Component(0);
  v279 = *(_QWORD *)(v11 - 8);
  v280 = (void (*)(_QWORD, _QWORD, _QWORD))v11;
  __chkstk_darwin(v11);
  v272 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v248 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for DateComponents(0);
  v281 = *(void (**)(_QWORD, _QWORD))(v13 - 8);
  v282 = (void (*)(_QWORD, _QWORD, _QWORD))v13;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v248 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v277 = (char *)&v248 - v17;
  v18 = sub_100047110((uint64_t *)&unk_100828370);
  v19 = __chkstk_darwin(v18);
  v262 = (char *)&v248 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v271 = (char *)&v248 - v22;
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v248 - v24;
  v26 = __chkstk_darwin(v23);
  v254 = (char *)&v248 - v27;
  v28 = __chkstk_darwin(v26);
  v256 = (char *)&v248 - v29;
  v30 = __chkstk_darwin(v28);
  v265 = (char *)&v248 - v31;
  v32 = __chkstk_darwin(v30);
  v259 = (char *)&v248 - v33;
  v34 = __chkstk_darwin(v32);
  v268 = (char *)&v248 - v35;
  v36 = __chkstk_darwin(v34);
  v252 = (char *)&v248 - v37;
  v38 = __chkstk_darwin(v36);
  v258 = (char *)&v248 - v39;
  __chkstk_darwin(v38);
  v266 = (char *)&v248 - v40;
  v41 = type metadata accessor for Calendar(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = __chkstk_darwin(v41);
  v45 = (char *)&v248 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v47 = (char *)&v248 - v46;
  v48 = type metadata accessor for Date(0);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = __chkstk_darwin(v48);
  v255 = (char *)&v248 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __chkstk_darwin(v50);
  v261 = (char *)&v248 - v53;
  v54 = __chkstk_darwin(v52);
  v276 = (char *)&v248 - v55;
  v56 = __chkstk_darwin(v54);
  v249 = (char *)&v248 - v57;
  v58 = __chkstk_darwin(v56);
  v253 = (char *)&v248 - v59;
  v60 = __chkstk_darwin(v58);
  v260 = (char *)&v248 - v61;
  v62 = __chkstk_darwin(v60);
  v251 = (char *)&v248 - v63;
  v64 = __chkstk_darwin(v62);
  v257 = (char *)&v248 - v65;
  v66 = __chkstk_darwin(v64);
  v275 = (char *)&v248 - v67;
  v68 = __chkstk_darwin(v66);
  v264 = (char *)&v248 - v69;
  v70 = __chkstk_darwin(v68);
  v273 = (char *)&v248 - v71;
  v72 = __chkstk_darwin(v70);
  v248 = (char *)&v248 - v73;
  v74 = __chkstk_darwin(v72);
  v250 = (char *)&v248 - v75;
  v76 = __chkstk_darwin(v74);
  v263 = (char *)&v248 - v77;
  v78 = __chkstk_darwin(v76);
  v286 = (char *)&v248 - v79;
  v80 = Date.init()(v78);
  static Calendar.autoupdatingCurrent.getter(v80);
  if ((v284 & 1) == 0)
  {
    v272 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
    v272(v8, 1, 1, v41);
    v81 = type metadata accessor for TimeZone(0);
    v269 = *(_QWORD *)(*(_QWORD *)(v81 - 8) + 56);
    v270 = v81;
    ((void (*)(char *, uint64_t, uint64_t))v269)(v5, 1, 1);
    v275 = v8;
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v8, v5, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1);
    DateComponents.year.setter(v285, 0);
    Calendar.date(from:)(v16);
    v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
    if (v82(v25, 1, v48) == 1)
    {
      (*((void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))v281 + 1))(v16, v282);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v47, v41);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v286, v48);
LABEL_19:
      v108 = (uint64_t)v25;
      goto LABEL_34;
    }
    v284 = v41;
    v285 = v16;
    v278 = v42;
    v109 = v276;
    v267 = *(char **)(v49 + 32);
    v268 = v5;
    ((void (*)(char *, char *, uint64_t))v267)(v276, v25, v48);
    v110 = sub_100047110((uint64_t *)&unk_100828720);
    v111 = v279;
    v112 = *(unsigned __int8 *)(v279 + 80);
    v113 = (v112 + 32) & ~v112;
    v114 = swift_allocObject(v110, v113 + *(_QWORD *)(v279 + 72), v112 | 7);
    *(_OWORD *)(v114 + 16) = xmmword_100622F90;
    v115 = v114 + v113;
    v116 = v280;
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v111 + 104))(v115, enum case for Calendar.Component.year(_:), v280);
    v117 = (_QWORD *)v49;
    v118 = sub_1002302F0(v114);
    swift_setDeallocating(v114);
    swift_arrayDestroy(v115, 1, v116);
    swift_deallocClassInstance(v114, 32, 7);
    v119 = v277;
    Calendar.dateComponents(_:from:)(v118, v109);
    swift_bridgeObjectRelease(v118);
    v120 = v271;
    Calendar.date(from:)(v119);
    v121 = v282;
    v122 = (void (*)(_QWORD, _QWORD))*((_QWORD *)v281 + 1);
    v122(v119, v282);
    if (v82(v120, 1, v48) == 1)
    {
      v123 = v109;
      v124 = (void (*)(char *, uint64_t))v117[1];
      v124(v123, v48);
      v122(v285, v121);
      (*(void (**)(char *, uint64_t))(v278 + 8))(v47, v284);
      v25 = v120;
      v124(v286, v48);
      goto LABEL_19;
    }
    v274 = v117;
    v160 = v261;
    v161 = v267;
    ((void (*)(void))v267)();
    v162 = v275;
    v272(v275, 1, 1, v284);
    v163 = v268;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v269)(v268, 1, 1, v270);
    LOBYTE(v246) = 1;
    LOBYTE(v244) = 1;
    LOBYTE(v242) = 1;
    LOBYTE(v240) = 1;
    LOBYTE(v238) = 1;
    LOBYTE(v236) = 1;
    LOBYTE(v234) = 1;
    LOBYTE(v232) = 0;
    LOBYTE(v230) = 1;
    LOBYTE(v228) = 1;
    LOBYTE(v226) = 1;
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v162, v163, 0, 1, 1, 0, 0, 1, 0, v226, 0, v228, 0, v230, -1, v232, 0, v234, 0,
      v236,
      0,
      v238,
      0,
      v240,
      0,
      v242,
      0,
      v244,
      0,
      v246);
    v25 = v262;
    Calendar.date(byAdding:to:wrappingComponents:)(v119, v160, 0);
    v164 = v282;
    v122(v119, v282);
    if (v82(v25, 1, v48) == 1)
    {
      v165 = (void (*)(char *, uint64_t))v274[1];
      v165(v160, v48);
      v165(v276, v48);
      v122(v285, v164);
      (*(void (**)(char *, uint64_t))(v278 + 8))(v47, v284);
      v165(v286, v48);
      goto LABEL_19;
    }
    v271 = v47;
    v179 = v255;
    ((void (*)(char *, char *, uint64_t))v161)(v255, v25, v48);
    v181 = v273;
    v180 = v274;
    v182 = (void (*)(char *, char *, uint64_t))v274[2];
    v182(v273, v160, v48);
    v183 = v264;
    v182(v264, v179, v48);
    v184 = v160;
    v185 = v164;
    v186 = v283;
    DateInterval.init(start:end:)(v181, v183);
    v187 = (void (*)(char *, uint64_t))v180[1];
    v187(v179, v48);
    v187(v184, v48);
    v187(v276, v48);
    v122(v285, v185);
    (*(void (**)(char *, uint64_t))(v278 + 8))(v271, v284);
LABEL_39:
    v187(v286, v48);
    v225 = type metadata accessor for DateInterval(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v225 - 8) + 56))(v186, 0, 1, v225);
  }
  v278 = v42;
  v274 = (_QWORD *)v49;
  v271 = v47;
  v284 = v41;
  if (!v285)
  {
    v125 = sub_100047110((uint64_t *)&unk_100828720);
    v126 = v279;
    v127 = *(_QWORD *)(v279 + 72);
    v128 = *(unsigned __int8 *)(v279 + 80);
    v129 = (v128 + 32) & ~v128;
    v130 = swift_allocObject(v125, v129 + 3 * v127, v128 | 7);
    *(_OWORD *)(v130 + 16) = xmmword_100624A40;
    v131 = v130 + v129;
    v132 = *(void (**)(uint64_t, uint64_t, _QWORD))(v126 + 104);
    v133 = v280;
    v132(v131, enum case for Calendar.Component.year(_:), v280);
    v132(v131 + v127, enum case for Calendar.Component.month(_:), v133);
    v134 = v131 + 2 * v127;
    v135 = enum case for Calendar.Component.day(_:);
    v132(v134, enum case for Calendar.Component.day(_:), v133);
    v136 = sub_1002302F0(v130);
    swift_setDeallocating(v130);
    swift_arrayDestroy(v131, 3, v133);
    swift_deallocClassInstance(v130, 32, 7);
    v137 = v277;
    v138 = v271;
    Calendar.dateComponents(_:from:)(v136, v286);
    swift_bridgeObjectRelease(v136);
    v139 = v266;
    Calendar.date(from:)(v137);
    v140 = v137;
    v141 = (uint64_t)v139;
    (*((void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))v281 + 1))(v140, v282);
    v142 = v274;
    v143 = v48;
    v285 = (char *)v274[6];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v285)(v139, 1, v48) == 1)
    {
      (*(void (**)(char *, uint64_t))(v278 + 8))(v138, v284);
      ((void (*)(char *, uint64_t))v142[1])(v286, v48);
    }
    else
    {
      v166 = v263;
      v282 = (void (*)(_QWORD, _QWORD, _QWORD))v142[4];
      v282(v263, v141, v48);
      v167 = v272;
      v132((uint64_t)v272, v135, v133);
      v168 = v258;
      Calendar.date(byAdding:value:to:wrappingComponents:)(v167, 1, v166, 0);
      v169 = *(void (**)(_QWORD, _QWORD))(v126 + 8);
      v169(v167, v133);
      v170 = v143;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v285)(v168, 1, v143) == 1)
      {
        v171 = (void (*)(char *, uint64_t))v142[1];
        v171(v166, v143);
        (*(void (**)(char *, uint64_t))(v278 + 8))(v138, v284);
        v141 = (uint64_t)v168;
        v171(v286, v143);
      }
      else
      {
        v197 = v250;
        v198 = v143;
        v199 = (void (*)(char *, char *, uint64_t))v282;
        v282(v250, v168, v198);
        v132((uint64_t)v167, enum case for Calendar.Component.second(_:), v133);
        v200 = v252;
        Calendar.date(byAdding:value:to:wrappingComponents:)(v167, -1, v197, 0);
        v169(v167, v133);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v285)(v200, 1, v170) != 1)
        {
          v210 = v248;
          v199(v248, v200, v170);
          v212 = v273;
          v211 = v274;
          v213 = (void (*)(char *, char *, uint64_t))v274[2];
          v214 = v263;
          v213(v273, v263, v170);
          v215 = v264;
          v213(v264, v210, v170);
          v216 = v197;
          v194 = v283;
          DateInterval.init(start:end:)(v212, v215);
          v217 = (void (*)(char *, uint64_t))v211[1];
          v217(v210, v170);
          v217(v216, v170);
          v217(v214, v170);
          (*(void (**)(char *, uint64_t))(v278 + 8))(v138, v284);
          v217(v286, v170);
          goto LABEL_37;
        }
        v201 = (void (*)(char *, uint64_t))v274[1];
        v201(v197, v170);
        v201(v263, v170);
        (*(void (**)(char *, uint64_t))(v278 + 8))(v138, v284);
        v141 = (uint64_t)v200;
        v201(v286, v170);
      }
    }
    v108 = v141;
    goto LABEL_34;
  }
  if (v285 != (char *)1)
  {
    v144 = sub_100047110((uint64_t *)&unk_100828720);
    v145 = v279;
    v146 = *(_QWORD *)(v279 + 72);
    v147 = *(unsigned __int8 *)(v279 + 80);
    v148 = (v147 + 32) & ~v147;
    v149 = swift_allocObject(v144, v148 + 2 * v146, v147 | 7);
    *(_OWORD *)(v149 + 16) = xmmword_100620BC0;
    v150 = v149 + v148;
    v151 = *(void (**)(uint64_t, _QWORD, _QWORD))(v145 + 104);
    v152 = v280;
    v151(v150, enum case for Calendar.Component.year(_:), v280);
    v151(v150 + v146, enum case for Calendar.Component.month(_:), v152);
    v153 = sub_1002302F0(v149);
    swift_setDeallocating(v149);
    swift_arrayDestroy(v150, 2, v152);
    swift_deallocClassInstance(v149, 32, 7);
    v154 = v277;
    v155 = v271;
    Calendar.dateComponents(_:from:)(v153, v286);
    swift_bridgeObjectRelease(v153);
    v156 = v265;
    Calendar.date(from:)(v154);
    v157 = v282;
    v158 = (void (*)(_QWORD, _QWORD))*((_QWORD *)v281 + 1);
    v158(v154, v282);
    v159 = v274;
    v285 = (char *)v274[6];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v285)(v156, 1, v48) == 1)
    {
      (*(void (**)(char *, uint64_t))(v278 + 8))(v155, v284);
      ((void (*)(char *, uint64_t))v159[1])(v286, v48);
    }
    else
    {
      v172 = v156;
      v173 = v260;
      v280 = (void (*)(_QWORD, _QWORD, _QWORD))v159[4];
      v280(v260, v172, v48);
      v279 = *(_QWORD *)(v278 + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v279)(v8, 1, 1, v284);
      v174 = type metadata accessor for TimeZone(0);
      v175 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v174 - 8) + 56);
      v276 = (char *)v174;
      v272 = v175;
      ((void (*)(char *, uint64_t, uint64_t))v175)(v5, 1, 1);
      v275 = v8;
      DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v8, v5, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1);
      v176 = v256;
      Calendar.date(byAdding:to:wrappingComponents:)(v154, v173, 0);
      v281 = v158;
      v158(v154, v157);
      v177 = v285;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v285)(v176, 1, v48) == 1)
      {
        v178 = (void (*)(char *, uint64_t))v159[1];
        v178(v173, v48);
        (*(void (**)(char *, uint64_t))(v278 + 8))(v155, v284);
        v156 = v176;
        v178(v286, v48);
      }
      else
      {
        v202 = v253;
        v203 = (void (*)(char *, char *, uint64_t))v280;
        v280(v253, v176, v48);
        v204 = v157;
        v205 = v275;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v279)(v275, 1, 1, v284);
        v272(v5, 1, 1, (uint64_t)v276);
        LOBYTE(v247) = 1;
        LOBYTE(v245) = 1;
        LOBYTE(v243) = 1;
        LOBYTE(v241) = 1;
        LOBYTE(v239) = 1;
        LOBYTE(v237) = 1;
        LOBYTE(v235) = 1;
        LOBYTE(v233) = 0;
        LOBYTE(v231) = 1;
        LOBYTE(v229) = 1;
        LOBYTE(v227) = 1;
        DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v205, v5, 0, 1, 0, 1, 0, 1, 0, v227, 0, v229, 0, v231, -1, v233, 0, v235, 0,
          v237,
          0,
          v239,
          0,
          v241,
          0,
          v243,
          0,
          v245,
          0,
          v247);
        v206 = v254;
        Calendar.date(byAdding:to:wrappingComponents:)(v154, v202, 0);
        v281(v154, v204);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v177)(v206, 1, v48) != 1)
        {
          v219 = v249;
          v203(v249, v206, v48);
          v221 = v273;
          v220 = v274;
          v222 = (void (*)(char *, char *, uint64_t))v274[2];
          v223 = v260;
          v222(v273, v260, v48);
          v224 = v264;
          v222(v264, v219, v48);
          v186 = v283;
          DateInterval.init(start:end:)(v221, v224);
          v187 = (void (*)(char *, uint64_t))v220[1];
          v187(v219, v48);
          v187(v202, v48);
          v187(v223, v48);
          (*(void (**)(char *, uint64_t))(v278 + 8))(v155, v284);
          goto LABEL_39;
        }
        v207 = (void (*)(char *, uint64_t))v274[1];
        v207(v202, v48);
        v207(v260, v48);
        (*(void (**)(char *, uint64_t))(v278 + 8))(v155, v284);
        v156 = v206;
        v207(v286, v48);
      }
    }
    v108 = (uint64_t)v156;
    goto LABEL_34;
  }
  v84 = v269;
  v83 = v270;
  v85 = v267;
  (*(void (**)(char *, _QWORD, uint64_t))(v269 + 104))(v267, enum case for Calendar.Identifier.gregorian(_:), v270);
  Calendar.init(identifier:)(v85);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v83);
  isa = Calendar._bridgeToObjectiveC()().super.isa;
  v285 = *(char **)(v278 + 8);
  v87 = ((uint64_t (*)(char *, uint64_t))v285)(v45, v284);
  v88 = v273;
  Date.init()(v87);
  v89 = Date._bridgeToObjectiveC()().super.isa;
  v90 = -[objc_class hk_startOfFitnessWeekBeforeDate:](isa, "hk_startOfFitnessWeekBeforeDate:", v89);

  v91 = v275;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v90);

  v92 = v274;
  v93 = (void (*)(char *, uint64_t))v274[1];
  v94 = v88;
  v95 = v48;
  v93(v94, v48);
  v96 = v279;
  v97 = v280;
  v98 = *(void (**)(char *, _QWORD, _QWORD))(v279 + 104);
  v99 = (char *)v272;
  v98((char *)v272, enum case for Calendar.Component.day(_:), v280);
  v100 = v268;
  v101 = v91;
  v102 = v271;
  Calendar.date(byAdding:value:to:wrappingComponents:)(v99, 7, v101, 0);
  v103 = *(void (**)(_QWORD, _QWORD))(v96 + 8);
  v103(v99, v97);
  v104 = (unsigned int (*)(char *, uint64_t, uint64_t))v92[6];
  if (v104(v100, 1, v95) != 1)
  {
    v282 = (void (*)(_QWORD, _QWORD, _QWORD))v93;
    v105 = v257;
    v281 = (void (*)(_QWORD, _QWORD))v92[4];
    ((void (*)(char *, char *, uint64_t))v281)(v257, v100, v95);
    v98(v99, enum case for Calendar.Component.second(_:), v97);
    v100 = v259;
    Calendar.date(byAdding:value:to:wrappingComponents:)(v99, -1, v105, 0);
    v103(v99, v97);
    if (v104(v100, 1, v95) == 1)
    {
      v106 = v105;
      v93 = (void (*)(char *, uint64_t))v282;
      ((void (*)(char *, uint64_t))v282)(v106, v95);
      goto LABEL_9;
    }
    v188 = v251;
    ((void (*)(char *, char *, uint64_t))v281)(v251, v100, v95);
    v189 = (void (*)(char *, char *, uint64_t))v92[2];
    v190 = v273;
    v191 = v275;
    v189(v273, v275, v95);
    v192 = v105;
    v193 = v264;
    v189(v264, v188, v95);
    v194 = v283;
    DateInterval.init(start:end:)(v190, v193);
    v195 = v188;
    v196 = (void (*)(char *, uint64_t))v282;
    ((void (*)(char *, uint64_t))v282)(v195, v95);
    v196(v192, v95);
    v196(v191, v95);
    ((void (*)(char *, uint64_t))v285)(v102, v284);
    v196(v286, v95);
LABEL_37:
    v218 = type metadata accessor for DateInterval(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v218 - 8) + 56))(v194, 0, 1, v218);
  }
LABEL_9:
  v107 = v284;
  v93(v275, v95);
  ((void (*)(char *, uint64_t))v285)(v271, v107);
  v93(v286, v95);
  v108 = (uint64_t)v100;
LABEL_34:
  sub_10001BE90(v108, (uint64_t *)&unk_100828370);
  v208 = type metadata accessor for DateInterval(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v208 - 8) + 56))(v283, 1, 1, v208);
}

_QWORD *sub_10041F724(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, __n128);
  uint64_t v31;
  unsigned int *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  char v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  uint64_t v56;
  _QWORD *v57;
  SEL v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  __n128 v66;
  _QWORD *v67;
  SEL v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  int v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, __n128);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  CHWorkoutDetailHeartRateTableViewCell *v93;

  v87 = a2;
  v5 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v5);
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Calendar.Component(0);
  v90 = *(_QWORD *)(v8 - 8);
  v91 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DateComponents(0);
  v86 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v85 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v84 = (uint64_t)&v76 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v76 - v16;
  v18 = type metadata accessor for Date(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v76 - v23;
  v25 = type metadata accessor for Calendar(0);
  v76 = *(_QWORD *)(v25 - 8);
  v77 = v25;
  __chkstk_darwin(v25);
  v89 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = static Calendar.autoupdatingCurrent.getter(v27);
  v93 = (CHWorkoutDetailHeartRateTableViewCell *)&_swiftEmptySetSingleton;
  v29 = DateInterval.start.getter(v28);
  v82 = a1;
  DateInterval.end.getter(v29);
  v80 = sub_1001B07B8();
  LOBYTE(a1) = dispatch thunk of static Comparable.< infix(_:_:)(v21, v24, v18);
  v83 = v19;
  v30 = *(void (**)(char *, uint64_t, __n128))(v19 + 8);
  v81 = v21;
  v31 = v18;
  v88 = v30;
  ((void (*)(char *, uint64_t))v30)(v21, v18);
  if ((a1 & 1) != 0)
  {
LABEL_9:
    v55 = v93;
    swift_bridgeObjectRetain(v93);
    v57 = sub_100295D80(v56);
    swift_bridgeObjectRelease(v55, v58, v59, v60, v61, v62, v63, v64);
    __chkstk_darwin(v65);
    *(&v76 - 2) = (uint64_t)v89;
    v92 = v57;
    swift_retain(v57);
    sub_1004200C0((uint64_t (*)(char *, char *))sub_1004200A4, (uint64_t)(&v76 - 4));
    v66 = swift_release(v57);
    v67 = v92;
    v88(v24, v31, v66);
    swift_bridgeObjectRelease(v93, v68, v69, v70, v71, v72, v73, v74);
  }
  else
  {
    v32 = (unsigned int *)&enum case for Calendar.Component.day(_:);
    if (!v87)
      v32 = (unsigned int *)&enum case for Calendar.Component.hour(_:);
    v79 = a3 & 1;
    if ((a3 & 1) == 0)
      v32 = (unsigned int *)&enum case for Calendar.Component.month(_:);
    v78 = *v32;
    while (1)
    {
      sub_10041DD1C((uint64_t)v24, v87, v79, (uint64_t)v17);
      v33 = v24;
      v34 = v85;
      v35 = v86;
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v85, v17, v11);
      v36 = v17;
      v37 = v11;
      v38 = v10;
      v39 = v7;
      v40 = v84;
      sub_10014212C(v84, v34);
      v41 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v42 = v40;
      v7 = v39;
      v10 = v38;
      v11 = v37;
      v41(v42, v37);
      (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v10, v78, v91);
      Calendar.date(byAdding:value:to:wrappingComponents:)(v10, 1, v33, 0);
      v43 = v83;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v7, 1, v31) == 1)
        break;
      (*(void (**)(char *, uint64_t))(v90 + 8))(v10, v91);
      v41((uint64_t)v36, v37);
      v51 = (void (*)(char *, uint64_t))v88;
      ((void (*)(char *, uint64_t))v88)(v33, v31);
      v52 = (*(uint64_t (**)(char *, char *, uint64_t))(v43 + 32))(v33, v7, v31);
      v53 = v81;
      DateInterval.end.getter(v52);
      v54 = dispatch thunk of static Comparable.< infix(_:_:)(v53, v33, v31);
      v51(v53, v31);
      v17 = v36;
      v24 = v33;
      if ((v54 & 1) != 0)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease(v93, v44, v45, v46, v47, v48, v49, v50);
    sub_10001BE90((uint64_t)v7, (uint64_t *)&unk_100828370);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v10, v91);
    v41((uint64_t)v36, v37);
    ((void (*)(char *, uint64_t))v88)(v33, v31);
    v67 = _swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, uint64_t))(v76 + 8))(v89, v77);
  return v67;
}

uint64_t sub_10041FBD8()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  return v3;
}

uint64_t sub_10041FD44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  char v18;
  void (*v19)(char *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  _QWORD v22[2];
  uint64_t v23;

  v23 = a2;
  v4 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v22 - v8;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v22 - v15;
  Calendar.date(from:)(a1);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v9, 1, v10) == 1)
  {
    sub_10001BE90((uint64_t)v9, (uint64_t *)&unk_100828370);
    v18 = 0;
  }
  else
  {
    v22[1] = v2;
    v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v19(v16, v9, v10);
    Calendar.date(from:)(v23);
    if (v17(v6, 1, v10) == 1)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      sub_10001BE90((uint64_t)v6, (uint64_t *)&unk_100828370);
      v18 = 0;
    }
    else
    {
      v19(v13, v6, v10);
      v18 = static Date.< infix(_:_:)(v16, v13);
      v20 = *(void (**)(char *, uint64_t))(v11 + 8);
      v20(v13, v10);
      v20(v16, v10);
    }
  }
  return v18 & 1;
}

id sub_10041FF28()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  qword_100832FA0 = (uint64_t)result;
  return result;
}

Swift::Int sub_10041FF58()
{
  uint64_t v0;
  Swift::UInt v1;
  char v2;
  _QWORD v4[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  Hasher.init(_seed:)(v4, 0);
  if ((v2 & 1) == 0)
    Hasher._combine(_:)(3uLL);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10041FFB0()
{
  uint64_t v0;
  Swift::UInt v1;

  v1 = *(_QWORD *)v0;
  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    Hasher._combine(_:)(3uLL);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_10041FFEC(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt v2;
  char v3;
  _QWORD v5[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  Hasher.init(_seed:)(v5, a1);
  if ((v3 & 1) == 0)
    Hasher._combine(_:)(3uLL);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

BOOL sub_100420040(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  char v6;
  char v7;

  v2 = *a1;
  v3 = *(_QWORD *)a2;
  if (*((_BYTE *)a1 + 8) != 1)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return v2 == v3;
    return 0;
  }
  if (v2)
  {
    if (v2 != 1)
    {
      if (v3 > 1)
        v7 = *(_BYTE *)(a2 + 8);
      else
        v7 = 0;
      return (v7 & 1) != 0;
    }
    v4 = v3 == 1;
  }
  else
  {
    v4 = v3 == 0;
  }
  if (v4)
    v6 = *(_BYTE *)(a2 + 8);
  else
    v6 = 0;
  return (v6 & 1) != 0;
}

uint64_t sub_1004200A4(uint64_t a1, uint64_t a2)
{
  return sub_10041FD44(a1, a2) & 1;
}

void sub_1004200C0(uint64_t (*a1)(char *, char *), uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  type metadata accessor for DateComponents(0);
  v5 = (_QWORD *)*v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = (_QWORD *)sub_1001477A4(v5);
  sub_100420158(a1, a2);
  *v2 = v5;
}

void sub_100420158(uint64_t (*a1)(char *, char *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  Swift::Int v26;
  Swift::Int v27;
  const char *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  Swift::Int v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  uint64_t v43;
  Swift::Int v44;
  uint64_t v45;
  Swift::Int v46;
  void (*v47)(char *, uint64_t, uint64_t);
  Swift::Int v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  Swift::Int v54;
  uint64_t v55;
  Swift::Int v56;
  char *v57;
  char *v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  Swift::Int v63;
  Swift::Int v64;
  uint64_t v65;
  uint64_t v66;
  Swift::Int v67;
  uint64_t v68;
  Swift::Int v69;
  unint64_t v70;
  Swift::Int v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  Class *v76;
  objc_class *v77;
  unint64_t v78;
  uint64_t v79;
  Class isa;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  unint64_t v90;
  Class *v91;
  Class v92;
  Class v93;
  uint64_t v94;
  uint64_t v95;
  Class *v96;
  Class v97;
  Class v98;
  BOOL v99;
  uint64_t v100;
  char v101;
  Class *v102;
  Class v103;
  Class v104;
  uint64_t v105;
  BOOL v106;
  Class v107;
  uint64_t v108;
  Class *v109;
  Class v110;
  Class v111;
  uint64_t v112;
  Class *v113;
  Class v114;
  Class v115;
  uint64_t v116;
  unint64_t v117;
  CHWorkoutDetailHeartRateTableViewCell *v118;
  uint64_t *v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  uint64_t v125;
  Swift::Int v126;
  uint64_t v127;
  uint64_t v128;
  Swift::Int v129;
  char *v130;
  void (*v131)(char *, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char v136;
  char v137;
  void (*v138)(char *, uint64_t);
  uint64_t v139;
  uint64_t v140;
  char *v141;
  void (*v142)(char *, uint64_t, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v143;
  uint64_t v144;
  unint64_t v145;
  objc_class *v146;
  objc_class *v147;
  Class *v148;
  unint64_t v149;
  void (*v150)(char *, uint64_t);
  SEL v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  const char *v158;
  void *v159;
  void *v160;
  void *v161;
  void *v162;
  void *v163;
  void *v164;
  void (*v165)(char *, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v166;
  uint64_t v167;
  Swift::Int v168;
  Swift::Int v169;
  char *v170;
  Swift::Int v171;
  char *v172;
  CHWorkoutDetailHeartRateTableViewCell *v173;
  CHWorkoutDetailHeartRateTableViewCell *v174;
  char *v175;
  char *v176;
  uint64_t v177;
  Swift::Int v178;
  Swift::Int v179;
  char *v180;
  char *v181;
  char *v182;
  Swift::Int v183;
  Swift::Int v184;
  char *v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t (*v190)(char *, char *);
  uint64_t v191;
  _QWORD *v192;

  v190 = a1;
  v191 = a2;
  v3 = type metadata accessor for DateComponents(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v182 = (char *)&v167 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v185 = (char *)&v167 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v167 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v167 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v167 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v167 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v167 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v167 - v24;
  v189 = v2;
  v26 = v2[1];
  v27 = _minimumMergeRunLength(_:)(v26);
  if (v27 >= v26)
  {
    if (v26 < 0)
      goto LABEL_147;
    if (v26)
      sub_100420CEC(0, v26, 1, v190, v191);
  }
  else
  {
    v171 = v27;
    if (v26 >= 0)
      v35 = v26;
    else
      v35 = v26 + 1;
    if (v26 > -2)
    {
      v192 = (_QWORD *)v4;
      v172 = v25;
      if (v26 < 2)
      {
        v38 = (_QWORD *)v4;
        v40 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
        v186 = (unint64_t)_swiftEmptyArrayStorage
             + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
        if (v26 != 1)
        {
          v74 = _swiftEmptyArrayStorage[2];
          v42 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
          v43 = v187;
          goto LABEL_110;
        }
        v170 = v22;
        v175 = v19;
        v176 = v16;
        v180 = v13;
        v181 = v10;
        v173 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
      }
      else
      {
        v170 = v22;
        v175 = v19;
        v176 = v16;
        v180 = v13;
        v181 = v10;
        v36 = v35 >> 1;
        v37 = static Array._allocateBufferUninitialized(minimumCapacity:)(v35 >> 1, v3);
        v38 = (_QWORD *)v4;
        *(_QWORD *)(v37 + 16) = v36;
        v39 = *(unsigned __int8 *)(v4 + 80);
        v173 = (CHWorkoutDetailHeartRateTableViewCell *)v37;
        v186 = v37 + ((v39 + 32) & ~v39);
      }
      v41 = 0;
      v42 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
      v188 = v3;
      v43 = v187;
      while (1)
      {
        v44 = v41;
        if (v41 + 1 >= v26)
        {
          v54 = v41 + 1;
        }
        else
        {
          v183 = v26;
          v45 = *v189;
          v46 = v38[9];
          v179 = v41 + 1;
          v47 = (void (*)(char *, uint64_t, uint64_t))v38[2];
          v48 = v41;
          v49 = v172;
          v50 = v38;
          v47(v172, v45 + v46 * (v41 + 1), v3);
          v177 = v45;
          v184 = v46;
          v51 = v45 + v46 * v48;
          v52 = v170;
          v47(v170, v51, v3);
          LODWORD(v187) = v190(v49, v52);
          if (v43)
          {
            v165 = (void (*)(char *, uint64_t))v50[1];
            v165(v52, v3);
            v165(v49, v3);
            goto LABEL_124;
          }
          v174 = v42;
          v53 = (void (*)(char *, uint64_t))v50[1];
          v53(v52, v3);
          v53(v49, v3);
          v54 = v48 + 2;
          v26 = v183;
          v44 = v48;
          if (v48 + 2 < v183)
          {
            v169 = v48;
            v55 = v177;
            v178 = v184 * v54;
            v179 *= v184;
            while (1)
            {
              v56 = v54;
              v57 = v175;
              v47(v175, v55 + v178, v3);
              v58 = v176;
              v47(v176, v55 + v179, v3);
              v59 = v3;
              v60 = v190(v57, v58);
              v53(v58, v59);
              v53(v57, v59);
              if (((v187 ^ v60) & 1) != 0)
                break;
              v54 = v56 + 1;
              v26 = v183;
              v55 += v184;
              v3 = v188;
              if (v183 == v56 + 1)
              {
                v54 = v183;
                v44 = v169;
                goto LABEL_23;
              }
            }
            v3 = v188;
            v54 = v56;
            v44 = v169;
            v26 = v183;
          }
LABEL_23:
          v42 = v174;
          v38 = v192;
          if ((v187 & 1) != 0)
          {
            if (v54 < v44)
              goto LABEL_151;
            if (v44 < v54)
            {
              v61 = 0;
              v62 = v184 * (v54 - 1);
              v63 = v54 * v184;
              v64 = v44;
              v169 = v44;
              v65 = v44 * v184;
              do
              {
                if (v64 != v54 + v61 - 1)
                {
                  v187 = v43;
                  v68 = v177;
                  if (!v177)
                    goto LABEL_154;
                  v69 = v54;
                  v70 = v177 + v65;
                  v179 = v177 + v62;
                  v178 = v38[4];
                  ((void (*)(char *, uint64_t, uint64_t))v178)(v182, v177 + v65, v188);
                  if (v65 < v62 || v70 >= v68 + v63)
                  {
                    v66 = v68 + v65;
                    v67 = v179;
                    v3 = v188;
                    swift_arrayInitWithTakeFrontToBack(v66);
                  }
                  else
                  {
                    v3 = v188;
                    v67 = v179;
                    if (v65 != v62)
                      swift_arrayInitWithTakeBackToFront(v70);
                  }
                  ((void (*)(Swift::Int, char *, uint64_t))v178)(v67, v182, v3);
                  v38 = v192;
                  v43 = v187;
                  v54 = v69;
                }
                ++v64;
                --v61;
                v62 -= v184;
                v63 -= v184;
                v65 += v184;
              }
              while (v64 < v54 + v61);
              v42 = v174;
              v44 = v169;
              v26 = v183;
            }
          }
        }
        if (v54 >= v26)
          goto LABEL_46;
        if (__OFSUB__(v54, v44))
          goto LABEL_148;
        if (v54 - v44 >= v171)
        {
LABEL_46:
          if (v54 < v44)
            goto LABEL_146;
          goto LABEL_47;
        }
        if (__OFADD__(v44, v171))
          goto LABEL_149;
        v71 = v44 + v171 >= v26 ? v26 : v44 + v171;
        if (v71 < v44)
          break;
        if (v54 == v71)
          goto LABEL_46;
        v187 = v43;
        v174 = v42;
        v124 = (char *)v38[2];
        v177 = v38[9];
        v178 = (Swift::Int)v124;
        v125 = v177 * (v54 - 1);
        v126 = v54 * v177;
        v169 = v44;
        v168 = v71;
        do
        {
          v183 = v54;
          v127 = 0;
          v179 = v126;
          while (1)
          {
            v184 = v44;
            v128 = *v189;
            v129 = v126 + v127 + *v189;
            v130 = v180;
            v131 = (void (*)(char *, uint64_t, uint64_t))v178;
            ((void (*)(char *, Swift::Int, uint64_t))v178)(v180, v129, v3);
            v132 = v125;
            v133 = v125 + v127 + v128;
            v134 = v181;
            v131(v181, v133, v3);
            v135 = v187;
            v136 = v190(v130, v134);
            v187 = v135;
            if (v135)
            {
              v150 = (void (*)(char *, uint64_t))v192[1];
              v150(v134, v3);
              v150(v130, v3);
              swift_bridgeObjectRelease(v174, v151, v152, v153, v154, v155, v156, v157);
              goto LABEL_126;
            }
            v137 = v136;
            v138 = (void (*)(char *, uint64_t))v192[1];
            v138(v134, v3);
            v138(v130, v3);
            if ((v137 & 1) == 0)
              break;
            v139 = *v189;
            if (!*v189)
              goto LABEL_153;
            v125 = v132;
            v126 = v179;
            v140 = v139 + v179 + v127;
            v141 = (char *)(v139 + v132 + v127);
            v142 = (void (*)(char *, uint64_t, uint64_t))v192[4];
            v142(v185, v140, v188);
            swift_arrayInitWithTakeFrontToBack(v140);
            v3 = v188;
            v142(v141, (uint64_t)v185, v188);
            v127 -= v177;
            v44 = v184 + 1;
            if (v183 == v184 + 1)
              goto LABEL_104;
          }
          v125 = v132;
          v126 = v179;
LABEL_104:
          v54 = v183 + 1;
          v125 += v177;
          v126 += v177;
          v44 = v169;
        }
        while (v183 + 1 != v168);
        v54 = v168;
        v42 = v174;
        v43 = v187;
        if (v168 < v169)
          goto LABEL_146;
LABEL_47:
        if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0)
          v42 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147150(0, *(_QWORD *)v42->cellPadding + 1, 1, (char *)v42);
        v73 = *(_QWORD *)v42->cellPadding;
        v72 = *(_QWORD *)v42->cellInset;
        v74 = v73 + 1;
        v183 = v54;
        if (v73 >= v72 >> 1)
          v42 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147150((char *)(v72 > 1), v73 + 1, 1, (char *)v42);
        *(_QWORD *)v42->cellPadding = v74;
        v75 = v42 + 1;
        v76 = &v42[1].super.super.super.super.isa + 2 * v73;
        v77 = (objc_class *)v183;
        *v76 = (Class)v44;
        v76[1] = v77;
        if (v73)
        {
LABEL_52:
          v78 = v74 - 1;
          if (v74 >= 4)
          {
            v83 = (char *)v75 + 16 * v74;
            v84 = *((_QWORD *)v83 - 8);
            v85 = *((_QWORD *)v83 - 7);
            v89 = __OFSUB__(v85, v84);
            v86 = v85 - v84;
            if (v89)
              goto LABEL_131;
            v88 = *((_QWORD *)v83 - 6);
            v87 = *((_QWORD *)v83 - 5);
            v89 = __OFSUB__(v87, v88);
            v81 = v87 - v88;
            v82 = v89;
            if (v89)
              goto LABEL_132;
            v90 = v74 - 2;
            v91 = &v75[-1].super.super.super.super.isa + 2 * v74;
            v93 = *v91;
            v92 = v91[1];
            v89 = __OFSUB__(v92, v93);
            v94 = v92 - v93;
            if (v89)
              goto LABEL_134;
            v89 = __OFADD__(v81, v94);
            v95 = v81 + v94;
            if (v89)
              goto LABEL_137;
            if (v95 >= v86)
            {
              v113 = &v75->super.super.super.super.isa + 2 * v78;
              v115 = *v113;
              v114 = v113[1];
              v89 = __OFSUB__(v114, v115);
              v116 = v114 - v115;
              if (v89)
                goto LABEL_141;
              v106 = v81 < v116;
            }
            else
            {
LABEL_65:
              if ((v82 & 1) != 0)
                goto LABEL_133;
              v90 = v74 - 2;
              v96 = &v75[-1].super.super.super.super.isa + 2 * v74;
              v98 = *v96;
              v97 = v96[1];
              v99 = __OFSUB__(v97, v98);
              v100 = v97 - v98;
              v101 = v99;
              if (v99)
                goto LABEL_136;
              v102 = &v75->super.super.super.super.isa + 2 * v78;
              v104 = *v102;
              v103 = v102[1];
              v89 = __OFSUB__(v103, v104);
              v105 = v103 - v104;
              if (v89)
                goto LABEL_139;
              if (__OFADD__(v100, v105))
                goto LABEL_140;
              if (v100 + v105 < v81)
                goto LABEL_77;
              v106 = v81 < v105;
            }
            if (v106)
              v78 = v90;
          }
          else
          {
            if (v74 == 3)
            {
              isa = v42[1].super.super.super.super.isa;
              v79 = *(_QWORD *)v42[1].heartRateController;
              v89 = __OFSUB__(v79, isa);
              v81 = v79 - (_QWORD)isa;
              v82 = v89;
              goto LABEL_65;
            }
            v107 = v42[1].super.super.super.super.isa;
            v108 = *(_QWORD *)v42[1].heartRateController;
            v89 = __OFSUB__(v108, v107);
            v100 = v108 - (_QWORD)v107;
            v101 = v89;
LABEL_77:
            if ((v101 & 1) != 0)
              goto LABEL_135;
            v109 = &v75->super.super.super.super.isa + 2 * v78;
            v111 = *v109;
            v110 = v109[1];
            v89 = __OFSUB__(v110, v111);
            v112 = v110 - v111;
            if (v89)
              goto LABEL_138;
            if (v112 < v100)
              goto LABEL_94;
          }
          v117 = v78 - 1;
          if (v78 - 1 >= v74)
          {
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
            break;
          }
          if (!*v189)
            goto LABEL_152;
          v118 = v42;
          v119 = (uint64_t *)v75 + 2 * v117;
          v120 = *v119;
          v121 = &v75->super.super.super.super.isa + 2 * v78;
          v122 = v121[1];
          sub_100420F98(*v189 + v192[9] * *v119, *v189 + v192[9] * *v121, *v189 + v192[9] * v122, v186, (uint64_t (*)(_QWORD, _QWORD))v190, v191);
          if (v43)
          {
            v143 = v118;
            goto LABEL_125;
          }
          if (v122 < v120)
            goto LABEL_128;
          if (v78 > *(_QWORD *)v118->cellPadding)
            goto LABEL_129;
          *v119 = v120;
          *(_QWORD *)&v75->heartRateController[16 * v117] = v122;
          v123 = *(_QWORD *)v118->cellPadding;
          if (v78 >= v123)
            goto LABEL_130;
          v42 = v118;
          v74 = v123 - 1;
          memmove((char *)v75 + 16 * v78, v121 + 2, 16 * (v123 - 1 - v78));
          *(_QWORD *)v42->cellPadding = v123 - 1;
          if (v123 <= 2)
            goto LABEL_94;
          goto LABEL_52;
        }
        v74 = 1;
LABEL_94:
        v3 = v188;
        v26 = v189[1];
        v41 = v183;
        v38 = v192;
        if (v183 >= v26)
        {
          v40 = v173;
LABEL_110:
          v173 = v40;
          if (v74 >= 2)
          {
            v144 = *v189;
            do
            {
              v145 = v74 - 2;
              if (v74 < 2)
                goto LABEL_142;
              if (!v144)
                goto LABEL_155;
              v146 = (objc_class *)*((_QWORD *)&v42[1].super.super.super.super.isa + 2 * v145);
              v147 = *(objc_class **)&v42->cellInset[16 * v74];
              sub_100420F98(v144 + v192[9] * (_QWORD)v146, v144 + v192[9] * *(_QWORD *)&v42->cellPadding[16 * v74], v144 + v192[9] * (_QWORD)v147, v186, (uint64_t (*)(_QWORD, _QWORD))v190, v191);
              if (v43)
                break;
              if ((uint64_t)v147 < (uint64_t)v146)
                goto LABEL_143;
              if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0)
                v42 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100147754((uint64_t)v42);
              if (v145 >= *(_QWORD *)v42->cellPadding)
                goto LABEL_144;
              v148 = &v42[1].super.super.super.super.isa + 2 * v145;
              *v148 = v146;
              v148[1] = v147;
              v149 = *(_QWORD *)v42->cellPadding;
              if (v74 > v149)
                goto LABEL_145;
              memmove(&v42->cellPadding[16 * v74], (char *)&v42[1] + 16 * v74, 16 * (v149 - v74));
              *(_QWORD *)v42->cellPadding = v149 - 1;
              v74 = v149 - 1;
            }
            while (v149 > 2);
          }
LABEL_124:
          v143 = v42;
LABEL_125:
          swift_bridgeObjectRelease(v143, v28, v29, v30, v31, v32, v33, v34);
LABEL_126:
          v166 = v173;
          *(_QWORD *)v173->cellPadding = 0;
          swift_bridgeObjectRelease(v166, v158, v159, v160, v161, v162, v163, v164);
          return;
        }
      }
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
    }
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
}

uint64_t sub_100420CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t (*v44)(char *, char *);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v44 = a4;
  v45 = a5;
  v8 = type metadata accessor for DateComponents(0);
  v9 = __chkstk_darwin(v8);
  v47 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v42 = (char *)&v36 - v12;
  result = __chkstk_darwin(v11);
  v16 = (char *)&v36 - v14;
  v38 = a2;
  if (a3 != a2)
  {
    v17 = *(_QWORD *)(v15 + 72);
    v48 = v15;
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v40 = v17;
    v41 = v18;
    v50 = v17 * a3;
    v51 = v17 * (a3 - 1);
    v19 = v42;
    v37 = a1;
    v39 = (char *)&v36 - v14;
    while (2)
    {
      v20 = 0;
      v21 = a1;
      v22 = v52;
      v43 = a3;
      while (1)
      {
        v46 = v21;
        v24 = *v49;
        v25 = v8;
        v26 = v8;
        v27 = v41;
        v41(v16, v50 + v20 + *v49, v25);
        v27(v19, v51 + v20 + v24, v26);
        v28 = v44(v16, v19);
        v52 = v22;
        if (v22)
        {
          v35 = *(void (**)(char *, uint64_t))(v48 + 8);
          v35(v19, v26);
          return ((uint64_t (*)(char *, uint64_t))v35)(v16, v26);
        }
        v29 = v28;
        v30 = *(void (**)(char *, uint64_t))(v48 + 8);
        v30(v19, v26);
        result = ((uint64_t (*)(char *, uint64_t))v30)(v16, v26);
        v8 = v26;
        if ((v29 & 1) == 0)
          break;
        v22 = v52;
        v31 = *v49;
        if (!*v49)
        {
          __break(1u);
          return result;
        }
        v32 = v31 + v50 + v20;
        v33 = v31 + v51 + v20;
        v34 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 32);
        v34(v47, v32, v26);
        swift_arrayInitWithTakeFrontToBack(v32);
        result = ((uint64_t (*)(uint64_t, char *, uint64_t))v34)(v33, v47, v26);
        v16 = v39;
        v20 -= v40;
        v21 = v46 + 1;
        v19 = v42;
        v23 = v43;
        if (v43 == v46 + 1)
          goto LABEL_10;
      }
      v23 = v43;
      v16 = v39;
      v22 = v52;
LABEL_10:
      v52 = v22;
      a3 = v23 + 1;
      v51 += v40;
      v50 += v40;
      a1 = v37;
      if (a3 != v38)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_100420F98(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(_QWORD, _QWORD), uint64_t a6)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  char v33;
  char v34;
  void (*v35)(char *, uint64_t);
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v41;
  void (*v42)(_QWORD, unint64_t, uint64_t);
  unint64_t v43;
  void (*v44)(_QWORD, unint64_t, uint64_t);
  uint64_t v45;
  unint64_t v46;
  void (*v47)(_QWORD, _QWORD, _QWORD);
  char v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  void (*v52)(_QWORD, _QWORD);
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  void (*v56)(char *, uint64_t);
  void (*v57)(_QWORD, _QWORD);
  uint64_t result;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void (*v62)(_QWORD, unint64_t, uint64_t);
  uint64_t v63;
  void (*v64)(_QWORD, _QWORD, _QWORD);
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(_QWORD, _QWORD);
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;

  v7 = v6;
  v68 = a6;
  v69 = a5;
  v12 = type metadata accessor for DateComponents(0);
  __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - v15;
  __chkstk_darwin(v17);
  v21 = (char *)&v59 - v20;
  v70 = v22;
  v23 = *(_QWORD *)(v22 + 72);
  if (!v23)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v23 == -1)
    goto LABEL_68;
  v24 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v23 == -1)
    goto LABEL_69;
  v25 = (uint64_t)(a2 - a1) / v23;
  v73 = a1;
  v72 = a4;
  v26 = v24 / v23;
  if (v25 >= v24 / v23)
  {
    if ((v26 & 0x8000000000000000) == 0)
    {
      v28 = a3;
      v29 = v26 * v23;
      v63 = v19;
      v64 = v18;
      if (a4 < a2 || a2 + v29 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v39 = a4 + v29;
      v71 = a4 + v29;
      v73 = a2;
      if (v29 >= 1 && a1 < a2)
      {
        v41 = -v23;
        v42 = *(void (**)(_QWORD, unint64_t, uint64_t))(v70 + 16);
        v61 = a1;
        v62 = v42;
        v59 = v41;
        v60 = a4;
        v65 = v12;
        while (1)
        {
          v43 = v7;
          v44 = v62;
          v45 = v63;
          v62(v63, v39 + v41, v12);
          v66 = a2;
          v46 = a2 + v41;
          v47 = v64;
          v44(v64, a2 + v41, v12);
          v48 = v69(v45, v47);
          v67 = v43;
          if (v43)
            break;
          v49 = v48;
          v50 = v12;
          v51 = v28 + v41;
          v52 = *(void (**)(_QWORD, _QWORD))(v70 + 8);
          v52(v47, v50);
          v52(v45, v50);
          if ((v49 & 1) != 0)
          {
            if (v28 < v66 || v28 + v41 >= v66)
            {
              v51 = v28 + v41;
              swift_arrayInitWithTakeFrontToBack(v28 + v41);
              v7 = v67;
            }
            else
            {
              v7 = v67;
              v51 = v28 + v41;
              if (v28 != v66)
                swift_arrayInitWithTakeBackToFront(v28 + v41);
            }
            v41 = v59;
            v54 = v60;
            v73 += v59;
            v55 = v61;
          }
          else
          {
            v53 = v71;
            v71 += v41;
            if (v28 < v53 || v51 >= v53)
            {
              swift_arrayInitWithTakeFrontToBack(v28 + v41);
              v46 = v66;
              v7 = v67;
            }
            else
            {
              v7 = v67;
              if (v28 != v53)
                swift_arrayInitWithTakeBackToFront(v28 + v41);
              v46 = v66;
            }
            v54 = v60;
            v55 = v61;
            v41 = v59;
          }
          v39 = v71;
          if (v71 > v54)
          {
            a2 = v46;
            v28 = v51;
            v12 = v65;
            if (v46 > v55)
              continue;
          }
          goto LABEL_66;
        }
        v57 = *(void (**)(_QWORD, _QWORD))(v70 + 8);
        v57(v47, v12);
        v57(v45, v12);
      }
      goto LABEL_66;
    }
  }
  else
  {
    v67 = a3;
    if ((v25 & 0x8000000000000000) == 0)
    {
      v27 = v25 * v23;
      if (a4 < a1 || a1 + v27 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4);
      }
      else if (a4 != a1)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v66 = a4 + v27;
      v71 = a4 + v27;
      if (v27 >= 1 && a2 < v67)
      {
        v64 = *(void (**)(_QWORD, _QWORD, _QWORD))(v70 + 16);
        while (1)
        {
          v31 = v23;
          v32 = (void (*)(char *, unint64_t, uint64_t))v64;
          v64(v21, a2, v12);
          v32(v16, a4, v12);
          v33 = v69(v21, v16);
          if (v6)
            break;
          v34 = v33;
          v35 = *(void (**)(char *, uint64_t))(v70 + 8);
          v35(v16, v12);
          v35(v21, v12);
          v36 = v73;
          if ((v34 & 1) != 0)
          {
            v23 = v31;
            v37 = a2 + v31;
            if (v73 < a2 || v73 >= v37)
            {
              swift_arrayInitWithTakeFrontToBack(v73);
            }
            else if (v73 == a2)
            {
              v36 = a2;
            }
            else
            {
              swift_arrayInitWithTakeBackToFront(v73);
            }
          }
          else
          {
            v23 = v31;
            v38 = v72 + v31;
            if (v73 < v72 || v73 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack(v73);
            }
            else if (v73 != v72)
            {
              swift_arrayInitWithTakeBackToFront(v73);
            }
            v72 = v38;
            v37 = a2;
          }
          v73 = v36 + v23;
          a4 = v72;
          if (v72 < v66)
          {
            a2 = v37;
            if (v37 < v67)
              continue;
          }
          goto LABEL_66;
        }
        v56 = *(void (**)(char *, uint64_t))(v70 + 8);
        v56(v16, v12);
        v56(v21, v12);
      }
LABEL_66:
      sub_1001472FC(&v73, &v72, (uint64_t *)&v71);
      return 1;
    }
  }
LABEL_70:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for MetricDataProviderTimeScale()
{
  return &type metadata for MetricDataProviderTimeScale;
}

uint64_t sub_100421550(uint64_t result)
{
  Swift::String v1;
  Swift::String v2;
  void *object;
  Swift::String v4;

  if (result < 0)
  {
    _StringGuts.grow(_:)(77);
    v1._countAndFlagsBits = 0xD000000000000038;
    v1._object = (void *)0x8000000100693120;
    String.append(_:)(v1);
    v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v2._object;
    String.append(_:)(v2);
    swift_bridgeObjectRelease(object);
    v4._object = (void *)0x8000000100693160;
    v4._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v4);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "FitnessApp/MetricDataProviderTimeScale.swift", 44, 2, 28, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_10042163C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t result;
  Swift::String v27;
  Swift::String v28;
  void *object;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v33 = a1;
  v1 = type metadata accessor for Date(0);
  v31 = *(_QWORD *)(v1 - 8);
  v32 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Calendar.Component(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Calendar(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter(v10);
  v13 = enum case for Calendar.Component.year(_:);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v15 = v14(v7, enum case for Calendar.Component.year(_:), v4);
  Date.init()(v15);
  v16 = Calendar.component(_:from:)(v7, v3);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v3, v32);
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v7, v4);
  v18 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  v19 = v18(v12, v8);
  static Calendar.current.getter(v19);
  v14(v7, v13, v4);
  v20 = Calendar.component(_:from:)(v7, v33);
  v17(v7, v4);
  v18(v12, v8);
  v21 = v20 - 1;
  if (__OFSUB__(v20, 1))
  {
    __break(1u);
  }
  else
  {
    v22 = _swiftEmptyArrayStorage;
    if (v21 >= v16)
      return (uint64_t)v22;
    while ((v16 & 0x8000000000000000) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
        v22 = sub_100140364(0, v22[2] + 1, 1, v22);
      v24 = v22[2];
      v23 = v22[3];
      if (v24 >= v23 >> 1)
        v22 = sub_100140364((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
      v25 = &v22[2 * v24];
      v25[4] = v16;
      v22[2] = v24 + 1;
      *((_BYTE *)v25 + 40) = (unint64_t)v16-- < 3;
      if (v21 >= v16)
        return (uint64_t)v22;
    }
  }
  v35 = 0;
  v36 = 0xE000000000000000;
  _StringGuts.grow(_:)(77);
  v27._countAndFlagsBits = 0xD000000000000038;
  v27._object = (void *)0x8000000100693120;
  String.append(_:)(v27);
  v34 = v16;
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v28._object;
  String.append(_:)(v28);
  swift_bridgeObjectRelease(object);
  v30._object = (void *)0x8000000100693160;
  v30._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v30);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v35, v36, "FitnessApp/MetricDataProviderTimeScale.swift", 44, 2, 28, 0);
  __break(1u);
  return result;
}

unint64_t sub_100421950()
{
  unint64_t result;

  result = qword_100832FA8;
  if (!qword_100832FA8)
  {
    result = swift_getWitnessTable(&unk_10063BDD4, &type metadata for AwardEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100832FA8);
  }
  return result;
}

unint64_t sub_100421998()
{
  unint64_t result;

  result = qword_100832FB0[0];
  if (!qword_100832FB0[0])
  {
    result = swift_getWitnessTable(&unk_10063BE34, &type metadata for AwardEntityQuery);
    atomic_store(result, qword_100832FB0);
  }
  return result;
}

_QWORD *sub_1004219E0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    result = (_QWORD *)sub_1004D3554(a1);
    v4 = (uint64_t)result;
    v6 = v5;
    v7 = 0;
    v8 = a1 + 64;
    v19 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(a1 + 32))
    {
      v10 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(a1 + 36) != v6)
        goto LABEL_23;
      v20 = v7;
      v11 = *(id *)(*(_QWORD *)(a1 + 56) + 8 * v4);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v12 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
      result = (_QWORD *)specialized ContiguousArray._endMutation()(v13);
      v9 = 1 << *(_BYTE *)(a1 + 32);
      if (v4 >= v9)
        goto LABEL_24;
      v14 = *(_QWORD *)(v8 + 8 * v10);
      if ((v14 & (1 << v4)) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(a1 + 36) != v6)
        goto LABEL_26;
      v15 = v14 & (-2 << (v4 & 0x3F));
      if (v15)
      {
        v9 = __clz(__rbit64(v15)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v16 = v10 + 1;
        v17 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v17)
        {
          v18 = *(_QWORD *)(v8 + 8 * v16);
          if (v18)
          {
LABEL_18:
            v9 = __clz(__rbit64(v18)) + (v16 << 6);
          }
          else
          {
            while (v17 - 2 != v10)
            {
              v18 = *(_QWORD *)(a1 + 80 + 8 * v10++);
              if (v18)
              {
                v16 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v7 = v20 + 1;
      v4 = v9;
      if (v20 + 1 == v19)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_100421BBC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_100833050 + dword_100833050);
  v3 = (_QWORD *)swift_task_alloc(unk_100833054);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1001A48BC;
  return v5(a1);
}

uint64_t sub_100421C1C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_100833048 + dword_100833048);
  v2 = (_QWORD *)swift_task_alloc(unk_10083304C);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_10042777C;
  return v4();
}

unint64_t sub_100421C7C()
{
  unint64_t result;

  result = qword_100832FC8;
  if (!qword_100832FC8)
  {
    result = swift_getWitnessTable(&unk_10063BE5C, &type metadata for AwardEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100832FC8);
  }
  return result;
}

unint64_t sub_100421CC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100832FD0;
  if (!qword_100832FD0)
  {
    v1 = sub_100007050(qword_100832FD8);
    sub_10017123C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_100832FD0);
  }
  return result;
}

uint64_t sub_100421D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100421D9C();
  *v5 = v2;
  v5[1] = sub_1000DA0E4;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_100421D9C()
{
  unint64_t result;

  result = qword_100832FF0;
  if (!qword_100832FF0)
  {
    result = swift_getWitnessTable(&unk_10063BD7C, &type metadata for AwardEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100832FF0);
  }
  return result;
}

uint64_t sub_100421DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100833040 + dword_100833040);
  v6 = (_QWORD *)swift_task_alloc(unk_100833044);
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_100100D3C;
  return v8(a2, a3);
}

id sub_100421E50()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AwardIntentDataProvider()), "init");
  qword_10086A930 = (uint64_t)result;
  return result;
}

char *sub_100421E7C()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  NSObject *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v17;

  v1 = OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_dataLoadingGroup;
  v2 = v0;
  *(_QWORD *)&v0[v1] = dispatch_group_create();
  v3 = type metadata accessor for AAUIAwardsDataProvider(0);
  v4 = AAUIAwardsDataProvider.__allocating_init(healthStore:layoutMode:)(objc_msgSend(objc_allocWithZone((Class)HKHealthStore), "init"), 0);
  v5 = (uint64_t *)&v2[OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider];
  v5[3] = v3;
  v5[4] = (uint64_t)&protocol witness table for AAUIAwardsDataProvider;
  *v5 = v4;

  v17.receiver = v2;
  v17.super_class = (Class)type metadata accessor for AwardIntentDataProvider();
  v6 = (char *)objc_msgSendSuper2(&v17, "init");
  v7 = *(NSObject **)&v6[OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_dataLoadingGroup];
  v8 = v6;
  dispatch_group_enter(v7);
  v9 = &v8[OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider];
  v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider + 24];
  v11 = *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider + 32];
  sub_100016804(&v8[OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider], v10);
  v12 = sub_100426C00();
  v13 = v8;
  dispatch thunk of AAUIAwardsDataProviding.add(observer:)(v13, v12, v10, v11);

  v14 = *((_QWORD *)v9 + 3);
  v15 = *((_QWORD *)v9 + 4);
  sub_100016804(v9, v14);
  dispatch thunk of AAUIAwardsDataProviding.activate(isFitnessPlusSubscriber:)(1, v14, v15);

  return v13;
}

uint64_t sub_100422120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  const char *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  _QWORD *v20;
  const char *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  CHWorkoutDetailHeartRateTableViewCell *v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  id v74;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v76;
  unint64_t v77;
  uint64_t v78;
  _BOOL8 v79;
  uint64_t v80;
  char v81;
  unint64_t v82;
  char v83;
  uint64_t *v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  SEL v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t result;
  CHWorkoutDetailHeartRateTableViewCell *v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int v102;
  char *v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  CHWorkoutDetailHeartRateTableViewCell *v116;
  unint64_t v117;
  uint64_t v118;
  _QWORD *v119;

  v1 = type metadata accessor for DispatchTimeInterval(0);
  v112 = *(_QWORD *)(v1 - 8);
  v113 = v1;
  __chkstk_darwin(v1);
  v111 = (CHWorkoutDetailHeartRateTableViewCell **)((char *)&v99 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for DispatchTime(0);
  v109 = *(_QWORD *)(v3 - 8);
  v110 = v3;
  __chkstk_darwin(v3);
  v108 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v107 = (char *)&v99 - v6;
  v7 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v115 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (CHWorkoutDetailHeartRateTableViewCell *)static AAUIAwardsDataProviderSection.allCases.getter(v10);
  v106 = *(_QWORD *)v11->cellPadding;
  if (!v106)
  {
    swift_bridgeObjectRelease(v11, v12, v13, v14, v15, v16, v17, v18);
    v20 = _swiftEmptyDictionarySingleton;
LABEL_33:
    swift_bridgeObjectRetain(v20);
    v97 = sub_1004219E0(v96);
    swift_bridgeObjectRelease_n(v20, 2);
    return (uint64_t)v97;
  }
  v19 = 0;
  v104 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_dataLoadingGroup);
  v105 = (_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider);
  v20 = _swiftEmptyDictionarySingleton;
  v103 = (char *)v11 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v102 = enum case for DispatchTimeInterval.seconds(_:);
  v101 = v7;
  v100 = v8;
  v99 = v11;
  while (1)
  {
    if (v19 >= *(_QWORD *)v11->cellPadding)
      goto LABEL_37;
    v28 = *(_QWORD *)(v8 + 72);
    v114 = v19;
    v29 = v115;
    v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 16))(v115, &v103[v28 * v19], v7);
    v31 = v108;
    static DispatchTime.now()(v30);
    v33 = v111;
    v32 = v112;
    *v111 = 3;
    v34 = v113;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v32 + 104))(v33, v102, v113);
    v35 = v107;
    + infix(_:_:)(v31, v33);
    (*(void (**)(_QWORD *, uint64_t))(v32 + 8))(v33, v34);
    v36 = v110;
    v37 = *(void (**)(char *, uint64_t))(v109 + 8);
    v37(v31, v110);
    OS_dispatch_group.wait(timeout:)(v35);
    v37(v35, v36);
    v38 = v105[3];
    v39 = v105[4];
    sub_100016804(v105, v38);
    v40 = dispatch thunk of AAUIAwardsDataProviding.achievements(forSection:)(v29, v38, v39);
    v48 = v40;
    if (!((unint64_t)v40 >> 62))
    {
      v49 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v49)
        break;
      goto LABEL_3;
    }
    v88 = v40 < 0 ? v40 : v40 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v40);
    v49 = _CocoaArrayWrapper.endIndex.getter(v88);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v48, v89, v90, v91, v92, v93, v94, v95);
    if (v49)
      break;
LABEL_3:
    v19 = v114 + 1;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v48, v41, v42, v43, v44, v45, v46, v47);
    v8 = v100;
    v7 = v101;
    (*(void (**)(char *, uint64_t))(v100 + 8))(v115, v101);
    v11 = v99;
    if (v19 == v106)
    {
      swift_bridgeObjectRelease(v99, v21, v22, v23, v24, v25, v26, v27);
      goto LABEL_33;
    }
  }
  v116 = (CHWorkoutDetailHeartRateTableViewCell *)v48;
  v117 = v48 & 0xC000000000000001;
  v50 = 4;
  while (1)
  {
    v66 = v117
        ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v50 - 4, v48)
        : *(id *)(v48 + 8 * v50);
    v67 = v66;
    if (__OFADD__(v50 - 4, 1))
      break;
    v68 = objc_msgSend(v66, "template");
    v69 = objc_msgSend(v68, "uniqueName");

    if (!v69)
      goto LABEL_38;
    v118 = v50 - 3;
    v70 = v49;
    v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
    v73 = v72;

    v74 = v67;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v20);
    v119 = v20;
    v77 = sub_100438F74(v71, (uint64_t)v73);
    v78 = v20[2];
    v79 = (v76 & 1) == 0;
    v80 = v78 + v79;
    if (__OFADD__(v78, v79))
      goto LABEL_35;
    v81 = v76;
    if (v20[3] >= v80)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v20 = v119;
        if ((v76 & 1) != 0)
          goto LABEL_8;
      }
      else
      {
        sub_100403C7C();
        v20 = v119;
        if ((v81 & 1) != 0)
          goto LABEL_8;
      }
    }
    else
    {
      sub_1003FC51C(v80, isUniquelyReferenced_nonNull_native);
      v82 = sub_100438F74(v71, (uint64_t)v73);
      if ((v81 & 1) != (v83 & 1))
        goto LABEL_39;
      v77 = v82;
      v20 = v119;
      if ((v81 & 1) != 0)
      {
LABEL_8:
        v51 = v20[7];

        *(_QWORD *)(v51 + 8 * v77) = v74;
        goto LABEL_9;
      }
    }
    v20[(v77 >> 6) + 8] |= 1 << v77;
    v84 = (uint64_t *)(v20[6] + 16 * v77);
    *v84 = v71;
    v84[1] = (uint64_t)v73;
    *(_QWORD *)(v20[7] + 8 * v77) = v74;
    v85 = v20[2];
    v86 = __OFADD__(v85, 1);
    v87 = v85 + 1;
    if (v86)
      goto LABEL_36;
    v20[2] = v87;
    swift_bridgeObjectRetain(v73);
LABEL_9:

    swift_bridgeObjectRelease(v73, v52, v53, v54, v55, v56, v57, v58);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000, v59, v60, v61, v62, v63, v64, v65);
    ++v50;
    v49 = v70;
    v48 = (uint64_t)v116;
    if (v118 == v70)
      goto LABEL_3;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void *sub_100422634(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  void *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;

  v3 = v2;
  v6 = type metadata accessor for DispatchTimeInterval(0);
  v60 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for DispatchTime(0);
  v59 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v58 = (char *)&v51 - v13;
  v14 = sub_100047110(&qword_100828318);
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v61 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = a1;
  v63 = a2;
  v20 = sub_100038CA0();
  v21 = (_QWORD *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(47, 0xE100000000000000, 1, 1, &type metadata for String, v20);
  v22 = v21;
  v23 = v21[2];
  if (!v23)
    goto LABEL_4;
  v54 = v9;
  v55 = v6;
  v56 = v3;
  v57 = v17;
  v24 = v21[4];
  v25 = v21[5];
  v26 = v21[6];
  v27 = v21[7];
  v28 = (uint64_t)&v21[4 * v23 + 4];
  v29 = *(_QWORD *)(v28 - 32);
  v52 = *(_QWORD *)(v28 - 24);
  v53 = v29;
  v30 = *(_QWORD *)(v28 - 8);
  v51 = *(_QWORD *)(v28 - 16);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v22);
  v31 = static String._fromSubstring(_:)(v24, v25, v26, v27);
  v33 = v32;
  swift_bridgeObjectRelease(v27);
  v34 = sub_10052F2A0(v31, v33);
  if (v34 == 8)
  {
    v21 = (_QWORD *)v30;
LABEL_4:
    swift_bridgeObjectRelease(v21);
    return 0;
  }
  sub_10052DE10(v34);
  v37 = v18;
  v38 = v57;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v57) != 1)
  {
    v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v61, v16, v38);
    v40 = v56;
    static DispatchTime.now()(v39);
    *v8 = 3;
    v41 = v60;
    v42 = v55;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v60 + 104))(v8, enum case for DispatchTimeInterval.seconds(_:), v55);
    v43 = v58;
    + infix(_:_:)(v12, v8);
    (*(void (**)(_QWORD *, uint64_t))(v41 + 8))(v8, v42);
    v44 = *(void (**)(char *, uint64_t))(v59 + 8);
    v45 = v54;
    v44(v12, v54);
    OS_dispatch_group.wait(timeout:)(v43);
    v44(v43, v45);
    v46 = (_QWORD *)(v40 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider);
    v47 = *(_QWORD *)(v40 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider + 24);
    v48 = *(_QWORD *)(v40 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider + 32);
    sub_100016804(v46, v47);
    v49 = v61;
    v50 = dispatch thunk of AAUIAwardsDataProviding.achievements(forSection:)(v61, v47, v48);
    swift_bridgeObjectRetain(v30);
    v35 = sub_100426A04(v50, v53, v52, v51, v30);
    swift_bridgeObjectRelease(v50);
    swift_bridgeObjectRelease_n(v30, 2);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v49, v38);
    return v35;
  }
  swift_bridgeObjectRelease(v30);
  sub_10001BE90((uint64_t)v16, &qword_100828318);
  return 0;
}

