void sub_1005B3134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _BYTE v18[24];

  v6 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v6);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v12 = swift_allocObject(&unk_1007AC510, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v10);
    type metadata accessor for MainActor(0);
    swift_retain(v12);
    v14 = static MainActor.shared.getter(v13);
    v15 = (_QWORD *)swift_allocObject(a2, 40, 7);
    v15[2] = v14;
    v15[3] = &protocol witness table for MainActor;
    v15[4] = v12;
    swift_release(v12);
    v16 = sub_10020D9C0((uint64_t)v8, a3, (uint64_t)v15);
    swift_release(v16);

  }
}

double sub_1005B3278()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  double result;
  uint64_t v25;

  ObjectType = swift_getObjectType(v0);
  v2 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v7 = swift_allocObject(&unk_1007AC510, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, v0);
  type metadata accessor for MainActor(0);
  swift_retain(v7);
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_1007AC678, 48, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v7;
  v10[5] = ObjectType;
  swift_release(v7);
  v11 = sub_10020D9C0((uint64_t)v4, (uint64_t)&unk_10083C588, (uint64_t)v10);
  v12 = swift_release(v11);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v6)(v4, 1, 1, v5, v12);
  v13 = swift_allocObject(&unk_1007AC510, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v0);
  swift_retain(v13);
  v15 = static MainActor.shared.getter(v14);
  v16 = (_QWORD *)swift_allocObject(&unk_1007AC6A0, 40, 7);
  v16[2] = v15;
  v16[3] = &protocol witness table for MainActor;
  v16[4] = v13;
  swift_release(v13);
  v17 = sub_10020D9C0((uint64_t)v4, (uint64_t)&unk_10083C598, (uint64_t)v16);
  v18 = swift_release(v17);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v6)(v4, 1, 1, v5, v18);
  v19 = swift_allocObject(&unk_1007AC510, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v0);
  swift_retain(v19);
  v21 = static MainActor.shared.getter(v20);
  v22 = (_QWORD *)swift_allocObject(&unk_1007AC6C8, 40, 7);
  v22[2] = v21;
  v22[3] = &protocol witness table for MainActor;
  v22[4] = v19;
  swift_release(v19);
  v23 = sub_10020D9C0((uint64_t)v4, (uint64_t)&unk_10083C5A0, (uint64_t)v22);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

id sub_1005B34BC(CHWorkoutDetailHeartRateTableViewCell *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  const char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  id result;
  void *v35;
  id v36;
  NSIndexSet *v37;
  void *v38;
  void *v39;
  void *v40;
  double v41;
  double v42;
  uint64_t Strong;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;

  v2 = v1;
  v4 = type metadata accessor for IndexSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v45 - v15;
  __chkstk_darwin(v17);
  v48 = (char *)&v45 - v18;
  IndexSet.init()(v19);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v13, v16, v4);
  v20 = *(_QWORD *)a1->cellPadding;
  if (v20)
  {
    v46 = v16;
    v47 = v2;
    swift_bridgeObjectRetain(a1);
    v21 = 0;
    do
    {
      v22 = *((unsigned __int8 *)&a1[1].super.super.super.super.isa + v21);
      if (*((_BYTE *)&a1[1].super.super.super.super.isa + v21) && (_DWORD)v22 != 1)
      {
        if ((_DWORD)v22 == 2)
        {
          v22 = 2;
        }
        else if ((_DWORD)v22 == 3)
        {
          v22 = 3;
        }
        else
        {
          v22 = 0;
        }
      }
      ++v21;
      IndexSet.init(integer:)(v22);
      IndexSet.union(_:)(v7);
      v23 = *(void (**)(char *, uint64_t))(v5 + 8);
      v23(v7, v4);
      v23(v13, v4);
      v24 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v24(v13, v10, v4);
    }
    while (v20 != v21);
    swift_bridgeObjectRelease(a1, v25, v26, v27, v28, v29, v30, v31);
    v16 = v46;
    v2 = v47;
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  }
  v32 = v48;
  v24(v48, v13, v4);
  v33 = *(void (**)(char *, uint64_t))(v5 + 8);
  v33(v16, v4);
  result = objc_msgSend(v2, "collectionView");
  if (!result)
  {
    __break(1u);
    goto LABEL_24;
  }
  v35 = result;
  v36 = objc_msgSend(result, "window");

  result = objc_msgSend(v2, "collectionView");
  v38 = result;
  if (!v36)
  {
    if (result)
    {
      objc_msgSend(result, "reloadData");
      goto LABEL_19;
    }
LABEL_25:
    __break(1u);
    return result;
  }
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  IndexSet._bridgeToObjectiveC()(v37);
  v40 = v39;
  objc_msgSend(v38, "reloadSections:", v39);

  v38 = v40;
LABEL_19:

  v41 = *(double *)&v2[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_lastCollectionViewContentHeight];
  sub_1005C5EC8();
  if (v41 != v42)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_delegate]);
    if (Strong)
    {
      v44 = Strong;
      sub_10047B3D0();
      swift_unknownObjectRelease(v44);
    }
  }
  return (id)((uint64_t (*)(char *, uint64_t))v33)(v32, v4);
}

uint64_t sub_1005B37BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[35] = a4;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v4[36] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[37] = v6;
  v4[38] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v4[39] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[40] = v8;
  v4[41] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v4[42] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v4[43] = v10;
  v4[44] = v11;
  return swift_task_switch(sub_1005B3878, v10, v11);
}

id sub_1005B3878()
{
  _QWORD *v0;
  _QWORD *v1;
  id result;
  void *v3;
  unsigned int v4;
  uint64_t v5;
  void *Strong;
  _QWORD *v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *aBlock;
  void *aBlocka;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  uint64_t v35;

  v1 = v0;
  result = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(result, "isStandalonePhoneFitnessMode");

    if (v4)
    {
      v5 = v0[35] + 16;
      swift_beginAccess(v5, v0 + 20, 0, 0);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
      if (Strong)
      {

        v34 = (uint64_t (*)(void))((char *)&dword_100839190 + dword_100839190);
        v7 = (_QWORD *)swift_task_alloc(unk_100839194);
        v0[45] = v7;
        *v7 = v0;
        v7[1] = sub_1005B3C18;
        v8 = v34;
        return (id)v8();
      }
      aBlocka = v0 + 2;
      v31 = v0 + 32;
      swift_release(v0[42]);
      v9 = v0[41];
      v10 = v0[38];
      v33 = v0[40];
      v35 = v0[39];
      v11 = v0[36];
      v32 = v0[37];
      v20 = v0[35] + 16;
      sub_10002FB54();
      v14 = (void *)static OS_dispatch_queue.main.getter(v21);
      v15 = swift_allocObject(&unk_1007AC510, 24, 7);
      swift_beginAccess(v20, v0 + 23, 0, 0);
      v22 = (void *)swift_unknownObjectWeakLoadStrong(v20);
      swift_unknownObjectWeakInit(v15 + 16);

      v0[7] = v15;
      v17 = v0 + 7;
      v1[6] = sub_1005B6E9C;
      v1[2] = _NSConcreteStackBlock;
      v1[3] = 1107296256;
      v1[4] = sub_10002D0F8;
      v1[5] = &unk_1007AC758;
      v18 = _Block_copy(aBlocka);
      swift_retain(v15);
      static DispatchQoS.unspecified.getter(v23);
      v1[32] = &_swiftEmptyArrayStorage;
    }
    else
    {
      aBlock = v0 + 8;
      v31 = v0 + 33;
      v9 = v0[41];
      v10 = v0[38];
      v33 = v0[40];
      v35 = v0[39];
      v11 = v0[36];
      v32 = v0[37];
      v12 = v0[35];
      swift_release(v0[42]);
      sub_10002FB54();
      v14 = (void *)static OS_dispatch_queue.main.getter(v13);
      v15 = swift_allocObject(&unk_1007AC510, 24, 7);
      swift_beginAccess(v12 + 16, v0 + 26, 0, 0);
      v16 = (void *)swift_unknownObjectWeakLoadStrong(v12 + 16);
      swift_unknownObjectWeakInit(v15 + 16);

      v0[13] = v15;
      v17 = v0 + 13;
      v1[12] = sub_1005B6E7C;
      v1[8] = _NSConcreteStackBlock;
      v1[9] = 1107296256;
      v1[10] = sub_10002D0F8;
      v1[11] = &unk_1007AC730;
      v18 = _Block_copy(aBlock);
      swift_retain(v15);
      static DispatchQoS.unspecified.getter(v19);
      v1[33] = &_swiftEmptyArrayStorage;
    }
    v24 = sub_10002FAC0();
    v25 = sub_100047110(&qword_100828C80);
    v26 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(v31, v25, v26, v11, v24);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v10, v18);
    _Block_release(v18);

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v35);
    v27 = *v17;
    swift_release(v15);
    swift_release(v27);
    v28 = v1[38];
    swift_task_dealloc(v1[41]);
    swift_task_dealloc(v28);
    v8 = (uint64_t (*)(void))v1[1];
    return (id)v8();
  }
  __break(1u);
  return result;
}

uint64_t sub_1005B3C18(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 360);
  *(_QWORD *)(v3 + 368) = a1;
  *(_BYTE *)(v3 + 376) = a2;
  swift_task_dealloc(v4);
  return swift_task_switch(sub_1005B3C74, *(_QWORD *)(v3 + 344), *(_QWORD *)(v3 + 352));
}

uint64_t sub_1005B3C74()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  __n128 v21;
  void *Strong;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_BYTE *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 368);
  swift_release(*(_QWORD *)(v0 + 336));
  if ((v1 & 1) != 0 || v2 > 9)
  {
    v4 = *(_QWORD *)(v0 + 328);
    v5 = *(_QWORD *)(v0 + 304);
    v34 = *(_QWORD *)(v0 + 320);
    v35 = *(_QWORD *)(v0 + 312);
    v6 = *(_QWORD *)(v0 + 288);
    v33 = *(_QWORD *)(v0 + 296);
    v20 = *(_QWORD *)(v0 + 280) + 16;
    sub_10002FB54();
    v32 = static OS_dispatch_queue.main.getter(v21);
    v9 = swift_allocObject(&unk_1007AC510, 24, 7);
    swift_beginAccess(v20, v0 + 184, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v20);
    swift_unknownObjectWeakInit(v9 + 16);

    *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 56) = v9;
    v12 = (uint64_t *)(v0 + 56);
    *(_QWORD *)(v0 + 24) = 1107296256;
    *(_QWORD *)(v0 + 32) = sub_10002D0F8;
    *(_QWORD *)(v0 + 40) = &unk_1007AC758;
    *(_QWORD *)(v0 + 48) = sub_1005B6E9C;
    v23 = _Block_copy((const void *)(v0 + 16));
    swift_retain(v9);
    static DispatchQoS.unspecified.getter(v24);
    *(_QWORD *)(v0 + 256) = &_swiftEmptyArrayStorage;
    v25 = sub_10002FAC0();
    v26 = sub_100047110(&qword_100828C80);
    v27 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 256, v26, v27, v6, v25);
    v18 = (void *)v32;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v4, v5, v23);
    v19 = v23;
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 368);
    v4 = *(_QWORD *)(v0 + 328);
    v5 = *(_QWORD *)(v0 + 304);
    v34 = *(_QWORD *)(v0 + 320);
    v35 = *(_QWORD *)(v0 + 312);
    v6 = *(_QWORD *)(v0 + 288);
    v33 = *(_QWORD *)(v0 + 296);
    v7 = *(_QWORD *)(v0 + 280) + 16;
    sub_10002FB54();
    v31 = static OS_dispatch_queue.main.getter(v8);
    v9 = swift_allocObject(&unk_1007AC510, 24, 7);
    swift_beginAccess(v7, v0 + 232, 0, 0);
    v10 = (void *)swift_unknownObjectWeakLoadStrong(v7);
    swift_unknownObjectWeakInit(v9 + 16);

    v11 = swift_allocObject(&unk_1007AC790, 32, 7);
    *(_QWORD *)(v0 + 152) = v11;
    v12 = (uint64_t *)(v0 + 152);
    *(_QWORD *)(v0 + 112) = _NSConcreteStackBlock;
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = v3;
    *(_QWORD *)(v0 + 120) = 1107296256;
    *(_QWORD *)(v0 + 128) = sub_10002D0F8;
    *(_QWORD *)(v0 + 136) = &unk_1007AC7A8;
    *(_QWORD *)(v0 + 144) = sub_1005B6EE0;
    v13 = _Block_copy((const void *)(v0 + 112));
    swift_retain(v9);
    static DispatchQoS.unspecified.getter(v14);
    *(_QWORD *)(v0 + 272) = &_swiftEmptyArrayStorage;
    v15 = sub_10002FAC0();
    v16 = sub_100047110(&qword_100828C80);
    v17 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 272, v16, v17, v6, v15);
    v18 = (void *)v31;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v4, v5, v13);
    v19 = v13;
  }
  _Block_release(v19);

  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v4, v35);
  v28 = *v12;
  swift_release(v9);
  swift_release(v28);
  v29 = *(_QWORD *)(v0 + 304);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1005B3FDC(uint64_t a1, CHWorkoutDetailHeartRateTableViewCell *a2)
{
  uint64_t v3;
  char *Strong;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = &Strong[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_suggestedMinutesToWalk];
    *(_QWORD *)v5 = 0;
    v5[8] = 1;

  }
  swift_beginAccess(v3, &v8, 0, 0);
  v6 = swift_unknownObjectWeakLoadStrong(v3);
  if (v6)
  {
    v7 = (void *)v6;
    sub_1005B34BC(a2);

  }
}

void sub_1005B4070(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *Strong;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  char v11[24];
  char v12[24];
  char v13[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = &Strong[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_suggestedMinutesToWalk];
    *(_QWORD *)v5 = a2;
    v5[8] = 0;

  }
  swift_beginAccess(v3, v12, 0, 0);
  v6 = swift_unknownObjectWeakLoadStrong(v3);
  if (v6
    && (v7 = (void *)v6,
        v8 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_walkSuggestionCell),
        v9 = v8,
        v7,
        v8))
  {
    sub_100368740();
  }
  else
  {
    swift_beginAccess(v3, v11, 0, 0);
    v10 = swift_unknownObjectWeakLoadStrong(v3);
    if (!v10)
      return;
    v9 = (id)v10;
    sub_1005B34BC((CHWorkoutDetailHeartRateTableViewCell *)&off_1007836B8);
  }

}

uint64_t sub_1005B4168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[28] = a4;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v4[29] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[30] = v6;
  v4[31] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v4[32] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[33] = v8;
  v4[34] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v4[35] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v4[36] = v10;
  v4[37] = v11;
  return swift_task_switch(sub_1005B4224, v10, v11);
}

uint64_t sub_1005B4224()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (__cdecl *v23)();
  uint64_t v24;

  v1 = v0[28] + 16;
  swift_beginAccess(v1, v0 + 24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1000252E0(Strong+ OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendationDataProvider, (uint64_t)(v0 + 8));

    sub_100016804(v0 + 8, v0[11]);
    v23 = (uint64_t (__cdecl *)())((char *)&dword_100820A00 + dword_100820A00);
    v4 = (_QWORD *)swift_task_alloc(unk_100820A04);
    v0[38] = v4;
    *v4 = v0;
    v4[1] = sub_1005B44C4;
    return v23();
  }
  else
  {
    swift_release(v0[35]);
    v6 = v0[34];
    v7 = v0[31];
    v22 = v0[33];
    v24 = v0[32];
    v8 = v0[29];
    v21 = v0[30];
    v9 = v0[28] + 16;
    sub_10002FB54();
    v11 = (void *)static OS_dispatch_queue.main.getter(v10);
    v12 = swift_allocObject(&unk_1007AC510, 24, 7);
    swift_beginAccess(v9, v0 + 18, 0, 0);
    v13 = (void *)swift_unknownObjectWeakLoadStrong(v9);
    swift_unknownObjectWeakInit(v12 + 16);

    v14 = swift_allocObject(&unk_1007AC6F0, 32, 7);
    *(_QWORD *)(v14 + 16) = v12;
    *(_QWORD *)(v14 + 24) = &_swiftEmptyArrayStorage;
    v0[6] = sub_1005B6E74;
    v0[7] = v14;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_10002D0F8;
    v0[5] = &unk_1007AC708;
    v15 = _Block_copy(v0 + 2);
    swift_retain(v12);
    static DispatchQoS.unspecified.getter(v16);
    v0[27] = &_swiftEmptyArrayStorage;
    v17 = sub_10002FAC0();
    v18 = sub_100047110(&qword_100828C80);
    v19 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 27, v18, v19, v8, v17);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v7, v15);
    _Block_release(v15);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v6, v24);
    v20 = v0[7];
    swift_release(v12);
    swift_release(v20);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1005B44C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 304);
  *(_QWORD *)(*v2 + 312) = a1;
  swift_task_dealloc(v5);
  if (v1)
  {
    swift_errorRelease(v1);
    v6 = *(_QWORD *)(v4 + 288);
    v7 = *(_QWORD *)(v4 + 296);
    v8 = sub_1005B4858;
  }
  else
  {
    v11 = v4 + 288;
    v10 = *(_QWORD *)(v4 + 288);
    v9 = *(_QWORD *)(v11 + 8);
    swift_bridgeObjectRetain(a1);
    v8 = sub_1005B454C;
    v6 = v10;
    v7 = v9;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1005B454C()
{
  _QWORD *v0;
  uint64_t v1;
  const char *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char v39;
  SEL v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v1 = v0[39];
  swift_release(v0[35]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 8);
  if (!*(_QWORD *)(v1 + 16)
    || (v9 = v0[28] + 16,
        swift_beginAccess(v9, v0 + 21, 0, 0),
        (Strong = swift_unknownObjectWeakLoadStrong(v9)) == 0))
  {
    v22 = (CHWorkoutDetailHeartRateTableViewCell *)v0[39];
LABEL_7:
    swift_bridgeObjectRelease(v22, v2, v3, v4, v5, v6, v7, v8);
    v21 = &_swiftEmptyArrayStorage;
    goto LABEL_8;
  }
  v11 = (void *)Strong;
  sub_1000252E0(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_networkEvaluator, (uint64_t)(v0 + 13));

  v12 = v0[16];
  v13 = v0[17];
  sub_100016804(v0 + 13, v12);
  v14 = dispatch thunk of NetworkEvaluating.queryNetworkConditions()(v12, v13);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 13);
  v15 = NetworkConditions.rawValue.getter(v14);
  v17 = v16;
  v19 = NetworkConditions.rawValue.getter(0);
  v20 = v18;
  if (v15 != v19 || v17 != v18)
  {
    v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v19, v18, 0);
    swift_bridgeObjectRelease(v17, v40, v41, v42, v43, v44, v45, v46);
    swift_bridgeObjectRelease(v20, v47, v48, v49, v50, v51, v52, v53);
    v21 = (CHWorkoutDetailHeartRateTableViewCell *)v0[39];
    if ((v39 & 1) != 0)
      goto LABEL_8;
    v22 = (CHWorkoutDetailHeartRateTableViewCell *)v0[39];
    goto LABEL_7;
  }
  swift_bridgeObjectRelease_n(v17, 2);
  v21 = (CHWorkoutDetailHeartRateTableViewCell *)v0[39];
LABEL_8:
  v23 = v0[34];
  v24 = v0[31];
  v55 = v0[33];
  v56 = v0[32];
  v25 = v0[29];
  v54 = v0[30];
  v26 = v0[28] + 16;
  sub_10002FB54();
  v28 = (void *)static OS_dispatch_queue.main.getter(v27);
  v29 = swift_allocObject(&unk_1007AC510, 24, 7);
  swift_beginAccess(v26, v0 + 18, 0, 0);
  v30 = (void *)swift_unknownObjectWeakLoadStrong(v26);
  swift_unknownObjectWeakInit(v29 + 16);

  v31 = swift_allocObject(&unk_1007AC6F0, 32, 7);
  *(_QWORD *)(v31 + 16) = v29;
  *(_QWORD *)(v31 + 24) = v21;
  v0[6] = sub_1005B6E74;
  v0[7] = v31;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10002D0F8;
  v0[5] = &unk_1007AC708;
  v32 = _Block_copy(v0 + 2);
  swift_retain(v29);
  static DispatchQoS.unspecified.getter(v33);
  v0[27] = &_swiftEmptyArrayStorage;
  v34 = sub_10002FAC0();
  v35 = sub_100047110(&qword_100828C80);
  v36 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 27, v35, v36, v25, v34);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v23, v24, v32);
  _Block_release(v32);

  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v24, v25);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v23, v56);
  v37 = v0[7];
  swift_release(v29);
  swift_release(v37);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1005B4858()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  void *v6;
  uint64_t v7;
  void *Strong;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_release(v0[35]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 8);
  v1 = v0[34];
  v2 = v0[31];
  v18 = v0[33];
  v19 = v0[32];
  v3 = v0[29];
  v17 = v0[30];
  v4 = v0[28] + 16;
  sub_10002FB54();
  v6 = (void *)static OS_dispatch_queue.main.getter(v5);
  v7 = swift_allocObject(&unk_1007AC510, 24, 7);
  swift_beginAccess(v4, v0 + 18, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  swift_unknownObjectWeakInit(v7 + 16);

  v9 = swift_allocObject(&unk_1007AC6F0, 32, 7);
  *(_QWORD *)(v9 + 16) = v7;
  *(_QWORD *)(v9 + 24) = &_swiftEmptyArrayStorage;
  v0[6] = sub_1005B6E74;
  v0[7] = v9;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10002D0F8;
  v0[5] = &unk_1007AC708;
  v10 = _Block_copy(v0 + 2);
  swift_retain(v7);
  static DispatchQoS.unspecified.getter(v11);
  v0[27] = &_swiftEmptyArrayStorage;
  v12 = sub_10002FAC0();
  v13 = sub_100047110(&qword_100828C80);
  v14 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 27, v13, v14, v3, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v1, v2, v10);
  _Block_release(v10);

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v1, v19);
  v15 = v0[7];
  swift_release(v7);
  swift_release(v15);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return ((uint64_t (*)(void))v0[1])();
}

void sub_1005B4A58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _BYTE v17[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(CHWorkoutDetailHeartRateTableViewCell **)(Strong
                                                   + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendations);
    *(_QWORD *)(Strong
              + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendations) = a2;
    swift_bridgeObjectRetain(a2);

    swift_bridgeObjectRelease(v6, v7, v8, v9, v10, v11, v12, v13);
  }
  swift_beginAccess(v3, &v16, 0, 0);
  v14 = swift_unknownObjectWeakLoadStrong(v3);
  if (v14)
  {
    v15 = (void *)v14;
    sub_1005B34BC((CHWorkoutDetailHeartRateTableViewCell *)&off_1007836E0);

  }
}

uint64_t sub_1005B4B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[28] = a4;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v4[29] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[30] = v6;
  v4[31] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v4[32] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[33] = v8;
  v4[34] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v4[35] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v4[36] = v10;
  v4[37] = v11;
  return swift_task_switch(sub_1005B4BC0, v10, v11);
}

uint64_t sub_1005B4BC0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0[28] + 16;
  swift_beginAccess(v1, v0 + 18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1000252E0(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider, (uint64_t)(v0 + 13));

    v4 = sub_100016804(v0 + 13, v0[16]);
    v5 = *v4;
    v0[38] = *v4;
    v6 = sub_1005B4EB0;
    return swift_task_switch(v6, v5, 0);
  }
  v0[43] = &_swiftEmptyArrayStorage;
  v7 = v0[28] + 16;
  swift_beginAccess(v7, v0 + 24, 0, 0);
  v8 = swift_unknownObjectWeakLoadStrong(v7);
  if (v8)
  {
    v9 = (void *)v8;
    sub_1000252E0(v8 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider, (uint64_t)(v0 + 8));

    v10 = sub_100016804(v0 + 8, v0[11]);
    v5 = *v10;
    v0[44] = *v10;
    v6 = sub_1005B55A0;
    return swift_task_switch(v6, v5, 0);
  }
  swift_release(v0[35]);
  v12 = v0[43];
  v13 = v0[34];
  v14 = v0[31];
  v29 = v0[33];
  v30 = v0[32];
  v15 = v0[29];
  v28 = v0[30];
  v16 = v0[28] + 16;
  sub_10002FB54();
  v27 = (void *)static OS_dispatch_queue.main.getter(v17);
  v18 = swift_allocObject(&unk_1007AC510, 24, 7);
  swift_beginAccess(v16, v0 + 21, 0, 0);
  v19 = (void *)swift_unknownObjectWeakLoadStrong(v16);
  swift_unknownObjectWeakInit(v18 + 16);

  v20 = (_QWORD *)swift_allocObject(&unk_1007AC588, 40, 7);
  v20[2] = v18;
  v20[3] = v12;
  v20[4] = &_swiftEmptyArrayStorage;
  v0[6] = sub_1005B6BDC;
  v0[7] = v20;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10002D0F8;
  v0[5] = &unk_1007AC5A0;
  v21 = _Block_copy(v0 + 2);
  swift_retain(v18);
  static DispatchQoS.unspecified.getter(v22);
  v0[27] = &_swiftEmptyArrayStorage;
  v23 = sub_10002FAC0();
  v24 = sub_100047110(&qword_100828C80);
  v25 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 27, v24, v25, v15, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v14, v21);
  _Block_release(v21);

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v13, v30);
  v26 = v0[7];
  swift_release(v18);
  swift_release(v26);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1005B4EB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;

  v1 = v0[38];
  v2 = *(_QWORD *)(v1 + 216);
  v0[39] = v2;
  v0[40] = *(_QWORD *)(v1 + 224);
  if (*(_BYTE *)(v1 + 232) == 1)
  {
    v7 = *(_QWORD *)(v1 + 216);
    v0[42] = v7;
    v8 = v0[36];
    v9 = v0[37];
    swift_bridgeObjectRetain(v7);
    v10 = sub_1005B5074;
    v11 = v8;
    v12 = v9;
  }
  else
  {
    if (!*(_BYTE *)(v1 + 232))
    {
      v3 = async function pointer to Task.value.getter[1];
      swift_retain(v2);
      v4 = (_QWORD *)swift_task_alloc(v3);
      v0[41] = v4;
      v5 = sub_100047110(&qword_10082EEA0);
      *v4 = v0;
      v4[1] = sub_1005B4F94;
      return Task.value.getter(v5, v2, (char *)&type metadata for () + 8, v5, &protocol self-conformance witness table for Error);
    }
    v11 = v0[36];
    v12 = v0[37];
    v10 = sub_1005B530C;
  }
  return swift_task_switch(v10, v11, v12);
}

uint64_t sub_1005B4F94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 328));
  v3 = *(_QWORD *)(v2 + 304);
  if (v0)
  {
    swift_errorRelease(v0);
    v4 = sub_1005B7034;
  }
  else
  {
    v4 = sub_1005B5000;
  }
  return swift_task_switch(v4, v3, 0);
}

uint64_t sub_1005B5000()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;

  v1 = v0[38];
  sub_10031C718(v0[39], v0[40], 0);
  if (*(_BYTE *)(v1 + 232) == 1)
  {
    v2 = v0[37];
    v3 = *(_QWORD *)(v0[38] + 216);
    v0[42] = v3;
    v4 = v0[36];
    swift_bridgeObjectRetain(v3);
    v5 = sub_1005B5074;
    v6 = v4;
    v7 = v2;
  }
  else
  {
    v6 = v0[36];
    v7 = v0[37];
    v5 = sub_1005B530C;
  }
  return swift_task_switch(v5, v6, v7);
}

uint64_t sub_1005B5074()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 13);
  v0[43] = v0[42];
  v1 = v0[28] + 16;
  swift_beginAccess(v1, v0 + 24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1000252E0(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider, (uint64_t)(v0 + 8));

    v4 = sub_100016804(v0 + 8, v0[11]);
    v5 = *v4;
    v0[44] = *v4;
    return swift_task_switch(sub_1005B55A0, v5, 0);
  }
  else
  {
    swift_release(v0[35]);
    v7 = v0[43];
    v8 = v0[34];
    v9 = v0[31];
    v24 = v0[33];
    v25 = v0[32];
    v10 = v0[29];
    v23 = v0[30];
    v11 = v0[28] + 16;
    sub_10002FB54();
    v13 = (void *)static OS_dispatch_queue.main.getter(v12);
    v14 = swift_allocObject(&unk_1007AC510, 24, 7);
    swift_beginAccess(v11, v0 + 21, 0, 0);
    v15 = (void *)swift_unknownObjectWeakLoadStrong(v11);
    swift_unknownObjectWeakInit(v14 + 16);

    v16 = (_QWORD *)swift_allocObject(&unk_1007AC588, 40, 7);
    v16[2] = v14;
    v16[3] = v7;
    v16[4] = &_swiftEmptyArrayStorage;
    v0[6] = sub_1005B6BDC;
    v0[7] = v16;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_10002D0F8;
    v0[5] = &unk_1007AC5A0;
    v17 = _Block_copy(v0 + 2);
    swift_retain(v14);
    static DispatchQoS.unspecified.getter(v18);
    v0[27] = &_swiftEmptyArrayStorage;
    v19 = sub_10002FAC0();
    v20 = sub_100047110(&qword_100828C80);
    v21 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 27, v20, v21, v10, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v9, v17);
    _Block_release(v17);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v8, v25);
    v22 = v0[7];
    swift_release(v14);
    swift_release(v22);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1005B530C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 13);
  v0[43] = &_swiftEmptyArrayStorage;
  v1 = v0[28] + 16;
  swift_beginAccess(v1, v0 + 24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1000252E0(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider, (uint64_t)(v0 + 8));

    v4 = sub_100016804(v0 + 8, v0[11]);
    v5 = *v4;
    v0[44] = *v4;
    return swift_task_switch(sub_1005B55A0, v5, 0);
  }
  else
  {
    swift_release(v0[35]);
    v7 = v0[43];
    v8 = v0[34];
    v9 = v0[31];
    v24 = v0[33];
    v25 = v0[32];
    v10 = v0[29];
    v23 = v0[30];
    v11 = v0[28] + 16;
    sub_10002FB54();
    v22 = (void *)static OS_dispatch_queue.main.getter(v12);
    v13 = swift_allocObject(&unk_1007AC510, 24, 7);
    swift_beginAccess(v11, v0 + 21, 0, 0);
    v14 = (void *)swift_unknownObjectWeakLoadStrong(v11);
    swift_unknownObjectWeakInit(v13 + 16);

    v15 = (_QWORD *)swift_allocObject(&unk_1007AC588, 40, 7);
    v15[2] = v13;
    v15[3] = v7;
    v15[4] = &_swiftEmptyArrayStorage;
    v0[6] = sub_1005B6BDC;
    v0[7] = v15;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_10002D0F8;
    v0[5] = &unk_1007AC5A0;
    v16 = _Block_copy(v0 + 2);
    swift_retain(v13);
    static DispatchQoS.unspecified.getter(v17);
    v0[27] = &_swiftEmptyArrayStorage;
    v18 = sub_10002FAC0();
    v19 = sub_100047110(&qword_100828C80);
    v20 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 27, v19, v20, v10, v18);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v9, v16);
    _Block_release(v16);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v8, v25);
    v21 = v0[7];
    swift_release(v13);
    swift_release(v21);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1005B55A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;

  v1 = v0[44];
  v2 = *(_QWORD *)(v1 + 216);
  v0[45] = v2;
  v0[46] = *(_QWORD *)(v1 + 224);
  if (*(_BYTE *)(v1 + 232) == 1)
  {
    v7 = *(_QWORD *)(v1 + 224);
    v0[48] = v7;
    v8 = v0[36];
    v9 = v0[37];
    swift_bridgeObjectRetain(v7);
    v10 = sub_1005B5764;
    v11 = v8;
    v12 = v9;
  }
  else
  {
    if (!*(_BYTE *)(v1 + 232))
    {
      v3 = async function pointer to Task.value.getter[1];
      swift_retain(v2);
      v4 = (_QWORD *)swift_task_alloc(v3);
      v0[47] = v4;
      v5 = sub_100047110(&qword_10082EEA0);
      *v4 = v0;
      v4[1] = sub_1005B5684;
      return Task.value.getter(v5, v2, (char *)&type metadata for () + 8, v5, &protocol self-conformance witness table for Error);
    }
    v11 = v0[36];
    v12 = v0[37];
    v10 = sub_1005B598C;
  }
  return swift_task_switch(v10, v11, v12);
}

uint64_t sub_1005B5684()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 376));
  v3 = *(_QWORD *)(v2 + 352);
  if (v0)
  {
    swift_errorRelease(v0);
    v4 = sub_1005B56F0;
  }
  else
  {
    v4 = sub_1005B7038;
  }
  return swift_task_switch(v4, v3, 0);
}

uint64_t sub_1005B56F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;

  v1 = v0[44];
  sub_10031C718(v0[45], v0[46], 0);
  if (*(_BYTE *)(v1 + 232) == 1)
  {
    v2 = *(_QWORD *)(v0[44] + 224);
    v0[48] = v2;
    v3 = v0[36];
    v4 = v0[37];
    swift_bridgeObjectRetain(v2);
    v5 = sub_1005B5764;
    v6 = v3;
    v7 = v4;
  }
  else
  {
    v6 = v0[36];
    v7 = v0[37];
    v5 = sub_1005B598C;
  }
  return swift_task_switch(v5, v6, v7);
}

uint64_t sub_1005B5764()
{
  uint64_t v0;
  uint64_t v1;
  const char *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  void *Strong;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 384);
  swift_release(*(_QWORD *)(v0 + 280));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 64));
  v9 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 384);
  if (!*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v0 + 384), v2, v3, v4, v5, v6, v7, v8);
    v9 = &_swiftEmptyArrayStorage;
  }
  v10 = *(_QWORD *)(v0 + 344);
  v11 = *(_QWORD *)(v0 + 272);
  v12 = *(_QWORD *)(v0 + 248);
  v28 = *(_QWORD *)(v0 + 264);
  v29 = *(_QWORD *)(v0 + 256);
  v13 = *(_QWORD *)(v0 + 232);
  v27 = *(_QWORD *)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 224) + 16;
  sub_10002FB54();
  v26 = (void *)static OS_dispatch_queue.main.getter(v15);
  v16 = swift_allocObject(&unk_1007AC510, 24, 7);
  swift_beginAccess(v14, v0 + 168, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v14);
  swift_unknownObjectWeakInit(v16 + 16);

  v18 = (_QWORD *)swift_allocObject(&unk_1007AC588, 40, 7);
  v18[2] = v16;
  v18[3] = v10;
  v18[4] = v9;
  *(_QWORD *)(v0 + 48) = sub_1005B6BDC;
  *(_QWORD *)(v0 + 56) = v18;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_10002D0F8;
  *(_QWORD *)(v0 + 40) = &unk_1007AC5A0;
  v19 = _Block_copy((const void *)(v0 + 16));
  swift_retain(v16);
  static DispatchQoS.unspecified.getter(v20);
  *(_QWORD *)(v0 + 216) = &_swiftEmptyArrayStorage;
  v21 = sub_10002FAC0();
  v22 = sub_100047110(&qword_100828C80);
  v23 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 216, v22, v23, v13, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v12, v19);
  _Block_release(v19);

  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v12, v13);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v11, v29);
  v24 = *(_QWORD *)(v0 + 56);
  swift_release(v16);
  swift_release(v24);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005B598C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  void *v7;
  uint64_t v8;
  void *Strong;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_release(v0[35]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 8);
  v1 = v0[43];
  v2 = v0[34];
  v3 = v0[31];
  v19 = v0[33];
  v20 = v0[32];
  v4 = v0[29];
  v18 = v0[30];
  v5 = v0[28] + 16;
  sub_10002FB54();
  v7 = (void *)static OS_dispatch_queue.main.getter(v6);
  v8 = swift_allocObject(&unk_1007AC510, 24, 7);
  swift_beginAccess(v5, v0 + 21, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  swift_unknownObjectWeakInit(v8 + 16);

  v10 = (_QWORD *)swift_allocObject(&unk_1007AC588, 40, 7);
  v10[2] = v8;
  v10[3] = v1;
  v10[4] = &_swiftEmptyArrayStorage;
  v0[6] = sub_1005B6BDC;
  v0[7] = v10;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10002D0F8;
  v0[5] = &unk_1007AC5A0;
  v11 = _Block_copy(v0 + 2);
  swift_retain(v8);
  static DispatchQoS.unspecified.getter(v12);
  v0[27] = &_swiftEmptyArrayStorage;
  v13 = sub_10002FAC0();
  v14 = sub_100047110(&qword_100828C80);
  v15 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 27, v14, v15, v4, v13);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v2, v3, v11);
  _Block_release(v11);

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v2, v20);
  v16 = v0[7];
  swift_release(v8);
  swift_release(v16);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return ((uint64_t (*)(void))v0[1])();
}

void sub_1005B5B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  SEL v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(CHWorkoutDetailHeartRateTableViewCell **)(Strong
                                                   + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appStoreRecommendations);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appStoreRecommendations) = a2;
    swift_bridgeObjectRetain(a2);

    swift_bridgeObjectRelease(v8, v9, v10, v11, v12, v13, v14, v15);
  }
  swift_beginAccess(v5, v29, 0, 0);
  v16 = swift_unknownObjectWeakLoadStrong(v5);
  if (v16)
  {
    v17 = (void *)v16;
    v18 = *(CHWorkoutDetailHeartRateTableViewCell **)(v16
                                                    + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations);
    *(_QWORD *)(v16 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations) = a3;
    swift_bridgeObjectRetain(a3);

    swift_bridgeObjectRelease(v18, v19, v20, v21, v22, v23, v24, v25);
  }
  swift_beginAccess(v5, v28, 0, 0);
  v26 = swift_unknownObjectWeakLoadStrong(v5);
  if (v26)
  {
    v27 = (void *)v26;
    sub_1005B34BC((CHWorkoutDetailHeartRateTableViewCell *)&off_100783708);

  }
}

uint64_t type metadata accessor for AddToYourRingCollectionViewController()
{
  return objc_opt_self(_TtC10FitnessApp37AddToYourRingCollectionViewController);
}

uint64_t sub_1005B5D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[13] = a4;
  v5 = sub_100047110(&qword_10081E650);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[15] = v6;
  v4[16] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v4[17] = v7;
  v4[18] = v8;
  return swift_task_switch(sub_1005B5DA8, v7, v8);
}

uint64_t sub_1005B5DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 104) + 16;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1000252E0(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider, v0 + 16);

    sub_100016804((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v4 = (_QWORD *)swift_task_alloc(dword_100835EB4);
    *(_QWORD *)(v0 + 152) = v4;
    *v4 = v0;
    v4[1] = sub_1005B5F58;
    return sub_100496550();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 128));
    v6 = *(_QWORD *)(v0 + 104) + 16;
    swift_beginAccess(v6, v0 + 80, 0, 0);
    v7 = swift_unknownObjectWeakLoadStrong(v6);
    if (v7)
    {
      v8 = (void *)v7;
      v9 = *(_QWORD *)(v0 + 112);
      v10 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
      v11 = swift_allocObject(&unk_1007AC510, 24, 7);
      swift_unknownObjectWeakInit(v11 + 16);
      swift_retain(v11);
      v13 = static MainActor.shared.getter(v12);
      v14 = (_QWORD *)swift_allocObject(&unk_1007AC650, 40, 7);
      v14[2] = v13;
      v14[3] = &protocol witness table for MainActor;
      v14[4] = v11;
      swift_release(v11);
      v15 = sub_10020D9C0(v9, (uint64_t)&unk_10083C578, (uint64_t)v14);
      swift_release(v15);

    }
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005B5F58()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  return swift_task_switch(sub_1005B5FA4, *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144));
}

uint64_t sub_1005B5FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  swift_release(*(_QWORD *)(v0 + 128));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 104) + 16;
  swift_beginAccess(v1, v0 + 80, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(_QWORD *)(v0 + 112);
    v5 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    v6 = swift_allocObject(&unk_1007AC510, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16);
    swift_retain(v6);
    v8 = static MainActor.shared.getter(v7);
    v9 = (_QWORD *)swift_allocObject(&unk_1007AC650, 40, 7);
    v9[2] = v8;
    v9[3] = &protocol witness table for MainActor;
    v9[4] = v6;
    swift_release(v6);
    v10 = sub_10020D9C0(v4, (uint64_t)&unk_10083C578, (uint64_t)v9);
    swift_release(v10);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005B6124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[13] = a4;
  v5 = sub_100047110(&qword_10081E650);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[15] = v6;
  v4[16] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v4[17] = v7;
  v4[18] = v8;
  return swift_task_switch(sub_1005B61B8, v7, v8);
}

uint64_t sub_1005B61B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 104) + 16;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1000252E0(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider, v0 + 16);

    sub_100016804((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v4 = (_QWORD *)swift_task_alloc(dword_100835EB4);
    *(_QWORD *)(v0 + 152) = v4;
    *v4 = v0;
    v4[1] = sub_1005B6368;
    return sub_100496550();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 128));
    v6 = *(_QWORD *)(v0 + 104) + 16;
    swift_beginAccess(v6, v0 + 80, 0, 0);
    v7 = swift_unknownObjectWeakLoadStrong(v6);
    if (v7)
    {
      v8 = (void *)v7;
      v9 = *(_QWORD *)(v0 + 112);
      v10 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
      v11 = swift_allocObject(&unk_1007AC510, 24, 7);
      swift_unknownObjectWeakInit(v11 + 16);
      swift_retain(v11);
      v13 = static MainActor.shared.getter(v12);
      v14 = (_QWORD *)swift_allocObject(&unk_1007AC600, 40, 7);
      v14[2] = v13;
      v14[3] = &protocol witness table for MainActor;
      v14[4] = v11;
      swift_release(v11);
      v15 = sub_10020D9C0(v9, (uint64_t)&unk_10083C560, (uint64_t)v14);
      swift_release(v15);

    }
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005B6368()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  return swift_task_switch(sub_1005B63B4, *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144));
}

uint64_t sub_1005B63B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  swift_release(*(_QWORD *)(v0 + 128));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 104) + 16;
  swift_beginAccess(v1, v0 + 80, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(_QWORD *)(v0 + 112);
    v5 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    v6 = swift_allocObject(&unk_1007AC510, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16);
    swift_retain(v6);
    v8 = static MainActor.shared.getter(v7);
    v9 = (_QWORD *)swift_allocObject(&unk_1007AC600, 40, 7);
    v9[2] = v8;
    v9[3] = &protocol witness table for MainActor;
    v9[4] = v6;
    swift_release(v6);
    v10 = sub_10020D9C0(v4, (uint64_t)&unk_10083C560, (uint64_t)v9);
    swift_release(v10);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005B6534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[13] = a4;
  v5 = sub_100047110(&qword_10081E650);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[15] = v6;
  v4[16] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v4[17] = v7;
  v4[18] = v8;
  return swift_task_switch(sub_1005B65C8, v7, v8);
}

uint64_t sub_1005B65C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _QWORD *v4;

  v1 = v0[13] + 16;
  swift_beginAccess(v1, v0 + 7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return swift_task_switch(sub_1005B670C, 0, 0);
  v3 = (void *)Strong;
  sub_1000252E0(Strong + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider, (uint64_t)(v0 + 2));

  sub_100016804(v0 + 2, v0[5]);
  v4 = (_QWORD *)swift_task_alloc(dword_100835EB4);
  v0[19] = v4;
  *v4 = v0;
  v4[1] = sub_1005B6684;
  return sub_100496550();
}

uint64_t sub_1005B6684()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  return swift_task_switch(sub_1005B66D0, *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144));
}

uint64_t sub_1005B66D0()
{
  uint64_t v0;

  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 16));
  return swift_task_switch(sub_1005B670C, 0, 0);
}

uint64_t sub_1005B670C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v1 + 160) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005B676C, v3, v4);
}

uint64_t sub_1005B676C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v1 = v0[13];
  swift_release(v0[20]);
  v1 += 16;
  swift_beginAccess(v1, v0 + 10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = v0[14];
    v5 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    v6 = swift_allocObject(&unk_1007AC510, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16);
    swift_retain(v6);
    v8 = static MainActor.shared.getter(v7);
    v9 = (_QWORD *)swift_allocObject(&unk_1007AC560, 40, 7);
    v9[2] = v8;
    v9[3] = &protocol witness table for MainActor;
    v9[4] = v6;
    swift_release(v6);
    v10 = sub_10020D9C0(v4, (uint64_t)&unk_10083C540, (uint64_t)v9);
    swift_release(v10);

  }
  return swift_task_switch(sub_1005B688C, v0[17], v0[18]);
}

uint64_t sub_1005B688C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1005B6934(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  double result;
  uint64_t v21;

  v8 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static os_log_type_t.default.getter(v11);
  v13 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v12, &_mh_execute_header, v13, a1, a2, 2, &_swiftEmptyArrayStorage);

  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 1, 1, v14);
  v15 = swift_allocObject(&unk_1007AC510, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  type metadata accessor for MainActor(0);
  swift_retain(v15);
  v17 = static MainActor.shared.getter(v16);
  v18 = (_QWORD *)swift_allocObject(a3, 40, 7);
  v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = v15;
  swift_release(v15);
  v19 = sub_10020D9C0((uint64_t)v10, a4, (uint64_t)v18);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

uint64_t sub_1005B6A9C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005B6AC0()
{
  return sub_1005B6FFC(40);
}

uint64_t sub_1005B6AC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10083C52C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_1005B6534(a1, v4, v5, v6);
}

uint64_t sub_1005B6B34()
{
  return sub_1005B6FFC(40);
}

uint64_t sub_1005B6B3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10083C53C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_1005B4B04(a1, v4, v5, v6);
}

uint64_t sub_1005B6BA8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_1005B6BDC()
{
  uint64_t *v0;

  sub_1005B5B94(v0[2], v0[3], v0[4]);
}

uint64_t sub_1005B6BE8()
{
  return sub_1005B6FFC(40);
}

uint64_t sub_1005B6BF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10083C554);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_1005B6124(a1, v4, v5, v6);
}

uint64_t sub_1005B6C5C()
{
  return sub_1005B6FFC(40);
}

uint64_t sub_1005B6C64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10083C53C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000DA0E4;
  return sub_1005B4B04(a1, v4, v5, v6);
}

uint64_t sub_1005B6CD0()
{
  return sub_1005B6FFC(40);
}

uint64_t sub_1005B6CD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10083C56C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_1005B5D14(a1, v4, v5, v6);
}

uint64_t sub_1005B6D44()
{
  return sub_1005B6FFC(40);
}

uint64_t sub_1005B6D4C()
{
  return sub_1005B6FFC(48);
}

uint64_t sub_1005B6D54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10083C584);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_1005B37BC(a1, v4, v5, v6);
}

uint64_t sub_1005B6DCC()
{
  return sub_1005B6FFC(40);
}

uint64_t sub_1005B6DD4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10083C594);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_1005B4168(a1, v4, v5, v6);
}

uint64_t sub_1005B6E40()
{
  return sub_1005B6FFC(40);
}

uint64_t sub_1005B6E48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1005B6E74()
{
  uint64_t v0;

  sub_1005B4A58(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1005B6E7C()
{
  uint64_t v0;

  sub_1005B3FDC(v0, (CHWorkoutDetailHeartRateTableViewCell *)&off_100783668);
}

void sub_1005B6E9C()
{
  uint64_t v0;

  sub_1005B3FDC(v0, (CHWorkoutDetailHeartRateTableViewCell *)&off_100783690);
}

uint64_t sub_1005B6EBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1005B6EE0()
{
  uint64_t v0;

  sub_1005B4070(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1005B6EE8()
{
  uint64_t v0;

  sub_1005B3134(v0, (uint64_t)&unk_1007AC830, (uint64_t)&unk_10083C5C0);
}

uint64_t sub_1005B6F10()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1005B6F44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_10083C5AC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000EA380;
  return sub_1005B2F48(a1, v4, v5, v6, v7, v8);
}

void sub_1005B6FC4()
{
  uint64_t v0;

  sub_1005B3134(v0, (uint64_t)&unk_1007AC808, (uint64_t)&unk_10083C5B8);
}

uint64_t sub_1005B6FEC()
{
  return sub_1005B6FFC(40);
}

uint64_t sub_1005B6FF4()
{
  return sub_1005B6FFC(40);
}

uint64_t sub_1005B6FFC(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1005B7054@<X0>(uint64_t *a1@<X8>)
{
  return sub_1005B706C(&OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodHistogram, a1);
}

uint64_t sub_1005B7060@<X0>(uint64_t *a1@<X8>)
{
  return sub_1005B706C(&OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryHistogram, a1);
}

uint64_t sub_1005B706C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t result;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v4 = (uint64_t *)(v2 + *a1);
  v6 = *v4;
  v5 = v4[1];
  if (*v4)
  {
    v7 = v4[2];
    v8 = v4[3];
    v9 = v4[4];
    v10 = v4[5];
    v11 = v4[6];
    v12 = *v4;
    v13 = v5;
  }
  else
  {
    v21 = v4[1];
    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_dataProvider);
    if (Strong)
    {
      v15 = *(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_nBins);
      swift_unknownObjectRelease(Strong);
    }
    else
    {
      v15 = 24;
    }
    sub_10003D1C0(v15, (uint64_t)&v22, 0.0, (double)v15);
    v16 = v25;
    v17 = *v4;
    v18 = v4[1];
    v19 = v23;
    *(_OWORD *)v4 = v22;
    *((_OWORD *)v4 + 1) = v19;
    *((_OWORD *)v4 + 2) = v24;
    v4[6] = v16;
    sub_10003EE38(&v22);
    sub_10004A2FC(v17, v18);
    v10 = *((_QWORD *)&v24 + 1);
    v11 = v25;
    v8 = *((_QWORD *)&v23 + 1);
    v9 = v24;
    v7 = v23;
    v13 = *((_QWORD *)&v22 + 1);
    v12 = v22;
    v5 = v21;
  }
  result = sub_10004A2D0(v6, v5);
  *a2 = v12;
  a2[1] = v13;
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v9;
  a2[5] = v10;
  a2[6] = v11;
  return result;
}

id sub_1005B71E4()
{
  return sub_100305270(&OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodBarLayer, (uint64_t (*)(uint64_t))sub_1005B71F8);
}

char *sub_1005B71F8()
{
  id v0;
  char *v1;
  char *result;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11[7];

  sub_1005B7054(v11);
  v0 = objc_allocWithZone((Class)type metadata accessor for BarSeriesLayer());
  v1 = sub_1003D89A8((uint64_t)v11);
  v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_drawsEmptyBins] = 0;
  result = (char *)objc_msgSend((id)objc_opt_self(ARUIMetricColors), "sedentaryColors");
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  v4 = sub_100047110((uint64_t *)&unk_100828340);
  v5 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100629280;
  result = (char *)objc_msgSend(v3, "gradientDarkColor");
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(_QWORD *)(v5 + 32) = result;
  result = (char *)objc_msgSend(v3, "gradientLightColor");
  if (result)
  {
    *(_QWORD *)(v5 + 40) = result;
    specialized Array._endMutation()(result);
    v6 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors;
    v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors];
    *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors] = v5;
    swift_bridgeObjectRelease(v7);
    v8 = *(_QWORD *)&v1[v6];
    swift_bridgeObjectRetain(v8);
    sub_1004871DC(v9);

    swift_bridgeObjectRelease(v8);
    v10 = &v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing];
    *(_QWORD *)v10 = 0x4000000000000000;
    v10[8] = 0;
    return v1;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_1005B7360()
{
  return sub_100305270(&OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryBarLayer, (uint64_t (*)(uint64_t))sub_1005B7374);
}

char *sub_1005B7374()
{
  id v0;
  char *v1;
  char *result;
  char *v3;
  char *v4;
  id v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18[7];

  sub_1005B7060(v18);
  v0 = objc_allocWithZone((Class)type metadata accessor for BarSeriesLayer());
  v1 = sub_1003D89A8((uint64_t)v18);
  v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_drawsEmptyBins] = 0;
  result = (char *)objc_msgSend((id)objc_opt_self(ARUIMetricColors), "sedentaryColors");
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = result;
  result = (char *)objc_msgSend(result, "gradientDarkColor");
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = result;
  v5 = objc_msgSend(result, "colorWithAlphaComponent:", 0.3);

  result = (char *)objc_msgSend(v3, "gradientLightColor");
  if (result)
  {
    v6 = result;
    v7 = objc_msgSend(result, "colorWithAlphaComponent:", 0.3);

    v8 = sub_100047110((uint64_t *)&unk_100828340);
    v9 = swift_allocObject(v8, 48, 7);
    *(_OWORD *)(v9 + 16) = xmmword_100629280;
    *(_QWORD *)(v9 + 32) = v5;
    *(_QWORD *)(v9 + 40) = v7;
    v17 = v9;
    specialized Array._endMutation()(v9);
    v10 = OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors;
    v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors];
    *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_colors] = v17;
    v12 = v5;
    v13 = v7;
    swift_bridgeObjectRelease(v11);
    v14 = *(_QWORD *)&v1[v10];
    swift_bridgeObjectRetain(v14);
    sub_1004871DC(v15);

    swift_bridgeObjectRelease(v14);
    v16 = &v1[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer____lazy_storage___barSpacing];
    *(_QWORD *)v16 = 0x4000000000000000;
    v16[8] = 0;
    return v1;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1005B7548(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t i;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  _BYTE v42[24];
  _QWORD aBlock[3];
  void *ObjectType;
  void (*v45)(uint64_t);
  uint64_t v46;
  objc_super v47;

  v9 = &v4[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodHistogram];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_QWORD *)v9 + 6) = 0;
  v10 = &v4[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryHistogram];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *((_QWORD *)v10 + 6) = 0;
  v11 = OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_axisLayer;
  v12 = objc_allocWithZone((Class)type metadata accessor for ChartAxisGridLayer());
  v13 = v4;
  *(_QWORD *)&v4[v11] = sub_1001AEE74(1);
  *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodBarLayer] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryBarLayer] = 0;
  v14 = OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels;
  *(_QWORD *)&v13[v14] = sub_100305454();
  v15 = &v13[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_listener];
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v16 = &v13[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_dataProvider];
  *((_QWORD *)v16 + 1) = 0;
  swift_unknownObjectWeakInit(v16);
  *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_chartHeight] = 0x4051400000000000;

  v47.receiver = v13;
  v47.super_class = (Class)type metadata accessor for ActivityStandChartView();
  v17 = (char *)objc_msgSendSuper2(&v47, "initWithFrame:", a1, a2, a3, a4);
  v18 = objc_msgSend(v17, "layer");
  objc_msgSend(v18, "addSublayer:", *(_QWORD *)&v17[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_axisLayer]);

  v19 = objc_msgSend(v17, "layer");
  v20 = sub_1005B71E4();
  objc_msgSend(v19, "addSublayer:", v20);

  v21 = objc_msgSend(v17, "layer");
  v22 = sub_1005B7360();
  objc_msgSend(v21, "addSublayer:", v22);

  v23 = *(_QWORD *)&v17[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels];
  if (!((unint64_t)v23 >> 62))
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)&v17[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels]);
    if (v24)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v23, v25, v26, v27, v28, v29, v30, v31);
    v36 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v37 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
    v38 = swift_allocObject(&unk_1007AC858, 24, 7);
    swift_unknownObjectWeakInit(v38 + 16);
    v45 = sub_1005B8F94;
    v46 = v38;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000398D4;
    ObjectType = &unk_1007AC870;
    v39 = _Block_copy(aBlock);
    v40 = objc_msgSend(v36, "addObserverForName:object:queue:usingBlock:", UIContentSizeCategoryDidChangeNotification, 0, v37, v39, swift_release(v46).n128_f64[0]);
    _Block_release(v39);

    ObjectType = (void *)swift_getObjectType(v40);
    aBlock[0] = v40;
    v41 = (uint64_t)&v17[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_listener];
    swift_beginAccess(&v17[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_listener], v42, 33, 0);
    sub_10004C69C((uint64_t)aBlock, v41);
    swift_endAccess(v42);
    return;
  }
  if (v23 < 0)
    v35 = *(_QWORD *)&v17[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels];
  else
    v35 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)&v17[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels]);
  v24 = _CocoaArrayWrapper.endIndex.getter(v35);
  if (!v24)
    goto LABEL_13;
LABEL_3:
  if (v24 >= 1)
  {
    for (i = 0; i != v24; ++i)
    {
      if ((v23 & 0xC000000000000001) != 0)
        v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v23);
      else
        v33 = *(id *)(v23 + 8 * i + 32);
      v34 = v33;
      objc_msgSend(v17, "addSubview:", v33);

    }
    goto LABEL_13;
  }
  __break(1u);
}

void sub_1005B7938(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1005B79A8();

  }
}

id sub_1005B79A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id result;
  void *v9;
  uint64_t v10;
  id v11;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels));
    if (v2)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease(v1);
    objc_msgSend(v11, "setNeedsLayout");
    return objc_msgSend(v11, "invalidateIntrinsicContentSize");
  }
LABEL_12:
  if (v1 < 0)
    v10 = v1;
  else
    v10 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v2)
    goto LABEL_10;
LABEL_3:
  v3 = (void *)objc_opt_self(UIFont);
  v4 = 4;
  while (1)
  {
    if ((v1 & 0xC000000000000001) != 0)
      v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v1);
    else
      v5 = *(id *)(v1 + 8 * v4);
    v6 = v5;
    v7 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_12;
    }
    result = objc_msgSend(v3, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleCaption2, 1024, UIContentSizeCategoryExtraExtraExtraLarge);
    if (!result)
      break;
    v9 = result;
    objc_msgSend(v6, "setFont:", result);

    ++v4;
    if (v7 == v2)
      goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005B7B1C(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodHistogram];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  *((_QWORD *)v4 + 6) = 0;
  v5 = &v1[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryHistogram];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  *((_QWORD *)v5 + 6) = 0;
  v6 = OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_axisLayer;
  v7 = objc_allocWithZone((Class)type metadata accessor for ChartAxisGridLayer());
  v8 = v1;
  *(_QWORD *)&v1[v6] = sub_1001AEE74(1);
  v9 = OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodBarLayer;
  *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodBarLayer] = 0;
  v10 = OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryBarLayer;
  *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryBarLayer] = 0;
  v11 = OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels;
  v12 = sub_100305454();

  *(_QWORD *)&v8[v11] = v12;
  v13 = &v8[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_listener];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v14 = (uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_dataProvider];
  *(_QWORD *)(v14 + 8) = 0;
  swift_unknownObjectWeakInit(v14);
  *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_chartHeight] = 0x4051400000000000;
  sub_10004A2FC(*(_QWORD *)v4, *((_QWORD *)v4 + 1));
  sub_10004A2FC(*(_QWORD *)v5, *((_QWORD *)v5 + 1));

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v8[v11], v15, v16, v17, v18, v19, v20, v21);
  sub_1000F996C((uint64_t)v13);
  sub_1000F61B4(v14);

  v22 = type metadata accessor for ActivityStandChartView();
  swift_deallocPartialClassInstance(v8, v22, 208, 7);
  return 0;
}

id sub_1005B7CD0()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  objc_super v7;
  __int128 v8;
  uint64_t v9;
  _BYTE v10[24];
  __int128 v11;
  uint64_t v12;

  v1 = (uint64_t)&v0[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_listener];
  swift_beginAccess(&v0[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_listener], v10, 0, 0);
  sub_1002666C4(v1, (uint64_t)&v8);
  if (v9)
  {
    sub_100038FD4(&v8, &v11);
    v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v3 = v12;
    v4 = sub_100016804(&v11, v12);
    v5 = _bridgeAnythingToObjectiveC<A>(_:)(v4, v3);
    objc_msgSend(v2, "removeObserver:", v5);

    swift_unknownObjectRelease(v5);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v11);
  }
  else
  {
    sub_1000F996C((uint64_t)&v8);
  }
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for ActivityStandChartView();
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_1005B7EA0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  double v28;
  int32x2_t v29;
  _QWORD *v30;
  int64x2_t v31;
  int8x16_t v32;
  int8x16_t v33;
  unsigned int v34;
  int32x2_t v35;
  int64x2_t v36;
  int8x16_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  double v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  double v65;
  id v66;
  __n128 v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  int8x16_t v72;
  int8x16_t v73;
  double v74;
  int8x16_t v75;
  int8x16_t v76;
  int32x2_t v77;
  _QWORD *v78;
  int64x2_t v79;
  int8x16_t v80;
  unsigned int v81;
  int32x2_t v82;
  int64x2_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  int8x16_t v89;
  int8x16_t v90;
  _BYTE *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  void *v98;
  _BYTE *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  void *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int8x16_t v116;
  int8x16_t v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  __n128 v121;
  __n128 v122;
  uint64_t *v123;
  uint64_t v124;
  _OWORD v125[3];
  uint64_t v126;
  _OWORD v127[3];
  uint64_t v128;
  uint64_t v129[7];
  uint64_t v130[3];
  int8x16_t v131;
  int8x16_t v132;
  uint64_t v133[3];
  int8x16_t v134;
  int8x16_t v135;
  _OWORD v136[3];
  uint64_t v137;
  _OWORD v138[3];
  uint64_t v139;
  uint64_t v140[9];

  v2 = v1;
  HIDWORD(v110) = a1;
  v3 = type metadata accessor for Date(0);
  v113 = *(_QWORD *)(v3 - 8);
  v114 = v3;
  __chkstk_darwin(v3);
  v112 = (char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v1 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_dataProvider;
  result = swift_unknownObjectWeakLoadStrong(v5);
  v120 = result;
  if (!result)
    return result;
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_nBins);
    swift_unknownObjectRelease(Strong);
  }
  else
  {
    v8 = 24;
  }
  sub_10003D1C0(v8, (uint64_t)v125, 0.0, (double)v8);
  v9 = v126;
  v10 = v2 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodHistogram;
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodHistogram);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___stoodHistogram + 8);
  v13 = v125[1];
  *(_OWORD *)v10 = v125[0];
  *(_OWORD *)(v10 + 16) = v13;
  *(_OWORD *)(v10 + 32) = v125[2];
  *(_QWORD *)(v10 + 48) = v9;
  sub_10004A2FC(v11, v12);
  v14 = swift_unknownObjectWeakLoadStrong(v5);
  if (v14)
  {
    v15 = *(_QWORD *)(v14 + OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_nBins);
    swift_unknownObjectRelease(v14);
  }
  else
  {
    v15 = 24;
  }
  sub_10003D1C0(v15, (uint64_t)v127, 0.0, (double)v15);
  v16 = v128;
  v17 = v2 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryHistogram;
  v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryHistogram);
  v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView____lazy_storage___sedentaryHistogram + 8);
  v20 = v127[1];
  *(_OWORD *)v17 = v127[0];
  *(_OWORD *)(v17 + 16) = v20;
  *(_OWORD *)(v17 + 32) = v127[2];
  *(_QWORD *)(v17 + 48) = v16;
  sub_10004A2FC(v18, v19);
  sub_1005B7054(v129);
  v21 = *(_QWORD *)(v129[0] + 16);
  sub_10003EDC4(v129);
  v111 = v2;
  if (!v21)
  {
LABEL_72:
    v91 = sub_1005B71E4();
    sub_1005B7054((uint64_t *)v136);
    v92 = &v91[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram];
    v93 = *(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram];
    v94 = *(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram + 8];
    v95 = v136[0];
    v96 = v136[1];
    v97 = v136[2];
    *((_QWORD *)v92 + 6) = v137;
    *((_OWORD *)v92 + 1) = v96;
    *((_OWORD *)v92 + 2) = v97;
    *(_OWORD *)v92 = v95;
    sub_10003EE38(v136);
    swift_bridgeObjectRelease(v94);
    swift_bridgeObjectRelease(v93);
    sub_1003D9104();
    if ((v110 & 0x100000000) != 0)
    {
      sub_1003D93C4(kCAMediaTimingFunctionEaseInEaseOut, 0.2);
    }
    else
    {
      v98 = (void *)objc_opt_self(CATransaction);
      objc_msgSend(v98, "begin");
      objc_msgSend(v98, "setDisableActions:", 1);
      v91[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = 1;
      sub_1003D8914();
      objc_msgSend(v98, "commit");
    }
    sub_10003EDC4((uint64_t *)v136);

    v99 = sub_1005B7360();
    sub_1005B7060((uint64_t *)v138);
    v100 = &v99[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram];
    v101 = *(_QWORD *)&v99[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram];
    v102 = *(_QWORD *)&v99[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_histogram + 8];
    v103 = v138[0];
    v104 = v138[1];
    v105 = v138[2];
    *((_QWORD *)v100 + 6) = v139;
    *((_OWORD *)v100 + 1) = v104;
    *((_OWORD *)v100 + 2) = v105;
    *(_OWORD *)v100 = v103;
    sub_10003EE38(v138);
    swift_bridgeObjectRelease(v102);
    swift_bridgeObjectRelease(v101);
    sub_1003D9104();
    if ((v110 & 0x100000000) != 0)
    {
      sub_1003D93C4(kCAMediaTimingFunctionEaseInEaseOut, 0.2);
    }
    else
    {
      v106 = (void *)objc_opt_self(CATransaction);
      objc_msgSend(v106, "begin");
      objc_msgSend(v106, "setDisableActions:", 1);
      v99[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = 1;
      sub_1003D8914();
      objc_msgSend(v106, "commit");
    }
    v107 = v120;
    sub_10003EDC4((uint64_t *)v138);

    v108 = *(char **)(v111 + OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_axisLayer);
    sub_1005B7054(v140);
    v109 = *(_QWORD *)(v140[0] + 16);
    sub_10003EDC4(v140);
    *(_QWORD *)&v108[OBJC_IVAR____TtC10FitnessApp18ChartAxisGridLayer_nHoursInADay] = v109;
    objc_msgSend(v108, "setNeedsLayout");
    return swift_unknownObjectRelease(v107);
  }
  v119 = OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartData;
  v123 = (uint64_t *)(v120 + OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartBuckets);
  swift_beginAccess(v120 + OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartBuckets, &v124, 0, 0);
  v22 = 0;
  __asm { FMOV            V0.2D, #1.0 }
  v118 = _Q0;
  v115 = v21;
  while (1)
  {
    v40 = *v123;
    if (!*v123)
    {
      _Q0.n128_u64[0] = 0;
      v121 = _Q0;
      _Q0.n128_u64[0] = 0;
      v122 = _Q0;
      goto LABEL_60;
    }
    v41 = *(_QWORD *)(v120 + v119);
    _Q0.n128_u64[0] = 0;
    v122 = _Q0;
    _Q0.n128_u64[0] = 0;
    if (v41)
    {
      _Q0.n128_u64[0] = 0;
      if (v22 < *(_QWORD *)(v40 + 16))
        break;
    }
LABEL_37:
    v121 = _Q0;
    v54 = *v123;
    if (*v123)
    {
      v55 = *(_QWORD *)(v120 + v119);
      if (v55)
      {
        if (v22 < *(_QWORD *)(v54 + 16))
        {
          v56 = v112;
          v57 = v113;
          v58 = v114;
          (*(void (**)(char *, unint64_t, uint64_t))(v113 + 16))(v112, v54+ ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80))+ *(_QWORD *)(v113 + 72) * v22, v114);
          swift_bridgeObjectRetain(v55);
          v60 = Date.timeIntervalSinceReferenceDate.getter(v59);
          (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
          if ((unint64_t)v55 >> 62)
          {
            if (v55 >= 0)
              v68 = v55 & 0xFFFFFFFFFFFFFF8;
            else
              v68 = v55;
            swift_bridgeObjectRetain(v55);
            v61 = _CocoaArrayWrapper.endIndex.getter(v68);
            swift_bridgeObjectRelease(v55);
            if (v61)
            {
LABEL_42:
              v62 = 4;
              do
              {
                result = (v55 & 0xC000000000000001) != 0
                       ? specialized _ArrayBuffer._getElementSlowPath(_:)(v62 - 4, v55)
                       : (uint64_t)*(id *)(v55 + 8 * v62);
                v63 = (void *)result;
                v64 = v62 - 3;
                if (__OFADD__(v62 - 4, 1))
                  goto LABEL_81;
                objc_msgSend((id)result, "timeStamp");
                if (vabdd_f64(v65, v60) < 2.22044605e-16)
                {
                  v66 = objc_msgSend(v63, "state", swift_bridgeObjectRelease(v55).n128_f64[0]);

                  if (v66 == (id)1)
                    v67.n128_f64[0] = 1.0;
                  else
                    v67.n128_f64[0] = 0.0;
                  v122 = v67;
                  goto LABEL_59;
                }

                ++v62;
              }
              while (v64 != v61);
            }
          }
          else
          {
            v61 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v61)
              goto LABEL_42;
          }
          swift_bridgeObjectRelease(v55);
LABEL_59:
          v21 = v115;
        }
      }
    }
LABEL_60:
    sub_1005B7054(v130);
    v69 = (_QWORD *)v130[0];
    v70 = v130[1];
    v71 = v130[2];
    v72 = v131;
    v73 = v132;
    if (v22 < *(_QWORD *)(v130[0] + 16))
    {
      v116 = v132;
      v117 = v131;
      result = swift_isUniquelyReferenced_nonNull_native(v130[0]);
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1004DEE58(v69);
        v69 = (_QWORD *)result;
      }
      v74 = v121.n128_f64[0];
      v76 = v116;
      v75 = v117;
      if (v22 >= v69[2])
        goto LABEL_82;
      v77 = vdup_n_s32(*(double *)v117.i64 < v121.n128_f64[0]);
      v78 = &v69[3 * v22];
      v78[4] = v121.n128_u64[0];
      v78[5] = 0x3FF0000000000000;
      *((_BYTE *)v78 + 48) = 0;
      v79.i64[0] = v77.u32[0];
      v79.i64[1] = v77.u32[1];
      v80.i64[1] = v118.n128_i64[1];
      *(double *)v80.i64 = v74;
      v72 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v79, 0x3FuLL)), v80, v75);
      v81 = *(double *)v76.i64 < 0.0;
      if (v74 < *(double *)v76.i64)
        v81 = 1;
      v82 = vdup_n_s32(v81);
      v83.i64[0] = v82.u32[0];
      v83.i64[1] = v82.u32[1];
      v73 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v83, 0x3FuLL)), v80, v76);
    }
    v84 = *(_QWORD *)v10;
    v85 = *(_QWORD *)(v10 + 8);
    *(_QWORD *)v10 = v69;
    *(_QWORD *)(v10 + 8) = v70;
    *(_QWORD *)(v10 + 16) = v71;
    *(int8x16_t *)(v10 + 24) = v72;
    *(int8x16_t *)(v10 + 40) = v73;
    sub_10004A2FC(v84, v85);
    sub_1005B7060(v133);
    v86 = (_QWORD *)v133[0];
    v87 = v133[1];
    v88 = v133[2];
    v33 = v134;
    v37 = v135;
    if (v22 < *(_QWORD *)(v133[0] + 16))
    {
      v117 = v135;
      v121 = (__n128)v134;
      result = swift_isUniquelyReferenced_nonNull_native(v133[0]);
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1004DEE58(v86);
        v86 = (_QWORD *)result;
      }
      v89 = (int8x16_t)v121;
      v90 = v117;
      if (v22 >= v86[2])
        goto LABEL_83;
      v28 = v122.n128_f64[0];
      v29 = vdup_n_s32(v121.n128_f64[0] < v122.n128_f64[0]);
      v30 = &v86[3 * v22];
      v30[4] = v122.n128_u64[0];
      v30[5] = 0x3FF0000000000000;
      *((_BYTE *)v30 + 48) = 0;
      v31.i64[0] = v29.u32[0];
      v31.i64[1] = v29.u32[1];
      v32.i64[1] = v118.n128_i64[1];
      *(double *)v32.i64 = v28;
      v33 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v31, 0x3FuLL)), v32, v89);
      v34 = *(double *)v90.i64 < 0.0;
      if (v28 < *(double *)v90.i64)
        v34 = 1;
      v35 = vdup_n_s32(v34);
      v36.i64[0] = v35.u32[0];
      v36.i64[1] = v35.u32[1];
      v37 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v36, 0x3FuLL)), v32, v90);
    }
    ++v22;
    v38 = *(_QWORD *)v17;
    v39 = *(_QWORD *)(v17 + 8);
    *(_QWORD *)v17 = v86;
    *(_QWORD *)(v17 + 8) = v87;
    *(_QWORD *)(v17 + 16) = v88;
    *(int8x16_t *)(v17 + 24) = v33;
    *(int8x16_t *)(v17 + 40) = v37;
    sub_10004A2FC(v38, v39);
    if (v22 == v21)
      goto LABEL_72;
  }
  v42 = v112;
  v43 = v113;
  v44 = v114;
  (*(void (**)(char *, unint64_t, uint64_t, double))(v113 + 16))(v112, v40+ ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80))+ *(_QWORD *)(v113 + 72) * v22, v114, 0.0);
  swift_bridgeObjectRetain(v41);
  v46 = Date.timeIntervalSinceReferenceDate.getter(v45);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
  if (!((unint64_t)v41 >> 62))
  {
    v47 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = v115;
    if (v47)
      goto LABEL_19;
    goto LABEL_36;
  }
  if (v41 >= 0)
    v53 = v41 & 0xFFFFFFFFFFFFFF8;
  else
    v53 = v41;
  swift_bridgeObjectRetain(v41);
  v47 = _CocoaArrayWrapper.endIndex.getter(v53);
  swift_bridgeObjectRelease(v41);
  v21 = v115;
  if (!v47)
  {
LABEL_36:
    _Q0 = swift_bridgeObjectRelease(v41);
    _Q0.n128_u64[0] = 0;
    goto LABEL_37;
  }
LABEL_19:
  v48 = 4;
  while (1)
  {
    result = (v41 & 0xC000000000000001) != 0
           ? specialized _ArrayBuffer._getElementSlowPath(_:)(v48 - 4, v41)
           : (uint64_t)*(id *)(v41 + 8 * v48);
    v49 = (void *)result;
    v50 = v48 - 3;
    if (__OFADD__(v48 - 4, 1))
      break;
    objc_msgSend((id)result, "timeStamp");
    if (vabdd_f64(v51, v46) < 2.22044605e-16)
    {
      v52 = objc_msgSend(v49, "state", swift_bridgeObjectRelease(v41).n128_f64[0]);

      if (v52)
        _Q0.n128_f64[0] = 0.0;
      else
        _Q0.n128_f64[0] = 1.0;
      goto LABEL_31;
    }

    ++v48;
    if (v50 == v47)
    {
      _Q0 = swift_bridgeObjectRelease(v41);
      _Q0.n128_u64[0] = 0;
LABEL_31:
      v21 = v115;
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
  return result;
}

void sub_1005B87E8()
{
  char *v0;
  double Width;
  double v2;
  id v3;
  id v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  double v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double MaxY;
  id v32;
  void *v33;
  double v34;
  double v35;
  _BYTE *v36;
  void *v37;
  _BYTE *v38;
  uint64_t v39;
  objc_super v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;

  v40.receiver = v0;
  v40.super_class = (Class)type metadata accessor for ActivityStandChartView();
  objc_msgSendSuper2(&v40, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  Width = CGRectGetWidth(v41);
  v2 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_chartHeight];
  v3 = sub_1005B71E4();
  objc_msgSend(v3, "setFrame:", 0.0, 0.0, Width, v2);

  v4 = sub_1005B7360();
  objc_msgSend(v4, "setFrame:", 0.0, 0.0, Width, v2);

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_axisLayer], "setFrame:", sub_1005B8F54(0.0));
  objc_msgSend(v0, "bounds");
  v5 = CGRectGetWidth(v42);
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels];
  if (!((unint64_t)v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp22ActivityStandChartView_labels]);
    if (v7)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v6, v8, v9, v10, v11, v12, v13, v14);
    v36 = sub_1005B71E4();
    v37 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v37, "begin");
    objc_msgSend(v37, "setDisableActions:", 1);
    v36[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = 1;
    sub_1003D8914();
    objc_msgSend(v37, "commit");

    v38 = sub_1005B7360();
    objc_msgSend(v37, "begin");
    objc_msgSend(v37, "setDisableActions:", 1);
    v38[OBJC_IVAR____TtC10FitnessApp14BarSeriesLayer_activeShapeType] = 1;
    sub_1003D8914();
    objc_msgSend(v37, "commit");

    return;
  }
LABEL_12:
  if (v6 < 0)
    v39 = v6;
  else
    v39 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v7 = _CocoaArrayWrapper.endIndex.getter(v39);
  if (!v7)
    goto LABEL_10;
LABEL_3:
  v15 = v5 * 0.25;
  v16 = (void *)objc_opt_self(UIFont);
  v17 = 4;
  v5 = 0.0;
  while (1)
  {
    if ((v6 & 0xC000000000000001) != 0)
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v6);
    else
      v18 = *(id *)(v6 + 8 * v17);
    v19 = v18;
    v20 = v17 - 3;
    if (__OFADD__(v17 - 4, 1))
    {
      __break(1u);
      goto LABEL_12;
    }
    objc_msgSend(v18, "sizeToFit");
    v21 = v19;
    objc_msgSend(v21, "bounds");
    objc_msgSend(v21, "setFrame:", v5, 0.0);

    v22 = sub_1005B71E4();
    objc_msgSend(v22, "frame");
    v24 = v23;
    v26 = v25;
    v28 = v27;
    v30 = v29;

    v43.origin.x = v24;
    v43.origin.y = v26;
    v43.size.width = v28;
    v43.size.height = v30;
    MaxY = CGRectGetMaxY(v43);
    v32 = objc_msgSend(v16, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleCaption2, 1024, UIContentSizeCategoryExtraExtraExtraLarge);
    if (!v32)
      break;
    v33 = v32;
    objc_msgSend(v32, "_scaledValueForValue:", 13.0);
    v35 = v34;

    objc_msgSend(v21, "_setFirstLineBaselineFrameOriginY:", MaxY + v35);
    v5 = v15 + v5;
    ++v17;
    if (v20 == v7)
      goto LABEL_10;
  }
  __break(1u);
}

uint64_t type metadata accessor for ActivityStandChartView()
{
  return objc_opt_self(_TtC10FitnessApp22ActivityStandChartView);
}

CHWorkoutDetailHeartRateTableViewCell *sub_1005B8D08()
{
  CHWorkoutDetailHeartRateTableViewCell *v0;
  uint64_t v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  SEL v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  const char *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  __int128 v23;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;

  sub_1005B7054(&v24);
  v0 = v25;
  swift_bridgeObjectRetain(v25);
  v2 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1005B8E34(v1, (uint64_t (*)(_QWORD, double))sub_1002219EC);
  swift_bridgeObjectRelease(v0, v3, v4, v5, v6, v7, v8, v9);
  sub_10003EDC4(&v24);
  v17 = *(_QWORD *)v2->cellPadding;
  if (v17)
  {
    sub_100121A8C(0, v17, 0);
    v18 = 0;
    v19 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
    do
    {
      v20 = *((_OWORD *)&v2[1].super.super.super.super.isa + v18);
      v21 = *(_QWORD *)_swiftEmptyArrayStorage.cellInset;
      if (v19 >= v21 >> 1)
      {
        v23 = *((_OWORD *)&v2[1].super.super.super.super.isa + v18);
        sub_100121A8C(v21 > 1, v19 + 1, 1);
        v20 = v23;
      }
      ++v18;
      *(_QWORD *)_swiftEmptyArrayStorage.cellPadding = v19 + 1;
      *((_OWORD *)&_swiftEmptyArrayStorage + v19++ + 2) = v20;
    }
    while (v17 != v18);
  }
  swift_bridgeObjectRelease(v2, v10, v11, v12, v13, v14, v15, v16);
  return &_swiftEmptyArrayStorage;
}

_QWORD *sub_1005B8E34(uint64_t a1, uint64_t (*a2)(_QWORD, double))
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t (*v16)(_QWORD, double);

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(a1);
  v5 = 0;
  v6 = _swiftEmptyArrayStorage;
  v16 = a2;
  do
  {
    v8 = a2(v5, *(double *)(a1 + 8 * v5 + 32));
    if ((v10 & 1) == 0)
    {
      v11 = v8;
      v12 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
        v6 = sub_100140820(0, v6[2] + 1, 1, v6);
      v14 = v6[2];
      v13 = v6[3];
      if (v14 >= v13 >> 1)
        v6 = sub_100140820((_QWORD *)(v13 > 1), v14 + 1, 1, v6);
      v6[2] = v14 + 1;
      v7 = &v6[2 * v14];
      v7[4] = v11;
      v7[5] = v12;
      a2 = v16;
    }
    ++v5;
  }
  while (v2 != v5);
  swift_bridgeObjectRelease(a1);
  return v6;
}

double sub_1005B8F54(double a1)
{
  return a1 + 1.0;
}

uint64_t sub_1005B8F70()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005B8F94(uint64_t a1)
{
  uint64_t v1;

  sub_1005B7938(a1, v1);
}

void sub_1005B8F9C()
{
  id v0;
  CHWorkoutDetailHeartRateTableViewCell *v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  NSString v3;
  SEL v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  sub_1005B9248();
  if (v1)
  {
    v2 = v1;
    v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v2, v4, v5, v6, v7, v8, v9, v10);
  }
  else
  {
    v3 = 0;
  }
  objc_msgSend(v0, "setDateFormat:", v3);

  qword_10083C640 = (uint64_t)v0;
}

uint64_t sub_1005B901C(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v25 = a2;
  v23 = 0;
  v24 = 0xE000000000000000;
  v20 = a3 & 0xFFFFFFFFFFFFLL;
  v21 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a4) & 0xF;
  else
    v6 = a3 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    v9 = 0;
    v18 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
    v19 = a4 & 0xFFFFFFFFFFFFFFLL;
    do
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        v12 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(v9 << 16, a3, a4);
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v22[0] = a3;
          v22[1] = v19;
          v10 = v22;
          v11 = v21;
        }
        else
        {
          v10 = (_QWORD *)v18;
          v11 = v20;
          if ((a3 & 0x1000000000000000) == 0)
            v10 = (_QWORD *)_StringObject.sharedUTF8.getter(a3, a4);
        }
        v12 = _decodeScalar(_:startingAt:)(v10, v11, v9);
      }
      v14 = v12;
      v15 = v13;
      LODWORD(v22[0]) = v12;
      v16 = a1(v22);
      if (v4)
      {
        swift_bridgeObjectRelease(a4);
        return swift_bridgeObjectRelease(v24);
      }
      if ((v16 & 1) != 0)
        String.UnicodeScalarView.append(_:)(v14);
      v9 += v15;
    }
    while (v9 < v6);
    swift_bridgeObjectRelease(a4);
    return v23;
  }
  else
  {
    swift_bridgeObjectRelease(a4);
    return 0;
  }
}

id sub_1005B9170()
{
  id v0;
  id result;
  void *v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  result = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleCaption2, 1024, UIContentSizeCategoryExtraExtraExtraLarge);
  if (result)
  {
    v2 = result;
    objc_msgSend(v0, "setFont:", result);

    v3 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    objc_msgSend(v0, "setTextColor:", v3);

    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005B9248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  void *v10;
  NSString v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;
  id v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  _BYTE v45[16];
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v0 = type metadata accessor for CharacterSet(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v45[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (_CPTimeFormatIs24HourMode(v6))
    v9 = (CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000;
  else
    v9 = (CHWorkoutDetailHeartRateTableViewCell *)0xE400000000000000;
  v10 = (void *)objc_opt_self(NSDateFormatter);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9, v12, v13, v14, v15, v16, v17, v18);
  static Locale.current.getter(v19);
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
  v21 = objc_msgSend(v10, "dateFormatFromTemplate:options:locale:", v11, 0, isa);

  if (!v21)
    return 0;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v48 = v22;
  v49 = (unint64_t)v24;
  v46 = 97;
  v47 = 0xE100000000000000;
  v25 = sub_100038CA0();
  if ((StringProtocol.contains<A>(_:)(&v46, &type metadata for String, &type metadata for String, v25, v25) & 1) != 0)
  {
    v26 = CharacterSet.init(charactersIn:)(24864, 0xE200000000000000);
    __chkstk_darwin(v26);
    *(_QWORD *)&v45[-16] = v3;
    swift_bridgeObjectRetain(v24);
    v27 = sub_1005B901C((uint64_t (*)(_QWORD *))sub_1005B94AC, (uint64_t)&v45[-32], v22, (unint64_t)v24);
    v29 = v28;
    v48 = 0;
    v49 = 0xE000000000000000;
    v46 = v27;
    v47 = (unint64_t)v28;
    String.UnicodeScalarView.append<A>(contentsOf:)(&v46, &type metadata for String.UnicodeScalarView, &protocol witness table for String.UnicodeScalarView);
    swift_bridgeObjectRelease(v24, v30, v31, v32, v33, v34, v35, v36);
    swift_bridgeObjectRelease(v29, v37, v38, v39, v40, v41, v42, v43);
    v22 = v48;
    (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v22;
}

BOOL sub_1005B94AC(unsigned int *a1)
{
  return (CharacterSet.contains(_:)(*a1) & 1) == 0;
}

_QWORD *sub_1005B94E0(void (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v9 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v30 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (_QWORD *)__chkstk_darwin(v14);
  v29 = (char *)&v25 - v17;
  if (a3 == a4)
  {
    return _swiftEmptyArrayStorage;
  }
  else
  {
    if (a4 >= a3)
    {
      v18 = _swiftEmptyArrayStorage;
      v27 = a1;
      v28 = a2;
      v26 = v13;
      while (a3 < a4)
      {
        v31 = a3;
        a1(&v31);
        if (v4)
        {
          swift_bridgeObjectRelease(v18);
          return v18;
        }
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          result = (_QWORD *)sub_10001BE90((uint64_t)v11, (uint64_t *)&unk_100828370);
        }
        else
        {
          v19 = a4;
          v20 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
          v21 = v29;
          v20(v29, v11, v12);
          v20(v30, v21, v12);
          if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
            v18 = (_QWORD *)sub_100048E4C(0, v18[2] + 1, 1, (unint64_t)v18);
          v23 = v18[2];
          v22 = v18[3];
          if (v23 >= v22 >> 1)
            v18 = (_QWORD *)sub_100048E4C(v22 > 1, v23 + 1, 1, (unint64_t)v18);
          v18[2] = v23 + 1;
          v24 = (unint64_t)v18
              + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))
              + *(_QWORD *)(v26 + 72) * v23;
          v13 = v26;
          result = (_QWORD *)((uint64_t (*)(unint64_t, char *, uint64_t))v20)(v24, v30, v12);
          a4 = v19;
          a1 = v27;
        }
        if (a4 == ++a3)
          return v18;
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

CHWorkoutDetailHeartRateTableViewCell *sub_1005B9730(void (*a1)(__int128 *__return_ptr, char *, __n128), uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v7;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  const char *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  const char *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  __int128 v34;
  uint64_t v35;
  __int128 v36[2];
  char v37;

  v4 = *(_QWORD *)a3->cellPadding;
  if (!v4)
    return &_swiftEmptyArrayStorage;
  v7 = swift_bridgeObjectRetain(a3);
  v8 = 0;
  v9 = &_swiftEmptyArrayStorage;
  do
  {
    v37 = *((_BYTE *)&a3[1].super.super.super.super.isa + v8);
    a1(&v34, &v37, v7);
    if (v3)
    {
      swift_bridgeObjectRelease(v9, v17, v18, v19, v20, v21, v22, v23);
      swift_bridgeObjectRelease(a3, v26, v27, v28, v29, v30, v31, v32);
      return v9;
    }
    if (v35)
    {
      sub_10002411C(&v34, (uint64_t)v36);
      sub_10002411C(v36, (uint64_t)&v34);
      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
        v9 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD04(0, *(_QWORD *)v9->cellPadding + 1, 1, v9);
      v25 = *(_QWORD *)v9->cellPadding;
      v24 = *(_QWORD *)v9->cellInset;
      if (v25 >= v24 >> 1)
        v9 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FD04((_QWORD *)(v24 > 1), v25 + 1, 1, v9);
      *(_QWORD *)v9->cellPadding = v25 + 1;
      sub_10002411C(&v34, (uint64_t)&v9[1] + 40 * v25);
    }
    else
    {
      sub_10001BE90((uint64_t)&v34, &qword_100832410);
    }
    ++v8;
  }
  while (v4 != v8);
  swift_bridgeObjectRelease(a3, v10, v11, v12, v13, v14, v15, v16);
  return v9;
}

CHWorkoutDetailHeartRateTableViewCell *sub_1005B98A8(void (*a1)(_QWORD, __n128), uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  uint64_t v18;
  const char *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  const char *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  unint64_t v36;
  unint64_t v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  void (*v47)(_QWORD, __n128);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;

  v52 = a2;
  v6 = sub_100047110(&qword_10083C808);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100047110(&qword_100822168);
  v9 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v51 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v48 = (char *)&v46 - v12;
  v13 = *(_QWORD *)a3->cellPadding;
  if (!v13)
    return (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(type metadata accessor for Artwork(0) - 8);
  v15 = (char *)a3 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v50 = *(_QWORD *)(v14 + 72);
  v46 = a3;
  v16 = swift_bridgeObjectRetain(a3);
  v17 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyArrayStorage;
  v47 = a1;
  v18 = v49;
  do
  {
    a1(v15, v16);
    if (v3)
    {
      swift_bridgeObjectRelease(v17, v26, v27, v28, v29, v30, v31, v32);
      swift_bridgeObjectRelease(v46, v38, v39, v40, v41, v42, v43, v44);
      return v17;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v18) == 1)
    {
      sub_10001BE90((uint64_t)v8, &qword_10083C808);
    }
    else
    {
      v33 = v9;
      v34 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v35 = v48;
      v34(v48, v8, v18);
      v34(v51, v35, v18);
      if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        v17 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10014114C(0, *(_QWORD *)v17->cellPadding + 1, 1, (unint64_t)v17);
      v37 = *(_QWORD *)v17->cellPadding;
      v36 = *(_QWORD *)v17->cellInset;
      if (v37 >= v36 >> 1)
        v17 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10014114C(v36 > 1, v37 + 1, 1, (unint64_t)v17);
      *(_QWORD *)v17->cellPadding = v37 + 1;
      v18 = v49;
      v34((char *)v17+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v37, v51, v49);
      v9 = v33;
      a1 = v47;
    }
    v15 += v50;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease(v46, v19, v20, v21, v22, v23, v24, v25);
  return v17;
}

CHWorkoutDetailHeartRateTableViewCell *sub_1005B9B24(void (*a1)(_QWORD, __n128), uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  const char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  void (*v45)(_QWORD, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v6 = sub_100047110(&qword_1008236A8);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint(0);
  v9 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v48 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v46 = (uint64_t)&v43 - v12;
  v13 = *(_QWORD *)a3->cellPadding;
  if (!v13)
    return &_swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(type metadata accessor for SleepingSampleBaselineComparison(0) - 8);
  v15 = (char *)a3 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v47 = *(_QWORD *)(v14 + 72);
  v44 = a3;
  v16 = swift_bridgeObjectRetain(a3);
  v17 = &_swiftEmptyArrayStorage;
  v45 = a1;
  do
  {
    a1(v15, v16);
    if (v3)
    {
      swift_bridgeObjectRelease(v17, v25, v26, v27, v28, v29, v30, v31);
      swift_bridgeObjectRelease(v44, v35, v36, v37, v38, v39, v40, v41);
      return v17;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v49) == 1)
    {
      sub_10001BE90((uint64_t)v8, &qword_1008236A8);
    }
    else
    {
      v32 = v46;
      sub_1004C1624((uint64_t)v8, v46);
      sub_1004C1624(v32, v48);
      if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        v17 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141600(0, *(_QWORD *)v17->cellPadding + 1, 1, (unint64_t)v17);
      v34 = *(_QWORD *)v17->cellPadding;
      v33 = *(_QWORD *)v17->cellInset;
      if (v34 >= v33 >> 1)
        v17 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141600(v33 > 1, v34 + 1, 1, (unint64_t)v17);
      *(_QWORD *)v17->cellPadding = v34 + 1;
      sub_1004C1624(v48, (uint64_t)v17+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v34);
      a1 = v45;
    }
    v15 += v47;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease(v44, v18, v19, v20, v21, v22, v23, v24);
  return v17;
}

_QWORD *sub_1005B9D78(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  result = _swiftEmptyArrayStorage;
  v15 = (unint64_t)_swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = a3 + 32;
    swift_bridgeObjectRetain(a3);
    do
    {
      v10 = a1(&v14, v8);
      if (v3)
      {
        swift_bridgeObjectRelease(a3);
        return (_QWORD *)swift_bridgeObjectRelease(v15);
      }
      v11 = v14;
      if (v14)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v13 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v12 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
        specialized Array._endMutation()(v9);
      }
      v8 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(a3);
    return (_QWORD *)v15;
  }
  return result;
}

CHWorkoutDetailHeartRateTableViewCell *sub_1005B9E90(void (*a1)(_QWORD, __n128), uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  CHWorkoutDetailHeartRateTableViewCell *v18;
  uint64_t v19;
  const char *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  const char *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  unint64_t v37;
  unint64_t v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  void (*v48)(_QWORD, __n128);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  v53 = a2;
  v6 = sub_100047110(&qword_10082FF70);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for CatalogLockup(0);
  v9 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v52 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v49 = (char *)&v47 - v13;
  v14 = *(_QWORD *)a3->cellPadding;
  if (!v14)
    return &_swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(type metadata accessor for PersonalizationCandidate(0, v12) - 8);
  v16 = (char *)a3 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v51 = *(_QWORD *)(v15 + 72);
  v47 = a3;
  v17 = swift_bridgeObjectRetain(a3);
  v18 = &_swiftEmptyArrayStorage;
  v48 = a1;
  v19 = v50;
  do
  {
    a1(v16, v17);
    if (v3)
    {
      swift_bridgeObjectRelease(v18, v27, v28, v29, v30, v31, v32, v33);
      swift_bridgeObjectRelease(v47, v39, v40, v41, v42, v43, v44, v45);
      return v18;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v19) == 1)
    {
      sub_10001BE90((uint64_t)v8, &qword_10082FF70);
    }
    else
    {
      v34 = v9;
      v35 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v36 = v49;
      v35(v49, v8, v19);
      v35(v52, v36, v19);
      if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
        v18 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141A70(0, *(_QWORD *)v18->cellPadding + 1, 1, (unint64_t)v18);
      v38 = *(_QWORD *)v18->cellPadding;
      v37 = *(_QWORD *)v18->cellInset;
      if (v38 >= v37 >> 1)
        v18 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100141A70(v37 > 1, v38 + 1, 1, (unint64_t)v18);
      *(_QWORD *)v18->cellPadding = v38 + 1;
      v19 = v50;
      v35((char *)v18+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v38, v52, v50);
      v9 = v34;
      a1 = v48;
    }
    v16 += v51;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease(v47, v20, v21, v22, v23, v24, v25, v26);
  return v18;
}

void sub_1005BA128(uint64_t a1)
{
  sub_1005BA158(a1, 0x4D4D4D4D4DLL, 0xE500000000000000, &qword_10083C648);
}

void sub_1005BA144(uint64_t a1)
{
  sub_1005BA158(a1, 121, 0xE100000000000000, &qword_10083C650);
}

void sub_1005BA158(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v5;
  NSString v6;

  v5 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setLocalizedDateFormatFromTemplate:", v6);

  *a4 = v5;
}

CHWorkoutDetailHeartRateTableViewCell *sub_1005BA1CC()
{
  uint64_t v0;
  CGFloat Width;
  double v2;
  double v3;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *result;
  unint64_t v6;
  unint64_t v7;
  double v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  CGRect v10;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer), "frame");
  Width = CGRectGetWidth(v10);
  v2 = Width / 52.0 + (Width / 52.0 + -2.0) / 52.0;
  sub_10012185C(0, 52, 0);
  v3 = 0.0;
  v4 = 1;
  result = &_swiftEmptyArrayStorage;
  do
  {
    v9 = result;
    v7 = *(_QWORD *)result->cellPadding;
    v6 = *(_QWORD *)result->cellInset;
    if (v7 >= v6 >> 1)
    {
      sub_10012185C(v6 > 1, v7 + 1, 1);
      result = v9;
    }
    v8 = v2 * v3;
    v3 = (double)v4;
    *(_QWORD *)result->cellPadding = v7 + 1;
    *((double *)&result[1].super.super.super.super.isa + v7) = v8 + 1.0;
    ++v4;
  }
  while (v4 != 53);
  return result;
}

CHWorkoutDetailHeartRateTableViewCell *sub_1005BA350()
{
  uint64_t v0;
  CGFloat Width;
  double v2;
  double v3;
  uint64_t v4;
  CHWorkoutDetailHeartRateTableViewCell *result;
  unint64_t v6;
  unint64_t v7;
  double v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  CGRect v10;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer), "frame");
  Width = CGRectGetWidth(v10);
  v2 = (Width / 52.0 + (Width / 52.0 + -2.0) / 52.0) * 0.5;
  sub_10012185C(0, 103, 0);
  v3 = 0.0;
  v4 = 1;
  result = &_swiftEmptyArrayStorage;
  while (v3 < 103.0)
  {
    v9 = result;
    v7 = *(_QWORD *)result->cellPadding;
    v6 = *(_QWORD *)result->cellInset;
    if (v7 >= v6 >> 1)
    {
      sub_10012185C(v6 > 1, v7 + 1, 1);
      result = v9;
    }
    v8 = v2 * v3;
    v3 = (double)v4;
    *(_QWORD *)result->cellPadding = v7 + 1;
    *((double *)&result[1].super.super.super.super.isa + v7) = v8 + 1.0;
    if (++v4 == 104)
      return result;
  }
  __break(1u);
  return result;
}

char *sub_1005BA474(int a1, int a2, __int128 *a3, __int128 *a4, void *a5, double a6, double a7)
{
  char *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  char *result;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  char *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  id v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char *v53;
  uint64_t *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  char *v58;
  __int128 *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  void *v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  id v68;
  char *v69;
  __int128 v70;
  char *v71;
  __int128 v72;
  char *v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  id v79;
  objc_class *v80;
  char *v81;
  void *v82;
  char *v83;
  id v84;
  _QWORD v85[2];
  char *v86;
  int v87;
  void *v88;
  uint64_t *v89;
  uint64_t v90;
  __int128 *v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  UIContentSizeCategory v95;
  uint64_t v96;
  UIFontTextStyle v97;
  objc_super v98;
  uint64_t v99[7];
  _OWORD v100[3];
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  _OWORD v106[3];
  uint64_t v107;
  _OWORD v108[3];
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;

  v88 = a5;
  v89 = (uint64_t *)a3;
  v91 = a4;
  v94 = a2;
  v87 = a1;
  v10 = type metadata accessor for Date(0);
  v92 = *(_QWORD *)(v10 - 8);
  v93 = v10;
  __chkstk_darwin(v10);
  v90 = (uint64_t)v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_titleLabel;
  v13 = objc_allocWithZone((Class)UILabel);
  v14 = v7;
  v15 = objc_msgSend(v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v15, "setAdjustsFontForContentSizeCategory:", 1);
  *(_QWORD *)&v7[v12] = v15;
  v96 = sub_10001E724(0, &qword_1008261E0, UILabel_ptr);
  v16 = sub_1004C2368();
  v17 = (void *)objc_opt_self(UIFont);
  v97 = UIFontTextStyleCaption2;
  v95 = UIContentSizeCategoryExtraExtraExtraLarge;
  result = (char *)objc_msgSend(v17, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleCaption2, 1024);
  if (result)
  {
    v19 = result;
    v20 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMaxLabel;
    objc_msgSend(v16, "setFont:", result);

    *(_QWORD *)&v14[v20] = v16;
    v21 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer;
    v22 = sub_10001E724(0, (unint64_t *)&qword_100821308, UIView_ptr);
    *(_QWORD *)&v14[v21] = sub_1005AEF5C();
    v23 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container365;
    *(_QWORD *)&v14[v23] = sub_1005AEF5C();
    v24 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container90;
    v85[1] = v22;
    *(_QWORD *)&v14[v24] = sub_1005AEF5C();
    v25 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisContainer;
    *(_QWORD *)&v14[v25] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
    v26 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisLayer;
    *(_QWORD *)&v14[v26] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    v27 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer90;
    *(_QWORD *)&v14[v27] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
    v28 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90;
    *(_QWORD *)&v14[v28] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    v29 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer365;
    *(_QWORD *)&v14[v29] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
    v30 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365;
    *(_QWORD *)&v14[v30] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    v31 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer90;
    *(_QWORD *)&v14[v31] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    v32 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer365;
    *(_QWORD *)&v14[v32] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    v33 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter365;
    type metadata accessor for TrendAveragePlatterView();
    *(_QWORD *)&v14[v33] = sub_1005AEF5C();
    v34 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter90;
    *(_QWORD *)&v14[v34] = sub_1005AEF5C();
    v35 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMask;
    v36 = type metadata accessor for TrendChartMaskingView();
    *(_QWORD *)&v14[v35] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v36)), "init");
    v37 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter;
    type metadata accessor for TrendsScrubberPlatterView();
    *(_QWORD *)&v14[v37] = sub_1005AEF5C();
    v38 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole;
    type metadata accessor for TrendsScrubberFlagpoleView();
    v39 = sub_1005AEF5C();
    v86 = v14;
    *(_QWORD *)&v14[v38] = v39;
    *(_QWORD *)&v108[0] = _swiftEmptyArrayStorage;
    v40 = 12;
    specialized ContiguousArray.reserveCapacity(_:)(12);
    do
    {
      v41 = sub_1004C2368();
      result = (char *)objc_msgSend(v17, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", v97, 1024, v95);
      if (!result)
      {
        __break(1u);
        goto LABEL_13;
      }
      v42 = result;
      objc_msgSend(v41, "setFont:", result);

      v43 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
      objc_msgSend(v41, "setTextColor:", v43);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v41, "setTextAlignment:", 0));
      v44 = *(_QWORD *)(*(_QWORD *)&v108[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v44);
      v45 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v41);
      specialized ContiguousArray._endMutation()(v45);
      --v40;
    }
    while (v40);
    v46 = v86;
    *(_QWORD *)&v86[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisMonthLabels] = *(_QWORD *)&v108[0];
    v47 = sub_1004C2368();
    result = (char *)objc_msgSend(v17, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", v97, 1024, v95);
    if (!result)
      goto LABEL_14;
    v48 = result;
    v49 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisYearLabel;
    objc_msgSend(v47, "setFont:", result);

    *(_QWORD *)&v46[v49] = v47;
    v50 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_monthLabelsStackView;
    sub_10001E724(0, &qword_10082A5F8, UIStackView_ptr);
    *(_QWORD *)&v46[v50] = sub_1005AEF5C();
    v51 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_div;
    *(_QWORD *)&v46[v51] = sub_1005AEEC8();
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops] = _swiftEmptyArrayStorage;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineStops] = _swiftEmptyArrayStorage;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_extraTopPaddingPercentage] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_januaryLabel] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewLeftConstraint] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewRightConstraint] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_yearLabelLeftConstraint] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterXConstraint] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterYConstraint] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterXConstraint] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterYConstraint] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberCenterXConstraint] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleBottomConstraint] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleCenterXConstraint] = 0;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_nWeeksIn90DayBucket] = 13;
    v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_filled] = 0;
    v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type] = v87;
    v52 = v94;
    v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_direction] = v94;
    *(double *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_average90] = a6;
    v53 = &v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_histogram90];
    v54 = v89;
    v56 = *((_OWORD *)v89 + 1);
    v55 = *((_OWORD *)v89 + 2);
    v57 = *(_OWORD *)v89;
    *((_QWORD *)v53 + 6) = v89[6];
    *((_OWORD *)v53 + 1) = v56;
    *((_OWORD *)v53 + 2) = v55;
    *(_OWORD *)v53 = v57;
    *(double *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_average365] = a7;
    v58 = &v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_histogram365];
    v59 = v91;
    v61 = v91[1];
    v60 = v91[2];
    v62 = *v91;
    *((_QWORD *)v58 + 6) = *((_QWORD *)v91 + 6);
    *((_OWORD *)v58 + 1) = v61;
    *((_OWORD *)v58 + 2) = v60;
    *(_OWORD *)v58 = v62;
    v63 = v88;
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_formattingManager] = v88;
    v64 = *(_QWORD *)v59;
    v65 = *(__int128 *)((char *)v59 + 8);
    v66 = *(__int128 *)((char *)v59 + 40);
    v111 = *(__int128 *)((char *)v59 + 24);
    v112 = v66;
    v110 = v65;
    v67 = *(_QWORD *)(v64 + 16) - 1;
    v68 = v63;
    sub_10003EE38(v54);
    sub_10003EE38(v59);
    sub_10004A370(1, v67, (double *)v99);
    sub_100045AD4((uint64_t)v99, (uint64_t)v100, &qword_100839838);
    if (*(_QWORD *)&v100[0])
    {
      v102 = v100[0];
      v103 = v100[1];
      v104 = v100[2];
      v105 = v101;
      sub_1004DE8A8(7, (double *)v108);
      sub_10053C850(v99);
      v69 = &v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365];
      v70 = v108[1];
      *(_OWORD *)v69 = v108[0];
      *((_OWORD *)v69 + 1) = v70;
      *((_OWORD *)v69 + 2) = v108[2];
      *((_QWORD *)v69 + 6) = v109;
    }
    else
    {
      v71 = &v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365];
      *(_QWORD *)v71 = v64;
      v72 = v111;
      *(_OWORD *)(v71 + 8) = v110;
      *(_OWORD *)(v71 + 24) = v72;
      *(_OWORD *)(v71 + 40) = v112;
      sub_10003EE38(v59);
    }
    sub_1004DE8A8(7, (double *)v106);
    sub_10003EDC4(v54);
    v73 = &v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram90];
    v74 = v106[1];
    *(_OWORD *)v73 = v106[0];
    *((_OWORD *)v73 + 1) = v74;
    *((_OWORD *)v73 + 2) = v106[2];
    *((_QWORD *)v73 + 6) = v107;
    v75 = v90;
    v76 = sub_1005BAD98(v90, v59);
    sub_10003EDC4((uint64_t *)v59);
    v77 = &v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_firstFirstOfMonth];
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_firstFirstOfMonth] = v76;
    v78 = sub_100047110(&qword_10083C7F0);
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(&v77[*(int *)(v78 + 48)], v75, v93);
    v79 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "init");
    *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_longPressRecognizer] = v79;

    v80 = (objc_class *)type metadata accessor for TrendDetailChartView(0);
    v98.receiver = v46;
    v98.super_class = v80;
    v81 = (char *)objc_msgSendSuper2(&v98, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v82 = *(void **)&v81[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_longPressRecognizer];
    v83 = v81;
    objc_msgSend(v82, "addTarget:action:", v83, "longPressWithSender:");
    objc_msgSend(v82, "setMinimumPressDuration:", 0.2);
    objc_msgSend(v83, "addGestureRecognizer:", v82);
    sub_1005BDA10();
    sub_1005BE824();
    objc_msgSend(v83, "addLayoutGuide:", *(_QWORD *)&v83[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisContainer]);
    sub_1005BB1DC();
    if (v52 == 1)
    {
      v84 = *(id *)&v83[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer];
      objc_msgSend(v84, "setAlpha:", 0.3);

    }
    return v83;
  }
  else
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t sub_1005BAD98(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  double v22;
  double i;
  char *v24;
  char v25;
  uint64_t (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t);
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  char v41;
  uint64_t result;
  unint64_t v43;
  Swift::String v44;
  void *object;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v47 = a1;
  v3 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Calendar.Component(0);
  v51 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v49 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v54 = (char *)&v46 - v14;
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v46 - v16;
  v18 = a2[1];
  v58 = *a2;
  v59 = v18;
  v60 = a2[2];
  v61 = *((_QWORD *)a2 + 6);
  v19 = *((_QWORD *)&v58 + 1);
  v55 = *(_QWORD *)(*((_QWORD *)&v58 + 1) + 16);
  if (v55)
    v20 = *(double *)(*((_QWORD *)&v58 + 1) + 32);
  else
    v20 = 0.0;
  v21 = Date.init(timeIntervalSinceReferenceDate:)(v15, v20);
  v22 = *(double *)&v59 * (double)v55;
  v50 = enum case for Calendar.Component.day(_:);
  v52 = v9;
  v53 = v10;
  v48 = v19;
  if (!v55)
    goto LABEL_6;
LABEL_5:
  for (i = *(double *)(v19 + 32); ; i = 0.0)
  {
    v24 = v54;
    Date.init(timeIntervalSinceReferenceDate:)(v21, v22 + i);
    v25 = static Date.< infix(_:_:)(v17, v24);
    v26 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v27 = v26(v24, v9);
    if ((v25 & 1) == 0)
    {
      Date.init()(v27);
      v26(v17, v9);
      return -1;
    }
    v28 = (uint64_t)v5;
    if (qword_10081D548 != -1)
      swift_once(&qword_10081D548, sub_100005A80);
    v29 = type metadata accessor for Calendar(0);
    sub_10003CE9C(v29, (uint64_t)qword_100869D10);
    v30 = v51;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 104);
    v32 = v50;
    v31(v8, v50, v6);
    v33 = Calendar.component(_:from:)(v8, v17);
    v34 = *(uint64_t (**)(char *, uint64_t))(v30 + 8);
    v35 = v34(v8, v6);
    if (v33 == 1)
    {
      v39 = Date.timeIntervalSinceReferenceDate.getter(v35);
      sub_1005290D4(v39);
      if ((v41 & 1) != 0)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v47, v17, v52);
        return 0;
      }
      else
      {
        v38 = v40 / 7;
        (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v47, v17, v52);
      }
      return v38;
    }
    v31(v8, v32, v6);
    v5 = (char *)v28;
    Calendar.date(byAdding:value:to:wrappingComponents:)(v8, 1, v17, 0);
    v34(v8, v6);
    v9 = v52;
    v10 = v53;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v28, 1, v52) == 1)
      break;
    v26(v17, v9);
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
    v37 = v49;
    v36(v49, v28, v9);
    v21 = ((uint64_t (*)(char *, char *, uint64_t))v36)(v17, v37, v9);
    v19 = v48;
    if (v55)
      goto LABEL_5;
LABEL_6:
    ;
  }
  sub_10001BE90(v28, (uint64_t *)&unk_100828370);
  v56 = 0;
  v57 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease(v57);
  v56 = 0xD000000000000017;
  v57 = 0x80000001006A8F20;
  v43 = sub_1004DF4D4();
  v44._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v9, v43);
  object = v44._object;
  String.append(_:)(v44);
  swift_bridgeObjectRelease(object);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v56, v57, "FitnessApp/TrendDetailChartView.swift", 37, 2, 143, 0);
  __break(1u);
  return result;
}

uint64_t sub_1005BB1DC()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  double v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  void *v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  void *v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  void *v84;
  void *v85;
  void *v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  void *v93;
  void *v94;
  id v95;
  id v96;
  id v97;
  id v98;
  void *v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  double v109;
  void *v110;
  void *v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  void *v122;
  void *v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  _QWORD *v156;
  Class isa;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  Class v193;
  id v195;
  id v196;
  id v197;
  id v198;
  id v199;
  id v200;
  id v201;
  id v202;
  id v203;
  id v204;
  id v205;
  _QWORD *v206;
  id v207;
  id v208;
  id v209;
  id v210;
  id v211;
  id v212;
  id v213;
  id v214;
  id v215;
  id v216;
  id v217;
  id v218;
  id v219;
  id v220;
  id v221;
  id v222;
  id v223;
  id v224;
  id v225;
  id v226;
  id v227;
  id v228;
  id v229;
  id v230;
  id v231;
  id v232;
  id v233;
  id v234;
  id v235;
  id v236;
  id v237;
  id v238;
  id v239;
  id v240;
  id v241;
  id v242;
  id v243;
  id v244;
  id v245;
  id v246;
  id v247;
  id v248;
  id v249;
  id v250;
  id v251;
  id v252;
  id v253;
  id v254;
  id v255;
  id v256;
  id v257;
  id v258;
  id v259;
  id v260;
  id v261;
  id v262;
  id v263;
  id v264;
  id v265;
  id v266;
  id v267;
  id v268;
  _QWORD *v269;
  _QWORD *v270;
  _QWORD *v271;
  _QWORD *v272;
  _QWORD *v273;
  _QWORD *v274;
  _QWORD *v275;
  _QWORD *v276;
  _QWORD *v277;
  _QWORD *v278;
  _QWORD *v279;
  _QWORD *v280;
  _QWORD *v281;
  _QWORD *v282;
  _QWORD *v283;
  _QWORD *v284;
  _QWORD *v285;
  _QWORD *v286;
  _QWORD *v287;
  _QWORD *v288;
  _QWORD *v289;
  _QWORD *v290;
  _QWORD *v291;
  _QWORD *v292;
  _QWORD *v293;
  _QWORD *v294;

  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_titleLabel];
  v2 = objc_msgSend(v1, "topAnchor");
  v3 = objc_msgSend(v0, "topAnchor");
  v259 = objc_msgSend(v2, "constraintEqualToAnchor:constant:", v3, 9.0);

  v4 = objc_msgSend(v1, "leadingAnchor");
  v5 = objc_msgSend(v0, "leadingAnchor");
  v255 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v5, 16.0);

  v6 = objc_msgSend(v1, "trailingAnchor");
  v7 = objc_msgSend(v0, "trailingAnchor");
  v251 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, -16.0);

  v8 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMaxLabel];
  v9 = objc_msgSend(v8, "rightAnchor");
  v10 = objc_msgSend(v0, "rightAnchor");
  v265 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, -14.0);

  v11 = objc_msgSend(v8, "topAnchor");
  v12 = objc_msgSend(v1, "bottomAnchor");
  v263 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v12, 8.0);

  v13 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer];
  v14 = objc_msgSend(v13, "topAnchor");
  v15 = objc_msgSend(v8, "bottomAnchor");
  v261 = objc_msgSend(v14, "constraintGreaterThanOrEqualToAnchor:constant:", v15, 3.0);

  v16 = objc_msgSend(v13, "leftAnchor");
  v17 = objc_msgSend(v0, "leftAnchor");
  v257 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, 14.0);

  v18 = objc_msgSend(v13, "rightAnchor");
  v19 = objc_msgSend(v0, "rightAnchor");
  v253 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, -14.0);

  v20 = objc_msgSend(v13, "heightAnchor");
  v249 = objc_msgSend(v20, "constraintEqualToConstant:", 103.0);

  v21 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container90];
  v22 = objc_msgSend(v21, "topAnchor");
  v23 = objc_msgSend(v13, "topAnchor");
  v247 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  v24 = objc_msgSend(v21, "leftAnchor");
  v25 = objc_msgSend(v13, "leftAnchor");
  v245 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  v26 = objc_msgSend(v21, "rightAnchor");
  v27 = objc_msgSend(v13, "rightAnchor");
  v243 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  v28 = objc_msgSend(v21, "bottomAnchor");
  v29 = objc_msgSend(v13, "bottomAnchor");
  v241 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

  v30 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container365];
  v31 = objc_msgSend(v30, "topAnchor");
  v32 = objc_msgSend(v13, "topAnchor");
  v239 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  v33 = objc_msgSend(v30, "leftAnchor");
  v34 = objc_msgSend(v13, "leftAnchor");
  v237 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  v35 = objc_msgSend(v30, "rightAnchor");
  v36 = objc_msgSend(v13, "rightAnchor");
  v235 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  v37 = objc_msgSend(v30, "bottomAnchor");
  v38 = objc_msgSend(v13, "bottomAnchor");
  v233 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  v39 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisContainer];
  v40 = objc_msgSend(v39, "topAnchor");
  v41 = objc_msgSend(v13, "bottomAnchor");
  v231 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  v42 = objc_msgSend(v39, "leftAnchor");
  v43 = objc_msgSend(v13, "leftAnchor");
  v229 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  v44 = objc_msgSend(v39, "rightAnchor");
  v45 = objc_msgSend(v13, "rightAnchor");
  v227 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  v46 = objc_msgSend(v39, "bottomAnchor");
  v47 = objc_msgSend(v0, "bottomAnchor");
  v225 = objc_msgSend(v46, "constraintEqualToAnchor:constant:", v47, -10.0);

  v48 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_div];
  v49 = objc_msgSend(v48, "leadingAnchor");
  v50 = objc_msgSend(v0, "leadingAnchor");
  v223 = objc_msgSend(v49, "constraintEqualToAnchor:constant:", v50, 16.0);

  v51 = objc_msgSend(v48, "trailingAnchor");
  v52 = objc_msgSend(v0, "trailingAnchor");
  v221 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

  v53 = objc_msgSend(v48, "heightAnchor");
  if (qword_10081DD78 != -1)
    swift_once(&qword_10081DD78, sub_100442F3C);
  v219 = objc_msgSend(v53, "constraintEqualToConstant:", *(double *)&qword_10086AA08);

  v54 = objc_msgSend(v48, "bottomAnchor");
  v55 = objc_msgSend(v0, "bottomAnchor");
  v217 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

  v56 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_monthLabelsStackView];
  v57 = objc_msgSend(v56, "leftAnchor");
  v58 = objc_msgSend(v39, "leftAnchor");
  v59 = 0.0;
  v60 = objc_msgSend(v57, "constraintEqualToAnchor:constant:", v58, 0.0);

  v61 = objc_msgSend(v56, "rightAnchor");
  v62 = objc_msgSend(v39, "rightAnchor");
  v63 = objc_msgSend(v61, "constraintEqualToAnchor:constant:", v62, 0.0);

  v64 = objc_msgSend(v56, "topAnchor");
  v65 = objc_msgSend(v39, "topAnchor");
  v215 = objc_msgSend(v64, "constraintEqualToAnchor:", v65);

  v66 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewLeftConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewLeftConstraint] = v60;
  v205 = v60;

  v67 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewRightConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewRightConstraint] = v63;
  v204 = v63;

  if (!FIUICurrentLanguageRequiresTallScript())
    v59 = -3.0;
  v68 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisYearLabel];
  v69 = objc_msgSend(v68, "leftAnchor");
  v70 = objc_msgSend(v39, "leftAnchor");
  v71 = objc_msgSend(v69, "constraintEqualToAnchor:constant:", v70, 0.0);

  v72 = objc_msgSend(v68, "topAnchor");
  v73 = objc_msgSend(v56, "bottomAnchor");
  v213 = objc_msgSend(v72, "constraintEqualToAnchor:constant:", v73, v59);

  v74 = objc_msgSend(v68, "bottomAnchor");
  v75 = objc_msgSend(v39, "bottomAnchor");
  v211 = objc_msgSend(v74, "constraintEqualToAnchor:", v75);

  v76 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_yearLabelLeftConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_yearLabelLeftConstraint] = v71;
  v202 = v71;

  v77 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter365];
  v78 = objc_msgSend(v77, "centerXAnchor");
  v79 = objc_msgSend(v13, "leftAnchor");
  v80 = objc_msgSend(v78, "constraintEqualToAnchor:constant:", v79, 0.0);

  v81 = objc_msgSend(v77, "centerYAnchor");
  v82 = objc_msgSend(v13, "topAnchor");
  v83 = objc_msgSend(v81, "constraintEqualToAnchor:constant:", v82, 0.0);

  v84 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterXConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterXConstraint] = v80;
  v210 = v80;

  v85 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterYConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterYConstraint] = v83;
  v209 = v83;

  v86 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter90];
  v87 = objc_msgSend(v86, "centerXAnchor");
  v88 = objc_msgSend(v13, "leftAnchor");
  v89 = objc_msgSend(v87, "constraintEqualToAnchor:constant:", v88, 0.0);

  v90 = objc_msgSend(v86, "centerYAnchor");
  v91 = objc_msgSend(v13, "topAnchor");
  v92 = objc_msgSend(v90, "constraintEqualToAnchor:constant:", v91, 0.0);

  v93 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterXConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterXConstraint] = v89;
  v208 = v89;

  v94 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterYConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterYConstraint] = v92;
  v201 = v92;

  v95 = objc_msgSend(v86, "topAnchor");
  v96 = objc_msgSend(v8, "bottomAnchor");
  v207 = objc_msgSend(v95, "constraintGreaterThanOrEqualToAnchor:constant:", v96, 3.0);

  v97 = objc_msgSend(v77, "topAnchor");
  v98 = objc_msgSend(v8, "bottomAnchor");
  v203 = objc_msgSend(v97, "constraintGreaterThanOrEqualToAnchor:constant:", v98, 3.0);

  v99 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter];
  v100 = objc_msgSend(v99, "topAnchor");
  v101 = objc_msgSend(v0, "topAnchor");
  v197 = objc_msgSend(v100, "constraintEqualToAnchor:constant:", v101, 2.0);

  v102 = objc_msgSend(v99, "leftAnchor");
  v103 = objc_msgSend(v0, "leftAnchor");
  v200 = objc_msgSend(v102, "constraintGreaterThanOrEqualToAnchor:constant:", v103, 7.0);

  v104 = objc_msgSend(v99, "rightAnchor");
  v105 = objc_msgSend(v0, "rightAnchor");
  v199 = objc_msgSend(v104, "constraintLessThanOrEqualToAnchor:constant:", v105, -7.0);

  v106 = objc_msgSend(v99, "centerXAnchor");
  v107 = objc_msgSend(v13, "leftAnchor");
  v108 = objc_msgSend(v106, "constraintEqualToAnchor:constant:", v107, 0.0);

  LODWORD(v109) = 1144750080;
  objc_msgSend(v108, "setPriority:", v109);
  v110 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberCenterXConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberCenterXConstraint] = v108;
  v196 = v108;

  v111 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole];
  v112 = objc_msgSend(v111, "topAnchor");
  v113 = objc_msgSend(v99, "centerYAnchor");
  v198 = objc_msgSend(v112, "constraintEqualToAnchor:", v113);

  v114 = objc_msgSend(v111, "bottomAnchor");
  v115 = objc_msgSend(v13, "topAnchor");
  v116 = objc_msgSend(v114, "constraintEqualToAnchor:constant:", v115, 3.0);

  v117 = objc_msgSend(v111, "centerXAnchor");
  v118 = objc_msgSend(v13, "leftAnchor");
  v119 = objc_msgSend(v117, "constraintEqualToAnchor:constant:", v118, 0.0);

  v120 = objc_msgSend(v111, "widthAnchor");
  v121 = objc_msgSend(v120, "constraintEqualToConstant:", 2.0);

  v122 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleBottomConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleBottomConstraint] = v116;
  v195 = v116;

  v123 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleCenterXConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleCenterXConstraint] = v119;
  v124 = v119;

  LODWORD(v123) = v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_direction];
  v125 = sub_100047110((uint64_t *)&unk_100828340);
  v126 = swift_allocObject(v125, 56, 7);
  *(_OWORD *)(v126 + 16) = xmmword_100624C90;
  *(_QWORD *)(v126 + 32) = v259;
  *(_QWORD *)(v126 + 40) = v255;
  *(_QWORD *)(v126 + 48) = v251;
  v280 = (_QWORD *)v126;
  if ((_DWORD)v123 == 1)
  {
    specialized Array._endMutation()(v126);
    v269 = v280;
    v127 = swift_allocObject(v125, 64, 7);
    *(_OWORD *)(v127 + 16) = xmmword_100623750;
    *(_QWORD *)(v127 + 32) = v261;
    *(_QWORD *)(v127 + 40) = v257;
    *(_QWORD *)(v127 + 48) = v253;
    *(_QWORD *)(v127 + 56) = v249;
    v280 = (_QWORD *)v127;
    specialized Array._endMutation()(v127);
    v270 = v280;
    v128 = swift_allocObject(v125, 64, 7);
    *(_OWORD *)(v128 + 16) = xmmword_100623750;
    *(_QWORD *)(v128 + 32) = v247;
    *(_QWORD *)(v128 + 40) = v245;
    *(_QWORD *)(v128 + 48) = v243;
    *(_QWORD *)(v128 + 56) = v241;
    v280 = (_QWORD *)v128;
    specialized Array._endMutation()(v128);
    v271 = v280;
    v129 = swift_allocObject(v125, 64, 7);
    *(_OWORD *)(v129 + 16) = xmmword_100623750;
    *(_QWORD *)(v129 + 32) = v239;
    *(_QWORD *)(v129 + 40) = v237;
    *(_QWORD *)(v129 + 48) = v235;
    *(_QWORD *)(v129 + 56) = v233;
    v280 = (_QWORD *)v129;
    specialized Array._endMutation()(v129);
    v272 = v280;
    v130 = swift_allocObject(v125, 64, 7);
    *(_OWORD *)(v130 + 16) = xmmword_100623750;
    *(_QWORD *)(v130 + 32) = v231;
    *(_QWORD *)(v130 + 40) = v229;
    *(_QWORD *)(v130 + 48) = v227;
    *(_QWORD *)(v130 + 56) = v225;
    v280 = (_QWORD *)v130;
    specialized Array._endMutation()(v130);
    v273 = v280;
    v131 = swift_allocObject(v125, 64, 7);
    *(_OWORD *)(v131 + 16) = xmmword_100623750;
    *(_QWORD *)(v131 + 32) = v223;
    *(_QWORD *)(v131 + 40) = v221;
    *(_QWORD *)(v131 + 48) = v219;
    *(_QWORD *)(v131 + 56) = v217;
    v280 = (_QWORD *)v131;
    specialized Array._endMutation()(v131);
    v274 = v280;
    v132 = swift_allocObject(v125, 48, 7);
    *(_OWORD *)(v132 + 16) = xmmword_100629280;
    *(_QWORD *)(v132 + 32) = v265;
    *(_QWORD *)(v132 + 40) = v263;
    v280 = (_QWORD *)v132;
    specialized Array._endMutation()(v132);
    v275 = v280;
    v133 = swift_allocObject(v125, 56, 7);
    *(_OWORD *)(v133 + 16) = xmmword_100624C90;
    *(_QWORD *)(v133 + 32) = v205;
    *(_QWORD *)(v133 + 40) = v204;
    *(_QWORD *)(v133 + 48) = v215;
    v280 = (_QWORD *)v133;
    specialized Array._endMutation()(v133);
    v276 = v280;
    v134 = swift_allocObject(v125, 56, 7);
    *(_OWORD *)(v134 + 16) = xmmword_100624C90;
    *(_QWORD *)(v134 + 32) = v202;
    *(_QWORD *)(v134 + 40) = v213;
    *(_QWORD *)(v134 + 48) = v211;
    v280 = (_QWORD *)v134;
    specialized Array._endMutation()(v134);
    v277 = v280;
    v135 = swift_allocObject(v125, 64, 7);
    *(_OWORD *)(v135 + 16) = xmmword_100623750;
    *(_QWORD *)(v135 + 32) = v197;
    *(_QWORD *)(v135 + 40) = v200;
    *(_QWORD *)(v135 + 48) = v199;
    *(_QWORD *)(v135 + 56) = v196;
    v280 = (_QWORD *)v135;
    specialized Array._endMutation()(v135);
    v206 = v280;
    v278 = v280;
    v136 = swift_allocObject(v125, 64, 7);
    *(_OWORD *)(v136 + 16) = xmmword_100623750;
    *(_QWORD *)(v136 + 32) = v198;
    *(_QWORD *)(v136 + 40) = v124;
    *(_QWORD *)(v136 + 48) = v195;
    *(_QWORD *)(v136 + 56) = v121;
    v280 = (_QWORD *)v136;
    specialized Array._endMutation()(v136);
    v137 = v280;
    v279 = v280;
    v280 = _swiftEmptyArrayStorage;
    v138 = v196;
    v268 = v195;
    v267 = v124;
    v260 = v259;
    v256 = v255;
    v252 = v251;
    v262 = v261;
    v258 = v257;
    v254 = v253;
    v250 = v249;
    v248 = v247;
    v246 = v245;
    v244 = v243;
    v242 = v241;
    v240 = v239;
    v238 = v237;
    v236 = v235;
    v234 = v233;
    v232 = v231;
    v230 = v229;
    v228 = v227;
    v226 = v225;
    v224 = v223;
    v222 = v221;
    v220 = v219;
    v218 = v217;
    v266 = v265;
    v264 = v263;
    v216 = v215;
    v214 = v213;
    v212 = v211;
    v139 = v197;
    v140 = v200;
    v141 = v199;
    v142 = v198;
    v143 = v121;
    swift_bridgeObjectRetain(v269);
    sub_100032DE4(v144);
    swift_bridgeObjectRetain(v270);
    sub_100032DE4(v145);
    swift_bridgeObjectRetain(v271);
    sub_100032DE4(v146);
    swift_bridgeObjectRetain(v272);
    sub_100032DE4(v147);
    swift_bridgeObjectRetain(v273);
    sub_100032DE4(v148);
    swift_bridgeObjectRetain(v274);
    sub_100032DE4(v149);
    swift_bridgeObjectRetain(v275);
    sub_100032DE4(v150);
    swift_bridgeObjectRetain(v276);
    sub_100032DE4(v151);
    swift_bridgeObjectRetain(v277);
    sub_100032DE4(v152);
    swift_bridgeObjectRetain(v206);
    sub_100032DE4(v153);
    swift_bridgeObjectRetain(v137);
    sub_100032DE4(v154);
    v155 = (void *)objc_opt_self(NSLayoutConstraint);
    v156 = v280;
    sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v155, "activateConstraints:", isa, swift_bridgeObjectRelease(v156).n128_f64[0]);

    v158 = sub_100047110(&qword_1008261E8);
    v159 = &v269;
    v160 = 11;
  }
  else
  {
    specialized Array._endMutation()(v126);
    v281 = v280;
    v161 = swift_allocObject(v125, 64, 7);
    *(_OWORD *)(v161 + 16) = xmmword_100623750;
    *(_QWORD *)(v161 + 32) = v261;
    *(_QWORD *)(v161 + 40) = v257;
    *(_QWORD *)(v161 + 48) = v253;
    *(_QWORD *)(v161 + 56) = v249;
    v280 = (_QWORD *)v161;
    specialized Array._endMutation()(v161);
    v282 = v280;
    v162 = swift_allocObject(v125, 64, 7);
    *(_OWORD *)(v162 + 16) = xmmword_100623750;
    *(_QWORD *)(v162 + 32) = v247;
    *(_QWORD *)(v162 + 40) = v245;
    *(_QWORD *)(v162 + 48) = v243;
    *(_QWORD *)(v162 + 56) = v241;
    v280 = (_QWORD *)v162;
    specialized Array._endMutation()(v162);
    v283 = v280;
    v163 = swift_allocObject(v125, 64, 7);
    *(_OWORD *)(v163 + 16) = xmmword_100623750;
    *(_QWORD *)(v163 + 32) = v239;
    *(_QWORD *)(v163 + 40) = v237;
    *(_QWORD *)(v163 + 48) = v235;
    *(_QWORD *)(v163 + 56) = v233;
    v280 = (_QWORD *)v163;
    specialized Array._endMutation()(v163);
    v284 = v280;
    v164 = swift_allocObject(v125, 64, 7);
    *(_OWORD *)(v164 + 16) = xmmword_100623750;
    *(_QWORD *)(v164 + 32) = v231;
    *(_QWORD *)(v164 + 40) = v229;
    *(_QWORD *)(v164 + 48) = v227;
    *(_QWORD *)(v164 + 56) = v225;
    v280 = (_QWORD *)v164;
    specialized Array._endMutation()(v164);
    v285 = v280;
    v165 = swift_allocObject(v125, 64, 7);
    *(_OWORD *)(v165 + 16) = xmmword_100623750;
    *(_QWORD *)(v165 + 32) = v223;
    *(_QWORD *)(v165 + 40) = v221;
    *(_QWORD *)(v165 + 48) = v219;
    *(_QWORD *)(v165 + 56) = v217;
    v280 = (_QWORD *)v165;
    specialized Array._endMutation()(v165);
    v286 = v280;
    v166 = swift_allocObject(v125, 48, 7);
    *(_OWORD *)(v166 + 16) = xmmword_100629280;
    *(_QWORD *)(v166 + 32) = v265;
    *(_QWORD *)(v166 + 40) = v263;
    v280 = (_QWORD *)v166;
    specialized Array._endMutation()(v166);
    v287 = v280;
    v167 = swift_allocObject(v125, 56, 7);
    *(_OWORD *)(v167 + 16) = xmmword_100624C90;
    *(_QWORD *)(v167 + 32) = v205;
    *(_QWORD *)(v167 + 40) = v204;
    *(_QWORD *)(v167 + 48) = v215;
    v280 = (_QWORD *)v167;
    specialized Array._endMutation()(v167);
    v288 = v280;
    v168 = swift_allocObject(v125, 56, 7);
    *(_OWORD *)(v168 + 16) = xmmword_100624C90;
    *(_QWORD *)(v168 + 32) = v202;
    *(_QWORD *)(v168 + 40) = v213;
    *(_QWORD *)(v168 + 48) = v211;
    v280 = (_QWORD *)v168;
    specialized Array._endMutation()(v168);
    v289 = v280;
    v169 = swift_allocObject(v125, 48, 7);
    *(_OWORD *)(v169 + 16) = xmmword_100629280;
    *(_QWORD *)(v169 + 32) = v210;
    *(_QWORD *)(v169 + 40) = v209;
    v280 = (_QWORD *)v169;
    specialized Array._endMutation()(v169);
    v290 = v280;
    v170 = swift_allocObject(v125, 48, 7);
    *(_OWORD *)(v170 + 16) = xmmword_100629280;
    *(_QWORD *)(v170 + 32) = v208;
    *(_QWORD *)(v170 + 40) = v201;
    v280 = (_QWORD *)v170;
    specialized Array._endMutation()(v170);
    v171 = v280;
    v291 = v280;
    v172 = swift_allocObject(v125, 48, 7);
    *(_OWORD *)(v172 + 16) = xmmword_100629280;
    *(_QWORD *)(v172 + 32) = v207;
    *(_QWORD *)(v172 + 40) = v203;
    v280 = (_QWORD *)v172;
    specialized Array._endMutation()(v172);
    v173 = v280;
    v292 = v280;
    v174 = swift_allocObject(v125, 64, 7);
    *(_OWORD *)(v174 + 16) = xmmword_100623750;
    *(_QWORD *)(v174 + 32) = v197;
    *(_QWORD *)(v174 + 40) = v200;
    *(_QWORD *)(v174 + 48) = v199;
    *(_QWORD *)(v174 + 56) = v196;
    v280 = (_QWORD *)v174;
    specialized Array._endMutation()(v174);
    v175 = v280;
    v293 = v280;
    v176 = swift_allocObject(v125, 64, 7);
    *(_OWORD *)(v176 + 16) = xmmword_100623750;
    *(_QWORD *)(v176 + 32) = v198;
    *(_QWORD *)(v176 + 40) = v124;
    *(_QWORD *)(v176 + 48) = v195;
    *(_QWORD *)(v176 + 56) = v121;
    v280 = (_QWORD *)v176;
    specialized Array._endMutation()(v176);
    v177 = v280;
    v294 = v280;
    v280 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v281);
    sub_100032DE4(v178);
    swift_bridgeObjectRetain(v282);
    sub_100032DE4(v179);
    swift_bridgeObjectRetain(v283);
    sub_100032DE4(v180);
    swift_bridgeObjectRetain(v284);
    sub_100032DE4(v181);
    swift_bridgeObjectRetain(v285);
    sub_100032DE4(v182);
    swift_bridgeObjectRetain(v286);
    sub_100032DE4(v183);
    swift_bridgeObjectRetain(v287);
    sub_100032DE4(v184);
    swift_bridgeObjectRetain(v288);
    sub_100032DE4(v185);
    swift_bridgeObjectRetain(v289);
    sub_100032DE4(v186);
    swift_bridgeObjectRetain(v290);
    sub_100032DE4(v187);
    swift_bridgeObjectRetain(v171);
    sub_100032DE4(v188);
    swift_bridgeObjectRetain(v173);
    sub_100032DE4(v189);
    swift_bridgeObjectRetain(v175);
    sub_100032DE4(v190);
    swift_bridgeObjectRetain(v177);
    sub_100032DE4(v191);
    v192 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
    v193 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v192, "activateConstraints:", v193, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

    v158 = sub_100047110(&qword_1008261E8);
    v159 = &v281;
    v160 = 14;
  }
  return swift_arrayDestroy(v159, v160, v158);
}

void sub_1005BCEE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _UNKNOWN **v3;
  char **v4;
  char **v5;
  void *v6;
  UIFontTextStyle v7;
  UIContentSizeCategory v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisMonthLabels);
  if ((unint64_t)v1 >> 62)
  {
LABEL_17:
    if (v1 < 0)
      v20 = v1;
    else
      v20 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v20);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisMonthLabels));
  }
  v3 = &FIUIDistanceTypeForActivityType_ptr;
  v4 = &selRef_tableView_titleForHeaderInSection_;
  v5 = &selRef_paceColors;
  if (v2)
  {
    v21 = (id)v0;
    v6 = (void *)objc_opt_self(UIFont);
    v7 = UIFontTextStyleCaption2;
    v8 = UIContentSizeCategoryExtraExtraExtraLarge;
    v0 = 4;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v0 - 4, v1);
      else
        v9 = *(id *)(v1 + 8 * v0);
      v10 = v9;
      v11 = v0 - 3;
      if (__OFADD__(v0 - 4, 1))
      {
        __break(1u);
        goto LABEL_17;
      }
      v12 = objc_msgSend(v6, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleCaption2, 1024, UIContentSizeCategoryExtraExtraExtraLarge);
      if (!v12)
        break;
      v13 = v12;
      objc_msgSend(v10, "setFont:", v12);

      ++v0;
      if (v11 == v2)
      {
        swift_bridgeObjectRelease(v1);
        v0 = (uint64_t)v21;
        v5 = &selRef_paceColors;
        v4 = &selRef_tableView_titleForHeaderInSection_;
        v3 = &FIUIDistanceTypeForActivityType_ptr;
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRelease(v1);
  v7 = UIFontTextStyleCaption2;
  v8 = UIContentSizeCategoryExtraExtraExtraLarge;
LABEL_13:
  v14 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMaxLabel);
  v15 = (void *)objc_opt_self(v3[443]);
  v16 = objc_msgSend(v15, v4[425], v7, 1024, v8);
  if (!v16)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v17 = v16;
  objc_msgSend(v14, v5[457], v16);

  v18 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisYearLabel);
  v19 = objc_msgSend(v15, v4[425], v7, 1024, v8);
  if (v19)
  {
    v22 = v19;
    objc_msgSend(v18, v5[457]);

    return;
  }
LABEL_23:
  __break(1u);
}

void sub_1005BD1AC()
{
  id v0;
  NSString v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSDateIntervalFormatter), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setDateTemplate:", v1);

  qword_10086AFF0 = (uint64_t)v0;
}

uint64_t sub_1005BD218(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  id v35;
  Class isa;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  SEL v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  void (*v66)(uint64_t, uint64_t);
  void (*v67)(uint64_t, uint64_t);
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;

  v2 = v1;
  v4 = type metadata accessor for DateInterval(0);
  v71 = *(_QWORD *)(v4 - 8);
  v72 = v4;
  __chkstk_darwin(v4);
  v70 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Calendar.Component(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v10);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v69 - v18;
  __chkstk_darwin(v20);
  __chkstk_darwin(v21);
  if ((a1 & 0x8000000000000000) != 0)
    return 0;
  v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365 + 8);
  if (*(_QWORD *)(v25 + 16) <= a1)
    return 0;
  v69 = v24;
  v26 = (char *)&v69 - v23;
  Date.init(timeIntervalSinceReferenceDate:)(v22, *(double *)(v25 + 8 * a1 + 32));
  if (qword_10081D548 != -1)
    swift_once(&qword_10081D548, sub_100005A80);
  v27 = type metadata accessor for Calendar(0);
  sub_10003CE9C(v27, (uint64_t)qword_100869D10);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for Calendar.Component.day(_:), v6);
  Calendar.date(byAdding:value:to:wrappingComponents:)(v9, 7, v26, 0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v28 = v14;
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v30 = v13;
  if (v29(v12, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v13);
    sub_10001BE90((uint64_t)v12, (uint64_t *)&unk_100828370);
    return 0;
  }
  v31 = v69;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v69, v12, v13);
  v32 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  v33 = v26;
  v32(v19, v26, v30);
  v32(v16, v31, v30);
  v34 = v70;
  DateInterval.init(start:end:)(v19, v16);
  if (qword_10081E090 != -1)
    swift_once(&qword_10081E090, sub_1005BD1AC);
  v35 = (id)qword_10086AFF0;
  isa = DateInterval._bridgeToObjectiveC()().super.isa;
  v37 = objc_msgSend(v35, "stringFromDateInterval:", isa);

  if (!v37)
  {
    (*(void (**)(char *, uint64_t))(v71 + 8))(v34, v72);
    v67 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v67((uint64_t)v69, v30);
    v67((uint64_t)v33, v30);
    return 0;
  }
  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v40 = v39;

  v41 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v42 = String._bridgeToObjectiveC()();
  v43 = objc_msgSend(v41, "localizedStringForKey:value:table:", v42, 0, 0);

  v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
  v45 = v30;
  v46 = v28;
  v48 = v47;

  v49 = sub_100047110((uint64_t *)&unk_100827460);
  v50 = swift_allocObject(v49, 72, 7);
  *(_OWORD *)(v50 + 16) = xmmword_100622F90;
  *(_QWORD *)(v50 + 56) = &type metadata for String;
  *(_QWORD *)(v50 + 64) = sub_100038CF8();
  *(_QWORD *)(v50 + 32) = v38;
  *(_QWORD *)(v50 + 40) = v40;
  v51 = static String.localizedStringWithFormat(_:_:)(v44, v48, v50);
  swift_bridgeObjectRelease(v48, v52, v53, v54, v55, v56, v57, v58);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v50, v59, v60, v61, v62, v63, v64, v65);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v34, v72);
  v66 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
  v66((uint64_t)v69, v45);
  v66((uint64_t)v33, v45);
  return v51;
}

id sub_1005BD6D8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  id v11;
  id v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  unint64_t v24;
  uint64_t v25;
  const char *v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  id result;
  void *v37;
  id v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;

  if ((a1 & 0x8000000000000000) != 0)
    return 0;
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365);
  if (*(_QWORD *)(v2 + 16) <= a1)
    return 0;
  v3 = v2 + 24 * a1;
  if ((*(_BYTE *)(v3 + 48) & 1) != 0)
    return 0;
  v4 = *(double *)(v3 + 32);
  v5 = *(char *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type);
  sub_1000364C8(byte_100648840[v5]);
  v7 = v6;
  v8 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v6, v4);

  if ((((_BYTE)v5 - 3) & 0xFB) != 0)
  {
    v9 = sub_1000363A0(v8, v5);
    if ((v10 & 1) != 0)
      goto LABEL_15;
    v11 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", *(double *)&v9);
    v12 = objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "stringWithNumber:decimalPrecision:roundingMode:", v11, qword_1006487F8[v5], 4);

    if (!v12)
      goto LABEL_15;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

    sub_1000367D4(v5);
    if (v16)
    {
      v23 = (CHWorkoutDetailHeartRateTableViewCell *)v16;
      v24 = sub_100038CA0();
      v25 = StringProtocol.localizedUppercase.getter(&type metadata for String, v24);
      v27 = (CHWorkoutDetailHeartRateTableViewCell *)v26;
      swift_bridgeObjectRelease(v23, v26, v28, v29, v30, v31, v32, v33);
      goto LABEL_12;
    }
    goto LABEL_14;
  }
  v34 = sub_10055E814(v8);
  if (!v35)
  {
LABEL_15:

    return 0;
  }
  v13 = (uint64_t)v34;
  v15 = v35;
  sub_1000367D4(v5);
  if (!v16)
  {
LABEL_14:
    swift_bridgeObjectRelease(v15, v16, v17, v18, v19, v20, v21, v22);
    goto LABEL_15;
  }
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v16, v16, v17, v18, v19, v20, v21, v22);
  v25 = 0;
  v27 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
LABEL_12:
  result = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleTitle3, 1024, UIContentSizeCategoryExtraExtraExtraLarge);
  if (result)
  {
    v37 = result;
    v38 = sub_1000387C4(v13, (uint64_t)v15, v25, (uint64_t)v27, result);

    swift_bridgeObjectRelease(v15, v39, v40, v41, v42, v43, v44, v45);
    swift_bridgeObjectRelease(v27, v46, v47, v48, v49, v50, v51, v52);

    return v38;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005BD94C(unint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  void *v4;
  double Height;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  CGRect v9;
  CGRect v10;

  v2 = *(double *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365 + 24);
  v3 = 0.0;
  if (v2 < 2.22044605e-16)
    goto LABEL_2;
  if ((a1 & 0x8000000000000000) == 0)
  {
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365);
    if (*(_QWORD *)(v7 + 16) > a1)
    {
      v8 = v7 + 24 * a1;
      if ((*(_BYTE *)(v8 + 48) & 1) == 0)
      {
        v3 = *(double *)(v8 + 32) / v2;
LABEL_2:
        v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer);
        objc_msgSend(v4, "bounds");
        Height = CGRectGetHeight(v9);
        objc_msgSend(v4, "bounds");
        *(double *)&result = CGRectGetMaxY(v10) - v3 * Height;
        return result;
      }
    }
  }
  *(double *)&result = 0.0;
  return result;
}

uint64_t sub_1005BDA10()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void *v28;
  id v29;
  id v30;
  double *v31;
  uint64_t v32;
  double v33;
  double v34;
  void *v35;
  Class isa;
  id v37;
  void (*v38)(_QWORD, _QWORD, _QWORD);
  uint64_t v39;
  uint64_t v40;
  Class v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSString v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(_QWORD, _QWORD, _QWORD);
  uint64_t v56;
  uint64_t v57;
  NSString v58;
  char *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSString v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  id v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  __n128 v83;
  unint64_t v84;
  char *v85;
  char *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  id v97;
  void *v98;
  unint64_t *v99;
  void *v100;
  Class v101;
  NSString v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  id v114;
  char *v115;
  void *v116;
  char *v117;
  Class v118;
  NSString v119;
  double v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  uint64_t (*v124)(char *, uint64_t);
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  _QWORD *v132;
  char *v133;
  unsigned int v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(_QWORD, _QWORD, _QWORD);
  char *v142;
  uint64_t v143;
  char *v144;
  id v145;
  uint64_t v146;
  _QWORD *v147;
  char *v148;
  void (*v149)(char *, uint64_t);
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  v1 = v0;
  v2 = type metadata accessor for Calendar.Component(0);
  v138 = *(_QWORD *)(v2 - 8);
  v139 = v2;
  __chkstk_darwin(v2);
  v137 = (char *)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_10083C7F8);
  v142 = *(char **)(v4 - 8);
  v143 = v4;
  __chkstk_darwin(v4);
  v129 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v6);
  v144 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_10083C800);
  v9 = __chkstk_darwin(v8);
  v147 = (uint64_t *)((char *)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v12 = (unint64_t *)((char *)&v126 - v11);
  v140 = sub_100047110(&qword_10083C7F0);
  __chkstk_darwin(v140);
  v136 = (char *)&v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Date(0);
  v146 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v148 = (char *)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v128 = (char *)&v126 - v18;
  v19 = __chkstk_darwin(v17);
  v133 = (char *)&v126 - v20;
  v21 = __chkstk_darwin(v19);
  v127 = (char *)&v126 - v22;
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v126 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v126 - v26;
  v28 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_titleLabel];
  objc_msgSend(v1, "addSubview:", v28);
  v29 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleCallout);
  objc_msgSend(v28, "setFont:", v29);

  objc_msgSend(v28, "setNumberOfLines:", 0);
  v145 = (id)objc_opt_self(UIColor);
  v30 = objc_msgSend(v145, "labelColor");
  objc_msgSend(v28, "setTextColor:", v30);

  v150 = v1;
  v31 = (double *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_histogram365];
  v32 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_histogram365 + 8];
  v33 = 0.0;
  v34 = 0.0;
  if (*(_QWORD *)(v32 + 16))
    v34 = *(double *)(v32 + 32);
  v35 = (void *)objc_opt_self(NSDateFormatter);
  Date.init(timeIntervalSinceReferenceDate:)(v35, v34);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v149 = *(void (**)(char *, uint64_t))(v146 + 8);
  v149(v27, v14);
  v37 = objc_msgSend(v35, "localizedStringFromDate:dateStyle:timeStyle:", isa, 2, 0);

  v151 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v141 = v38;

  v40 = *(_QWORD *)(v32 + 16);
  if (v40)
    v33 = *(double *)(v32 + 32);
  Date.init(timeIntervalSinceReferenceDate:)(v39, v31[2] * (double)v40 + v33);
  v41 = Date._bridgeToObjectiveC()().super.isa;
  v149(v25, v14);
  v42 = objc_msgSend(v35, "localizedStringFromDate:dateStyle:timeStyle:", v41, 2, 0);

  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
  v45 = v44;

  v46 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v47 = String._bridgeToObjectiveC()();
  v48 = objc_msgSend(v46, "localizedStringForKey:value:table:", v47, 0, 0);

  v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
  v51 = v50;

  v52 = sub_100047110((uint64_t *)&unk_100827460);
  v53 = swift_allocObject(v52, 112, 7);
  *(_OWORD *)(v53 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v53 + 56) = &type metadata for String;
  v54 = sub_100038CF8();
  v55 = v141;
  *(_QWORD *)(v53 + 32) = v151;
  *(_QWORD *)(v53 + 40) = v55;
  *(_QWORD *)(v53 + 96) = &type metadata for String;
  *(_QWORD *)(v53 + 104) = v54;
  *(_QWORD *)(v53 + 64) = v54;
  *(_QWORD *)(v53 + 72) = v43;
  *(_QWORD *)(v53 + 80) = v45;
  static String.localizedStringWithFormat(_:_:)(v49, v51, v53);
  v57 = v56;
  swift_bridgeObjectRelease(v51);
  swift_bridgeObjectRelease(v53);
  v58 = String._bridgeToObjectiveC()();
  objc_msgSend(v28, "setText:", v58, swift_bridgeObjectRelease(v57).n128_f64[0]);

  v59 = v150;
  v60 = *(void **)&v150[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMaxLabel];
  objc_msgSend(v150, "addSubview:", v60);
  sub_1000367D4(v59[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type]);
  if (v62)
  {
    v64 = v62;
    v152 = v61;
    v153 = v62;
    v65 = sub_100038CA0();
    StringProtocol.localizedUppercase.getter(&type metadata for String, v65);
    v67 = v66;
    swift_bridgeObjectRelease(v64);
    v68 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v63 = swift_bridgeObjectRelease(v67).n128_u64[0];
  }
  else
  {
    v68 = 0;
  }
  v69 = v143;
  v70 = v140;
  v71 = v136;
  objc_msgSend(v60, "setText:", v68, v63);

  v72 = objc_msgSend(v145, "secondaryLabelColor");
  objc_msgSend(v60, "setTextColor:", v72);

  v73 = v150;
  v74 = *(int *)(v70 + 48);
  v75 = &v71[v74];
  v76 = v146;
  v141 = *(void (**)(_QWORD, _QWORD, _QWORD))(v146 + 16);
  v141(&v71[v74], &v150[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_firstFirstOfMonth + v74], v14);
  v77 = *(uint64_t (**)(char *, char *, uint64_t))(v76 + 32);
  v78 = v127;
  v79 = v77(v127, v75, v14);
  __chkstk_darwin(v79);
  *(&v126 - 2) = (uint64_t)v78;
  v80 = sub_1005B94E0((void (*)(_QWORD))sub_1005C30F8, (uint64_t)(&v126 - 4), 0, 12);
  v81 = *(char **)&v73[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_monthLabelsStackView];
  objc_msgSend(v73, "addSubview:", v81);
  objc_msgSend(v81, "setAxis:", 0);
  v136 = v81;
  Date.init()(objc_msgSend(v81, "setDistribution:", 1));
  v82 = v80[2];
  v140 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisMonthLabels;
  v130 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_januaryLabel;
  v134 = enum case for Calendar.Component.month(_:);
  v132 = v80;
  v83 = swift_bridgeObjectRetain(v80);
  v131 = 0;
  v84 = 0;
  v85 = v144;
  v86 = v148;
  v135 = v82;
  while (1)
  {
    if (v84 == v82)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v146 + 56))(v85, 1, 1, v14, v83);
      v88 = v82;
LABEL_14:
      sub_10001BE90((uint64_t)v85, (uint64_t *)&unk_100828370);
      v90 = 1;
      goto LABEL_17;
    }
    if (v84 >= v132[2])
      goto LABEL_37;
    v89 = v146;
    ((void (*)(char *, char *, uint64_t, __n128))v141)(v85, (char *)v132+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(_QWORD *)(v146 + 72) * v84, v14, v83);
    v88 = v84 + 1;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v85, 0, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v85, 1, v14) == 1)
      goto LABEL_14;
    v91 = v128;
    v77(v128, v85, v14);
    v92 = &v129[*(int *)(v69 + 48)];
    v77(v92, v91, v14);
    v85 = v131 + 1;
    if (__OFADD__(v131, 1))
      goto LABEL_38;
    v93 = (char *)v147 + *(int *)(v69 + 48);
    *v147 = v131;
    v77(v93, v92, v14);
    v90 = 0;
    v131 = v85;
    v86 = v148;
LABEL_17:
    v85 = v142;
    v94 = (uint64_t)v147;
    (*((void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))v142 + 7))(v147, v90, 1, v69);
    sub_100045AD4(v94, (uint64_t)v12, &qword_10083C800);
    if ((*((unsigned int (**)(unint64_t *, uint64_t, uint64_t))v85 + 6))(v12, 1, v69) == 1)
      break;
    v95 = *v12;
    v77(v86, (char *)v12 + *(int *)(v69 + 48), v14);
    v96 = *(_QWORD *)&v150[v140];
    v151 = v88;
    if ((v96 & 0xC000000000000001) != 0)
    {
      v97 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v95, v96);
    }
    else
    {
      if ((v95 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      if (v95 >= *(_QWORD *)((v96 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_36;
      v97 = *(id *)(v96 + 8 * v95 + 32);
    }
    v98 = v97;
    if (qword_10081E080 != -1)
      swift_once(&qword_10081E080, sub_1005BA128);
    v99 = v12;
    v100 = (void *)qword_10083C648;
    v101 = Date._bridgeToObjectiveC()().super.isa;
    v102 = objc_msgSend(v100, "stringFromDate:", v101);

    if (!v102)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v105 = v104;
      v102 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v103 = swift_bridgeObjectRelease(v105).n128_u64[0];
    }
    v106 = v14;
    v107 = v77;
    objc_msgSend(v98, "setText:", v102, v103);

    if (qword_10081D548 != -1)
      swift_once(&qword_10081D548, sub_100005A80);
    v108 = type metadata accessor for Calendar(0);
    sub_10003CE9C(v108, (uint64_t)qword_100869D10);
    v110 = v137;
    v109 = v138;
    v111 = v139;
    (*(void (**)(char *, _QWORD, uint64_t))(v138 + 104))(v137, v134, v139);
    v86 = v148;
    v112 = Calendar.component(_:from:)(v110, v148);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v111);
    v14 = v106;
    if (v112 == 1)
    {
      v113 = *(void **)&v150[v130];
      *(_QWORD *)&v150[v130] = v98;
      v114 = v98;

      v115 = v133;
      v149(v133, v106);
      v141(v115, v86, v106);
    }
    v87 = objc_msgSend(v145, "secondaryLabelColor");
    objc_msgSend(v98, "setTextColor:", v87);

    objc_msgSend(v136, "addArrangedSubview:", v98);
    v149(v86, v106);
    v69 = v143;
    v85 = v144;
    v77 = v107;
    v12 = v99;
    v82 = v135;
    v84 = v151;
  }
  swift_bridgeObjectRelease_n(v132, 2);
  v85 = *(char **)&v150[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisYearLabel];
  if (qword_10081E088 == -1)
    goto LABEL_32;
LABEL_39:
  swift_once(&qword_10081E088, sub_1005BA144);
LABEL_32:
  v116 = (void *)qword_10083C650;
  v117 = v133;
  v118 = Date._bridgeToObjectiveC()().super.isa;
  v119 = objc_msgSend(v116, "stringFromDate:", v118);

  if (!v119)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v122 = v121;
    v119 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v120 = swift_bridgeObjectRelease(v122).n128_u64[0];
  }
  objc_msgSend(v85, "setText:", v119, v120);

  v123 = objc_msgSend(v145, "secondaryLabelColor");
  objc_msgSend(v85, "setTextColor:", v123);

  objc_msgSend(v150, "addSubview:", v85);
  objc_msgSend(v85, "setTextAlignment:", 0);
  v124 = (uint64_t (*)(char *, uint64_t))v149;
  v149(v117, v14);
  return v124(v127, v14);
}

uint64_t sub_1005BE718(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = type metadata accessor for Calendar.Component(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  if (qword_10081D548 != -1)
    swift_once(&qword_10081D548, sub_100005A80);
  v9 = type metadata accessor for Calendar(0);
  sub_10003CE9C(v9, (uint64_t)qword_100869D10);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Calendar.Component.month(_:), v4);
  Calendar.date(byAdding:value:to:wrappingComponents:)(v7, v8, a2, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_1005BE824()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSString v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *v39;
  char *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void *v46;
  char *v47;
  id v48;
  id v49;
  Class isa;
  uint64_t v51;
  Class v52;
  Class v53;
  objc_class *v54;
  char *v55;
  id v56;
  Class v57;
  objc_class *v58;
  char *v59;
  char *v60;
  char *v61;
  id v62;
  id v63;
  Class v64;
  Class v65;
  char *v66;
  id v67;
  Class v68;
  char *v69;
  char *v70;
  char *v71;
  id v72;
  id v73;
  Class v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  void *v80;
  void *v81;
  double v82;
  void *v83;
  id v84;
  id v85;
  char v86;
  id v87;
  uint64_t v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  void *v94;
  id v95;
  char v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  Class v103;
  Class v104;
  char *v105;
  id v106;
  Class v107;
  char *v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  void *v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  uint64_t v128;
  id v129;
  Class v130;
  Class v131;
  char *v132;
  id v133;
  Class v134;
  char *v135;
  id v136;
  id v137;
  void *v138;
  void *v139;
  objc_class *v141;
  objc_class *v142;
  uint64_t v143;
  id v144;
  uint64_t v145;
  id v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  id v152;
  id v153;
  objc_super v154;
  objc_super v155;
  objc_super v156;
  objc_super v157;
  objc_super v158;
  objc_super v159;
  objc_super v160;
  objc_super v161;

  v1 = v0;
  v2 = objc_msgSend(v0, "layer");
  v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisLayer];
  objc_msgSend(v2, "addSublayer:", v3);

  v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer];
  objc_msgSend(v1, "addSubview:", v4);
  v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container365];
  objc_msgSend(v4, "addSubview:", v5);
  v6 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container90];
  objc_msgSend(v4, "addSubview:", v6);
  v152 = (id)objc_opt_self(UIColor);
  v7 = objc_msgSend(v152, "tertiaryLabelColor");
  v8 = objc_msgSend(v7, "CGColor");

  objc_msgSend(v3, "setStrokeColor:", v8);
  objc_msgSend(v3, "setLineCap:", kCALineCapRound);
  objc_msgSend(v3, "setLineWidth:", 1.0);
  v150 = v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_direction];
  if (v150 != 1)
  {
    v9 = objc_msgSend(v1, "layer");
    v10 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer365];
    objc_msgSend(v9, "addSublayer:", v10);

    v11 = objc_msgSend(v1, "layer");
    v12 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer90];
    objc_msgSend(v11, "addSublayer:", v12);

    sub_1004E4168(v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type]);
    v14 = v13;
    v15 = *(id *)&v13[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

    v16 = objc_msgSend(v15, "CGColor");
    objc_msgSend(v12, "setStrokeColor:", v16);

    v17 = objc_msgSend(v152, "secondaryLabelColor");
    v18 = objc_msgSend(v17, "CGColor");

    objc_msgSend(v10, "setStrokeColor:", v18);
    objc_msgSend(v12, "setLineWidth:", 2.0);
    objc_msgSend(v10, "setLineWidth:", 2.0);
    objc_msgSend(v12, "setLineCap:", kCALineCapRound);
    objc_msgSend(v10, "setLineCap:", kCALineCapRound);
  }
  v19 = objc_msgSend(v5, "layer");
  v146 = *(id *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365];
  objc_msgSend(v19, "addSublayer:");

  v20 = objc_msgSend(v5, "layer");
  v21 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer365];
  objc_msgSend(v20, "addSublayer:", v21);

  v22 = kCAFilterSourceAtop;
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterSourceAtop);
  v24 = v23;
  v25 = objc_allocWithZone((Class)CAFilter);
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v25, "initWithType:", v26, swift_bridgeObjectRelease(v24).n128_f64[0]);

  objc_msgSend(v21, "setCompositingFilter:", v27);
  v28 = objc_msgSend(v6, "layer");
  v144 = *(id *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90];
  objc_msgSend(v28, "addSublayer:");

  v29 = objc_msgSend(v6, "layer");
  v30 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer90];
  objc_msgSend(v29, "addSublayer:", v30);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v32 = v31;
  v33 = objc_allocWithZone((Class)CAFilter);
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v33, "initWithType:", v34, swift_bridgeObjectRelease(v32).n128_f64[0]);

  objc_msgSend(v30, "setCompositingFilter:", v35);
  v36 = sub_100047110(&qword_10082CEC0);
  v37 = swift_allocObject(v36, 96, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100620BC0;
  LOBYTE(v33) = v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type];
  v148 = (char)v33;
  sub_1004E4168((char)v33);
  v39 = v38;
  v40 = (char *)*(id *)&v38[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  v41 = *(id *)&v40[OBJC_IVAR____TtC10FitnessApp14GradientColors_light];
  v42 = objc_msgSend(v41, "CGColor");

  type metadata accessor for CGColor(0);
  *(_QWORD *)(v37 + 56) = v43;
  v44 = v43;
  v143 = v43;
  *(_QWORD *)(v37 + 32) = v42;
  sub_1004E4168((char)v33);
  v46 = v45;
  v47 = (char *)*(id *)&v45[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  v48 = *(id *)&v47[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark];
  v49 = objc_msgSend(v48, "CGColor");

  *(_QWORD *)(v37 + 88) = v44;
  *(_QWORD *)(v37 + 64) = v49;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v30, "setColors:", isa, swift_bridgeObjectRelease(v37).n128_f64[0]);

  v51 = swift_allocObject(v36, 96, 7);
  *(_OWORD *)(v51 + 16) = xmmword_100620BC0;
  sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  v52 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
  v53 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
  v54 = (objc_class *)type metadata accessor for GradientColors();
  v55 = (char *)objc_allocWithZone(v54);
  *(_QWORD *)&v55[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v52;
  *(_QWORD *)&v55[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v53;
  v161.receiver = v55;
  v161.super_class = v54;
  v56 = objc_msgSendSuper2(&v161, "init");
  v57 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
  v58 = (objc_class *)type metadata accessor for MetricColors();
  v59 = (char *)objc_allocWithZone(v58);
  *(_QWORD *)&v59[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v56;
  *(_QWORD *)&v59[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v57;
  v160.receiver = v59;
  v160.super_class = v58;
  v60 = (char *)objc_msgSendSuper2(&v160, "init");
  v61 = (char *)*(id *)&v60[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  v62 = *(id *)&v61[OBJC_IVAR____TtC10FitnessApp14GradientColors_light];
  v63 = objc_msgSend(v62, "CGColor");

  *(_QWORD *)(v51 + 56) = v143;
  *(_QWORD *)(v51 + 32) = v63;
  v64 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
  v65 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
  v66 = (char *)objc_allocWithZone(v54);
  *(_QWORD *)&v66[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v64;
  *(_QWORD *)&v66[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v65;
  v159.receiver = v66;
  v159.super_class = v54;
  v141 = v54;
  v67 = objc_msgSendSuper2(&v159, "init");
  v68 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
  v69 = (char *)objc_allocWithZone(v58);
  *(_QWORD *)&v69[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v67;
  *(_QWORD *)&v69[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v68;
  v158.receiver = v69;
  v158.super_class = v58;
  v142 = v58;
  v70 = (char *)objc_msgSendSuper2(&v158, "init");
  v71 = (char *)*(id *)&v70[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  v72 = *(id *)&v71[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark];
  v73 = objc_msgSend(v72, "CGColor");

  *(_QWORD *)(v51 + 88) = v143;
  *(_QWORD *)(v51 + 64) = v73;
  v74 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v21, "setColors:", v74, swift_bridgeObjectRelease(v51).n128_f64[0]);

  v75 = objc_msgSend(v152, "blackColor");
  v76 = objc_msgSend(v75, "CGColor");

  objc_msgSend(v144, "setStrokeColor:", v76);
  objc_msgSend(v144, "setLineWidth:", 2.0);
  objc_msgSend(v144, "setLineCap:", kCALineCapRound);
  v77 = objc_msgSend(v152, "blackColor");
  v78 = objc_msgSend(v77, "CGColor");

  objc_msgSend(v146, "setStrokeColor:", v78);
  objc_msgSend(v146, "setLineWidth:", 2.0);
  objc_msgSend(v146, "setLineCap:", kCALineCapRound);
  if (v150 != 1)
  {
    objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter365]);
    objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter90]);
  }
  v79 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_formattingManager];
  sub_1000364C8(byte_100648840[v148]);
  v81 = v80;
  v82 = *(double *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_average90];
  v83 = (void *)objc_opt_self(HKQuantity);
  v84 = objc_msgSend(v83, "quantityWithUnit:doubleValue:", v81, v82);

  if ((((_DWORD)v148 - 3) & 0xFB) != 0)
  {
    v85 = sub_1000363A0(v84, v148);
    if ((v86 & 1) == 0)
    {
      v87 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", *(double *)&v85);
      v88 = qword_1006487F8[v148];
      v89 = (void *)objc_opt_self(FIUIFormattingManager);
      v90 = objc_msgSend(v89, "stringWithNumber:decimalPrecision:roundingMode:", v87, v88, 4);

      if (v90)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
        v92 = v91;

        sub_1000364C8(byte_100648840[v148]);
        v94 = v93;
        v84 = objc_msgSend(v83, "quantityWithUnit:doubleValue:", v93, *(double *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_average365]);

        v95 = sub_1000363A0(v84, v148);
        if ((v96 & 1) == 0)
        {
          v97 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", *(double *)&v95);
          v98 = objc_msgSend(v89, "stringWithNumber:decimalPrecision:roundingMode:", v97, qword_1006487F8[v148], 4);

          if (v98)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
            v100 = v99;

            sub_1004E4168(v148);
            v102 = (void *)v101;
            sub_1004F9498(v101);

            swift_bridgeObjectRelease(v92);
            v103 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
            v104 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
            v105 = (char *)objc_allocWithZone(v141);
            *(_QWORD *)&v105[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v103;
            *(_QWORD *)&v105[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v104;
            v157.receiver = v105;
            v157.super_class = v141;
            v106 = objc_msgSendSuper2(&v157, "init");
            v107 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
            v108 = (char *)objc_allocWithZone(v142);
            *(_QWORD *)&v108[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v106;
            *(_QWORD *)&v108[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v107;
            v156.receiver = v108;
            v156.super_class = v142;
            v109 = objc_msgSendSuper2(&v156, "init");
            sub_1004F9498((uint64_t)v109);
            swift_bridgeObjectRelease(v100);

            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease(v92);
      }
    }

    goto LABEL_16;
  }
  v110 = sub_10055DE00(v84);
  v112 = v111;
  v153 = v113;
  v115 = v114;

  if (v112)
  {
    v151 = v110;
    sub_1000364C8(byte_100648840[v148]);
    v117 = v116;
    v118 = objc_msgSend(v83, "quantityWithUnit:doubleValue:", v116, *(double *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_average365]);

    v119 = sub_10055DE00(v118);
    v121 = v120;
    v123 = v122;
    v125 = v124;

    if (v121)
    {
      v147 = v125;
      sub_1004E4168(v148);
      v127 = v126;
      v149 = v123;
      v128 = OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter;
      v145 = v119;
      v129 = *(id *)(v79 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter);
      sub_1004F958C((uint64_t)v127, v151, v112, (uint64_t)v153, v115, v129);

      swift_bridgeObjectRelease(v112);
      swift_bridgeObjectRelease(v115);

      v130 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
      v131 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
      v132 = (char *)objc_allocWithZone(v141);
      *(_QWORD *)&v132[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v130;
      *(_QWORD *)&v132[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v131;
      v155.receiver = v132;
      v155.super_class = v141;
      v133 = objc_msgSendSuper2(&v155, "init");
      v134 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
      v135 = (char *)objc_allocWithZone(v142);
      *(_QWORD *)&v135[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v133;
      *(_QWORD *)&v135[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v134;
      v154.receiver = v135;
      v154.super_class = v142;
      v136 = objc_msgSendSuper2(&v154, "init");
      v137 = *(id *)(v79 + v128);
      sub_1004F958C((uint64_t)v136, v145, v121, v149, (uint64_t)v147, v137);

      swift_bridgeObjectRelease(v121);
      swift_bridgeObjectRelease(v147);

    }
    else
    {
      swift_bridgeObjectRelease(v115);
      swift_bridgeObjectRelease(v112);
    }
  }
LABEL_16:
  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_div]);
  v138 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole];
  objc_msgSend(v1, "addSubview:", v138);
  objc_msgSend(v138, "setAlpha:", 0.0);
  v139 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter];
  objc_msgSend(v1, "addSubview:", v139);
  return objc_msgSend(v139, "setAlpha:", 0.0);
}

id sub_1005BF88C()
{
  uint64_t v0;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  unint64_t v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90), "bounds");
  x = v17.origin.x;
  y = v17.origin.y;
  width = v17.size.width;
  height = v17.size.height;
  v5 = CGRectGetHeight(v17);
  v6 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = (double *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365);
    swift_bridgeObjectRetain(v7);
    v10 = 0;
    v11 = 0;
    while (1)
    {
      if (v11 >= 0x27)
      {
        v12 = *(double *)(v7 + 8 * v11 + 32);
        v13 = v9[3];
        v14 = 0.0;
        if (v13 >= 2.22044605e-16)
        {
          if (v11 >= *(_QWORD *)(*(_QWORD *)v9 + 16))
            goto LABEL_4;
          v15 = *(_QWORD *)v9 + v10;
          if ((*(_BYTE *)(v15 + 48) & 1) != 0)
            goto LABEL_4;
          v14 = *(double *)(v15 + 32) / v13;
        }
        v18.origin.x = x;
        v18.origin.y = y;
        v18.size.width = width;
        v18.size.height = height;
        objc_msgSend(v6, "moveToPoint:", v12, CGRectGetMaxY(v18) + -1.0);
        v19.origin.x = x;
        v19.origin.y = y;
        v19.size.width = width;
        v19.size.height = height;
        objc_msgSend(v6, "addLineToPoint:", v12, CGRectGetMaxY(v19) - v5 * v14 + 1.0);
      }
LABEL_4:
      ++v11;
      v10 += 24;
      if (v8 == v11)
      {
        swift_bridgeObjectRelease(v7);
        return v6;
      }
    }
  }
  return v6;
}

id sub_1005BFA38()
{
  uint64_t v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  CGRect v17;
  CGRect v18;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90), "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = (double *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365);
    swift_bridgeObjectRetain(v10);
    v13 = 0;
    v14 = 48;
    do
    {
      if (v13 >= 0x27)
      {
        v15 = *(double *)(v10 + 8 * v13 + 32);
        if (v12[3] < 2.22044605e-16
          || v13 < *(_QWORD *)(*(_QWORD *)v12 + 16) && (*(_BYTE *)(*(_QWORD *)v12 + v14) & 1) == 0)
        {
          v17.origin.x = v2;
          v17.origin.y = v4;
          v17.size.width = v6;
          v17.size.height = v8;
          objc_msgSend(v9, "moveToPoint:", v15, CGRectGetMaxY(v17) + -1.0);
          v18.origin.x = v2;
          v18.origin.y = v4;
          v18.size.width = v6;
          v18.size.height = v8;
          objc_msgSend(v9, "addLineToPoint:", v15, CGRectGetMaxY(v18) + -1.0);
        }
      }
      ++v13;
      v14 += 24;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease(v10);
  }
  return v9;
}

id sub_1005BFBB8(double a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  double v7;

  v3 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineStops);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain(v4);
    for (i = 0; i != v5; ++i)
    {
      if (i >= 0x4E)
      {
        v7 = *(double *)(v4 + 8 * i + 32);
        objc_msgSend(v3, "moveToPoint:", v7, a1);
        objc_msgSend(v3, "addLineToPoint:", v7, a1);
      }
    }
    swift_bridgeObjectRelease(v4);
  }
  return v3;
}

id sub_1005BFC88()
{
  uint64_t v0;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  id result;
  unint64_t v14;
  double *v15;
  uint64_t v16;
  double v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365), "bounds");
  x = v18.origin.x;
  y = v18.origin.y;
  width = v18.size.width;
  height = v18.size.height;
  v5 = CGRectGetHeight(v18);
  v6 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops);
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
    return v6;
  v9 = *(double *)(v7 + 32);
  v10 = v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365);
  v12 = *(double *)(v10 + 24);
  result = (id)swift_bridgeObjectRetain(v7);
  v14 = 0;
  v15 = (double *)(v11 + 48);
  v16 = v8 - 1;
  while (1)
  {
    v17 = 0.0;
    if (v12 < 2.22044605e-16)
      goto LABEL_4;
    if (v14 < *(_QWORD *)(v11 + 16) && (*(_BYTE *)v15 & 1) == 0)
    {
      v17 = *(v15 - 2) / v12;
LABEL_4:
      v19.origin.x = x;
      v19.origin.y = y;
      v19.size.width = width;
      v19.size.height = height;
      objc_msgSend(v6, "moveToPoint:", v9, CGRectGetMaxY(v19) + -1.0);
      v20.origin.x = x;
      v20.origin.y = y;
      v20.size.width = width;
      v20.size.height = height;
      result = objc_msgSend(v6, "addLineToPoint:", v9, CGRectGetMaxY(v20) - v5 * v17 + 1.0);
    }
    if (v16 == v14)
      goto LABEL_12;
    if (v14 + 1 >= *(_QWORD *)(v7 + 16))
      break;
    v9 = *(double *)(v7 + 40 + 8 * v14);
    v15 += 3;
    if (++v14 == 39)
    {
LABEL_12:
      swift_bridgeObjectRelease(v7);
      return v6;
    }
  }
  __break(1u);
  return result;
}

id sub_1005BFE50()
{
  uint64_t v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  _BYTE *v16;
  id result;
  unint64_t v18;
  uint64_t v19;
  CGRect v20;
  CGRect v21;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365), "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops);
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
    return v9;
  v12 = *(double *)(v10 + 32);
  v13 = v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365;
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365);
  v15 = *(double *)(v13 + 24);
  v16 = (_BYTE *)(v14 + 48);
  result = (id)swift_bridgeObjectRetain(v10);
  v18 = 0;
  v19 = v11 - 1;
  while (1)
  {
    if (v15 < 2.22044605e-16 || v18 < *(_QWORD *)(v14 + 16) && (*v16 & 1) == 0)
    {
      v20.origin.x = v2;
      v20.origin.y = v4;
      v20.size.width = v6;
      v20.size.height = v8;
      objc_msgSend(v9, "moveToPoint:", v12, CGRectGetMaxY(v20) + -1.0);
      v21.origin.x = v2;
      v21.origin.y = v4;
      v21.size.width = v6;
      v21.size.height = v8;
      result = objc_msgSend(v9, "addLineToPoint:", v12, CGRectGetMaxY(v21) + -1.0);
    }
    if (v19 == v18)
    {
LABEL_10:
      swift_bridgeObjectRelease(v10);
      return v9;
    }
    if (v18 + 1 >= *(_QWORD *)(v10 + 16))
      break;
    v12 = *(double *)(v10 + 40 + 8 * v18);
    v16 += 24;
    if (++v18 == 39)
      goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1005BFFF0()
{
  uint64_t v0;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v5;
  uint64_t v6;
  unint64_t v7;
  double v8;
  double v9;
  id v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisLayer), "bounds");
  x = v11.origin.x;
  y = v11.origin.y;
  width = v11.size.width;
  height = v11.size.height;
  v5 = CGRectGetWidth(v11);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7 < 0x28)
  {
    __break(1u);
  }
  else
  {
    v8 = *(double *)(v6 + 344) + -1.0 + (v5 / 52.0 + -2.0) * -0.5;
    v9 = *(double *)(v6 + 8 * v7 + 24);
    v10 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
    objc_msgSend(v10, "moveToPoint:", 1.0, 0.0);
    v12.origin.x = x;
    v12.origin.y = y;
    v12.size.width = width;
    v12.size.height = height;
    objc_msgSend(v10, "addLineToPoint:", 0.0, CGRectGetMaxY(v12));
    objc_msgSend(v10, "moveToPoint:", v8, 0.0);
    v13.origin.x = x;
    v13.origin.y = y;
    v13.size.width = width;
    v13.size.height = height;
    objc_msgSend(v10, "addLineToPoint:", v8, CGRectGetMaxY(v13));
    objc_msgSend(v10, "moveToPoint:", v9, 0.0);
    v14.origin.x = x;
    v14.origin.y = y;
    v14.size.width = width;
    v14.size.height = height;
    objc_msgSend(v10, "addLineToPoint:", v9, CGRectGetMaxY(v14));
  }
}

void sub_1005C017C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  objc_class *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  uint64_t v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  char v46;
  double v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  id v51;
  void *v52;
  double v53;
  double v54;
  id v55;
  void *v56;
  double v57;
  id v58;
  void *v59;
  double v60;
  double v61;
  BOOL v62;
  double v63;
  CGFloat v64;
  double Height;
  double v66;
  double MaxY;
  double v68;
  void *v69;
  double v70;
  double v71;
  void *v72;
  double v73;
  double Width;
  uint64_t v75;
  unint64_t v76;
  double v77;
  void *v78;
  void *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  void *v88;
  uint64_t v89;
  void *v90;
  id v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  id v100;
  double v101;
  CGFloat v102;
  double v103;
  CGFloat v104;
  double v105;
  CGFloat v106;
  double v107;
  CGFloat v108;
  double MinX;
  void *v110;
  CGFloat v111;
  id v112;
  id v113;
  double v114;
  double v115;
  id v116;
  id v117;
  void *v118;
  void *v119;
  uint64_t v120;
  double v121;
  double v122;
  CGFloat v123;
  objc_super v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;
  CGRect v132;

  v1 = sub_100047110(&qword_10083C7F0);
  __chkstk_darwin(v1);
  v3 = (unint64_t *)((char *)&v120 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (objc_class *)type metadata accessor for TrendDetailChartView(0);
  v124.receiver = v0;
  v124.super_class = v4;
  objc_msgSendSuper2(&v124, "layoutSubviews");
  v5 = sub_1005BA1CC();
  v6 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops;
  v7 = *(CHWorkoutDetailHeartRateTableViewCell **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops] = v5;
  swift_bridgeObjectRelease(v7, v8, v9, v10, v11, v12, v13, v14);
  v15 = sub_1005BA350();
  v16 = *(CHWorkoutDetailHeartRateTableViewCell **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineStops];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineStops] = v15;
  swift_bridgeObjectRelease(v16, v17, v18, v19, v20, v21, v22, v23);
  v24 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer];
  objc_msgSend(v24, "frame");
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  objc_msgSend(v24, "bounds");
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisLayer], "setFrame:", v26, v28, v30, v32);
  v41 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer90];
  objc_msgSend(v41, "setFrame:", v34, v36, v38, v40);
  v42 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer365];
  v123 = v34;
  objc_msgSend(v42, "setFrame:", v34, v36, v38, v40);
  v43 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90];
  objc_msgSend(v41, "bounds");
  objc_msgSend(v43, "setFrame:");
  v44 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365];
  objc_msgSend(v42, "bounds");
  objc_msgSend(v44, "setFrame:");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer90], "setFrame:", v26, v28, v30, v32);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer365], "setFrame:", v26, v28, v30, v32);
  v45 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMask];
  objc_msgSend(v24, "bounds");
  objc_msgSend(v45, "setFrame:");
  v46 = v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type];
  v47 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_average90];
  v48 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_formattingManager];
  v49 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365 + 24];
  v50 = OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter;
  v51 = objc_msgSend(*(id *)(v48 + OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter), "unitManager");
  if (!v51)
    goto LABEL_32;
  v52 = v51;
  v53 = sub_100035C90((uint64_t)v51, v46, v47);

  v54 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_average365];
  v55 = objc_msgSend(*(id *)(v48 + v50), "unitManager");
  if (!v55)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v56 = v55;
  v57 = sub_100035C90((uint64_t)v55, v46, v54);

  v58 = objc_msgSend(*(id *)(v48 + v50), "unitManager");
  if (!v58)
  {
LABEL_34:
    __break(1u);
    return;
  }
  v59 = v58;
  v60 = sub_100035C90((uint64_t)v58, v46, v49);

  v61 = 0.0;
  v62 = v49 <= 0.0;
  v63 = 0.0;
  if (!v62)
  {
    v63 = v53 / v60;
    v61 = v57 / v60;
  }
  v64 = v123;
  v125.origin.x = v123;
  v125.origin.y = v36;
  v125.size.width = v38;
  v125.size.height = v40;
  Height = CGRectGetHeight(v125);
  v126.origin.x = v64;
  v126.origin.y = v36;
  v126.size.width = v38;
  v126.size.height = v40;
  v66 = CGRectGetMaxY(v126) - v63 * Height;
  v127.origin.x = v64;
  v127.origin.y = v36;
  v127.size.width = v38;
  v127.size.height = v40;
  MaxY = CGRectGetMaxY(v127);
  v68 = v61 * Height;
  v69 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterYConstraint];
  if (v69)
  {
    v70 = 0.0;
    if ((~*(_QWORD *)&v66 & 0x7FF0000000000000) != 0)
      v70 = v66;
    objc_msgSend(v69, "setConstant:", v70);
  }
  v71 = MaxY - v68;
  v72 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterYConstraint];
  if (v72)
  {
    v73 = 0.0;
    if ((~*(_QWORD *)&v71 & 0x7FF0000000000000) != 0)
      v73 = v71;
    objc_msgSend(v72, "setConstant:", v73);
  }
  objc_msgSend(v0, "bounds");
  Width = CGRectGetWidth(v128);
  v75 = *(_QWORD *)&v0[v6];
  v76 = *(_QWORD *)(v75 + 16);
  if (v76 < 0x28)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v77 = *(double *)(v75 + 344) + -1.0 + (Width / 52.0 + -2.0) * -0.5;
  v78 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterXConstraint];
  if (v78)
    objc_msgSend(v78, "setConstant:", v77 + (*(double *)(v75 + 8 * v76 + 24) - v77) * 0.5);
  v79 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterXConstraint];
  if (v79)
    objc_msgSend(v79, "setConstant:", v77 * 0.5);
  v80 = *(int *)(v1 + 48);
  v81 = (char *)v3 + v80;
  v82 = &v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_firstFirstOfMonth + v80];
  v83 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_firstFirstOfMonth];
  *v3 = v83;
  v84 = type metadata accessor for Date(0);
  v85 = *(_QWORD *)(v84 - 8);
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v81, v82, v84);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v81, v84);
  if ((v83 & 0x8000000000000000) != 0)
    goto LABEL_30;
  v86 = *(_QWORD *)&v0[v6];
  if (v83 >= *(_QWORD *)(v86 + 16))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v87 = *(double *)(v86 + 8 * v83 + 32) + -2.0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewLeftConstraint], "setConstant:", v87);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewRightConstraint], "setConstant:", v87);
  v88 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_januaryLabel];
  if (v88)
  {
    v89 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_yearLabelLeftConstraint;
    v90 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_yearLabelLeftConstraint];
    v121 = v71;
    v122 = v66;
    v91 = v88;
    if (v90)
      objc_msgSend(v90, "setActive:", 0);
    objc_msgSend(v88, "frame");
    v93 = v92;
    v95 = v94;
    v97 = v96;
    v99 = v98;
    v100 = objc_msgSend(v88, "superview");
    objc_msgSend(v0, "convertRect:fromView:", v100, v93, v95, v97, v99);
    v102 = v101;
    v104 = v103;
    v106 = v105;
    v108 = v107;

    v129.origin.x = v102;
    v129.origin.y = v104;
    v129.size.width = v106;
    v129.size.height = v108;
    MinX = CGRectGetMinX(v129);
    v110 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisYearLabel];
    objc_msgSend(v110, "bounds");
    v111 = MinX + CGRectGetWidth(v130);
    v131.origin.x = v123;
    v131.origin.y = v36;
    v131.size.width = v38;
    v131.size.height = v40;
    if (CGRectGetMaxX(v131) >= v111)
    {
      v112 = objc_msgSend(v88, "leftAnchor");
      v113 = objc_msgSend(v110, "leftAnchor");
      v116 = objc_msgSend(v112, "constraintEqualToAnchor:", v113);
    }
    else
    {
      v112 = objc_msgSend(v110, "leftAnchor");
      v113 = objc_msgSend(v88, "leftAnchor");
      objc_msgSend(v110, "bounds");
      v114 = CGRectGetWidth(v132);
      objc_msgSend(v88, "intrinsicContentSize");
      v116 = objc_msgSend(v112, "constraintEqualToAnchor:constant:", v113, -(v114 - v115));
    }
    v71 = v121;
    v66 = v122;
    v117 = v116;

    objc_msgSend(v117, "setActive:", 1);
    v118 = *(void **)&v0[v89];
    *(_QWORD *)&v0[v89] = v117;

  }
  v119 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v119, "begin");
  objc_msgSend(v119, "setDisableActions:", 1);
  sub_1005C0938((uint64_t)v0, v71, v66);
  objc_msgSend(v119, "commit");
}

void sub_1005C0938(uint64_t a1, double a2, double a3)
{
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  uint64_t v21;
  uint64_t i;
  double v23;
  const char *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;

  v6 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_filled) == 1)
  {
    v7 = sub_1005BF88C();
    v8 = objc_msgSend(v7, "CGPath");

    objc_msgSend(v6, "setPath:", v8);
    v9 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365);
    v10 = sub_1005BFC88();
  }
  else
  {
    v11 = sub_1005BFA38();
    v12 = objc_msgSend(v11, "CGPath");

    objc_msgSend(v6, "setPath:", v12);
    v9 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365);
    v10 = sub_1005BFE50();
  }
  v13 = objc_msgSend(v10, "CGPath");

  objc_msgSend(v9, "setPath:", v13);
  v14 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisLayer);
  sub_1005BFFF0();
  v16 = v15;
  v17 = objc_msgSend(v15, "CGPath");

  objc_msgSend(v14, "setPath:", v17);
  v18 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer365);
  v19 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v20 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineStops);
  v21 = *(_QWORD *)v20->cellPadding;
  if (v21)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineStops));
    for (i = 0; i != v21; ++i)
    {
      v23 = *((double *)&v20[1].super.super.super.super.isa + i);
      objc_msgSend(v19, "moveToPoint:", v23, a2);
      objc_msgSend(v19, "addLineToPoint:", v23, a2);
    }
    swift_bridgeObjectRelease(v20, v24, v25, v26, v27, v28, v29, v30);
  }
  v31 = objc_msgSend(v19, "CGPath");

  objc_msgSend(v18, "setPath:", v31);
  v32 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer90);
  v33 = sub_1005BFBB8(a3);
  v34 = objc_msgSend(v33, "CGPath");

  objc_msgSend(v32, "setPath:", v34);
}

id sub_1005C0C04(void *a1)
{
  char *v1;
  uint64_t v2;
  id v3;
  char *v4;
  id v5;
  id v6;
  void *v7;
  id result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v2 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_titleLabel;
  v3 = objc_allocWithZone((Class)UILabel);
  v4 = v1;
  v5 = objc_msgSend(v3, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v5, "setAdjustsFontForContentSizeCategory:", 1);
  v83 = v2;
  v84 = v1;
  *(_QWORD *)&v1[v2] = v5;
  sub_10001E724(0, &qword_1008261E0, UILabel_ptr);
  v6 = sub_1004C2368();
  v7 = (void *)objc_opt_self(UIFont);
  result = objc_msgSend(v7, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleCaption2, 1024);
  if (result)
  {
    v9 = result;
    v10 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMaxLabel;
    objc_msgSend(v6, "setFont:", result);

    v80 = v10;
    *(_QWORD *)&v4[v10] = v6;
    v11 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer;
    sub_10001E724(0, (unint64_t *)&qword_100821308, UIView_ptr);
    v79 = v11;
    *(_QWORD *)&v4[v11] = sub_1005AEF5C();
    v78 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container365;
    *(_QWORD *)&v4[v78] = sub_1005AEF5C();
    v77 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_container90;
    *(_QWORD *)&v4[v77] = sub_1005AEF5C();
    v76 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisContainer;
    *(_QWORD *)&v4[v76] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
    v75 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisLayer;
    *(_QWORD *)&v4[v75] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    v74 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer90;
    *(_QWORD *)&v4[v74] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
    v73 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90;
    *(_QWORD *)&v4[v73] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    v72 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_gradientLayer365;
    *(_QWORD *)&v4[v72] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
    v70 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365;
    *(_QWORD *)&v4[v70] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    v69 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer90;
    *(_QWORD *)&v4[v69] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    v68 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer365;
    *(_QWORD *)&v4[v68] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    v12 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter365;
    type metadata accessor for TrendAveragePlatterView();
    v67 = v12;
    *(_QWORD *)&v4[v12] = sub_1005AEF5C();
    v66 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter90;
    *(_QWORD *)&v4[v66] = sub_1005AEF5C();
    v13 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMask;
    v14 = type metadata accessor for TrendChartMaskingView();
    v65 = v13;
    *(_QWORD *)&v4[v13] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v14)), "init");
    v15 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter;
    type metadata accessor for TrendsScrubberPlatterView();
    v64 = v15;
    *(_QWORD *)&v4[v15] = sub_1005AEF5C();
    v16 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole;
    type metadata accessor for TrendsScrubberFlagpoleView();
    v63 = v16;
    *(_QWORD *)&v4[v16] = sub_1005AEF5C();
    v17 = 12;
    specialized ContiguousArray.reserveCapacity(_:)(12);
    do
    {
      v18 = sub_1004C2368();
      result = objc_msgSend(v7, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleCaption2, 1024, UIContentSizeCategoryExtraExtraExtraLarge);
      if (!result)
      {
        __break(1u);
        goto LABEL_8;
      }
      v19 = result;
      objc_msgSend(v18, "setFont:", result);

      v20 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
      objc_msgSend(v18, "setTextColor:", v20);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v18, "setTextAlignment:", 0));
      v21 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
      v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v18);
      specialized ContiguousArray._endMutation()(v22);
      --v17;
    }
    while (v17);
    v62 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisMonthLabels;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisMonthLabels] = &_swiftEmptyArrayStorage;
    v23 = sub_1004C2368();
    result = objc_msgSend(v7, "_preferredFontForTextStyle:variant:maximumContentSizeCategory:", UIFontTextStyleCaption2, 1024, UIContentSizeCategoryExtraExtraExtraLarge);
    if (!result)
      goto LABEL_9;
    v24 = result;
    v25 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisYearLabel;
    v85 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_axisYearLabel;
    objc_msgSend(v23, "setFont:", result);

    *(_QWORD *)&v4[v25] = v23;
    v26 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_monthLabelsStackView;
    v60 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_monthLabelsStackView;
    sub_10001E724(0, &qword_10082A5F8, UIStackView_ptr);
    *(_QWORD *)&v4[v26] = sub_1005AEF5C();
    v27 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_div;
    v28 = sub_1005AEEC8();

    *(_QWORD *)&v4[v27] = v28;
    v29 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops] = &_swiftEmptyArrayStorage;
    v30 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineStops;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineStops] = &_swiftEmptyArrayStorage;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_extraTopPaddingPercentage] = 0;
    v31 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_januaryLabel;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_januaryLabel] = 0;
    v32 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewLeftConstraint;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewLeftConstraint] = 0;
    v33 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewRightConstraint;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_stackViewRightConstraint] = 0;
    v34 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_yearLabelLeftConstraint;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_yearLabelLeftConstraint] = 0;
    v35 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterXConstraint;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterXConstraint] = 0;
    v36 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterYConstraint;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter90CenterYConstraint] = 0;
    v61 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterXConstraint;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterXConstraint] = 0;
    v71 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterYConstraint;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_platter365CenterYConstraint] = 0;
    v82 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberCenterXConstraint;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberCenterXConstraint] = 0;
    v86 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleBottomConstraint;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleBottomConstraint] = 0;
    v87 = OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleCenterXConstraint;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleCenterXConstraint] = 0;
    *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_nWeeksIn90DayBucket] = 13;
    v4[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_filled] = 0;

    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v4[v62], v37, v38, v39, v40, v41, v42, v43);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v4[v29], v44, v45, v46, v47, v48, v49, v50);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v4[v30], v51, v52, v53, v54, v55, v56, v57);

    v58 = *(void **)&v4[v87];
    v59 = type metadata accessor for TrendDetailChartView(0);
    swift_deallocPartialClassInstance(v4, v59, *(unsigned int *)((swift_isaMask & *(_QWORD *)v4) + 0x30), *(unsigned __int16 *)((swift_isaMask & *(_QWORD *)v4) + 0x34));
    return 0;
  }
  else
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
  }
  return result;
}

id sub_1005C140C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendDetailChartView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1005C1730()
{
  return type metadata accessor for TrendDetailChartView(0);
}

uint64_t type metadata accessor for TrendDetailChartView(uint64_t a1)
{
  uint64_t result;

  result = qword_10083C7E0;
  if (!qword_10083C7E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TrendDetailChartView);
  return result;
}

uint64_t sub_1005C1774(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[49];

  v5[0] = &unk_100648768;
  v5[1] = &unk_100648780;
  v5[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v5[3] = &unk_100648798;
  v5[4] = (char *)&value witness table for Builtin.Int64 + 64;
  v5[5] = &unk_100648798;
  v5[6] = &unk_100648798;
  v5[7] = &unk_100648798;
  v5[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[16] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[18] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[19] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[20] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[21] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[22] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[23] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[24] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[25] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[26] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[27] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v5[28] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[29] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[30] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[31] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v5[32] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, (char *)&value witness table for Builtin.Int64 + 64, *(_QWORD *)(result - 8) + 64);
    v5[33] = v4;
    v5[34] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[35] = (char *)&value witness table for Builtin.Int64 + 64;
    v5[36] = &unk_1006487B0;
    v5[37] = &unk_1006487B0;
    v5[38] = &unk_1006487B0;
    v5[39] = &unk_1006487B0;
    v5[40] = &unk_1006487B0;
    v5[41] = &unk_1006487B0;
    v5[42] = &unk_1006487B0;
    v5[43] = &unk_1006487B0;
    v5[44] = &unk_1006487B0;
    v5[45] = &unk_1006487B0;
    v5[46] = &unk_1006487B0;
    v5[47] = (char *)&value witness table for Builtin.Int64 + 64;
    v5[48] = &unk_1006487C8;
    return swift_updateClassMetadata2(a1, 256, 49, v5, a1 + 80);
  }
  return result;
}

id sub_1005C18AC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v1 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v1, "begin");
  objc_msgSend(v1, "setDisableActions:", 1);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90);
  v3 = sub_1005BFA38();
  v4 = objc_msgSend(v3, "CGPath");

  objc_msgSend(v2, "setPath:", v4);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365);
  v6 = sub_1005BFE50();
  v7 = objc_msgSend(v6, "CGPath");

  objc_msgSend(v5, "setPath:", v7);
  return objc_msgSend(v1, "commit");
}

void sub_1005C19A0()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  NSString v7;
  void *v8;
  NSString v9;
  id v10;
  id v11;
  id v12;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_filled) = 1;
  v12 = sub_1005BFA38();
  v1 = sub_1005BFE50();
  v2 = sub_1005BF88C();
  v3 = sub_1005BFC88();
  v4 = sub_1005C1B20(v12, v2);
  v5 = sub_1005C1B20(v1, v3);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer90);
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "addAnimation:forKey:", v4, v7);

  v8 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barLayer365);
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "addAnimation:forKey:", v5, v9);

  v10 = objc_msgSend(v2, "CGPath");
  objc_msgSend(v6, "setPath:", v10);

  v11 = objc_msgSend(v3, "CGPath");
  objc_msgSend(v8, "setPath:", v11);

}

id sub_1005C1B20(void *a1, void *a2)
{
  NSString v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v4);

  v6 = objc_msgSend(a1, "CGPath");
  objc_msgSend(v5, "setFromValue:", v6);

  v7 = objc_msgSend(a2, "CGPath");
  objc_msgSend(v5, "setToValue:", v7);

  objc_msgSend(v5, "setDuration:", 2.15);
  v8 = (void *)objc_opt_self(CAMediaTimingFunction);
  v9 = v5;
  v10 = objc_msgSend(v8, "functionWithName:", kCAMediaTimingFunctionEaseIn);
  objc_msgSend(v9, "setTimingFunction:", v10);

  return v9;
}

id sub_1005C1C6C()
{
  return sub_1005C18AC();
}

void sub_1005C1C8C()
{
  sub_1005C19A0();
}

void sub_1005C1CAC(void *a1)
{
  char *v1;
  char *v2;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  double v11;
  double v12;
  char *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  int64_t v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  id v26;
  const char *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  NSString v37;
  SEL v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  char *v54;
  void *v55;
  double v56;
  double v57;
  void *v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  double v64;
  char v65;
  char *v66;
  Class isa;
  Class v68;
  objc_class *v69;
  char *v70;
  id v71;
  Class v72;
  objc_class *v73;
  char *v74;
  char *v75;
  id v76;
  uint64_t v77;
  void *v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id v84;
  char *v85;
  Class v86;
  Class v87;
  char *v88;
  id v89;
  Class v90;
  char *v91;
  char *v92;
  id v93;
  uint64_t v94;
  void *v95;
  id v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  id v101;
  char v102;
  char *v103;
  void *v104;
  id v105;
  uint64_t v106;
  void *v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  id v113;
  char *v114;
  char *v115;
  void *v116;
  id v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  char *v123;
  uint64_t v124;
  void *v125;
  void *v126;
  void *v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  char *v131;
  objc_super v132;
  objc_super v133;
  objc_super v134;
  objc_super v135;
  void **aBlock;
  uint64_t v137;
  uint64_t (*v138)(uint64_t);
  void *v139;
  id (*v140)();
  uint64_t v141;

  v2 = v1;
  if (objc_msgSend(a1, "state") == (id)1 || objc_msgSend(a1, "state") == (id)2)
  {
    v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer];
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer], "setAlpha:", 1.0);
    if (objc_msgSend(a1, "state") == (id)1)
    {
      v5 = (void *)objc_opt_self(UIView);
      v6 = swift_allocObject(&unk_1007ACA00, 24, 7);
      *(_QWORD *)(v6 + 16) = v2;
      v140 = sub_1005C308C;
      v141 = v6;
      aBlock = _NSConcreteStackBlock;
      v137 = 1107296256;
      v138 = sub_10002D0F8;
      v139 = &unk_1007ACA18;
      v7 = _Block_copy(&aBlock);
      v8 = v141;
      v9 = v2;
      swift_release(v8);
      objc_msgSend(v5, "animateWithDuration:animations:", v7, 0.1);
      _Block_release(v7);
      v10 = (void *)objc_opt_self(CATransaction);
      objc_msgSend(v10, "begin");
      objc_msgSend(v10, "setDisableActions:", 1);
      LODWORD(v11) = 1050253722;
      objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer90], "setOpacity:", v11);
      LODWORD(v12) = 1050253722;
      objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer365], "setOpacity:", v12);
      objc_msgSend(v10, "commit");
      v13 = *(char **)&v9[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMask];
      objc_msgSend(v4, "setMaskView:", v13);
      *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp21TrendChartMaskingView_unmaskedWidth] = 0x4000000000000000;
      objc_msgSend(v13, "setNeedsLayout");
    }
    objc_msgSend(a1, "locationInView:", v4);
    v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_barStops];
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = 0;
      v18 = 0;
      v19 = v15 + 32;
      v20 = 0;
      v21 = 1.79769313e308;
      do
      {
        v22 = vabdd_f64(v14, *(double *)(v19 + 8 * v18));
        if (v22 < v21)
          v17 = v18;
        v23 = v18 + 1;
        if (v22 < v21)
          v20 = *(_QWORD *)(v19 + 8 * v18);
        v21 = v22;
        ++v18;
      }
      while (v16 != v23);
    }
    else
    {
      v17 = 0;
      v20 = 0;
    }
    sub_1005BD218(v17);
    if (v24)
    {
      v25 = v24;
      v26 = sub_1005BD6D8(v17);
      if (v26)
      {
        v34 = v26;
        v35 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter];
        v36 = *(void **)(v35 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_topLabel);
        v37 = String._bridgeToObjectiveC()();
        objc_msgSend(v36, "setText:", v37);

        objc_msgSend(*(id *)(v35 + OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_bottomLabel), "setAttributedText:", v34);
        swift_bridgeObjectRelease(v25, v38, v39, v40, v41, v42, v43, v44);
        v45 = (void *)objc_opt_self(UIView);
        v46 = swift_allocObject(&unk_1007AC9B0, 24, 7);
        *(_QWORD *)(v46 + 16) = v2;
        v140 = sub_1005C3030;
        v141 = v46;
        aBlock = _NSConcreteStackBlock;
        v137 = 1107296256;
        v138 = sub_10002D0F8;
        v139 = &unk_1007AC9C8;
        v47 = _Block_copy(&aBlock);
        v48 = v141;
        v49 = v2;
        swift_release(v48);
        objc_msgSend(v45, "animateWithDuration:animations:", v47, 0.1);
        _Block_release(v47);

LABEL_23:
        v64 = COERCE_DOUBLE(sub_1005BD94C(v17));
        if ((v65 & 1) == 0
          && *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleBottomConstraint])
        {
          objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleBottomConstraint], "setConstant:", v64 + -5.0);
        }
        v66 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter];
        if (v17 >= 39)
        {
          v102 = v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type];
          sub_1004E4168(v102);
          v104 = v103;
          v105 = *(id *)&v103[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

          v106 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor;
          v107 = *(void **)&v66[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor];
          *(_QWORD *)&v66[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor] = v105;
          v108 = v105;

          v109 = objc_msgSend(v66, "layer");
          v110 = objc_opt_self(CAShapeLayer);
          v111 = swift_dynamicCastObjCClass(v109, v110);
          if (v111)
          {
            v112 = (void *)v111;
            v113 = objc_msgSend(*(id *)&v66[v106], "CGColor");
            objc_msgSend(v112, "setFillColor:", v113);

            v114 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole];
            sub_1004E4168(v102);
            v116 = v115;
            v117 = *(id *)&v115[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

            v118 = OBJC_IVAR____TtC10FitnessApp26TrendsScrubberFlagpoleView_platterColor;
            v119 = *(void **)&v114[OBJC_IVAR____TtC10FitnessApp26TrendsScrubberFlagpoleView_platterColor];
            *(_QWORD *)&v114[OBJC_IVAR____TtC10FitnessApp26TrendsScrubberFlagpoleView_platterColor] = v117;
            v96 = v117;

            v97 = objc_msgSend(v114, "layer");
            v120 = objc_opt_self(CAShapeLayer);
            v121 = swift_dynamicCastObjCClass(v97, v120);
            if (v121)
            {
              v122 = (void *)v121;
              v101 = objc_msgSend(*(id *)&v114[v118], "CGColor");
              objc_msgSend(v122, "setFillColor:", v101);
              goto LABEL_33;
            }
            goto LABEL_41;
          }

        }
        else
        {
          sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
          isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
          v68 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
          v69 = (objc_class *)type metadata accessor for GradientColors();
          v70 = (char *)objc_allocWithZone(v69);
          *(_QWORD *)&v70[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
          *(_QWORD *)&v70[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v68;
          v135.receiver = v70;
          v135.super_class = v69;
          v71 = objc_msgSendSuper2(&v135, "init");
          v72 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
          v73 = (objc_class *)type metadata accessor for MetricColors();
          v74 = (char *)objc_allocWithZone(v73);
          *(_QWORD *)&v74[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v71;
          *(_QWORD *)&v74[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v72;
          v134.receiver = v74;
          v134.super_class = v73;
          v75 = (char *)objc_msgSendSuper2(&v134, "init");
          v76 = *(id *)&v75[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

          v77 = OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor;
          v78 = *(void **)&v66[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor];
          *(_QWORD *)&v66[OBJC_IVAR____TtC10FitnessApp25TrendsScrubberPlatterView_platterColor] = v76;
          v79 = v76;

          v80 = objc_msgSend(v66, "layer");
          v81 = objc_opt_self(CAShapeLayer);
          v82 = swift_dynamicCastObjCClass(v80, v81);
          if (v82)
          {
            v83 = (void *)v82;
            v84 = objc_msgSend(*(id *)&v66[v77], "CGColor");
            objc_msgSend(v83, "setFillColor:", v84);

            v85 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole];
            v86 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
            v87 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.75686, 0.77647, 0.78431, 1.0).super.isa;
            v88 = (char *)objc_allocWithZone(v69);
            *(_QWORD *)&v88[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v86;
            *(_QWORD *)&v88[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v87;
            v133.receiver = v88;
            v133.super_class = v69;
            v89 = objc_msgSendSuper2(&v133, "init");
            v90 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.58824, 0.61961, 0.63137, 1.0).super.isa;
            v91 = (char *)objc_allocWithZone(v73);
            *(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v89;
            *(_QWORD *)&v91[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v90;
            v132.receiver = v91;
            v132.super_class = v73;
            v92 = (char *)objc_msgSendSuper2(&v132, "init");
            v93 = *(id *)&v92[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

            v94 = OBJC_IVAR____TtC10FitnessApp26TrendsScrubberFlagpoleView_platterColor;
            v95 = *(void **)&v85[OBJC_IVAR____TtC10FitnessApp26TrendsScrubberFlagpoleView_platterColor];
            *(_QWORD *)&v85[OBJC_IVAR____TtC10FitnessApp26TrendsScrubberFlagpoleView_platterColor] = v93;
            v96 = v93;

            v97 = objc_msgSend(v85, "layer");
            v98 = objc_opt_self(CAShapeLayer);
            v99 = swift_dynamicCastObjCClass(v97, v98);
            if (v99)
            {
              v100 = (void *)v99;
              v101 = objc_msgSend(*(id *)&v85[v94], "CGColor");
              objc_msgSend(v100, "setFillColor:", v101);
LABEL_33:

              v123 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMask];
              v124 = OBJC_IVAR____TtC10FitnessApp21TrendChartMaskingView_unmaskedCenterX;
              *(_QWORD *)&v123[OBJC_IVAR____TtC10FitnessApp21TrendChartMaskingView_unmaskedCenterX] = v20;
              objc_msgSend(v123, "setNeedsLayout");
              v125 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberCenterXConstraint];
              if (v125)
                objc_msgSend(v125, "setConstant:", *(double *)&v123[v124]);
              v126 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpoleCenterXConstraint];
              if (v126)
                objc_msgSend(v126, "setConstant:", *(double *)&v123[v124]);
              if (objc_msgSend(a1, "state") == (id)1)
              {
                objc_msgSend(v123, "layoutIfNeeded");
                objc_msgSend(v2, "layoutIfNeeded");
              }
              else
              {
                v127 = (void *)objc_opt_self(UIView);
                v128 = swift_allocObject(&unk_1007AC960, 24, 7);
                *(_QWORD *)(v128 + 16) = v2;
                v140 = sub_1005C2FF4;
                v141 = v128;
                aBlock = _NSConcreteStackBlock;
                v137 = 1107296256;
                v138 = sub_10002D0F8;
                v139 = &unk_1007AC978;
                v129 = _Block_copy(&aBlock);
                v130 = v141;
                v131 = v2;
                swift_release(v130);
                objc_msgSend(v127, "animateWithDuration:animations:", v129, 0.1);
                _Block_release(v129);
              }
              return;
            }
LABEL_41:

            _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ALL, 0x800000010068EEB0, "FitnessApp/TrendsScrubberPlatterView.swift", 42, 2, 21, 0);
LABEL_45:
            __break(1u);
            return;
          }

        }
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ALL, 0x800000010068EEB0, "FitnessApp/TrendsScrubberPlatterView.swift", 42, 2, 46, 0);
        goto LABEL_45;
      }
      swift_bridgeObjectRelease(v25, v27, v28, v29, v30, v31, v32, v33);
    }
    v59 = (void *)objc_opt_self(UIView);
    v60 = swift_allocObject(&unk_1007AC910, 24, 7);
    *(_QWORD *)(v60 + 16) = v2;
    v140 = sub_1005C2FEC;
    v141 = v60;
    aBlock = _NSConcreteStackBlock;
    v137 = 1107296256;
    v138 = sub_10002D0F8;
    v139 = &unk_1007AC928;
    v61 = _Block_copy(&aBlock);
    v62 = v141;
    v63 = v2;
    swift_release(v62);
    objc_msgSend(v59, "animateWithDuration:animations:", v61, 0.1);
    _Block_release(v61);
    goto LABEL_23;
  }
  if (objc_msgSend(a1, "state") == (id)3 || objc_msgSend(a1, "state") == (id)4)
  {
    v50 = (void *)objc_opt_self(UIView);
    v51 = swift_allocObject(&unk_1007AC8C0, 24, 7);
    *(_QWORD *)(v51 + 16) = v2;
    v140 = sub_1005C2FE4;
    v141 = v51;
    aBlock = _NSConcreteStackBlock;
    v137 = 1107296256;
    v138 = sub_10002D0F8;
    v139 = &unk_1007AC8D8;
    v52 = _Block_copy(&aBlock);
    v53 = v141;
    v54 = v2;
    swift_release(v53);
    objc_msgSend(v50, "animateWithDuration:animations:", v52, 0.2);
    _Block_release(v52);
    v55 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v55, "begin");
    objc_msgSend(v55, "setDisableActions:", 1);
    LODWORD(v56) = 1.0;
    objc_msgSend(*(id *)&v54[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer90], "setOpacity:", v56);
    LODWORD(v57) = 1.0;
    objc_msgSend(*(id *)&v54[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_lineLayer365], "setOpacity:", v57);
    objc_msgSend(v55, "commit");
    v58 = *(void **)&v54[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartContainer];
    objc_msgSend(v58, "setMaskView:", 0);
    if (v54[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_direction] == 1)
      objc_msgSend(v58, "setAlpha:", 0.3);
  }
}

id sub_1005C29A8(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter90), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter365), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_titleLabel), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole), "setAlpha:", 0.0);
}

uint64_t sub_1005C2B1C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(uint64_t, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v37 = a2;
  v5 = type metadata accessor for Calendar.Component(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  v17 = (char *)&v34 - v16;
  __chkstk_darwin(v18);
  v23 = (char *)&v34 - v22;
  if ((a1 & 0x8000000000000000) != 0)
    goto LABEL_7;
  v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365 + 8);
  if (*(_QWORD *)(v24 + 16) <= a1)
    goto LABEL_7;
  v35 = v21;
  v36 = v20;
  Date.init(timeIntervalSinceReferenceDate:)(v19, *(double *)(v24 + 8 * a1 + 32));
  if (qword_10081D548 != -1)
    swift_once(&qword_10081D548, sub_100005A80);
  v25 = type metadata accessor for Calendar(0);
  sub_10003CE9C(v25, (uint64_t)qword_100869D10);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Calendar.Component.day(_:), v5);
  Calendar.date(byAdding:value:to:wrappingComponents:)(v8, 7, v23, 0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v12);
    sub_10001BE90((uint64_t)v11, (uint64_t *)&unk_100828370);
LABEL_7:
    v26 = type metadata accessor for DateInterval(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v37, 1, 1, v26);
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v11, v12);
  v28 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 16);
  v29 = v35;
  v28(v35, v23, v12);
  v30 = v36;
  v28(v36, v17, v12);
  v31 = v37;
  DateInterval.init(start:end:)(v29, v30);
  v32 = *(void (**)(char *, uint64_t))(v13 + 8);
  v32(v17, v12);
  v32(v23, v12);
  v33 = type metadata accessor for DateInterval(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v31, 0, 1, v33);
}

id sub_1005C2EDC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  double v6;
  void *v7;
  void *v8;

  if ((a1 & 0x8000000000000000) != 0)
    return 0;
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartHistogram365);
  if (*(_QWORD *)(v2 + 16) <= a1)
    return 0;
  v3 = v2 + 24 * a1;
  if ((*(_BYTE *)(v3 + 48) & 1) != 0)
    return 0;
  v6 = *(double *)(v3 + 32);
  sub_1000364C8(byte_100648840[*(char *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_type)]);
  v8 = v7;
  v4 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v7, v6);

  return v4;
}

uint64_t sub_1005C2FC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1005C2FE4()
{
  uint64_t v0;

  return sub_1005C29A8(*(_QWORD *)(v0 + 16));
}

id sub_1005C2FEC()
{
  return sub_1005C3038(0.0);
}

id sub_1005C2FF4()
{
  uint64_t v0;
  char *v1;

  v1 = *(char **)(v0 + 16);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_chartMask], "layoutIfNeeded");
  return objc_msgSend(v1, "layoutIfNeeded");
}

id sub_1005C3030()
{
  return sub_1005C3038(1.0);
}

id sub_1005C3038(double a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberPlatter), "setAlpha:");
  return objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_scrubberFlagpole), "setAlpha:", a1);
}

id sub_1005C308C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter90), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter365), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_titleLabel), "setAlpha:", 0.3);
}

uint64_t sub_1005C30F8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1005BE718(a1, *(_QWORD *)(v1 + 16));
}

id sub_1005C3140()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1052266988;
  LODWORD(v2) = 1059145646;
  LODWORD(v3) = 0;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v3, v2, v4);
  qword_10083C810 = (uint64_t)result;
  return result;
}

id sub_1005C3190()
{
  id v0;
  NSString v1;
  id v2;
  Class isa;
  Class v4;
  uint64_t v5;
  id v6;
  double v7;

  v0 = objc_msgSend(objc_allocWithZone((Class)CABasicAnimation), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setKeyPath:", v1);

  objc_msgSend(v0, "setDuration:", 0.134);
  v2 = v0;
  objc_msgSend(v2, "setBeginTime:", (double)arc4random_uniform(0x64u) / 100.0);

  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v2, "setFromValue:", isa);

  v4 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v2, "setToValue:", v4);

  v5 = qword_10081E098;
  v6 = v2;
  if (v5 != -1)
    swift_once(&qword_10081E098, sub_1005C3140);
  objc_msgSend(v6, "setTimingFunction:", qword_10083C810);

  LODWORD(v7) = 2139095039;
  objc_msgSend(v6, "setRepeatCount:", v7);
  objc_msgSend(v6, "setAutoreverses:", 1);
  objc_msgSend(v6, "setRemovedOnCompletion:", 0);
  return v6;
}

id sub_1005C3334()
{
  id v0;
  NSString v1;
  id v2;
  Class isa;
  Class v4;
  uint64_t v5;
  id v6;
  double v7;

  v0 = objc_msgSend(objc_allocWithZone((Class)CABasicAnimation), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setKeyPath:", v1);

  objc_msgSend(v0, "setDuration:", 0.128);
  v2 = v0;
  objc_msgSend(v2, "setBeginTime:", (double)arc4random_uniform(0x64u) / 100.0);

  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v2, "setFromValue:", isa);

  v4 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v2, "setToValue:", v4);

  v5 = qword_10081E098;
  v6 = v2;
  if (v5 != -1)
    swift_once(&qword_10081E098, sub_1005C3140);
  objc_msgSend(v6, "setTimingFunction:", qword_10083C810);

  LODWORD(v7) = 2139095039;
  objc_msgSend(v6, "setRepeatCount:", v7);
  objc_msgSend(v6, "setAutoreverses:", 1);
  objc_msgSend(v6, "setRemovedOnCompletion:", 0);
  return v6;
}

void sub_1005C34D8(char a1, id a2)
{
  id v4;
  NSString v5;
  NSString v6;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  NSString v11;
  NSString v12;
  NSString v13;
  id v14;
  CGRect v15;
  CGRect v16;

  objc_msgSend(a2, "frame");
  CGRectGetHeight(v15);
  objc_msgSend(a2, "frame");
  CGRectGetWidth(v16);
  v14 = objc_msgSend(a2, "layer");
  if ((a1 & 1) != 0)
  {
    v4 = sub_1005C3190();
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setKeyPath:", v5);

    objc_msgSend(v4, "setDuration:", 0.134);
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "addAnimation:forKey:", v4, v6);

    v7 = sub_1005C3190();
    v8 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "setKeyPath:", v8);

    objc_msgSend(v7, "setDuration:", 0.142);
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "addAnimation:forKey:", v7, v9);

    v10 = sub_1005C3334();
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "addAnimation:forKey:", v10, v11);

  }
  else
  {
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "removeAnimationForKey:", v12);

    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "removeAnimationForKey:", v13);

    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "removeAnimationForKey:", v11);
  }

}

void sub_1005C37D4(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100648938);
  v6 = v3;
  v5 = sub_1000083D8(&qword_100837BA0, type metadata accessor for MirrorControlsState, (uint64_t)&unk_1006488F0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 16);
}

double sub_1005C3860(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100648938);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_1000083D8(&qword_100837BA0, type metadata accessor for MirrorControlsState, (uint64_t)&unk_1006488F0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1005C44A4, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1005C3908@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _OWORD v32[11];
  _OWORD v33[10];
  uint64_t v34;
  _OWORD v35[11];
  char v36;
  _OWORD v37[12];

  v2 = v1;
  v4 = sub_100047110(&qword_10083C950);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = static VerticalAlignment.center.getter(v7);
  sub_1005C3BA8(v2, (uint64_t)v33);
  *(_OWORD *)((char *)&v35[4] + 7) = v33[4];
  *(_OWORD *)((char *)&v35[3] + 7) = v33[3];
  *(_OWORD *)((char *)&v35[7] + 7) = v33[7];
  *(_OWORD *)((char *)&v35[8] + 7) = v33[8];
  *(_OWORD *)((char *)&v35[9] + 7) = v33[9];
  *(_QWORD *)((char *)&v35[10] + 7) = v34;
  *(_OWORD *)((char *)&v35[5] + 7) = v33[5];
  *(_OWORD *)((char *)&v35[6] + 7) = v33[6];
  *(_OWORD *)((char *)v35 + 7) = v33[0];
  *(_OWORD *)((char *)&v35[1] + 7) = v33[1];
  *(_OWORD *)((char *)&v35[2] + 7) = v33[2];
  *(_OWORD *)((char *)&v32[7] + 1) = v35[7];
  *(_OWORD *)((char *)&v32[8] + 1) = v35[8];
  *(_OWORD *)((char *)&v32[9] + 1) = v35[9];
  v32[10] = *(_OWORD *)((char *)&v35[9] + 15);
  *(_OWORD *)((char *)&v32[3] + 1) = v35[3];
  *(_OWORD *)((char *)&v32[4] + 1) = v35[4];
  *(_OWORD *)((char *)&v32[5] + 1) = v35[5];
  *(_OWORD *)((char *)&v32[6] + 1) = v35[6];
  *(_OWORD *)((char *)v32 + 1) = v35[0];
  *(_OWORD *)((char *)&v32[1] + 1) = v35[1];
  v36 = 1;
  v31 = (unint64_t)v8;
  LOBYTE(v32[0]) = 1;
  *(_OWORD *)((char *)&v32[2] + 1) = v35[2];
  v9 = v2[2];
  KeyPath = swift_getKeyPath(&unk_100648910);
  *(_QWORD *)&v37[0] = v9;
  v11 = sub_1000083D8(&qword_100837BA0, type metadata accessor for MirrorControlsState, (uint64_t)&unk_1006488F0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v37, KeyPath, v11);
  swift_release(KeyPath);
  v12 = *(unsigned __int8 *)(v9 + 17);
  v13 = sub_100047110(&qword_10083C958);
  v14 = sub_100028384(&qword_10083C960, &qword_10083C958, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.accessibilityHidden(_:)(v12, v13, v14);
  v37[8] = v32[7];
  v37[9] = v32[8];
  v37[10] = v32[9];
  v37[11] = v32[10];
  v37[4] = v32[3];
  v37[5] = v32[4];
  v37[6] = v32[5];
  v37[7] = v32[6];
  v37[0] = v31;
  v37[1] = v32[0];
  v37[2] = v32[1];
  v37[3] = v32[2];
  v15 = sub_1005C4704(v37);
  v16 = static Alignment.center.getter(v15);
  v18 = v17;
  sub_1005C3F8C(v2, (uint64_t)&v31);
  v29 = v32[0];
  v30 = v31;
  v27 = v32[2];
  v28 = v32[1];
  v25 = v32[4];
  v26 = v32[3];
  v19 = v32[5];
  sub_1005C4764((uint64_t)v6, a1);
  v20 = a1 + *(int *)(sub_100047110(&qword_10083C968) + 36);
  v21 = v29;
  *(_OWORD *)v20 = v30;
  *(_OWORD *)(v20 + 16) = v21;
  v22 = v27;
  *(_OWORD *)(v20 + 32) = v28;
  *(_OWORD *)(v20 + 48) = v22;
  v23 = v25;
  *(_OWORD *)(v20 + 64) = v26;
  *(_OWORD *)(v20 + 80) = v23;
  *(_OWORD *)(v20 + 96) = v19;
  *(_QWORD *)(v20 + 112) = v16;
  *(_QWORD *)(v20 + 120) = v18;
  return sub_1005C47AC((uint64_t)v6);
}

void sub_1005C3BA8(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  __n128 v15;
  double v16;
  __n128 v17;
  __n128 v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  double v33;
  __n128 v34;
  __n128 v35;
  double v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  __n128 v43;
  double v44;
  __n128 v45;
  __n128 v46;
  double v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;

  v3 = *a1;
  if (*a1)
  {
    v5 = *(_QWORD *)(v3 + OBJC_IVAR___WODataLinkMonitor_publisher);
    v6 = type metadata accessor for DataLinkMonitor();
    v7 = sub_1000083D8((unint64_t *)&qword_10081F7B0, (uint64_t (*)(uint64_t))type metadata accessor for DataLinkMonitor, (uint64_t)&unk_100636D30);
    swift_retain(v5);
    v8 = (void *)EnvironmentObject.init()(v6, v7);
    v54 = v9;
    v10 = type metadata accessor for MetricsPublisher(0);
    v11 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
    v12 = ObservedObject.init(wrappedValue:)(v5, v10, v11);
    v52 = v13;
    v53 = v12;
    v14.n128_u64[0] = 0x4055400000000000;
    v15.n128_u64[0] = 0x4055400000000000;
    v16 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(81.0, 85.0, v14, 85.0, v15, 90.0, 90.0);
    v17.n128_u64[0] = 0x4044800000000000;
    v18.n128_u64[0] = 0x4044800000000000;
    v19 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(39.0, 41.0, v17, 41.0, v18, 43.0, 43.0);
    v20 = *(_QWORD *)(v3 + OBJC_IVAR___WODataLinkMonitor_publisher);
    swift_retain(v20);
    v22 = MetricsPublisher.workoutStatePublisher.getter(v21);
    swift_release(v20);
    v23 = (void *)EnvironmentObject.init()(v6, v7);
    v25 = v24;
    v26 = type metadata accessor for WorkoutStatePublisher(0);
    v27 = sub_1000083D8(&qword_10082F230, (uint64_t (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher, (uint64_t)&protocol conformance descriptor for WorkoutStatePublisher);
    v28 = ObservedObject.init(wrappedValue:)(v22, v26, v27);
    v30 = v29;
    v31.n128_u64[0] = 0x405D400000000000;
    v32.n128_u64[0] = 0x405EC00000000000;
    v33 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(117.0, 123.0, v31, 123.0, v32, 130.0, 130.0);
    v34.n128_u64[0] = 0x4046800000000000;
    v35.n128_u64[0] = 0x4047800000000000;
    v36 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(45.0, 47.0, v34, 47.0, v35, 50.0, 50.0);
    v37 = a1[2];
    KeyPath = swift_getKeyPath(&unk_100648938);
    v55 = v37;
    v39 = sub_1000083D8(&qword_100837BA0, type metadata accessor for MirrorControlsState, (uint64_t)&unk_1006488F0);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v55, KeyPath, v39);
    swift_release(KeyPath);
    LOBYTE(KeyPath) = *(_BYTE *)(v37 + 16);
    v41 = a1[3];
    v40 = a1[4];
    swift_retain(v40);
    v42.n128_u64[0] = 0x4054400000000000;
    v43.n128_u64[0] = 0x4055400000000000;
    v44 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(81.0, 85.0, v42, 85.0, v43, 90.0, 90.0);
    v45.n128_u64[0] = 0x4041800000000000;
    v46.n128_u64[0] = 0x4042400000000000;
    v47 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(35.0, 36.5, v45, 36.5, v46, 38.0, 38.0);
    v57 = 1;
    v56 = 1;
    *(_QWORD *)a2 = v8;
    *(_QWORD *)(a2 + 8) = v54;
    *(_QWORD *)(a2 + 16) = v53;
    *(_QWORD *)(a2 + 24) = v52;
    *(double *)(a2 + 32) = v16;
    *(double *)(a2 + 40) = v19;
    *(_QWORD *)(a2 + 48) = 0;
    *(_BYTE *)(a2 + 56) = 1;
    *(_QWORD *)(a2 + 64) = v23;
    *(_QWORD *)(a2 + 72) = v25;
    *(_QWORD *)(a2 + 80) = v28;
    *(_QWORD *)(a2 + 88) = v30;
    *(double *)(a2 + 96) = v33;
    *(double *)(a2 + 104) = v36;
    *(_QWORD *)(a2 + 112) = 0;
    *(_BYTE *)(a2 + 120) = 1;
    *(_BYTE *)(a2 + 128) = KeyPath;
    *(_QWORD *)(a2 + 136) = v41;
    *(_QWORD *)(a2 + 144) = v40;
    *(double *)(a2 + 152) = v44;
    *(double *)(a2 + 160) = v47;
    v48 = v23;
    swift_retain(v30);

    swift_release(v30);
  }
  else
  {
    v49 = a1[1];
    v50 = type metadata accessor for DataLinkMonitor();
    v51 = sub_1000083D8((unint64_t *)&qword_10081F7B0, (uint64_t (*)(uint64_t))type metadata accessor for DataLinkMonitor, (uint64_t)&unk_100636D30);
    EnvironmentObject.error()(0, v49, v50, v51);
    __break(1u);
  }
}

void sub_1005C3F8C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64x2_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1[2];
  KeyPath = swift_getKeyPath(&unk_100648910);
  v18 = v4;
  v6 = sub_1000083D8(&qword_100837BA0, type metadata accessor for MirrorControlsState, (uint64_t)&unk_1006488F0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v18, KeyPath, v6);
  swift_release(KeyPath);
  if (*(_BYTE *)(v4 + 17) == 1)
  {
    v8 = a1[5];
    v7 = a1[6];
    v17 = 0;
    swift_retain(v7);
    State.init(wrappedValue:)(&v18, &v17, &type metadata for Double);
    v9 = v18;
    v10 = v19;
    LOBYTE(v17) = 0;
    State.init(wrappedValue:)(&v18, &v17, &type metadata for Bool);
    v11 = v18;
    v12 = vdupq_n_s64(0x4055400000000000uLL);
    v12.i64[0] = v19;
    v13 = xmmword_100648870;
    v14 = xmmword_100648880;
    v15 = xmmword_100648890;
    v16 = 0x4043000000000000;
  }
  else
  {
    v8 = 0;
    v7 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v16 = 0;
    v12 = 0uLL;
    v15 = 0uLL;
    v14 = 0uLL;
    v13 = 0uLL;
  }
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v11;
  *(int64x2_t *)(a2 + 40) = v12;
  *(_OWORD *)(a2 + 56) = v15;
  *(_OWORD *)(a2 + 72) = v14;
  *(_OWORD *)(a2 + 88) = v13;
  *(_QWORD *)(a2 + 104) = v16;
}

uint64_t sub_1005C40EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1005C3908(a1);
}

uint64_t sub_1005C412C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100648938);
  v4 = v0;
  v2 = sub_1000083D8(&qword_100837BA0, type metadata accessor for MirrorControlsState, (uint64_t)&unk_1006488F0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1005C41B0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

uint64_t sub_1005C41B8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100648910);
  v4 = v0;
  v2 = sub_1000083D8(&qword_100837BA0, type metadata accessor for MirrorControlsState, (uint64_t)&unk_1006488F0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 17);
}

void sub_1005C423C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100648910);
  v6 = v3;
  v5 = sub_1000083D8(&qword_100837BA0, type metadata accessor for MirrorControlsState, (uint64_t)&unk_1006488F0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 17);
}

double sub_1005C42C8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100648910);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_1000083D8(&qword_100837BA0, type metadata accessor for MirrorControlsState, (uint64_t)&unk_1006488F0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1005C448C, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1005C4370(uint64_t result, char a2)
{
  *(_BYTE *)(result + 17) = a2;
  return result;
}

uint64_t sub_1005C4378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FitnessApp19MirrorControlsState___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1005C43C8()
{
  return type metadata accessor for MirrorControlsState(0);
}

uint64_t type metadata accessor for MirrorControlsState(uint64_t a1)
{
  uint64_t result;

  result = qword_10083C848;
  if (!qword_10083C848)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MirrorControlsState);
  return result;
}

uint64_t sub_1005C440C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_1006488D8;
  v4[1] = &unk_1006488D8;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1005C448C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 17) = *(_BYTE *)(v0 + 24);
}

void sub_1005C44A4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 16) = *(_BYTE *)(v0 + 24);
}

uint64_t destroy for MirrorControlsView(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 32));
  return swift_release(*(_QWORD *)(a1 + 48));
}

uint64_t initializeWithCopy for MirrorControlsView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  __int128 v8;
  __int128 v9;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a2 + 16);
  v9 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 48) = v5;
  v6 = v3;
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for MirrorControlsView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain(v7);
  swift_release(v8);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v9;
  swift_retain(v9);
  swift_release(v10);
  v12 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v12;
  *(_QWORD *)(a1 + 48) = v11;
  swift_retain(v11);
  swift_release(v13);
  return a1;
}

uint64_t assignWithTake for MirrorControlsView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(*(_QWORD *)(a1 + 16));
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(*(_QWORD *)(a1 + 32));
  v5 = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MirrorControlsView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MirrorControlsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MirrorControlsView()
{
  return &type metadata for MirrorControlsView;
}

uint64_t sub_1005C46F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BD48C, 1);
}

_QWORD *sub_1005C4704(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v2 = (void *)a1[3];
  v3 = a1[6];
  v4 = (void *)a1[11];
  v5 = a1[14];
  swift_release(a1[21]);
  swift_release(v5);
  swift_release(v3);

  return a1;
}

uint64_t sub_1005C4764(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10083C950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005C47AC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_10083C950);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1005C47F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083C970;
  if (!qword_10083C970)
  {
    v1 = sub_100007050(&qword_10083C968);
    sub_1005C4874();
    sub_100028384(&qword_10083C980, &qword_10083C988, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083C970);
  }
  return result;
}

unint64_t sub_1005C4874()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083C978;
  if (!qword_10083C978)
  {
    v1 = sub_100007050(&qword_10083C950);
    sub_100028384(&qword_10083C960, &qword_10083C958, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_1000083D8((unint64_t *)&qword_10081EFA8, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083C978);
  }
  return result;
}

uint64_t *sub_1005C4910(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  id v13;
  id v14;
  uint64_t v15;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v15);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = (void *)a2[2];
    v7 = (void *)a2[3];
    a1[2] = (uint64_t)v6;
    a1[3] = (uint64_t)v7;
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for MetricPlatterConstants(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain(v5);
    v13 = v6;
    v14 = v7;
    v12(v9, v10, v11);
  }
  return v3;
}

uint64_t sub_1005C49C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(a1 + 8));

  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for MetricPlatterConstants(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1005C4A1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  id v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (void *)a2[2];
  v6 = (void *)a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for MetricPlatterConstants(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain(v4);
  v12 = v5;
  v13 = v6;
  v11(v8, v9, v10);
  return a1;
}

_QWORD *sub_1005C4AA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = (void *)a2[2];
  v9 = (void *)a1[2];
  a1[2] = v8;
  v10 = v8;

  v11 = (void *)a2[3];
  v12 = (void *)a1[3];
  a1[3] = v11;
  v13 = v11;

  v14 = *(int *)(a3 + 28);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for MetricPlatterConstants(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *sub_1005C4B48(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for MetricPlatterConstants(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *sub_1005C4BA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release(v7);
  v8 = (void *)a1[2];
  a1[2] = a2[2];

  v9 = (void *)a1[3];
  a1[3] = a2[3];

  v10 = *(int *)(a3 + 28);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for MetricPlatterConstants(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_1005C4C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005C4C3C);
}

uint64_t sub_1005C4C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for MetricPlatterConstants(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1005C4CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005C4CC4);
}

uint64_t sub_1005C4CC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for MetricPlatterConstants(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MirrorRaceMetricPlatterView(uint64_t a1)
{
  uint64_t result;

  result = qword_10083C9E8;
  if (!qword_10083C9E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MirrorRaceMetricPlatterView);
  return result;
}

uint64_t sub_1005C4D74(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100648A00;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for MetricPlatterConstants(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1005C4DF8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BD4DC, 1);
}

void sub_1005C4E08(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  int v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int16 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  int v54;
  void *v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  __n128 v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int16 v78;
  __int16 v79;
  void *v80;
  void *v81;
  id v82;
  id v83;
  uint64_t v84;
  CHWorkoutDetailHeartRateTableViewCell *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  __n128 v91;
  double v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  SEL v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int16 v114;
  char v115;
  _OWORD *v116;
  __n128 v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  void *v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  id v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __int16 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  void *v146;
  void *v147;
  uint64_t v148;
  id v149;
  id v150;
  uint64_t v151;
  CHWorkoutDetailHeartRateTableViewCell *v152;
  CHWorkoutDetailHeartRateTableViewCell *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __n128 v158;
  __n128 v159;
  double v160;
  unint64_t v161;
  id v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  SEL v168;
  id v169;
  id v170;
  id v171;
  id v172;
  id v173;
  id v174;
  CHWorkoutDetailHeartRateTableViewCell *v175;
  CHWorkoutDetailHeartRateTableViewCell *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  __n128 v182;
  __n128 v183;
  double v184;
  unint64_t v185;
  id v186;
  CHWorkoutDetailHeartRateTableViewCell *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  SEL v192;
  id v193;
  id v194;
  id v195;
  id v196;
  id v197;
  id v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  _OWORD *v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  unsigned __int8 v208;
  char v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int16 v214;
  char v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int16 v220;
  char v221;

  v2 = v1;
  v203 = a1;
  v3 = type metadata accessor for LocalizationFeature(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v199 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RacePosition(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v199 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v1 + 8);
  v12 = swift_retain(v11);
  v13 = MetricsPublisher.racePositionStatePublisher.getter(v12);
  swift_release(v11);
  RacePositionStatePublisher.racePosition.getter(v14);
  v15 = swift_release(v13);
  v16 = (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 88))(v10, v7, v15);
  if (v16 != enum case for RacePosition.onRoute(_:))
  {
    v54 = v16;
    if (v16 != enum case for RacePosition.notYetOnRoute(_:))
    {
      if (v16 == enum case for RacePosition.offRoute(_:))
      {
        v81 = *(void **)(v2 + 16);
        v80 = *(void **)(v2 + 24);
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for LocalizationFeature.workout(_:), v3);
        swift_retain(v11);
        v82 = v80;
        v83 = v81;
        v84 = static Localization.workoutUILocalizedString(_:feature:)(0xD000000000000016, 0x80000001006A9130, v6);
        v61 = v85;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        v86 = type metadata accessor for MetricsPublisher(0);
        v87 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
        v88 = ObservedObject.init(wrappedValue:)(v11, v86, v87);
        v66 = v89;
        v90.n128_u64[0] = 0x404F000000000000;
        v91.n128_u64[0] = 0x404F000000000000;
        v92 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(55.0, 65.0, v90, 67.0, v91, 71.0, 71.0);
        *(_QWORD *)&v216 = v88;
        *((_QWORD *)&v216 + 1) = v66;
        *(_QWORD *)&v217 = v82;
        *((_QWORD *)&v217 + 1) = v83;
        *(_QWORD *)&v218 = v84;
        *((_QWORD *)&v218 + 1) = v61;
        *(double *)&v219 = v92;
        BYTE8(v219) = 0;
        v93 = sub_1005C5CF8();
        v94 = sub_1005C5DEC();
        swift_retain(v66);
        v72 = v82;
        v73 = v83;
        swift_bridgeObjectRetain(v61);
        _ConditionalContent<>.init(storage:)(&v216, &type metadata for MirrorRaceMessageWithMetricsView, &type metadata for MirrorRaceCompleteView, v93, v94);
        v216 = v210;
        v217 = v211;
        v218 = v212;
        *(_QWORD *)&v219 = v213;
        *((_QWORD *)&v219 + 1) = BYTE8(v213);
        v220 = 256;
        v95 = sub_100047110(&qword_10083CA50);
        v96 = sub_100047110(&qword_10083CA68);
        v97 = sub_1005C5D60();
        v98 = sub_1005C5DC8();
        _ConditionalContent<>.init(storage:)(&v216, v95, v96, v97, v98);
        v78 = v208;
        if (v209)
          v79 = 256;
        else
          v79 = 0;
        goto LABEL_15;
      }
      if (v16 == enum case for RacePosition.completed(_:))
      {
        v117 = swift_retain(v11);
        v118 = MetricsPublisher.racePositionStatePublisher.getter(v117);
        swift_release(v11);
        v119 = swift_retain(v11);
        v120 = MetricsPublisher.raceInformationPublisher.getter(v119);
        swift_release(v11);
        v122 = *(void **)(v2 + 16);
        v121 = *(void **)(v2 + 24);
        v123 = type metadata accessor for RacePositionStatePublisher(0);
        v124 = sub_1000083D8(&qword_100830E00, (uint64_t (*)(uint64_t))&type metadata accessor for RacePositionStatePublisher, (uint64_t)&protocol conformance descriptor for RacePositionStatePublisher);
        v125 = v121;
        v126 = v122;
        v127 = ObservedObject.init(wrappedValue:)(v118, v123, v124);
        v29 = v128;
        v129 = type metadata accessor for RaceInformationPublisher(0);
        v130 = sub_1000083D8(&qword_10083CA80, (uint64_t (*)(uint64_t))&type metadata accessor for RaceInformationPublisher, (uint64_t)&protocol conformance descriptor for RaceInformationPublisher);
        v131 = ObservedObject.init(wrappedValue:)(v120, v129, v130);
        v34 = v132;
        *(_QWORD *)&v216 = v127;
        *((_QWORD *)&v216 + 1) = v29;
        *(_QWORD *)&v217 = v131;
        *((_QWORD *)&v217 + 1) = v132;
        *(_QWORD *)&v218 = v125;
        *((_QWORD *)&v218 + 1) = v126;
        *(_QWORD *)&v219 = 0;
        BYTE8(v219) = 1;
        v133 = sub_1005C5CF8();
        v134 = sub_1005C5DEC();
        v135 = v125;
        v136 = v126;
        swift_retain(v29);
        swift_retain(v34);
        _ConditionalContent<>.init(storage:)(&v216, &type metadata for MirrorRaceMessageWithMetricsView, &type metadata for MirrorRaceCompleteView, v133, v134);
        v216 = v210;
        v217 = v211;
        v218 = v212;
        *(_QWORD *)&v219 = v213;
        *((_QWORD *)&v219 + 1) = BYTE8(v213);
        v220 = 256;
        v137 = sub_100047110(&qword_10083CA50);
        v138 = sub_100047110(&qword_10083CA68);
        v139 = sub_1005C5D60();
        v140 = sub_1005C5DC8();
        _ConditionalContent<>.init(storage:)(&v216, v137, v138, v139, v140);
        if (v209)
          v141 = 256;
        else
          v141 = 0;
        v210 = v204;
        v211 = v205;
        v212 = v206;
        v213 = v207;
        v214 = v141 | v208;
        v215 = 0;
        v142 = sub_100047110(&qword_10083CA30);
        v143 = sub_100047110(&qword_10083CA38);
        v144 = sub_1005C5D3C();
        v145 = sub_1005C5E30();
        _ConditionalContent<>.init(storage:)(&v210, v142, v143, v144, v145);

        goto LABEL_6;
      }
      if (v16 != enum case for RacePosition.unknown(_:))
      {
        LODWORD(v202) = enum case for RacePosition.expired(_:);
        v148 = v2 + 16;
        v147 = *(void **)(v2 + 16);
        v146 = *(void **)(v148 + 8);
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for LocalizationFeature.workout(_:), v3);
        swift_retain(v11);
        v149 = v146;
        v150 = v147;
        if (v54 != (_DWORD)v202)
        {
          *(_QWORD *)&v202 = static Localization.workoutUILocalizedString(_:feature:)(0xD00000000000001DLL, 0x80000001006A90F0, v6);
          v176 = v175;
          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
          v177 = type metadata accessor for MetricsPublisher(0);
          v178 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
          v179 = ObservedObject.init(wrappedValue:)(v11, v177, v178);
          v181 = v180;
          v182.n128_u64[0] = 0x404F000000000000;
          v183.n128_u64[0] = 0x404F000000000000;
          v184 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(55.0, 65.0, v182, 67.0, v183, 71.0, 71.0);
          *(_QWORD *)&v216 = v179;
          *((_QWORD *)&v216 + 1) = v181;
          *(_QWORD *)&v217 = v149;
          *((_QWORD *)&v217 + 1) = v150;
          *(_QWORD *)&v218 = v202;
          *((_QWORD *)&v218 + 1) = v176;
          *(double *)&v219 = v184;
          BYTE8(v219) = 1;
          v185 = sub_1005C5CF8();
          swift_retain(v181);
          *(_QWORD *)&v202 = v149;
          v186 = v150;
          v187 = v176;
          swift_bridgeObjectRetain(v176);
          _ConditionalContent<>.init(storage:)(&v216, &type metadata for MirrorRaceMessageWithMetricsView, &type metadata for MirrorRaceMessageWithMetricsView, v185, v185);
          v210 = v204;
          v211 = v205;
          v212 = v206;
          *(_QWORD *)&v213 = v207;
          *((_QWORD *)&v213 + 1) = BYTE8(v207);
          v214 = 0;
          v215 = 1;
          v188 = sub_100047110(&qword_10083CA30);
          v189 = sub_100047110(&qword_10083CA38);
          v190 = sub_1005C5D3C();
          v191 = sub_1005C5E30();
          _ConditionalContent<>.init(storage:)(&v210, v188, v189, v190, v191);
          swift_bridgeObjectRelease(v187, v192, v193, v194, v195, v196, v197, v198);

          swift_release(v181);
          v202 = v216;
          v201 = v217;
          v200 = v218;
          v199 = v219;
          v114 = v220;
          v115 = v221;
          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
          v113 = v199;
          v112 = v200;
          v111 = v201;
          v110 = v202;
          goto LABEL_18;
        }
        v151 = static Localization.workoutUILocalizedString(_:feature:)(0xD000000000000019, 0x80000001006A9110, v6);
        v153 = v152;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        v154 = type metadata accessor for MetricsPublisher(0);
        v155 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
        v156 = ObservedObject.init(wrappedValue:)(v11, v154, v155);
        v66 = v157;
        v158.n128_u64[0] = 0x404F000000000000;
        v159.n128_u64[0] = 0x404F000000000000;
        v160 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(55.0, 65.0, v158, 67.0, v159, 71.0, 71.0);
        *(_QWORD *)&v216 = v156;
        *((_QWORD *)&v216 + 1) = v66;
        *(_QWORD *)&v217 = v149;
        *((_QWORD *)&v217 + 1) = v150;
        *(_QWORD *)&v218 = v151;
        *((_QWORD *)&v218 + 1) = v153;
        *(double *)&v219 = v160;
        BYTE8(v219) = 0;
        v161 = sub_1005C5CF8();
        swift_retain(v66);
        v162 = v149;
        v163 = v150;
        swift_bridgeObjectRetain(v153);
        _ConditionalContent<>.init(storage:)(&v216, &type metadata for MirrorRaceMessageWithMetricsView, &type metadata for MirrorRaceMessageWithMetricsView, v161, v161);
        v210 = v204;
        v211 = v205;
        v212 = v206;
        *(_QWORD *)&v213 = v207;
        *((_QWORD *)&v213 + 1) = BYTE8(v207);
        v214 = 0;
        v215 = 1;
        v164 = sub_100047110(&qword_10083CA30);
        v165 = sub_100047110(&qword_10083CA38);
        v166 = sub_1005C5D3C();
        v167 = sub_1005C5E30();
        _ConditionalContent<>.init(storage:)(&v210, v164, v165, v166, v167);
        swift_bridgeObjectRelease(v153, v168, v169, v170, v171, v172, v173, v174);

        goto LABEL_16;
      }
    }
    v56 = *(void **)(v2 + 16);
    v55 = *(void **)(v2 + 24);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for LocalizationFeature.workout(_:), v3);
    swift_retain(v11);
    v57 = v55;
    v58 = v56;
    v59 = static Localization.workoutUILocalizedString(_:feature:)(0xD00000000000001DLL, 0x80000001006A90F0, v6);
    v61 = v60;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v62 = type metadata accessor for MetricsPublisher(0);
    v63 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
    v64 = ObservedObject.init(wrappedValue:)(v11, v62, v63);
    v66 = v65;
    v67.n128_u64[0] = 0x404F000000000000;
    v68.n128_u64[0] = 0x404F000000000000;
    *(double *)&v69 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(55.0, 65.0, v67, 67.0, v68, 71.0, 71.0);
    *(_QWORD *)&v216 = v64;
    *((_QWORD *)&v216 + 1) = v66;
    *(_QWORD *)&v217 = v57;
    *((_QWORD *)&v217 + 1) = v58;
    *(_QWORD *)&v218 = v59;
    *((_QWORD *)&v218 + 1) = v61;
    v219 = v69;
    LOBYTE(v220) = 0;
    v70 = sub_1005C5CF8();
    v71 = sub_1005C5D84();
    swift_retain(v66);
    v72 = v57;
    v73 = v58;
    swift_bridgeObjectRetain(v61);
    _ConditionalContent<>.init(storage:)(&v216, &type metadata for MirrorRaceMessageWithMetricsView, &type metadata for MirrorRaceOnRouteView, v70, v71);
    v216 = v210;
    v217 = v211;
    v218 = v212;
    v219 = v213;
    v220 = v214;
    v74 = sub_100047110(&qword_10083CA50);
    v75 = sub_100047110(&qword_10083CA68);
    v76 = sub_1005C5D60();
    v77 = sub_1005C5DC8();
    _ConditionalContent<>.init(storage:)(&v216, v74, v75, v76, v77);
    v78 = v208;
    if (v209)
      v79 = 256;
    else
      v79 = 0;
LABEL_15:
    v210 = v204;
    v211 = v205;
    v212 = v206;
    v213 = v207;
    v214 = v79 | v78;
    v215 = 0;
    v99 = sub_100047110(&qword_10083CA30);
    v100 = sub_100047110(&qword_10083CA38);
    v101 = sub_1005C5D3C();
    v102 = sub_1005C5E30();
    _ConditionalContent<>.init(storage:)(&v210, v99, v100, v101, v102);
    swift_bridgeObjectRelease(v61, v103, v104, v105, v106, v107, v108, v109);

LABEL_16:
    v53 = v66;
    goto LABEL_17;
  }
  v17 = swift_retain(v11);
  v18 = MetricsPublisher.racePositionStatePublisher.getter(v17);
  v19 = swift_retain(v11);
  v20 = MetricsPublisher.raceInformationPublisher.getter(v19);
  swift_release(v11);
  v22 = *(void **)(v2 + 16);
  v21 = *(void **)(v2 + 24);
  v23 = type metadata accessor for MetricsPublisher(0);
  v24 = sub_1000083D8((unint64_t *)&qword_100826318, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsPublisher, (uint64_t)&protocol conformance descriptor for MetricsPublisher);
  v25 = v21;
  v26 = v22;
  v27 = ObservedObject.init(wrappedValue:)(v11, v23, v24);
  v29 = v28;
  v30 = type metadata accessor for RacePositionStatePublisher(0);
  v31 = sub_1000083D8(&qword_100830E00, (uint64_t (*)(uint64_t))&type metadata accessor for RacePositionStatePublisher, (uint64_t)&protocol conformance descriptor for RacePositionStatePublisher);
  v32 = ObservedObject.init(wrappedValue:)(v18, v30, v31);
  v34 = v33;
  v35 = type metadata accessor for RaceInformationPublisher(0);
  v36 = sub_1000083D8(&qword_10083CA80, (uint64_t (*)(uint64_t))&type metadata accessor for RaceInformationPublisher, (uint64_t)&protocol conformance descriptor for RaceInformationPublisher);
  v37 = ObservedObject.init(wrappedValue:)(v20, v35, v36);
  v39 = v38;
  *(_QWORD *)&v216 = v27;
  *((_QWORD *)&v216 + 1) = v29;
  *(_QWORD *)&v217 = v32;
  *((_QWORD *)&v217 + 1) = v34;
  *(_QWORD *)&v218 = v37;
  *((_QWORD *)&v218 + 1) = v38;
  *(_QWORD *)&v219 = v25;
  *((_QWORD *)&v219 + 1) = v26;
  LOBYTE(v220) = 1;
  v40 = sub_1005C5CF8();
  v41 = sub_1005C5D84();
  swift_retain(v29);
  swift_retain(v34);
  swift_retain(v39);
  v42 = v25;
  v43 = v26;
  _ConditionalContent<>.init(storage:)(&v216, &type metadata for MirrorRaceMessageWithMetricsView, &type metadata for MirrorRaceOnRouteView, v40, v41);
  v216 = v210;
  v217 = v211;
  v218 = v212;
  v219 = v213;
  v220 = v214;
  v44 = sub_100047110(&qword_10083CA50);
  v45 = sub_100047110(&qword_10083CA68);
  v46 = sub_1005C5D60();
  v47 = sub_1005C5DC8();
  _ConditionalContent<>.init(storage:)(&v216, v44, v45, v46, v47);
  if (v209)
    v48 = 256;
  else
    v48 = 0;
  v210 = v204;
  v211 = v205;
  v212 = v206;
  v213 = v207;
  v214 = v48 | v208;
  v215 = 0;
  v49 = sub_100047110(&qword_10083CA30);
  v50 = sub_100047110(&qword_10083CA38);
  v51 = sub_1005C5D3C();
  v52 = sub_1005C5E30();
  _ConditionalContent<>.init(storage:)(&v210, v49, v50, v51, v52);

  swift_release(v39);
LABEL_6:
  swift_release(v34);
  v53 = v29;
LABEL_17:
  swift_release(v53);
  v110 = v216;
  v111 = v217;
  v112 = v218;
  v113 = v219;
  v114 = v220;
  v115 = v221;
LABEL_18:
  v116 = v203;
  *v203 = v110;
  v116[1] = v111;
  v116[2] = v112;
  v116[3] = v113;
  *((_WORD *)v116 + 32) = v114;
  *((_BYTE *)v116 + 66) = v115;
}

unint64_t sub_1005C5CF8()
{
  unint64_t result;

  result = qword_10083CA28;
  if (!qword_10083CA28)
  {
    result = swift_getWitnessTable(&unk_1006299D4, &type metadata for MirrorRaceMessageWithMetricsView);
    atomic_store(result, (unint64_t *)&qword_10083CA28);
  }
  return result;
}

uint64_t sub_1005C5D3C()
{
  return sub_1001C735C(&qword_10083CA40, &qword_10083CA30, (void (*)(void))sub_1005C5D60, (void (*)(void))sub_1005C5DC8);
}

uint64_t sub_1005C5D60()
{
  return sub_1001C735C(&qword_10083CA48, &qword_10083CA50, (void (*)(void))sub_1005C5CF8, (void (*)(void))sub_1005C5D84);
}

unint64_t sub_1005C5D84()
{
  unint64_t result;

  result = qword_10083CA58;
  if (!qword_10083CA58)
  {
    result = swift_getWitnessTable(&unk_10063EA48, &type metadata for MirrorRaceOnRouteView);
    atomic_store(result, (unint64_t *)&qword_10083CA58);
  }
  return result;
}

uint64_t sub_1005C5DC8()
{
  return sub_1001C735C(&qword_10083CA60, &qword_10083CA68, (void (*)(void))sub_1005C5CF8, (void (*)(void))sub_1005C5DEC);
}

unint64_t sub_1005C5DEC()
{
  unint64_t result;

  result = qword_10083CA70;
  if (!qword_10083CA70)
  {
    result = swift_getWitnessTable(&unk_100647888, &type metadata for MirrorRaceCompleteView);
    atomic_store(result, (unint64_t *)&qword_10083CA70);
  }
  return result;
}

unint64_t sub_1005C5E30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083CA78;
  if (!qword_10083CA78)
  {
    v1 = sub_100007050(&qword_10083CA38);
    sub_1005C5CF8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083CA78);
  }
  return result;
}

uint64_t sub_1005C5E94()
{
  return sub_1001C735C(&qword_10083CA88, &qword_10083CA90, (void (*)(void))sub_1005C5D3C, (void (*)(void))sub_1005C5E30);
}

void sub_1005C5EC8()
{
  _BYTE *v0;
  double v1;
  double v2;
  uint64_t v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  double v12;

  v1 = 64.0;
  if (v0[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_suggestedMinutesToWalk + 8])
    v1 = 0.0;
  if (*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendations]
                 + 16))
    v2 = v1 + 170.0 + 30.0 + 5.0 + 15.0;
  else
    v2 = v1;
  v3 = OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations;
  if (*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations]
                 + 16))
  {
    v4 = objc_msgSend(v0, "collectionView");
    if (!v4)
    {
LABEL_16:
      __break(1u);
      return;
    }
    v5 = v4;
    objc_msgSend(v4, "frame");
    v7 = v6;

    v2 = v2 + v7 * 0.25 + 18.0 + 10.0 + 10.0;
  }
  v8 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appStoreRecommendations]
                 + 16);
  if (v8)
    v2 = v2 + (double)v8 * 70.0 + 10.0 + 10.0;
  v9 = *(_QWORD *)(*(_QWORD *)&v0[v3] + 16);
  v10 = __OFADD__(v9, v8);
  v11 = v9 + v8;
  if (v10)
  {
    __break(1u);
    goto LABEL_16;
  }
  v12 = 30.0;
  if (!v11)
    v12 = 0.0;
  *(double *)&v0[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_lastCollectionViewContentHeight] = v2 + v12;
}

id sub_1005C6040()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t ObjCClassFromMetadata;
  NSString v8;
  _QWORD v10[5];
  uint64_t v11;

  v1 = swift_allocObject(&unk_1007ACB58, 24, 7);
  *(_QWORD *)(v1 + 16) = v0;
  v2 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v10[4] = sub_1005C715C;
  v11 = v1;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100319084;
  v10[3] = &unk_1007ACB70;
  v3 = _Block_copy(v10);
  v4 = v0;
  v5 = objc_msgSend(v2, "initWithSectionProvider:", v3, swift_retain(v1).n128_f64[0]);
  _Block_release(v3);
  swift_release(v11);
  v6 = type metadata accessor for BackgroundSupplementaryView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v6);
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "registerClass:forDecorationViewOfKind:", ObjCClassFromMetadata, v8);
  swift_release(v1);

  return v5;
}

void sub_1005C6164(unint64_t a1)
{
  __n128 v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode(0);
  v2 = __chkstk_darwin(v9);
  v3 = type metadata accessor for UICollectionLayoutListConfiguration.FooterMode(0, v2);
  v4 = __chkstk_darwin(v3);
  v5 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0, v4);
  v6 = __chkstk_darwin(v5);
  v7 = type metadata accessor for UICollectionLayoutListConfiguration(0, v6);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  if (a1 <= 3)
    __asm { BR              X10 }
  __break(1u);
  JUMPOUT(0x1005C7128);
}

uint64_t sub_1005C7138()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1005C715C(unint64_t a1)
{
  sub_1005C6164(a1);
}

uint64_t sub_1005C7164()
{
  uint64_t v0;
  Swift::Int v1;

  v1 = sub_100230B90((uint64_t)&off_100780D48);
  swift_arrayDestroy(&unk_100780D68, 8, &type metadata for String);
  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 24) = 0;
  return v0;
}

uint64_t sub_1005C71B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 25, 7);
}

uint64_t storeEnumTagSinglePayload for TrendsPairedWatchesAltimeterSupport(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1005C7228 + 4 * byte_100648A75[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1005C725C + 4 * byte_100648A70[v4]))();
}

uint64_t sub_1005C725C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005C7264(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005C726CLL);
  return result;
}

uint64_t sub_1005C7278(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005C7280);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1005C7284(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005C728C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrendsPairedWatchesAltimeterSupport()
{
  return &type metadata for TrendsPairedWatchesAltimeterSupport;
}

unint64_t sub_1005C72AC()
{
  unint64_t result;

  result = qword_10083CB70;
  if (!qword_10083CB70)
  {
    result = swift_getWitnessTable(&unk_100648B24, &type metadata for TrendsPairedWatchesAltimeterSupport);
    atomic_store(result, (unint64_t *)&qword_10083CB70);
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivacyLinkView()
{
  return &type metadata for PrivacyLinkView;
}

id sub_1005C7300()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double Width;
  id v14;
  id result;
  double v16;
  double v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  id v24;
  CGRect v25;

  v0 = (void *)objc_opt_self(OBPrivacyLinkController);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "linkWithBundleIdentifier:", v1);

  if (v2)
  {
    objc_msgSend(v2, "setDisplayIcon:", 0);
    v4 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v4, "bounds");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    v25.origin.x = v6;
    v25.origin.y = v8;
    v25.size.width = v10;
    v25.size.height = v12;
    Width = CGRectGetWidth(v25);
    v14 = v2;
    result = objc_msgSend(v14, "view");
    if (result)
    {
      v18 = result;
      LODWORD(v16) = 1148846080;
      LODWORD(v17) = 1112014848;
      objc_msgSend(result, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", Width, INFINITY, v16, v17);
      v20 = v19;
      v22 = v21;

      objc_msgSend(v14, "setPreferredContentSize:", v20, v22);
      return v14;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v23 = static os_log_type_t.error.getter(v3);
    v24 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v23, &_mh_execute_header, v24, "Failed to present privacy link for Activity Sharing. Falling back to empty privacy link.", 88, 2, _swiftEmptyArrayStorage);

    return objc_msgSend(objc_allocWithZone((Class)OBPrivacyLinkController), "init");
  }
  return result;
}

id sub_1005C74E0()
{
  return sub_1005C7300();
}

uint64_t sub_1005C74FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1005C7608();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1005C754C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1005C7608();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1005C759C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005C7608();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

unint64_t sub_1005C75C4()
{
  unint64_t result;

  result = qword_10083CB78;
  if (!qword_10083CB78)
  {
    result = swift_getWitnessTable(&unk_100648B68, &type metadata for PrivacyLinkView);
    atomic_store(result, (unint64_t *)&qword_10083CB78);
  }
  return result;
}

unint64_t sub_1005C7608()
{
  unint64_t result;

  result = qword_10083CB80;
  if (!qword_10083CB80)
  {
    result = swift_getWitnessTable(&unk_100648BB8, &type metadata for PrivacyLinkView);
    atomic_store(result, (unint64_t *)&qword_10083CB80);
  }
  return result;
}

uint64_t sub_1005C764C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;

  v6 = type metadata accessor for CatalogTipSectionItem(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100824DE0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110((uint64_t *)&unk_1008283A0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a3 = swift_getKeyPath(&unk_100648C40);
  v15 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(a3, v15, 0);
  v16 = (int *)type metadata accessor for CatalogTipCardView(0);
  sub_10004F8C8(a1, (uint64_t)a3 + v16[5], type metadata accessor for CatalogTipCard);
  v17 = (uint64_t)a3 + v16[6];
  v34 = a2;
  sub_100021CC0(a2, v17, &qword_10081F600);
  v18 = type metadata accessor for CatalogTipCard(0);
  sub_100021CC0(a1 + *(int *)(v18 + 36), (uint64_t)v11, &qword_100824DE0);
  v19 = type metadata accessor for CatalogTipSection(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v11, 1, v19) == 1)
  {
    sub_10001BE90((uint64_t)v11, &qword_100824DE0);
    v20 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 1, 1, v20);
  }
  else
  {
    sub_10004F8C8((uint64_t)&v11[*(int *)(v19 + 24)], (uint64_t)v8, type metadata accessor for CatalogTipSectionItem);
    sub_100011F54((uint64_t)v11, type metadata accessor for CatalogTipSection);
    v21 = &v8[*(int *)(v6 + 20)];
    v22 = type metadata accessor for Artwork(0);
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v14, v21, v22);
    sub_100011F54((uint64_t)v8, type metadata accessor for CatalogTipSectionItem);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v14, 0, 1, v22);
  }
  v24 = *(_QWORD *)(a1 + *(int *)(v18 + 40));
  v25 = type metadata accessor for TipArtworkImageLoader(0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  swift_retain(v24);
  v26 = sub_1005CDBBC((uint64_t)v14, v24, 36.0, 36.0);
  v27 = (_QWORD *)((char *)a3 + v16[7]);
  v28 = sub_1005C9B00();
  v29 = ObservedObject.init(wrappedValue:)(v26, v25, v28);
  v31 = v30;
  sub_10001BE90(v34, &qword_10081F600);
  result = sub_100011F54(a1, type metadata accessor for CatalogTipCard);
  *v27 = v29;
  v27[1] = v31;
  return result;
}

uint64_t type metadata accessor for CatalogTipCardView(uint64_t a1)
{
  uint64_t result;

  result = qword_10083CBE8;
  if (!qword_10083CBE8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CatalogTipCardView);
  return result;
}

uint64_t sub_1005C7984@<X0>(uint64_t a1@<X8>)
{
  CHWorkoutDetailHeartRateTableViewCell *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  _BYTE v21[528];
  _BYTE v22[536];

  v3 = type metadata accessor for CatalogTipCardView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_100047110(&qword_100832E10);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1005C7B48(v1, v21);
  sub_10004F8C8((uint64_t)v1, (uint64_t)&v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for CatalogTipCardView);
  v10 = *(unsigned __int8 *)(v4 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = swift_allocObject(&unk_1007ACD88, v11 + v5, v10 | 7);
  sub_1005CBC24((uint64_t)&v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v12 + v11);
  v13 = sub_100047110(&qword_10083CC28);
  v14 = sub_1005CBC94();
  View.onTapGesture(count:perform:)(1, sub_1005CBC68, v12, v13, v14);
  swift_release(v12);
  memcpy(v22, v21, 0x20BuLL);
  v15 = sub_1005CBE18((uint64_t)v22);
  v16 = static Alignment.center.getter(v15);
  v18 = sub_1003ED73C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v16, v17);
  return (*(uint64_t (**)(_BYTE *, uint64_t, double))(v7 + 8))(v9, v6, v18);
}

void *sub_1005C7B48@<X0>(CHWorkoutDetailHeartRateTableViewCell *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v26;
  _BYTE v27[528];
  _QWORD v28[66];
  _BYTE v29[504];
  char v30;
  _BYTE v31[522];
  _QWORD v32[67];

  v26 = a2;
  v3 = type metadata accessor for DynamicTypeSize(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = (char *)a1 + *(int *)(type metadata accessor for CatalogTipCardView(0) + 20);
  v8 = type metadata accessor for CatalogTipCard(0);
  v9 = &v7[*(int *)(v8 + 20)];
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = v9[16];
  sub_1003F6E18((uint64_t)v6);
  LODWORD(v10) = sub_10054FD90((uint64_t)v6, v10, v11, v12);
  v13 = (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  if ((_DWORD)v10 == 2)
  {
    v14 = static HorizontalAlignment.leading.getter(v13);
    sub_1005C7E78(a1, (uint64_t)v29);
    v30 = 0;
    memcpy(&v31[7], v29, 0x121uLL);
    v28[0] = v14;
    v28[1] = 0;
    LOBYTE(v28[2]) = 0;
    memcpy((char *)&v28[2] + 1, v31, 0x128uLL);
    sub_1005CC3BC((uint64_t)v28);
  }
  else
  {
    if (v7[*(int *)(v8 + 24)] == 1)
    {
      v15 = static VerticalAlignment.top.getter(v13);
      sub_1005C8628((uint64_t)a1, (uint64_t)v29);
      v30 = 0;
      memcpy(&v27[7], v29, 0x199uLL);
      v32[0] = v15;
      v32[1] = 0;
      LOBYTE(v32[2]) = 0;
      memcpy((char *)&v32[2] + 1, v27, 0x1A0uLL);
      sub_1005CC3B4((uint64_t)v32);
    }
    else
    {
      v16 = static HorizontalAlignment.leading.getter(v13);
      sub_1005C9160((uint64_t)a1, (uint64_t)v29);
      v30 = 0;
      memcpy(&v27[7], v29, 0x1F1uLL);
      v32[0] = v16;
      v32[1] = 0;
      LOBYTE(v32[2]) = 0;
      memcpy((char *)&v32[2] + 1, v27, 0x1F8uLL);
      sub_1005CC39C((uint64_t)v32);
    }
    sub_100045AD4((uint64_t)v32, (uint64_t)v28, &qword_10083CC88);
    v17 = sub_100047110(&qword_10083CC70);
    v18 = sub_100047110(&qword_10083CC80);
    v19 = sub_100028384(&qword_10083CC68, &qword_10083CC70, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v20 = sub_100028384(&qword_10083CC78, &qword_10083CC80, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v28, v17, v18, v19, v20);
    memcpy(v28, v31, 0x20AuLL);
    sub_1005CC3A8((uint64_t)v28);
  }
  sub_100045AD4((uint64_t)v28, (uint64_t)v27, &qword_10083CC90);
  v21 = sub_100047110(&qword_10083CC50);
  v22 = sub_100047110(&qword_10083CC60);
  v23 = sub_100028384(&qword_10083CC48, &qword_10083CC50, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v24 = sub_1005CBD7C();
  _ConditionalContent<>.init(storage:)(v27, v21, v22, v23, v24);
  return memcpy(v26, v32, 0x20BuLL);
}

uint64_t sub_1005C7E78@<X0>(CHWorkoutDetailHeartRateTableViewCell *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  char v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  __n128 v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  __n128 v37;
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  uint64_t v40;
  uint64_t v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  char v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  __n128 v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  CHWorkoutDetailHeartRateTableViewCell *v69;
  uint64_t v70;
  SEL v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  __n128 v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  CHWorkoutDetailHeartRateTableViewCell *v83;
  char v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  double v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  CHWorkoutDetailHeartRateTableViewCell *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  SEL v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  double (*v122)(char *, uint64_t, __n128);
  void (*v123)(char *, __n128);
  CHWorkoutDetailHeartRateTableViewCell *v124;
  __int128 v125;
  CHWorkoutDetailHeartRateTableViewCell *v126;
  int v127;
  uint64_t v128;
  uint64_t KeyPath;
  _DWORD v130[2];
  _DWORD v131[2];
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  unsigned __int8 v141;
  char v142;
  _BYTE v143[7];
  _BYTE v144[7];
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  _OWORD v154[2];
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  char v166;
  char v167;
  _BYTE v168[7];
  _BYTE v169[7];
  char v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  _BYTE v183[7];
  char v184;
  _BYTE v185[7];
  uint64_t v186;
  uint64_t v187;
  __int128 v188;
  char v189;

  v126 = a1;
  v3 = type metadata accessor for Font.Leading(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = v3;
  __chkstk_darwin(v3);
  v7 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v125 = v10;
  sub_1005C8440((uint64_t (*)(uint64_t))&ShelfLockupAttributedTagStrings.title.getter);
  v11 = Text.init(_:)(v10);
  v13 = v12;
  v15 = v14;
  LODWORD(KeyPath) = v16 & 1;
  v18 = static Font.body.getter(v17);
  static Font.Weight.semibold.getter(v18);
  v19 = Font.weight(_:)(v18);
  v20 = swift_release(v18);
  LODWORD(v124) = enum case for Font.Leading.tight(_:);
  v123 = *(void (**)(char *, __n128))(v4 + 104);
  v121 = v5;
  v123(v7, v20);
  v120 = v7;
  v21 = Font.leading(_:)(v7, v19);
  v22 = swift_release(v19);
  v122 = *(double (**)(char *, uint64_t, __n128))(v4 + 8);
  v23.n128_f64[0] = v122(v7, v5, v22);
  LOBYTE(v5) = KeyPath;
  v24 = v15;
  v25 = Text.font(_:)(v21, v11, v13, KeyPath, v15, v23);
  v128 = v26;
  LOBYTE(v15) = v27;
  v29 = v28;
  swift_release(v21);
  LOBYTE(v15) = v15 & 1;
  sub_1000E4458(v11, v13, v5);
  swift_bridgeObjectRelease(v24, v30, v31, v32, v33, v34, v35, v36);
  v38 = static Alignment.leading.getter(v37);
  v39 = v29;
  v118 = (uint64_t)v29;
  v40 = v128;
  sub_1003EAC04(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v171, 0.0, 1, 0.0, 1, v38, v41, v25, v128, (char)v15, v118);
  sub_1000E4458(v25, v40, (char)v15);
  swift_bridgeObjectRelease(v39, v42, v43, v44, v45, v46, v47, v48);
  v151 = v177;
  v152 = v178;
  v153 = v179;
  v147 = v173;
  v148 = v174;
  v149 = v175;
  v150 = v176;
  v145 = v171;
  v146 = v172;
  KeyPath = swift_getKeyPath(&unk_100648D18);
  v141 = 0;
  v49 = static Edge.Set.all.getter(KeyPath);
  v127 = v141;
  LODWORD(v128) = v49;
  v142 = 0;
  v50 = v125;
  sub_1005C8440((uint64_t (*)(uint64_t))&ShelfLockupAttributedTagStrings.subtitle.getter);
  v51 = Text.init(_:)(v50);
  v53 = v52;
  v55 = v54;
  v57 = v56 & 1;
  v59 = static Font.caption.getter(v58);
  v61 = v120;
  v60 = v121;
  ((void (*)(char *, _QWORD, uint64_t))v123)(v120, v124, v121);
  v62 = Font.leading(_:)(v61, v59);
  v63 = swift_release(v59);
  v64.n128_f64[0] = v122(v61, v60, v63);
  v65 = Text.font(_:)(v62, v51, v53, v57, v55, v64);
  v67 = v66;
  LOBYTE(v61) = v68;
  v126 = v69;
  swift_release(v62);
  v70 = v61 & 1;
  sub_1000E4458(v51, v53, v57);
  swift_bridgeObjectRelease(v55, v71, v72, v73, v74, v75, v76, v77);
  LODWORD(v171) = static HierarchicalShapeStyle.secondary.getter(v78);
  v79 = v126;
  v80 = Text.foregroundStyle<A>(_:)(&v171, v65, v67, v70, v126, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v82 = v81;
  v124 = v83;
  LOBYTE(v62) = v84 & 1;
  sub_1000E4458(v65, v67, v70);
  swift_bridgeObjectRelease(v79, v85, v86, v87, v88, v89, v90, v91);
  LODWORD(v126) = static Edge.Set.all.getter(v92);
  v93 = EdgeInsets.init(_all:)(0.0);
  v138 = v151;
  v139 = v152;
  v140 = v153;
  v134 = v147;
  v135 = v148;
  v136 = v149;
  v137 = v150;
  v132 = v145;
  v133 = v146;
  v159 = v151;
  v160 = v152;
  v161 = v153;
  v131[0] = *(_DWORD *)v144;
  *(_DWORD *)((char *)v131 + 3) = *(_DWORD *)&v144[3];
  v130[0] = *(_DWORD *)v143;
  *(_DWORD *)((char *)v130 + 3) = *(_DWORD *)&v143[3];
  v155 = v147;
  v156 = v148;
  v157 = v149;
  v158 = v150;
  v154[0] = v145;
  v154[1] = v146;
  LOBYTE(v70) = v142;
  v94 = KeyPath;
  *(_QWORD *)&v162 = KeyPath;
  *((_QWORD *)&v162 + 1) = 4;
  LOBYTE(v67) = v127;
  LOBYTE(v65) = v128;
  LOBYTE(v163) = v127;
  *(_DWORD *)((char *)&v163 + 1) = *(_DWORD *)v144;
  DWORD1(v163) = *(_DWORD *)&v144[3];
  BYTE8(v163) = v128;
  HIDWORD(v163) = *(_DWORD *)&v143[3];
  *(_DWORD *)((char *)&v163 + 9) = *(_DWORD *)v143;
  v164 = 0uLL;
  v125 = xmmword_100622F60;
  v165 = xmmword_100622F60;
  v166 = v142;
  v95 = v146;
  *(_OWORD *)a2 = v145;
  *(_OWORD *)(a2 + 16) = v95;
  v96 = v155;
  v97 = v156;
  v98 = v158;
  *(_OWORD *)(a2 + 64) = v157;
  *(_OWORD *)(a2 + 80) = v98;
  *(_OWORD *)(a2 + 32) = v96;
  *(_OWORD *)(a2 + 48) = v97;
  v99 = v159;
  v100 = v160;
  v101 = v162;
  *(_OWORD *)(a2 + 128) = v161;
  *(_OWORD *)(a2 + 144) = v101;
  *(_OWORD *)(a2 + 96) = v99;
  *(_OWORD *)(a2 + 112) = v100;
  v102 = v163;
  v103 = v164;
  v104 = v165;
  *(_BYTE *)(a2 + 208) = v70;
  *(_OWORD *)(a2 + 176) = v103;
  *(_OWORD *)(a2 + 192) = v104;
  *(_OWORD *)(a2 + 160) = v102;
  v170 = v62;
  v167 = 0;
  *(_DWORD *)(a2 + 233) = *(_DWORD *)v169;
  *(_DWORD *)(a2 + 236) = *(_DWORD *)&v169[3];
  *(_DWORD *)(a2 + 249) = *(_DWORD *)v168;
  *(_DWORD *)(a2 + 252) = *(_DWORD *)&v168[3];
  v105 = v80;
  *(_QWORD *)(a2 + 216) = v80;
  *(_QWORD *)(a2 + 224) = v82;
  *(_BYTE *)(a2 + 232) = v62;
  v106 = v124;
  *(_QWORD *)(a2 + 240) = v124;
  *(_BYTE *)(a2 + 248) = (_BYTE)v126;
  *(double *)(a2 + 256) = v93;
  *(_QWORD *)(a2 + 264) = v107;
  *(_QWORD *)(a2 + 272) = v108;
  *(_QWORD *)(a2 + 280) = v109;
  *(_BYTE *)(a2 + 288) = 0;
  sub_1005CC3CC((uint64_t)v154);
  sub_1000E439C(v105, v82, v62);
  swift_bridgeObjectRetain(v106);
  sub_1000E4458(v105, v82, v62);
  swift_bridgeObjectRelease(v106, v110, v111, v112, v113, v114, v115, v116);
  v177 = v138;
  v178 = v139;
  v179 = v140;
  v173 = v134;
  v174 = v135;
  v175 = v136;
  v176 = v137;
  v171 = v132;
  v172 = v133;
  v180 = v94;
  v181 = 4;
  v182 = v67;
  *(_DWORD *)v183 = v131[0];
  *(_DWORD *)&v183[3] = *(_DWORD *)((char *)v131 + 3);
  v184 = v65;
  *(_DWORD *)v185 = v130[0];
  *(_DWORD *)&v185[3] = *(_DWORD *)((char *)v130 + 3);
  v187 = 0;
  v186 = 0;
  v188 = v125;
  v189 = v70;
  return sub_1005CC41C((uint64_t)&v171);
}

uint64_t sub_1005C8440(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  v3 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CatalogTipSectionItem(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100824DE0);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1 + *(int *)(type metadata accessor for CatalogTipCardView(0) + 20);
  v14 = type metadata accessor for CatalogTipCard(0);
  sub_100021CC0(v13 + *(int *)(v14 + 36), (uint64_t)v12, &qword_100824DE0);
  v15 = type metadata accessor for CatalogTipSection(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15) == 1)
  {
    sub_10001BE90((uint64_t)v12, &qword_100824DE0);
    v16 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
  }
  else
  {
    sub_10004F8C8((uint64_t)&v12[*(int *)(v15 + 24)], (uint64_t)v9, type metadata accessor for CatalogTipSectionItem);
    sub_100011F54((uint64_t)v12, type metadata accessor for CatalogTipSection);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    v17 = sub_100011F54((uint64_t)v9, type metadata accessor for CatalogTipSectionItem);
    v16 = (id)a1(v17);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return AttributedString.init(_:)(v16);
}

uint64_t sub_1005C8628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE v91[272];
  _BYTE v92[280];
  _QWORD v93[37];
  _BYTE v94[295];
  unsigned __int8 v95;
  _OWORD v96[19];
  uint64_t v97;
  unsigned __int8 v98;
  uint64_t v99;
  unsigned __int8 v100;
  uint64_t v101;
  uint64_t v102;

  v81 = a2;
  v3 = type metadata accessor for Image.ResizingMode(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(int *)(type metadata accessor for CatalogTipCardView(0) + 28);
  v82 = a1;
  v8 = *(_QWORD *)(a1 + v7 + 8);
  KeyPath = swift_getKeyPath(&unk_100648D48);
  v10 = swift_getKeyPath(&unk_100648D70);
  swift_retain(v8);
  static Published.subscript.getter(v94, v11, KeyPath, v10);
  swift_release(v8);
  swift_release(KeyPath);
  v13 = swift_release(v10);
  v14 = *(_QWORD *)v94;
  if (*(_QWORD *)v94)
  {
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v6, enum case for Image.ResizingMode.stretch(_:), v3, v13);
    v15 = Image.resizable(capInsets:resizingMode:)(v6, v14, 0.0, 0.0, 0.0, 0.0);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v17 = static Alignment.center.getter(v16);
    v19 = _FrameLayout.init(width:height:alignment:)(&v97, 0x4042000000000000, 0, 0x4042000000000000, 0, v17, v18);
    v20 = v97;
    v21 = v98;
    v22 = v99;
    v23 = v100;
    v25 = v101;
    v24 = v102;
    v26 = static Edge.Set.all.getter(v19);
    *(_OWORD *)((char *)v96 + 8) = xmmword_100648C30;
    *(_QWORD *)&v96[0] = v15;
    *((_QWORD *)&v96[1] + 1) = v20;
    *(_QWORD *)&v96[2] = v21;
    *((_QWORD *)&v96[2] + 1) = v22;
    *(_QWORD *)&v96[3] = v23;
    *((_QWORD *)&v96[3] + 1) = v25;
    *(_QWORD *)&v96[4] = v24;
    *((_QWORD *)&v96[4] + 1) = v26;
    v96[5] = 0x4000000000000000uLL;
    *(_QWORD *)&v96[6] = 0;
    *((_QWORD *)&v96[6] + 1) = 0x4020000000000000;
    LOWORD(v96[7]) = 0;
    swift_retain_n(v15, 2);
    v27 = sub_100047110(&qword_10083CC98);
    v28 = sub_100047110(&qword_10083CCA0);
    v29 = sub_1000E0A18(&qword_10083CCA8, &qword_10083CC98, (void (*)(void))sub_1005CC474);
    v30 = sub_1005CC53C();
    _ConditionalContent<>.init(storage:)(v96, v27, v28, v29, v30);
    swift_release_n(v15, 2);
    swift_release(v14);
  }
  else
  {
    v32 = static Alignment.center.getter(v12);
    v34 = _FrameLayout.init(width:height:alignment:)(&v97, 0x4042000000000000, 0, 0x4042000000000000, 0, v32, v33);
    v35 = v97;
    v36 = v98;
    v37 = v99;
    v38 = v100;
    v39 = v101;
    v40 = v102;
    v41 = static Edge.Set.all.getter(v34);
    v96[0] = xmmword_100630D40;
    *(_QWORD *)&v96[1] = v35;
    *((_QWORD *)&v96[1] + 1) = v36;
    *(_QWORD *)&v96[2] = v37;
    *((_QWORD *)&v96[2] + 1) = v38;
    *(_QWORD *)&v96[3] = v39;
    *((_QWORD *)&v96[3] + 1) = v40;
    *(_QWORD *)&v96[4] = v41;
    *((_QWORD *)&v96[4] + 1) = 0x4000000000000000;
    v96[5] = 0uLL;
    v96[6] = xmmword_100622F60;
    LOWORD(v96[7]) = 256;
    v42 = sub_100047110(&qword_10083CC98);
    v43 = sub_100047110(&qword_10083CCA0);
    v44 = sub_1000E0A18(&qword_10083CCA8, &qword_10083CC98, (void (*)(void))sub_1005CC474);
    v45 = sub_1005CC53C();
    v31 = _ConditionalContent<>.init(storage:)(v96, v42, v43, v44, v45);
  }
  v46 = *(_QWORD *)&v94[8];
  v85 = *(_QWORD *)v94;
  v86 = *(_QWORD *)&v94[16];
  v47 = *(_QWORD *)&v94[24];
  v48 = *(_QWORD *)&v94[32];
  v49 = *(_QWORD *)&v94[40];
  v50 = *(_QWORD *)&v94[48];
  v51 = *(_QWORD *)&v94[56];
  v89 = *(_QWORD *)&v94[72];
  v90 = *(_QWORD *)&v94[64];
  v87 = *(_QWORD *)&v94[88];
  v88 = *(_QWORD *)&v94[80];
  v79 = *(_QWORD *)&v94[104];
  v80 = *(_QWORD *)&v94[96];
  v78 = v94[112];
  v52 = v94[113];
  v76 = v94[113];
  v53 = static HorizontalAlignment.leading.getter(v31);
  v77 = v53;
  sub_1005C8B94(v82, (uint64_t)v91);
  v92[272] = 0;
  memcpy(&v92[7], v91, 0x109uLL);
  LODWORD(v82) = 0;
  v93[0] = v53;
  v93[1] = 0;
  LOBYTE(v93[2]) = 0;
  memcpy((char *)&v93[2] + 1, v92, 0x110uLL);
  v95 = v52;
  memcpy(&v94[6], v93, 0x121uLL);
  HIDWORD(v72) = v52;
  v54 = v81;
  memcpy((void *)(v81 + 114), v94, 0x127uLL);
  *(_QWORD *)v54 = v85;
  *(_QWORD *)(v54 + 8) = v46;
  v74 = v48;
  v75 = v46;
  *(_QWORD *)(v54 + 16) = v86;
  *(_QWORD *)(v54 + 24) = v47;
  *(_QWORD *)(v54 + 32) = v48;
  *(_QWORD *)(v54 + 40) = v49;
  v73 = v49;
  v83 = v51;
  v84 = v50;
  *(_QWORD *)(v54 + 48) = v50;
  *(_QWORD *)(v54 + 56) = v51;
  v55 = v90;
  *(_QWORD *)(v54 + 64) = v90;
  v56 = v55;
  v90 = v55;
  v58 = v88;
  v57 = v89;
  *(_QWORD *)(v54 + 72) = v89;
  *(_QWORD *)(v54 + 80) = v58;
  v59 = v57;
  v88 = v58;
  v89 = v57;
  v60 = v87;
  v62 = v79;
  v61 = v80;
  *(_QWORD *)(v54 + 88) = v87;
  *(_QWORD *)(v54 + 96) = v61;
  *(_QWORD *)(v54 + 104) = v62;
  LOBYTE(v46) = v78;
  *(_BYTE *)(v54 + 112) = v78;
  *(_BYTE *)(v54 + 113) = BYTE4(v72);
  v96[0] = (unint64_t)v77;
  LOBYTE(v96[1]) = v82;
  memcpy((char *)&v96[1] + 1, v92, 0x110uLL);
  LOBYTE(v54) = v76;
  v70 = v58;
  v71 = v60;
  v68 = v56;
  v69 = v59;
  v63 = v85;
  v65 = v74;
  v64 = v75;
  v66 = v73;
  sub_1005CC5C8(v85, v75, v86, v47, v74, v73, v84, v83, v68, v69, v70, v71, v61, v62, v46, v76);
  sub_1005CC5D8((uint64_t)v93);
  sub_1005CC664((uint64_t)v96);
  return sub_1005CC38C(v63, v64, v86, v47, v65, v66, v84, v83, v90, v89, v88, v87, v61, v62, v46, v54);
}

uint64_t sub_1005C8B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  uint64_t v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  char v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  __n128 v23;
  uint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  SEL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t KeyPath;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  CHWorkoutDetailHeartRateTableViewCell *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  char v64;
  __n128 v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  char v75;
  SEL v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  __n128 v83;
  CHWorkoutDetailHeartRateTableViewCell *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  SEL v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  CHWorkoutDetailHeartRateTableViewCell *v106;
  SEL v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  uint64_t v115;
  uint64_t v116;
  CHWorkoutDetailHeartRateTableViewCell *v117;
  char *v118;
  double (*v119)(char *, uint64_t, __n128);
  void (*v120)(char *, __n128);
  uint64_t v121;
  CHWorkoutDetailHeartRateTableViewCell *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _DWORD v126[2];
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  CHWorkoutDetailHeartRateTableViewCell *v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  char v145;
  _BYTE v146[7];
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  uint64_t v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  char v171;
  char v172;
  _BYTE v173[7];
  char v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  uint64_t v185;
  char v186;
  _BYTE v187[7];
  double v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v192;

  v123 = a1;
  v124 = type metadata accessor for Font.Leading(0);
  v3 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v5 = (char *)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v6);
  v8 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v122 = v8;
  sub_1005C8440((uint64_t (*)(uint64_t))&ShelfLockupAttributedTagStrings.title.getter);
  v9 = Text.init(_:)(v8);
  v115 = v9;
  v125 = v10;
  v117 = v11;
  v13 = v12 & 1;
  v15 = static Font.body.getter(v14);
  static Font.Weight.semibold.getter(v15);
  v16 = Font.weight(_:)(v15);
  v17 = swift_release(v15);
  LODWORD(v121) = enum case for Font.Leading.tight(_:);
  v120 = *(void (**)(char *, __n128))(v3 + 104);
  v18 = v5;
  v19 = v5;
  v20 = v124;
  v120(v19, v17);
  v118 = v18;
  v21 = Font.leading(_:)(v18, v16);
  v22 = swift_release(v16);
  v119 = *(double (**)(char *, uint64_t, __n128))(v3 + 8);
  v23.n128_f64[0] = v119(v18, v20, v22);
  v24 = v125;
  v25 = v117;
  v116 = Text.font(_:)(v21, v9, v125, v13, v117, v23);
  v27 = v26;
  LOBYTE(v16) = v28;
  v30 = v29;
  swift_release(v21);
  LOBYTE(v16) = v16 & 1;
  sub_1000E4458(v115, v24, v13);
  swift_bridgeObjectRelease(v25, v31, v32, v33, v34, v35, v36, v37);
  KeyPath = swift_getKeyPath(&unk_100648D18);
  v39 = v116;
  v138 = v116;
  v139 = v27;
  v140 = v16;
  v141 = v30;
  v142 = KeyPath;
  v143 = 2;
  v144 = 0;
  v41 = static Alignment.leading.getter(v40);
  sub_1003ED970(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v175, 0.0, 1, 0.0, 1, v41, v42);
  sub_1000E4458(v39, v27, v16);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v30, v43, v44, v45, v46, v47, v48, v49);
  v155 = v183;
  v156 = v184;
  v157 = v185;
  v151 = v179;
  v152 = v180;
  v153 = v181;
  v154 = v182;
  v147 = v175;
  v148 = v176;
  v149 = v177;
  v150 = v178;
  LODWORD(v125) = static Edge.Set.bottom.getter(v50);
  v51 = EdgeInsets.init(_all:)(5.0);
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v145 = 0;
  v58 = v122;
  sub_1005C8440((uint64_t (*)(uint64_t))&ShelfLockupAttributedTagStrings.subtitle.getter);
  v59 = Text.init(_:)(v58);
  v61 = v60;
  v63 = v62;
  LODWORD(v123) = v64 & 1;
  v66 = static Font.caption.getter(v65);
  v67 = v118;
  v68 = v124;
  ((void (*)(char *, _QWORD, uint64_t))v120)(v118, v121, v124);
  v69 = Font.leading(_:)(v67, v66);
  v70 = swift_release(v66);
  v71.n128_f64[0] = v119(v67, v68, v70);
  LOBYTE(v67) = v123;
  v72 = Text.font(_:)(v69, v59, v61, v123, v63, v71);
  v121 = v73;
  v122 = v74;
  LOBYTE(v68) = v75;
  swift_release(v69);
  LOBYTE(v69) = v68 & 1;
  sub_1000E4458(v59, v61, (char)v67);
  swift_bridgeObjectRelease(v63, v76, v77, v78, v79, v80, v81, v82);
  LODWORD(v175) = static HierarchicalShapeStyle.secondary.getter(v83);
  v85 = v121;
  v84 = v122;
  v86 = Text.foregroundStyle<A>(_:)(&v175, v72, v121, v68 & 1, v122, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v88 = v87;
  v124 = v89;
  LOBYTE(v61) = v90 & 1;
  sub_1000E4458(v72, v85, v69);
  swift_bridgeObjectRelease(v84, v91, v92, v93, v94, v95, v96, v97);
  v98 = swift_getKeyPath(&unk_100648D18);
  v135 = v155;
  v136 = v156;
  v131 = v151;
  v132 = v152;
  v133 = v153;
  v134 = v154;
  v127 = v147;
  v128 = v148;
  v129 = v149;
  v130 = v150;
  v166 = v155;
  v167 = v156;
  v162 = v151;
  v163 = v152;
  v164 = v153;
  v165 = v154;
  v158 = v147;
  v159 = v148;
  v137 = v157;
  v126[0] = *(_DWORD *)v146;
  *(_DWORD *)((char *)v126 + 3) = *(_DWORD *)&v146[3];
  *(_QWORD *)&v168 = v157;
  v160 = v149;
  v161 = v150;
  LOBYTE(v85) = v145;
  BYTE8(v168) = v125;
  *(_DWORD *)((char *)&v168 + 9) = *(_DWORD *)v146;
  HIDWORD(v168) = *(_DWORD *)&v146[3];
  *(double *)&v169 = v51;
  *((_QWORD *)&v169 + 1) = v53;
  *(_QWORD *)&v170 = v55;
  *((_QWORD *)&v170 + 1) = v57;
  v171 = v145;
  *(_BYTE *)(a2 + 208) = v145;
  v99 = v165;
  *(_OWORD *)(a2 + 96) = v164;
  *(_OWORD *)(a2 + 112) = v99;
  v100 = v167;
  *(_OWORD *)(a2 + 128) = v166;
  *(_OWORD *)(a2 + 144) = v100;
  v101 = v161;
  *(_OWORD *)(a2 + 32) = v160;
  *(_OWORD *)(a2 + 48) = v101;
  v102 = v163;
  *(_OWORD *)(a2 + 64) = v162;
  *(_OWORD *)(a2 + 80) = v102;
  v103 = v159;
  *(_OWORD *)a2 = v158;
  *(_OWORD *)(a2 + 16) = v103;
  *(_OWORD *)(a2 + 192) = v170;
  v104 = v169;
  *(_OWORD *)(a2 + 160) = v168;
  *(_OWORD *)(a2 + 176) = v104;
  v174 = v61;
  v172 = 0;
  *(_DWORD *)(a2 + 233) = *(_DWORD *)v173;
  *(_DWORD *)(a2 + 236) = *(_DWORD *)&v173[3];
  v105 = v86;
  *(_QWORD *)(a2 + 216) = v86;
  *(_QWORD *)(a2 + 224) = v88;
  *(_BYTE *)(a2 + 232) = v61;
  v106 = (CHWorkoutDetailHeartRateTableViewCell *)v124;
  *(_QWORD *)(a2 + 240) = v124;
  *(_QWORD *)(a2 + 248) = v98;
  *(_QWORD *)(a2 + 256) = 2;
  *(_BYTE *)(a2 + 264) = 0;
  sub_1001E05F0((uint64_t)&v158);
  sub_1000E439C(v105, v88, v61);
  swift_bridgeObjectRetain(v106);
  swift_retain(v98);
  sub_1000E4458(v105, v88, v61);
  swift_release(v98);
  swift_bridgeObjectRelease(v106, v107, v108, v109, v110, v111, v112, v113);
  v183 = v135;
  v184 = v136;
  v185 = v137;
  v179 = v131;
  v180 = v132;
  v181 = v133;
  v182 = v134;
  v175 = v127;
  v176 = v128;
  v177 = v129;
  v178 = v130;
  v186 = v125;
  *(_DWORD *)v187 = v126[0];
  *(_DWORD *)&v187[3] = *(_DWORD *)((char *)v126 + 3);
  v188 = v51;
  v189 = v53;
  v190 = v55;
  v191 = v57;
  v192 = v85;
  return sub_1001E06B4((uint64_t)&v175);
}

void sub_1005C9160(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  char v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  uint64_t v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  double v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t KeyPath;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  uint64_t v65;
  SEL v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE v78[360];
  _BYTE v79[368];
  _QWORD v80[48];
  _BYTE v81[384];
  char v82;
  _BYTE v83[7];
  char v84;
  _BYTE v85[7];
  _BYTE v86[7];
  char v87;
  _BYTE v88[7];
  char v89;
  _QWORD v90[2];
  char v91;
  _BYTE v92[360];

  v77 = a1;
  v3 = type metadata accessor for Font.Leading(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005C8440((uint64_t (*)(uint64_t))&ShelfLockupAttributedTagStrings.title.getter);
  v76 = Text.init(_:)(v9);
  v11 = v10;
  v13 = v12;
  v15 = v14 & 1;
  v17 = static Font.callout.getter(v16);
  static Font.Weight.semibold.getter(v17);
  v18 = Font.weight(_:)(v17);
  v19 = swift_release(v17);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v6, enum case for Font.Leading.tight(_:), v3, v19);
  v20 = Font.leading(_:)(v6, v18);
  v21 = swift_release(v18);
  v22.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v21);
  v23 = v76;
  v24 = Text.font(_:)(v20, v76, v11, v15, v13, v22);
  v26 = v25;
  LOBYTE(v6) = v27;
  v74 = v28;
  swift_release(v20);
  v29 = v6 & 1;
  sub_1000E4458(v23, v11, v15);
  swift_bridgeObjectRelease(v13, v30, v31, v32, v33, v34, v35, v36);
  v38 = static Font.Weight.semibold.getter(v37);
  v39 = v74;
  v75 = Text.fontWeight(_:)(*(_QWORD *)&v38, 0, v24, v26, v29, v74);
  v76 = v40;
  v42 = v41;
  LOBYTE(v13) = v43 & 1;
  sub_1000E4458(v24, v26, v29);
  swift_bridgeObjectRelease(v39, v44, v45, v46, v47, v48, v49, v50);
  KeyPath = swift_getKeyPath(&unk_100648D18);
  LOBYTE(v24) = static Edge.Set.all.getter(KeyPath);
  v52 = EdgeInsets.init(_all:)(0.0);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = static VerticalAlignment.center.getter(v59);
  sub_1005C9504(v77, (uint64_t)v78);
  v79[360] = 0;
  memcpy(&v79[7], v78, 0x161uLL);
  v80[0] = v60;
  v80[1] = 0;
  LOBYTE(v80[2]) = 0;
  memcpy((char *)&v80[2] + 1, v79, 0x168uLL);
  v89 = (char)v13;
  v87 = 0;
  v84 = 0;
  v82 = 0;
  memcpy(&v81[7], v80, 0x179uLL);
  *(_DWORD *)(a2 + 17) = *(_DWORD *)v88;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)&v88[3];
  v61 = v87;
  *(_DWORD *)(a2 + 49) = *(_DWORD *)v86;
  *(_DWORD *)(a2 + 52) = *(_DWORD *)&v86[3];
  *(_DWORD *)(a2 + 57) = *(_DWORD *)v85;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)&v85[3];
  v62 = v84;
  *(_DWORD *)(a2 + 97) = *(_DWORD *)v83;
  *(_DWORD *)(a2 + 100) = *(_DWORD *)&v83[3];
  v63 = v82;
  v65 = v75;
  v64 = (CHWorkoutDetailHeartRateTableViewCell *)v76;
  *(_QWORD *)a2 = v75;
  *(_QWORD *)(a2 + 8) = v42;
  *(_BYTE *)(a2 + 16) = (_BYTE)v13;
  *(_QWORD *)(a2 + 24) = v64;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_QWORD *)(a2 + 40) = 3;
  *(_BYTE *)(a2 + 48) = v61;
  *(_BYTE *)(a2 + 56) = v24;
  *(double *)(a2 + 64) = v52;
  *(_QWORD *)(a2 + 72) = v54;
  *(_QWORD *)(a2 + 80) = v56;
  *(_QWORD *)(a2 + 88) = v58;
  *(_BYTE *)(a2 + 96) = v62;
  *(_QWORD *)(a2 + 104) = 0x4020000000000000;
  *(_BYTE *)(a2 + 112) = v63;
  memcpy((void *)(a2 + 113), v81, 0x180uLL);
  v90[0] = v60;
  v90[1] = 0;
  v91 = 0;
  memcpy(v92, v79, sizeof(v92));
  sub_1000E439C(v65, v42, (char)v13);
  swift_bridgeObjectRetain(v64);
  swift_retain(KeyPath);
  sub_1005CC6F0((uint64_t)v80);
  sub_1005CC774((uint64_t)v90);
  sub_1000E4458(v65, v42, (char)v13);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v64, v66, v67, v68, v69, v70, v71, v72);
}

double sub_1005C9504@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  char v33;
  char v34;
  char v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  __n128 v55;
  int v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double result;
  _QWORD v87[2];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  char v112;
  _OWORD v113[12];
  __int128 v114;
  _OWORD v115[2];
  _OWORD v116[15];
  _OWORD v117[12];
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  unsigned __int8 v125;
  uint64_t v126;
  unsigned __int8 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  CHWorkoutDetailHeartRateTableViewCell *v133;
  char v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;

  v4 = type metadata accessor for Font.Leading(0);
  v88 = *(_QWORD *)(v4 - 8);
  v89 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v7);
  v9 = (char *)v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Image.ResizingMode(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(int *)(type metadata accessor for CatalogTipCardView(0) + 28);
  v87[1] = a1;
  v15 = *(_QWORD *)(a1 + v14 + 8);
  KeyPath = swift_getKeyPath(&unk_100648D48);
  v17 = swift_getKeyPath(&unk_100648D70);
  swift_retain(v15);
  static Published.subscript.getter(v116, v18, KeyPath, v17);
  swift_release(v15);
  swift_release(KeyPath);
  v19 = swift_release(v17);
  v20 = *(_QWORD *)&v116[0];
  if (*(_QWORD *)&v116[0])
  {
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v11 + 104))(v13, enum case for Image.ResizingMode.stretch(_:), v10, v19);
    v21 = Image.resizable(capInsets:resizingMode:)(v13, v20, 0.0, 0.0, 0.0, 0.0);
    v22 = swift_release(v20);
    v23 = (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v22);
    v24 = static Alignment.center.getter(v23);
    v26 = _FrameLayout.init(width:height:alignment:)(&v124, 0x4042000000000000, 0, 0x4042000000000000, 0, v24, v25);
    v98 = v125;
    v99 = v124;
    v96 = v127;
    v97 = v126;
    v94 = v129;
    v95 = v128;
    v27 = static Edge.Set.all.getter(v26);
    v92 = 0x4020000000000000;
    v93 = v27;
    v90 = 0x4000000000000000;
    v91 = 16777473;
  }
  else
  {
    v21 = 0;
    v90 = 0;
    v91 = 0;
    v98 = 0;
    v99 = 0;
    v96 = 0;
    v97 = 0;
    v94 = 0;
    v95 = 0;
    v92 = 0;
    v93 = 0;
  }
  sub_1005C8440((uint64_t (*)(uint64_t))&ShelfLockupAttributedTagStrings.subtitle.getter);
  v28 = Text.init(_:)(v9);
  v30 = v29;
  v32 = v31;
  v34 = v33 & 1;
  v35 = static Edge.Set.all.getter(v28);
  v36.n128_f64[0] = EdgeInsets.init(_all:)(0.0);
  v130 = v28;
  v131 = v30;
  v132 = v34;
  v133 = v32;
  v134 = v35;
  v135 = v36.n128_u64[0];
  v136 = v37;
  v137 = v38;
  v138 = v39;
  v139 = 0;
  v40 = static Alignment.leading.getter(v36);
  sub_1003EDB54(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v116, 0.0, 1, 0.0, 1, v40, v41);
  sub_1000E4458(v28, v30, v34);
  swift_bridgeObjectRelease(v32, v42, v43, v44, v45, v46, v47, v48);
  v108 = v116[8];
  v109 = v116[9];
  v110 = v116[10];
  v111 = v116[11];
  v104 = v116[4];
  v105 = v116[5];
  v106 = v116[6];
  v107 = v116[7];
  v100 = v116[0];
  v101 = v116[1];
  v102 = v116[2];
  v103 = v116[3];
  v49 = static Font.caption.getter((__n128)v116[2]);
  v51 = v88;
  v50 = v89;
  (*(void (**)(char *, _QWORD, uint64_t))(v88 + 104))(v6, enum case for Font.Leading.tight(_:), v89);
  v52 = Font.leading(_:)(v6, v49);
  v53 = swift_release(v49);
  (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v6, v50, v53);
  v54 = swift_getKeyPath(&unk_100648D90);
  v56 = static HierarchicalShapeStyle.secondary.getter(v55);
  v57 = swift_getKeyPath(&unk_100648D18);
  v58 = v108;
  v59 = v109;
  v113[8] = v108;
  v113[9] = v109;
  v60 = v110;
  v61 = v111;
  v113[10] = v110;
  v113[11] = v111;
  v62 = v104;
  v63 = v105;
  v113[4] = v104;
  v113[5] = v105;
  v64 = v106;
  v65 = v107;
  v113[6] = v106;
  v113[7] = v107;
  v66 = v100;
  v67 = v101;
  v113[0] = v100;
  v113[1] = v101;
  v68 = v102;
  v69 = v103;
  v113[2] = v102;
  v113[3] = v103;
  *(_QWORD *)&v114 = v54;
  *((_QWORD *)&v114 + 1) = v52;
  LODWORD(v115[0]) = v56;
  *((_QWORD *)&v115[0] + 1) = v57;
  *(_QWORD *)&v115[1] = 2;
  BYTE8(v115[1]) = 0;
  *(_OWORD *)((char *)&v116[11] + 7) = v111;
  *(_OWORD *)((char *)&v116[7] + 7) = v107;
  *(_OWORD *)((char *)&v116[8] + 7) = v108;
  *(_OWORD *)((char *)&v116[9] + 7) = v109;
  *(_OWORD *)((char *)&v116[10] + 7) = v110;
  *(_OWORD *)((char *)&v116[3] + 7) = v103;
  *(_OWORD *)((char *)&v116[4] + 7) = v104;
  *(_OWORD *)((char *)&v116[5] + 7) = v105;
  *(_OWORD *)((char *)&v116[6] + 7) = v106;
  *(_OWORD *)((char *)v116 + 7) = v100;
  *(_OWORD *)((char *)&v116[1] + 7) = v101;
  *(_OWORD *)((char *)&v116[2] + 7) = v102;
  *(_OWORD *)((char *)&v116[12] + 7) = v114;
  *(_OWORD *)((char *)&v116[13] + 7) = v115[0];
  v116[14] = *(_OWORD *)((char *)v115 + 9);
  v70 = v116[0];
  v71 = v116[1];
  v72 = v116[3];
  *(_OWORD *)(a2 + 145) = v116[2];
  *(_OWORD *)(a2 + 129) = v71;
  *(_OWORD *)(a2 + 113) = v70;
  v73 = v116[4];
  v74 = v116[5];
  v75 = v116[7];
  *(_OWORD *)(a2 + 209) = v116[6];
  *(_OWORD *)(a2 + 193) = v74;
  *(_OWORD *)(a2 + 177) = v73;
  *(_OWORD *)(a2 + 161) = v72;
  v76 = v116[8];
  v77 = v116[10];
  v78 = v116[11];
  *(_OWORD *)(a2 + 257) = v116[9];
  *(_OWORD *)(a2 + 273) = v77;
  *(_OWORD *)(a2 + 241) = v76;
  *(_OWORD *)(a2 + 225) = v75;
  v79 = v116[12];
  v80 = v116[14];
  *(_OWORD *)(a2 + 321) = v116[13];
  *(_OWORD *)(a2 + 337) = v80;
  *(_OWORD *)(a2 + 289) = v78;
  *(_OWORD *)(a2 + 305) = v79;
  v117[8] = v58;
  v117[9] = v59;
  v117[10] = v60;
  v117[11] = v61;
  v117[4] = v62;
  v117[5] = v63;
  v117[6] = v64;
  v117[7] = v65;
  v112 = 0;
  *(_QWORD *)a2 = v21;
  *(_QWORD *)(a2 + 8) = 0;
  v81 = v99;
  *(_QWORD *)(a2 + 16) = v91;
  *(_QWORD *)(a2 + 24) = v81;
  v82 = v97;
  *(_QWORD *)(a2 + 32) = v98;
  *(_QWORD *)(a2 + 40) = v82;
  v83 = v95;
  *(_QWORD *)(a2 + 48) = v96;
  *(_QWORD *)(a2 + 56) = v83;
  v84 = v93;
  *(_QWORD *)(a2 + 64) = v94;
  *(_QWORD *)(a2 + 72) = v84;
  *(_QWORD *)(a2 + 80) = v90;
  *(_QWORD *)(a2 + 88) = 0;
  v85 = v92;
  *(_QWORD *)(a2 + 96) = 0;
  *(_QWORD *)(a2 + 104) = v85;
  *(_BYTE *)(a2 + 112) = 0;
  v117[0] = v66;
  v117[1] = v67;
  v117[2] = v68;
  v117[3] = v69;
  v118 = v54;
  v119 = v52;
  v120 = v56;
  v121 = v57;
  v122 = 2;
  v123 = 0;
  swift_retain(v21);
  sub_1005CC800((uint64_t)v113);
  sub_1005CC86C((uint64_t)v117);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_1005C9A58(uint64_t a1)
{
  uint64_t v2;
  CHWorkoutDetailHeartRateTableViewCell **v3;
  uint64_t v4;
  _OWORD v6[2];
  _QWORD v7[3];
  uint64_t v8;

  v2 = type metadata accessor for CatalogTipCardView(0);
  sub_100021CC0(a1 + *(int *)(v2 + 24), (uint64_t)v7, &qword_10081F600);
  if (!v8)
    return sub_10001BE90((uint64_t)v7, &qword_10081F600);
  v3 = (CHWorkoutDetailHeartRateTableViewCell **)sub_100016804(v7, v8);
  v4 = a1 + *(int *)(v2 + 20);
  memset(v6, 0, sizeof(v6));
  sub_10040DA24(v4, (uint64_t)v6, *v3);
  sub_10001BE90((uint64_t)v6, (uint64_t *)&unk_100828420);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v7);
}

unint64_t sub_1005C9B00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083CB88;
  if (!qword_10083CB88)
  {
    v1 = type metadata accessor for TipArtworkImageLoader(255);
    result = swift_getWitnessTable(&unk_100648EE8, v1);
    atomic_store(result, (unint64_t *)&qword_10083CB88);
  }
  return result;
}

_QWORD *sub_1005C9B48(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void **v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  id v39;
  id v40;
  int *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t, __n128);
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t, __n128);
  __n128 v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  void (*v79)(void **, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  void (*v94)(char *, char *, uint64_t);
  uint64_t v95;
  char *__dst;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  void **v102;
  void **v103;
  int *v104;
  _QWORD *v105;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a3;
    v7 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(v3, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, v3, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *v3;
      *a1 = *v3;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = v6[5];
    v15 = (char *)a1 + v14;
    v16 = (char *)v3 + v14;
    v17 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = (int *)type metadata accessor for CatalogTipCard(0);
    v19 = v18[5];
    v20 = &v15[v19];
    v21 = &v16[v19];
    v22 = *(_QWORD *)v21;
    v23 = *((_QWORD *)v21 + 1);
    v24 = v21[16];
    sub_1000EB3F4(*(_QWORD *)v21, v23, v24);
    *(_QWORD *)v20 = v22;
    *((_QWORD *)v20 + 1) = v23;
    v20[16] = v24;
    v15[v18[6]] = v16[v18[6]];
    v15[v18[7]] = v16[v18[7]];
    v15[v18[8]] = v16[v18[8]];
    v25 = v18[9];
    v26 = (void **)&v15[v25];
    v27 = (void **)&v16[v25];
    v28 = type metadata accessor for CatalogTipSection(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_100047110(&qword_100824DE0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v100 = v29;
      v104 = v6;
      v105 = v3;
      v31 = v28;
      v32 = *v27;
      v33 = v27[1];
      *v26 = *v27;
      v26[1] = v33;
      v101 = v31;
      v102 = v27;
      v34 = *(int *)(v31 + 24);
      v103 = v26;
      v35 = (char *)v26 + v34;
      v36 = (char *)v27 + v34;
      v37 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
      v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
      v39 = v32;
      v40 = v33;
      v38(v35, v36, v37);
      v41 = (int *)type metadata accessor for CatalogTipSectionItem(0);
      v42 = v41[5];
      v97 = &v35[v42];
      v43 = &v36[v42];
      v44 = type metadata accessor for Artwork(0);
      v45 = *(_QWORD *)(v44 - 8);
      v94 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
      v94(v97, v43, v44);
      v46 = v41[6];
      v47 = &v35[v46];
      v48 = &v36[v46];
      v49 = *((_QWORD *)v48 + 1);
      *(_QWORD *)v47 = *(_QWORD *)v48;
      *((_QWORD *)v47 + 1) = v49;
      v50 = v41[7];
      v51 = &v35[v50];
      v52 = &v36[v50];
      v53 = *((_QWORD *)v52 + 1);
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *((_QWORD *)v51 + 1) = v53;
      v54 = v41[8];
      __dst = &v35[v54];
      v98 = &v36[v54];
      v95 = v45;
      v55 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v45 + 48);
      swift_bridgeObjectRetain(v49);
      v56 = swift_bridgeObjectRetain(v53);
      if (v55(v98, 1, v44, v56))
      {
        v57 = sub_100047110((uint64_t *)&unk_1008283A0);
        memcpy(__dst, v98, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        v94(__dst, v98, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(__dst, 0, 1, v44);
      }
      v58 = v41[9];
      v59 = &v35[v58];
      v60 = &v36[v58];
      v61 = *((_QWORD *)v60 + 1);
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *((_QWORD *)v59 + 1) = v61;
      v62 = v41[10];
      v63 = &v35[v62];
      v64 = &v36[v62];
      v65 = *((_QWORD *)v64 + 1);
      *(_QWORD *)v63 = *(_QWORD *)v64;
      *((_QWORD *)v63 + 1) = v65;
      v66 = v41[11];
      v67 = &v35[v66];
      v68 = &v36[v66];
      v69 = *((_QWORD *)v68 + 1);
      *(_QWORD *)v67 = *(_QWORD *)v68;
      *((_QWORD *)v67 + 1) = v69;
      v70 = v41[12];
      v99 = &v35[v70];
      v71 = &v36[v70];
      v72 = type metadata accessor for URL(0);
      v73 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v72 - 8) + 16);
      swift_bridgeObjectRetain(v61);
      swift_bridgeObjectRetain(v65);
      v74 = swift_bridgeObjectRetain(v69);
      v73(v99, v71, v72, v74);
      v75 = *(int *)(v101 + 28);
      v76 = (void **)((char *)v103 + v75);
      v77 = (void **)((char *)v102 + v75);
      v78 = v77[1];
      *v76 = *v77;
      v76[1] = v78;
      v79 = *(void (**)(void **, _QWORD, uint64_t, uint64_t, __n128))(v100 + 56);
      v80 = swift_bridgeObjectRetain(v78);
      v79(v103, 0, 1, v101, v80);
      v6 = v104;
      v3 = v105;
    }
    v81 = v18[10];
    v82 = *(_QWORD *)&v16[v81];
    *(_QWORD *)&v15[v81] = v82;
    v83 = v6[6];
    v84 = (char *)a1 + v83;
    v85 = (char *)v3 + v83;
    v86 = *(_QWORD *)((char *)v3 + v83 + 24);
    v87 = swift_retain(v82);
    if (v86)
    {
      v88 = *((_QWORD *)v85 + 4);
      *((_QWORD *)v84 + 3) = v86;
      *((_QWORD *)v84 + 4) = v88;
      (**(void (***)(char *, char *, uint64_t, __n128))(v86 - 8))(v84, v85, v86, v87);
    }
    else
    {
      v89 = *((_OWORD *)v85 + 1);
      *(_OWORD *)v84 = *(_OWORD *)v85;
      *((_OWORD *)v84 + 1) = v89;
      *((_QWORD *)v84 + 4) = *((_QWORD *)v85 + 4);
    }
    v90 = v6[7];
    v91 = (_QWORD *)((char *)a1 + v90);
    v92 = (_QWORD *)((char *)v3 + v90);
    v12 = v92[1];
    *v91 = *v92;
    v91[1] = v12;
  }
  swift_retain(v12);
  return a1;
}

double sub_1005C9FA0(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int *v8;
  id *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  char *v31;
  const char *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  SEL v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  _QWORD *v62;
  double result;
  void (*v64)(char *, uint64_t);
  int *v65;

  v4 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (char *)a1 + a2[5];
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = (int *)type metadata accessor for CatalogTipCard(0);
  sub_1000EB41C(*(_QWORD *)&v6[v8[5]], *(_QWORD *)&v6[v8[5] + 8], v6[v8[5] + 16]);
  v9 = (id *)&v6[v8[9]];
  v10 = type metadata accessor for CatalogTipSection(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v65 = a2;

    v11 = (char *)v9 + *(int *)(v10 + 24);
    v12 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    v13 = (int *)type metadata accessor for CatalogTipSectionItem(0);
    v14 = &v11[v13[5]];
    v15 = type metadata accessor for Artwork(0);
    v16 = *(_QWORD *)(v15 - 8);
    v64 = *(void (**)(char *, uint64_t))(v16 + 8);
    v64(v14, v15);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v11[v13[6] + 8], v17, v18, v19, v20, v21, v22, v23);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v11[v13[7] + 8], v24, v25, v26, v27, v28, v29, v30);
    v31 = &v11[v13[8]];
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v31, 1, v15))
      v64(v31, v15);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v11[v13[9] + 8], v32, v33, v34, v35, v36, v37, v38);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v11[v13[10] + 8], v39, v40, v41, v42, v43, v44, v45);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v11[v13[11] + 8], v46, v47, v48, v49, v50, v51, v52);
    v53 = &v11[v13[12]];
    v54 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)((char *)v9 + *(int *)(v10 + 28) + 8), v55, v56, v57, v58, v59, v60, v61);
    a2 = v65;
  }
  swift_release(*(_QWORD *)&v6[v8[10]]);
  v62 = (_QWORD *)((char *)a1 + a2[6]);
  if (v62[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v62);
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[7] + 8)).n128_u64[0];
  return result;
}

_QWORD *sub_1005CA1F8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  id v37;
  id v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t, __n128);
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t, __n128);
  __n128 v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  void (*v80)(void **, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  char *__dst;
  uint64_t v99;
  uint64_t v100;
  void **v101;
  void **v102;
  int *v103;
  _QWORD *v104;
  _QWORD *v105;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = (int *)type metadata accessor for CatalogTipCard(0);
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = *(_QWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  v22 = v19[16];
  sub_1000EB3F4(*(_QWORD *)v19, v21, v22);
  *(_QWORD *)v18 = v20;
  *((_QWORD *)v18 + 1) = v21;
  v18[16] = v22;
  v13[v16[6]] = v14[v16[6]];
  v13[v16[7]] = v14[v16[7]];
  v13[v16[8]] = v14[v16[8]];
  v23 = v16[9];
  v24 = (void **)&v13[v23];
  v25 = (void **)&v14[v23];
  v26 = type metadata accessor for CatalogTipSection(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = sub_100047110(&qword_100824DE0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v99 = v27;
    v103 = a3;
    v104 = a2;
    v105 = a1;
    v29 = v26;
    v30 = *v25;
    v31 = v25[1];
    *v24 = *v25;
    v24[1] = v31;
    v100 = v29;
    v101 = v25;
    v32 = *(int *)(v29 + 24);
    v102 = v24;
    v33 = (char *)v24 + v32;
    v34 = (char *)v25 + v32;
    v35 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
    v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
    v37 = v30;
    v38 = v31;
    v36(v33, v34, v35);
    v39 = (int *)type metadata accessor for CatalogTipSectionItem(0);
    v40 = v39[5];
    v41 = &v33[v40];
    v42 = &v34[v40];
    v43 = type metadata accessor for Artwork(0);
    v44 = *(_QWORD *)(v43 - 8);
    v96 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
    v96(v41, v42, v43);
    v45 = v39[6];
    v46 = &v33[v45];
    v47 = &v34[v45];
    v48 = *((_QWORD *)v47 + 1);
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *((_QWORD *)v46 + 1) = v48;
    v49 = v39[7];
    v50 = &v33[v49];
    v51 = &v34[v49];
    v52 = *((_QWORD *)v51 + 1);
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *((_QWORD *)v50 + 1) = v52;
    v53 = v39[8];
    v97 = v44;
    __dst = &v33[v53];
    v54 = &v34[v53];
    v55 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v44 + 48);
    swift_bridgeObjectRetain(v48);
    v56 = swift_bridgeObjectRetain(v52);
    if (v55(v54, 1, v43, v56))
    {
      v57 = sub_100047110((uint64_t *)&unk_1008283A0);
      memcpy(__dst, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      v96(__dst, v54, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(__dst, 0, 1, v43);
    }
    v58 = v39[9];
    v59 = &v33[v58];
    v60 = &v34[v58];
    v61 = *((_QWORD *)v60 + 1);
    *(_QWORD *)v59 = *(_QWORD *)v60;
    *((_QWORD *)v59 + 1) = v61;
    v62 = v39[10];
    v63 = &v33[v62];
    v64 = &v34[v62];
    v65 = *((_QWORD *)v64 + 1);
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *((_QWORD *)v63 + 1) = v65;
    v66 = v39[11];
    v67 = &v33[v66];
    v68 = &v34[v66];
    v69 = *((_QWORD *)v68 + 1);
    *(_QWORD *)v67 = *(_QWORD *)v68;
    *((_QWORD *)v67 + 1) = v69;
    v70 = v39[12];
    v71 = &v33[v70];
    v72 = &v34[v70];
    v73 = type metadata accessor for URL(0);
    v74 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v73 - 8) + 16);
    swift_bridgeObjectRetain(v61);
    swift_bridgeObjectRetain(v65);
    v75 = swift_bridgeObjectRetain(v69);
    v74(v71, v72, v73, v75);
    v76 = *(int *)(v100 + 28);
    v77 = (void **)((char *)v102 + v76);
    v78 = (void **)((char *)v101 + v76);
    v79 = v78[1];
    *v77 = *v78;
    v77[1] = v79;
    v80 = *(void (**)(void **, _QWORD, uint64_t, uint64_t, __n128))(v99 + 56);
    v81 = swift_bridgeObjectRetain(v79);
    v80(v102, 0, 1, v100, v81);
    a2 = v104;
    a1 = v105;
    a3 = v103;
  }
  v82 = v16[10];
  v83 = *(_QWORD *)&v14[v82];
  *(_QWORD *)&v13[v82] = v83;
  v84 = a3[6];
  v85 = (char *)a1 + v84;
  v86 = (char *)a2 + v84;
  v87 = *(_QWORD *)((char *)a2 + v84 + 24);
  v88 = swift_retain(v83);
  if (v87)
  {
    v89 = *((_QWORD *)v86 + 4);
    *((_QWORD *)v85 + 3) = v87;
    *((_QWORD *)v85 + 4) = v89;
    (**(void (***)(char *, char *, uint64_t, __n128))(v87 - 8))(v85, v86, v87, v88);
  }
  else
  {
    v90 = *((_OWORD *)v86 + 1);
    *(_OWORD *)v85 = *(_OWORD *)v86;
    *((_OWORD *)v85 + 1) = v90;
    *((_QWORD *)v85 + 4) = *((_QWORD *)v86 + 4);
  }
  v91 = a3[7];
  v92 = (_QWORD *)((char *)a1 + v91);
  v93 = (_QWORD *)((char *)a2 + v91);
  v94 = v93[1];
  *v92 = *v93;
  v92[1] = v94;
  swift_retain(v94);
  return a1;
}

_QWORD *sub_1005CA61C(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void **v27;
  void **v28;
  uint64_t v29;
  uint64_t (*v30)(void **, uint64_t, uint64_t);
  int v31;
  void **v32;
  void *v33;
  void **v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  id v41;
  id v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unsigned int (*v59)(char *, uint64_t, uint64_t, __n128);
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  void *v66;
  void *v67;
  id v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  CHWorkoutDetailHeartRateTableViewCell *v83;
  SEL v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  CHWorkoutDetailHeartRateTableViewCell *v95;
  SEL v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  uint64_t v103;
  char *v104;
  uint64_t (*v105)(void);
  int v106;
  size_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  void (*v125)(char *, char *, uint64_t, __n128);
  __n128 v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  void (*v131)(void **, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  CHWorkoutDetailHeartRateTableViewCell *v137;
  SEL v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  CHWorkoutDetailHeartRateTableViewCell *v149;
  SEL v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  CHWorkoutDetailHeartRateTableViewCell *v161;
  SEL v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  CHWorkoutDetailHeartRateTableViewCell *v177;
  SEL v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  id v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __n128 v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  __int128 v193;
  __int128 v194;
  uint64_t v195;
  _QWORD *v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  void (*v201)(char *, char *, uint64_t);
  void (*v202)(char *, char *, uint64_t);
  char *__dst;
  _QWORD *v204;
  char *v205;
  void **v206;
  void **v207;
  void **v208;
  void **v209;
  int *v210;
  int *v211;
  _QWORD *v212;
  _QWORD *v213;
  uint64_t v214;
  int *v215;
  uint64_t v216;
  int *v217;

  v4 = a2;
  v5 = (_QWORD *)a1;
  if ((_QWORD *)a1 != a2)
  {
    sub_10001BE90(a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(v4, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v4, v7);
      v8 = v5;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *v4;
      *v5 = *v4;
      swift_retain(v11);
      v8 = v5;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (char *)v5 + v12;
  v14 = (char *)v4 + v12;
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = (int *)type metadata accessor for CatalogTipCard(0);
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = *(_QWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  v22 = v19[16];
  sub_1000EB3F4(*(_QWORD *)v19, v21, v22);
  v23 = *(_QWORD *)v18;
  v24 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v18 = v20;
  *((_QWORD *)v18 + 1) = v21;
  v25 = v18[16];
  v18[16] = v22;
  sub_1000EB41C(v23, v24, v25);
  v13[v16[6]] = v14[v16[6]];
  v13[v16[7]] = v14[v16[7]];
  v13[v16[8]] = v14[v16[8]];
  v217 = v16;
  v26 = v16[9];
  v27 = (void **)&v13[v26];
  v28 = (void **)&v14[v26];
  v29 = type metadata accessor for CatalogTipSection(0);
  v214 = *(_QWORD *)(v29 - 8);
  v30 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v214 + 48);
  LODWORD(v20) = v30(v27, 1, v29);
  v216 = v29;
  v31 = v30(v28, 1, v29);
  if (!(_DWORD)v20)
  {
    if (v31)
    {
      sub_100011F54((uint64_t)v27, type metadata accessor for CatalogTipSection);
      goto LABEL_12;
    }
    v211 = a3;
    v213 = v4;
    v63 = *v28;
    v64 = *v27;
    *v27 = *v28;
    v65 = v63;

    v66 = v28[1];
    v67 = v27[1];
    v27[1] = v66;
    v68 = v66;

    v69 = *(int *)(v29 + 24);
    v207 = v28;
    v209 = v27;
    v70 = (char *)v27 + v69;
    v71 = (char *)v28 + v69;
    v72 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 24))(v70, v71, v72);
    v73 = (int *)type metadata accessor for CatalogTipSectionItem(0);
    v74 = v73[5];
    v75 = &v70[v74];
    v76 = &v71[v74];
    v77 = type metadata accessor for Artwork(0);
    v78 = *(_QWORD *)(v77 - 8);
    v201 = *(void (**)(char *, char *, uint64_t))(v78 + 24);
    v201(v75, v76, v77);
    v79 = v73[6];
    v80 = &v70[v79];
    v81 = &v71[v79];
    *(_QWORD *)v80 = *(_QWORD *)v81;
    v82 = *((_QWORD *)v81 + 1);
    v83 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v80 + 1);
    *((_QWORD *)v80 + 1) = v82;
    swift_bridgeObjectRetain(v82);
    swift_bridgeObjectRelease(v83, v84, v85, v86, v87, v88, v89, v90);
    v91 = v73[7];
    v92 = &v70[v91];
    v93 = &v71[v91];
    *(_QWORD *)v92 = *(_QWORD *)v93;
    v94 = *((_QWORD *)v93 + 1);
    v95 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v92 + 1);
    *((_QWORD *)v92 + 1) = v94;
    swift_bridgeObjectRetain(v94);
    swift_bridgeObjectRelease(v95, v96, v97, v98, v99, v100, v101, v102);
    v215 = v73;
    v103 = v73[8];
    v104 = &v71[v103];
    v105 = *(uint64_t (**)(void))(v78 + 48);
    v205 = &v70[v103];
    LODWORD(v76) = v105();
    v106 = ((uint64_t (*)(char *, uint64_t, uint64_t))v105)(v104, 1, v77);
    if ((_DWORD)v76)
    {
      if (!v106)
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v205, v104, v77);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v205, 0, 1, v77);
        goto LABEL_23;
      }
      v107 = *(_QWORD *)(*(_QWORD *)(sub_100047110((uint64_t *)&unk_1008283A0) - 8) + 64);
      v108 = v205;
    }
    else
    {
      if (!v106)
      {
        v201(v205, v104, v77);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v78 + 8))(v205, v77);
      v107 = *(_QWORD *)(*(_QWORD *)(sub_100047110((uint64_t *)&unk_1008283A0) - 8) + 64);
      v108 = v205;
    }
    memcpy(v108, v104, v107);
LABEL_23:
    v4 = v213;
    v133 = v215[9];
    v134 = &v70[v133];
    v135 = &v71[v133];
    *(_QWORD *)v134 = *(_QWORD *)v135;
    v136 = *((_QWORD *)v135 + 1);
    v137 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v134 + 1);
    *((_QWORD *)v134 + 1) = v136;
    swift_bridgeObjectRetain(v136);
    swift_bridgeObjectRelease(v137, v138, v139, v140, v141, v142, v143, v144);
    v145 = v215[10];
    v146 = &v70[v145];
    v147 = &v71[v145];
    *(_QWORD *)v146 = *(_QWORD *)v147;
    v148 = *((_QWORD *)v147 + 1);
    v149 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v146 + 1);
    *((_QWORD *)v146 + 1) = v148;
    swift_bridgeObjectRetain(v148);
    swift_bridgeObjectRelease(v149, v150, v151, v152, v153, v154, v155, v156);
    v157 = v215[11];
    v158 = &v70[v157];
    v159 = &v71[v157];
    *(_QWORD *)v158 = *(_QWORD *)v159;
    v160 = *((_QWORD *)v159 + 1);
    v161 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v158 + 1);
    *((_QWORD *)v158 + 1) = v160;
    swift_bridgeObjectRetain(v160);
    swift_bridgeObjectRelease(v161, v162, v163, v164, v165, v166, v167, v168);
    v169 = v215[12];
    v170 = &v70[v169];
    v171 = &v71[v169];
    v172 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 24))(v170, v171, v172);
    v173 = *(int *)(v216 + 28);
    v174 = (void **)((char *)v209 + v173);
    v175 = (void **)((char *)v207 + v173);
    *v174 = *v175;
    v176 = v175[1];
    v177 = (CHWorkoutDetailHeartRateTableViewCell *)v174[1];
    v174[1] = v176;
    swift_bridgeObjectRetain(v176);
    swift_bridgeObjectRelease(v177, v178, v179, v180, v181, v182, v183, v184);
    a3 = v211;
    goto LABEL_24;
  }
  if (v31)
  {
LABEL_12:
    v62 = sub_100047110(&qword_100824DE0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_24;
  }
  v210 = a3;
  v212 = v4;
  v32 = v28;
  v33 = *v28;
  *v27 = v33;
  v34 = v27;
  v35 = v32[1];
  v34[1] = v35;
  v36 = *(int *)(v29 + 24);
  v208 = v34;
  v37 = (char *)v34 + v36;
  v204 = v5;
  v206 = v32;
  v38 = (char *)v32 + v36;
  v39 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
  v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
  v41 = v33;
  v42 = v35;
  v40(v37, v38, v39);
  v43 = (int *)type metadata accessor for CatalogTipSectionItem(0);
  v44 = v43[5];
  v45 = &v37[v44];
  v46 = &v38[v44];
  v47 = type metadata accessor for Artwork(0);
  v48 = *(_QWORD *)(v47 - 8);
  v202 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v202(v45, v46, v47);
  v49 = v43[6];
  v50 = &v37[v49];
  v51 = &v38[v49];
  *(_QWORD *)v50 = *(_QWORD *)v51;
  v52 = *((_QWORD *)v51 + 1);
  *((_QWORD *)v50 + 1) = v52;
  v53 = v43[7];
  v54 = &v37[v53];
  v55 = &v38[v53];
  *(_QWORD *)v54 = *(_QWORD *)v55;
  v56 = *((_QWORD *)v55 + 1);
  *((_QWORD *)v54 + 1) = v56;
  v57 = v43[8];
  __dst = &v37[v57];
  v58 = &v38[v57];
  v59 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v48 + 48);
  swift_bridgeObjectRetain(v52);
  v60 = swift_bridgeObjectRetain(v56);
  if (v59(v58, 1, v47, v60))
  {
    v61 = sub_100047110((uint64_t *)&unk_1008283A0);
    memcpy(__dst, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    v202(__dst, v58, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v47);
  }
  v109 = v43[9];
  v110 = &v37[v109];
  v111 = &v38[v109];
  *(_QWORD *)v110 = *(_QWORD *)v111;
  v112 = *((_QWORD *)v111 + 1);
  *((_QWORD *)v110 + 1) = v112;
  v113 = v43[10];
  v114 = &v37[v113];
  v115 = &v38[v113];
  *(_QWORD *)v114 = *(_QWORD *)v115;
  v116 = *((_QWORD *)v115 + 1);
  *((_QWORD *)v114 + 1) = v116;
  v117 = v43[11];
  v118 = &v37[v117];
  v119 = &v38[v117];
  *(_QWORD *)v118 = *(_QWORD *)v119;
  v120 = *((_QWORD *)v119 + 1);
  *((_QWORD *)v118 + 1) = v120;
  v121 = v43[12];
  v122 = &v37[v121];
  v123 = &v38[v121];
  v124 = type metadata accessor for URL(0);
  v125 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v124 - 8) + 16);
  swift_bridgeObjectRetain(v112);
  swift_bridgeObjectRetain(v116);
  v126 = swift_bridgeObjectRetain(v120);
  v125(v122, v123, v124, v126);
  v127 = *(int *)(v216 + 28);
  v128 = (void **)((char *)v208 + v127);
  v129 = (void **)((char *)v206 + v127);
  *v128 = *v129;
  v130 = v129[1];
  v128[1] = v130;
  v131 = *(void (**)(void **, _QWORD, uint64_t, uint64_t, __n128))(v214 + 56);
  v132 = swift_bridgeObjectRetain(v130);
  v131(v208, 0, 1, v216, v132);
  v5 = v204;
  a3 = v210;
  v4 = v212;
LABEL_24:
  v185 = v217[10];
  v186 = *(_QWORD *)&v14[v185];
  v187 = *(_QWORD *)&v13[v185];
  *(_QWORD *)&v13[v185] = v186;
  swift_retain(v186);
  v188 = swift_release(v187);
  v189 = a3[6];
  v190 = (char *)v5 + v189;
  v191 = (char *)v4 + v189;
  v192 = *(_QWORD *)((char *)v4 + v189 + 24);
  if (!*(_QWORD *)((char *)v5 + v189 + 24))
  {
    if (v192)
    {
      *((_QWORD *)v190 + 3) = v192;
      *((_QWORD *)v190 + 4) = *((_QWORD *)v191 + 4);
      (**(void (***)(char *, char *, __n128))(v192 - 8))(v190, v191, v188);
      goto LABEL_31;
    }
LABEL_30:
    v193 = *(_OWORD *)v191;
    v194 = *((_OWORD *)v191 + 1);
    *((_QWORD *)v190 + 4) = *((_QWORD *)v191 + 4);
    *(_OWORD *)v190 = v193;
    *((_OWORD *)v190 + 1) = v194;
    goto LABEL_31;
  }
  if (!v192)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v190);
    goto LABEL_30;
  }
  sub_1000F1A58(v190, v191);
LABEL_31:
  v195 = a3[7];
  v196 = (_QWORD *)((char *)v5 + v195);
  v197 = (_QWORD *)((char *)v4 + v195);
  *v196 = *v197;
  v198 = v197[1];
  v199 = v196[1];
  v196[1] = v198;
  swift_retain(v198);
  swift_release(v199);
  return v5;
}

char *sub_1005CADE8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  int *v50;
  char *v51;
  char *v52;
  char *__dst;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = (int *)type metadata accessor for CatalogTipCard(0);
  v13 = v12[5];
  v14 = &v9[v13];
  v15 = &v10[v13];
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  v16 = v12[9];
  v17 = &v9[v16];
  v18 = &v10[v16];
  v19 = type metadata accessor for CatalogTipSection(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_100047110(&qword_100824DE0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v47 = v20;
    v48 = v18;
    v50 = a3;
    v51 = a2;
    v52 = a1;
    *(_OWORD *)v17 = *(_OWORD *)v18;
    v22 = *(int *)(v19 + 24);
    v49 = v17;
    v23 = &v17[v22];
    v24 = &v18[v22];
    v25 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    v26 = (int *)type metadata accessor for CatalogTipSectionItem(0);
    v27 = v26[5];
    v28 = &v23[v27];
    v29 = &v24[v27];
    v30 = type metadata accessor for Artwork(0);
    v31 = v29;
    v32 = *(_QWORD *)(v30 - 8);
    v46 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    v46(v28, v31, v30);
    *(_OWORD *)&v23[v26[6]] = *(_OWORD *)&v24[v26[6]];
    *(_OWORD *)&v23[v26[7]] = *(_OWORD *)&v24[v26[7]];
    v33 = v26[8];
    __dst = &v23[v33];
    v34 = &v24[v33];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v24[v33], 1, v30))
    {
      v35 = sub_100047110((uint64_t *)&unk_1008283A0);
      memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v46(__dst, v34, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v30);
    }
    *(_OWORD *)&v23[v26[9]] = *(_OWORD *)&v24[v26[9]];
    *(_OWORD *)&v23[v26[10]] = *(_OWORD *)&v24[v26[10]];
    *(_OWORD *)&v23[v26[11]] = *(_OWORD *)&v24[v26[11]];
    v36 = v26[12];
    v37 = &v23[v36];
    v38 = &v24[v36];
    v39 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
    *(_OWORD *)((char *)v49 + *(int *)(v19 + 28)) = *(_OWORD *)((char *)v48 + *(int *)(v19 + 28));
    (*(void (**)(void))(v47 + 56))();
    a2 = v51;
    a1 = v52;
    a3 = v50;
  }
  *(_QWORD *)&v9[v12[10]] = *(_QWORD *)&v10[v12[10]];
  v40 = a3[6];
  v41 = a3[7];
  v42 = &a1[v40];
  v43 = &a2[v40];
  v44 = *((_OWORD *)v43 + 1);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *((_OWORD *)v42 + 1) = v44;
  *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
  *(_OWORD *)&a1[v41] = *(_OWORD *)&a2[v41];
  return a1;
}

char *sub_1005CB13C(uint64_t a1, char *a2, uint64_t a3)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  CHWorkoutDetailHeartRateTableViewCell *v60;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  SEL v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t (*v84)(char *, uint64_t, uint64_t);
  int v85;
  const char *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  CHWorkoutDetailHeartRateTableViewCell *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  CHWorkoutDetailHeartRateTableViewCell *v109;
  SEL v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  CHWorkoutDetailHeartRateTableViewCell *v122;
  SEL v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  CHWorkoutDetailHeartRateTableViewCell *v139;
  SEL v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  __int128 v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v159)(char *, char *, uint64_t);
  void (*v160)(char *, char *, uint64_t);
  int *v161;
  char *__dst;
  char *__dsta;
  _QWORD *v164;
  _QWORD *v165;
  char *v166;
  char *v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *__src;

  v4 = a2;
  v5 = (char *)a1;
  if ((char *)a1 != a2)
  {
    sub_10001BE90(a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(v4, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v4, v7);
      swift_storeEnumTagMultiPayload(v5, v6, 1);
    }
    else
    {
      memcpy(v5, v4, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v172 = a3;
  v8 = *(int *)(a3 + 20);
  v9 = &v5[v8];
  v10 = &v4[v8];
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = (int *)type metadata accessor for CatalogTipCard(0);
  v13 = v12[5];
  v14 = &v9[v13];
  v15 = &v10[v13];
  v16 = v15[16];
  v17 = *(_QWORD *)v14;
  v18 = *((_QWORD *)v14 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v19 = v14[16];
  v14[16] = v16;
  sub_1000EB41C(v17, v18, v19);
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  v20 = v12[9];
  v21 = &v9[v20];
  v22 = &v10[v20];
  v23 = type metadata accessor for CatalogTipSection(0);
  v170 = *(_QWORD *)(v23 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v170 + 48);
  v25 = v24(v21, 1, v23);
  __src = v22;
  v26 = v24(v22, 1, v23);
  if (v25)
  {
    if (!v26)
    {
      v166 = v4;
      v168 = v5;
      *(_OWORD *)v21 = *(_OWORD *)v22;
      v27 = *(int *)(v23 + 24);
      v164 = v21;
      v28 = &v21[v27];
      v29 = &v22[v27];
      v30 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      v31 = (int *)type metadata accessor for CatalogTipSectionItem(0);
      v32 = v31[5];
      v33 = &v28[v32];
      v34 = &v29[v32];
      v35 = type metadata accessor for Artwork(0);
      v36 = v34;
      v37 = *(_QWORD *)(v35 - 8);
      v160 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
      v160(v33, v36, v35);
      *(_OWORD *)&v28[v31[6]] = *(_OWORD *)&v29[v31[6]];
      *(_OWORD *)&v28[v31[7]] = *(_OWORD *)&v29[v31[7]];
      v38 = v31[8];
      __dst = &v28[v38];
      v39 = &v29[v38];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(&v29[v38], 1, v35))
      {
        v40 = sub_100047110((uint64_t *)&unk_1008283A0);
        memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v160(__dst, v39, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v35);
      }
      v42 = v172;
      *(_OWORD *)&v28[v31[9]] = *(_OWORD *)&v29[v31[9]];
      *(_OWORD *)&v28[v31[10]] = *(_OWORD *)&v29[v31[10]];
      *(_OWORD *)&v28[v31[11]] = *(_OWORD *)&v29[v31[11]];
      v93 = v31[12];
      v94 = &v28[v93];
      v95 = &v29[v93];
      v96 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v94, v95, v96);
      *(_OWORD *)((char *)v164 + *(int *)(v23 + 28)) = *(_OWORD *)&__src[*(int *)(v23 + 28)];
      (*(void (**)(void))(v170 + 56))();
      v4 = v166;
      v5 = v168;
      goto LABEL_21;
    }
    goto LABEL_11;
  }
  if (v26)
  {
    sub_100011F54((uint64_t)v21, type metadata accessor for CatalogTipSection);
LABEL_11:
    v41 = sub_100047110(&qword_100824DE0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    v42 = v172;
    goto LABEL_21;
  }
  v167 = v4;
  v169 = v5;
  v43 = *(void **)v21;
  *(_QWORD *)v21 = *(_QWORD *)v22;

  v44 = (void *)*((_QWORD *)v21 + 1);
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);

  v171 = v23;
  v45 = *(int *)(v23 + 24);
  v165 = v21;
  v46 = &v21[v45];
  v47 = &v22[v45];
  v48 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 40))(v46, v47, v48);
  v49 = (int *)type metadata accessor for CatalogTipSectionItem(0);
  v50 = v49[5];
  v51 = &v46[v50];
  v52 = &v47[v50];
  v53 = type metadata accessor for Artwork(0);
  v54 = *(_QWORD *)(v53 - 8);
  v159 = *(void (**)(char *, char *, uint64_t))(v54 + 40);
  v159(v51, v52, v53);
  v55 = v49[6];
  v56 = &v46[v55];
  v57 = &v47[v55];
  v59 = *(_QWORD *)v57;
  v58 = *((_QWORD *)v57 + 1);
  v60 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v56 + 1);
  *(_QWORD *)v56 = v59;
  *((_QWORD *)v56 + 1) = v58;
  swift_bridgeObjectRelease(v60, v61, v62, v63, v64, v65, v66, v67);
  v68 = v49[7];
  v69 = &v46[v68];
  v70 = &v47[v68];
  v72 = *(_QWORD *)v70;
  v71 = *((_QWORD *)v70 + 1);
  v73 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v69 + 1);
  *(_QWORD *)v69 = v72;
  *((_QWORD *)v69 + 1) = v71;
  swift_bridgeObjectRelease(v73, v74, v75, v76, v77, v78, v79, v80);
  v161 = v49;
  __dsta = v47;
  v81 = v49[8];
  v82 = &v46[v81];
  v83 = &v47[v81];
  v84 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  LODWORD(v51) = v84(&v46[v81], 1, v53);
  v85 = v84(v83, 1, v53);
  if (!(_DWORD)v51)
  {
    if (!v85)
    {
      v159(v82, v83, v53);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v82, v53);
    goto LABEL_19;
  }
  if (v85)
  {
LABEL_19:
    v97 = sub_100047110((uint64_t *)&unk_1008283A0);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v82, v83, v53);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v82, 0, 1, v53);
LABEL_20:
  v5 = v169;
  v42 = v172;
  v98 = v161[9];
  v99 = &v46[v98];
  v100 = &__dsta[v98];
  v102 = *(_QWORD *)v100;
  v101 = *((_QWORD *)v100 + 1);
  v103 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v99 + 1);
  *(_QWORD *)v99 = v102;
  *((_QWORD *)v99 + 1) = v101;
  swift_bridgeObjectRelease(v103, v86, v87, v88, v89, v90, v91, v92);
  v104 = v161[10];
  v105 = &v46[v104];
  v106 = &__dsta[v104];
  v108 = *(_QWORD *)v106;
  v107 = *((_QWORD *)v106 + 1);
  v109 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v105 + 1);
  *(_QWORD *)v105 = v108;
  *((_QWORD *)v105 + 1) = v107;
  swift_bridgeObjectRelease(v109, v110, v111, v112, v113, v114, v115, v116);
  v117 = v161[11];
  v118 = &v46[v117];
  v119 = &__dsta[v117];
  v121 = *(_QWORD *)v119;
  v120 = *((_QWORD *)v119 + 1);
  v122 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v118 + 1);
  *(_QWORD *)v118 = v121;
  *((_QWORD *)v118 + 1) = v120;
  swift_bridgeObjectRelease(v122, v123, v124, v125, v126, v127, v128, v129);
  v130 = v161[12];
  v131 = &v46[v130];
  v132 = &__dsta[v130];
  v133 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 40))(v131, v132, v133);
  v134 = *(int *)(v171 + 28);
  v135 = (_QWORD *)((char *)v165 + v134);
  v136 = &__src[v134];
  v138 = *(_QWORD *)v136;
  v137 = *((_QWORD *)v136 + 1);
  v139 = (CHWorkoutDetailHeartRateTableViewCell *)v135[1];
  *v135 = v138;
  v135[1] = v137;
  swift_bridgeObjectRelease(v139, v140, v141, v142, v143, v144, v145, v146);
  v4 = v167;
LABEL_21:
  v147 = v12[10];
  v148 = *(_QWORD *)&v9[v147];
  *(_QWORD *)&v9[v147] = *(_QWORD *)&v10[v147];
  swift_release(v148);
  v149 = *(int *)(v42 + 24);
  v150 = &v5[v149];
  if (*(_QWORD *)&v5[v149 + 24])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v5[v149]);
  v151 = *(_OWORD *)&v4[v149 + 16];
  *(_OWORD *)v150 = *(_OWORD *)&v4[v149];
  *((_OWORD *)v150 + 1) = v151;
  *((_QWORD *)v150 + 4) = *(_QWORD *)&v4[v149 + 32];
  v152 = *(int *)(v42 + 28);
  v153 = &v5[v152];
  v154 = &v4[v152];
  v156 = *(_QWORD *)v154;
  v155 = *((_QWORD *)v154 + 1);
  v157 = *((_QWORD *)v153 + 1);
  *(_QWORD *)v153 = v156;
  *((_QWORD *)v153 + 1) = v155;
  swift_release(v157);
  return v5;
}

uint64_t sub_1005CB768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005CB774);
}

uint64_t sub_1005CB774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_100047110(&qword_10081F440);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for CatalogTipCard(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1005CB824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005CB830);
}

uint64_t sub_1005CB830(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_100047110(&qword_10081F440);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for CatalogTipCard(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

void sub_1005CB8DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_1000F2378(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for CatalogTipCard(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "(";
      v6[3] = &unk_100648CB0;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

uint64_t sub_1005CB974(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BD5C0, 1);
}

uint64_t sub_1005CB984()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  id *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  char *v35;
  const char *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  SEL v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  char *v57;
  uint64_t v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  _QWORD *v66;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;

  v1 = v0;
  v2 = (int *)type metadata accessor for CatalogTipCardView(0);
  v3 = *((_QWORD *)v2 - 1);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  v7 = (_QWORD *)(v1 + v5);
  v8 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v1 + v5, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v1 + v5, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (char *)v7 + v2[5];
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = (int *)type metadata accessor for CatalogTipCard(0);
  sub_1000EB41C(*(_QWORD *)&v10[v12[5]], *(_QWORD *)&v10[v12[5] + 8], v10[v12[5] + 16]);
  v13 = (id *)&v10[v12[9]];
  v14 = type metadata accessor for CatalogTipSection(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v69 = v6;
    v70 = (v4 + 16) & ~v4;
    v71 = v4;
    v72 = v2;
    v73 = v1;

    v15 = (char *)v13 + *(int *)(v14 + 24);
    v16 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    v17 = (int *)type metadata accessor for CatalogTipSectionItem(0);
    v18 = &v15[v17[5]];
    v19 = type metadata accessor for Artwork(0);
    v20 = *(_QWORD *)(v19 - 8);
    v68 = *(void (**)(char *, uint64_t))(v20 + 8);
    v68(v18, v19);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v15[v17[6] + 8], v21, v22, v23, v24, v25, v26, v27);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v15[v17[7] + 8], v28, v29, v30, v31, v32, v33, v34);
    v35 = &v15[v17[8]];
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v35, 1, v19))
      v68(v35, v19);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v15[v17[9] + 8], v36, v37, v38, v39, v40, v41, v42);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v15[v17[10] + 8], v43, v44, v45, v46, v47, v48, v49);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)&v15[v17[11] + 8], v50, v51, v52, v53, v54, v55, v56);
    v57 = &v15[v17[12]];
    v58 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
    swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)((char *)v13 + *(int *)(v14 + 28) + 8), v59, v60, v61, v62, v63, v64, v65);
    v2 = v72;
    v1 = v73;
    v5 = v70;
    v4 = v71;
    v6 = v69;
  }
  swift_release(*(_QWORD *)&v10[v12[10]]);
  v66 = (_QWORD *)((char *)v7 + v2[6]);
  if (v66[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v66);
  swift_release(*(_QWORD *)((char *)v7 + v2[7] + 8));
  return swift_deallocObject(v1, v5 + v6, v4 | 7);
}

uint64_t sub_1005CBC24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CatalogTipCardView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005CBC68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CatalogTipCardView(0) - 8) + 80);
  return sub_1005C9A58(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_1005CBC94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083CC30;
  if (!qword_10083CC30)
  {
    v1 = sub_100007050(&qword_10083CC28);
    sub_1005CBCF8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10083CC30);
  }
  return result;
}

unint64_t sub_1005CBCF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083CC38;
  if (!qword_10083CC38)
  {
    v1 = sub_100007050(&qword_10083CC40);
    sub_100028384(&qword_10083CC48, &qword_10083CC50, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_1005CBD7C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083CC38);
  }
  return result;
}

unint64_t sub_1005CBD7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083CC58;
  if (!qword_10083CC58)
  {
    v1 = sub_100007050(&qword_10083CC60);
    sub_100028384(&qword_10083CC68, &qword_10083CC70, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100028384(&qword_10083CC78, &qword_10083CC80, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083CC58);
  }
  return result;
}

uint64_t sub_1005CBE18(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v19 = *(_OWORD *)(a1 + 480);
  v17 = *(_OWORD *)(a1 + 448);
  v18 = *(_OWORD *)(a1 + 464);
  v15 = *(_OWORD *)(a1 + 416);
  v16 = *(_OWORD *)(a1 + 432);
  v13 = *(_OWORD *)(a1 + 384);
  v14 = *(_OWORD *)(a1 + 400);
  v11 = *(_OWORD *)(a1 + 352);
  v12 = *(_OWORD *)(a1 + 368);
  v9 = *(_OWORD *)(a1 + 320);
  v10 = *(_OWORD *)(a1 + 336);
  v7 = *(_OWORD *)(a1 + 288);
  v8 = *(_OWORD *)(a1 + 304);
  v5 = *(_OWORD *)(a1 + 256);
  v6 = *(_OWORD *)(a1 + 272);
  v3 = *(_OWORD *)(a1 + 224);
  v4 = *(_OWORD *)(a1 + 240);
  sub_1005CBEF0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), BYTE1(*(_QWORD *)(a1 + 136)),
    *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((CHWorkoutDetailHeartRateTableViewCell **)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((CHWorkoutDetailHeartRateTableViewCell **)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((CHWorkoutDetailHeartRateTableViewCell **)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1));
  return a1;
}

void sub_1005CBEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, CHWorkoutDetailHeartRateTableViewCell *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,CHWorkoutDetailHeartRateTableViewCell *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,CHWorkoutDetailHeartRateTableViewCell *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,CHWorkoutDetailHeartRateTableViewCell *a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,CHWorkoutDetailHeartRateTableViewCell *a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  SEL v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;

  if ((a65 & 1) != 0)
  {
    sub_1005CC20C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28,
      a29,
      a30,
      a31,
      a32,
      a33,
      a34,
      (uint64_t)a35,
      a36,
      a37,
      a38,
      a39,
      a40,
      a41,
      a42,
      a43,
      a44,
      a45,
      a46,
      a47,
      a48,
      a49,
      a50,
      a51,
      a52,
      a53,
      a54,
      a55,
      a56,
      a57,
      a58,
      a59,
      a60,
      a61,
      a62,
      a63);
  }
  else
  {
    sub_1000E4458(a4, a5, a6 & 1);
    swift_release(a23);
    swift_bridgeObjectRelease(a7, v66, v67, v68, v69, v70, v71, v72);
    sub_1000E4458(a32, a33, a34 & 1);
    swift_bridgeObjectRelease(a35, v73, v74, v75, v76, v77, v78, v79);
  }
}

void sub_1005CC20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, CHWorkoutDetailHeartRateTableViewCell *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,CHWorkoutDetailHeartRateTableViewCell *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,CHWorkoutDetailHeartRateTableViewCell *a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,CHWorkoutDetailHeartRateTableViewCell *a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  char a68;
  SEL v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  SEL v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  SEL v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  SEL v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;

  if ((a68 & 1) != 0)
  {
    sub_1000E4458(a4, a5, a6 & 1);
    swift_release(a8);
    swift_bridgeObjectRelease(a7, v70, v71, v72, v73, v74, v75, v76);
    swift_release(a23);
    sub_1000E4458(a38, a39, a40 & 1);
    swift_release(a65);
    swift_release(a62);
    swift_bridgeObjectRelease(a41, v77, v78, v79, v80, v81, v82, v83);
    swift_release(a63);
  }
  else
  {
    sub_1005CC38C(a4, a5, a6, (uint64_t)a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19 & 1);
    sub_1000E4458(a23, a24, a25 & 1);
    swift_release(a27);
    swift_bridgeObjectRelease(a26, v84, v85, v86, v87, v88, v89, v90);
    sub_1000E4458(a50, a51, a52 & 1);
    swift_release(a54);
    swift_bridgeObjectRelease(a53, v91, v92, v93, v94, v95, v96, v97);
  }
}

uint64_t sub_1005CC38C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char a16)
{
  if ((a16 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t sub_1005CC39C(uint64_t result)
{
  *(_BYTE *)(result + 521) = 1;
  return result;
}

uint64_t sub_1005CC3A8(uint64_t result)
{
  *(_BYTE *)(result + 522) = 1;
  return result;
}

uint64_t sub_1005CC3B4(uint64_t result)
{
  *(_BYTE *)(result + 521) = 0;
  return result;
}

uint64_t sub_1005CC3BC(uint64_t result)
{
  *(_BYTE *)(result + 522) = 0;
  return result;
}

uint64_t sub_1005CC3CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 144);
  sub_1000E439C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return a1;
}

uint64_t sub_1005CC41C(uint64_t a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  SEL v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 144);
  sub_1000E4458(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v3);
  swift_bridgeObjectRelease(v2, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1005CC474()
{
  return sub_1000E0A18(&qword_10083CCB0, &qword_10083CCB8, (void (*)(void))sub_1005CC498);
}

unint64_t sub_1005CC498()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083CCC0;
  if (!qword_10083CCC0)
  {
    v1 = sub_100007050(&qword_10083CCC8);
    sub_10016F0EC((unint64_t *)&qword_100826780, &qword_100826788);
    sub_100028384(&qword_10083CCD0, &qword_10083CCD8, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083CCC0);
  }
  return result;
}

unint64_t sub_1005CC53C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083CCE0;
  if (!qword_10083CCE0)
  {
    v1 = sub_100007050(&qword_10083CCA0);
    sub_10016F0EC((unint64_t *)&qword_100823208, &qword_1008231E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083CCE0);
  }
  return result;
}

uint64_t sub_1005CC5C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char a16)
{
  if ((a16 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t sub_1005CC5D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 240);
  v5 = *(_QWORD *)(a1 + 248);
  v6 = *(_BYTE *)(a1 + 256);
  v7 = *(_QWORD *)(a1 + 264);
  v8 = *(_QWORD *)(a1 + 272);
  sub_1000E439C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  sub_1000E439C(v4, v5, v6);
  swift_bridgeObjectRetain(v7);
  swift_retain(v8);
  return a1;
}

uint64_t sub_1005CC664(uint64_t a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  uint64_t v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;

  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 240);
  v5 = *(_QWORD *)(a1 + 248);
  v6 = *(_BYTE *)(a1 + 256);
  v7 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 264);
  v8 = *(_QWORD *)(a1 + 272);
  sub_1000E4458(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v3);
  swift_bridgeObjectRelease(v2, v9, v10, v11, v12, v13, v14, v15);
  sub_1000E4458(v4, v5, v6);
  swift_release(v8);
  swift_bridgeObjectRelease(v7, v16, v17, v18, v19, v20, v21, v22);
  return a1;
}

uint64_t sub_1005CC6F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 144);
  v3 = *(_QWORD *)(a1 + 152);
  v4 = *(_BYTE *)(a1 + 160);
  v5 = *(_QWORD *)(a1 + 168);
  v6 = *(_QWORD *)(a1 + 336);
  v7 = *(_QWORD *)(a1 + 344);
  v8 = *(_QWORD *)(a1 + 360);
  swift_retain(*(_QWORD *)(a1 + 24));
  sub_1000E439C(v2, v3, v4);
  swift_retain(v7);
  swift_retain(v8);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t sub_1005CC774(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v2 = *(_QWORD *)(a1 + 144);
  v3 = *(_QWORD *)(a1 + 152);
  v4 = *(_BYTE *)(a1 + 160);
  v5 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 168);
  v6 = *(_QWORD *)(a1 + 336);
  v7 = *(_QWORD *)(a1 + 344);
  v8 = *(_QWORD *)(a1 + 360);
  swift_release(*(_QWORD *)(a1 + 24));
  sub_1000E4458(v2, v3, v4);
  swift_release(v8);
  swift_release(v6);
  swift_bridgeObjectRelease(v5, v9, v10, v11, v12, v13, v14, v15);
  swift_release(v7);
  return a1;
}

uint64_t sub_1005CC800(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 192);
  v4 = *(_QWORD *)(a1 + 200);
  v5 = *(_QWORD *)(a1 + 216);
  sub_1000E439C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain(v4);
  swift_retain(v5);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return a1;
}

uint64_t sub_1005CC86C(uint64_t a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 192);
  v4 = *(_QWORD *)(a1 + 200);
  v5 = *(_QWORD *)(a1 + 216);
  sub_1000E4458(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v5);
  swift_release(v3);
  swift_bridgeObjectRelease(v2, v6, v7, v8, v9, v10, v11, v12);
  swift_release(v4);
  return a1;
}

unint64_t sub_1005CC8DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10083CCE8[0];
  if (!qword_10083CCE8[0])
  {
    v1 = sub_100007050(&qword_100832E18);
    v2[0] = sub_100007050(&qword_10083CC28);
    v2[1] = sub_1005CBC94();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, qword_10083CCE8);
  }
  return result;
}

uint64_t sub_1005CC970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a6, a1);
  v11 = a6 + *(int *)(type metadata accessor for UnitsSettingsItemView(0, a3, a4, a5) + 44);
  v12 = type metadata accessor for Binding(0, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a2, v12);
}

uint64_t type metadata accessor for UnitsSettingsItemView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10014E7CC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnitsSettingsItemView);
}

uint64_t sub_1005CCA08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[2];

  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v5 = type metadata accessor for Binding(319, v2);
    v3 = v5;
    if (v6 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v5 - 8) + 64;
      swift_initStructMetadata(a1, 0, 2, v8, a1 + 40);
      return 0;
    }
  }
  return v3;
}

uint64_t *sub_1005CCAA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, uint64_t *, uint64_t);
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = ~(v8 | 7);
  if (v8 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v8 + 16) & ~v8) + v7 + (((v8 | 7) + v7) & ~(v8 | 7uLL)) > 0x18)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v8 + 16) & v9));
    swift_retain(v12);
  }
  else
  {
    v13 = ~v8;
    v14 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v14(a1, a2, *(_QWORD *)(a3 + 16));
    v15 = (uint64_t *)(((unint64_t)a2 + v7 + 7) & v9);
    v16 = *v15;
    v17 = (_QWORD *)(((unint64_t)v4 + v7 + 7) & v9);
    *v17 = *v15;
    v18 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
    v19 = (uint64_t *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    v20 = *v19;
    *v18 = *v19;
    v21 = v8 + 8;
    v22 = ((unint64_t)v18 + v8 + 8) & ~v8;
    v23 = ((unint64_t)v19 + v21) & v13;
    swift_retain(v16);
    swift_retain(v20);
    v14((uint64_t *)v22, (uint64_t *)v23, v5);
  }
  return v4;
}

uint64_t sub_1005CCBB4(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v10 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v10(a1, v3);
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (_QWORD *)((v5 + (v6 | 7)) & ~(v6 | 7));
  swift_release(*v7);
  v8 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_release(*v8);
  return v10(((unint64_t)v8 + v6 + 8) & ~v6, v3);
}

uint64_t sub_1005CCC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = (v8 | 7) + *(_QWORD *)(v6 + 64);
  v10 = v9 + a1;
  v11 = (uint64_t *)((v9 + a2) & ~(v8 | 7));
  v12 = *v11;
  v13 = (_QWORD *)(v10 & ~(v8 | 7));
  *v13 = *v11;
  v14 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v15 = (uint64_t *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = *v15;
  *v14 = *v15;
  v17 = ((unint64_t)v14 + v8 + 8) & ~v8;
  v18 = ((unint64_t)v15 + v8 + 8) & ~v8;
  swift_retain(v12);
  swift_retain(v16);
  v7(v17, v18, v5);
  return a1;
}

unint64_t sub_1005CCCF0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v9 | 7) + v8;
  v11 = (uint64_t *)((v10 + a1) & ~(v9 | 7));
  v12 = (uint64_t *)((v10 + a2) & ~(v9 | 7));
  v13 = *v11;
  v14 = *v12;
  *v11 = *v12;
  swift_retain(v14);
  swift_release(v13);
  v15 = (uint64_t *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (uint64_t *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v17 = *v16;
  v18 = *v15;
  *v15 = *v16;
  swift_retain(v17);
  swift_release(v18);
  v7(((unint64_t)v15 + v9 + 8) & ~v9, ((unint64_t)v16 + v9 + 8) & ~v9, v5);
  return a1;
}

unint64_t sub_1005CCDB4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = (v8 | 7) + *(_QWORD *)(v6 + 64);
  v10 = v9 + a1;
  v11 = (_QWORD *)((v9 + a2) & ~(v8 | 7));
  v12 = (_QWORD *)(v10 & ~(v8 | 7));
  *v12 = *v11;
  v13 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v7(((unint64_t)v13 + v8 + 8) & ~v8, ((unint64_t)v14 + v8 + 8) & ~v8, v5);
  return a1;
}

unint64_t sub_1005CCE50(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v9 | 7) + v8;
  v11 = (uint64_t *)((v10 + a1) & ~(v9 | 7));
  v12 = (uint64_t *)((v10 + a2) & ~(v9 | 7));
  v13 = *v11;
  *v11 = *v12;
  swift_release(v13);
  v14 = (uint64_t *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v15 = (uint64_t *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = *v14;
  *v14 = *v15;
  swift_release(v16);
  v7(((unint64_t)v14 + v9 + 8) & ~v9, ((unint64_t)v15 + v9 + 8) & ~v9, v5);
  return a1;
}

uint64_t sub_1005CCEFC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v16;
  int v17;
  unint64_t v18;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = v8 | 7;
  v10 = (v8 | 7) + v7;
  v11 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v12 = ((v8 + 16) & ~v8) + v7 + (v10 & ~v9);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v16 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v16 < 2)
    {
LABEL_22:
      if (v5 >= 0x7FFFFFFF)
        return (*(uint64_t (**)(void))(v4 + 48))();
      v18 = *(_QWORD *)((((v10 + a1) & ~v9) + 15) & 0xFFFFFFFFFFFFF8);
      if (v18 >= 0xFFFFFFFF)
        LODWORD(v18) = -1;
      return (v18 + 1);
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_22;
LABEL_15:
  v17 = (v14 - 1) << v13;
  if (v12 > 3)
    v17 = 0;
  if (!(_DWORD)v12)
    return v6 + v17 + 1;
  if (v12 > 3)
    LODWORD(v12) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1005CCFE0 + 4 * byte_100648DC0[(v12 - 1)]))();
}

void sub_1005CD05C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64)
     + (((*(unsigned __int8 *)(v5 + 80) | 7) + *(_QWORD *)(v5 + 64)) & ~(*(unsigned __int8 *)(v5 + 80) | 7));
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = &dword_100000004;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_1005CD270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 16);
  v5 = v2;
  return swift_getOpaqueTypeConformance2(&v4, &unk_1006BD63C, 1);
}

uint64_t sub_1005CD2AC(uint64_t a1)
{
  uint64_t v1;

  v1 = type metadata accessor for Binding(0, *(_QWORD *)(a1 + 16));
  return Binding.wrappedValue.getter(v1);
}

uint64_t sub_1005CD2E4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_100047110(&qword_10083CD70);
  return sub_1005CD340(a1[2], a1[3], a1[4], a2 + *(int *)(v4 + 44));
}

uint64_t sub_1005CD340@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v25[5];

  v8 = sub_100047110(&qword_100832A50);
  __chkstk_darwin(v8);
  v10 = (char *)&v25[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v25[-1] - v12;
  v14 = (_QWORD *)type metadata accessor for UnitsSettingsItemView(0, a1, a2, a3);
  sub_1005CD4CC(v14, (uint64_t)v13);
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  if ((sub_1005CD67C((uint64_t)v14) & 1) != 0)
  {
    sub_1005CD72C(v25);
    v15 = v25[0];
    v16 = v25[1];
    v17 = v25[2];
    v18 = v25[3];
    v19 = v25[4];
  }
  sub_1005CD820((uint64_t)v13, (uint64_t)v10);
  sub_1005CD820((uint64_t)v10, a4);
  v20 = sub_100047110(&qword_10083CD78);
  v21 = a4 + *(int *)(v20 + 48);
  *(_QWORD *)v21 = 0;
  *(_BYTE *)(v21 + 8) = 1;
  v22 = (uint64_t *)(a4 + *(int *)(v20 + 64));
  *v22 = v15;
  v22[1] = v16;
  v22[2] = v17;
  v22[3] = v18;
  v22[4] = v19;
  sub_1005CD868(v15, v16, v17, v18, v19);
  sub_1005CD8C4((uint64_t)v13);
  sub_1005CD904(v15, v16, v17, v18, v19);
  return sub_1005CD8C4((uint64_t)v10);
}

uint64_t sub_1005CD4CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a2;
  v4 = *(a1 - 1);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  v6 = sub_100047110(&qword_100820FE0);
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[2];
  v10 = a1[4];
  dispatch thunk of Identifiable.id.getter(v9, v10);
  v11 = LocalizedStringKey.init(stringLiteral:)(v34, v35);
  v29 = v12;
  v30 = v11;
  v14 = v13;
  v28 = v15;
  (*(void (**)(char *, uint64_t, _QWORD *))(v4 + 16))((char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  v16 = *(unsigned __int8 *)(v4 + 80);
  v17 = (v16 + 40) & ~v16;
  v18 = (char *)swift_allocObject(&unk_1007ACE60, v17 + v5, v16 | 7);
  v19 = a1[3];
  *((_QWORD *)v18 + 2) = v9;
  *((_QWORD *)v18 + 3) = v19;
  *((_QWORD *)v18 + 4) = v10;
  (*(void (**)(char *, char *, _QWORD *))(v4 + 32))(&v18[v17], (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  Button<>.init(_:action:)(v30, v29, v14 & 1, v28, sub_1005CDA28, v18);
  v21 = static Color.primary.getter(v20);
  KeyPath = swift_getKeyPath(&unk_100648E88);
  v24 = v31;
  v23 = v32;
  v25 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v33, v8, v32);
  v26 = (uint64_t *)(v25 + *(int *)(sub_100047110(&qword_100832A50) + 36));
  *v26 = KeyPath;
  v26[1] = v21;
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v8, v23);
}

uint64_t sub_1005CD67C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Binding(0, v3);
  Binding.wrappedValue.getter(v7);
  v8 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v1, v3, *(_QWORD *)(a1 + 24));
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8 & 1;
}

void sub_1005CD72C(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;

  v2 = static Font.body.getter();
  static Font.Weight.semibold.getter(v2);
  v3 = Font.weight(_:)(v2);
  swift_release(v2);
  v4 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "keyColors");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "nonGradientTextColor");

    if (v6)
    {
      v7 = Color.init(uiColor:)(v6);
      v8 = Image.init(systemName:)(0x72616D6B63656863, 0xE90000000000006BLL);
      KeyPath = swift_getKeyPath(&unk_100648E58);
      v10 = swift_getKeyPath(&unk_100648E88);
      *a1 = v8;
      a1[1] = KeyPath;
      a1[2] = v3;
      a1[3] = v10;
      a1[4] = v7;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1005CD820(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100832A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005CD868(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;

  if (result)
  {
    v8 = result;
    swift_retain(a5);
    swift_retain(v8);
    swift_retain(a2);
    swift_retain(a3);
    return swift_retain(a4);
  }
  return result;
}

uint64_t sub_1005CD8C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_100832A50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005CD904(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    swift_release(result);
    swift_release(a2);
    swift_release(a4);
    swift_release(a3);
    return swift_release(a5);
  }
  return result;
}

uint64_t sub_1005CD96C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  char *v10;
  uint64_t v11;

  v1 = *((_QWORD *)v0 + 2);
  v2 = type metadata accessor for UnitsSettingsItemView(0, v1, *((_QWORD *)v0 + 3), *((_QWORD *)v0 + 4));
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 40) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  v8 = &v0[v5];
  v9 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v1 - 8) + 8);
  v9(&v0[v5], v1);
  v10 = &v8[*(int *)(v2 + 44)];
  swift_release(*(_QWORD *)v10);
  swift_release(*((_QWORD *)v10 + 1));
  v11 = type metadata accessor for Binding(0, v1);
  v9(&v10[*(int *)(v11 + 32)], v1);
  return swift_deallocObject(v0, v6, v7);
}

uint64_t sub_1005CDA28()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for UnitsSettingsItemView(0, v0[2], v0[3], v0[4]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1005CDA70((uint64_t)v0 + ((v2 + 40) & ~v2), v1);
}

uint64_t sub_1005CDA70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a2 + 16);
  __chkstk_darwin(a1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v4, v6, v2);
  v7 = type metadata accessor for Binding(0, v2);
  return Binding.wrappedValue.setter(v4, v7);
}

unint64_t sub_1005CDB00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083CD80;
  if (!qword_10083CD80)
  {
    v1 = sub_100007050(&qword_10083CD88);
    result = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10083CD80);
  }
  return result;
}

uint64_t sub_1005CDB4C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100648F20);
  v2 = swift_getKeyPath(&unk_100648F48);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1005CDBBC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t (**v43)(void **);
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;

  v59 = a2;
  v62 = a1;
  v7 = sub_100047110(&qword_100822168);
  v54 = *(_QWORD *)(v7 - 8);
  v55 = v7;
  v8 = *(_QWORD *)(v54 + 64);
  v9 = __chkstk_darwin(v7);
  v53 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v51 - v10;
  v12 = sub_100047110((uint64_t *)&unk_100836170);
  v57 = *(_QWORD *)(v12 - 8);
  v58 = v12;
  __chkstk_darwin(v12);
  v56 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110((uint64_t *)&unk_1008283A0);
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Artwork(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v60 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100047110(&qword_100833740);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = v4;
  v24 = v4 + OBJC_IVAR____TtC10FitnessApp21TipArtworkImageLoader__image;
  v63[0] = 0;
  v25 = sub_100047110(&qword_100823078);
  Published.init(initialValue:)(v63, v25);
  v26 = v20;
  v27 = v59;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v24, v23, v26);
  v28 = sub_100047110((uint64_t *)&unk_1008282C0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v63, 0, 0, v28);
  sub_1003D1314(v62, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    swift_release(v27);
    sub_1005CE298(v62);
    sub_1005CE298((uint64_t)v16);
    v29 = v61;
  }
  else
  {
    v30 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v31 = v60;
    v52 = v17;
    v30(v60, v16, v17);
    v32 = v64;
    v33 = v65;
    sub_100016804(v63, v64);
    dispatch thunk of ArtworkImageLoading.fetchArtwork(_:size:)(v31, v32, v33, a3, a4);
    v34 = swift_allocObject(&unk_1007ACEE0, 32, 7);
    v35 = v61;
    *(_QWORD *)(v34 + 16) = sub_1005CE2D8;
    *(_QWORD *)(v34 + 24) = v35;
    v51 = v18;
    v29 = v35;
    v37 = v53;
    v36 = v54;
    v38 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v53, v11, v55);
    v39 = *(unsigned __int8 *)(v36 + 80);
    v40 = (v39 + 16) & ~v39;
    v41 = (v8 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
    v42 = swift_allocObject(&unk_1007ACF08, v41 + 16, v39 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v42 + v40, v37, v38);
    v43 = (uint64_t (**)(void **))(v42 + v41);
    *v43 = sub_1003A356C;
    v43[1] = (uint64_t (*)(void **))v34;
    swift_retain(v29);
    v44 = v56;
    Promise.init(asyncOperation:)(sub_1005CE390, v42, (char *)&type metadata for () + 8);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v38);
    v45 = v58;
    v46 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter(v58);
    v48 = v47;
    v49 = swift_allocObject(&unk_1007ACF30, 32, 7);
    *(_QWORD *)(v49 + 16) = 0;
    *(_QWORD *)(v49 + 24) = 0;
    v46(sub_100110028, v49);
    swift_release(v27);
    swift_release(v48);
    swift_release(v49);
    sub_1005CE298(v62);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v44, v45);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v60, v52);
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v63);
  return v29;
}

uint64_t sub_1005CDFD8(id *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v3 = Image.init(uiImage:)(*a1);
  KeyPath = swift_getKeyPath(&unk_100648F20);
  v5 = swift_getKeyPath(&unk_100648F48);
  v7 = v3;
  swift_retain(a2);
  return static Published.subscript.setter(&v7, a2, KeyPath, v5);
}

uint64_t sub_1005CE05C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FitnessApp21TipArtworkImageLoader__image;
  v2 = sub_100047110(&qword_100833740);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1005CE0B0()
{
  return type metadata accessor for TipArtworkImageLoader(0);
}

uint64_t type metadata accessor for TipArtworkImageLoader(uint64_t a1)
{
  uint64_t result;

  result = qword_10083CDC0;
  if (!qword_10083CDC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TipArtworkImageLoader);
  return result;
}

void sub_1005CE0F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_100433268(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

uint64_t sub_1005CE160@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for TipArtworkImageLoader(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1005CE19C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100648F20);
  v5 = swift_getKeyPath(&unk_100648F48);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1005CE21C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100648F20);
  v5 = swift_getKeyPath(&unk_100648F48);
  v7 = v2;
  swift_retain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1005CE298(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110((uint64_t *)&unk_1008283A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005CE2D8(id *a1)
{
  uint64_t v1;

  return sub_1005CDFD8(a1, v1);
}

uint64_t sub_1005CE2F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005CE314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_100047110(&qword_100822168);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1005CE390(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(sub_100047110(&qword_100822168) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_10039B170(a1, a2, v2 + v6, *v7, v7[1]);
}

uint64_t sub_1005CE3F8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_1005CE424()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutDetailAnalyticsTracker()), "init");
  qword_10086B020 = (uint64_t)result;
  return result;
}

void sub_1005CE54C()
{
  uint64_t v0;
  CHWorkoutDetailHeartRateTableViewCell **v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char v23[24];

  v1 = (CHWorkoutDetailHeartRateTableViewCell **)(v0 + OBJC_IVAR___CHWorkoutDetailAnalyticsTracker_trackingWorkouts);
  swift_beginAccess(v0 + OBJC_IVAR___CHWorkoutDetailAnalyticsTracker_trackingWorkouts, v23, 1, 0);
  v2 = *v1;
  v3 = (uint64_t)&(*v1)[2];
  v4 = 1 << LOBYTE((*v1)[1].super.super.super.super.isa);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & (uint64_t)(*v1)[2].super.super.super.super.isa;
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(*v1);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v7)
      goto LABEL_23;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v7)
        goto LABEL_23;
      v13 = *(_QWORD *)(v3 + 8 * v8);
      if (!v13)
      {
        v8 = v12 + 2;
        if (v12 + 2 >= v7)
          goto LABEL_23;
        v13 = *(_QWORD *)(v3 + 8 * v8);
        if (!v13)
        {
          v8 = v12 + 3;
          if (v12 + 3 >= v7)
            goto LABEL_23;
          v13 = *(_QWORD *)(v3 + 8 * v8);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_5:
    v11 = *(id *)(*(_QWORD *)v2[1].cellInset + 8 * v10);
    sub_1005CEF68();

  }
  v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_23:
    swift_release(v2);
    v15 = *v1;
    *v1 = (CHWorkoutDetailHeartRateTableViewCell *)_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(v15, v16, v17, v18, v19, v20, v21, v22);
    return;
  }
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v7)
      goto LABEL_23;
    v13 = *(_QWORD *)(v3 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_1005CE77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v6;
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  __n128 v10;
  _QWORD v11[5];
  _QWORD *v12;

  v6 = String._bridgeToObjectiveC()();
  v7 = (_QWORD *)swift_allocObject(&unk_1007ACFC8, 40, 7);
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v11[4] = sub_1005CF3C4;
  v12 = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1005CE854;
  v11[3] = &unk_1007ACFE0;
  v8 = _Block_copy(v11);
  v9 = v12;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  v10 = swift_release(v9);
  AnalyticsSendEventLazy(v6, v8, v10);
  _Block_release(v8);

}

Class sub_1005CE854(uint64_t a1)
{
  uint64_t (*v1)(__n128);
  uint64_t v2;
  __n128 v3;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  NSDictionary v5;
  SEL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v1 = *(uint64_t (**)(__n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = (CHWorkoutDetailHeartRateTableViewCell *)v1(v3);
  swift_release(v2);
  if (v4)
  {
    sub_10001E724(0, (unint64_t *)&qword_10081E630, NSObject_ptr);
    v5.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4, v6, v7, v8, v9, v10, v11, v12);
  }
  else
  {
    v5.super.isa = 0;
  }
  return v5.super.isa;
}

uint64_t sub_1005CE91C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  CHWorkoutDetailHeartRateTableViewCell **v20;
  char isUniquelyReferenced_nonNull_native;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void (*v30)(_BYTE *, uint64_t);
  void *v31;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  _BYTE v34[24];

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = &v34[-v12 - 8];
  if (a2)
  {
    v14 = a2;
    v15 = objc_msgSend(v14, "UUID");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v15);

  }
  else
  {
    v16 = objc_msgSend(a1, "UUID", v11);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v16);

    v14 = 0;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v13, v6);
  objc_allocWithZone((Class)type metadata accessor for WorkoutDetailAnalyticsEventBuilder());
  v17 = v14;
  v18 = a1;
  v19 = sub_100377630((uint64_t)v18, a2);

  v20 = (CHWorkoutDetailHeartRateTableViewCell **)(v3 + OBJC_IVAR___CHWorkoutDetailAnalyticsTracker_trackingWorkouts);
  swift_beginAccess(v20, v34, 33, 0);
  if (v19)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v20);
    v33 = *v20;
    *v20 = (CHWorkoutDetailHeartRateTableViewCell *)0x8000000000000000;
    sub_100400414((uint64_t)v19, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
    v22 = *v20;
    *v20 = v33;
    swift_bridgeObjectRelease(v22, v23, v24, v25, v26, v27, v28, v29);
    v30 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
    v30(v9, v6);
  }
  else
  {
    v31 = (void *)sub_1004D1484((uint64_t)v9);
    v30 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
    v30(v9, v6);

  }
  swift_endAccess(v34);
  return ((uint64_t (*)(_BYTE *, uint64_t))v30)(v13, v6);
}

uint64_t sub_1005CEB80(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  id v11;
  CHWorkoutDetailHeartRateTableViewCell **v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  unint64_t v14;
  const char *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  SEL v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  _BYTE v32[24];
  _BYTE v33[24];

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(v5).n128_u64[0];
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2)
  {
    v10 = a2;
    v11 = objc_msgSend(v10, "UUID");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v11);

  }
  else
  {
    v11 = objc_msgSend(a1, "UUID", v7);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v11);
  }

  v12 = (CHWorkoutDetailHeartRateTableViewCell **)(v2 + OBJC_IVAR___CHWorkoutDetailAnalyticsTracker_trackingWorkouts);
  swift_beginAccess(v2 + OBJC_IVAR___CHWorkoutDetailAnalyticsTracker_trackingWorkouts, v33, 0, 0);
  v13 = *v12;
  if (*(_QWORD *)(*v12)->cellPadding)
  {
    swift_bridgeObjectRetain(*v12);
    v14 = sub_100439A1C((uint64_t)v9);
    if ((v15 & 1) != 0)
    {
      v22 = *(id *)(*(_QWORD *)v13[1].cellInset + 8 * v14);
      swift_bridgeObjectRelease(v13, v23, v24, v25, v26, v27, v28, v29);
      sub_1005CEF68();

    }
    else
    {
      swift_bridgeObjectRelease(v13, v15, v16, v17, v18, v19, v20, v21);
    }
  }
  swift_beginAccess(v12, v32, 33, 0);
  v30 = (void *)sub_1004D1484((uint64_t)v9);
  swift_endAccess(v32);

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

void *sub_1005CED64(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  CHWorkoutDetailHeartRateTableViewCell **v12;
  __n128 v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  unint64_t v15;
  const char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  _BYTE v27[24];

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(v5).n128_u64[0];
  v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a2)
  {
    v10 = a2;
    v11 = objc_msgSend(v10, "UUID");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v11);

  }
  else
  {
    v11 = objc_msgSend(a1, "UUID", v7);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v11);
  }

  v12 = (CHWorkoutDetailHeartRateTableViewCell **)(v2 + OBJC_IVAR___CHWorkoutDetailAnalyticsTracker_trackingWorkouts);
  v13 = swift_beginAccess(v12, v27, 0, 0);
  v14 = *v12;
  if (*(_QWORD *)v14->cellPadding)
  {
    swift_bridgeObjectRetain(v14);
    v15 = sub_100439A1C((uint64_t)v9);
    if ((v16 & 1) != 0)
    {
      v23 = *(void **)(*(_QWORD *)v14[1].cellInset + 8 * v15);
      v24 = v23;
    }
    else
    {
      v23 = 0;
    }
    swift_bridgeObjectRelease(v14, v16, v17, v18, v19, v20, v21, v22);
  }
  else
  {
    v23 = 0;
  }
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v9, v5, v13);
  return v23;
}

id sub_1005CEF08()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailAnalyticsTracker();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailAnalyticsTracker()
{
  return objc_opt_self(CHWorkoutDetailAnalyticsTracker);
}

void sub_1005CEF68()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  __n128 v11;
  void *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  os_log_type_t v22;
  void *v23;
  os_log_type_t v24;
  NSObject *v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (**v31)(char *, uint64_t);
  uint64_t aBlock[5];
  _QWORD *v33;
  CHWorkoutDetailHeartRateTableViewCell *v34;
  uint64_t v35;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(void (***)(char *, uint64_t))(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for DispatchQoS(0);
  v3 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS.QoSClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
  if (v10
    && (v12 = v10, v13 = objc_msgSend(v10, "isHealthDataSubmissionAllowed"), v12, v13))
  {
    v14 = sub_100376F64();
    if (v14)
    {
      v15 = v14;
      sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchQoS.QoSClass.utility(_:), v6);
      v16 = (void *)static OS_dispatch_queue.global(qos:)(v9);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v17 = (_QWORD *)swift_allocObject(&unk_1007ACF78, 40, 7);
      v17[2] = 0xD000000000000029;
      v17[3] = 0x800000010069B5E0;
      v17[4] = v15;
      aBlock[4] = (uint64_t)sub_1005CF388;
      v33 = v17;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10002D0F8;
      aBlock[3] = (uint64_t)&unk_1007ACF90;
      v18 = _Block_copy(aBlock);
      static DispatchQoS.unspecified.getter(v18);
      v34 = &_swiftEmptyArrayStorage;
      v19 = sub_10002FAC0();
      v20 = sub_100047110(&qword_100828C80);
      v21 = sub_10002FB08();
      dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v20, v21, v0, v19);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v5, v2, v18);
      _Block_release(v18);

      v31[1](v2, v0);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v30);
      swift_release(v33);
    }
    else
    {
      v28 = static os_log_type_t.error.getter(0);
      v31 = (void (**)(char *, uint64_t))HKLogWorkouts;
      os_log(_:dso:log:_:_:)(v28, &_mh_execute_header, v31, "[Core Analytics] failed to generate analytics payload!", 54, 2, &_swiftEmptyArrayStorage);

    }
  }
  else
  {
    v22 = static os_log_type_t.debug.getter(v11);
    v23 = (void *)HKLogWorkouts;
    v24 = v22;
    if (os_log_type_enabled(HKLogWorkouts, v22))
    {
      v25 = v23;
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      aBlock[0] = v27;
      *(_DWORD *)v26 = 136315138;
      v34 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10003E8EC(0xD000000000000029, 0x800000010069B5E0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v26 + 4);
      _os_log_impl((void *)&_mh_execute_header, v25, v24, "[Core Analytics] Health data submission not allowed. Not sending analytics. eventName=%s", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

    }
  }
}

void sub_1005CF388()
{
  uint64_t *v0;

  sub_1005CE77C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1005CF398()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1005CF3C4(__n128 a1)
{
  uint64_t v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  double result;

  v2 = sub_1005CF3E0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(CHWorkoutDetailHeartRateTableViewCell **)(v1 + 32), a1);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v2).n128_u64[0];
  return result;
}

CHWorkoutDetailHeartRateTableViewCell *sub_1005CF3E0(uint64_t a1, unint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3, __n128 a4)
{
  os_log_type_t v7;
  void *v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  SEL v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v32;
  uint64_t v33;

  v7 = static os_log_type_t.debug.getter(a4);
  v8 = (void *)HKLogWorkouts;
  v9 = v7;
  if (os_log_type_enabled(HKLogWorkouts, v7))
  {
    swift_bridgeObjectRetain_n(a2, 2);
    swift_bridgeObjectRetain_n(a3, 2);
    v10 = v8;
    v11 = swift_slowAlloc(22, -1);
    v12 = swift_slowAlloc(64, -1);
    v33 = v12;
    *(_DWORD *)v11 = 136315394;
    swift_bridgeObjectRetain(a2);
    v32 = sub_10003E8EC(a1, a2, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v11 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v11 + 12) = 2080;
    v13 = sub_10001E724(0, (unint64_t *)&qword_10081E630, NSObject_ptr);
    swift_bridgeObjectRetain(a3);
    v15 = Dictionary.description.getter(v14, &type metadata for String, v13, &protocol witness table for String);
    v17 = (CHWorkoutDetailHeartRateTableViewCell *)v16;
    swift_bridgeObjectRelease(a3, v16, v18, v19, v20, v21, v22, v23);
    v32 = sub_10003E8EC(v15, (unint64_t)v17, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v11 + 14);
    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease(v17, v24, v25, v26, v27, v28, v29, v30);
    _os_log_impl((void *)&_mh_execute_header, v10, v9, "[Core Analytics] Sent analytics. eventName=%s event=%s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v12, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  return a3;
}

void sub_1005CF660()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  NSURL *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - v12;
  v14 = OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_player;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_player]
    && !*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_playerLayer])
  {
    v34 = OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_playerLayer;
    v35 = v11;
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(ObjectType);
    v16 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v17 = String._bridgeToObjectiveC()();
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v16, "URLForResource:withExtension:", v17, v18);

    if (v19)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v19);

      v20 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v21 = v35;
      v20(v5, v9, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v21);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v21) != 1)
      {
        v20(v13, v5, v21);
        URL._bridgeToObjectiveC()(v22);
        v24 = v23;
        v25 = objc_msgSend((id)objc_opt_self(AVAsset), "assetWithURL:", v23);

        v26 = objc_msgSend(objc_allocWithZone((Class)AVPlayerItem), "initWithAsset:", v25);
        v27 = objc_msgSend(objc_allocWithZone((Class)AVPlayer), "init");
        objc_msgSend(v27, "_setParticipatesInAudioSession:", 0);
        objc_msgSend(v27, "setPreventsDisplaySleepDuringVideoPlayback:", 0);
        objc_msgSend(v27, "setAllowsExternalPlayback:", 0);
        objc_msgSend(v27, "replaceCurrentItemWithPlayerItem:", v26);
        v28 = objc_msgSend((id)objc_opt_self(AVPlayerLayer), "playerLayerWithPlayer:", v27);
        v29 = *(void **)&v1[v14];
        *(_QWORD *)&v1[v14] = v27;
        v30 = v27;

        v31 = *(void **)&v1[v34];
        *(_QWORD *)&v1[v34] = v28;
        v32 = v28;

        v33 = objc_msgSend(v1, "layer");
        objc_msgSend(v33, "addSublayer:", v32);

        (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v21);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v35);
    }
    sub_10012089C((uint64_t)v5);
  }
}

void sub_1005CF9E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v1 = OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_player;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_player);
  if (v2)
    objc_msgSend(v2, "replaceCurrentItemWithPlayerItem:", 0);
  v3 = OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_playerLayer;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView_playerLayer);
  if (v4)
  {
    objc_msgSend(v4, "setPlayer:", 0);
    v5 = *(void **)(v0 + v3);
    if (v5)
      objc_msgSend(v5, "removeFromSuperlayer");
  }
  v6 = *(void **)(v0 + v1);
  *(_QWORD *)(v0 + v1) = 0;

  v7 = *(void **)(v0 + v3);
  *(_QWORD *)(v0 + v3) = 0;

}

id sub_1005CFCA4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySetupThreeRingsOnboardingVideoView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivitySetupThreeRingsOnboardingVideoView()
{
  return objc_opt_self(_TtC10FitnessApp42ActivitySetupThreeRingsOnboardingVideoView);
}

void sub_1005CFD2C(double a1, double a2, __n128 a3, double a4, __n128 a5)
{
  a3.n128_u64[0] = 18.0;
  a5.n128_u64[0] = 18.0;
  qword_10086B028 = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)(14.0, 18.0, a3, 18.0, a5, 18.0, 18.0);
}

uint64_t *sub_1005CFD64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)v4 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)v4 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain(v12);
  }
  swift_retain(v15);
  return v4;
}

uint64_t sub_1005CFE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
}

uint64_t sub_1005CFE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain(v11);
  swift_retain(v14);
  return a1;
}

uint64_t sub_1005CFEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  v16 = v13[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain(v15);
  swift_release(v16);
  return a1;
}

uint64_t sub_1005CFF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1005CFFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = *(int *)(a3 + 24);
  v14 = *(_QWORD *)(a1 + v13 + 8);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  swift_release(v14);
  return a1;
}

uint64_t sub_1005D006C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005D0078);
}

uint64_t sub_1005D0078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1005D00F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005D0100);
}

uint64_t sub_1005D0100(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AnimatingOpenGoalTimeRing(uint64_t a1)
{
  uint64_t result;

  result = qword_10083CF38;
  if (!qword_10083CF38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnimatingOpenGoalTimeRing);
  return result;
}

uint64_t sub_1005D01B4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100649030;
    v4[2] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1005D0234(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BD844, 1);
}

void sub_1005D0244(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double (*v8)(char *);
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  uint64_t v16;
  uint64_t v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ElapsedTimeFormatter(0);
  v8 = *(double (**)(char *))(a1 + *(int *)(type metadata accessor for AnimatingOpenGoalTimeRing(0) + 24));
  v9 = sub_100047110(&qword_1008246B0);
  TimelineView.Context.date.getter(v9);
  v10 = v8(v7);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v12 = Double.smoothedForDisplay.getter(v11, v10);
  v13 = static ElapsedTimeFormatter.stringFromElapsedTime(_:trimDoubleLeadingZero:compactHours:)(0, 0, floor(v12));
  v15 = v14;
  *a2 = static Alignment.center.getter(v13);
  a2[1] = v16;
  v17 = sub_100047110(&qword_10083CF88);
  sub_1005D0380(a1, v13, (uint64_t)v15, (double *)((char *)a2 + *(int *)(v17 + 44)));
  swift_bridgeObjectRelease(v15, v18, v19, v20, v21, v22, v23, v24);
}

void sub_1005D0380(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, double *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double (*v20)(char *);
  uint64_t v21;
  double v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t *v47;
  uint64_t v48;
  double *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double *v60;
  _OWORD v61[3];

  v53 = a2;
  v54 = a3;
  v60 = a4;
  v5 = type metadata accessor for MetricText(0);
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100047110(&qword_1008246D8);
  __chkstk_darwin(v55);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_100047110(&qword_10083CF90);
  __chkstk_darwin(v56);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v59 = (uint64_t)&v51 - v13;
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for AnimatingOpenGoalTimeRing(0);
  v19 = *(int *)(v18 + 24);
  v52 = a1;
  v20 = *(double (**)(char *))(a1 + v19);
  v21 = sub_100047110(&qword_1008246B0);
  TimelineView.Context.date.getter(v21);
  v22 = v20(v17);
  v23.n128_f64[0] = (*(double (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v24 = _HKWorkoutGoalType.color.getter(0, v23);
  v25 = Color.init(_:)(v24);
  v26 = Color.opacity(_:)(0.0);
  v27 = swift_release(v25);
  v28 = _HKWorkoutGoalType.color.getter(0, v27);
  v29 = Color.init(_:)(v28);
  if (qword_10081E0A8 != -1)
    swift_once(&qword_10081E0A8, sub_1005CFD2C);
  v30 = qword_10086B028;
  v31 = (uint64_t *)(v52 + *(int *)(v18 + 20));
  v32 = *v31;
  v33 = v31[1];
  swift_bridgeObjectRetain(v33);
  v34 = v54;
  swift_bridgeObjectRetain(v54);
  v35 = MetricText.init(value:unit:description:stale:includesSlashes:)(v53, v34, 0, 0, v32, v33, 0, 0);
  if (qword_10081D528 != -1)
    v35 = swift_once(&qword_10081D528, sub_10010A2B0);
  v36 = qword_100869CC8;
  v37 = static Alignment.center.getter(v35);
  _FrameLayout.init(width:height:alignment:)(v61, v36, 0, v36, 0, v37, v38);
  v40 = v57;
  v39 = v58;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v9, v7, v58);
  v41 = &v9[*(int *)(v55 + 36)];
  v42 = v61[1];
  *(_OWORD *)v41 = v61[0];
  *((_OWORD *)v41 + 1) = v42;
  *((_OWORD *)v41 + 2) = v61[2];
  v43.n128_f64[0] = (*(double (**)(char *, uint64_t))(v40 + 8))(v7, v39);
  v44 = _HKWorkoutGoalType.color.getter(0, v43);
  v45 = Color.init(_:)(v44);
  KeyPath = swift_getKeyPath(&unk_100649098);
  sub_100021CC0((uint64_t)v9, (uint64_t)v11, &qword_1008246D8);
  v47 = (uint64_t *)&v11[*(int *)(v56 + 36)];
  *v47 = KeyPath;
  v47[1] = v45;
  sub_10001BE90((uint64_t)v9, &qword_1008246D8);
  v48 = v59;
  sub_1005D1258((uint64_t)v11, v59);
  sub_100021CC0(v48, (uint64_t)v11, &qword_10083CF90);
  v49 = v60;
  *v60 = v22 / 60.0;
  *((_QWORD *)v49 + 1) = v26;
  *((_QWORD *)v49 + 2) = v29;
  *((_QWORD *)v49 + 3) = v30;
  v50 = sub_100047110(&qword_10083CF98);
  sub_100021CC0((uint64_t)v11, (uint64_t)v49 + *(int *)(v50 + 48), &qword_10083CF90);
  swift_retain(v26);
  swift_retain(v29);
  sub_10001BE90(v48, &qword_10083CF90);
  sub_10001BE90((uint64_t)v11, &qword_10083CF90);
  swift_release(v29);
  swift_release(v26);
}

uint64_t sub_1005D0768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v27[2];

  v3 = v2;
  v27[1] = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PeriodicTimelineSchedule(0);
  v27[0] = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)v27 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, v3, v7, v15);
  PeriodicTimelineSchedule.init(from:by:)(v10, 1.0);
  sub_1005D0974(v3, (uint64_t)v6);
  v18 = *(unsigned __int8 *)(v4 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = swift_allocObject(&unk_1007AD018, v19 + v5, v18 | 7);
  sub_1005D0A54((uint64_t)v6, v20 + v19);
  v21 = v27[0];
  (*(void (**)(char *, char *, uint64_t))(v27[0] + 16))(v13, v17, v11);
  v22 = swift_allocObject(&unk_1007AD040, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_1005D0A98;
  *(_QWORD *)(v22 + 24) = v20;
  v23 = sub_100047110(&qword_10083CF78);
  v24 = sub_1005D1208();
  v25 = sub_100028384(&qword_10083CF80, &qword_10083CF78, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  TimelineView<>.init(_:content:)(v13, sub_1005D1200, v22, v11, v23, v24, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v17, v11);
}

uint64_t sub_1005D0974(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AnimatingOpenGoalTimeRing(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005D09B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v1 = type metadata accessor for AnimatingOpenGoalTimeRing(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + *(int *)(v1 + 20) + 8), v9, v10, v11, v12, v13, v14, v15);
  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 24) + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005D0A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AnimatingOpenGoalTimeRing(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1005D0A98(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AnimatingOpenGoalTimeRing(0) - 8) + 80);
  sub_1005D0244(v1 + ((v3 + 16) & ~v3), a1);
}

void *sub_1005D0AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D1>)
{
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[400];

  v9 = GeometryProxy.size.getter(a1);
  GeometryProxy.size.getter(v10);
  if (v12 >= v9)
    v13 = v9;
  else
    v13 = v12;
  v14 = v13 - a5;
  v15 = GeometryProxy.size.getter(v11) * 0.5;
  GeometryProxy.size.getter(v16);
  v18 = v17 * 0.5;
  v20 = static Alignment.center.getter(v19);
  v22 = v21;
  sub_1005D0BB4(a2, a3, (uint64_t)v24, v15, v18, v14, a5);
  *a4 = v20;
  a4[1] = v22;
  return memcpy(a4 + 2, v24, 0x190uLL);
}

void sub_1005D0BB4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D4>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  int v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  SEL v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  SEL v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  SEL v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  CHWorkoutDetailHeartRateTableViewCell *v84;
  uint64_t v85;
  uint64_t v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  CHWorkoutDetailHeartRateTableViewCell *v102;
  unsigned __int8 v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE v106[16];
  double v107;
  double v108;
  double v109;
  _BYTE v110[16];
  double v111;
  double v112;
  double v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  _QWORD v133[2];
  char v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  double v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  char v153;
  __int128 v154;
  _QWORD v155[4];
  unsigned __int8 v156;
  _QWORD v157[5];
  _QWORD v158[5];
  _QWORD v159[4];
  unsigned __int8 v160;
  _QWORD v161[5];
  uint64_t v162;
  char v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  char v171;
  __int128 v172;

  v111 = a4;
  v112 = a5;
  v113 = a6;
  Path.init(_:)(v155, sub_1005D1434, v110);
  v104 = v155[1];
  v105 = v155[0];
  v100 = v155[3];
  v101 = v155[2];
  v103 = v156;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v157, 0, 0, &_swiftEmptyArrayStorage, a7, 10.0, 0.0);
  v95 = v157[1];
  v96 = v157[0];
  v102 = (CHWorkoutDetailHeartRateTableViewCell *)v157[3];
  v93 = v157[4];
  v94 = v157[2];
  v14 = sub_100047110((uint64_t *)&unk_10082BDC0);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v15 + 32) = a1;
  *(_QWORD *)(v15 + 40) = a2;
  v133[0] = v15;
  specialized Array._endMutation()(v15);
  v16 = v133[0];
  swift_retain(a1);
  swift_retain(a2);
  Gradient.init(colors:)(v16);
  AngularGradient.init(gradient:center:startAngle:endAngle:)(v158, 0.5, 0.5, -1.57079633, 0.0);
  v87 = (CHWorkoutDetailHeartRateTableViewCell *)v158[0];
  v91 = v158[2];
  v92 = v158[1];
  v89 = v158[4];
  v90 = v158[3];
  v107 = a4;
  v108 = a5;
  v109 = a6;
  Path.init(_:)(v159, sub_1005D1444, v106);
  v85 = v159[1];
  v86 = v159[0];
  v98 = v159[3];
  v99 = v159[2];
  v97 = v160;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v161, 0, 0, &_swiftEmptyArrayStorage, a7, 10.0, 0.0);
  v17 = v161[0];
  v18 = v161[1];
  v19 = v161[2];
  v84 = (CHWorkoutDetailHeartRateTableViewCell *)v161[3];
  v88 = v161[4];
  swift_retain(a2);
  v83 = static HorizontalAlignment.center.getter(v20, v21, v22, v23, v24);
  v25 = static Alignment.center.getter(v83);
  v27 = _FrameLayout.init(width:height:alignment:)(&v162, *(_QWORD *)&a7, 0, 0, 1, v25, v26);
  v28 = v162;
  v29 = v163;
  v30 = v165;
  v80 = v166;
  v81 = v164;
  v82 = v167;
  v31 = static Edge.Set.top.getter(v27);
  v32 = Edge.Set.init(rawValue:)(0);
  v33 = v32;
  v34 = Edge.Set.init(rawValue:)(v32);
  if (Edge.Set.init(rawValue:)(v34 & v31) != v31)
    LOBYTE(v33) = Edge.Set.init(rawValue:)(v33 | v31);
  v35 = EdgeInsets.init(_all:)(a7 * -0.5);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v118 = 1;
  v117 = v29;
  v116 = v30;
  v115 = 0;
  v114 = 1;
  swift_retain(a2);
  v43 = static Alignment.center.getter(v42);
  _FrameLayout.init(width:height:alignment:)(&v168, *(_QWORD *)&a6, 0, *(_QWORD *)&a6, 0, v43, v44);
  v45 = v168;
  v46 = v169;
  v47 = v170;
  v48 = v171;
  v49 = v172;
  v120 = v169;
  v119 = v171;
  v121 = (unint64_t)v83;
  LOBYTE(v122) = 1;
  *((_QWORD *)&v122 + 1) = v28;
  LOBYTE(v123) = v29;
  *((_QWORD *)&v123 + 1) = v81;
  LOBYTE(v124) = v30;
  *((_QWORD *)&v124 + 1) = v80;
  *(_QWORD *)&v125 = v82;
  BYTE8(v125) = v33;
  *(double *)&v126 = v35;
  *((_QWORD *)&v126 + 1) = v37;
  *(_QWORD *)&v127 = v39;
  *((_QWORD *)&v127 + 1) = v41;
  LOBYTE(v128) = 0;
  *((_QWORD *)&v128 + 1) = a2;
  *(_QWORD *)&v129 = 0;
  BYTE8(v129) = 1;
  *(_QWORD *)&v130 = v168;
  BYTE8(v130) = v169;
  *(_QWORD *)&v131 = v170;
  BYTE8(v131) = v171;
  v132 = v172;
  v50 = v125;
  v51 = v126;
  v52 = v128;
  *(_OWORD *)(a3 + 304) = v127;
  *(_OWORD *)(a3 + 320) = v52;
  *(_OWORD *)(a3 + 272) = v50;
  *(_OWORD *)(a3 + 288) = v51;
  v53 = v121;
  v54 = v122;
  v55 = v124;
  *(_OWORD *)(a3 + 240) = v123;
  *(_OWORD *)(a3 + 256) = v55;
  *(_OWORD *)(a3 + 208) = v53;
  *(_OWORD *)(a3 + 224) = v54;
  v56 = v129;
  v57 = v130;
  v58 = v132;
  *(_OWORD *)(a3 + 368) = v131;
  *(_OWORD *)(a3 + 384) = v58;
  *(_OWORD *)(a3 + 336) = v56;
  *(_OWORD *)(a3 + 352) = v57;
  *(_QWORD *)a3 = v105;
  *(_QWORD *)(a3 + 8) = v104;
  *(_QWORD *)(a3 + 16) = v101;
  *(_QWORD *)(a3 + 24) = v100;
  *(_BYTE *)(a3 + 32) = v103;
  *(_QWORD *)(a3 + 40) = v96;
  *(_QWORD *)(a3 + 48) = v95;
  *(_QWORD *)(a3 + 56) = v94;
  *(_QWORD *)(a3 + 64) = v102;
  *(_QWORD *)(a3 + 72) = v93;
  *(_QWORD *)(a3 + 80) = v87;
  *(_QWORD *)(a3 + 88) = v92;
  *(_QWORD *)(a3 + 96) = v91;
  *(_QWORD *)(a3 + 104) = v90;
  *(_QWORD *)(a3 + 112) = v89;
  *(_QWORD *)(a3 + 120) = v86;
  *(_QWORD *)(a3 + 128) = v85;
  *(_QWORD *)(a3 + 136) = v99;
  *(_QWORD *)(a3 + 144) = v98;
  *(_BYTE *)(a3 + 152) = v97;
  *(_QWORD *)(a3 + 160) = v17;
  *(_QWORD *)(a3 + 168) = v18;
  *(_QWORD *)(a3 + 176) = v19;
  *(_QWORD *)(a3 + 184) = v84;
  *(_QWORD *)(a3 + 192) = v88;
  *(_QWORD *)(a3 + 200) = a2;
  v133[0] = v83;
  v133[1] = 0;
  v134 = 1;
  v135 = v28;
  v136 = v29;
  v137 = v81;
  v138 = v30;
  v139 = v80;
  v140 = v82;
  v141 = v33;
  v142 = v35;
  v143 = v37;
  v144 = v39;
  v145 = v41;
  v146 = 0;
  v147 = a2;
  v148 = 0;
  v149 = 1;
  v150 = v45;
  v151 = v46;
  v152 = v47;
  v153 = v48;
  v154 = v49;
  sub_10019A600(v105, v104, v101, v100, v103);
  swift_bridgeObjectRetain(v102);
  swift_bridgeObjectRetain(v87);
  sub_10019A600(v86, v85, v99, v98, v97);
  swift_bridgeObjectRetain(v84);
  swift_retain(a2);
  sub_1005D14B0((uint64_t)&v121);
  sub_1005D14D8((uint64_t)v133);
  sub_10019A618(v86, v85, v99, v98, v97);
  swift_release(a2);
  swift_bridgeObjectRelease(v84, v59, v60, v61, v62, v63, v64, v65);
  sub_10019A618(v105, v104, v101, v100, v103);
  swift_bridgeObjectRelease(v87, v66, v67, v68, v69, v70, v71, v72);
  swift_bridgeObjectRelease(v102, v73, v74, v75, v76, v77, v78, v79);
}

uint64_t sub_1005D1114@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v3 = *(double *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = swift_allocObject(&unk_1007AD0F0, 48, 7);
  *(double *)(v7 + 16) = v3;
  *(_QWORD *)(v7 + 24) = v4;
  *(_QWORD *)(v7 + 32) = v5;
  *(_QWORD *)(v7 + 40) = v6;
  v8 = v3 * 360.0 * 0.0174532925;
  swift_retain(v4);
  swift_retain(v5);
  v10 = static UnitPoint.center.getter(v9);
  v12 = v11;
  result = static Animation.linear(duration:)(1.0);
  *(_QWORD *)a1 = sub_1005D1424;
  *(_QWORD *)(a1 + 8) = v7;
  *(double *)(a1 + 16) = v8;
  *(double *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = result;
  *(double *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = 1;
  return result;
}

uint64_t sub_1005D11DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005D1200(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A1B4C(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1005D1208()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100824698;
  if (!qword_100824698)
  {
    v1 = type metadata accessor for PeriodicTimelineSchedule(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for PeriodicTimelineSchedule, v1);
    atomic_store(result, (unint64_t *)&qword_100824698);
  }
  return result;
}

uint64_t sub_1005D1258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10083CF90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *assignWithCopy for InfinitelyAnimatableProgressRing(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[3] = a2[3];
  return a1;
}

_QWORD *assignWithTake for InfinitelyAnimatableProgressRing(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  *a1 = *(_QWORD *)a2;
  swift_release(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  a1[3] = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for InfinitelyAnimatableProgressRing()
{
  return &type metadata for InfinitelyAnimatableProgressRing;
}

unint64_t sub_1005D136C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083CFA0;
  if (!qword_10083CFA0)
  {
    v1 = sub_100007050(&qword_10083CFA8);
    sub_100028384(&qword_10083CF80, &qword_10083CF78, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> TimelineView<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083CFA0);
  }
  return result;
}

uint64_t sub_1005D13E8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BD86C, 1);
}

uint64_t sub_1005D13F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

void *sub_1005D1424@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1005D0AE4(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2, *(double *)(v2 + 40));
}

uint64_t sub_1005D1434(__n128 a1, __n128 a2)
{
  a1.n128_u64[0] = 0xBFF921FB54442D18;
  a2.n128_u64[0] = 0;
  return sub_1005D1454(a1, a2);
}

uint64_t sub_1005D1444(__n128 a1, __n128 a2)
{
  a2.n128_u64[0] = 0x4012D97C7F3321D2;
  a1.n128_u64[0] = 0;
  return sub_1005D1454(a1, a2);
}

uint64_t sub_1005D1454(__n128 a1, __n128 a2)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  _QWORD v7[6];

  v3 = a2.n128_f64[0];
  v4 = a1.n128_f64[0];
  a1.n128_u64[0] = *(_QWORD *)(v2 + 16);
  a2.n128_u64[0] = *(_QWORD *)(v2 + 24);
  v5 = *(double *)(v2 + 32) * 0.5;
  v7[0] = 0x3FF0000000000000;
  v7[1] = 0;
  v7[2] = 0;
  v7[3] = 0x3FF0000000000000;
  v7[4] = 0;
  v7[5] = 0;
  return Path.addArc(center:radius:startAngle:endAngle:clockwise:transform:)(0, v7, a1, a2, v5, v4, v3);
}

uint64_t sub_1005D14B0(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 120));
  return a1;
}

uint64_t sub_1005D14D8(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 120));
  return a1;
}

unint64_t sub_1005D1504()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083CFB0;
  if (!qword_10083CFB0)
  {
    v1 = sub_100007050(&qword_10083CFB8);
    sub_1005D1570();
    sub_1003AC01C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083CFB0);
  }
  return result;
}

unint64_t sub_1005D1570()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083CFC0;
  if (!qword_10083CFC0)
  {
    v1 = sub_100007050(&qword_10083CFC8);
    sub_1005D15F4();
    sub_100028384(&qword_10083CFF0, &qword_10083CFF8, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083CFC0);
  }
  return result;
}

unint64_t sub_1005D15F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083CFD0;
  if (!qword_10083CFD0)
  {
    v1 = sub_100007050(&qword_10083CFD8);
    sub_100028384(&qword_10083CFE0, &qword_10083CFE8, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083CFD0);
  }
  return result;
}

void sub_1005D1678(uint64_t a1)
{
  int64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1001214C4(0, v1, 0);
    v4 = sub_1004D3554(a1);
    v5 = 0;
    v6 = a1 + 64;
    v20 = v1;
    v21 = v3;
    v22 = a1 + 64;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(a1 + 32))
    {
      v9 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v6 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_23;
      if (*(_DWORD *)(a1 + 36) != v3)
        goto LABEL_24;
      v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v4);
      v11 = v10[1];
      v23 = *v10;
      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain(v11);
      if (v13 >= v12 >> 1)
        sub_1001214C4(v12 > 1, v13 + 1, 1);
      _swiftEmptyArrayStorage[2] = v13 + 1;
      v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v23;
      v14[5] = v11;
      v7 = 1 << *(_BYTE *)(a1 + 32);
      if (v4 >= v7)
        goto LABEL_25;
      v6 = a1 + 64;
      v15 = *(_QWORD *)(v22 + 8 * v9);
      if ((v15 & (1 << v4)) == 0)
        goto LABEL_26;
      v3 = v21;
      if (*(_DWORD *)(a1 + 36) != v21)
        goto LABEL_27;
      v16 = v15 & (-2 << (v4 & 0x3F));
      if (v16)
      {
        v7 = __clz(__rbit64(v16)) | v4 & 0xFFFFFFFFFFFFFFC0;
        v8 = v20;
      }
      else
      {
        v17 = v9 + 1;
        v18 = (unint64_t)(v7 + 63) >> 6;
        v8 = v20;
        if (v9 + 1 < v18)
        {
          v19 = *(_QWORD *)(v22 + 8 * v17);
          if (v19)
          {
LABEL_20:
            v7 = __clz(__rbit64(v19)) + (v17 << 6);
          }
          else
          {
            while (v18 - 2 != v9)
            {
              v19 = *(_QWORD *)(a1 + 80 + 8 * v9++);
              if (v19)
              {
                v17 = v9 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      ++v5;
      v4 = v7;
      if (v5 == v8)
        return;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

uint64_t sub_1005D1880()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1006491E8);
  v2 = swift_getKeyPath(&unk_100649210);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

id sub_1005D18F0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  NSString v7;
  Class isa;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  void *v15;
  os_log_type_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  id v26;

  v5 = sub_1005D2A70();
  v6 = *(void **)(v2 + 24);
  v7 = String._bridgeToObjectiveC()();
  sub_100047110((uint64_t *)&unk_100828950);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v26 = 0;
  v9 = objc_msgSend(v6, "unifiedContactWithIdentifier:keysToFetch:error:", v7, isa, &v26, swift_bridgeObjectRelease(v5).n128_f64[0]);

  v10 = v26;
  if (!v9)
  {
    v11 = v10;
    v12 = _convertNSErrorToError(_:)(v10);

    v13 = swift_willThrow();
    v14 = static os_log_type_t.error.getter(v13);
    v15 = (void *)HKLogActivity;
    v16 = v14;
    if (os_log_type_enabled(HKLogActivity, v14))
    {
      swift_bridgeObjectRetain(a2);
      swift_errorRetain(v12);
      swift_bridgeObjectRetain(a2);
      swift_errorRetain(v12);
      v17 = v15;
      v18 = swift_slowAlloc(22, -1);
      v19 = (uint64_t *)swift_slowAlloc(8, -1);
      v20 = (void *)swift_slowAlloc(32, -1);
      v26 = v20;
      *(_DWORD *)v18 = 136315394;
      swift_bridgeObjectRetain(a2);
      v24 = sub_10003E8EC(a1, a2, (uint64_t *)&v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v18 + 4);
      swift_bridgeObjectRelease_n(a2, 3);
      *(_WORD *)(v18 + 12) = 2112;
      swift_errorRetain(v12);
      v21 = _swift_stdlib_bridgeErrorToNSError(v12);
      v24 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v18 + 14);
      *v19 = v21;
      swift_errorRelease(v12);
      swift_errorRelease(v12);
      _os_log_impl((void *)&_mh_execute_header, v17, v16, "Failed to fetch contact for identifier: %s with error: %@", (uint8_t *)v18, 0x16u);
      v22 = sub_100047110(&qword_10081E648);
      swift_arrayDestroy(v19, 1, v22);
      swift_slowDealloc(v19, -1, -1);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v18, -1, -1);
      swift_errorRelease(v12);

    }
    else
    {
      swift_errorRelease(v12);
    }
    return 0;
  }
  return v9;
}

void sub_1005D1BC4(_QWORD *a1, id *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  id v72;
  _QWORD *v73;

  v72 = *a2;
  v3 = objc_msgSend(*a2, "phoneNumbers");
  v4 = sub_100047110(&qword_10083D190);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  v61 = v4;
  if ((unint64_t)v5 >> 62)
    goto LABEL_25;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v71 = a1;
  if (!v6)
  {
LABEL_29:
    v33 = objc_msgSend(v72, "emailAddresses", swift_bridgeObjectRelease(v5).n128_f64[0]);
    v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v61);

    if ((unint64_t)v34 >> 62)
      goto LABEL_53;
    v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v35)
    {
LABEL_57:
      swift_bridgeObjectRelease(v34);
      return;
    }
LABEL_31:
    v66 = v34;
    v68 = v34 & 0xC000000000000001;
    v36 = 4;
    v64 = v35;
    while (1)
    {
      v39 = v36 - 4;
      if (v68)
      {
        v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36 - 4, v34);
        v41 = v36 - 3;
        if (__OFADD__(v39, 1))
          goto LABEL_50;
      }
      else
      {
        v40 = *(id *)(v34 + 8 * v36);
        v41 = v36 - 3;
        if (__OFADD__(v39, 1))
        {
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          if (v34 < 0)
            v60 = v34;
          else
            v60 = v34 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v34);
          v35 = _CocoaArrayWrapper.endIndex.getter(v60);
          swift_bridgeObjectRelease(v34);
          if (!v35)
            goto LABEL_57;
          goto LABEL_31;
        }
      }
      v70 = v41;
      v42 = v40;
      v43 = objc_msgSend(v40, "value");
      v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      v46 = v45;

      v47 = v72;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
      v73 = (_QWORD *)*a1;
      v34 = (uint64_t)v73;
      *a1 = 0x8000000000000000;
      v50 = sub_100438F74(v44, v46);
      v51 = *(_QWORD *)(v34 + 16);
      v52 = (v49 & 1) == 0;
      v53 = v51 + v52;
      if (__OFADD__(v51, v52))
        goto LABEL_51;
      a1 = v49;
      if (*(_QWORD *)(v34 + 24) >= v53)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v56 = v73;
          if ((v49 & 1) != 0)
            goto LABEL_32;
        }
        else
        {
          v34 = (uint64_t)&v73;
          sub_100404BD4();
          v56 = v73;
          if ((a1 & 1) != 0)
            goto LABEL_32;
        }
      }
      else
      {
        sub_1003FE3FC(v53, isUniquelyReferenced_nonNull_native);
        v34 = (uint64_t)v73;
        v54 = sub_100438F74(v44, v46);
        if ((a1 & 1) != (v55 & 1))
          goto LABEL_58;
        v50 = v54;
        v56 = v73;
        if ((a1 & 1) != 0)
        {
LABEL_32:
          v37 = v56[7];

          *(_QWORD *)(v37 + 8 * v50) = v47;
          goto LABEL_33;
        }
      }
      v56[(v50 >> 6) + 8] |= 1 << v50;
      v57 = (uint64_t *)(v56[6] + 16 * v50);
      *v57 = v44;
      v57[1] = v46;
      *(_QWORD *)(v56[7] + 8 * v50) = v47;
      v58 = v56[2];
      v30 = __OFADD__(v58, 1);
      v59 = v58 + 1;
      if (v30)
        goto LABEL_52;
      v56[2] = v59;
      swift_bridgeObjectRetain(v46);
LABEL_33:
      a1 = v71;
      v38 = *v71;
      *v71 = v56;

      swift_bridgeObjectRelease(v46);
      swift_bridgeObjectRelease(v38);
      ++v36;
      v34 = v66;
      if (v70 == v64)
        goto LABEL_57;
    }
  }
LABEL_3:
  v63 = v5;
  v65 = v5 & 0xC000000000000001;
  v7 = 4;
  v62 = v6;
  while (1)
  {
    v10 = v7 - 4;
    if (v65)
    {
      v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v5);
      v12 = v7 - 3;
      if (__OFADD__(v10, 1))
        goto LABEL_22;
    }
    else
    {
      v11 = *(id *)(v5 + 8 * v7);
      v12 = v7 - 3;
      if (__OFADD__(v10, 1))
      {
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        if (v5 < 0)
          v32 = v5;
        else
          v32 = v5 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v5);
        v6 = _CocoaArrayWrapper.endIndex.getter(v32);
        swift_bridgeObjectRelease(v5);
        v71 = a1;
        if (!v6)
          goto LABEL_29;
        goto LABEL_3;
      }
    }
    v67 = v11;
    v69 = v12;
    v13 = objc_msgSend(v11, "value");
    v14 = objc_msgSend(v13, "stringValue");
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v16 = v15;

    v17 = v72;
    v18 = swift_isUniquelyReferenced_nonNull_native(*a1);
    v73 = (_QWORD *)*a1;
    v19 = v73;
    *a1 = 0x8000000000000000;
    v21 = sub_100438F74(v5, v16);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
      goto LABEL_23;
    a1 = v20;
    if (v19[3] < v24)
      break;
    if ((v18 & 1) != 0)
    {
      v27 = v73;
      if ((v20 & 1) != 0)
        goto LABEL_4;
    }
    else
    {
      sub_100404BD4();
      v27 = v73;
      if ((a1 & 1) != 0)
      {
LABEL_4:
        v8 = v27[7];

        *(_QWORD *)(v8 + 8 * v21) = v17;
        goto LABEL_5;
      }
    }
LABEL_18:
    v27[(v21 >> 6) + 8] |= 1 << v21;
    v28 = (uint64_t *)(v27[6] + 16 * v21);
    *v28 = v5;
    v28[1] = v16;
    *(_QWORD *)(v27[7] + 8 * v21) = v17;
    v29 = v27[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_24;
    v27[2] = v31;
    swift_bridgeObjectRetain(v16);
LABEL_5:
    a1 = v71;
    v9 = *v71;
    *v71 = v27;

    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v9);
    ++v7;
    v5 = v63;
    if (v69 == v62)
      goto LABEL_29;
  }
  sub_1003FE3FC(v24, v18);
  v25 = sub_100438F74(v5, v16);
  if ((a1 & 1) == (v26 & 1))
  {
    v21 = v25;
    v27 = v73;
    if ((a1 & 1) != 0)
      goto LABEL_4;
    goto LABEL_18;
  }
LABEL_58:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1005D20E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  void *v20;
  os_log_type_t v21;
  id v22;
  NSObject *v23;
  uint8_t *v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v10 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
    v11 = (uint64_t *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = (uint64_t *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      if (v10 < 1)
      {
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain(a1);
      v12 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
        else
          v13 = *(id *)(a1 + 8 * v12 + 32);
        v14 = v13;
        ++v12;
        v30 = v13;
        sub_1005D239C((uint64_t *)&v30, v11, a4, a5);

      }
      while (v10 != v12);
      swift_bridgeObjectRelease(a1);
      goto LABEL_10;
    }
  }
  if (!a2)
  {
LABEL_10:
    swift_beginAccess(v11, &v30, 0, 0);
    v15 = *v11;
    KeyPath = swift_getKeyPath(&unk_1006491E8);
    v17 = swift_getKeyPath(&unk_100649210);
    v29 = v15;
    swift_bridgeObjectRetain(v15);
    swift_retain(a4);
    static Published.subscript.setter(&v29, a4, KeyPath, v17);
    return;
  }
  v28 = a2;
  v19 = static os_log_type_t.default.getter(v28);
  v20 = (void *)HKLogActivity;
  v21 = v19;
  if (os_log_type_enabled(HKLogActivity, v19))
  {
    v22 = v28;
    v23 = v20;
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    v25 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v24 = 138412290;
    v30 = v22;
    v26 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v24 + 4);
    *v25 = a2;

    _os_log_impl((void *)&_mh_execute_header, v23, v21, "ReachableContactDataSource fetching destinations failed: %@", v24, 0xCu);
    v27 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v25, 1, v27);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);

  }
  else
  {

  }
}

void sub_1005D239C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  double v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];
  id v43;

  v7 = *a1;
  v8 = (uint64_t *)(*a1 + OBJC_IVAR___CHReachableDestination_destination);
  v10 = *v8;
  v9 = v8[1];
  swift_beginAccess(a2, v42, 0, 0);
  if (*(_QWORD *)(*a2 + 16) <= 0xAuLL)
  {
    v11 = *(_QWORD *)(a3 + 16);
    swift_bridgeObjectRetain(v9);
    if ((sub_1002D41B4(v10, v9, v11) & 1) != 0 || !*(_QWORD *)(a4 + 16))
    {
      swift_bridgeObjectRelease(v9);
    }
    else
    {
      swift_bridgeObjectRetain(v9);
      v12 = sub_100438F74(v10, v9);
      if ((v13 & 1) != 0)
      {
        v14 = *(id *)(*(_QWORD *)(a4 + 56) + 8 * v12);
        v15 = objc_msgSend(v14, "identifier", swift_bridgeObjectRelease(v9).n128_f64[0]);
        v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        v18 = v17;

        LOBYTE(v15) = sub_1005D3030(v16, v18);
        swift_bridgeObjectRelease(v18);
        if ((v15 & 1) != 0)
        {
          swift_bridgeObjectRelease(v9);

        }
        else
        {
          swift_beginAccess(a2, v41, 0, 0);
          v19 = *a2;
          v20 = *(_QWORD *)(*a2 + 16);
          if (v20)
          {
            v38 = v10;
            swift_bridgeObjectRetain_n(v19, 2);
            v37 = v14;
            v43 = v14;
            v39 = v19;
            v21 = (uint64_t *)(v19 + 72);
            while (1)
            {
              v22 = *(v21 - 3);
              v24 = *(v21 - 1);
              v23 = *v21;
              v25 = (id)*(v21 - 5);
              swift_bridgeObjectRetain(v22);
              swift_bridgeObjectRetain(v24);
              *(_QWORD *)&v26 = swift_bridgeObjectRetain(v23).n128_u64[0];
              if (objc_msgSend(v25, "isEqual:", v43, v26))
                break;
              swift_bridgeObjectRelease(v23);
              swift_bridgeObjectRelease(v24);
              swift_bridgeObjectRelease(v22);

              v21 += 6;
              if (!--v20)
              {

                swift_bridgeObjectRelease_n(v39, 2);
                v14 = v37;
                v10 = v38;
                goto LABEL_15;
              }
            }
            swift_bridgeObjectRelease(v23);
            swift_bridgeObjectRelease(v24);
            swift_bridgeObjectRelease(v22);

            swift_bridgeObjectRelease(v9);
            v36 = v43;

            swift_bridgeObjectRelease_n(v39, 2);
          }
          else
          {
LABEL_15:
            v27 = *(_QWORD *)(v7 + OBJC_IVAR___CHReachableDestination_preferredServiceIdentifier + 8);
            v43 = *(id *)(v7 + OBJC_IVAR___CHReachableDestination_preferredServiceIdentifier);
            swift_beginAccess(a2, v40, 33, 0);
            v28 = (_QWORD *)*a2;
            swift_bridgeObjectRetain_n(v27, 2);
            swift_bridgeObjectRetain(v9);
            v29 = v14;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v28);
            *a2 = (uint64_t)v28;
            v31 = v10;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v28 = sub_100141BD0(0, v28[2] + 1, 1, v28);
              *a2 = (uint64_t)v28;
            }
            v33 = v28[2];
            v32 = v28[3];
            if (v33 >= v32 >> 1)
            {
              v28 = sub_100141BD0((_QWORD *)(v32 > 1), v33 + 1, 1, v28);
              *a2 = (uint64_t)v28;
            }
            v28[2] = v33 + 1;
            v34 = &v28[6 * v33];
            v34[4] = v29;
            v34[5] = v31;
            v35 = v43;
            v34[6] = v9;
            v34[7] = v35;
            v34[8] = v27;
            v34[9] = _swiftEmptyArrayStorage;
            swift_endAccess(v40);
            swift_bridgeObjectRelease(v27);
            swift_bridgeObjectRelease(v9);

          }
        }
      }
      else
      {
        swift_bridgeObjectRelease_n(v9, 2);
      }
    }
  }
}

uint64_t sub_1005D2704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[24];

  v7 = a5 + 16;
  v8 = static os_log_type_t.default.getter(a1);
  v9 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v8, &_mh_execute_header, v9, "ReachableContactDataSource finished reachability query.", 55, 2, _swiftEmptyArrayStorage);

  swift_beginAccess(v7, v15, 0, 0);
  v10 = *(_QWORD *)(a5 + 16);
  KeyPath = swift_getKeyPath(&unk_1006491E8);
  v12 = swift_getKeyPath(&unk_100649210);
  v14 = v10;
  swift_bridgeObjectRetain(v10);
  swift_retain(a4);
  return static Published.subscript.setter(&v14, a4, KeyPath, v12);
}

uint64_t sub_1005D27EC(uint64_t a1, const char *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v8;
  SEL v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 16), a2, a3, a4, a5, a6, a7, a8);

  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v8 + 40), v9, v10, v11, v12, v13, v14, v15);
  v16 = v8 + OBJC_IVAR____TtC10FitnessApp27ReachableContactsDataSource__friendSuggestionList;
  v17 = sub_100047110(&qword_10083D198);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  return swift_deallocClassInstance(v8, *(unsigned int *)(*(_QWORD *)v8 + 48), *(unsigned __int16 *)(*(_QWORD *)v8 + 52));
}

uint64_t sub_1005D2868()
{
  return type metadata accessor for ReachableContactsDataSource(0);
}

uint64_t sub_1005D2870@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for ReachableContactsDataSource(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1005D28AC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1006491E8);
  v5 = swift_getKeyPath(&unk_100649210);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1005D2928(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1006491E8);
  v5 = swift_getKeyPath(&unk_100649210);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1005D29A0(uint64_t (*a1)(void))
{
  uint64_t v1;

  v1 = a1();
  return _swift_stdlib_bridgeErrorToNSError(v1);
}

void sub_1005D29C0(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a4();
  v7 = (void *)v6;
  v8 = *a1;
  v9 = *a1 + 8;
  if (v6)
    v11 = v6;
  else
    v11 = 0;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v8);
  *a1 = v9;
  v10 = *a2;
  if (*a2)
  {
    *v10 = v7;
    *a2 = v10 + 1;
  }
  else
  {

  }
}

uint64_t sub_1005D2A70()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSString *v5;
  NSString *v6;
  uint64_t v8;

  v0 = (void *)objc_opt_self(CNContactFormatter);
  v1 = objc_msgSend(v0, "descriptorForRequiredKeysForStyle:", 0);
  v2 = objc_msgSend(v0, "descriptorForRequiredKeysForStyle:", 1003);
  v3 = sub_100047110((uint64_t *)&unk_100828340);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100623750;
  *(_QWORD *)(v4 + 32) = v1;
  *(_QWORD *)(v4 + 40) = v2;
  *(_QWORD *)(v4 + 48) = CNContactEmailAddressesKey;
  *(_QWORD *)(v4 + 56) = CNContactPhoneNumbersKey;
  v8 = v4;
  specialized Array._endMutation()(v4);
  v5 = CNContactEmailAddressesKey;
  v6 = CNContactPhoneNumbersKey;
  return v8;
}

_QWORD *sub_1005D2B40(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v2)
      break;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v2);
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v9 = *(id *)(a1 + 8 * v4 + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, "contactProperty");
      if (v11)
      {
        v12 = v11;
        v13 = objc_msgSend(v11, "contact");

        v14 = objc_msgSend(v13, "identifier");
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v17 = v16;

        v6 = sub_1005D18F0(v15, v17);
        swift_bridgeObjectRelease(v17);
      }
      else
      {

        v6 = 0;
      }
      ++v4;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v5);
      v7 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
      v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
      specialized ContiguousArray._endMutation()(v8);
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  return result;
}

_QWORD *sub_1005D2D10(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v2 = v1;
  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v4)
      break;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v4);
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    v19 = v2;
    v6 = 0;
    v2 = a1 & 0xC000000000000001;
    while (v4 != v6)
    {
      if (v2)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
      else
        v11 = *(id *)(a1 + 8 * v6 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, "contactIdentifier", v19);
      if (v13)
      {
        v14 = v13;
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
        v17 = v16;

        v8 = sub_1005D18F0(v15, v17);
        swift_bridgeObjectRelease(v17);
      }
      else
      {

        v8 = 0;
      }
      ++v6;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v9 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v8);
      specialized ContiguousArray._endMutation()(v10);
      if (v4 == v6)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  return result;
}

uint64_t sub_1005D2E9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005D2EC4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005D2EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1005D2704(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1005D2EFC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_1005D2F30(uint64_t a1, void *a2)
{
  uint64_t *v2;

  sub_1005D20E4(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1005D2F3C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005D2F60()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1005D2F9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_100838394);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1000DA0E4;
  return sub_1004FBB5C(a1, v4, v5, v6, v7, v9, v8);
}

BOOL sub_1005D3030(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  os_log_type_t v14;
  void *v15;
  os_log_type_t v16;
  _BOOL8 result;
  NSObject *v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23[4];

  v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v5 = objc_msgSend(v4, "objectForKey:", CFSTR("CHRemovedSuggestedContactsAsDestinationsKey"));

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)(v22, v5);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    memset(v22, 0, sizeof(v22));
  }
  sub_100025D58((uint64_t)v22, (uint64_t)v23);
  if (!v23[3])
  {
    v7 = sub_1000F996C((uint64_t)v23);
    goto LABEL_16;
  }
  v6 = sub_100047110((uint64_t *)&unk_10081E160);
  v7 = swift_dynamicCast(&v21, v23, (char *)&type metadata for Any + 8, v6, 6);
  if ((v7 & 1) == 0)
  {
LABEL_16:
    v14 = static os_log_type_t.default.getter(v7);
    v15 = (void *)HKLogActivity;
    v16 = v14;
    result = os_log_type_enabled(HKLogActivity, v14);
    if (!result)
      return result;
    v18 = v15;
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v23[0] = v20;
    *(_DWORD *)v19 = 136315138;
    *(_QWORD *)&v22[0] = sub_10003E8EC(0xD000000000000028, 0x80000001006A9520, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v22, (char *)v22 + 8, v19 + 4);
    _os_log_impl((void *)&_mh_execute_header, v18, v16, "%s found no stored contacts as removed suggestions.", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    return 0;
  }
  v8 = v21;
  v9 = *(_QWORD *)(v21 + 16);
  if (!v9)
  {
LABEL_14:
    swift_bridgeObjectRelease(v8);
    return 0;
  }
  v10 = (uint64_t *)(v21 + 40);
  while (1)
  {
    v11 = *(v10 - 1);
    v12 = *v10;
    v13 = v11 == a1 && v12 == a2;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a1, a2, 0) & 1) != 0)
      break;
    v10 += 2;
    if (!--v9)
      goto LABEL_14;
  }
  swift_bridgeObjectRelease(v8);
  return 1;
}

char *sub_1005D32A4()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  id v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  char *result;
  char *v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  char *v28;
  id v29;
  objc_super v30;

  v1 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel;
  v2 = objc_allocWithZone((Class)UILabel);
  v3 = v0;
  v4 = objc_msgSend(v2, "init");
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v1] = v4;
  v5 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_distanceLabel;
  v6 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v5] = v6;

  v30.receiver = v3;
  v30.super_class = (Class)type metadata accessor for WorkoutChartHeaderView();
  v7 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel;
  v9 = *(void **)&v7[OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel];
  sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  v10 = v7;
  v11 = v9;
  v12 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)(UIFontTextStyleTitle2, UIFontDescriptorSystemDesignRounded, 0x100000000, *(_QWORD *)&UIFontWeightMedium, 0, 0);
  v13 = (void *)objc_opt_self(UITraitCollection);
  v14 = objc_msgSend(v13, "traitCollectionWithPreferredContentSizeCategory:", UIContentSizeCategoryLarge);
  v15 = objc_msgSend(v12, "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:", v14);

  objc_msgSend(v11, "setFont:", v15);
  v16 = *(void **)&v7[v8];
  v17 = (void *)objc_opt_self(ARUIMetricColors);
  v18 = v16;
  result = (char *)objc_msgSend(v17, "elapsedTimeColors");
  if (result)
  {
    v20 = result;
    v21 = objc_msgSend(result, "nonGradientTextColor");

    objc_msgSend(v18, "setTextColor:", v21);
    objc_msgSend(v10, "addSubview:", *(_QWORD *)&v7[v8]);
    v22 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_distanceLabel;
    v23 = *(id *)&v10[OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_distanceLabel];
    v24 = (void *)static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)(UIFontTextStyleTitle2, UIFontDescriptorSystemDesignRounded, 0x100000000, *(_QWORD *)&UIFontWeightMedium, 0, 0);
    v25 = objc_msgSend(v13, "traitCollectionWithPreferredContentSizeCategory:", UIContentSizeCategoryLarge);
    v26 = objc_msgSend(v24, "_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:", v25);

    objc_msgSend(v23, "setFont:", v26);
    v27 = *(id *)&v10[v22];
    result = (char *)objc_msgSend(v17, "distanceColors");
    if (result)
    {
      v28 = result;
      v29 = objc_msgSend(result, "nonGradientTextColor");

      objc_msgSend(v27, "setTextColor:", v29);
      objc_msgSend(v10, "addSubview:", *(_QWORD *)&v10[v22]);
      sub_1005D3664();

      return v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1005D3664()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100047110((uint64_t *)&unk_100828340);
  v4 = swift_allocObject(v3, 80, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10062B740;
  v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel];
  v6 = objc_msgSend(v5, "topAnchor");
  v7 = objc_msgSend(v1, "topAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v5, "leadingAnchor");
  v10 = objc_msgSend(v1, "leadingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v4 + 40) = v11;
  v12 = objc_msgSend(v5, "bottomAnchor");
  v13 = objc_msgSend(v1, "bottomAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v4 + 48) = v14;
  v15 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_distanceLabel];
  v16 = objc_msgSend(v15, "topAnchor");
  v17 = objc_msgSend(v1, "topAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v4 + 56) = v18;
  v19 = objc_msgSend(v15, "trailingAnchor");
  v20 = objc_msgSend(v1, "trailingAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v4 + 64) = v21;
  v22 = objc_msgSend(v15, "bottomAnchor");
  v23 = objc_msgSend(v1, "bottomAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v4 + 72) = v24;
  specialized Array._endMutation()(v25);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v4, v26, v27, v28, v29, v30, v31, v32);
  objc_msgSend(v2, "activateConstraints:", isa);

}

id sub_1005D39C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutChartHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutChartHeaderView()
{
  return objc_opt_self(_TtC10FitnessApp22WorkoutChartHeaderView);
}

void sub_1005D3A50()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;

  v1 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_timeLabel;
  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v1] = v2;
  v3 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartHeaderView_distanceLabel;
  v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v3] = v4;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/WorkoutChartHeaderView.swift", 39, 2, 44, 0);
  __break(1u);
}

ValueMetadata *type metadata accessor for WorkoutDetailSwimmingSetView()
{
  return &type metadata for WorkoutDetailSwimmingSetView;
}

uint64_t sub_1005D3B2C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BD9B4, 1);
}

uint64_t sub_1005D3B3C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t KeyPath;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double *v43;
  _BYTE *v44;
  uint64_t v45;
  int *v46;
  _QWORD *v47;
  id v48;
  uint64_t v49;
  int *v50;
  char *v51;
  uint64_t v52;
  __int128 v53;
  _QWORD *v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE v62[12];
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  char v80[16];
  uint64_t v81;
  void *v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;

  v79 = a3;
  v68 = sub_100047110(&qword_10083D1F8);
  __chkstk_darwin(v68);
  v6 = &v62[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v78 = &v62[-v8];
  v75 = type metadata accessor for SegmentedPickerStyle(0);
  v77 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v10 = &v62[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v69 = sub_100047110(&qword_100828020);
  v73 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v12 = &v62[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v76 = sub_100047110(&qword_100828028);
  v74 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v14 = &v62[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = sub_100047110(&qword_100828030);
  __chkstk_darwin(v70);
  v16 = &v62[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  v71 = &v62[-v18];
  v66 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000020, 0x80000001006A9720);
  v65 = v19;
  v63 = v20;
  v64 = v21;
  v22 = type metadata accessor for WorkoutDetailSwimmingSetDataSource(0);
  v72 = v22;
  v23 = sub_1005D43B8();
  v67 = v23;
  v24 = (void *)ObservedObject.projectedValue.getter(a1, a2, v22, v23);
  KeyPath = swift_getKeyPath(&unk_1006492E0);
  ObservedObject.Wrapper.subscript.getter(&v83, KeyPath, v24, v23);
  swift_release(KeyPath);

  v85 = v83;
  v86 = v84;
  v81 = a1;
  v82 = a2;
  v26 = a2;
  v27 = sub_100047110(&qword_100828040);
  v28 = sub_10020D888();
  v29 = Picker<>.init(_:selection:content:)(v66, v65, v63 & 1, v64, &v85, sub_1005D4408, v80, &type metadata for Int, v27, &protocol witness table for Int, v28);
  SegmentedPickerStyle.init()(v29);
  v30 = sub_100028384(&qword_100828050, &qword_100828020, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  v31 = v69;
  v32 = v75;
  View.pickerStyle<A>(_:)(v10, v69, v75, v30, &protocol witness table for SegmentedPickerStyle);
  (*(void (**)(_BYTE *, uint64_t))(v77 + 8))(v10, v32);
  v33 = (*(uint64_t (**)(_BYTE *, uint64_t))(v73 + 8))(v12, v31);
  LOBYTE(v32) = static Edge.Set.bottom.getter(v33);
  v34 = EdgeInsets.init(_all:)(24.0);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v41 = v74;
  v42 = v76;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v74 + 16))(v16, v14, v76);
  v43 = (double *)&v16[*(int *)(v70 + 36)];
  *(_BYTE *)v43 = v32;
  v43[1] = v34;
  *((_QWORD *)v43 + 2) = v36;
  *((_QWORD *)v43 + 3) = v38;
  *((_QWORD *)v43 + 4) = v40;
  *((_BYTE *)v43 + 40) = 0;
  (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v14, v42);
  v44 = v71;
  sub_100045AD4((uint64_t)v16, (uint64_t)v71, &qword_100828030);
  *v6 = swift_getKeyPath(&unk_100649308);
  v45 = sub_100047110(&qword_100828058);
  swift_storeEnumTagMultiPayload(v6, v45, 0);
  v46 = (int *)v68;
  v47 = (_QWORD *)((char *)v6 + *(int *)(v68 + 36));
  v48 = v26;
  *v47 = ObservedObject.init(wrappedValue:)(v48, v72, v67);
  v47[1] = v49;
  *(_QWORD *)((char *)v6 + v46[10]) = 0x4040000000000000;
  *(_QWORD *)((char *)v6 + v46[11]) = 0x4010000000000000;
  *(_QWORD *)((char *)v6 + v46[12]) = 0x4020000000000000;
  v50 = v46;
  v51 = (char *)v6 + v46[13];
  *(_QWORD *)&v85 = 0;
  GestureState.init(wrappedValue:)(&v83, &v85, &type metadata for Double);
  v52 = *((_QWORD *)&v83 + 1);
  v53 = v84;
  *(_QWORD *)v51 = v83;
  *((_QWORD *)v51 + 1) = v52;
  *((_OWORD *)v51 + 1) = v53;
  v54 = (_QWORD *)((char *)v6 + v50[14]);
  *(_QWORD *)&v85 = 0;
  State.init(wrappedValue:)(&v83, &v85, &type metadata for Double);
  v55 = *((_QWORD *)&v83 + 1);
  *v54 = v83;
  v54[1] = v55;
  v56 = v78;
  sub_100045AD4((uint64_t)v6, (uint64_t)v78, &qword_10083D1F8);
  v57 = (uint64_t)v44;
  sub_100021CC0((uint64_t)v44, (uint64_t)v16, &qword_100828030);
  v58 = (uint64_t)v56;
  sub_100021CC0((uint64_t)v56, (uint64_t)v6, &qword_10083D1F8);
  v59 = v79;
  sub_100021CC0((uint64_t)v16, v79, &qword_100828030);
  v60 = sub_100047110(&qword_10083D200);
  sub_100021CC0((uint64_t)v6, v59 + *(int *)(v60 + 48), &qword_10083D1F8);
  sub_10001BE90(v58, &qword_10083D1F8);
  sub_10001BE90(v57, &qword_100828030);
  sub_10001BE90((uint64_t)v6, &qword_10083D1F8);
  return sub_10001BE90((uint64_t)v16, &qword_100828030);
}

uint64_t sub_1005D40E4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100649360);
  v5 = swift_getKeyPath(&unk_100649388);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1005D4160(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100649360);
  v5 = swift_getKeyPath(&unk_100649388);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1005D41CC(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v13 = *(_QWORD *)&a2[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_supportedPaceDistances];
  v4 = v13;
  KeyPath = swift_getKeyPath(&unk_100649338);
  v6 = swift_allocObject(&unk_1007AD3B0, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_bridgeObjectRetain(v4);
  v7 = a2;
  v8 = sub_100047110(&qword_100828068);
  v9 = sub_100047110(&qword_100827A20);
  v10 = sub_100028384(&qword_100828070, &qword_100828068, (uint64_t)&protocol conformance descriptor for [A]);
  v11 = sub_100204544();
  return ForEach<>.init(_:id:content:)(&v13, KeyPath, sub_10020D924, v6, v8, v9, v10, &protocol witness table for Int, v11);
}

uint64_t sub_1005D42CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_100047110(&qword_10083D1E0);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = (void *)v1[1];
  *(_QWORD *)v5 = static HorizontalAlignment.leading.getter(v8);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  v9 = sub_100047110(&qword_10083D1E8);
  v10 = sub_1005D3B3C(v7, v6, (uint64_t)&v5[*(int *)(v9 + 44)]);
  LOBYTE(v6) = static Edge.Set.all.getter(v10);
  sub_100021CC0((uint64_t)v5, a1, &qword_10083D1E0);
  v11 = a1 + *(int *)(sub_100047110(&qword_10083D1F0) + 36);
  *(_BYTE *)v11 = (_BYTE)v6;
  *(_OWORD *)(v11 + 8) = xmmword_1006251F0;
  *(_OWORD *)(v11 + 24) = xmmword_1006251F0;
  *(_BYTE *)(v11 + 40) = 0;
  return sub_10001BE90((uint64_t)v5, &qword_10083D1E0);
}

unint64_t sub_1005D43B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100825518;
  if (!qword_100825518)
  {
    v1 = type metadata accessor for WorkoutDetailSwimmingSetDataSource(255);
    result = swift_getWitnessTable(&unk_10062B584, v1);
    atomic_store(result, (unint64_t *)&qword_100825518);
  }
  return result;
}

uint64_t sub_1005D4408()
{
  uint64_t v0;

  return sub_1005D41CC(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_1005D441C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1005D444C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D208;
  if (!qword_10083D208)
  {
    v1 = sub_100007050(&qword_10083D1F0);
    sub_100028384(&qword_10083D210, &qword_10083D1E0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D208);
  }
  return result;
}

_QWORD *sub_1005D44D0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t ViewModel;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  char v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v32);
  }
  else
  {
    ViewModel = type metadata accessor for TrainingLoadViewModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(ViewModel - 8) + 16))(a1, a2, ViewModel);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for DayIndex(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v13 = *(_QWORD *)((char *)a2 + v12);
    *(_QWORD *)((char *)a1 + v12) = v13;
    v14 = a3[8];
    v15 = a3[9];
    v16 = *(void **)((char *)a2 + v14);
    *(_QWORD *)((char *)a1 + v14) = v16;
    v17 = *(void **)((char *)a2 + v15);
    *(_QWORD *)((char *)a1 + v15) = v17;
    v18 = a3[10];
    v19 = a3[11];
    v20 = (char *)a1 + v18;
    v21 = (char *)a2 + v18;
    v22 = *(_QWORD *)v21;
    v23 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v23;
    v20[16] = v21[16];
    v24 = (char *)a1 + v19;
    v25 = *(void **)((char *)a2 + v19);
    v26 = *((_BYTE *)a2 + v19 + 8);
    swift_bridgeObjectRetain(v13);
    v27 = v16;
    v28 = v17;
    swift_retain(v22);
    swift_retain(v23);
    sub_10010C5D0(v25, v26);
    *(_QWORD *)v24 = v25;
    v24[8] = v26;
    v29 = a3[12];
    v30 = *(void **)((char *)a2 + v29);
    *(_QWORD *)((char *)a1 + v29) = v30;
    v31 = v30;
  }
  return a1;
}

void sub_1005D4624(uint64_t a1, int *a2)
{
  uint64_t ViewModel;
  uint64_t v5;
  uint64_t v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  _QWORD *v14;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 8))(a1, ViewModel);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for DayIndex(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + a2[7]), v7, v8, v9, v10, v11, v12, v13);

  v14 = (_QWORD *)(a1 + a2[10]);
  swift_release(*v14);
  swift_release(v14[1]);
  sub_10010C5EC(*(id *)(a1 + a2[11]), *(_BYTE *)(a1 + a2[11] + 8));

}

uint64_t sub_1005D46E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 16))(a1, a2, ViewModel);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for DayIndex(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v13 = a3[8];
  v14 = a3[9];
  v15 = *(void **)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v15;
  v16 = *(void **)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v16;
  v17 = a3[10];
  v18 = a3[11];
  v19 = a1 + v17;
  v20 = (uint64_t *)(a2 + v17);
  v21 = *v20;
  v22 = v20[1];
  *(_QWORD *)v19 = *v20;
  *(_QWORD *)(v19 + 8) = v22;
  *(_BYTE *)(v19 + 16) = *((_BYTE *)v20 + 16);
  v23 = a1 + v18;
  v24 = *(void **)(a2 + v18);
  v25 = *(_BYTE *)(a2 + v18 + 8);
  swift_bridgeObjectRetain(v12);
  v26 = v15;
  v27 = v16;
  swift_retain(v21);
  swift_retain(v22);
  sub_10010C5D0(v24, v25);
  *(_QWORD *)v23 = v24;
  *(_BYTE *)(v23 + 8) = v25;
  v28 = a3[12];
  v29 = *(void **)(a2 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v30 = v29;
  return a1;
}

uint64_t sub_1005D480C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  char v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 24))(a1, a2, ViewModel);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for DayIndex(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = *(_QWORD *)(a2 + v11);
  v13 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13, v14, v15, v16, v17, v18, v19, v20);
  v21 = a3[8];
  v22 = *(void **)(a1 + v21);
  v23 = *(void **)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v23;
  v24 = v23;

  v25 = a3[9];
  v26 = *(void **)(a2 + v25);
  v27 = *(void **)(a1 + v25);
  *(_QWORD *)(a1 + v25) = v26;
  v28 = v26;

  v29 = a3[10];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_QWORD *)(a1 + v29);
  v33 = *(_QWORD *)(a2 + v29);
  *(_QWORD *)(a1 + v29) = v33;
  swift_retain(v33);
  swift_release(v32);
  v34 = *(_QWORD *)(v31 + 8);
  v35 = *(_QWORD *)(v30 + 8);
  *(_QWORD *)(v30 + 8) = v34;
  swift_retain(v34);
  swift_release(v35);
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  v36 = a3[11];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(id *)v38;
  LOBYTE(v30) = *(_BYTE *)(v38 + 8);
  sub_10010C5D0(*(id *)v38, v30);
  v40 = *(void **)v37;
  v41 = *(_BYTE *)(v37 + 8);
  *(_QWORD *)v37 = v39;
  *(_BYTE *)(v37 + 8) = v30;
  sub_10010C5EC(v40, v41);
  v42 = a3[12];
  v43 = *(void **)(a2 + v42);
  v44 = *(void **)(a1 + v42);
  *(_QWORD *)(a1 + v42) = v43;
  v45 = v43;

  return a1;
}

uint64_t sub_1005D4978(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 32))(a1, a2, ViewModel);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for DayIndex(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[10];
  v14 = a3[11];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1005D4A64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  void *v33;
  char v34;
  uint64_t v35;
  void *v36;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 40))(a1, a2, ViewModel);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for DayIndex(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_bridgeObjectRelease(v12, v13, v14, v15, v16, v17, v18, v19);
  v20 = a3[8];
  v21 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);

  v22 = a3[9];
  v23 = *(void **)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);

  v24 = a3[10];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a1 + v24);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  swift_release(v27);
  v28 = *(_QWORD *)(v25 + 8);
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  swift_release(v28);
  *(_BYTE *)(v25 + 16) = *(_BYTE *)(v26 + 16);
  v29 = a3[11];
  v30 = a1 + v29;
  v31 = (uint64_t *)(a2 + v29);
  v32 = *v31;
  LOBYTE(v31) = *((_BYTE *)v31 + 8);
  v33 = *(void **)v30;
  v34 = *(_BYTE *)(v30 + 8);
  *(_QWORD *)v30 = v32;
  *(_BYTE *)(v30 + 8) = (_BYTE)v31;
  sub_10010C5EC(v33, v34);
  v35 = a3[12];
  v36 = *(void **)(a1 + v35);
  *(_QWORD *)(a1 + v35) = *(_QWORD *)(a2 + v35);

  return a1;
}

uint64_t sub_1005D4B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005D4BA8);
}

uint64_t sub_1005D4BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v7 = *(_QWORD *)(ViewModel - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = ViewModel;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for DayIndex(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1005D4C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005D4C5C);
}

uint64_t sub_1005D4C5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t ViewModel;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  v9 = *(_QWORD *)(ViewModel - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = ViewModel;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for DayIndex(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for TrainingLoadChartLollipopView(uint64_t a1)
{
  uint64_t result;

  result = qword_10083D270;
  if (!qword_10083D270)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TrainingLoadChartLollipopView);
  return result;
}

uint64_t sub_1005D4D3C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[9];

  result = type metadata accessor for TrainingLoadViewModel(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for DayIndex(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_1006493E0;
      v5[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[4] = &unk_1006493F8;
      v5[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v5[6] = &unk_100649410;
      v5[7] = &unk_100649428;
      v5[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_initStructMetadata(a1, 256, 9, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1005D4E04(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BDA04, 1);
}

void sub_1005D4E14(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, "UUID");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

}

void sub_1005D4E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  Class isa;
  NSString v6;
  uint64_t v7;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  static Locale.autoupdatingCurrent.getter();
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, "setLocale:", isa);

  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setLocalizedDateFormatFromTemplate:", v6);

  qword_10086B030 = (uint64_t)v4;
}

uint64_t sub_1005D4F50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  int v39;
  int v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t Band;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  _OWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t ChartLollipopView;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v2 = v1;
  v104 = a1;
  ChartLollipopView = type metadata accessor for TrainingLoadChartLollipopView(0);
  v100 = *(_QWORD *)(ChartLollipopView - 8);
  __chkstk_darwin(ChartLollipopView);
  v101 = v3;
  v103 = (uint64_t)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v98);
  v99 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100836920);
  __chkstk_darwin(v5);
  v7 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100832E40);
  __chkstk_darwin(v8);
  v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100832E48);
  __chkstk_darwin(v11);
  v13 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_100047110(&qword_10083D2C8);
  __chkstk_darwin(v89);
  v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_100047110(&qword_10083D2D0);
  __chkstk_darwin(v90);
  v17 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_100047110(&qword_10083D2D8);
  __chkstk_darwin(v91);
  v19 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100047110(&qword_10083D2E0);
  __chkstk_darwin(v92);
  v21 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100047110(&qword_10083D2E8);
  __chkstk_darwin(v96);
  v23 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100047110(&qword_10083D2F0);
  v95 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v94 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = static HorizontalAlignment.center.getter(v25, v26, v27, v28, v29);
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  v30 = &v10[*(int *)(sub_100047110(&qword_10083D2F8) + 44)];
  v102 = v2;
  v31 = sub_1005D5638(v2, v30);
  v32 = static Alignment.center.getter(v31);
  sub_1003EDD04(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v13, 0.0, 1, 0.0, 1, v32, v33);
  v34 = sub_10001BE90((uint64_t)v10, &qword_100832E40);
  v35 = static Edge.Set.top.getter(v34);
  v36 = v35;
  v37 = static Edge.Set.horizontal.getter(v35);
  v38 = Edge.Set.init(rawValue:)(0);
  v39 = Edge.Set.init(rawValue:)(v38);
  if (Edge.Set.init(rawValue:)(v39 & v36) != v36)
    v38 = Edge.Set.init(rawValue:)(v38 | v36);
  v40 = Edge.Set.init(rawValue:)(v38);
  if (Edge.Set.init(rawValue:)(v40 & v37) != v37)
    LOBYTE(v38) = Edge.Set.init(rawValue:)(v38 | v37);
  v41 = EdgeInsets.init(_all:)(4.0);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  sub_100021CC0((uint64_t)v13, (uint64_t)v15, &qword_100832E48);
  v48 = &v15[*(int *)(v89 + 36)];
  *v48 = v38;
  *((double *)v48 + 1) = v41;
  *((_QWORD *)v48 + 2) = v43;
  *((_QWORD *)v48 + 3) = v45;
  *((_QWORD *)v48 + 4) = v47;
  v48[40] = 0;
  v49 = sub_10001BE90((uint64_t)v13, &qword_100832E48);
  v50 = static Edge.Set.bottom.getter(v49);
  v51 = EdgeInsets.init(_all:)(2.0);
  v53 = v52;
  v55 = v54;
  v57 = v56;
  sub_100021CC0((uint64_t)v15, (uint64_t)v17, &qword_10083D2C8);
  v58 = &v17[*(int *)(v90 + 36)];
  *v58 = v50;
  *((double *)v58 + 1) = v51;
  *((_QWORD *)v58 + 2) = v53;
  *((_QWORD *)v58 + 3) = v55;
  *((_QWORD *)v58 + 4) = v57;
  v58[40] = 0;
  v59 = sub_10001BE90((uint64_t)v15, &qword_10083D2C8);
  v60 = static Color.black.getter(v59);
  sub_100021CC0((uint64_t)v17, (uint64_t)v19, &qword_10083D2D0);
  *(_QWORD *)&v19[*(int *)(v91 + 36)] = v60;
  sub_10001BE90((uint64_t)v17, &qword_10083D2D0);
  v61 = v102;
  TrainingLoadViewModel.band(onDay:)(v102 + *(int *)(ChartLollipopView + 20));
  Band = type metadata accessor for TrainingLoadBand(0);
  v63 = *(_QWORD *)(Band - 8);
  v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48))(v7, 1, Band);
  if ((_DWORD)v64 == 1)
  {
    sub_10001BE90((uint64_t)v7, &qword_100836920);
    v66 = static Color.gray.getter(v65);
    v67 = v66;
  }
  else
  {
    v67 = TrainingLoadBand.color.getter(v64);
    v66 = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v7, Band);
  }
  v68 = static Edge.Set.all.getter(v66);
  sub_100021CC0((uint64_t)v19, (uint64_t)v21, &qword_10083D2D8);
  v69 = &v21[*(int *)(v92 + 36)];
  *(_QWORD *)v69 = v67;
  v69[8] = v68;
  sub_10001BE90((uint64_t)v19, &qword_10083D2D8);
  v70 = v99;
  v71 = &v99[*(int *)(v98 + 20)];
  v72 = enum case for RoundedCornerStyle.continuous(_:);
  v73 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 104))(v71, v72, v73);
  __asm { FMOV            V0.2D, #8.0 }
  *v70 = _Q0;
  v79 = v96;
  v80 = (uint64_t)&v23[*(int *)(v96 + 36)];
  sub_10004F8C8((uint64_t)v70, v80, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v80 + *(int *)(sub_100047110(&qword_100821238) + 36)) = 256;
  sub_100021CC0((uint64_t)v21, (uint64_t)v23, &qword_10083D2E0);
  sub_100011F54((uint64_t)v70, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_10001BE90((uint64_t)v21, &qword_10083D2E0);
  v81 = v103;
  sub_10004F8C8(v61, v103, type metadata accessor for TrainingLoadChartLollipopView);
  v82 = *(unsigned __int8 *)(v100 + 80);
  v83 = (v82 + 16) & ~v82;
  v84 = swift_allocObject(&unk_1007AD420, v83 + v101, v82 | 7);
  sub_1005D6D7C(v81, v84 + v83);
  v85 = sub_1005D6DEC();
  v86 = v94;
  View.onTapGesture(count:perform:)(1, sub_1005D6DC0, v84, v79, v85);
  swift_release(v84);
  sub_10001BE90((uint64_t)v23, &qword_10083D2E8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v95 + 32))(v104, v86, v97);
}

uint64_t sub_1005D5638@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t *v25;
  uint64_t v26;
  double v27;
  unint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t OpaqueTypeConformance2;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  void (*v61)(char *, uint64_t);
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  CHWorkoutDetailHeartRateTableViewCell *v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  unsigned __int8 v88;
  uint64_t v89;
  uint64_t v90;

  v67 = a1;
  v78 = a2;
  v3 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v3);
  v73 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100047110(&qword_10083D338);
  v77 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v79 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100047110(&qword_10083D340);
  v80 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v72 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v74 = (char *)&v63 - v8;
  v9 = sub_100047110(&qword_10083D348);
  __chkstk_darwin(v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_10083D350);
  __chkstk_darwin(v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_10083D358);
  v69 = *(_QWORD *)(v15 - 8);
  v70 = v15;
  v16 = v69;
  __chkstk_darwin(v15);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v63 - v20;
  v71 = (char *)&v63 - v20;
  sub_1005D5B5C(a1, (uint64_t)v11);
  v23 = static Font.caption2.getter(v22);
  KeyPath = swift_getKeyPath(&unk_100649490);
  sub_100021CC0((uint64_t)v11, (uint64_t)v14, &qword_10083D348);
  v25 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  *v25 = KeyPath;
  v25[1] = v23;
  v26 = sub_10001BE90((uint64_t)v11, &qword_10083D348);
  v27 = static Font.Weight.medium.getter(v26);
  v28 = sub_1005D7038();
  v68 = v18;
  View.fontWeight(_:)(*(_QWORD *)&v27, 0, v12, v28);
  sub_10001BE90((uint64_t)v14, &qword_10083D350);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v18, v15);
  v29 = sub_1005D6900(v67, (uint64_t)&v81);
  v30 = v81;
  v31 = v82;
  v65 = v81;
  v33 = v83;
  v32 = v84;
  v34 = v85;
  v35 = v86;
  v63 = v85;
  LOBYTE(v27) = v88;
  v64 = v88;
  LOBYTE(v16) = v87;
  v36 = static Font.body.getter(v29);
  v37 = swift_getKeyPath(&unk_100649490);
  v81 = v30;
  v82 = v31;
  v83 = v33;
  v84 = v32;
  v85 = v34;
  v86 = v35;
  v87 = v16;
  v88 = LOBYTE(v27);
  v89 = v37;
  v90 = v36;
  v38 = static Font.Weight.medium.getter(v37);
  v39 = sub_100047110(&qword_10083D380);
  v66 = v39;
  v67 = sub_1005D7138();
  View.fontWeight(_:)(*(_QWORD *)&v38, 0, v39, v67);
  sub_1005D737C(v65, v31, v33, v32, v63, v35, v16, v64);
  swift_release(v36);
  swift_release(v37);
  v40 = enum case for Font.Design.rounded(_:);
  v41 = type metadata accessor for Font.Design(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = (uint64_t)v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 104))(v73, v40, v41);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v41);
  v81 = v66;
  v82 = v67;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v81, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v45 = v72;
  v46 = v75;
  v47 = v79;
  View.fontDesign(_:)(v43, v75, OpaqueTypeConformance2);
  sub_10001BE90(v43, &qword_10081F2F8);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v47, v46);
  v48 = v80;
  v49 = v74;
  v50 = v76;
  (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v74, v45, v76);
  v52 = v69;
  v51 = v70;
  v53 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v54 = v68;
  v55 = v71;
  v53(v68, v71, v70);
  v56 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v57 = v50;
  v56(v45, v49, v50);
  v58 = v78;
  v53(v78, v54, v51);
  v59 = sub_100047110(&qword_10083D3D0);
  v56(&v58[*(int *)(v59 + 48)], v45, v57);
  v60 = *(void (**)(char *, uint64_t))(v80 + 8);
  v60(v49, v57);
  v61 = *(void (**)(char *, uint64_t))(v52 + 8);
  v61(v55, v51);
  v60(v45, v57);
  return ((uint64_t (*)(char *, uint64_t))v61)(v54, v51);
}

void sub_1005D5B5C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *ChartLollipopView;
  uint64_t v8;
  char *v9;
  uint64_t DataType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  char v24;
  uint64_t v25;
  __n128 v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  CHWorkoutDetailHeartRateTableViewCell *v31;
  SEL v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  __n128 v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t KeyPath;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  NSString v74;
  id v75;
  uint64_t v76;
  CHWorkoutDetailHeartRateTableViewCell *v77;
  CHWorkoutDetailHeartRateTableViewCell *v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  const char *v85;
  const char *v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  CHWorkoutDetailHeartRateTableViewCell *v96;
  CHWorkoutDetailHeartRateTableViewCell *v97;
  char v98;
  char v99;
  uint64_t v100;
  unint64_t v101;
  unsigned __int8 v102;
  char v103;
  __int128 v104;
  _OWORD *v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  SEL v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  CHWorkoutDetailHeartRateTableViewCell *v119;
  CHWorkoutDetailHeartRateTableViewCell *v120;
  char v121;
  char v122;
  __n128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  CHWorkoutDetailHeartRateTableViewCell *v127;
  CHWorkoutDetailHeartRateTableViewCell *v128;
  char v129;
  uint64_t v130;
  SEL v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  SEL v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  uint64_t v145;
  unint64_t v146;
  __int128 v147;
  __int128 v148;
  char v149;
  uint64_t v150;
  _OWORD *v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  CHWorkoutDetailHeartRateTableViewCell *v158;
  uint64_t v159;
  SEL v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  uint64_t v167;
  SEL v168;
  id v169;
  id v170;
  id v171;
  id v172;
  id v173;
  id v174;
  uint64_t v175;
  SEL v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  id v182;
  uint64_t v183;
  SEL v184;
  id v185;
  id v186;
  id v187;
  id v188;
  id v189;
  id v190;
  _DWORD v191[4];
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  _OWORD *v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  CHWorkoutDetailHeartRateTableViewCell *v205;
  __int128 v206;
  __int128 v207;
  __int16 v208;
  __int128 v209;
  __int128 v210;
  unsigned __int8 v211;
  char v212;

  v201 = a2;
  v200 = sub_100047110(&qword_10083D3D8);
  v193 = *(_QWORD *)(v200 - 8);
  __chkstk_darwin(v200);
  v192 = (uint64_t)v191 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = sub_100047110(&qword_10083D3E0);
  __chkstk_darwin(v196);
  v197 = (_OWORD *)((char *)v191 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v5);
  v194 = (uint64_t)v191 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ChartLollipopView = (int *)type metadata accessor for TrainingLoadChartLollipopView(0);
  __chkstk_darwin(ChartLollipopView);
  v9 = (char *)v191 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  DataType = type metadata accessor for TrainingLoadDataType(0);
  v11 = *(_QWORD *)(DataType - 8);
  __chkstk_darwin(DataType);
  v13 = (char *)v191 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_10083D3E8);
  __chkstk_darwin(v14);
  v199 = (char *)v191 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v198 = (char *)v191 - v17;
  *(_QWORD *)&v209 = sub_1005D6644();
  *((_QWORD *)&v209 + 1) = v18;
  v195 = sub_100038CA0();
  v19 = Text.init<A>(_:)(&v209, &type metadata for String, v195);
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  v27 = static Font.Weight.bold.getter(v26);
  v28 = Text.fontWeight(_:)(*(_QWORD *)&v27, 0, v19, v21, v25, v23);
  v203 = v29;
  v204 = v28;
  v202 = v30;
  v205 = v31;
  sub_1000E4458(v19, v21, v25);
  swift_bridgeObjectRelease(v23, v32, v33, v34, v35, v36, v37, v38);
  TrainingLoadViewModel.dataType.getter(v39);
  LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, DataType);
  LODWORD(v23) = enum case for TrainingLoadDataType.allDay(_:);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, DataType);
  if ((_DWORD)v19 == (_DWORD)v23)
  {
    v40 = *(void **)(a1 + ChartLollipopView[8]);
    if (v40)
    {
      v41 = v40;
      v42 = objc_msgSend(v41, "activeEnergyBurned");
      v43 = objc_msgSend(v41, "activeEnergyBurnedGoal");
      v44 = *(void **)(a1 + ChartLollipopView[9]);
      v45 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
      v46 = sub_1001B66F8(v42, v43, v44, v45);

      v48 = v194;
      if (v46)
        AttributedString.init(_:)(v46);
      else
        AttributedString.init()(v47);
      v116 = Text.init(_:)(v48);
      v118 = v117;
      v120 = v119;
      v122 = v121 & 1;
      v124 = Text.bold()(v116, v117, v121 & 1, v119, v123);
      v126 = v125;
      v128 = v127;
      v130 = v129 & 1;
      sub_1000E4458(v116, v118, v122);
      swift_bridgeObjectRelease(v120, v131, v132, v133, v134, v135, v136, v137);
      *(_QWORD *)&v206 = v124;
      *((_QWORD *)&v206 + 1) = v126;
      *(_QWORD *)&v207 = v130;
      *((_QWORD *)&v207 + 1) = v128;
      LOBYTE(v208) = 0;
      sub_1000E439C(v124, v126, v130);
      swift_bridgeObjectRetain(v128);
      _ConditionalContent<>.init(storage:)(&v206, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);

      sub_1000E4458(v124, v126, v130);
      swift_bridgeObjectRelease(v128, v138, v139, v140, v141, v142, v143, v144);
    }
    else
    {
      v69 = LocalizedStringKey.init(stringLiteral:)(0x6D65766F4D206F4ELL, 0xEB00000000746E65);
      *(_QWORD *)&v206 = Text.init(_:tableName:bundle:comment:)(v69);
      *((_QWORD *)&v206 + 1) = v71;
      *(_QWORD *)&v207 = v70 & 1;
      *((_QWORD *)&v207 + 1) = v72;
      LOBYTE(v208) = 1;
      _ConditionalContent<>.init(storage:)(&v206, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
    }
    v206 = v209;
    v207 = v210;
    v208 = v211;
    v194 = *((_QWORD *)&v209 + 1);
    v195 = v209;
    v192 = *((_QWORD *)&v210 + 1);
    v193 = v210;
    v191[3] = v211;
    sub_100116B48(v209, *((uint64_t *)&v209 + 1), v210, *((uint64_t *)&v210 + 1));
    v145 = sub_100047110(&qword_100826BF0);
    v146 = sub_1002B35FC();
    _ConditionalContent<>.init(storage:)(&v206, v145, &type metadata for Text, v146, &protocol witness table for Text);
    v147 = v209;
    v148 = v210;
    v149 = v212;
    v150 = v211;
    v151 = v197;
    *v197 = v209;
    v151[1] = v148;
    *((_BYTE *)v151 + 32) = v150;
    *((_BYTE *)v151 + 33) = v149;
    swift_storeEnumTagMultiPayload(v151, v196, 0);
    sub_1005D74E4(v147, *((uint64_t *)&v147 + 1), v148, *((uint64_t *)&v148 + 1), v150, v149);
    v152 = sub_100047110(&qword_10083D3F0);
    v153 = sub_1005D7418();
    v154 = sub_1005D7484();
    v68 = (uint64_t)v198;
    _ConditionalContent<>.init(storage:)(v151, v152, v200, v153, v154);
    sub_100116B88(v195, v194, v193, v192);
    sub_1005D7524(v147, *((uint64_t *)&v147 + 1), v148, *((CHWorkoutDetailHeartRateTableViewCell **)&v148 + 1), v150, v149);
    v52 = v201;
    v55 = (uint64_t)v199;
  }
  else
  {
    v49 = ChartLollipopView[7];
    v50 = *(_QWORD *)(a1 + v49);
    if ((unint64_t)v50 >> 62)
    {
      if (v50 < 0)
        v167 = *(_QWORD *)(a1 + v49);
      else
        v167 = v50 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(a1 + v49));
      v51 = _CocoaArrayWrapper.endIndex.getter(v167);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v50, v168, v169, v170, v171, v172, v173, v174);
    }
    else
    {
      v51 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v52 = v201;
    sub_10004F8C8(a1, (uint64_t)v9, type metadata accessor for TrainingLoadChartLollipopView);
    if (v51)
    {
      v53 = *(_QWORD *)&v9[ChartLollipopView[7]];
      if ((unint64_t)v53 >> 62)
      {
        if (v53 < 0)
          v175 = *(_QWORD *)&v9[ChartLollipopView[7]];
        else
          v175 = v53 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)&v9[ChartLollipopView[7]]);
        v54 = _CocoaArrayWrapper.endIndex.getter(v175);
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v53, v176, v177, v178, v179, v180, v181, v182);
      }
      else
      {
        v54 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v55 = (uint64_t)v199;
      sub_100011F54((uint64_t)v9, type metadata accessor for TrainingLoadChartLollipopView);
      if (v54 < 2)
      {
        *(_QWORD *)&v209 = *(_QWORD *)(a1 + v49);
        v56 = v209;
        KeyPath = swift_getKeyPath(&unk_1006494F8);
        swift_bridgeObjectRetain(v56);
        v58 = sub_100047110((uint64_t *)&unk_100827430);
        v59 = sub_100028384(&qword_100831198, (uint64_t *)&unk_100827430, (uint64_t)&protocol conformance descriptor for [A]);
        v60 = sub_1000DC0E8();
        v61 = v192;
        ForEach<>.init(_:id:content:)(&v209, KeyPath, sub_1005D6878, 0, v58, &type metadata for Text, v59, v60, &protocol witness table for Text);
        v62 = v193;
        v63 = v197;
        v64 = v200;
        (*(void (**)(_OWORD *, uint64_t, uint64_t))(v193 + 16))(v197, v61, v200);
        swift_storeEnumTagMultiPayload(v63, v196, 1);
        v65 = sub_100047110(&qword_10083D3F0);
        v66 = sub_1005D7418();
        v67 = sub_1005D7484();
        v68 = (uint64_t)v198;
        _ConditionalContent<>.init(storage:)(v63, v65, v64, v66, v67);
        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v64);
        goto LABEL_20;
      }
    }
    else
    {
      sub_100011F54((uint64_t)v9, type metadata accessor for TrainingLoadChartLollipopView);
      v55 = (uint64_t)v199;
    }
    v73 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v74 = String._bridgeToObjectiveC()();
    v75 = objc_msgSend(v73, "localizedStringForKey:value:table:", v74, 0, 0);

    v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
    v78 = v77;

    v79 = sub_100047110((uint64_t *)&unk_100827460);
    v80 = swift_allocObject(v79, 72, 7);
    v81 = (__n128)xmmword_100622F90;
    *(_OWORD *)(v80 + 16) = xmmword_100622F90;
    v82 = *(_QWORD *)(a1 + v49);
    v68 = (uint64_t)v198;
    if ((unint64_t)v82 >> 62)
    {
      if (v82 < 0)
        v183 = v82;
      else
        v183 = v82 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v82);
      v83 = _CocoaArrayWrapper.endIndex.getter(v183);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v82, v184, v185, v186, v187, v188, v189, v190);
    }
    else
    {
      v83 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)(v80 + 56) = &type metadata for Int;
    *(_QWORD *)(v80 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v80 + 32) = v83;
    v84 = String.init(format:_:)(v76, v78, v80, v81);
    v86 = v85;
    swift_bridgeObjectRelease(v78, v85, v87, v88, v89, v90, v91, v92);
    *(_QWORD *)&v209 = v84;
    *((_QWORD *)&v209 + 1) = v86;
    v93 = Text.init<A>(_:)(&v209, &type metadata for String, v195);
    v95 = v94;
    v97 = v96;
    v99 = v98 & 1;
    *(_QWORD *)&v206 = v93;
    *((_QWORD *)&v206 + 1) = v94;
    *(_QWORD *)&v207 = v98 & 1;
    *((_QWORD *)&v207 + 1) = v96;
    v208 = 256;
    sub_1000E439C(v93, v94, v98 & 1);
    swift_bridgeObjectRetain(v97);
    v100 = sub_100047110(&qword_100826BF0);
    v101 = sub_1002B35FC();
    _ConditionalContent<>.init(storage:)(&v206, v100, &type metadata for Text, v101, &protocol witness table for Text);
    v102 = v211;
    v103 = v212;
    v104 = v210;
    v105 = v197;
    *v197 = v209;
    v105[1] = v104;
    *((_BYTE *)v105 + 32) = v102;
    *((_BYTE *)v105 + 33) = v103;
    swift_storeEnumTagMultiPayload(v105, v196, 0);
    v106 = sub_100047110(&qword_10083D3F0);
    v107 = sub_1005D7418();
    v108 = sub_1005D7484();
    _ConditionalContent<>.init(storage:)(v105, v106, v200, v107, v108);
    sub_1000E4458(v93, v95, v99);
    swift_bridgeObjectRelease(v97, v109, v110, v111, v112, v113, v114, v115);
  }
LABEL_20:
  v155 = v202 & 1;
  sub_100021CC0(v68, v55, &qword_10083D3E8);
  v157 = v203;
  v156 = v204;
  *(_QWORD *)v52 = v204;
  *(_QWORD *)(v52 + 8) = v157;
  *(_BYTE *)(v52 + 16) = v155;
  v158 = v205;
  *(_QWORD *)(v52 + 24) = v205;
  v159 = sub_100047110(&qword_10083D408);
  sub_100021CC0(v55, v52 + *(int *)(v159 + 48), &qword_10083D3E8);
  sub_1000E439C(v156, v157, v155);
  swift_bridgeObjectRetain(v158);
  sub_10001BE90(v68, &qword_10083D3E8);
  sub_10001BE90(v55, &qword_10083D3E8);
  sub_1000E4458(v156, v157, v155);
  swift_bridgeObjectRelease(v158, v160, v161, v162, v163, v164, v165, v166);
}

uint64_t sub_1005D6644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t ChartLollipopView;
  void *v16;
  Class isa;
  id v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = type metadata accessor for Calendar.Identifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Calendar(0);
  v5 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DayIndex(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v23 = *(_QWORD *)(v12 - 8);
  v24 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  ChartLollipopView = type metadata accessor for TrainingLoadChartLollipopView(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v0 + *(int *)(ChartLollipopView + 20), v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for Calendar.Identifier.gregorian(_:), v1);
  Calendar.init(identifier:)(v4);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  DayIndex.startDate(in:)(v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v22);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_10081E0C8 != -1)
    swift_once(&qword_10081E0C8, sub_1005D4E60);
  v16 = (void *)qword_10086B030;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend(v16, "stringFromDate:", isa);

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v24);
  return v19;
}

id sub_1005D6878@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD v12[2];

  result = (id)FILocalizedActivityNameWithWorkout(*a1, 0);
  if (result)
  {
    v4 = result;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v7 = v6;

    v12[0] = v5;
    v12[1] = v7;
    v8 = sub_100038CA0();
    result = (id)Text.init<A>(_:)(v12, &type metadata for String, v8);
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v9;
    *(_BYTE *)(a2 + 16) = v10 & 1;
    *(_QWORD *)(a2 + 24) = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1005D6900@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t Band;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  double result;
  __int128 v40;
  __int128 v41;
  unsigned __int8 v42;
  char v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int16 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  unsigned __int8 v52;
  char v53;

  v4 = sub_100047110(&qword_100836920);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 + *(int *)(type metadata accessor for TrainingLoadChartLollipopView(0) + 20);
  if ((TrainingLoadViewModel.hasValue(onDay:)(v7) & 1) != 0)
  {
    TrainingLoadViewModel.band(onDay:)(v7);
    Band = type metadata accessor for TrainingLoadBand(0);
    v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(Band - 8) + 48))(v6, 1, Band);
    sub_10001BE90((uint64_t)v6, &qword_100836920);
    if (v9 == 1)
    {
      v10 = LocalizedStringKey.init(stringLiteral:)(0x6C65736142206F4ELL, 0xEB00000000656E69);
      v11 = Text.init(_:tableName:bundle:comment:)(v10);
      v13 = v12;
      v15 = v14;
      v17 = v16 & 1;
      KeyPath = swift_getKeyPath(&unk_1006494C0);
      *(_QWORD *)&v45 = v11;
      *((_QWORD *)&v45 + 1) = v13;
      *(_QWORD *)&v46 = v17;
      *((_QWORD *)&v46 + 1) = v15;
      *(_QWORD *)&v47 = KeyPath;
      *((_QWORD *)&v47 + 1) = 0x3FE0000000000000;
      LOBYTE(v48) = 1;
    }
    else
    {
      *(_QWORD *)&v49 = TrainingLoadViewModel.loadPercentage(onDay:)(v7);
      *((_QWORD *)&v49 + 1) = v28;
      v29 = sub_100038CA0();
      *(_QWORD *)&v45 = Text.init<A>(_:)(&v49, &type metadata for String, v29);
      *((_QWORD *)&v45 + 1) = v30;
      *(_QWORD *)&v46 = v31 & 1;
      *((_QWORD *)&v46 + 1) = v32;
      v47 = 0uLL;
      LOBYTE(v48) = 0;
    }
    v33 = sub_100047110(&qword_10083D3C8);
    v34 = sub_1005D72F8();
    _ConditionalContent<>.init(storage:)(&v45, &type metadata for Text, v33, &protocol witness table for Text, v34);
    v45 = v49;
    v46 = v50;
    v47 = v51;
    v48 = v52;
  }
  else
  {
    v19 = LocalizedStringKey.init(stringLiteral:)(0x61746144206F4ELL, 0xE700000000000000);
    v20 = Text.init(_:tableName:bundle:comment:)(v19);
    v22 = v21;
    v24 = v23;
    v26 = v25 & 1;
    v27 = swift_getKeyPath(&unk_1006494C0);
    *(_QWORD *)&v45 = v20;
    *((_QWORD *)&v45 + 1) = v22;
    *(_QWORD *)&v46 = v26;
    *((_QWORD *)&v46 + 1) = v24;
    *(_QWORD *)&v47 = v27;
    *((_QWORD *)&v47 + 1) = 0x3FE0000000000000;
    v48 = 256;
  }
  v35 = sub_100047110(&qword_10083D3B8);
  v36 = sub_100047110(&qword_10083D3C8);
  v37 = sub_1005D728C();
  v38 = sub_1005D72F8();
  _ConditionalContent<>.init(storage:)(&v45, v35, v36, v37, v38);
  result = *(double *)&v49;
  v40 = v50;
  v41 = v51;
  v42 = v52;
  v43 = v53;
  *(_OWORD *)a2 = v49;
  *(_OWORD *)(a2 + 16) = v40;
  *(_OWORD *)(a2 + 32) = v41;
  *(_BYTE *)(a2 + 48) = v42;
  *(_BYTE *)(a2 + 49) = v43;
  return result;
}

double sub_1005D6BC4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  double result;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v1 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TrainingLoadChartLollipopView(0) + 40));
  v2 = *v1;
  v3 = v1[1];
  v4 = *((_BYTE *)v1 + 16);
  swift_retain(*v1);
  swift_retain(v3);
  v5 = sub_100047110(&qword_100820FF8);
  Binding.wrappedValue.getter(v5);
  v8 = v2;
  v9 = v3;
  v10 = v4;
  v7 = (v11 & 1) == 0;
  Binding.wrappedValue.setter(&v7, v5);
  swift_release(v3);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t sub_1005D6C80()
{
  uint64_t v0;
  int *ChartLollipopView;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ViewModel;
  uint64_t v9;
  uint64_t v10;
  SEL v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  _QWORD *v18;

  ChartLollipopView = (int *)type metadata accessor for TrainingLoadChartLollipopView(0);
  v2 = *((_QWORD *)ChartLollipopView - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  ViewModel = type metadata accessor for TrainingLoadViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(ViewModel - 8) + 8))(v7, ViewModel);
  v9 = v7 + ChartLollipopView[5];
  v10 = type metadata accessor for DayIndex(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(v7 + ChartLollipopView[7]), v11, v12, v13, v14, v15, v16, v17);

  v18 = (_QWORD *)(v7 + ChartLollipopView[10]);
  swift_release(*v18);
  swift_release(v18[1]);
  sub_10010C5EC(*(id *)(v7 + ChartLollipopView[11]), *(_BYTE *)(v7 + ChartLollipopView[11] + 8));

  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005D6D7C(uint64_t a1, uint64_t a2)
{
  uint64_t ChartLollipopView;

  ChartLollipopView = type metadata accessor for TrainingLoadChartLollipopView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ChartLollipopView - 8) + 32))(a2, a1, ChartLollipopView);
  return a2;
}

double sub_1005D6DC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TrainingLoadChartLollipopView(0) - 8) + 80);
  return sub_1005D6BC4(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_1005D6DEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D300;
  if (!qword_10083D300)
  {
    v1 = sub_100007050(&qword_10083D2E8);
    sub_1005D6E70();
    sub_100028384(&qword_100823800, &qword_100821238, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D300);
  }
  return result;
}

unint64_t sub_1005D6E70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D308;
  if (!qword_10083D308)
  {
    v1 = sub_100007050(&qword_10083D2E0);
    sub_1005D6EF4();
    sub_100028384(&qword_1008237F0, &qword_1008237F8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D308);
  }
  return result;
}

unint64_t sub_1005D6EF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D310;
  if (!qword_10083D310)
  {
    v1 = sub_100007050(&qword_10083D2D8);
    sub_1000F4518(&qword_10083D318, &qword_10083D2D0, (void (*)(void))sub_1005D6F90);
    sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D310);
  }
  return result;
}

uint64_t sub_1005D6F90()
{
  return sub_1000F4518(&qword_10083D320, &qword_10083D2C8, (void (*)(void))sub_1005D6FAC);
}

unint64_t sub_1005D6FAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D328;
  if (!qword_10083D328)
  {
    v1 = sub_100007050(&qword_100832E48);
    sub_100028384(&qword_10083D330, &qword_100832E40, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D328);
  }
  return result;
}

unint64_t sub_1005D7038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D360;
  if (!qword_10083D360)
  {
    v1 = sub_100007050(&qword_10083D350);
    sub_1005D70BC();
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D360);
  }
  return result;
}

unint64_t sub_1005D70BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D368;
  if (!qword_10083D368)
  {
    v1 = sub_100007050(&qword_10083D348);
    sub_100028384(&qword_10083D370, &qword_10083D378, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D368);
  }
  return result;
}

unint64_t sub_1005D7138()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D388;
  if (!qword_10083D388)
  {
    v1 = sub_100007050(&qword_10083D380);
    sub_1005D71BC();
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D388);
  }
  return result;
}

unint64_t sub_1005D71BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D390;
  if (!qword_10083D390)
  {
    v1 = sub_100007050(&qword_10083D398);
    sub_1005D7220();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D390);
  }
  return result;
}

unint64_t sub_1005D7220()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D3A0;
  if (!qword_10083D3A0)
  {
    v1 = sub_100007050(&qword_10083D3A8);
    sub_1005D728C();
    sub_1005D72F8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D3A0);
  }
  return result;
}

unint64_t sub_1005D728C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D3B0;
  if (!qword_10083D3B0)
  {
    v1 = sub_100007050(&qword_10083D3B8);
    sub_1005D72F8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D3B0);
  }
  return result;
}

unint64_t sub_1005D72F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D3C0;
  if (!qword_10083D3C0)
  {
    v1 = sub_100007050(&qword_10083D3C8);
    sub_100028384(&qword_100826E78, &qword_100826E80, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D3C0);
  }
  return result;
}

void sub_1005D737C(uint64_t a1, uint64_t a2, char a3, CHWorkoutDetailHeartRateTableViewCell *a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  if ((a8 & 1) != 0)
  {
    sub_1000E4458(a1, a2, a3 & 1);
    swift_release(a5);
    swift_bridgeObjectRelease(a4, v10, v11, v12, v13, v14, v15, v16);
  }
  else
  {
    sub_1005D73CC(a1, a2, a3, a4, a5, a6, a7 & 1);
  }
}

void sub_1005D73CC(uint64_t a1, uint64_t a2, char a3, CHWorkoutDetailHeartRateTableViewCell *a4, uint64_t a5, uint64_t a6, char a7)
{
  const char *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  if ((a7 & 1) != 0)
  {
    sub_1000E4458(a1, a2, a3 & 1);
    swift_release(a5);
  }
  else
  {
    sub_1000E4458(a1, a2, a3 & 1);
  }
  swift_bridgeObjectRelease(a4, v9, v10, v11, v12, v13, v14, v15);
}

unint64_t sub_1005D7418()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D3F8;
  if (!qword_10083D3F8)
  {
    v1 = sub_100007050(&qword_10083D3F0);
    sub_1002B35FC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D3F8);
  }
  return result;
}

unint64_t sub_1005D7484()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D400;
  if (!qword_10083D400)
  {
    v1 = sub_100007050(&qword_10083D3D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D400);
  }
  return result;
}

double sub_1005D74E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  double result;

  if ((a6 & 1) == 0)
    return sub_100116B48(a1, a2, a3, a4);
  sub_1000E439C(a1, a2, a3 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRetain(a4).n128_u64[0];
  return result;
}

double sub_1005D7524(uint64_t a1, uint64_t a2, char a3, CHWorkoutDetailHeartRateTableViewCell *a4, uint64_t a5, char a6)
{
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  double result;

  if ((a6 & 1) == 0)
    return sub_100116B88(a1, a2, a3, (uint64_t)a4);
  sub_1000E4458(a1, a2, a3 & 1);
  swift_bridgeObjectRelease(a4, v7, v8, v9, v10, v11, v12, v13);
  return result;
}

uint64_t sub_1005D7564()
{
  _QWORD v1[2];

  v1[0] = sub_100007050(&qword_10083D2E8);
  v1[1] = sub_1005D6DEC();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
}

void sub_1005D75B0(uint64_t a1)
{
  __int128 *v1;
  __int128 *v2;
  CHWorkoutDetailHeartRateTableViewCell *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  uint64_t v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  uint64_t v15;
  SEL v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  __int128 v23;
  Swift::UInt v24;

  v2 = v1;
  v23 = *v2;
  LOWORD(v24) = *((_WORD *)v2 + 8);
  sub_1000EB3F4(v23, *((uint64_t *)&v23 + 1), v24);
  sub_10054FFE4(v23, *((uint64_t *)&v23 + 1), v24);
  v5 = v4;
  String.hash(into:)(a1, v6, v4);
  swift_bridgeObjectRelease(v5, v7, v8, v9, v10, v11, v12, v13);
  if (!(_BYTE)v24 || v24 == 2)
  {
    Hasher._combine(_:)(v23);
  }
  else if (v24 == 1)
  {
    String.hash(into:)(a1, v23, *((_QWORD *)&v23 + 1));
  }
  Hasher._combine(_:)(BYTE1(v24));
  sub_1005D82D0((uint64_t)&v23);
  v15 = *((_QWORD *)v2 + 3);
  v14 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)v2 + 4);
  swift_bridgeObjectRetain(v14);
  String.hash(into:)(a1, v15, v14);
  swift_bridgeObjectRelease(v14, v16, v17, v18, v19, v20, v21, v22);
}

uint64_t sub_1005D76A4(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int16 v19;

  v3 = v1;
  v5 = sub_100047110(&qword_10083D4F8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100016804(a1, v9);
  v11 = sub_1005D828C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for LoadingCardHeightProvider.HeightKey.CodingKeys, &type metadata for LoadingCardHeightProvider.HeightKey.CodingKeys, v11, v9, v10);
  v18 = *v3;
  v19 = *((_WORD *)v3 + 8);
  v17 = 0;
  v12 = sub_1000EFD70();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, &v17, v5, &type metadata for CardTemplate, v12);
  if (!v2)
  {
    v13 = *((_QWORD *)v3 + 3);
    v14 = *((_QWORD *)v3 + 4);
    LOBYTE(v18) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v13, v14, &v18, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1005D77D8()
{
  _BYTE *v0;

  if (*v0)
    return 0x65746143657A6973;
  else
    return 0x706D655464726163;
}

uint64_t sub_1005D7824@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1005D7F6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005D7848(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005D828C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005D7870(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005D828C();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1005D7898@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1005D808C(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1005D78DC(_QWORD *a1)
{
  return sub_1005D76A4(a1);
}

Swift::Int sub_1005D78F0()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_1005D75B0((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1005D7930(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_1005D75B0((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_1005D7968(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 17);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a2 + 17);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = sub_100551290(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  result = 0;
  if ((v8 & 1) != 0 && ((v2 ^ v5) & 1) == 0)
  {
    if (v3 == v6 && v4 == v7)
      return 1;
    else
      return _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v6, v7, 0);
  }
  return result;
}

uint64_t type metadata accessor for LoadingCardHeightProvider()
{
  return objc_opt_self(_TtC10FitnessApp25LoadingCardHeightProvider);
}

void destroy for LoadingCardHeightProvider.HeightKey(uint64_t a1)
{
  SEL v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  sub_1000EB41C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease(*(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 32), v2, v3, v4, v5, v6, v7, v8);
}

uint64_t initializeWithCopy for LoadingCardHeightProvider.HeightKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1000EB3F4(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t assignWithCopy for LoadingCardHeightProvider.HeightKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1000EB3F4(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_1000EB41C(v7, v8, v9);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for LoadingCardHeightProvider.HeightKey(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_1000EB41C(v5, v6, v7);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease(v9, v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for LoadingCardHeightProvider.HeightKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LoadingCardHeightProvider.HeightKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadingCardHeightProvider.HeightKey()
{
  return &type metadata for LoadingCardHeightProvider.HeightKey;
}

unint64_t sub_1005D7C4C()
{
  unint64_t result;

  result = qword_10083D4E0;
  if (!qword_10083D4E0)
  {
    result = swift_getWitnessTable(&unk_100649574, &type metadata for LoadingCardHeightProvider.HeightKey);
    atomic_store(result, (unint64_t *)&qword_10083D4E0);
  }
  return result;
}

unint64_t sub_1005D7C90()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  const char *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  v1 = JSONDecoder.init()();
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "dataForKey:", v3);

  if (v4)
  {
    v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v14 = v13;

    v15 = sub_100047110(&qword_10083D500);
    v16 = sub_1005D8344(&qword_10083D518, (void (*)(void))sub_1005D83B8, (uint64_t)&protocol witness table for Double, (uint64_t)&protocol conformance descriptor for <> [A : B]);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v19, v15, v12, v14, v15, v16);
    sub_10004D9E4(v12, v14);
    swift_release(v1);
    return v19;
  }
  else
  {
    v17 = sub_100436A54(&_swiftEmptyArrayStorage, v5, v6, v7, v8, v9, v10, v11);
    swift_release(v1);
    return v17;
  }
}

uint64_t sub_1005D7E20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  Class isa;
  NSString v11;
  uint64_t v13;

  v2 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = JSONEncoder.init()();
  v13 = a1;
  v4 = sub_100047110(&qword_10083D500);
  v5 = sub_1005D8344(&qword_10083D508, (void (*)(void))sub_1005D8300, (uint64_t)&protocol witness table for Double, (uint64_t)&protocol conformance descriptor for <> [A : B]);
  v6 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v13, v4, v5);
  v8 = v7;
  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  isa = Data._bridgeToObjectiveC()().super.isa;
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setObject:forKey:", isa, v11);

  swift_release(v3);
  return sub_10004D9E4(v6, v8);
}

uint64_t sub_1005D7F6C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x706D655464726163 && a2 == 0xEC0000006574616CLL)
  {
    v5 = 0xEC0000006574616CLL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x706D655464726163, 0xEC0000006574616CLL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x65746143657A6973 && a2 == 0xEC00000079726F67)
  {
    swift_bridgeObjectRelease(0xEC00000079726F67);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65746143657A6973, 0xEC00000079726F67, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1005D808C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  CHWorkoutDetailHeartRateTableViewCell *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  char v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  int v33;
  char v34;

  v5 = sub_100047110(&qword_10083D4E8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100016804(a1, v9);
  v11 = sub_1005D828C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for LoadingCardHeightProvider.HeightKey.CodingKeys, &type metadata for LoadingCardHeightProvider.HeightKey.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  }
  else
  {
    v34 = 0;
    v12 = sub_1000F0674();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v29, &type metadata for CardTemplate, &v34, v5, &type metadata for CardTemplate, v12);
    v13 = v29;
    v14 = v30;
    HIDWORD(v28) = v32;
    LOBYTE(v29) = 1;
    v33 = v31;
    sub_1000EB3F4(v13, v30, v31);
    v15 = KeyedDecodingContainer.decode(_:forKey:)(&v29, v5);
    v17 = v16;
    v18 = *(void (**)(char *, uint64_t))(v6 + 8);
    v19 = v15;
    v18(v8, v5);
    swift_bridgeObjectRetain(v17);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
    v20 = v33;
    sub_1000EB41C(v13, v14, v33);
    swift_bridgeObjectRelease(v17, v21, v22, v23, v24, v25, v26, v27);
    *(_QWORD *)a2 = v13;
    *(_QWORD *)(a2 + 8) = v14;
    *(_BYTE *)(a2 + 16) = v20;
    *(_BYTE *)(a2 + 17) = BYTE4(v28);
    *(_QWORD *)(a2 + 24) = v19;
    *(_QWORD *)(a2 + 32) = v17;
  }
}

unint64_t sub_1005D828C()
{
  unint64_t result;

  result = qword_10083D4F0;
  if (!qword_10083D4F0)
  {
    result = swift_getWitnessTable(&unk_1006496F0, &type metadata for LoadingCardHeightProvider.HeightKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10083D4F0);
  }
  return result;
}

uint64_t sub_1005D82D0(uint64_t a1)
{
  sub_1000EB41C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

unint64_t sub_1005D8300()
{
  unint64_t result;

  result = qword_10083D510;
  if (!qword_10083D510)
  {
    result = swift_getWitnessTable(&unk_1006495DC, &type metadata for LoadingCardHeightProvider.HeightKey);
    atomic_store(result, (unint64_t *)&qword_10083D510);
  }
  return result;
}

uint64_t sub_1005D8344(unint64_t *a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100007050(&qword_10083D500);
    a2();
    result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005D83B8()
{
  unint64_t result;

  result = qword_10083D520;
  if (!qword_10083D520)
  {
    result = swift_getWitnessTable(&unk_100649604, &type metadata for LoadingCardHeightProvider.HeightKey);
    atomic_store(result, (unint64_t *)&qword_10083D520);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LoadingCardHeightProvider.HeightKey.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1005D8448 + 4 * byte_100649525[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1005D847C + 4 * byte_100649520[v4]))();
}

uint64_t sub_1005D847C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005D8484(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005D848CLL);
  return result;
}

uint64_t sub_1005D8498(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005D84A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1005D84A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005D84AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LoadingCardHeightProvider.HeightKey.CodingKeys()
{
  return &type metadata for LoadingCardHeightProvider.HeightKey.CodingKeys;
}

unint64_t sub_1005D84CC()
{
  unint64_t result;

  result = qword_10083D528;
  if (!qword_10083D528)
  {
    result = swift_getWitnessTable(&unk_1006496C8, &type metadata for LoadingCardHeightProvider.HeightKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10083D528);
  }
  return result;
}

unint64_t sub_1005D8514()
{
  unint64_t result;

  result = qword_10083D530;
  if (!qword_10083D530)
  {
    result = swift_getWitnessTable(&unk_100649638, &type metadata for LoadingCardHeightProvider.HeightKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10083D530);
  }
  return result;
}

unint64_t sub_1005D855C()
{
  unint64_t result;

  result = qword_10083D538;
  if (!qword_10083D538)
  {
    result = swift_getWitnessTable(&unk_100649660, &type metadata for LoadingCardHeightProvider.HeightKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10083D538);
  }
  return result;
}

void sub_1005D85A0()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000030, 0x80000001006A9880, "FitnessApp/WorkoutOverlayPathRenderer.swift", 43, 2, 41, 0);
  __break(1u);
}

id sub_1005D85F8(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  id v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings] = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  v6 = objc_msgSendSuper2(&v8, "initWithOverlay:", a1);
  swift_unknownObjectRelease(a1);
  return v6;
}

id sub_1005D8698()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutOverlayPathRenderer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutOverlayPathRenderer()
{
  return objc_opt_self(_TtC10FitnessApp26WorkoutOverlayPathRenderer);
}

uint64_t sub_1005D86F8()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for WorkoutDataBucket()
{
  return objc_opt_self(_TtC10FitnessApp17WorkoutDataBucket);
}

ValueMetadata *type metadata accessor for HighlightsPagingScrollTargetBehavior()
{
  return &type metadata for HighlightsPagingScrollTargetBehavior;
}

double sub_1005D8738()
{
  double result;

  if (qword_10081D968 != -1)
    swift_once(&qword_10081D968, sub_100282020);
  result = *(double *)&qword_10082B108 + 10.0;
  *(double *)&qword_10083D658 = *(double *)&qword_10082B108 + 10.0;
  return result;
}

uint64_t sub_1005D8788()
{
  double v0;
  double v1;
  double v2;
  double v3;
  double v4;
  uint64_t (*v5)(_BYTE *, _QWORD);
  double *v6;
  _BYTE v8[32];

  ScrollTarget.rect.getter();
  v1 = v0;
  if (qword_10081D968 != -1)
    swift_once(&qword_10081D968, sub_100282020);
  v2 = *(double *)&qword_10082B108;
  v3 = ScrollTarget.rect.getter();
  if (qword_10081E0D0 != -1)
    swift_once(&qword_10081E0D0, sub_1005D8738);
  v4 = *(double *)&qword_10083D658 * round((v3 + (v1 - v2) * 0.5) / *(double *)&qword_10083D658) - (v1 - v2) * 0.5;
  v5 = (uint64_t (*)(_BYTE *, _QWORD))ScrollTarget.rect.modify(v8);
  *v6 = v4;
  return v5(v8, 0);
}

uint64_t destroy for ActivityStatisticsCompilation(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[9]);
  swift_bridgeObjectRelease(a1[10]);
  swift_bridgeObjectRelease(a1[16]);
  swift_bridgeObjectRelease(a1[17]);
  swift_bridgeObjectRelease(a1[27]);
  swift_bridgeObjectRelease(a1[28]);
  swift_bridgeObjectRelease(a1[34]);
  swift_bridgeObjectRelease(a1[35]);
  swift_bridgeObjectRelease(a1[41]);
  swift_bridgeObjectRelease(a1[42]);
  swift_bridgeObjectRelease(a1[52]);
  swift_bridgeObjectRelease(a1[53]);
  swift_bridgeObjectRelease(a1[59]);
  swift_bridgeObjectRelease(a1[60]);
  swift_bridgeObjectRelease(a1[66]);
  swift_bridgeObjectRelease(a1[67]);
  swift_bridgeObjectRelease(a1[77]);
  swift_bridgeObjectRelease(a1[78]);
  swift_bridgeObjectRelease(a1[84]);
  swift_bridgeObjectRelease(a1[85]);
  swift_bridgeObjectRelease(a1[91]);
  swift_bridgeObjectRelease(a1[92]);
  swift_bridgeObjectRelease(a1[102]);
  swift_bridgeObjectRelease(a1[103]);
  swift_bridgeObjectRelease(a1[109]);
  swift_bridgeObjectRelease(a1[110]);
  swift_bridgeObjectRelease(a1[116]);
  swift_bridgeObjectRelease(a1[117]);
  swift_bridgeObjectRelease(a1[127]);
  swift_bridgeObjectRelease(a1[128]);
  swift_bridgeObjectRelease(a1[134]);
  swift_bridgeObjectRelease(a1[135]);
  swift_bridgeObjectRelease(a1[141]);
  swift_bridgeObjectRelease(a1[142]);
  swift_bridgeObjectRelease(a1[152]);
  swift_bridgeObjectRelease(a1[153]);
  swift_bridgeObjectRelease(a1[159]);
  swift_bridgeObjectRelease(a1[160]);
  swift_bridgeObjectRelease(a1[166]);
  swift_bridgeObjectRelease(a1[167]);
  swift_bridgeObjectRelease(a1[177]);
  swift_bridgeObjectRelease(a1[178]);
  swift_bridgeObjectRelease(a1[184]);
  swift_bridgeObjectRelease(a1[185]);
  swift_bridgeObjectRelease(a1[191]);
  swift_bridgeObjectRelease(a1[192]);
  swift_bridgeObjectRelease(a1[202]);
  swift_bridgeObjectRelease(a1[203]);
  swift_bridgeObjectRelease(a1[209]);
  swift_bridgeObjectRelease(a1[210]);
  swift_bridgeObjectRelease(a1[216]);
  return swift_bridgeObjectRelease(a1[217]);
}

uint64_t initializeWithCopy for ActivityStatisticsCompilation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v70 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v70;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v68 = *(_QWORD *)(a2 + 72);
  v69 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v68;
  *(_QWORD *)(a1 + 80) = v69;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  v66 = *(_QWORD *)(a2 + 128);
  v67 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v66;
  *(_QWORD *)(a1 + 136) = v67;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  v64 = *(_QWORD *)(a2 + 216);
  v65 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = v64;
  *(_QWORD *)(a1 + 224) = v65;
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  v5 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v5;
  v62 = *(_QWORD *)(a2 + 272);
  v63 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = v62;
  *(_QWORD *)(a1 + 280) = v63;
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  v6 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v6;
  v60 = *(_QWORD *)(a2 + 328);
  v61 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = v60;
  *(_QWORD *)(a1 + 336) = v61;
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  v7 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v7;
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_BYTE *)(a1 + 392) = *(_BYTE *)(a2 + 392);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  v58 = *(_QWORD *)(a2 + 416);
  v59 = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = v58;
  *(_QWORD *)(a1 + 424) = v59;
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  v56 = *(_QWORD *)(a2 + 472);
  v57 = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = v56;
  *(_QWORD *)(a1 + 480) = v57;
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  v8 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v8;
  v55 = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 528) = v55;
  v54 = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 536) = v54;
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 552) = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
  *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
  v53 = *(_QWORD *)(a2 + 616);
  *(_QWORD *)(a1 + 616) = v53;
  v52 = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 624) = v52;
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  v9 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v9;
  v50 = *(_QWORD *)(a2 + 672);
  *(_QWORD *)(a1 + 672) = v50;
  v51 = *(_QWORD *)(a2 + 680);
  *(_QWORD *)(a1 + 680) = v51;
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  v10 = *(_OWORD *)(a2 + 712);
  *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
  *(_OWORD *)(a1 + 712) = v10;
  v48 = *(_QWORD *)(a2 + 728);
  *(_QWORD *)(a1 + 728) = v48;
  v49 = *(_QWORD *)(a2 + 736);
  *(_QWORD *)(a1 + 736) = v49;
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  v11 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v11;
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_BYTE *)(a1 + 792) = *(_BYTE *)(a2 + 792);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  v46 = *(_QWORD *)(a2 + 816);
  *(_QWORD *)(a1 + 816) = v46;
  v47 = *(_QWORD *)(a2 + 824);
  *(_QWORD *)(a1 + 824) = v47;
  *(_QWORD *)(a1 + 832) = *(_QWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
  *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
  *(_QWORD *)(a1 + 888) = *(_QWORD *)(a2 + 888);
  *(_QWORD *)(a1 + 944) = *(_QWORD *)(a2 + 944);
  v45 = *(_QWORD *)(a2 + 872);
  *(_QWORD *)(a1 + 872) = v45;
  v12 = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 912) = v12;
  *(_OWORD *)(a1 + 952) = *(_OWORD *)(a2 + 952);
  *(_OWORD *)(a1 + 968) = *(_OWORD *)(a2 + 968);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1000) = *(_OWORD *)(a2 + 1000);
  v13 = *(_OWORD *)(a2 + 1112);
  *(_OWORD *)(a1 + 1096) = *(_OWORD *)(a2 + 1096);
  *(_OWORD *)(a1 + 1112) = v13;
  *(_QWORD *)(a1 + 1144) = *(_QWORD *)(a2 + 1144);
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_BYTE *)(a1 + 1192) = *(_BYTE *)(a2 + 1192);
  *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
  *(_QWORD *)(a1 + 1344) = *(_QWORD *)(a2 + 1344);
  *(_OWORD *)(a1 + 1240) = *(_OWORD *)(a2 + 1240);
  *(_OWORD *)(a1 + 1256) = *(_OWORD *)(a2 + 1256);
  *(_OWORD *)(a1 + 1352) = *(_OWORD *)(a2 + 1352);
  *(_OWORD *)(a1 + 1368) = *(_OWORD *)(a2 + 1368);
  *(_QWORD *)(a1 + 1384) = *(_QWORD *)(a2 + 1384);
  *(_BYTE *)(a1 + 1392) = *(_BYTE *)(a2 + 1392);
  *(_QWORD *)(a1 + 1432) = *(_QWORD *)(a2 + 1432);
  *(_QWORD *)(a1 + 1488) = *(_QWORD *)(a2 + 1488);
  *(_OWORD *)(a1 + 1400) = *(_OWORD *)(a2 + 1400);
  v14 = *(_OWORD *)(a2 + 1512);
  *(_OWORD *)(a1 + 1496) = *(_OWORD *)(a2 + 1496);
  *(_OWORD *)(a1 + 1512) = v14;
  *(_QWORD *)(a1 + 1544) = *(_QWORD *)(a2 + 1544);
  *(_QWORD *)(a1 + 1584) = *(_QWORD *)(a2 + 1584);
  *(_BYTE *)(a1 + 1592) = *(_BYTE *)(a2 + 1592);
  *(_QWORD *)(a1 + 1632) = *(_QWORD *)(a2 + 1632);
  *(_QWORD *)(a1 + 1688) = *(_QWORD *)(a2 + 1688);
  *(_QWORD *)(a1 + 1744) = *(_QWORD *)(a2 + 1744);
  *(_OWORD *)(a1 + 1640) = *(_OWORD *)(a2 + 1640);
  *(_OWORD *)(a1 + 1656) = *(_OWORD *)(a2 + 1656);
  *(_OWORD *)(a1 + 1752) = *(_OWORD *)(a2 + 1752);
  v15 = *(_OWORD *)(a2 + 1768);
  v16 = *(_QWORD *)(a2 + 880);
  *(_QWORD *)(a1 + 880) = v16;
  *(_OWORD *)(a1 + 1768) = v15;
  *(_QWORD *)(a1 + 1784) = *(_QWORD *)(a2 + 1784);
  *(_BYTE *)(a1 + 1792) = *(_BYTE *)(a2 + 1792);
  *(_QWORD *)(a1 + 1800) = *(_QWORD *)(a2 + 1800);
  *(_QWORD *)(a1 + 1824) = *(_QWORD *)(a2 + 1824);
  v17 = *(_QWORD *)(a2 + 928);
  *(_QWORD *)(a1 + 928) = v17;
  v18 = *(_QWORD *)(a2 + 936);
  *(_QWORD *)(a1 + 936) = v18;
  v19 = *(_QWORD *)(a2 + 1016);
  *(_QWORD *)(a1 + 1016) = v19;
  v20 = *(_QWORD *)(a2 + 1024);
  *(_QWORD *)(a1 + 1024) = v20;
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  v21 = *(_QWORD *)(a2 + 1072);
  *(_QWORD *)(a1 + 1072) = v21;
  v22 = *(_QWORD *)(a2 + 1080);
  *(_QWORD *)(a1 + 1080) = v22;
  v23 = *(_QWORD *)(a2 + 1128);
  *(_QWORD *)(a1 + 1128) = v23;
  v24 = *(_QWORD *)(a2 + 1136);
  *(_QWORD *)(a1 + 1136) = v24;
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  v27 = *(_QWORD *)(a2 + 1216);
  *(_QWORD *)(a1 + 1216) = v27;
  v28 = *(_QWORD *)(a2 + 1224);
  *(_QWORD *)(a1 + 1224) = v28;
  v29 = *(_QWORD *)(a2 + 1272);
  *(_QWORD *)(a1 + 1272) = v29;
  v30 = *(_QWORD *)(a2 + 1280);
  *(_QWORD *)(a1 + 1280) = v30;
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  v31 = *(_QWORD *)(a2 + 1328);
  *(_QWORD *)(a1 + 1328) = v31;
  v32 = *(_QWORD *)(a2 + 1336);
  *(_QWORD *)(a1 + 1336) = v32;
  v33 = *(_QWORD *)(a2 + 1416);
  *(_QWORD *)(a1 + 1416) = v33;
  v34 = *(_QWORD *)(a2 + 1424);
  *(_QWORD *)(a1 + 1424) = v34;
  *(_OWORD *)(a1 + 1440) = *(_OWORD *)(a2 + 1440);
  *(_OWORD *)(a1 + 1456) = *(_OWORD *)(a2 + 1456);
  v35 = *(_QWORD *)(a2 + 1472);
  *(_QWORD *)(a1 + 1472) = v35;
  v36 = *(_QWORD *)(a2 + 1480);
  *(_QWORD *)(a1 + 1480) = v36;
  v37 = *(_QWORD *)(a2 + 1528);
  *(_QWORD *)(a1 + 1528) = v37;
  v39 = *(_QWORD *)(a2 + 1536);
  *(_QWORD *)(a1 + 1536) = v39;
  *(_OWORD *)(a1 + 1552) = *(_OWORD *)(a2 + 1552);
  *(_OWORD *)(a1 + 1568) = *(_OWORD *)(a2 + 1568);
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  v38 = *(_QWORD *)(a2 + 1616);
  *(_QWORD *)(a1 + 1616) = v38;
  v40 = *(_QWORD *)(a2 + 1624);
  *(_QWORD *)(a1 + 1624) = v40;
  v41 = *(_QWORD *)(a2 + 1672);
  *(_QWORD *)(a1 + 1672) = v41;
  v42 = *(_QWORD *)(a2 + 1680);
  *(_QWORD *)(a1 + 1680) = v42;
  *(_OWORD *)(a1 + 1696) = *(_OWORD *)(a2 + 1696);
  *(_OWORD *)(a1 + 1712) = *(_OWORD *)(a2 + 1712);
  v43 = *(_QWORD *)(a2 + 1728);
  *(_QWORD *)(a1 + 1728) = v43;
  v25 = *(_OWORD *)(a2 + 1808);
  v44 = *(_QWORD *)(a2 + 1736);
  *(_QWORD *)(a1 + 1736) = v44;
  *(_OWORD *)(a1 + 1808) = v25;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v70);
  swift_bridgeObjectRetain(v68);
  swift_bridgeObjectRetain(v69);
  swift_bridgeObjectRetain(v66);
  swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRetain(v64);
  swift_bridgeObjectRetain(v65);
  swift_bridgeObjectRetain(v62);
  swift_bridgeObjectRetain(v63);
  swift_bridgeObjectRetain(v60);
  swift_bridgeObjectRetain(v61);
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRetain(v55);
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRetain(v44);
  return a1;
}

uint64_t assignWithCopy for ActivityStatisticsCompilation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v12 = *(_QWORD *)(a2 + 128);
  v13 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a2 + 136);
  v15 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  v16 = *(_QWORD *)(a2 + 216);
  v17 = *(_QWORD *)(a1 + 216);
  *(_QWORD *)(a1 + 216) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)(a2 + 224);
  v19 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  v20 = *(_QWORD *)(a2 + 272);
  v21 = *(_QWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 272) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  v22 = *(_QWORD *)(a2 + 280);
  v23 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 280) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v24 = *(_QWORD *)(a2 + 328);
  v25 = *(_QWORD *)(a1 + 328);
  *(_QWORD *)(a1 + 328) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  v26 = *(_QWORD *)(a2 + 336);
  v27 = *(_QWORD *)(a1 + 336);
  *(_QWORD *)(a1 + 336) = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_BYTE *)(a1 + 392) = *(_BYTE *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  v28 = *(_QWORD *)(a2 + 416);
  v29 = *(_QWORD *)(a1 + 416);
  *(_QWORD *)(a1 + 416) = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v29);
  v30 = *(_QWORD *)(a2 + 424);
  v31 = *(_QWORD *)(a1 + 424);
  *(_QWORD *)(a1 + 424) = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v31);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  v32 = *(_QWORD *)(a2 + 472);
  v33 = *(_QWORD *)(a1 + 472);
  *(_QWORD *)(a1 + 472) = v32;
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRelease(v33);
  v34 = *(_QWORD *)(a2 + 480);
  v35 = *(_QWORD *)(a1 + 480);
  *(_QWORD *)(a1 + 480) = v34;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v35);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  v36 = *(_QWORD *)(a2 + 528);
  v37 = *(_QWORD *)(a1 + 528);
  *(_QWORD *)(a1 + 528) = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v37);
  v38 = *(_QWORD *)(a2 + 536);
  v39 = *(_QWORD *)(a1 + 536);
  *(_QWORD *)(a1 + 536) = v38;
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRelease(v39);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  v40 = *(_QWORD *)(a2 + 616);
  v41 = *(_QWORD *)(a1 + 616);
  *(_QWORD *)(a1 + 616) = v40;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRelease(v41);
  v42 = *(_QWORD *)(a2 + 624);
  v43 = *(_QWORD *)(a1 + 624);
  *(_QWORD *)(a1 + 624) = v42;
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRelease(v43);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  v44 = *(_QWORD *)(a2 + 672);
  v45 = *(_QWORD *)(a1 + 672);
  *(_QWORD *)(a1 + 672) = v44;
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRelease(v45);
  v46 = *(_QWORD *)(a2 + 680);
  v47 = *(_QWORD *)(a1 + 680);
  *(_QWORD *)(a1 + 680) = v46;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRelease(v47);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  v48 = *(_QWORD *)(a2 + 728);
  v49 = *(_QWORD *)(a1 + 728);
  *(_QWORD *)(a1 + 728) = v48;
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRelease(v49);
  v50 = *(_QWORD *)(a2 + 736);
  v51 = *(_QWORD *)(a1 + 736);
  *(_QWORD *)(a1 + 736) = v50;
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRelease(v51);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_BYTE *)(a1 + 792) = *(_BYTE *)(a2 + 792);
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
  *(_QWORD *)(a1 + 808) = *(_QWORD *)(a2 + 808);
  v52 = *(_QWORD *)(a2 + 816);
  v53 = *(_QWORD *)(a1 + 816);
  *(_QWORD *)(a1 + 816) = v52;
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRelease(v53);
  v54 = *(_QWORD *)(a2 + 824);
  v55 = *(_QWORD *)(a1 + 824);
  *(_QWORD *)(a1 + 824) = v54;
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRelease(v55);
  *(_QWORD *)(a1 + 832) = *(_QWORD *)(a2 + 832);
  *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
  *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
  v56 = *(_QWORD *)(a2 + 872);
  v57 = *(_QWORD *)(a1 + 872);
  *(_QWORD *)(a1 + 872) = v56;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease(v57);
  v58 = *(_QWORD *)(a2 + 880);
  v59 = *(_QWORD *)(a1 + 880);
  *(_QWORD *)(a1 + 880) = v58;
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRelease(v59);
  *(_QWORD *)(a1 + 888) = *(_QWORD *)(a2 + 888);
  *(_QWORD *)(a1 + 896) = *(_QWORD *)(a2 + 896);
  *(_QWORD *)(a1 + 904) = *(_QWORD *)(a2 + 904);
  *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
  *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
  v60 = *(_QWORD *)(a2 + 928);
  v61 = *(_QWORD *)(a1 + 928);
  *(_QWORD *)(a1 + 928) = v60;
  swift_bridgeObjectRetain(v60);
  swift_bridgeObjectRelease(v61);
  v62 = *(_QWORD *)(a2 + 936);
  v63 = *(_QWORD *)(a1 + 936);
  *(_QWORD *)(a1 + 936) = v62;
  swift_bridgeObjectRetain(v62);
  swift_bridgeObjectRelease(v63);
  *(_QWORD *)(a1 + 944) = *(_QWORD *)(a2 + 944);
  *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
  *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
  *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
  v64 = *(_QWORD *)(a2 + 1016);
  v65 = *(_QWORD *)(a1 + 1016);
  *(_QWORD *)(a1 + 1016) = v64;
  swift_bridgeObjectRetain(v64);
  swift_bridgeObjectRelease(v65);
  v66 = *(_QWORD *)(a2 + 1024);
  v67 = *(_QWORD *)(a1 + 1024);
  *(_QWORD *)(a1 + 1024) = v66;
  swift_bridgeObjectRetain(v66);
  swift_bridgeObjectRelease(v67);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  *(_QWORD *)(a1 + 1048) = *(_QWORD *)(a2 + 1048);
  *(_QWORD *)(a1 + 1056) = *(_QWORD *)(a2 + 1056);
  *(_QWORD *)(a1 + 1064) = *(_QWORD *)(a2 + 1064);
  v68 = *(_QWORD *)(a2 + 1072);
  v69 = *(_QWORD *)(a1 + 1072);
  *(_QWORD *)(a1 + 1072) = v68;
  swift_bridgeObjectRetain(v68);
  swift_bridgeObjectRelease(v69);
  v70 = *(_QWORD *)(a2 + 1080);
  v71 = *(_QWORD *)(a1 + 1080);
  *(_QWORD *)(a1 + 1080) = v70;
  swift_bridgeObjectRetain(v70);
  swift_bridgeObjectRelease(v71);
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  *(_QWORD *)(a1 + 1096) = *(_QWORD *)(a2 + 1096);
  *(_QWORD *)(a1 + 1104) = *(_QWORD *)(a2 + 1104);
  *(_QWORD *)(a1 + 1112) = *(_QWORD *)(a2 + 1112);
  *(_QWORD *)(a1 + 1120) = *(_QWORD *)(a2 + 1120);
  v72 = *(_QWORD *)(a2 + 1128);
  v73 = *(_QWORD *)(a1 + 1128);
  *(_QWORD *)(a1 + 1128) = v72;
  swift_bridgeObjectRetain(v72);
  swift_bridgeObjectRelease(v73);
  v74 = *(_QWORD *)(a2 + 1136);
  v75 = *(_QWORD *)(a1 + 1136);
  *(_QWORD *)(a1 + 1136) = v74;
  swift_bridgeObjectRetain(v74);
  swift_bridgeObjectRelease(v75);
  *(_QWORD *)(a1 + 1144) = *(_QWORD *)(a2 + 1144);
  *(_QWORD *)(a1 + 1152) = *(_QWORD *)(a2 + 1152);
  *(_QWORD *)(a1 + 1160) = *(_QWORD *)(a2 + 1160);
  *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
  *(_QWORD *)(a1 + 1176) = *(_QWORD *)(a2 + 1176);
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_BYTE *)(a1 + 1192) = *(_BYTE *)(a2 + 1192);
  *(_QWORD *)(a1 + 1200) = *(_QWORD *)(a2 + 1200);
  *(_QWORD *)(a1 + 1208) = *(_QWORD *)(a2 + 1208);
  v76 = *(_QWORD *)(a2 + 1216);
  v77 = *(_QWORD *)(a1 + 1216);
  *(_QWORD *)(a1 + 1216) = v76;
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRelease(v77);
  v78 = *(_QWORD *)(a2 + 1224);
  v79 = *(_QWORD *)(a1 + 1224);
  *(_QWORD *)(a1 + 1224) = v78;
  swift_bridgeObjectRetain(v78);
  swift_bridgeObjectRelease(v79);
  *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
  *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
  *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
  *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
  *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
  v80 = *(_QWORD *)(a2 + 1272);
  v81 = *(_QWORD *)(a1 + 1272);
  *(_QWORD *)(a1 + 1272) = v80;
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRelease(v81);
  v82 = *(_QWORD *)(a2 + 1280);
  v83 = *(_QWORD *)(a1 + 1280);
  *(_QWORD *)(a1 + 1280) = v82;
  swift_bridgeObjectRetain(v82);
  swift_bridgeObjectRelease(v83);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
  *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
  *(_QWORD *)(a1 + 1304) = *(_QWORD *)(a2 + 1304);
  *(_QWORD *)(a1 + 1312) = *(_QWORD *)(a2 + 1312);
  *(_QWORD *)(a1 + 1320) = *(_QWORD *)(a2 + 1320);
  v84 = *(_QWORD *)(a2 + 1328);
  v85 = *(_QWORD *)(a1 + 1328);
  *(_QWORD *)(a1 + 1328) = v84;
  swift_bridgeObjectRetain(v84);
  swift_bridgeObjectRelease(v85);
  v86 = *(_QWORD *)(a2 + 1336);
  v87 = *(_QWORD *)(a1 + 1336);
  *(_QWORD *)(a1 + 1336) = v86;
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRelease(v87);
  *(_QWORD *)(a1 + 1344) = *(_QWORD *)(a2 + 1344);
  *(_QWORD *)(a1 + 1352) = *(_QWORD *)(a2 + 1352);
  *(_QWORD *)(a1 + 1360) = *(_QWORD *)(a2 + 1360);
  *(_QWORD *)(a1 + 1368) = *(_QWORD *)(a2 + 1368);
  *(_QWORD *)(a1 + 1376) = *(_QWORD *)(a2 + 1376);
  *(_QWORD *)(a1 + 1384) = *(_QWORD *)(a2 + 1384);
  *(_BYTE *)(a1 + 1392) = *(_BYTE *)(a2 + 1392);
  *(_QWORD *)(a1 + 1400) = *(_QWORD *)(a2 + 1400);
  *(_QWORD *)(a1 + 1408) = *(_QWORD *)(a2 + 1408);
  v88 = *(_QWORD *)(a2 + 1416);
  v89 = *(_QWORD *)(a1 + 1416);
  *(_QWORD *)(a1 + 1416) = v88;
  swift_bridgeObjectRetain(v88);
  swift_bridgeObjectRelease(v89);
  v90 = *(_QWORD *)(a2 + 1424);
  v91 = *(_QWORD *)(a1 + 1424);
  *(_QWORD *)(a1 + 1424) = v90;
  swift_bridgeObjectRetain(v90);
  swift_bridgeObjectRelease(v91);
  *(_QWORD *)(a1 + 1432) = *(_QWORD *)(a2 + 1432);
  *(_QWORD *)(a1 + 1440) = *(_QWORD *)(a2 + 1440);
  *(_QWORD *)(a1 + 1448) = *(_QWORD *)(a2 + 1448);
  *(_QWORD *)(a1 + 1456) = *(_QWORD *)(a2 + 1456);
  *(_QWORD *)(a1 + 1464) = *(_QWORD *)(a2 + 1464);
  v92 = *(_QWORD *)(a2 + 1472);
  v93 = *(_QWORD *)(a1 + 1472);
  *(_QWORD *)(a1 + 1472) = v92;
  swift_bridgeObjectRetain(v92);
  swift_bridgeObjectRelease(v93);
  v94 = *(_QWORD *)(a2 + 1480);
  v95 = *(_QWORD *)(a1 + 1480);
  *(_QWORD *)(a1 + 1480) = v94;
  swift_bridgeObjectRetain(v94);
  swift_bridgeObjectRelease(v95);
  *(_QWORD *)(a1 + 1488) = *(_QWORD *)(a2 + 1488);
  *(_QWORD *)(a1 + 1496) = *(_QWORD *)(a2 + 1496);
  *(_QWORD *)(a1 + 1504) = *(_QWORD *)(a2 + 1504);
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  v96 = *(_QWORD *)(a2 + 1528);
  v97 = *(_QWORD *)(a1 + 1528);
  *(_QWORD *)(a1 + 1528) = v96;
  swift_bridgeObjectRetain(v96);
  swift_bridgeObjectRelease(v97);
  v98 = *(_QWORD *)(a2 + 1536);
  v99 = *(_QWORD *)(a1 + 1536);
  *(_QWORD *)(a1 + 1536) = v98;
  swift_bridgeObjectRetain(v98);
  swift_bridgeObjectRelease(v99);
  *(_QWORD *)(a1 + 1544) = *(_QWORD *)(a2 + 1544);
  *(_QWORD *)(a1 + 1552) = *(_QWORD *)(a2 + 1552);
  *(_QWORD *)(a1 + 1560) = *(_QWORD *)(a2 + 1560);
  *(_QWORD *)(a1 + 1568) = *(_QWORD *)(a2 + 1568);
  *(_QWORD *)(a1 + 1576) = *(_QWORD *)(a2 + 1576);
  *(_QWORD *)(a1 + 1584) = *(_QWORD *)(a2 + 1584);
  *(_BYTE *)(a1 + 1592) = *(_BYTE *)(a2 + 1592);
  *(_QWORD *)(a1 + 1600) = *(_QWORD *)(a2 + 1600);
  *(_QWORD *)(a1 + 1608) = *(_QWORD *)(a2 + 1608);
  v100 = *(_QWORD *)(a2 + 1616);
  v101 = *(_QWORD *)(a1 + 1616);
  *(_QWORD *)(a1 + 1616) = v100;
  swift_bridgeObjectRetain(v100);
  swift_bridgeObjectRelease(v101);
  v102 = *(_QWORD *)(a2 + 1624);
  v103 = *(_QWORD *)(a1 + 1624);
  *(_QWORD *)(a1 + 1624) = v102;
  swift_bridgeObjectRetain(v102);
  swift_bridgeObjectRelease(v103);
  *(_QWORD *)(a1 + 1632) = *(_QWORD *)(a2 + 1632);
  *(_QWORD *)(a1 + 1640) = *(_QWORD *)(a2 + 1640);
  *(_QWORD *)(a1 + 1648) = *(_QWORD *)(a2 + 1648);
  *(_QWORD *)(a1 + 1656) = *(_QWORD *)(a2 + 1656);
  *(_QWORD *)(a1 + 1664) = *(_QWORD *)(a2 + 1664);
  v104 = *(_QWORD *)(a2 + 1672);
  v105 = *(_QWORD *)(a1 + 1672);
  *(_QWORD *)(a1 + 1672) = v104;
  swift_bridgeObjectRetain(v104);
  swift_bridgeObjectRelease(v105);
  v106 = *(_QWORD *)(a2 + 1680);
  v107 = *(_QWORD *)(a1 + 1680);
  *(_QWORD *)(a1 + 1680) = v106;
  swift_bridgeObjectRetain(v106);
  swift_bridgeObjectRelease(v107);
  *(_QWORD *)(a1 + 1688) = *(_QWORD *)(a2 + 1688);
  *(_QWORD *)(a1 + 1696) = *(_QWORD *)(a2 + 1696);
  *(_QWORD *)(a1 + 1704) = *(_QWORD *)(a2 + 1704);
  *(_QWORD *)(a1 + 1712) = *(_QWORD *)(a2 + 1712);
  *(_QWORD *)(a1 + 1720) = *(_QWORD *)(a2 + 1720);
  v108 = *(_QWORD *)(a2 + 1728);
  v109 = *(_QWORD *)(a1 + 1728);
  *(_QWORD *)(a1 + 1728) = v108;
  swift_bridgeObjectRetain(v108);
  swift_bridgeObjectRelease(v109);
  v110 = *(_QWORD *)(a2 + 1736);
  v111 = *(_QWORD *)(a1 + 1736);
  *(_QWORD *)(a1 + 1736) = v110;
  swift_bridgeObjectRetain(v110);
  swift_bridgeObjectRelease(v111);
  *(_QWORD *)(a1 + 1744) = *(_QWORD *)(a2 + 1744);
  *(_QWORD *)(a1 + 1752) = *(_QWORD *)(a2 + 1752);
  *(_QWORD *)(a1 + 1760) = *(_QWORD *)(a2 + 1760);
  *(_QWORD *)(a1 + 1768) = *(_QWORD *)(a2 + 1768);
  *(_QWORD *)(a1 + 1776) = *(_QWORD *)(a2 + 1776);
  *(_QWORD *)(a1 + 1784) = *(_QWORD *)(a2 + 1784);
  *(_BYTE *)(a1 + 1792) = *(_BYTE *)(a2 + 1792);
  *(_QWORD *)(a1 + 1800) = *(_QWORD *)(a2 + 1800);
  *(_QWORD *)(a1 + 1808) = *(_QWORD *)(a2 + 1808);
  *(_QWORD *)(a1 + 1816) = *(_QWORD *)(a2 + 1816);
  *(_QWORD *)(a1 + 1824) = *(_QWORD *)(a2 + 1824);
  return a1;
}

void *initializeWithTake for ActivityStatisticsCompilation(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x728uLL);
}

uint64_t assignWithTake for ActivityStatisticsCompilation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v5);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease(v8);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease(v10);
  v11 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v11;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  v12 = *(_QWORD *)(a1 + 216);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease(v13);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  v14 = *(_QWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRelease(v14);
  v15 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRelease(v15);
  v16 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v16;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v17 = *(_QWORD *)(a1 + 328);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)(a1 + 336);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_bridgeObjectRelease(v18);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  v19 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v19;
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_BYTE *)(a1 + 392) = *(_BYTE *)(a2 + 392);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  v20 = *(_QWORD *)(a1 + 416);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  swift_bridgeObjectRelease(v20);
  v21 = *(_QWORD *)(a1 + 424);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  swift_bridgeObjectRelease(v21);
  v22 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v22;
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  v23 = *(_QWORD *)(a1 + 472);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  swift_bridgeObjectRelease(v23);
  v24 = *(_QWORD *)(a1 + 480);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  swift_bridgeObjectRelease(v24);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  v25 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v25;
  v26 = *(_QWORD *)(a1 + 528);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  swift_bridgeObjectRelease(v26);
  v27 = *(_QWORD *)(a1 + 536);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  swift_bridgeObjectRelease(v27);
  v28 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v28;
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  v29 = *(_QWORD *)(a1 + 616);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  swift_bridgeObjectRelease(v29);
  v30 = *(_QWORD *)(a1 + 624);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  swift_bridgeObjectRelease(v30);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  v31 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v31;
  v32 = *(_QWORD *)(a1 + 672);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  swift_bridgeObjectRelease(v32);
  v33 = *(_QWORD *)(a1 + 680);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  swift_bridgeObjectRelease(v33);
  v34 = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 704) = v34;
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  v35 = *(_QWORD *)(a1 + 728);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  swift_bridgeObjectRelease(v35);
  v36 = *(_QWORD *)(a1 + 736);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  swift_bridgeObjectRelease(v36);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  v37 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v37;
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_BYTE *)(a1 + 792) = *(_BYTE *)(a2 + 792);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  v38 = *(_QWORD *)(a1 + 816);
  *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
  swift_bridgeObjectRelease(v38);
  v39 = *(_QWORD *)(a1 + 824);
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
  swift_bridgeObjectRelease(v39);
  v40 = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 848) = v40;
  *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
  v41 = *(_QWORD *)(a1 + 872);
  *(_QWORD *)(a1 + 872) = *(_QWORD *)(a2 + 872);
  swift_bridgeObjectRelease(v41);
  v42 = *(_QWORD *)(a1 + 880);
  *(_QWORD *)(a1 + 880) = *(_QWORD *)(a2 + 880);
  swift_bridgeObjectRelease(v42);
  *(_QWORD *)(a1 + 888) = *(_QWORD *)(a2 + 888);
  v43 = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 912) = v43;
  v44 = *(_QWORD *)(a1 + 928);
  *(_QWORD *)(a1 + 928) = *(_QWORD *)(a2 + 928);
  swift_bridgeObjectRelease(v44);
  v45 = *(_QWORD *)(a1 + 936);
  *(_QWORD *)(a1 + 936) = *(_QWORD *)(a2 + 936);
  swift_bridgeObjectRelease(v45);
  v46 = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 960) = v46;
  *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
  v47 = *(_QWORD *)(a1 + 1016);
  *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
  swift_bridgeObjectRelease(v47);
  v48 = *(_QWORD *)(a1 + 1024);
  *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
  swift_bridgeObjectRelease(v48);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  v49 = *(_QWORD *)(a1 + 1072);
  *(_QWORD *)(a1 + 1072) = *(_QWORD *)(a2 + 1072);
  swift_bridgeObjectRelease(v49);
  v50 = *(_QWORD *)(a1 + 1080);
  *(_QWORD *)(a1 + 1080) = *(_QWORD *)(a2 + 1080);
  swift_bridgeObjectRelease(v50);
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(_QWORD *)(a1 + 1120) = *(_QWORD *)(a2 + 1120);
  v51 = *(_QWORD *)(a1 + 1128);
  *(_QWORD *)(a1 + 1128) = *(_QWORD *)(a2 + 1128);
  swift_bridgeObjectRelease(v51);
  v52 = *(_QWORD *)(a1 + 1136);
  *(_QWORD *)(a1 + 1136) = *(_QWORD *)(a2 + 1136);
  swift_bridgeObjectRelease(v52);
  *(_QWORD *)(a1 + 1144) = *(_QWORD *)(a2 + 1144);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_BYTE *)(a1 + 1192) = *(_BYTE *)(a2 + 1192);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  v53 = *(_QWORD *)(a1 + 1216);
  *(_QWORD *)(a1 + 1216) = *(_QWORD *)(a2 + 1216);
  swift_bridgeObjectRelease(v53);
  v54 = *(_QWORD *)(a1 + 1224);
  *(_QWORD *)(a1 + 1224) = *(_QWORD *)(a2 + 1224);
  swift_bridgeObjectRelease(v54);
  *(_OWORD *)(a1 + 1232) = *(_OWORD *)(a2 + 1232);
  *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
  *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
  v55 = *(_QWORD *)(a1 + 1272);
  *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
  swift_bridgeObjectRelease(v55);
  v56 = *(_QWORD *)(a1 + 1280);
  *(_QWORD *)(a1 + 1280) = *(_QWORD *)(a2 + 1280);
  swift_bridgeObjectRelease(v56);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  v57 = *(_QWORD *)(a1 + 1328);
  *(_QWORD *)(a1 + 1328) = *(_QWORD *)(a2 + 1328);
  swift_bridgeObjectRelease(v57);
  v58 = *(_QWORD *)(a1 + 1336);
  *(_QWORD *)(a1 + 1336) = *(_QWORD *)(a2 + 1336);
  swift_bridgeObjectRelease(v58);
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(_BYTE *)(a1 + 1392) = *(_BYTE *)(a2 + 1392);
  *(_QWORD *)(a1 + 1400) = *(_QWORD *)(a2 + 1400);
  *(_QWORD *)(a1 + 1408) = *(_QWORD *)(a2 + 1408);
  v59 = *(_QWORD *)(a1 + 1416);
  *(_QWORD *)(a1 + 1416) = *(_QWORD *)(a2 + 1416);
  swift_bridgeObjectRelease(v59);
  v60 = *(_QWORD *)(a1 + 1424);
  *(_QWORD *)(a1 + 1424) = *(_QWORD *)(a2 + 1424);
  swift_bridgeObjectRelease(v60);
  *(_QWORD *)(a1 + 1432) = *(_QWORD *)(a2 + 1432);
  *(_OWORD *)(a1 + 1440) = *(_OWORD *)(a2 + 1440);
  *(_OWORD *)(a1 + 1456) = *(_OWORD *)(a2 + 1456);
  v61 = *(_QWORD *)(a1 + 1472);
  *(_QWORD *)(a1 + 1472) = *(_QWORD *)(a2 + 1472);
  swift_bridgeObjectRelease(v61);
  v62 = *(_QWORD *)(a1 + 1480);
  *(_QWORD *)(a1 + 1480) = *(_QWORD *)(a2 + 1480);
  swift_bridgeObjectRelease(v62);
  *(_OWORD *)(a1 + 1488) = *(_OWORD *)(a2 + 1488);
  *(_OWORD *)(a1 + 1504) = *(_OWORD *)(a2 + 1504);
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  v63 = *(_QWORD *)(a1 + 1528);
  *(_QWORD *)(a1 + 1528) = *(_QWORD *)(a2 + 1528);
  swift_bridgeObjectRelease(v63);
  v64 = *(_QWORD *)(a1 + 1536);
  *(_QWORD *)(a1 + 1536) = *(_QWORD *)(a2 + 1536);
  swift_bridgeObjectRelease(v64);
  *(_QWORD *)(a1 + 1544) = *(_QWORD *)(a2 + 1544);
  *(_OWORD *)(a1 + 1552) = *(_OWORD *)(a2 + 1552);
  *(_OWORD *)(a1 + 1568) = *(_OWORD *)(a2 + 1568);
  *(_QWORD *)(a1 + 1584) = *(_QWORD *)(a2 + 1584);
  *(_BYTE *)(a1 + 1592) = *(_BYTE *)(a2 + 1592);
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  v65 = *(_QWORD *)(a1 + 1616);
  *(_QWORD *)(a1 + 1616) = *(_QWORD *)(a2 + 1616);
  swift_bridgeObjectRelease(v65);
  v66 = *(_QWORD *)(a1 + 1624);
  *(_QWORD *)(a1 + 1624) = *(_QWORD *)(a2 + 1624);
  swift_bridgeObjectRelease(v66);
  *(_OWORD *)(a1 + 1632) = *(_OWORD *)(a2 + 1632);
  *(_OWORD *)(a1 + 1648) = *(_OWORD *)(a2 + 1648);
  *(_QWORD *)(a1 + 1664) = *(_QWORD *)(a2 + 1664);
  v67 = *(_QWORD *)(a1 + 1672);
  *(_QWORD *)(a1 + 1672) = *(_QWORD *)(a2 + 1672);
  swift_bridgeObjectRelease(v67);
  v68 = *(_QWORD *)(a1 + 1680);
  *(_QWORD *)(a1 + 1680) = *(_QWORD *)(a2 + 1680);
  swift_bridgeObjectRelease(v68);
  *(_QWORD *)(a1 + 1688) = *(_QWORD *)(a2 + 1688);
  *(_OWORD *)(a1 + 1696) = *(_OWORD *)(a2 + 1696);
  *(_OWORD *)(a1 + 1712) = *(_OWORD *)(a2 + 1712);
  v69 = *(_QWORD *)(a1 + 1728);
  *(_QWORD *)(a1 + 1728) = *(_QWORD *)(a2 + 1728);
  swift_bridgeObjectRelease(v69);
  v70 = *(_QWORD *)(a1 + 1736);
  *(_QWORD *)(a1 + 1736) = *(_QWORD *)(a2 + 1736);
  swift_bridgeObjectRelease(v70);
  *(_OWORD *)(a1 + 1744) = *(_OWORD *)(a2 + 1744);
  *(_OWORD *)(a1 + 1760) = *(_OWORD *)(a2 + 1760);
  *(_OWORD *)(a1 + 1776) = *(_OWORD *)(a2 + 1776);
  *(_BYTE *)(a1 + 1792) = *(_BYTE *)(a2 + 1792);
  *(_QWORD *)(a1 + 1800) = *(_QWORD *)(a2 + 1800);
  *(_OWORD *)(a1 + 1808) = *(_OWORD *)(a2 + 1808);
  *(_QWORD *)(a1 + 1824) = *(_QWORD *)(a2 + 1824);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityStatisticsCompilation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 1832))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityStatisticsCompilation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 1832) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 1832) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_1005DA53C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;

  if (a1)
  {
    if (a2)
    {
      v5 = v2;
      v6 = a1;
      v17 = a2;
      v7 = objc_msgSend(v17, "activityMoveMode");
      v8 = OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartViewType;
      if (v7 != (id)2)
      {
        v6[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartViewType] = 0;
        sub_1002FE8F0();
        v12 = objc_msgSend(v17, "activeEnergyBurned");
        v13 = objc_msgSend(v17, "activeEnergyBurnedGoal");
        if (v6[v8])
          sub_1003033B4(v12, v13);
        else
          sub_100303228(v12, v13);

        v15 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_totalEnergy);
        v16 = v15;
        sub_100303514(v15);

        v14 = v16;
        goto LABEL_17;
      }
      v6[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartViewType] = 1;
      sub_1002FE8F0();
      v9 = objc_msgSend(v17, "appleMoveMinutes");
      v10 = objc_msgSend(v17, "appleMoveMinutesGoal");
      if (v6[v8])
        sub_1003033B4(v9, v10);
      else
        sub_100303228(v9, v10);

    }
    else
    {
      v11 = OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartViewType;
      *((_BYTE *)a1 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartViewType) = 0;
      v17 = a1;
      sub_1002FE8F0();
      if (*((_BYTE *)a1 + v11))
        sub_1003033B4(0, 0);
      else
        sub_100303228(0, 0);
    }
    v14 = v17;
LABEL_17:

  }
}

void sub_1005DA78C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  NSString v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  Class isa;
  id v20;
  _QWORD v21[3];
  char v22;
  uint64_t v23;
  unint64_t v24;

  v2 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v2);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for UUID(0);
  __chkstk_darwin(v6);
  v8 = IndexPath.section.getter(v7);
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v8 < 0xB)
  {
    v21[1] = v2;
    v21[2] = v4;
    v9 = *((unsigned __int8 *)&off_10077F660 + v8 + 32);
    v23 = 0;
    v24 = 0xE000000000000000;
    v22 = v9;
    _print_unlocked<A, B>(_:_:)(&v22, &v23, &type metadata for HistoryDayViewSection, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v10 = (CHWorkoutDetailHeartRateTableViewCell *)v24;
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10, v12, v13, v14, v15, v16, v17, v18);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v20 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v11, isa);

    __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x1005DB84CLL);
}

void sub_1005DB8E4(char a1, void *a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(objc_allocWithZone((Class)CHASActivitySetupViewController), "initWithPresentationContext:goalType:editTodayOnly:", 6, 0, a1 & 1);
  v4 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v3);
  objc_msgSend(a2, "presentViewController:animated:completion:", v4, 1, 0);

}

void sub_1005DB978(char a1, void *a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(objc_allocWithZone((Class)CHASActivitySetupViewController), "initWithPresentationContext:goalType:editTodayOnly:", 6, 1, a1 & 1);
  v4 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v3);
  objc_msgSend(a2, "presentViewController:animated:completion:", v4, 1, 0);

}

void sub_1005DBA0C(char a1, void *a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(objc_allocWithZone((Class)CHASActivitySetupViewController), "initWithPresentationContext:goalType:editTodayOnly:", 6, 2, a1 & 1);
  v4 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v3);
  objc_msgSend(a2, "presentViewController:animated:completion:", v4, 1, 0);

}

void sub_1005DBAA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  id v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = objc_msgSend(objc_allocWithZone((Class)CHASActivitySetupViewController), "initWithPresentationContext:", 6);
    v5 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v4);
    objc_msgSend(v3, "presentViewController:animated:completion:", v5, 1, 0);

  }
}

void sub_1005DBB58(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  char v5;
  char v6;
  char *v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);
    v5 = *(_BYTE *)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary);
    v6 = *(_BYTE *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider)
                  + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser);
    objc_allocWithZone((Class)type metadata accessor for PauseRingsViewController());
    v7 = sub_1003410E0(v4, v5, v6, 1);
    objc_msgSend(v3, "presentViewController:animated:completion:", v7, 1, 0);

  }
}

void sub_1005DBC40(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  char v5;
  char v6;
  char *v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);
    v5 = *(_BYTE *)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary);
    v6 = *(_BYTE *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider)
                  + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser);
    objc_allocWithZone((Class)type metadata accessor for PauseRingsViewController());
    v7 = sub_1003410E0(v4, v5, v6, 0);
    objc_msgSend(v3, "presentViewController:animated:completion:", v7, 1, 0);

  }
}

void sub_1005DBD28(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);

    objc_msgSend(v4, "unpauseRingsWithCompletionHandler:", 0);
  }
}

id sub_1005DBE5C(void *a1, unint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  NSString v20;
  id v21;
  CHWorkoutDetailHeartRateTableViewCell *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  void *v24;
  NSString v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;

  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (a2 < 0xB)
  {
    v2 = a1;
    switch(*((_BYTE *)&off_10077F660 + a2 + 32))
    {
      case 7:
        v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts);
        if (!v4)
          return 0;
        if ((unint64_t)v4 >> 62)
        {
          if (v4 >= 0)
            v42 = v4 & 0xFFFFFFFFFFFFFF8;
          else
            v42 = v4;
          swift_bridgeObjectRetain(v4);
          v43 = _CocoaArrayWrapper.endIndex.getter(v42);
          swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v4, v44, v45, v46, v47, v48, v49, v50);
          if (!v43)
            return 0;
        }
        else if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          return 0;
        }
        v5 = String._bridgeToObjectiveC()();
        v6 = objc_msgSend(v2, "dequeueReusableHeaderFooterViewWithIdentifier:", v5);

        if (!v6)
          return v6;
        v7 = type metadata accessor for ActivityTileSectionHeader();
        v8 = swift_dynamicCastClass(v6, v7);
        if (!v8)
          return v6;
        break;
      case 8:
        v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels);
        if (!v9)
          return 0;
        if ((unint64_t)v9 >> 62)
        {
          if (v9 >= 0)
            v51 = v9 & 0xFFFFFFFFFFFFFF8;
          else
            v51 = v9;
          swift_bridgeObjectRetain(v9);
          v52 = _CocoaArrayWrapper.endIndex.getter(v51);
          swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v9, v53, v54, v55, v56, v57, v58, v59);
          if (!v52)
            return 0;
        }
        else if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          return 0;
        }
        v10 = String._bridgeToObjectiveC()();
        v6 = objc_msgSend(v2, "dequeueReusableHeaderFooterViewWithIdentifier:", v10);

        if (!v6)
          return v6;
        v11 = type metadata accessor for ActivityTileSectionHeader();
        v8 = swift_dynamicCastClass(v6, v11);
        if (!v8)
          return v6;
        break;
      case 9:
        v3 = *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards);
        if ((unint64_t)v3 >> 62)
          goto LABEL_26;
        if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_18;
        return 0;
      case 0xA:
        v14 = String._bridgeToObjectiveC()();
        v6 = objc_msgSend(v2, "dequeueReusableHeaderFooterViewWithIdentifier:", v14);

        if (v6)
        {
          v15 = type metadata accessor for ActivityTileSectionHeader();
          v8 = swift_dynamicCastClass(v6, v15);
          if (v8)
            break;
        }
        return v6;
      default:
        return 0;
    }
LABEL_23:
    v16 = v8;
    v17 = (void *)objc_opt_self(NSBundle);
    v18 = v6;
    v19 = objc_msgSend(v17, "mainBundle");
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v23 = v22;

    v24 = *(void **)(v16 + OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_titleLabel);
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setText:", v25);

    objc_msgSend(*(id *)(v16 + OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_subtitleLabel), "setText:", 0);
    sub_100034C08(18.0);

    swift_bridgeObjectRelease(v23, v26, v27, v28, v29, v30, v31, v32);
    return v6;
  }
  __break(1u);
LABEL_26:
  if (v3 < 0)
    v33 = v3;
  else
    v33 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v34 = _CocoaArrayWrapper.endIndex.getter(v33);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v3, v35, v36, v37, v38, v39, v40, v41);
  if (!v34)
    return 0;
LABEL_18:
  v12 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v2, "dequeueReusableHeaderFooterViewWithIdentifier:", v12);

  if (v6)
  {
    v13 = type metadata accessor for ActivityTileSectionHeader();
    v8 = swift_dynamicCastClass(v6, v13);
    if (v8)
      goto LABEL_23;
  }
  return v6;
}

void sub_1005DC64C(uint64_t a1)
{
  char *v1;
  char *v2;
  NSIndexPath v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  id v9;
  const char *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  Class isa;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  const char *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  double v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  id v64;
  const char *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  char *v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id *v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  _QWORD v94[3];
  uint64_t v95;
  uint64_t v96;

  v2 = v1;
  v4.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend((id)a1, "deselectRowAtIndexPath:animated:", v4.super.isa, 1);

  v6 = IndexPath.section.getter(v5);
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v6 >= 0xB)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v7 = *((unsigned __int8 *)&off_10077F660 + v6 + 32);
  if (v7 == 9)
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v93 = objc_msgSend((id)a1, "cellForRowAtIndexPath:", isa);

    if (!v93)
      return;
    v48 = type metadata accessor for AchievementsListTableViewCell();
    v49 = swift_dynamicCastClass(v93, v48);
    if (v49)
    {
      a1 = v49;
      v4.super.isa = *(Class *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards];
      swift_bridgeObjectRetain(v4.super.isa);
      v6 = IndexPath.row.getter(v50);
      if (((unint64_t)v4.super.isa & 0xC000000000000001) == 0)
      {
        if ((v6 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v6 < *(_QWORD *)(((unint64_t)v4.super.isa & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v51 = *((id *)v4.super.isa + v6 + 4);
LABEL_21:
          v92 = v51;
          swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v4.super.isa, v52, v53, v54, v55, v56, v57, v58);
          objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp29AchievementsListTableViewCell_achievementBadgeView), "frame");
          sub_10047C838(v92, (char *)a1, v59, v60, v61, v62);

          return;
        }
        __break(1u);
        goto LABEL_42;
      }
LABEL_39:
      v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4.super.isa);
      goto LABEL_21;
    }
    goto LABEL_28;
  }
  if (v7 == 8)
  {
    a1 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels];
    if (!a1)
      return;
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels]);
    v6 = IndexPath.row.getter(v63);
    if ((a1 & 0xC000000000000001) != 0)
    {
      v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
    }
    else
    {
      if ((v6 & 0x8000000000000000) != 0)
        goto LABEL_36;
      if (v6 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v64 = *(id *)(a1 + 8 * v6 + 32);
    }
    v72 = v64;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v65, v66, v67, v68, v69, v70, v71);
    v73 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fitnessAppContext];
    v74 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionFormattingManager];
    objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionDetailViewController(0));
    v93 = v72;
    v75 = sub_1002C26F0(v93, v73, v74);
    objc_msgSend(v75, "setEdgesForExtendedLayout:", 0);
    v76 = objc_msgSend(v2, "navigationController");
    objc_msgSend(v76, "pushViewController:animated:", v75, 1);

LABEL_28:
    return;
  }
  if (v7 != 7)
    return;
  a1 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts];
  if (!a1)
    return;
  swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts]);
  v6 = IndexPath.row.getter(v8);
  if ((a1 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) == 0)
    {
      if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v9 = *(id *)(a1 + 8 * v6 + 32);
        goto LABEL_11;
      }
      goto LABEL_37;
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_33:
  v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
LABEL_11:
  v91 = v9;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v10, v11, v12, v13, v14, v15, v16);
  v17 = *(void **)(*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider]
                 + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_healthStore);
  v18 = objc_allocWithZone((Class)FIUIModel);
  v92 = v17;
  v90 = objc_msgSend(v18, "initWithHealthStore:");
  if (!v90)
  {
LABEL_42:
    __break(1u);
    return;
  }
  v19 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fitnessAppContext];
  v20 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workoutFormattingManager];
  v21 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workoutDataProvider];
  v22 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_badgeImageFactory];
  v23 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_friendListManager];
  v24 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementLocalizationProvider];
  v85 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator];
  v86 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementResourceProvider];
  v89 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fiuiFormattingManager];
  v87 = type metadata accessor for CHAwardsDataProvider();
  sub_1000252E0((uint64_t)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsDataProvider], (uint64_t)v94);
  v26 = v95;
  v25 = v96;
  v27 = sub_10017C044((uint64_t)v94, v95);
  v83 = &v81;
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v31 + 16))(v30, v28);
  v88 = v19;
  v84 = v20;
  v93 = v21;
  v32 = v22;
  v33 = v23;
  v34 = v24;
  v81 = v34;
  v35 = v85;
  v82 = v35;
  v36 = v86;
  v85 = v36;
  v37 = v89;
  v86 = v37;
  v38 = sub_10017DB7C((uint64_t)v30, v87, v26, v25);
  v89 = v38;
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v94);
  v39 = objc_allocWithZone((Class)CHWorkoutDetailViewController);
  v40 = v91;
  v80 = v37;
  v78 = v35;
  v79 = v36;
  v77 = v34;
  v41 = v92;
  v42 = v90;
  v43 = v88;
  v44 = v84;
  v45 = objc_msgSend(v39, "initWithWorkout:workoutActivity:healthStore:model:fitnessAppContext:workoutFormattingManager:workoutDataProvider:badgeImageFactory:friendListManager:achievementLocalizationProvider:pauseRingsCoordinator:achievementResourceProvider:formattingManager:awardsDataProvider:", v40, 0, v92, v90, v88, v84, v93, v32, v33, v77, v78, v79, v80, v38);
  v91 = v40;

  if (v45)
  {
    objc_msgSend(v45, "setEdgesForExtendedLayout:", 0);
    v46 = objc_msgSend(v2, "navigationController");
    objc_msgSend(v46, "pushViewController:animated:", v45, 1);

  }
}

void sub_1005DCD60(unint64_t a1)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (a1 < 0xB)
  {
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1005DCFF8);
}

double sub_1005DD054(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  id v9;
  double v10;
  double v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    if (v1 < 0)
      v5 = v1;
    else
      v5 = v1 & 0xFFFFFFFFFFFFFF8;
    goto LABEL_25;
  }
  if (a1 >= 0xB)
    goto LABEL_21;
  v3 = 0.0;
  switch(*((_BYTE *)&off_10077F660 + a1 + 32))
  {
    case 7:
      v4 = &OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts;
      goto LABEL_6;
    case 8:
      v4 = &OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels;
LABEL_6:
      v1 = *(_QWORD *)(v2 + *v4);
      if (!v1)
        return v3;
      if (!((unint64_t)v1 >> 62))
      {
LABEL_12:
        v6 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_13;
      }
      if (v1 >= 0)
        v5 = v1 & 0xFFFFFFFFFFFFFF8;
      else
        v5 = *(_QWORD *)(v2 + *v4);
      break;
    case 9:
      v1 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards);
      if ((unint64_t)v1 >> 62)
        goto LABEL_22;
      goto LABEL_12;
    case 0xA:
      v8 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController);
      if (v8)
      {
        v9 = v8;
        sub_1005C5EC8();
        v11 = v10;

        if (v11 > 0.0)
          return UITableViewAutomaticDimension;
      }
      return v3;
    default:
      return v3;
  }
LABEL_25:
  swift_bridgeObjectRetain(v1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v5);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v1, v12, v13, v14, v15, v16, v17, v18);
LABEL_13:
  if (v6)
    return UITableViewAutomaticDimension;
  else
    return 0.0;
}

void sub_1005DD1B8(uint64_t a1)
{
  unint64_t v1;

  v1 = IndexPath.section.getter(a1);
  if ((v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v1 < 0xB)
  {
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1005DD6CCLL);
}

uint64_t sub_1005DD6F8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005DD71C()
{
  uint64_t v0;

  sub_1005DBAA0(v0);
}

void sub_1005DD724()
{
  uint64_t v0;

  sub_1005DBB58(v0);
}

void sub_1005DD72C()
{
  uint64_t v0;

  sub_1005DBC40(v0);
}

void sub_1005DD734()
{
  uint64_t v0;

  sub_1005DBD28(v0);
}

void sub_1005DD73C(char a1)
{
  uint64_t v1;

  sub_1005DBA0C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1005DD744()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1005DD768(char a1)
{
  uint64_t v1;

  sub_1005DB978(a1, *(void **)(v1 + 16));
}

void sub_1005DD770(char a1)
{
  uint64_t v1;

  sub_1005DB8E4(a1, *(void **)(v1 + 16));
}

uint64_t sub_1005DD7B8()
{
  uint64_t result;

  sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  result = static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)(UIFontTextStyleBody, UIFontDescriptorSystemDesignRounded, 0x100000000, *(_QWORD *)&UIFontWeightMedium, 0, 0);
  qword_10086B038 = result;
  return result;
}

char *sub_1005DD8C4(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  char *v26;
  char *v27;
  uint64_t v28;
  NSString v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  char *v39;
  id v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  objc_super v50;

  v5 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_groupView;
  v6 = objc_allocWithZone((Class)UIView);
  v7 = v3;
  v8 = objc_msgSend(v6, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v9 = objc_msgSend(v8, "layer");
  objc_msgSend(v9, "setCornerRadius:", 12.0);

  objc_msgSend(v8, "setClipsToBounds:", 1);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v5] = v8;
  v10 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutImageView;
  v11 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v7[v10] = v11;
  v12 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutIconView;
  v13 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v7[v12] = v13;
  v14 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutTypeLabel;
  v15 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v7[v14] = v15;
  v16 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_distanceLabel;
  v17 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v7[v16] = v17;
  v18 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_durationLabel;
  v19 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v7[v18] = v19;
  v20 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_paceLabel;
  v21 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v7[v20] = v21;
  v22 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView;
  v23 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v7[v22] = v23;
  v24 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortLabel;
  v25 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v7[v24] = v25;
  *(_QWORD *)&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_standardAnchors] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_transitionAnchors] = &_swiftEmptyArrayStorage;
  v26 = &v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType];
  *(_QWORD *)v26 = 0;
  v26[8] = 1;
  *(_QWORD *)&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_formattingManager] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_dataCalculator] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workout] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutActivity] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_noteSink] = 0;
  v27 = &v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effort];
  v28 = type metadata accessor for AppleExertionScale(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  swift_unknownObjectWeakInit(&v7[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_navigationDelegate]);

  if (a3)
  {
    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v30, v31, v32, v33, v34, v35, v36);
  }
  else
  {
    v29 = 0;
  }
  v50.receiver = v7;
  v50.super_class = (Class)type metadata accessor for WorkoutDetailActivityTableViewCell(0);
  v37 = objc_msgSendSuper2(&v50, "initWithStyle:reuseIdentifier:", a1, v29);

  v38 = (void *)objc_opt_self(UIColor);
  v39 = (char *)v37;
  v40 = objc_msgSend(v38, "systemBackgroundColor");
  objc_msgSend(v39, "setBackgroundColor:", v40);

  v41 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_groupView;
  v42 = *(void **)&v39[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_groupView];
  objc_msgSend(v42, "addSubview:", *(_QWORD *)&v39[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutImageView]);
  objc_msgSend(v42, "addSubview:", *(_QWORD *)&v39[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutIconView]);
  objc_msgSend(v42, "addSubview:", *(_QWORD *)&v39[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutTypeLabel]);
  objc_msgSend(v42, "addSubview:", *(_QWORD *)&v39[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_distanceLabel]);
  objc_msgSend(v42, "addSubview:", *(_QWORD *)&v39[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_durationLabel]);
  objc_msgSend(v42, "addSubview:", *(_QWORD *)&v39[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_paceLabel]);
  objc_msgSend(v42, "addSubview:", *(_QWORD *)&v39[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView]);
  objc_msgSend(v42, "addSubview:", *(_QWORD *)&v39[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortLabel]);
  v43 = v42;
  v44 = objc_msgSend(v38, "secondarySystemGroupedBackgroundColor");
  objc_msgSend(v43, "setBackgroundColor:", v44);

  v45 = objc_msgSend(v39, "contentView");
  objc_msgSend(v45, "addSubview:", *(_QWORD *)&v39[v41]);

  v46 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v39, "didTapWorkoutActivity");
  v47 = objc_msgSend(v39, "contentView");
  objc_msgSend(v47, "addGestureRecognizer:", v46);

  sub_1005DE104();
  return v39;
}

uint64_t sub_1005DDEE4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  objc_class *v4;
  void *v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  Class isa;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  Class v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v30[24];
  objc_super v31;

  v1 = sub_100047110(&qword_100822220);
  __chkstk_darwin(v1);
  v3 = &v30[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = (objc_class *)type metadata accessor for WorkoutDetailActivityTableViewCell(0);
  v31.receiver = v0;
  v31.super_class = v4;
  objc_msgSendSuper2(&v31, "prepareForReuse");
  v5 = (void *)objc_opt_self(NSLayoutConstraint);
  v6 = *(CHWorkoutDetailHeartRateTableViewCell **)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_standardAnchors];
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v6);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6, v8, v9, v10, v11, v12, v13, v14);
  objc_msgSend(v5, "activateConstraints:", isa);

  v15 = *(CHWorkoutDetailHeartRateTableViewCell **)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_transitionAnchors];
  swift_bridgeObjectRetain(v15);
  v16 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v15, v17, v18, v19, v20, v21, v22, v23);
  objc_msgSend(v5, "deactivateConstraints:", v16);

  v24 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_groupView];
  v25 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemGroupedBackgroundColor");
  objc_msgSend(v24, "setBackgroundColor:", v25);

  objc_msgSend(*(id *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutIconView], "setImage:", 0);
  v26 = type metadata accessor for AppleExertionScale(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v3, 1, 1, v26);
  v27 = (uint64_t)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effort];
  swift_beginAccess(v27, v30, 33, 0);
  sub_1005E2618((uint64_t)v3, v27);
  return swift_endAccess(v30);
}

void sub_1005DE104()
{
  char *v0;
  uint64_t v1;
  char *v2;
  void *v3;
  id v4;
  id v5;
  char *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  SEL v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  void *v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  void *v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  void *v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  uint64_t v132;
  Class isa;
  SEL v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  CHWorkoutDetailHeartRateTableViewCell *v141;
  Class v142;
  SEL v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  CHWorkoutDetailHeartRateTableViewCell *v150;
  SEL v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  char *v161;
  uint64_t v162;
  id v163;
  id v164;
  uint64_t v165;
  id v166;
  Class v167;

  v165 = sub_100047110((uint64_t *)&unk_100828340);
  v1 = swift_allocObject(v165, 120, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1006375B0;
  v2 = v0;
  v3 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutImageView];
  v4 = objc_msgSend(v3, "heightAnchor");
  v5 = objc_msgSend(v4, "constraintEqualToConstant:", 43.0);

  *(_QWORD *)(v1 + 32) = v5;
  v6 = v2;
  v166 = v2;
  v7 = *(void **)&v2[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutTypeLabel];
  v8 = objc_msgSend(v7, "topAnchor");
  v9 = *(void **)&v6[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_groupView];
  v163 = v9;
  v10 = objc_msgSend(v9, "topAnchor");
  v11 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v10, 12.0);

  *(_QWORD *)(v1 + 40) = v11;
  v12 = objc_msgSend(v7, "leadingAnchor");
  v13 = objc_msgSend(v3, "trailingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, 16.0);

  *(_QWORD *)(v1 + 48) = v14;
  v160 = v7;
  v15 = objc_msgSend(v7, "trailingAnchor");
  v16 = objc_msgSend(v9, "trailingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, -8.0);

  *(_QWORD *)(v1 + 56) = v17;
  v18 = *(void **)((char *)v166 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_durationLabel);
  v19 = objc_msgSend(v18, "topAnchor");
  v20 = objc_msgSend(v7, "bottomAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v1 + 64) = v21;
  v22 = v18;
  v164 = v18;
  v23 = objc_msgSend(v18, "leadingAnchor");
  v24 = objc_msgSend(v3, "trailingAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, 16.0);

  *(_QWORD *)(v1 + 72) = v25;
  v26 = *(void **)((char *)v166 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView);
  v27 = objc_msgSend(v26, "centerYAnchor");
  v28 = *(void **)((char *)v166 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortLabel);
  v29 = objc_msgSend(v28, "centerYAnchor");
  v30 = objc_msgSend(v27, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v1 + 80) = v30;
  v31 = objc_msgSend(v26, "leadingAnchor");
  v32 = v3;
  v158 = v3;
  v33 = objc_msgSend(v3, "trailingAnchor");
  v34 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, 16.0);

  *(_QWORD *)(v1 + 88) = v34;
  v35 = objc_msgSend(v28, "topAnchor");
  v36 = objc_msgSend(v22, "bottomAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v1 + 96) = v37;
  v38 = objc_msgSend(v28, "leadingAnchor");
  v39 = objc_msgSend(v26, "trailingAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:constant:", v39, 8.0);

  *(_QWORD *)(v1 + 104) = v40;
  v41 = objc_msgSend(v28, "bottomAnchor");
  v42 = objc_msgSend(v163, "bottomAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v42, -12.0);

  *(_QWORD *)(v1 + 112) = v43;
  specialized Array._endMutation()(v44);
  v162 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_standardAnchors;
  v45 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)v166
                                                  + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_standardAnchors);
  *(_QWORD *)((char *)v166 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_standardAnchors) = v1;
  swift_bridgeObjectRelease(v45, v46, v47, v48, v49, v50, v51, v52);
  v53 = swift_allocObject(v165, 88, 7);
  *(_OWORD *)(v53 + 16) = xmmword_100626C00;
  v54 = objc_msgSend(v32, "heightAnchor");
  v55 = objc_msgSend(v54, "constraintEqualToConstant:", 0.0);

  *(_QWORD *)(v53 + 32) = v55;
  v56 = objc_msgSend(v160, "topAnchor");
  v57 = objc_msgSend(v163, "topAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

  *(_QWORD *)(v53 + 40) = v58;
  v59 = objc_msgSend(v160, "bottomAnchor");
  v60 = objc_msgSend(v163, "bottomAnchor");
  v61 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

  *(_QWORD *)(v53 + 48) = v61;
  v62 = objc_msgSend(v160, "leadingAnchor");
  v63 = objc_msgSend(v163, "leadingAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:constant:", v63, 8.0);

  *(_QWORD *)(v53 + 56) = v64;
  v65 = objc_msgSend(v164, "bottomAnchor");
  v66 = objc_msgSend(v163, "bottomAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

  *(_QWORD *)(v53 + 64) = v67;
  v68 = objc_msgSend(v164, "leadingAnchor");
  v69 = objc_msgSend(v160, "trailingAnchor");
  v70 = objc_msgSend(v68, "constraintEqualToAnchor:constant:", v69, 8.0);

  *(_QWORD *)(v53 + 72) = v70;
  v71 = objc_msgSend(v164, "firstBaselineAnchor");
  v72 = objc_msgSend(v160, "firstBaselineAnchor");
  v73 = objc_msgSend(v71, "constraintEqualToAnchor:", v72);

  *(_QWORD *)(v53 + 80) = v73;
  specialized Array._endMutation()(v74);
  v161 = (char *)OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_transitionAnchors;
  v75 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)v166
                                                  + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_transitionAnchors);
  *(_QWORD *)((char *)v166 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_transitionAnchors) = v53;
  swift_bridgeObjectRelease(v75, v76, v77, v78, v79, v80, v81, v82);
  v159 = (id)objc_opt_self(NSLayoutConstraint);
  v83 = swift_allocObject(v165, 144, 7);
  *(_OWORD *)(v83 + 16) = xmmword_100626C20;
  v84 = objc_msgSend(v163, "leadingAnchor");
  v85 = objc_msgSend(v166, "contentView");
  v86 = objc_msgSend(v85, "leadingAnchor");

  v87 = objc_msgSend(v84, "constraintEqualToAnchor:", v86);
  *(_QWORD *)(v83 + 32) = v87;
  v88 = objc_msgSend(v163, "trailingAnchor");
  v89 = objc_msgSend(v166, "contentView");
  v90 = objc_msgSend(v89, "trailingAnchor");

  v91 = objc_msgSend(v88, "constraintEqualToAnchor:", v90);
  *(_QWORD *)(v83 + 40) = v91;
  v92 = objc_msgSend(v163, "topAnchor");
  v93 = objc_msgSend(v166, "contentView");
  v94 = objc_msgSend(v93, "topAnchor");

  v95 = objc_msgSend(v92, "constraintEqualToAnchor:constant:", v94, 16.0);
  *(_QWORD *)(v83 + 48) = v95;
  v96 = objc_msgSend(v163, "bottomAnchor");
  v97 = objc_msgSend(v166, "contentView");
  v98 = objc_msgSend(v97, "bottomAnchor");

  v99 = objc_msgSend(v96, "constraintEqualToAnchor:", v98);
  *(_QWORD *)(v83 + 56) = v99;
  v100 = objc_msgSend(v158, "leadingAnchor");
  v101 = objc_msgSend(v163, "leadingAnchor");
  v102 = objc_msgSend(v100, "constraintEqualToAnchor:constant:", v101, 8.0);

  *(_QWORD *)(v83 + 64) = v102;
  v103 = objc_msgSend(v158, "centerYAnchor");
  v104 = objc_msgSend(v163, "centerYAnchor");
  v105 = objc_msgSend(v103, "constraintEqualToAnchor:", v104);

  *(_QWORD *)(v83 + 72) = v105;
  v106 = objc_msgSend(v158, "widthAnchor");
  v107 = objc_msgSend(v106, "constraintEqualToConstant:", 43.0);

  *(_QWORD *)(v83 + 80) = v107;
  v108 = *(void **)((char *)v166 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutIconView);
  v109 = objc_msgSend(v108, "centerXAnchor");
  v110 = objc_msgSend(v158, "centerXAnchor");
  v111 = objc_msgSend(v109, "constraintEqualToAnchor:", v110);

  *(_QWORD *)(v83 + 88) = v111;
  v112 = objc_msgSend(v108, "centerYAnchor");
  v113 = objc_msgSend(v158, "centerYAnchor");
  v114 = objc_msgSend(v112, "constraintEqualToAnchor:", v113);

  *(_QWORD *)(v83 + 96) = v114;
  v115 = objc_msgSend(v164, "firstBaselineAnchor");
  v116 = *(void **)((char *)v166 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_distanceLabel);
  v117 = objc_msgSend(v116, "firstBaselineAnchor");
  v118 = objc_msgSend(v115, "constraintEqualToAnchor:", v117);

  *(_QWORD *)(v83 + 104) = v118;
  v119 = objc_msgSend(v116, "leadingAnchor");
  v120 = objc_msgSend(v164, "trailingAnchor");
  v121 = objc_msgSend(v119, "constraintEqualToAnchor:constant:", v120, 8.0);

  *(_QWORD *)(v83 + 112) = v121;
  v122 = *(void **)((char *)v166 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_paceLabel);
  v123 = objc_msgSend(v122, "leadingAnchor");
  v124 = objc_msgSend(v116, "trailingAnchor");
  v125 = objc_msgSend(v123, "constraintEqualToAnchor:constant:", v124, 8.0);

  *(_QWORD *)(v83 + 120) = v125;
  v126 = objc_msgSend(v122, "trailingAnchor");
  v127 = objc_msgSend(v163, "trailingAnchor");
  v128 = objc_msgSend(v126, "constraintLessThanOrEqualToAnchor:constant:", v127, -8.0);

  *(_QWORD *)(v83 + 128) = v128;
  v129 = objc_msgSend(v122, "firstBaselineAnchor");
  v130 = objc_msgSend(v164, "firstBaselineAnchor");
  v131 = objc_msgSend(v129, "constraintEqualToAnchor:", v130);

  *(_QWORD *)(v83 + 136) = v131;
  specialized Array._endMutation()(v132);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v83, v134, v135, v136, v137, v138, v139, v140);
  objc_msgSend(v159, "activateConstraints:", isa);

  v141 = *(CHWorkoutDetailHeartRateTableViewCell **)((char *)v166 + v162);
  swift_bridgeObjectRetain(v141);
  v142 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v141, v143, v144, v145, v146, v147, v148, v149);
  objc_msgSend(v159, "activateConstraints:", v142);

  v150 = *(CHWorkoutDetailHeartRateTableViewCell **)&v161[(_QWORD)v166];
  swift_bridgeObjectRetain(v150);
  v167 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v150, v151, v152, v153, v154, v155, v156, v157);
  objc_msgSend(v159, "deactivateConstraints:", v167);

}

void sub_1005DEFC0()
{
  uint64_t v0;
  void *v1;
  CHWorkoutDetailHeartRateTableViewCell *v2;
  Class isa;
  SEL v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  Class v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;

  v1 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_standardAnchors);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v2);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v2, v4, v5, v6, v7, v8, v9, v10);
  objc_msgSend(v1, "deactivateConstraints:", isa);

  v11 = *(CHWorkoutDetailHeartRateTableViewCell **)(v0
                                                  + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_transitionAnchors);
  swift_bridgeObjectRetain(v11);
  v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11, v13, v14, v15, v16, v17, v18, v19);
  objc_msgSend(v1, "activateConstraints:", v12);

  v20 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_groupView);
  v21 = (void *)objc_opt_self(UIColor);
  v22 = objc_msgSend(v21, "systemBackgroundColor");
  objc_msgSend(v20, "setBackgroundColor:", v22);

  v23 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutTypeLabel);
  v24 = objc_msgSend(v21, "secondaryLabelColor");
  objc_msgSend(v23, "setTextColor:", v24);

}

void sub_1005DF128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  void *v24;
  NSString v25;
  void *v26;
  NSString v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  int v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  CHWorkoutDetailHeartRateTableViewCell *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  uint64_t v44;
  NSString v45;
  id v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  NSString v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  char *v60;
  void (*v61)(char *, _QWORD, uint64_t);
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  void (*v67)(_QWORD *, uint64_t);
  uint64_t (*v68)(char *, uint64_t);
  uint64_t v69;
  NSString v70;
  char **v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  const char *v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  Swift::String v83;
  CHWorkoutDetailHeartRateTableViewCell *v84;
  SEL v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  void *v92;
  uint64_t v93;
  char *v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  CHWorkoutDetailHeartRateTableViewCell *v108;
  _QWORD v109[6];

  v1 = type metadata accessor for LocalizationFeature(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for ExertionValue(0);
  v102 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v100 = (uint64_t *)((char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v103 = (uint64_t *)((char *)&v93 - v7);
  v105 = type metadata accessor for AppleExertionScale(0);
  v8 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v101 = (char *)&v93 - v12;
  v13 = sub_100047110(&qword_100822220);
  __chkstk_darwin(v13);
  v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v93 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v93 - v20;
  v109[3] = &type metadata for FitnessFeatures;
  v109[4] = sub_10004F7EC();
  LOBYTE(v109[0]) = 4;
  v22 = isFeatureEnabled(_:)(v109);
  v23 = _s10FitnessApp24HistoryViewActionContextVwxx_0(v109);
  if ((v22 & 1) == 0 || (FIIsTinkerVegaOrFitnessJunior(v23) & 1) != 0)
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView), "setImage:", 0);
    v24 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortLabel);
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setText:", v25);

    return;
  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType + 8) & 1) == 0
    && *(_QWORD *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType) == 83)
  {
    v26 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortLabel);
    v27 = String._bridgeToObjectiveC()();
    objc_msgSend(v26, "setText:", v27);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView), "setImage:", 0);
    return;
  }
  v97 = v8;
  v94 = v10;
  sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  v28 = v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effort;
  swift_beginAccess(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effort, v109, 0, 0);
  sub_1005E2660(v28, (uint64_t)v21);
  static EffortColors.textColor(exertion:)(v21);
  sub_10001BE90((uint64_t)v21, &qword_100822220);
  v30 = UIColor.init(_:)(v29);
  v99 = v0;
  if (qword_10081E0D8 != -1)
    swift_once(&qword_10081E0D8, sub_1005DD7B8);
  v31 = (void *)UILabel.withFont(_:)(qword_10086B038);
  v98 = (void *)v30;
  v95 = (id)UILabel.withTextColor(_:)(v30);

  sub_1005E2660(v28, (uint64_t)v18);
  v32 = v97;
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 48);
  v34 = v105;
  v35 = v33(v18, 1, v105);
  v96 = v28;
  if (v35)
  {
    sub_10001BE90((uint64_t)v18, &qword_100822220);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for LocalizationFeature.workout(_:), v1);
    static Localization.workoutUILocalizedString(_:feature:)(0xD000000000000018, 0x8000000100695F30, v4);
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v38 = v104;
  }
  else
  {
    v39 = v101;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v101, v18, v34);
    v40 = sub_10001BE90((uint64_t)v18, &qword_100822220);
    v41 = v103;
    AppleExertionScale.exertionValue.getter(v40);
    v42 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v39, v34);
    ExertionValue.shortDescription.getter(v42);
    v37 = v43;
    v38 = v104;
    (*(void (**)(_QWORD *, uint64_t))(v102 + 8))(v41, v104);
  }
  v44 = v32;
  v45 = String._bridgeToObjectiveC()();
  v46 = v95;
  objc_msgSend(v95, "setText:", v45);
  swift_bridgeObjectRelease(v37, v47, v48, v49, v50, v51, v52, v53);

  v54 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
  sub_1005E2660(v96, (uint64_t)v15);
  if (v33(v15, 1, v34) != 1)
  {
    v104 = (uint64_t)v54;
    v60 = v94;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v94, v15, v34);
    v61 = *(void (**)(char *, _QWORD, uint64_t))(v32 + 104);
    v62 = v101;
    v61(v101, enum case for AppleExertionScale.skipped(_:), v34);
    v63 = sub_1000083D8(&qword_100828F50, (uint64_t (*)(uint64_t))&type metadata accessor for AppleExertionScale, (uint64_t)&protocol conformance descriptor for AppleExertionScale);
    v64 = v103;
    dispatch thunk of RawRepresentable.rawValue.getter(v103, v34, v63);
    v65 = v100;
    dispatch thunk of RawRepresentable.rawValue.getter(v100, v34, v63);
    v66 = sub_1000083D8(&qword_100828F58, (uint64_t (*)(uint64_t))&type metadata accessor for ExertionValue, (uint64_t)&protocol conformance descriptor for ExertionValue);
    LOBYTE(v63) = dispatch thunk of static Equatable.== infix(_:_:)(v64, v65, v38, v66);
    v67 = *(void (**)(_QWORD *, uint64_t))(v102 + 8);
    v67(v65, v38);
    v67(v64, v38);
    v68 = *(uint64_t (**)(char *, uint64_t))(v44 + 8);
    v69 = v68(v62, v34);
    v57 = v98;
    if ((v63 & 1) != 0)
    {
      v70 = String._bridgeToObjectiveC()();
      v71 = &selRef_smm_systemImageNamed_;
    }
    else
    {
      v107 = 0;
      v108 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
      v72 = AppleExertionScale.exertionValue.getter(v69);
      v73 = ExertionValue.level.getter(v72);
      v67(v64, v38);
      v106 = v73;
      v74 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v76 = (CHWorkoutDetailHeartRateTableViewCell *)v75;
      swift_bridgeObjectRelease(v108, v75, v77, v78, v79, v80, v81, v82);
      v107 = v74;
      v108 = v76;
      v83._countAndFlagsBits = 0x2E656C637269632ELL;
      v83._object = (void *)0xEC0000006C6C6966;
      String.append(_:)(v83);
      v84 = v108;
      v70 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v84, v85, v86, v87, v88, v89, v90, v91);
      v71 = &selRef_systemImageNamed_;
    }
    v56 = objc_msgSend((id)objc_opt_self(UIImage), *v71, v70);

    v68(v60, v34);
    v54 = (id)v104;
    if (v56)
      goto LABEL_14;
LABEL_19:
    v59 = 0;
    goto LABEL_20;
  }
  sub_10001BE90((uint64_t)v15, &qword_100822220);
  v55 = String._bridgeToObjectiveC()();
  v56 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v55);

  v57 = v98;
  if (!v56)
    goto LABEL_19;
LABEL_14:
  v58 = objc_msgSend(v56, "imageWithRenderingMode:", 2);
  v59 = objc_msgSend(v58, "imageWithSymbolConfiguration:", v54);

LABEL_20:
  v92 = *(void **)(v99 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView);
  objc_msgSend(v92, "setImage:", v59);
  objc_msgSend(v92, "setTintColor:", v57);

}

void sub_1005DF934()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  _QWORD v10[5];
  uint64_t v11;

  if ((*(_BYTE *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType + 8) & 1) != 0
    || *(_QWORD *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType) != 83)
  {
    v1 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_dataCalculator);
    if (v1)
    {
      v2 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workout);
      v3 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutActivity);
      v4 = swift_allocObject(&unk_1007AD808, 24, 7);
      swift_unknownObjectWeakInit(v4 + 16);
      v10[4] = sub_1005E2604;
      v11 = v4;
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 1107296256;
      v10[2] = sub_100598C48;
      v10[3] = &unk_1007AD8E8;
      v5 = _Block_copy(v10);
      v6 = v11;
      v7 = v3;
      v8 = v1;
      v9 = v2;
      objc_msgSend(v8, "effortForWorkout:workoutActivity:completion:", v9, v7, v5, swift_release(v6).n128_f64[0]);
      _Block_release(v5);

    }
  }
}

uint64_t sub_1005DFA68(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  void *Strong;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;
  char v29[24];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2 + 16;
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_1007AD808, 24, 7);
  swift_beginAccess(v10, v29, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v10);
  swift_unknownObjectWeakInit(v13 + 16);

  v15 = swift_allocObject(&unk_1007AD920, 32, 7);
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = a1;
  aBlock[4] = sub_1005E2610;
  v28 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007AD938;
  v16 = _Block_copy(aBlock);
  v17 = v28;
  v18 = a1;
  swift_release(v17);
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v20 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = sub_100047110(&qword_100828C80);
  v22 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v4, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v25);
}

void sub_1005DFCD0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v4 = sub_100047110(&qword_100822220);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v8 = (char *)Strong;
    if (a2)
    {
      v9 = a2;
      AppleExertionScale.init(quantity:)(a2);
    }
    else
    {
      v10 = type metadata accessor for AppleExertionScale(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
    }
    v11 = (uint64_t)&v8[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effort];
    swift_beginAccess(&v8[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effort], v12, 33, 0);
    sub_1005E2618((uint64_t)v6, v11);
    swift_endAccess(v12);
    sub_1005DF128();

  }
}

void sub_1005DFDD8(void *a1, void *a2, void *a3, char *a4)
{
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  char *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  CHWorkoutDetailHeartRateTableViewCell *v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  NSString v53;
  SEL v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  void *v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  NSString v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  CHWorkoutDetailHeartRateTableViewCell *v69;
  SEL v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  _BOOL8 v80;
  uint64_t v81;
  uint64_t inited;
  uint64_t v83;
  id v84;
  id v85;
  CHWorkoutDetailHeartRateTableViewCell *v86;
  id v87;
  Class isa;
  SEL v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  void *v98;
  id v99;
  char *v100;
  void *v101;
  id v102;
  id v103;
  void *v104;
  uint64_t v105;
  id v106;
  void *v107;
  void *v108;
  id v109;
  void *v110;
  id v111;
  NSString v112;
  void *v113;
  void *v114;
  id v115;
  void *v116;
  id v117;
  NSString v118;
  id v119;
  id v120;
  void (**v121)(char *, uint64_t);
  void *v122;
  id v123;
  id v124;
  id v125;
  void *v126;
  char *v127;
  id v128;
  void *v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  id v133;
  char *v134;
  double v135;
  id v136;
  double v137;
  void *v138;
  void (**v139)(char *, uint64_t);
  id v140;
  _BYTE *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  id v147;
  uint64_t v148;
  void *v149;
  id v150;
  __n128 v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  _BYTE *v158;
  id v159;
  char *v160;
  void (**v161)(char *, uint64_t);
  _QWORD *v162;
  id v163;
  char *v164;
  id aBlock[5];
  uint64_t v166;
  char v167[88];

  v5 = v4;
  v160 = a4;
  v155 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v155);
  v157 = (char *)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = type metadata accessor for WorkoutActivityEntity(0);
  __chkstk_darwin(v156);
  v154 = (uint64_t)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v158 = (char *)&v152 - v12;
  v13 = sub_100047110(&qword_10082CC38);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v152 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for NSNotificationCenter.Publisher(0, v14);
  v161 = *(void (***)(char *, uint64_t))(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = (_QWORD *)sub_100047110(&qword_10082CC40);
  v164 = (char *)*(v162 - 1);
  *(_QWORD *)&v20 = __chkstk_darwin(v162).n128_u64[0];
  v22 = (char *)&v152 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = objc_msgSend(a2, "workoutConfiguration", v20);
  v24 = objc_msgSend(v23, "activityType");

  v25 = &v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType];
  v163 = v24;
  *(_QWORD *)v25 = v24;
  v25[8] = 0;
  v26 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_formattingManager];
  *(_QWORD *)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_formattingManager] = a3;
  v159 = a3;

  v27 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workout];
  *(_QWORD *)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workout] = a1;
  v28 = a1;

  v29 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutActivity];
  *(_QWORD *)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutActivity] = a2;
  v30 = a2;

  v31 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_dataCalculator;
  v32 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_dataCalculator];
  v33 = v160;
  *(_QWORD *)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_dataCalculator] = v160;
  v34 = v33;

  v35 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(CFSTR("CHEffortChangedNotification"), 0);

  v36 = sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  aBlock[0] = (id)static OS_dispatch_queue.main.getter(v37);
  v38 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v16, 1, 1, v38);
  v39 = sub_1000083D8(&qword_10082CC48, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v40 = sub_1002BCCCC();
  Publisher.subscribe<A>(on:options:)(aBlock, v16, v17, v36, v39, v40);
  sub_10001BE90((uint64_t)v16, &qword_10082CC38);

  v161[1](v19, v17);
  v41 = swift_allocObject(&unk_1007AD808, 24, 7);
  swift_unknownObjectWeakInit(v41 + 16);
  v42 = swift_allocObject(&unk_1007AD830, 32, 7);
  *(_QWORD *)(v42 + 16) = v41;
  *(_QWORD *)(v42 + 24) = v28;
  v43 = sub_100028384(&qword_10082CC58, &qword_10082CC40, (uint64_t)&protocol conformance descriptor for Publishers.SubscribeOn<A, B>);
  v161 = (void (**)(char *, uint64_t))v28;
  v44 = v162;
  v45 = Publisher<>.sink(receiveValue:)(sub_1005E210C, v42, v162, v43);
  v46 = swift_release(v42);
  (*((void (**)(char *, _QWORD *, __n128))v164 + 1))(v22, v44, v46);
  v47 = *(_QWORD *)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_noteSink];
  *(_QWORD *)&v5[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_noteSink] = v45;
  swift_release(v47);
  sub_1005DF934();
  sub_1005DF128();
  if (qword_10081E0D8 != -1)
    swift_once(&qword_10081E0D8, sub_1005DD7B8);
  v48 = (void *)UILabel.withFont(_:)(qword_10086B038);
  v49 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v50 = (void *)UILabel.withTextColor(_:)(v49);

  sub_1005E24A0(v30);
  v52 = v51;
  v53 = String._bridgeToObjectiveC()();
  objc_msgSend(v50, "setText:", v53);

  swift_bridgeObjectRelease(v52, v54, v55, v56, v57, v58, v59, v60);
  v61 = (void *)UILabel.withFont(_:)(qword_10086B038);
  v62 = (void *)objc_opt_self(ARUIMetricColors);
  v63 = objc_msgSend(v62, "elapsedTimeColors");
  if (!v63)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v64 = v63;
  v160 = (char *)v31;
  v65 = objc_msgSend(v63, "nonGradientTextColor");

  objc_msgSend(v61, "setTextColor:", v65);
  objc_msgSend(v30, "duration");
  v66 = objc_msgSend(v159, "stringWithDuration:durationFormat:", 2);
  v67 = v66;
  v164 = v5;
  if (v66)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
    v69 = v68;

    v67 = String._bridgeToObjectiveC()();
  }
  else
  {
    v69 = 0;
  }
  objc_msgSend(v61, "setText:", v67);

  swift_bridgeObjectRelease(v69, v70, v71, v72, v73, v74, v75, v76);
  v77 = v163;
  if (v163 == (id)83)
  {
    sub_1005DEFC0();
    return;
  }
  v78 = objc_msgSend(v30, "workoutConfiguration");
  v79 = objc_msgSend(v78, "locationType");

  v80 = v79 == (id)2;
  v81 = sub_100047110(&qword_100820A50);
  inited = swift_initStackObject(v81, v167);
  *(_OWORD *)(inited + 16) = xmmword_100622F90;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(HKMetadataKeySwimmingLocationType);
  *(_QWORD *)(inited + 40) = v83;
  v162 = v30;
  v84 = objc_msgSend(v30, "workoutConfiguration");
  v85 = objc_msgSend(v84, "swimmingLocationType");

  *(_QWORD *)(inited + 72) = &type metadata for Int;
  *(_QWORD *)(inited + 48) = v85;
  v86 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100435AC8(inited);
  v87 = objc_allocWithZone((Class)FIUIWorkoutActivityType);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v86, v89, v90, v91, v92, v93, v94, v95);
  v96 = objc_msgSend(v87, "initWithActivityTypeIdentifier:isIndoor:metadata:", v77, v80, isa);

  v159 = v96;
  v97 = (id)FIUIStaticWorkoutIconImage(v96, 2);
  if (!v97)
    goto LABEL_25;
  v98 = v97;
  v99 = objc_msgSend(v97, "imageWithRenderingMode:", 2);

  v100 = v164;
  v101 = *(void **)&v164[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutIconView];
  v153 = v99;
  objc_msgSend(v101, "setImage:", v99);
  v102 = objc_msgSend(v62, "metricColorsForGoalTypeIdentifier:", 0);
  v103 = objc_msgSend(v102, "nonGradientTextColor");

  objc_msgSend(v101, "setTintColor:", v103);
  v104 = *(void **)&v100[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutImageView];
  v106 = (id)FIUICircularWorkoutGradientImage(v105);
  objc_msgSend(v104, "setImage:", v106);

  v107 = *(void **)&v100[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_distanceLabel];
  v108 = (void *)UILabel.withFont(_:)(qword_10086B038);
  v109 = objc_msgSend(v62, "distanceColors");
  if (!v109)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v110 = v109;
  v111 = objc_msgSend(v109, "nonGradientTextColor");

  objc_msgSend(v108, "setTextColor:", v111);
  v112 = String._bridgeToObjectiveC()();
  objc_msgSend(v108, "setText:", v112);

  v113 = *(void **)&v100[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_paceLabel];
  v114 = (void *)UILabel.withFont(_:)(qword_10086B038);
  v115 = objc_msgSend(v62, "paceColors");
  if (v115)
  {
    v116 = v115;
    v117 = objc_msgSend(v115, "nonGradientTextColor");

    objc_msgSend(v114, "setTextColor:", v117);
    v118 = String._bridgeToObjectiveC()();
    objc_msgSend(v114, "setText:", v118);

    v119 = v162;
    v120 = objc_msgSend(v162, "distanceType");
    v121 = v161;
    if (!v120)
    {
LABEL_23:
      v139 = v121;
      v140 = v119;
      v141 = v158;
      sub_100136B14(v140, 0, 0, v139, v158);
      v142 = v154;
      sub_10020B570((uint64_t)v141, v154);
      aBlock[0] = &_swiftEmptyArrayStorage;
      v143 = sub_1000083D8((unint64_t *)&qword_10081F608, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
      v144 = sub_100047110((uint64_t *)&unk_10083D740);
      v145 = sub_100028384((unint64_t *)&qword_10081F610, (uint64_t *)&unk_10083D740, (uint64_t)&protocol conformance descriptor for [A]);
      v146 = v157;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v144, v145, v155, v143);
      v147 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
      v148 = sub_1000083D8(&qword_100821C10, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625F30);
      v149 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v142, v146, v156, v148);
      v150 = objc_msgSend(v164, "contentView");
      UIView.annotate(with:)(v149, v151);

      sub_10020B5B4((uint64_t)v141);
      return;
    }
    v122 = v120;
    v123 = objc_msgSend(v119, "statisticsForType:", v120);
    if (!v123)
    {
LABEL_22:

      v119 = v162;
      goto LABEL_23;
    }
    v124 = v123;
    v125 = objc_msgSend(v123, "sumQuantity");
    if (!v125)
    {
LABEL_21:

      v122 = v124;
      goto LABEL_22;
    }
    v126 = v125;
    v127 = v164;
    v128 = sub_1005E1B34(v125);
    objc_msgSend(v107, "setAttributedText:", v128);

    if (v163 == (id)46)
    {
      v129 = *(void **)&v160[(_QWORD)v127];
      if (!v129)
      {
LABEL_20:
        v138 = v122;

        v122 = v124;
        v124 = v138;
        goto LABEL_21;
      }
      v130 = swift_allocObject(&unk_1007AD858, 24, 7);
      *(_QWORD *)(v130 + 16) = v127;
      aBlock[4] = sub_1005E25B8;
      v166 = v130;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_1005E1AA4;
      aBlock[3] = &unk_1007AD870;
      v131 = _Block_copy(aBlock);
      v132 = v166;
      v133 = v129;
      v134 = v127;
      *(_QWORD *)&v135 = swift_release(v132).n128_u64[0];
      objc_msgSend(v133, "swimmingPacePerHundredForWorkout:workoutActivity:completion:", v121, v162, v131, v135);
      _Block_release(v131);
      v136 = v126;
      v126 = v124;
      v124 = v122;
      v122 = v133;
    }
    else
    {
      objc_msgSend(v162, "duration");
      v136 = sub_1005E0E30((uint64_t)v126, 0, 1, v137);
      objc_msgSend(v113, "setAttributedText:", v136);
    }

    goto LABEL_20;
  }
LABEL_27:
  __break(1u);
}

void sub_1005E0A24(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  __n128 v16;
  void *v17;
  uint64_t v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  uint64_t v20;
  const char *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  unint64_t v28;
  int v29;
  id v30;
  void (*v31)(char *, uint64_t);
  _QWORD v33[2];
  _QWORD v34[5];
  __int128 v35;
  __int128 v36;
  _BYTE v37[24];

  v5 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v5);
  v7 = (char *)&v33[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v33[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33[-1] - v13;
  a2 += 16;
  swift_beginAccess(a2, v37, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v17 = (void *)Strong;
    v18 = Notification.userInfo.getter(v16);
    if (v18)
    {
      v19 = (CHWorkoutDetailHeartRateTableViewCell *)v18;
      v33[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("WorkoutUUID"));
      v33[1] = v20;
      AnyHashable.init<A>(_:)(v34, v33, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)v19->cellPadding && (v28 = sub_10004C814((uint64_t)v34), (v21 & 1) != 0))
      {
        sub_10003E9BC(*(_QWORD *)v19[1].cellInset + 32 * v28, (uint64_t)&v35);
      }
      else
      {
        v35 = 0u;
        v36 = 0u;
      }
      swift_bridgeObjectRelease(v19, v21, v22, v23, v24, v25, v26, v27);
      sub_10004CC10((uint64_t)v34);
      if (*((_QWORD *)&v36 + 1))
      {
        v29 = swift_dynamicCast(v7, &v35, (char *)&type metadata for Any + 8, v8, 6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, v29 ^ 1u, 1, v8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
          v30 = objc_msgSend(a3, "UUID");
          static UUID._unconditionallyBridgeFromObjectiveC(_:)(v30);

          LOBYTE(v30) = static UUID.== infix(_:_:)(v14, v11);
          v31 = *(void (**)(char *, uint64_t))(v9 + 8);
          v31(v11, v8);
          if ((v30 & 1) != 0)
          {
            sub_1005DF934();

            v31(v14, v8);
          }
          else
          {
            v31(v14, v8);

          }
          return;
        }
LABEL_13:

        sub_10001BE90((uint64_t)v7, (uint64_t *)&unk_10082E690);
        return;
      }
    }
    else
    {
      v35 = 0u;
      v36 = 0u;
    }
    sub_10001BE90((uint64_t)&v35, (uint64_t *)&unk_100828420);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_13;
  }
}

void sub_1005E0D60()
{
  uint64_t v0;
  void *v1;
  uint64_t Strong;
  void *v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutActivity);
  if (v1
    && ((*(_BYTE *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType + 8) & 1) != 0
     || *(_QWORD *)(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType) != 83))
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_navigationDelegate);
    if (Strong)
    {
      v3 = (void *)Strong;
      v4 = v1;
      objc_msgSend(v3, "pushWorkoutActivity:", v4);

      swift_unknownObjectRelease(v3);
    }
  }
}

id sub_1005E0E30(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  id result;
  void *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  unint64_t v26;
  uint64_t v27;
  const char *v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  NSString v39;
  id v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  CHWorkoutDetailHeartRateTableViewCell *v42;
  id v43;
  NSString v44;
  SEL v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  NSString v60;
  id v61;
  uint64_t v62;
  CHWorkoutDetailHeartRateTableViewCell *v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  const char *v69;
  CHWorkoutDetailHeartRateTableViewCell *v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  void *v79;
  CHWorkoutDetailHeartRateTableViewCell *v80;
  CHWorkoutDetailHeartRateTableViewCell *v81;
  unint64_t v82;
  uint64_t v83;
  const char *v84;
  const char *v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  NSString v93;
  id v94;
  uint64_t v95;
  CHWorkoutDetailHeartRateTableViewCell *v96;
  CHWorkoutDetailHeartRateTableViewCell *v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  const char *v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  SEL v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  SEL v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  SEL v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  SEL v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  uint64_t v137;

  v5 = (uint64_t *)(v4 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType);
  if ((*(_BYTE *)(v4 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType + 8) & 1) != 0
    || (v6 = *(void **)(v4 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_formattingManager)) == 0)
  {
    v38 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v39 = String._bridgeToObjectiveC()();
    v40 = objc_msgSend(v38, "localizedStringForKey:value:table:", v39, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v42 = v41;

    v43 = objc_allocWithZone((Class)NSAttributedString);
    v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v42, v45, v46, v47, v48, v49, v50, v51);
    v52 = objc_msgSend(v43, "initWithString:", v44);

    return v52;
  }
  v11 = *v5;
  v12 = objc_allocWithZone((Class)FIUIWorkoutActivityType);
  v13 = v6;
  v14 = objc_msgSend(v12, "initWithActivityTypeIdentifier:isIndoor:", v11, 0);
  v15 = FIUIPaceFormatForWorkoutActivityType(v14);
  v16 = FIUIDistanceTypeForActivityType(v14);
  v17 = objc_msgSend(v13, "localizedPaceStringWithDistance:overDuration:paceFormat:distanceType:", a1, v15, v16, a4);
  if (v17)
  {
    v18 = v17;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v21 = v20;

    if (v15 == 4)
    {
LABEL_5:
      result = objc_msgSend(v13, "localizedSpeedUnitStringForActivityType:", v14);
      if (result)
      {
        v23 = result;
        static String._unconditionallyBridgeFromObjectiveC(_:)(result);
        v25 = v24;

        v26 = sub_100038CA0();
        v27 = StringProtocol.localizedUppercase.getter(&type metadata for String, v26);
        v29 = (CHWorkoutDetailHeartRateTableViewCell *)v28;
        swift_bridgeObjectRelease(v25, v28, v30, v31, v32, v33, v34, v35);
        if (qword_10081E0D8 != -1)
          swift_once(&qword_10081E0D8, sub_1005DD7B8);
        v36 = (void *)qword_10086B038;
        v37 = v19;
LABEL_20:
        v108 = sub_1000387C4(v37, (uint64_t)v21, v27, (uint64_t)v29, v36);

        swift_bridgeObjectRelease(v21, v109, v110, v111, v112, v113, v114, v115);
        swift_bridgeObjectRelease(v29, v116, v117, v118, v119, v120, v121, v122);
        return v108;
      }
      __break(1u);
      goto LABEL_27;
    }
  }
  else
  {
    v21 = (CHWorkoutDetailHeartRateTableViewCell *)0xE200000000000000;
    v19 = 11565;
    if (v15 == 4)
      goto LABEL_5;
  }
  if (v11 == 46)
  {
    if ((a3 & 1) != 0
      || (v53 = (void *)objc_opt_self(FIUIFormattingManager),
          v54 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", *(double *)&a2),
          v55 = objc_msgSend(v53, "stringWithNumber:decimalPrecision:", v54, 1),
          v54,
          !v55))
    {
      v68 = 0;
      v70 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
    }
    else
    {
      v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
      v58 = v57;

      v59 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v60 = String._bridgeToObjectiveC()();
      v61 = objc_msgSend(v59, "localizedStringForKey:value:table:", v60, 0, 0);

      v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
      v64 = v63;

      v65 = sub_100047110((uint64_t *)&unk_100827460);
      v66 = swift_allocObject(v65, 72, 7);
      *(_OWORD *)(v66 + 16) = xmmword_100622F90;
      *(_QWORD *)(v66 + 56) = &type metadata for String;
      *(_QWORD *)(v66 + 64) = sub_100038CF8();
      *(_QWORD *)(v66 + 32) = v56;
      *(_QWORD *)(v66 + 40) = v58;
      v68 = String.init(format:_:)(v62, v64, v66, v67);
      v70 = (CHWorkoutDetailHeartRateTableViewCell *)v69;
      swift_bridgeObjectRelease(v64, v69, v71, v72, v73, v74, v75, v76);
    }
    if (qword_10081E0D8 != -1)
      swift_once(&qword_10081E0D8, sub_1005DD7B8);
    v108 = sub_1000387C4(v19, (uint64_t)v21, v68, (uint64_t)v70, (void *)qword_10086B038);
    swift_bridgeObjectRelease(v70, v123, v124, v125, v126, v127, v128, v129);
    swift_bridgeObjectRelease(v21, v130, v131, v132, v133, v134, v135, v136);

    return v108;
  }
  result = objc_msgSend(v13, "unitManager");
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v77 = result;
  v137 = v19;
  v78 = objc_msgSend(result, "paceDistanceUnitForDistanceType:", v16);

  result = objc_msgSend(v13, "localizedShortUnitStringForDistanceUnit:", v78);
  if (result)
  {
    v79 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v81 = v80;

    v82 = sub_100038CA0();
    v83 = StringProtocol.localizedUppercase.getter(&type metadata for String, v82);
    v85 = v84;
    swift_bridgeObjectRelease(v81, v84, v86, v87, v88, v89, v90, v91);
    v92 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v93 = String._bridgeToObjectiveC()();
    v94 = objc_msgSend(v92, "localizedStringForKey:value:table:", v93, 0, 0);

    v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
    v97 = v96;

    v98 = sub_100047110((uint64_t *)&unk_100827460);
    v99 = swift_allocObject(v98, 72, 7);
    *(_OWORD *)(v99 + 16) = xmmword_100622F90;
    *(_QWORD *)(v99 + 56) = &type metadata for String;
    *(_QWORD *)(v99 + 64) = sub_100038CF8();
    *(_QWORD *)(v99 + 32) = v83;
    *(_QWORD *)(v99 + 40) = v85;
    v27 = String.init(format:_:)(v95, v97, v99, v100);
    v29 = (CHWorkoutDetailHeartRateTableViewCell *)v101;
    swift_bridgeObjectRelease(v97, v101, v102, v103, v104, v105, v106, v107);
    if (qword_10081E0D8 != -1)
      swift_once(&qword_10081E0D8, sub_1005DD7B8);
    v36 = (void *)qword_10086B038;
    v37 = v137;
    goto LABEL_20;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1005E1488(void *a1, id a2, uint64_t a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  os_log_type_t v17;
  void *v18;
  os_log_type_t v19;
  NSObject *v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  CHWorkoutDetailHeartRateTableViewCell *v25;
  SEL v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  unint64_t v46;
  unint64_t v47;
  __n128 v48;
  _QWORD *v49;
  void *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  uint64_t v60;
  unint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  _QWORD v66[3];
  char v67[8];
  uint64_t aBlock[5];
  _QWORD *v69;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v16 = swift_errorRetain(a3);
    v17 = static os_log_type_t.error.getter(v16);
    v18 = (void *)HKLogWorkouts;
    v19 = v17;
    if (os_log_type_enabled(HKLogWorkouts, v17))
    {
      swift_errorRetain(a3);
      swift_errorRetain(a3);
      v20 = v18;
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      aBlock[0] = v22;
      *(_DWORD *)v21 = 136315138;
      swift_getErrorValue(a3, v67, v66);
      v23 = Error.localizedDescription.getter(v66[1], v66[2]);
      v25 = (CHWorkoutDetailHeartRateTableViewCell *)v24;
      v65 = sub_10003E8EC(v23, v24, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66, v21 + 4);
      swift_bridgeObjectRelease(v25, v26, v27, v28, v29, v30, v31, v32);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      _os_log_impl((void *)&_mh_execute_header, v20, v19, "Error loading swimming splits pace: %s", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);
      swift_errorRelease(a3);

    }
    else
    {
      swift_errorRelease(a3);
    }
  }
  else if (a1 && a2)
  {
    v33 = *(void **)&a4[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_formattingManager];
    v64 = a2;
    if (v33)
    {
      v34 = a1;
      v35 = a2;
      v36 = v34;
      v37 = v35;
      v38 = v33;
      objc_msgSend(v36, "doubleValue");
      v39 = objc_msgSend(v38, "stringWithDuration:durationFormat:", 1);

      if (v39)
      {
        v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
        v61 = v41;
        v62 = (void *)v40;

      }
      else
      {
        v61 = 0xE000000000000000;
        v62 = 0;
      }
      a2 = v64;
    }
    else
    {
      v42 = a1;
      v43 = a2;
      v61 = 0xE000000000000000;
      v62 = 0;
    }
    v44 = objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "stringWithNumber:decimalPrecision:", a2, 1);
    if (v44)
    {
      v45 = v44;
      v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v47 = v46;

    }
    else
    {
      v60 = 0;
      v47 = 0xE000000000000000;
    }
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v63 = static OS_dispatch_queue.main.getter(v48);
    v49 = (_QWORD *)swift_allocObject(&unk_1007AD8A8, 56, 7);
    v50 = v62;
    v49[2] = a4;
    v49[3] = v50;
    v51 = v60;
    v49[4] = v61;
    v49[5] = v51;
    v49[6] = v47;
    aBlock[4] = (uint64_t)sub_1005E25F4;
    v69 = v49;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10002D0F8;
    aBlock[3] = (uint64_t)&unk_1007AD8C0;
    v62 = _Block_copy(aBlock);
    v52 = v69;
    v53 = a4;
    swift_release(v52);
    static DispatchQoS.unspecified.getter(v54);
    aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
    v55 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v56 = sub_100047110(&qword_100828C80);
    v57 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v56, v57, v8, v55);
    v59 = v62;
    v58 = (void *)v63;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v11, v62);

    _Block_release(v59);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

void sub_1005E1918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  const char *v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;

  v9 = *(void **)(a1 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_paceLabel);
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, 0, 0);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16 = sub_100047110((uint64_t *)&unk_100827460);
  v17 = swift_allocObject(v16, 112, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v17 + 56) = &type metadata for String;
  v18 = sub_100038CF8();
  *(_QWORD *)(v17 + 32) = a2;
  *(_QWORD *)(v17 + 40) = a3;
  *(_QWORD *)(v17 + 96) = &type metadata for String;
  *(_QWORD *)(v17 + 104) = v18;
  *(_QWORD *)(v17 + 64) = v18;
  *(_QWORD *)(v17 + 72) = a4;
  *(_QWORD *)(v17 + 80) = a5;
  swift_bridgeObjectRetain(a3);
  v19 = swift_bridgeObjectRetain(a5);
  String.init(format:_:)(v13, v15, v17, v19);
  v21 = (CHWorkoutDetailHeartRateTableViewCell *)v20;
  swift_bridgeObjectRelease(v15, v20, v22, v23, v24, v25, v26, v27);
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21, v28, v29, v30, v31, v32, v33, v34);
  objc_msgSend(v9, "setText:", v35);

}

void sub_1005E1AA4(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7;
  void (*v8)(void *, void *, void *);
  id v9;
  id v10;
  id v11;

  v8 = *(void (**)(void *, void *, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v11 = a2;
  v9 = a3;
  v10 = a4;
  v8(a2, a3, a4);
  swift_release(v7);

}

id sub_1005E1B34(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id result;
  void *v12;
  uint64_t v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  CHWorkoutDetailHeartRateTableViewCell *v15;
  unint64_t v16;
  uint64_t v17;
  const char *v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  double v29;
  double v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  CHWorkoutDetailHeartRateTableViewCell *v35;
  CHWorkoutDetailHeartRateTableViewCell *v36;
  id v37;
  NSString v38;
  id v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  id v42;
  NSString v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;

  v2 = *(void **)(v1 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_formattingManager);
  if (!v2 || (v3 = *(void **)(v1 + OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutActivity)) == 0)
  {
    v37 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v38 = String._bridgeToObjectiveC()();
    v39 = objc_msgSend(v37, "localizedStringForKey:value:table:", v38, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v41 = v40;

    v42 = objc_allocWithZone((Class)NSAttributedString);
    v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v41, v44, v45, v46, v47, v48, v49, v50);
    v51 = objc_msgSend(v42, "initWithString:", v43);

    return v51;
  }
  v5 = v2;
  v6 = v3;
  v7 = objc_msgSend(v6, "workoutConfiguration");
  v8 = objc_msgSend(v7, "swimmingLocationType");

  v9 = objc_msgSend(v6, "fiui_activityType");
  v10 = FIUIDistanceTypeForActivityType(v9);
  result = objc_msgSend(v5, "localizedShortUnitStringForDistanceType:", v10);
  if (!result)
  {
    __break(1u);
    goto LABEL_16;
  }
  v12 = result;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v15 = v14;

  v67 = v13;
  v16 = sub_100038CA0();
  v17 = StringProtocol.localizedUppercase.getter(&type metadata for String, v16);
  v19 = (CHWorkoutDetailHeartRateTableViewCell *)v18;
  swift_bridgeObjectRelease(v15, v18, v20, v21, v22, v23, v24, v25);
  result = objc_msgSend(v5, "unitManager", v67, v15);
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v26 = result;
  v27 = objc_msgSend(result, "userDistanceUnitForDistanceType:", v10);

  v28 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
  objc_msgSend(a1, "doubleValueForUnit:", v28);
  v30 = v29;

  if (v8 == (id)1)
    v31 = 1;
  else
    v31 = 2;
  v32 = objc_msgSend(v5, "localizedStringWithDistanceInMeters:distanceUnit:unitStyle:decimalPrecision:", v27, 0, v31, v30);
  if (v32)
  {
    v33 = v32;
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v36 = v35;

  }
  else
  {
    v36 = (CHWorkoutDetailHeartRateTableViewCell *)0xE200000000000000;
    v34 = 11565;
  }
  if (qword_10081E0D8 != -1)
    swift_once(&qword_10081E0D8, sub_1005DD7B8);
  v52 = sub_1000387C4(v34, (uint64_t)v36, v17, (uint64_t)v19, (void *)qword_10086B038);
  swift_bridgeObjectRelease(v36, v53, v54, v55, v56, v57, v58, v59);
  swift_bridgeObjectRelease(v19, v60, v61, v62, v63, v64, v65, v66);

  return v52;
}

id sub_1005E1E70()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailActivityTableViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1005E1FE4()
{
  return type metadata accessor for WorkoutDetailActivityTableViewCell(0);
}

uint64_t type metadata accessor for WorkoutDetailActivityTableViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10083D810;
  if (!qword_10083D810)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutDetailActivityTableViewCell);
  return result;
}

void sub_1005E2028(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[19];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[11] = "\t";
  v4[12] = &unk_1006498A0;
  v4[13] = &unk_1006498A0;
  v4[14] = &unk_1006498A0;
  v4[15] = &unk_1006498A0;
  v4[16] = &unk_1006498A0;
  sub_1002B9228(319);
  if (v3 <= 0x3F)
  {
    v4[17] = *(_QWORD *)(v2 - 8) + 64;
    v4[18] = &unk_1006498B8;
    swift_updateClassMetadata2(a1, 256, 19, v4, a1 + 80);
  }
}

uint64_t sub_1005E20E4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005E210C(uint64_t a1)
{
  uint64_t v1;

  sub_1005E0A24(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1005E2114()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v1 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_groupView;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = objc_msgSend(v2, "layer");
  objc_msgSend(v3, "setCornerRadius:", 12.0);

  objc_msgSend(v2, "setClipsToBounds:", 1);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v1] = v2;
  v4 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutImageView;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v4] = v5;
  v6 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutIconView;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v6] = v7;
  v8 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutTypeLabel;
  v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v8] = v9;
  v10 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_distanceLabel;
  v11 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v10] = v11;
  v12 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_durationLabel;
  v13 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v12] = v13;
  v14 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_paceLabel;
  v15 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v14] = v15;
  v16 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortImageView;
  v17 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v16] = v17;
  v18 = OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effortLabel;
  v19 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v18] = v19;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_standardAnchors] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_transitionAnchors] = _swiftEmptyArrayStorage;
  v20 = &v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_activityType];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_formattingManager] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_dataCalculator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workout] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_workoutActivity] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_noteSink] = 0;
  v21 = &v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_effort];
  v22 = type metadata accessor for AppleExertionScale(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___CHWorkoutDetailActivityTableViewCell_navigationDelegate], 0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/WorkoutDetailActivityTableViewCell.swift", 51, 2, 84, 0);
  __break(1u);
}

id sub_1005E24A0(void *a1)
{
  id v2;
  id v3;
  _BOOL8 v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id result;
  void *v10;
  uint64_t v11;

  v2 = objc_msgSend(a1, "workoutConfiguration");
  v3 = objc_msgSend(v2, "locationType");

  v4 = v3 == (id)2;
  v5 = objc_msgSend(a1, "workoutConfiguration");
  v6 = objc_msgSend(v5, "activityType");

  v7 = objc_msgSend(a1, "workoutConfiguration");
  v8 = objc_msgSend(v7, "swimmingLocationType");

  result = (id)FILocalizedNameForActivityType(v6, v8, v4);
  if (result)
  {
    v10 = result;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);

    return (id)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005E2594()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1005E25B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  sub_1005E1488(a1, a2, a3, *(char **)(v3 + 16));
}

uint64_t sub_1005E25C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1005E25F4()
{
  uint64_t *v0;

  sub_1005E1918(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1005E2604(void *a1)
{
  uint64_t v1;

  return sub_1005DFA68(a1, v1);
}

void sub_1005E2610()
{
  uint64_t v0;

  sub_1005DFCD0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1005E2618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100822220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E2660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100822220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E26B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v8 = type metadata accessor for ChartPoint(0, a3, a4, a4);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v20 - v13;
  v15 = dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, a3, a4);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v14, a1, v8);
  v16(v11, a2, v8);
  if ((v15 & 1) != 0)
    v17 = dispatch thunk of static Equatable.== infix(_:_:)(&v14[*(int *)(v8 + 36)], &v11[*(int *)(v8 + 36)], a3, a4);
  else
    v17 = 0;
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v11, v8);
  v18(v14, v8);
  return v17 & 1;
}

uint64_t sub_1005E27DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005E26B0(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t type metadata accessor for ChartPoint(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10014E7CC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ChartPoint);
}

uint64_t sub_1005E27F4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_1005E2860(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  void (*v15)(uint64_t *, uint64_t *, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = ~v8;
  v10 = v7 + v8;
  v11 = ((v7 + v8) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain(v14);
  }
  else
  {
    v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, *(_QWORD *)(a3 + 16));
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
  }
  return v4;
}

uint64_t sub_1005E2914(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v6(a1, v3);
  return v6((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);
}

unint64_t sub_1005E297C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1005E29E8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1005E2A54(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1005E2AC0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

uint64_t sub_1005E2B2C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = ((*(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
     + *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1005E2BEC + 4 * byte_1006498D8[(v7 - 1)]))();
}

void sub_1005E2C3C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = &dword_100000004;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1005E2DFC(unsigned __int8 a1)
{
  int v1;
  uint64_t result;
  unsigned int v3;
  Swift::String v4;
  void *object;

  v1 = a1 - 39;
  result = 0xD000000000000016;
  switch(v1)
  {
    case 0:
    case 8:
    case 9:
      return result;
    case 1:
      result = 0xD000000000000020;
      break;
    case 2:
      result = 0xD000000000000020;
      break;
    case 3:
      v3 = 1918990177;
      goto LABEL_10;
    case 4:
      result = 0xD000000000000011;
      break;
    case 5:
      result = 0xD000000000000020;
      break;
    case 6:
      result = 0xD00000000000001CLL;
      break;
    case 7:
      result = 0xD000000000000012;
      break;
    case 10:
      v3 = 1852142196;
LABEL_10:
      result = v3 | 0x6843736400000000;
      break;
    case 11:
      result = 0xD000000000000014;
      break;
    default:
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(0xE000000000000000);
      v4._countAndFlagsBits = sub_1005F0860(0x16u);
      object = v4._object;
      String.append(_:)(v4);
      swift_bridgeObjectRelease(object);
      result = 0x437363697274656DLL;
      break;
  }
  return result;
}

BOOL sub_1005E2F80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005E2F8C(*a1, *a2);
}

BOOL sub_1005E2F8C(unsigned __int8 a1, unsigned __int8 a2)
{
  _BOOL8 result;

  switch(a1)
  {
    case '\'':
      if (a2 != 39)
        goto LABEL_27;
      result = 1;
      break;
    case '(':
      if (a2 != 40)
        goto LABEL_27;
      result = 1;
      break;
    case ')':
      if (a2 != 41)
        goto LABEL_27;
      result = 1;
      break;
    case '*':
      if (a2 != 42)
        goto LABEL_27;
      result = 1;
      break;
    case '+':
      if (a2 != 43)
        goto LABEL_27;
      result = 1;
      break;
    case ',':
      if (a2 != 44)
        goto LABEL_27;
      result = 1;
      break;
    case '-':
      if (a2 != 45)
        goto LABEL_27;
      result = 1;
      break;
    case '.':
      if (a2 != 46)
        goto LABEL_27;
      result = 1;
      break;
    case '/':
      if (a2 != 47)
        goto LABEL_27;
      result = 1;
      break;
    case '0':
      if (a2 != 48)
        goto LABEL_27;
      result = 1;
      break;
    case '1':
      if (a2 != 49)
        goto LABEL_27;
      result = 1;
      break;
    case '2':
      if (a2 != 50)
        goto LABEL_27;
      result = 1;
      break;
    default:
      if (a2 - 39 >= 0xC)
        result = a1 == a2;
      else
LABEL_27:
        result = 0;
      break;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SummaryCoordinatorEvent(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xCE)
  {
    v6 = *a1;
    if (v6 >= 0x27)
      v7 = v6 - 38;
    else
      v7 = 0;
    if (v7 >= 0xD)
      return v7 - 12;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 50;
    if (a2 + 50 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1005E30E8 + 4 * byte_100649958[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for SummaryCoordinatorEvent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 50;
  if (a3 + 50 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xCE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xCD)
    return ((uint64_t (*)(void))((char *)&loc_1005E3194 + 4 * byte_100649962[v5]))();
  *a1 = a2 + 50;
  return ((uint64_t (*)(void))((char *)sub_1005E31C8 + 4 * byte_10064995D[v5]))();
}

uint64_t sub_1005E31C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005E31D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005E31D8);
  return result;
}

uint64_t sub_1005E31E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005E31ECLL);
  *(_BYTE *)result = a2 + 50;
  return result;
}

uint64_t sub_1005E31F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005E31F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005E3204(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 0x27)
    return v1 - 38;
  else
    return 0;
}

_BYTE *sub_1005E3218(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 38;
  return result;
}

ValueMetadata *type metadata accessor for SummaryCoordinatorEvent()
{
  return &type metadata for SummaryCoordinatorEvent;
}

char *sub_1005E3238(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _OWORD *v15;
  __int128 v16;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain(v5);
  }
  else
  {
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = *(int *)(a3 + 24);
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = v5;
    v12 = sub_100047110(&qword_10083D8A0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    v13 = *(int *)(a3 + 28);
    v14 = &a1[v13];
    v15 = (_OWORD *)((char *)a2 + v13);
    v16 = v15[1];
    *(_OWORD *)v14 = *v15;
    *((_OWORD *)v14 + 1) = v16;
  }
  return a1;
}

uint64_t sub_1005E32EC(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_100047110(&qword_10083D8A0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1005E3338(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = v6;
  v12 = sub_100047110(&qword_10083D8A0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
  v13 = *(int *)(a3 + 28);
  v14 = (_OWORD *)((char *)a1 + v13);
  v15 = (_OWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  return a1;
}

uint64_t sub_1005E33C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_100047110(&qword_10083D8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 28);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  v14[3] = v15[3];
  return a1;
}

_QWORD *sub_1005E3470(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_100047110(&qword_10083D8A0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_1005E34F4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_100047110(&qword_10083D8A0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_1005E3588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005E3594);
}

uint64_t sub_1005E3594(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100047110(&qword_10083D8A0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1005E3614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005E3620);
}

char *sub_1005E3620(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100047110(&qword_10083D8A0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for EntryLinksListView(uint64_t a1)
{
  uint64_t result;

  result = qword_10083D900;
  if (!qword_10083D900)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EntryLinksListView);
  return result;
}

void sub_1005E36D4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_1005E3760(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = " ";
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_1005E3760(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10083D910)
  {
    v2 = sub_10030A42C();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for Double, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10083D910);
  }
}

uint64_t sub_1005E37B8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BDE00, 1);
}

uint64_t sub_1005E37C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  SEL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v32;
  uint64_t v33;
  _BYTE v34[16];
  CHWorkoutDetailHeartRateTableViewCell **v35;
  uint64_t v36;
  uint64_t (*v37)(char *);
  uint64_t v38;
  CHWorkoutDetailHeartRateTableViewCell *v39;

  v2 = v1;
  v33 = a1;
  v3 = type metadata accessor for EntryLinksListView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10083D948);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10011F1F4(*(_QWORD *)(v2 + 8));
  KeyPath = swift_getKeyPath(&unk_100649A58);
  sub_1005E4260(v2, (uint64_t)v6);
  v13 = *(unsigned __int8 *)(v4 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_1007ADA78, v14 + v5, v13 | 7);
  sub_1005E4334((uint64_t)v6, v15 + v14);
  v39 = v11;
  v35 = &v39;
  v36 = KeyPath;
  v37 = sub_1005E4378;
  v38 = v15;
  v16 = sub_100047110(&qword_10083D950);
  v17 = sub_1005E43D0();
  List<>.init(content:)(sub_1005E43C4, v34, v16, v17);
  swift_release(KeyPath);
  swift_release(v15);
  swift_bridgeObjectRelease(v39, v18, v19, v20, v21, v22, v23, v24);
  v25 = v2 + *(int *)(v3 + 28);
  v32 = *(_OWORD *)v25;
  v26 = *(_QWORD *)(v25 + 16);
  v27 = *(_QWORD *)(v25 + 24);
  LOBYTE(v2) = static Edge.Set.all.getter(v28);
  v29 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v33, v10, v7);
  v30 = v29 + *(int *)(sub_100047110(&qword_10083D970) + 36);
  *(_BYTE *)v30 = v2;
  *(_OWORD *)(v30 + 8) = v32;
  *(_QWORD *)(v30 + 24) = v26;
  *(_QWORD *)(v30 + 32) = v27;
  *(_BYTE *)(v30 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1005E39A8(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  uint64_t v17;

  v4 = type metadata accessor for EntryLinksListView(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *a1;
  sub_1005E4260(a2, (uint64_t)v7);
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = v10 + v6;
  v12 = swift_allocObject(&unk_1007ADAC8, v11 + 1, v9 | 7);
  sub_1005E4334((uint64_t)v7, v12 + v10);
  *(_BYTE *)(v12 + v11) = v8;
  v16[16] = v8;
  v17 = a2;
  v13 = sub_100047110(&qword_10083D980);
  v14 = sub_100028384(&qword_10083D988, &qword_10083D980, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  return Button.init(action:label:)(sub_1005E4538, v12, sub_1005E4580, v16, v13, v14);
}

uint64_t sub_1005E3AC4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v7[24];
  uint64_t v8;
  _BYTE v9[32];

  v9[16] = a1;
  v7[16] = a1;
  v8 = a2;
  v2 = sub_100047110(&qword_10083D990);
  v3 = sub_100047110(&qword_10083D998);
  v4 = sub_100028384(&qword_10083D9A0, &qword_10083D990, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v5 = sub_1005E45A0();
  return Label.init(title:icon:)(sub_1005E458C, v9, sub_1005E4594, v7, v2, v3, v4, v5);
}

double sub_1005E3B70@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  double result;
  __int128 v9;
  _OWORD v10[8];
  uint64_t v11;
  _OWORD v12[9];

  v2 = a1;
  v4 = static VerticalAlignment.center.getter(a1);
  sub_1005E3C44(v2, (uint64_t)v10);
  *(_OWORD *)((char *)&v12[6] + 7) = v10[6];
  *(_OWORD *)((char *)&v12[5] + 7) = v10[5];
  *(_OWORD *)((char *)&v12[2] + 7) = v10[2];
  *(_OWORD *)((char *)&v12[1] + 7) = v10[1];
  *(_OWORD *)((char *)&v12[7] + 7) = v10[7];
  *(_QWORD *)((char *)&v12[8] + 7) = v11;
  *(_OWORD *)((char *)&v12[3] + 7) = v10[3];
  *(_OWORD *)((char *)&v12[4] + 7) = v10[4];
  *(_OWORD *)((char *)v12 + 7) = v10[0];
  v5 = v12[4];
  *(_OWORD *)(a2 + 97) = v12[5];
  v6 = v12[7];
  *(_OWORD *)(a2 + 113) = v12[6];
  *(_OWORD *)(a2 + 129) = v6;
  *(_OWORD *)(a2 + 144) = *(_OWORD *)((char *)&v12[7] + 15);
  v7 = v12[0];
  *(_OWORD *)(a2 + 33) = v12[1];
  result = *(double *)&v12[2];
  v9 = v12[3];
  *(_OWORD *)(a2 + 49) = v12[2];
  *(_OWORD *)(a2 + 65) = v9;
  *(_OWORD *)(a2 + 81) = v5;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_OWORD *)(a2 + 17) = v7;
  return result;
}

void sub_1005E3C44(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  char v13;
  char v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  __n128 v19;
  void (*v20)(char *, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t KeyPath;
  uint64_t v51;
  uint64_t v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  _QWORD v54[2];
  _BYTE v55[7];
  char v56;
  _BYTE v57[7];
  char v58;
  char v59;

  v4 = type metadata accessor for Font.Leading(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54[0] = sub_10011E43C(a1);
  v54[1] = v8;
  v9 = sub_100038CA0();
  v10 = Text.init<A>(_:)(v54, &type metadata for String, v9);
  v51 = v11;
  v52 = v10;
  v53 = v12;
  v14 = v13 & 1;
  KeyPath = swift_getKeyPath(&unk_100649AA0);
  v16 = static Font.body.getter(v15);
  v17 = enum case for Font.Leading.tight(_:);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v18(v7, enum case for Font.Leading.tight(_:), v4);
  v49 = Font.leading(_:)(v7, v16);
  v19 = swift_release(v16);
  v20 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
  v20(v7, v4, v19);
  v48 = swift_getKeyPath(&unk_100649A70);
  v22 = static Color.white.getter(v21);
  v47 = Image.init(systemName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
  v24 = static Font.body.getter(v23);
  v18(v7, v17, v4);
  v46 = Font.leading(_:)(v7, v24);
  v25 = swift_release(v24);
  v20(v7, v4, v25);
  v26 = swift_getKeyPath(&unk_100649A70);
  v27 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  v28 = Color.init(_:)(v27);
  v29 = swift_getKeyPath(&unk_100649AD0);
  v54[0] = v28;
  v30 = AnyShapeStyle.init<A>(_:)(v54, &type metadata for Color, &protocol witness table for Color);
  v59 = v14;
  v58 = 0;
  v56 = 1;
  *(_DWORD *)(a2 + 17) = v54[0];
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)v54 + 3);
  *(_DWORD *)(a2 + 49) = *(_DWORD *)v57;
  *(_DWORD *)(a2 + 52) = *(_DWORD *)&v57[3];
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v55[3];
  *(_DWORD *)(a2 + 89) = *(_DWORD *)v55;
  v31 = v51;
  v32 = v52;
  *(_QWORD *)a2 = v52;
  *(_QWORD *)(a2 + 8) = v31;
  *(_BYTE *)(a2 + 16) = v14;
  v33 = v53;
  v35 = v49;
  v34 = KeyPath;
  *(_QWORD *)(a2 + 24) = v53;
  *(_QWORD *)(a2 + 32) = v34;
  *(_QWORD *)(a2 + 40) = 1;
  *(_BYTE *)(a2 + 48) = 0;
  v36 = v48;
  *(_QWORD *)(a2 + 56) = v48;
  *(_QWORD *)(a2 + 64) = v35;
  *(_QWORD *)(a2 + 72) = v22;
  *(_QWORD *)(a2 + 80) = 0;
  *(_BYTE *)(a2 + 88) = 1;
  *(_QWORD *)(a2 + 96) = v47;
  *(_QWORD *)(a2 + 104) = v26;
  *(_QWORD *)(a2 + 112) = v46;
  *(_QWORD *)(a2 + 120) = v29;
  *(_QWORD *)(a2 + 128) = v30;
  v37 = v32;
  v38 = v31;
  sub_1000E439C(v32, v31, v14);
  swift_bridgeObjectRetain(v33);
  swift_retain(v34);
  swift_retain(v36);
  swift_retain(v35);
  swift_retain(v22);
  sub_1000E4458(v37, v38, v14);
  swift_release(v22);
  swift_release(v35);
  swift_release(v36);
  swift_release(v34);
  swift_bridgeObjectRelease(v33, v39, v40, v41, v42, v43, v44, v45);
}

void sub_1005E3F2C(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t KeyPath;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  __int128 v32;

  v4 = type metadata accessor for Font.Leading(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10011E89C(a1);
  v9 = Image.init(_internalSystemName:)(v8);
  v11 = static Font.body.getter(v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v4);
  v12 = Font.leading(_:)(v7, v11);
  v13 = swift_release(v11);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v13);
  KeyPath = swift_getKeyPath(&unk_100649A70);
  v15 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "briskColors");
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, "gradientLightColor");

    if (v17)
    {
      v18 = Color.init(uiColor:)(v17);
      type metadata accessor for EntryLinksListView(0);
      v19 = sub_100047110(&qword_10083D8A0);
      v20 = ScaledMetric.wrappedValue.getter(&v28, v19);
      v21 = v28;
      v22 = static Alignment.center.getter(v20);
      _FrameLayout.init(width:height:alignment:)(&v28, v21, 0, 0, 1, v22, v23);
      v24 = v28;
      v25 = v29;
      v26 = v30;
      v27 = v31;
      *(_QWORD *)a2 = v9;
      *(_BYTE *)(a2 + 8) = 1;
      *(_QWORD *)(a2 + 16) = KeyPath;
      *(_QWORD *)(a2 + 24) = v12;
      *(_QWORD *)(a2 + 32) = v18;
      *(_QWORD *)(a2 + 40) = v24;
      *(_BYTE *)(a2 + 48) = v25;
      *(_QWORD *)(a2 + 56) = v26;
      *(_BYTE *)(a2 + 64) = v27;
      *(_OWORD *)(a2 + 72) = v32;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1005E40F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1005E4120(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tint.setter(v1);
}

uint64_t sub_1005E4148(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v15 = *a1;
  v7 = v15;
  v8 = swift_allocObject(&unk_1007ADAA0, 32, 7);
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  swift_bridgeObjectRetain(v7);
  swift_retain(a2);
  swift_retain(a4);
  v9 = sub_100047110(&qword_100821320);
  v10 = sub_100047110(&qword_10083D968);
  v11 = sub_100028384(&qword_10083D978, &qword_100821320, (uint64_t)&protocol conformance descriptor for [A]);
  v12 = sub_10011D8E8();
  v13 = sub_100028384(&qword_10083D960, &qword_10083D968, (uint64_t)&protocol conformance descriptor for Button<A>);
  return ForEach<>.init(_:id:content:)(&v15, a2, sub_1005E4470, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1005E4260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EntryLinksListView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E42A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for EntryLinksListView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;

  v8 = v7 + *(int *)(v1 + 24);
  v9 = sub_100047110(&qword_10083D8A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005E4334(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EntryLinksListView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E4378(char *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EntryLinksListView(0) - 8) + 80);
  return sub_1005E39A8(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1005E43C4()
{
  uint64_t v0;

  return sub_1005E4148(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_1005E43D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D958;
  if (!qword_10083D958)
  {
    v1 = sub_100007050(&qword_10083D950);
    sub_100028384(&qword_10083D960, &qword_10083D968, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D958);
  }
  return result;
}

uint64_t sub_1005E444C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005E4470(char *a1)
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  char v4;

  v2 = *(uint64_t (**)(char *))(v1 + 16);
  v4 = *a1;
  return v2(&v4);
}

uint64_t sub_1005E44A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for EntryLinksListView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;
  v7 = v0 + v4;

  v8 = v7 + *(int *)(v1 + 24);
  v9 = sub_100047110(&qword_10083D8A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject(v0, v6, v5);
}

void sub_1005E4538()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for EntryLinksListView(0);
  sub_1003186BC(*(_BYTE *)(v0
                         + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))
                         + *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64)));
}

uint64_t sub_1005E4580()
{
  uint64_t v0;

  return sub_1005E3AC4(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_1005E458C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1005E3B70(*(unsigned __int8 *)(v1 + 16), a1);
}

void sub_1005E4594(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1005E3F2C(*(_BYTE *)(v1 + 16), a1);
}

unint64_t sub_1005E45A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D9A8;
  if (!qword_10083D9A8)
  {
    v1 = sub_100007050(&qword_10083D998);
    sub_1005E460C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D9A8);
  }
  return result;
}

unint64_t sub_1005E460C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D9B0;
  if (!qword_10083D9B0)
  {
    v1 = sub_100007050(&qword_10083D9B8);
    sub_1005E4690();
    sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D9B0);
  }
  return result;
}

unint64_t sub_1005E4690()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D9C0;
  if (!qword_10083D9C0)
  {
    v1 = sub_100007050(&qword_10083D9C8);
    sub_1003D78B8();
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D9C0);
  }
  return result;
}

uint64_t sub_1005E4724@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1005E474C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tint.setter(v1);
}

unint64_t sub_1005E4778()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083D9D0;
  if (!qword_10083D9D0)
  {
    v1 = sub_100007050(&qword_10083D970);
    sub_100028384(&qword_10083D9D8, &qword_10083D948, (uint64_t)&protocol conformance descriptor for List<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083D9D0);
  }
  return result;
}

void sub_1005E47FC(void *a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  void *v5;
  id v11;
  double v12;
  double v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  char *v32;
  id v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t inited;
  NSString *v38;
  id v39;
  unint64_t v40;
  id v41;
  NSString v42;
  Class isa;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  NSString v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  NSString v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  char v80;
  char v81;

  v11 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
  objc_msgSend(a1, "doubleValueForUnit:", v11);
  v13 = v12;

  if (floor(v13) <= 0.0)
  {
    v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v29 = v28;

    v30 = objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
    v31 = sub_100047110((uint64_t *)&unk_10082EDA0);
    v32 = &v81;
LABEL_8:
    inited = swift_initStackObject(v31, v32);
    *(_OWORD *)(inited + 16) = xmmword_100622F90;
    *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
    *(_QWORD *)(inited + 64) = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
    *(_QWORD *)(inited + 40) = v30;
    v38 = NSForegroundColorAttributeName;
    v39 = v30;
    v40 = sub_100038C84(inited);
    v41 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain(v29);
    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
    type metadata accessor for Key(0);
    sub_100135B1C();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v41, "initWithString:attributes:", v42, isa, swift_bridgeObjectRelease(v40).n128_f64[0]);
    swift_bridgeObjectRelease(v29);

    return;
  }
  v14 = objc_msgSend(v5, "fitnessUIFormattingManager");
  v15 = objc_msgSend(v14, "localizedPaceStringWithDistance:overDuration:paceFormat:distanceType:", a1, a2, a3, a5);

  if (!v15)
  {
    v33 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v34 = String._bridgeToObjectiveC()();
    v35 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v29 = v36;

    v30 = objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
    v31 = sub_100047110((uint64_t *)&unk_10082EDA0);
    v32 = &v80;
    goto LABEL_8;
  }
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = objc_msgSend(v5, "fitnessUIFormattingManager");
  v20 = v19;
  if (a2 == 4)
  {
    v21 = objc_msgSend(v19, "localizedSpeedUnitStringForDistanceType:unitStyle:", a3, 1);

    if (v21)
    {
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

LABEL_16:
      sub_1000387C4(v16, v18, v22, v24, a4);
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v18);
      return;
    }
    __break(1u);
  }
  else
  {
    v44 = objc_msgSend(v19, "unitManager");

    if (v44)
    {
      v45 = objc_msgSend(v44, "paceDistanceUnitForDistanceType:", a3);

      v46 = objc_msgSend(v5, "fitnessUIFormattingManager");
      v47 = objc_msgSend(v46, "localizedShortUnitStringForDistanceUnit:", v45);

      if (v47)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
        v49 = v48;

        v50 = FIUINumberOfUnitsInPaceForPaceFormat(a2);
        v51 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        if (v50 < 2)
        {
          v67 = String._bridgeToObjectiveC()();
          v68 = objc_msgSend(v51, "localizedStringForKey:value:table:", v67, 0, 0);

          v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
          v71 = v70;

          v72 = sub_100047110((uint64_t *)&unk_100827460);
          v73 = swift_allocObject(v72, 72, 7);
          *(_OWORD *)(v73 + 16) = xmmword_100622F90;
          v74 = sub_100038CA0();
          v75 = StringProtocol.localizedUppercase.getter(&type metadata for String, v74);
          v77 = v76;
          swift_bridgeObjectRelease(v49);
          *(_QWORD *)(v73 + 56) = &type metadata for String;
          *(_QWORD *)(v73 + 64) = sub_100038CF8();
          *(_QWORD *)(v73 + 32) = v75;
          *(_QWORD *)(v73 + 40) = v77;
          v22 = String.init(format:_:)(v69, v71, v73, v78);
          v24 = v79;
          v66 = v71;
        }
        else
        {
          v52 = String._bridgeToObjectiveC()();
          v53 = objc_msgSend(v51, "localizedStringForKey:value:table:", v52, 0, 0);

          v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
          v56 = v55;

          v57 = sub_100047110((uint64_t *)&unk_100827460);
          v58 = swift_allocObject(v57, 112, 7);
          *(_OWORD *)(v58 + 16) = xmmword_100620BC0;
          v59 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", v50);
          *(_QWORD *)(v58 + 56) = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
          *(_QWORD *)(v58 + 64) = sub_100135BA0();
          *(_QWORD *)(v58 + 32) = v59;
          v60 = sub_100038CA0();
          v61 = StringProtocol.localizedUppercase.getter(&type metadata for String, v60);
          v63 = v62;
          swift_bridgeObjectRelease(v49);
          *(_QWORD *)(v58 + 96) = &type metadata for String;
          *(_QWORD *)(v58 + 104) = sub_100038CF8();
          *(_QWORD *)(v58 + 72) = v61;
          *(_QWORD *)(v58 + 80) = v63;
          v22 = String.init(format:_:)(v54, v56, v58, v64);
          v24 = v65;
          v66 = v56;
        }
        swift_bridgeObjectRelease(v66);
      }
      else
      {
        v22 = 0;
        v24 = 0xE000000000000000;
      }
      goto LABEL_16;
    }
  }
  __break(1u);
}

uint64_t sub_1005E4F0C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
    v8 = a2[2];
    *(_QWORD *)(a1 + 16) = v8;
    v9 = a3[9];
    v10 = (void *)(a1 + v9);
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for AppleExertionScale(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v13 + 48);
    swift_bridgeObjectRetain(v4);
    v15 = swift_bridgeObjectRetain(v8);
    if (v14(v11, 1, v12, v15))
    {
      v16 = sub_100047110(&qword_100822220);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[10];
    v18 = v7 + v17;
    v19 = (uint64_t)a2 + v17;
    v20 = type metadata accessor for AttributedString(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = a3[11];
    v22 = a3[12];
    v23 = (_QWORD *)(v7 + v21);
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = v7 + v22;
    v27 = (uint64_t)a2 + v22;
    *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *(_BYTE *)(v7 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    swift_bridgeObjectRetain(v25);
  }
  return v7;
}

uint64_t sub_1005E5098(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[2]);
  v4 = (char *)a1 + a2[9];
  v5 = type metadata accessor for AppleExertionScale(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  v7 = (char *)a1 + a2[10];
  v8 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[11] + 8));
}

uint64_t sub_1005E5148(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
  v7 = a2[2];
  *(_QWORD *)(a1 + 16) = v7;
  v8 = a3[9];
  v9 = (void *)(a1 + v8);
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for AppleExertionScale(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v12 + 48);
  swift_bridgeObjectRetain(v6);
  v14 = swift_bridgeObjectRetain(v7);
  if (v13(v10, 1, v11, v14))
  {
    v15 = sub_100047110(&qword_100822220);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v16 = a3[10];
  v17 = a1 + v16;
  v18 = (uint64_t)a2 + v16;
  v19 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[11];
  v21 = a3[12];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (uint64_t *)((char *)a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a1 + v21;
  v26 = (uint64_t)a2 + v21;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  swift_bridgeObjectRetain(v24);
  return a1;
}

uint64_t sub_1005E52AC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  CHWorkoutDetailHeartRateTableViewCell *v16;
  SEL v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  SEL v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;

  v6 = *a2;
  v7 = *(CHWorkoutDetailHeartRateTableViewCell **)a1;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7, v8, v9, v10, v11, v12, v13, v14);
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  *(_BYTE *)(a1 + 10) = *((_BYTE *)a2 + 10);
  v15 = a2[2];
  v16 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16, v17, v18, v19, v20, v21, v22, v23);
  v24 = a3[9];
  v25 = (void *)(a1 + v24);
  v26 = (char *)a2 + v24;
  v27 = type metadata accessor for AppleExertionScale(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_6;
  }
  if (v31)
  {
LABEL_6:
    v32 = sub_100047110(&qword_100822220);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_7:
  v33 = a3[10];
  v34 = a1 + v33;
  v35 = (uint64_t)a2 + v33;
  v36 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v34, v35, v36);
  v37 = a3[11];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (uint64_t *)((char *)a2 + v37);
  *v38 = *v39;
  v40 = v39[1];
  v41 = (CHWorkoutDetailHeartRateTableViewCell *)v38[1];
  v38[1] = v40;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRelease(v41, v42, v43, v44, v45, v46, v47, v48);
  v49 = a3[12];
  v50 = a1 + v49;
  v51 = (uint64_t *)((char *)a2 + v49);
  v52 = *v51;
  *(_BYTE *)(v50 + 8) = *((_BYTE *)v51 + 8);
  *(_QWORD *)v50 = v52;
  *(_BYTE *)(a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  return a1;
}

uint64_t sub_1005E5484(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[9];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for AppleExertionScale(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100047110(&qword_100822220);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[10];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1005E55C4(uint64_t a1, uint64_t a2, int *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  CHWorkoutDetailHeartRateTableViewCell *v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  SEL v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  CHWorkoutDetailHeartRateTableViewCell *v38;
  SEL v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v11 = *(CHWorkoutDetailHeartRateTableViewCell **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(v11, (SEL)a2, a3, a4, a5, a6, a7, a8);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  v12 = *(CHWorkoutDetailHeartRateTableViewCell **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v12, v13, v14, v15, v16, v17, v18, v19);
  v20 = a3[9];
  v21 = (void *)(a1 + v20);
  v22 = (void *)(a2 + v20);
  v23 = type metadata accessor for AppleExertionScale(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v21, v22, v23);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    v28 = sub_100047110(&qword_100822220);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_7:
  v29 = a3[10];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  v33 = a3[11];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  v38 = (CHWorkoutDetailHeartRateTableViewCell *)v34[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease(v38, v39, v40, v41, v42, v43, v44, v45);
  v46 = a3[12];
  v47 = a3[13];
  v48 = a1 + v46;
  v49 = a2 + v46;
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
  *(_BYTE *)(a1 + v47) = *(_BYTE *)(a2 + v47);
  return a1;
}

uint64_t sub_1005E5778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005E5784);
}

uint64_t sub_1005E5784(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100047110(&qword_100822220);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      v10 = type metadata accessor for AttributedString(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1005E5828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005E5834);
}

char *sub_1005E5834(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_100047110(&qword_100822220);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      v10 = type metadata accessor for AttributedString(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for EffortGoalAndDate(uint64_t a1)
{
  uint64_t result;

  result = qword_10083DA38;
  if (!qword_10083DA38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EffortGoalAndDate);
  return result;
}

void sub_1005E5910(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[10];

  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[1] = &unk_100649B38;
  v6[2] = &unk_100649B38;
  v6[3] = &unk_100649B38;
  v6[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_1002B9228(319);
  if (v3 <= 0x3F)
  {
    v6[5] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for AttributedString(319);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      v6[7] = &unk_100649B50;
      v6[8] = &unk_100649B68;
      v6[9] = &unk_100649B38;
      swift_initStructMetadata(a1, 256, 10, v6, a1 + 16);
    }
  }
}

uint64_t sub_1005E59C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BDE50, 1);
}

uint64_t sub_1005E59D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  char v90;
  char v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unsigned __int8 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  _OWORD v127[3];
  uint64_t v128;
  char v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;

  v4 = sub_100047110(&qword_10083DA98);
  __chkstk_darwin(v4);
  v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10083DAA0);
  __chkstk_darwin(v7);
  v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v65 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v65 - v14;
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v16);
  *((_QWORD *)v6 + 1) = 0;
  v17 = 1;
  v6[16] = 1;
  v18 = sub_100047110(&qword_10083DAA8);
  v20 = sub_1005E5EAC((uint64_t *)a1, &v6[*(int *)(v18 + 44)], v19);
  v21 = *(unsigned __int8 *)(a1 + 10);
  v78 = a2;
  if (v21 == 1
    && (v20 = type metadata accessor for EffortGoalAndDate(0),
        v22 = a1 + *(int *)(v20 + 48),
        (*(_BYTE *)(v22 + 8) & 1) == 0))
  {
    v17 = 0;
    v23 = *(double *)v22 * 0.45;
  }
  else
  {
    v23 = 0.0;
  }
  v24 = static Alignment.center.getter(v20);
  _FrameLayout.init(width:height:alignment:)(v127, *(_QWORD *)&v23, v17, 0, 1, v24, v25);
  sub_100021CC0((uint64_t)v6, (uint64_t)v12, &qword_10083DA98);
  v26 = &v12[*(int *)(v7 + 36)];
  v27 = v127[1];
  *(_OWORD *)v26 = v127[0];
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v127[2];
  sub_10001BE90((uint64_t)v6, &qword_10083DA98);
  v28 = (uint64_t)v15;
  v29 = sub_1005E661C((uint64_t)v12, (uint64_t)v15);
  v30 = static VerticalAlignment.center.getter(v29);
  sub_1005E635C(a1, (uint64_t)&v104);
  v31 = v113;
  v32 = v117;
  v33 = *(unsigned __int8 *)(a1 + 10);
  v76 = v104;
  v77 = v30;
  v86 = v106;
  v87 = v105;
  v74 = v108;
  v75 = v107;
  v85 = v109;
  v73 = v110;
  v84 = v111;
  v83 = v112;
  v81 = v114;
  v82 = v113;
  v79 = v116;
  v80 = v115;
  if (v33 == 1
    && (v31 = type metadata accessor for EffortGoalAndDate(0),
        v34 = a1 + *(int *)(v31 + 48),
        (*(_BYTE *)(v34 + 8) & 1) == 0))
  {
    v36 = 0;
    v35 = *(double *)v34 * 0.55;
  }
  else
  {
    v35 = 0.0;
    v36 = 1;
  }
  v89 = 1;
  v88 = v32;
  v37 = static Alignment.center.getter(v31);
  _FrameLayout.init(width:height:alignment:)(&v128, *(_QWORD *)&v35, v36, 0, 1, v37, v38);
  v39 = v128;
  v40 = v132;
  v69 = v132;
  v70 = v128;
  v66 = v130;
  v67 = v133;
  v91 = v129;
  v90 = v131;
  v71 = v28;
  v72 = v9;
  sub_100021CC0(v28, (uint64_t)v9, &qword_10083DAA0);
  v41 = v91;
  v42 = v90;
  v43 = v78;
  sub_100021CC0((uint64_t)v9, v78, &qword_10083DAA0);
  v44 = sub_100047110(&qword_10083DAB0);
  v45 = v43 + *(int *)(v44 + 48);
  *(_QWORD *)v45 = 0;
  *(_BYTE *)(v45 + 8) = 0;
  v46 = v43 + *(int *)(v44 + 64);
  v48 = v76;
  v47 = v77;
  v92 = (unint64_t)v77;
  LOBYTE(v93) = 1;
  v49 = v32;
  v68 = v32;
  *((_QWORD *)&v93 + 1) = v76;
  *(_QWORD *)&v94 = v87;
  v51 = v74;
  v50 = v75;
  *((_QWORD *)&v94 + 1) = v86;
  *(_QWORD *)&v95 = v75;
  *((_QWORD *)&v95 + 1) = v74;
  LOBYTE(v96) = v85;
  v52 = v73;
  *((_QWORD *)&v96 + 1) = v73;
  *(_QWORD *)&v97 = v84;
  BYTE8(v97) = v83;
  *(_QWORD *)&v98 = v82;
  *((_QWORD *)&v98 + 1) = v81;
  *(_QWORD *)&v99 = v80;
  *((_QWORD *)&v99 + 1) = v79;
  LOBYTE(v100) = v49;
  *((_QWORD *)&v100 + 1) = v39;
  LOBYTE(v101) = v41;
  v53 = v66;
  *((_QWORD *)&v101 + 1) = v66;
  LOBYTE(v102) = v42;
  *((_QWORD *)&v102 + 1) = v40;
  v54 = v67;
  v103 = v67;
  v55 = v96;
  v56 = v97;
  v57 = v99;
  *(_OWORD *)(v46 + 96) = v98;
  *(_OWORD *)(v46 + 112) = v57;
  *(_OWORD *)(v46 + 64) = v55;
  *(_OWORD *)(v46 + 80) = v56;
  v58 = v100;
  v59 = v101;
  v60 = v102;
  *(_QWORD *)(v46 + 176) = v54;
  *(_OWORD *)(v46 + 144) = v59;
  *(_OWORD *)(v46 + 160) = v60;
  *(_OWORD *)(v46 + 128) = v58;
  v61 = v92;
  v62 = v93;
  v63 = v95;
  *(_OWORD *)(v46 + 32) = v94;
  *(_OWORD *)(v46 + 48) = v63;
  *(_OWORD *)v46 = v61;
  *(_OWORD *)(v46 + 16) = v62;
  sub_1005E6664((uint64_t *)&v92);
  sub_10001BE90(v71, &qword_10083DAA0);
  v104 = v47;
  v105 = 0;
  LOBYTE(v106) = 1;
  v107 = v48;
  v108 = v87;
  v109 = v86;
  v110 = v50;
  v111 = v51;
  v112 = v85;
  v113 = v52;
  v114 = v84;
  LOBYTE(v115) = v83;
  v116 = v82;
  v117 = v81;
  v118 = v80;
  v119 = v79;
  v120 = v68;
  v121 = v70;
  v122 = v41;
  v123 = v53;
  v124 = v42;
  v125 = v69;
  v126 = v54;
  sub_1005E66A4(&v104);
  return sub_10001BE90((uint64_t)v72, &qword_10083DAA0);
}

uint64_t sub_1005E5EAC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t OpaqueTypeConformance2;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  _QWORD v68[2];

  v67 = a2;
  v64 = type metadata accessor for RedactionReasons(0, a3);
  v66 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v65 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v5);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WorkoutItemEffortLabelView(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_1008290A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_1008290A8);
  v60 = *(_QWORD *)(v14 - 8);
  v61 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100047110(&qword_10083DAB8);
  v63 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v62 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v57 = (char *)&v56 - v19;
  __chkstk_darwin(v20);
  v59 = (char *)&v56 - v21;
  v22 = *a1;
  v23 = *((_BYTE *)a1 + 8);
  v24 = a1[2];
  v56 = type metadata accessor for EffortGoalAndDate(0);
  sub_100021CC0((uint64_t)a1 + *(int *)(v56 + 36), (uint64_t)&v10[*(int *)(v8 + 28)], &qword_100822220);
  v25 = *((_BYTE *)a1 + 9);
  *(_QWORD *)v10 = v22;
  v10[8] = v23;
  *((_QWORD *)v10 + 2) = v24;
  v10[*(int *)(v8 + 32)] = v25;
  v26 = v22;
  v27 = v11;
  swift_bridgeObjectRetain(v26);
  *(_QWORD *)&v28 = swift_bridgeObjectRetain(v24).n128_u64[0];
  v29 = static Font.body.getter(v28);
  static Font.Weight.medium.getter(v29);
  v30 = Font.weight(_:)(v29);
  swift_release(v29);
  KeyPath = swift_getKeyPath(&unk_100649BD0);
  sub_1005E66EC((uint64_t)v10, (uint64_t)v13);
  v32 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *v32 = KeyPath;
  v32[1] = v30;
  sub_1005E6730((uint64_t)v10);
  v33 = enum case for Font.Design.rounded(_:);
  v34 = type metadata accessor for Font.Design(0);
  v35 = *(_QWORD *)(v34 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 104))(v7, v33, v34);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v7, 0, 1, v34);
  v36 = sub_10022DB28();
  View.fontDesign(_:)(v7, v11, v36);
  sub_10001BE90((uint64_t)v7, &qword_10081F2F8);
  v37 = sub_10001BE90((uint64_t)v13, &qword_1008290A0);
  if (*((_BYTE *)a1 + *(int *)(v56 + 52)) == 1)
  {
    v38 = v65;
    static RedactionReasons.placeholder.getter(v37);
    v39 = v64;
  }
  else
  {
    v68[0] = &_swiftEmptyArrayStorage;
    v40 = sub_1000083D8(&qword_10083DAC0, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
    v41 = sub_100047110(&qword_10083DAC8);
    v42 = sub_100028384(&qword_10083DAD0, &qword_10083DAC8, (uint64_t)&protocol conformance descriptor for [A]);
    v43 = v64;
    v38 = v65;
    dispatch thunk of SetAlgebra.init<A>(_:)(v68, v41, v42, v64, v40);
    v39 = v43;
  }
  v68[0] = v27;
  v68[1] = v36;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v68, &opaque type descriptor for <<opaque return type of View.fontDesign(_:)>>, 1);
  v45 = v57;
  v46 = v61;
  View.redacted(reason:)(v38, v61, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v16, v46);
  v47 = v63;
  v48 = v58;
  v49 = v59;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v59, v45, v58);
  v50 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v51 = v62;
  v50(v62, v49, v48);
  v52 = v67;
  v50(v67, v51, v48);
  v53 = &v52[*(int *)(sub_100047110(&qword_10083DAD8) + 48)];
  *(_QWORD *)v53 = 0x4020000000000000;
  v53[8] = 0;
  v54 = *(void (**)(char *, uint64_t))(v47 + 8);
  v54(v49, v48);
  return ((uint64_t (*)(char *, uint64_t))v54)(v51, v48);
}

double sub_1005E635C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  CHWorkoutDetailHeartRateTableViewCell *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  char v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;

  v4 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v4);
  v55 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v56 = a1;
  if (*(_BYTE *)(a1 + 10) == 1)
  {
    v15 = type metadata accessor for EffortGoalAndDate(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v56 + *(int *)(v15 + 40), v6);
    v16 = Text.init(_:)(v9);
    v18 = v17;
    v20 = v19;
    v22 = v21 & 1;
    v23 = enum case for Font.Design.rounded(_:);
    v24 = type metadata accessor for Font.Design(0);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = (uint64_t)v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v55, v23, v24);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v24);
    v10 = Text.fontDesign(_:)(v26, v16, v18, v22, v20);
    v11 = v27;
    v13 = v28;
    v12 = v29 & 1;
    sub_1000E4458(v16, v18, v22);
    swift_bridgeObjectRelease(v20, v30, v31, v32, v33, v34, v35, v36);
    sub_10001BE90(v26, &qword_10081F2F8);
    sub_1000E439C(v10, v11, v12);
    swift_bridgeObjectRetain(v13);
    sub_1000E4458(v10, v11, v12);
    swift_bridgeObjectRelease(v13, v37, v38, v39, v40, v41, v42, v43);
    v14 = 0x4020000000000000;
  }
  v44 = (uint64_t *)(v56 + *(int *)(type metadata accessor for EffortGoalAndDate(0) + 44));
  v46 = *v44;
  v45 = v44[1];
  swift_bridgeObjectRetain(v45);
  v48 = static Edge.Set.bottom.getter(v47);
  v49 = EdgeInsets.init(_all:)(-3.0);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v14;
  *(_BYTE *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = v46;
  *(_QWORD *)(a2 + 56) = v45;
  *(_BYTE *)(a2 + 64) = v48;
  *(double *)(a2 + 72) = v49;
  *(_QWORD *)(a2 + 80) = v50;
  *(_QWORD *)(a2 + 88) = v51;
  *(_QWORD *)(a2 + 96) = v52;
  *(_BYTE *)(a2 + 104) = 0;
  sub_100182758(v10, v11, v12, (uint64_t)v13);
  return sub_100182728(v10, v11, v12, (uint64_t)v13);
}

uint64_t sub_1005E65D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_100047110(&qword_10083DA90);
  return sub_1005E59D8(v2, a2 + *(int *)(v4 + 44));
}

uint64_t sub_1005E661C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10083DAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1005E6664(uint64_t *a1)
{
  uint64_t v2;

  v2 = a1[10];
  sub_100182758(a1[3], a1[4], a1[5], a1[6]);
  swift_bridgeObjectRetain(v2);
  return a1;
}

uint64_t *sub_1005E66A4(uint64_t *a1)
{
  CHWorkoutDetailHeartRateTableViewCell *v2;
  SEL v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v2 = (CHWorkoutDetailHeartRateTableViewCell *)a1[10];
  sub_100182728(a1[3], a1[4], a1[5], a1[6]);
  swift_bridgeObjectRelease(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_1005E66EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutItemEffortLabelView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E6730(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutItemEffortLabelView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005E676C()
{
  return sub_100028384(&qword_10083DAE0, &qword_10083DAE8, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

id sub_1005E6798()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  qword_10083DAF0 = (uint64_t)result;
  return result;
}

uint64_t sub_1005E67DC()
{
  uint64_t result;
  double v1;

  result = FIUICurrentLanguageRequiresTallScript();
  v1 = 0.0;
  if ((_DWORD)result)
    v1 = 5.0;
  qword_10083DAF8 = *(_QWORD *)&v1;
  return result;
}

char *sub_1005E6808()
{
  void *v0;
  uint64_t v1;
  id v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  char *v12;
  objc_super v14;

  v1 = OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel;
  v2 = objc_allocWithZone((Class)UILabel);
  v3 = v0;
  v4 = objc_msgSend(v2, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_10081E0E0 != -1)
    swift_once(&qword_10081E0E0, sub_1005E6798);
  v5 = (void *)UILabel.withFont(_:)(qword_10083DAF0);

  objc_msgSend(v5, "setLineBreakMode:", 0);
  objc_msgSend(v5, "setNumberOfLines:", 0);
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v7 = (void *)UILabel.withTextColor(_:)(v6);

  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v1] = v7;
  v8 = OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel;
  v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v8] = v9;
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID] = 0;

  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for MindfulnessSessionDetailItemView();
  v10 = (char *)objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v11 = *(_QWORD *)&v10[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel];
  v12 = v10;
  objc_msgSend(v12, "addSubview:", v11);
  objc_msgSend(v12, "addSubview:", *(_QWORD *)&v12[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel]);
  sub_1005E6A08();

  return v12;
}

void sub_1005E6A08()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  SEL v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  Class isa;

  v1 = v0;
  v35 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = sub_100047110((uint64_t *)&unk_100828340);
  v3 = swift_allocObject(v2, 88, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100626C00;
  v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel];
  v5 = objc_msgSend(v4, "topAnchor");
  v6 = objc_msgSend(v1, "topAnchor");
  if (qword_10081E0E8 != -1)
    swift_once(&qword_10081E0E8, sub_1005E67DC);
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v6, *(double *)&qword_10083DAF8);

  *(_QWORD *)(v3 + 32) = v7;
  v8 = objc_msgSend(v4, "leadingAnchor");
  v9 = objc_msgSend(v1, "leadingAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v3 + 40) = v10;
  v11 = objc_msgSend(v4, "trailingAnchor");
  v12 = objc_msgSend(v1, "trailingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v3 + 48) = v13;
  v14 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel];
  v15 = objc_msgSend(v14, "topAnchor");
  v16 = objc_msgSend(v4, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v3 + 56) = v17;
  v18 = objc_msgSend(v14, "leadingAnchor");
  v19 = objc_msgSend(v1, "leadingAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v3 + 64) = v20;
  v21 = objc_msgSend(v14, "trailingAnchor");
  v22 = objc_msgSend(v1, "trailingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v3 + 72) = v23;
  v24 = objc_msgSend(v14, "bottomAnchor");
  v25 = objc_msgSend(v1, "bottomAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v3 + 80) = v26;
  specialized Array._endMutation()(v27);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v3, v28, v29, v30, v31, v32, v33, v34);
  objc_msgSend(v35, "activateConstraints:", isa);

}

double sub_1005E6DA0(uint64_t a1, char *a2, char a3)
{
  char *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  __n128 v27;
  double result;
  void *v29;
  id v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  NSString v40;
  NSString v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  id v46;
  NSString v47;
  NSString v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t inited;
  void *v55;
  NSString *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  NSString *v60;
  void *v61;
  id v62;
  unint64_t v63;
  id v64;
  NSString v65;
  Class isa;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v73;
  char v74[112];

  v4 = OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID;
  ++*(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID];
  if (a3)
  {
    if (a3 == 1)
    {
      v5 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel];
      v6 = (void *)objc_opt_self(NSBundle);
      v7 = objc_msgSend(v6, "mainBundle");
      v8 = String._bridgeToObjectiveC()();
      v9 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, 0, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v11 = v10;

      v12 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "setText:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

      v13 = objc_msgSend(v6, "mainBundle");
      v14 = String._bridgeToObjectiveC()();
      v15 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, 0, 0);

      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      v19 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel];
      v20 = sub_1004C54C0(v16, v18);
      objc_msgSend(v19, "setAttributedText:", v20, swift_bridgeObjectRelease(v18).n128_f64[0]);

      v21 = *(_QWORD *)&v3[v4];
      v22 = swift_allocObject(&unk_1007ADB80, 24, 7);
      swift_unknownObjectWeakInit(v22 + 16, v3);
      v23 = swift_allocObject(&unk_1007ADBD0, 32, 7);
      *(_QWORD *)(v23 + 16) = v22;
      *(_QWORD *)(v23 + 24) = v21;
      v24 = *(_QWORD *)&a2[OBJC_IVAR___CHMindfulnessSessionFormattingManager_healthStore];
      v25 = (_QWORD *)swift_allocObject(&unk_1007ADBF8, 40, 7);
      v25[2] = a2;
      v25[3] = sub_1005E7BC4;
      v25[4] = v23;
      swift_retain(v22);
      v26 = a2;
      v27 = swift_retain(v23);
      static MindfulnessSessionDataCalculator.endingHeartRate(for:healthStore:completion:)(a1, v24, sub_1004E1368, v25, v27);
      swift_release(v22);
      swift_release(v23);
      *(_QWORD *)&result = swift_release(v25).n128_u64[0];
    }
    else
    {
      v37 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel];
      v38 = (void *)objc_opt_self(NSBundle);
      v39 = objc_msgSend(v38, "mainBundle");
      v40 = String._bridgeToObjectiveC()();
      v41 = String._bridgeToObjectiveC()();
      v42 = objc_msgSend(v39, "localizedStringForKey:value:table:", v40, 0, v41);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v44 = v43;

      v45 = String._bridgeToObjectiveC()();
      objc_msgSend(v37, "setText:", v45, swift_bridgeObjectRelease(v44).n128_f64[0]);

      v46 = objc_msgSend(v38, "mainBundle");
      v47 = String._bridgeToObjectiveC()();
      v48 = String._bridgeToObjectiveC()();
      v49 = objc_msgSend(v46, "localizedStringForKey:value:table:", v47, 0, v48);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
      v51 = v50;

      v52 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel];
      v53 = sub_100047110((uint64_t *)&unk_10082EDA0);
      inited = swift_initStackObject(v53, v74);
      *(_OWORD *)(inited + 16) = xmmword_100620BC0;
      *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
      v55 = (void *)objc_opt_self(UIColor);
      swift_bridgeObjectRetain(v51);
      v56 = NSForegroundColorAttributeName;
      v57 = objc_msgSend(v55, "systemTealColor");
      v58 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
      *(_QWORD *)(inited + 40) = v57;
      *(_QWORD *)(inited + 64) = v58;
      *(_QWORD *)(inited + 72) = NSFontAttributeName;
      v59 = qword_10081DED0;
      v60 = NSFontAttributeName;
      if (v59 != -1)
        swift_once(&qword_10081DED0, sub_1004C28D0);
      v61 = (void *)qword_1008370B0;
      *(_QWORD *)(inited + 104) = sub_100047110((uint64_t *)&unk_10082EE00);
      *(_QWORD *)(inited + 80) = v61;
      v62 = v61;
      v63 = sub_100038C84(inited);
      v64 = objc_allocWithZone((Class)NSAttributedString);
      v65 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v51);
      type metadata accessor for Key(0);
      sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v67 = objc_msgSend(v64, "initWithString:attributes:", v65, isa, swift_bridgeObjectRelease(v63).n128_f64[0]);
      swift_bridgeObjectRelease(v51);

      objc_msgSend(v52, "setAttributedText:", v67);
      objc_msgSend(v3, "setHidden:", 1);
      v68 = *(_QWORD *)&v3[v4];
      v69 = swift_allocObject(&unk_1007ADB80, 24, 7);
      swift_unknownObjectWeakInit(v69 + 16, v3);
      v70 = swift_allocObject(&unk_1007ADBA8, 32, 7);
      *(_QWORD *)(v70 + 16) = v69;
      *(_QWORD *)(v70 + 24) = v68;
      swift_retain(v69);
      sub_1004C34E4(a1, (uint64_t)sub_1005E7BBC, v70);
      swift_release(v69);
      *(_QWORD *)&result = swift_release(v70).n128_u64[0];
    }
  }
  else
  {
    v29 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel];
    v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v34 = v33;

    v35 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setText:", v35, swift_bridgeObjectRelease(v34).n128_f64[0]);

    v36 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel];
    v73 = sub_1004C313C();
    objc_msgSend(v36, "setAttributedText:", v73);

  }
  return result;
}

uint64_t sub_1005E754C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  _QWORD *v26;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_1007ADC20, 40, 7);
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a1;
  aBlock[4] = sub_1005E7BFC;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007ADC38;
  v15 = _Block_copy(aBlock);
  v16 = v26;
  swift_retain(a2);
  v17 = a1;
  swift_release(v16);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_100047110(&qword_100828C80);
  v21 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v6, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v23);
}

void sub_1005E775C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    if (*(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID) == a2)
      objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel), "setAttributedText:", a3);

  }
}

uint64_t sub_1005E77E8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  _QWORD *v26;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_1007ADC70, 40, 7);
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a1;
  aBlock[4] = sub_1005E7C38;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007ADC88;
  v15 = _Block_copy(aBlock);
  v16 = v26;
  v17 = a1;
  swift_retain(a2);
  swift_release(v16);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_100047110(&qword_100828C80);
  v21 = sub_10002FB08();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v6, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v23);
}

void sub_1005E79F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v9[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    if (*(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID) == a2
      && a3 != 0)
    {
      objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel), "setAttributedText:", a3);
      objc_msgSend(v7, "setHidden:", 0);
    }

  }
}

id sub_1005E7AEC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MindfulnessSessionDetailItemView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MindfulnessSessionDetailItemView()
{
  return objc_opt_self(_TtC10FitnessApp32MindfulnessSessionDetailItemView);
}

uint64_t sub_1005E7B74()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005E7B98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005E7BBC(void *a1)
{
  uint64_t v1;

  return sub_1005E77E8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1005E7BC4(void *a1)
{
  uint64_t v1;

  return sub_1005E754C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1005E7BCC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1005E7BFC()
{
  uint64_t *v0;

  sub_1005E775C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1005E7C0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1005E7C38()
{
  uint64_t *v0;

  sub_1005E79F8(v0[2], v0[3], v0[4]);
}

void sub_1005E7C44()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;

  v1 = v0;
  v2 = OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_titleLabel;
  v3 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_10081E0E0 != -1)
    swift_once(&qword_10081E0E0, sub_1005E6798);
  v4 = (void *)UILabel.withFont(_:)(qword_10083DAF0);

  objc_msgSend(v4, "setLineBreakMode:", 0);
  objc_msgSend(v4, "setNumberOfLines:", 0);
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v6 = (void *)UILabel.withTextColor(_:)(v5);

  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v2] = v6;
  v7 = OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_subtitleLabel;
  v8 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v7] = v8;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp32MindfulnessSessionDetailItemView_lastRequestedDetailID] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/MindfulnessSessionDetailItemView.swift", 49, 2, 109, 0);
  __break(1u);
}

uint64_t initializeWithCopy for MirrorPacerMetricPlatterView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  __int128 v6;
  id v7;
  id v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  swift_retain(v3);
  v7 = v4;
  v8 = v5;
  return a1;
}

_QWORD *assignWithCopy for MirrorPacerMetricPlatterView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  v9 = (void *)a2[3];
  v10 = (void *)a1[3];
  a1[3] = v9;
  v11 = v9;

  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

uint64_t assignWithTake for MirrorPacerMetricPlatterView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release(*(_QWORD *)(a1 + 8));
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  return a1;
}

ValueMetadata *type metadata accessor for MirrorPacerMetricPlatterView()
{
  return &type metadata for MirrorPacerMetricPlatterView;
}

uint64_t sub_1005E7F38(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006BDEF8, 1);
}

CHWorkoutDetailHeartRateTableViewCell *sub_1005E7F48(uint64_t a1)
{
  int64_t v1;
  CHWorkoutDetailHeartRateTableViewCell **v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  CHWorkoutDetailHeartRateTableViewCell *v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1001214C4(0, v1, 0);
    v3 = (CHWorkoutDetailHeartRateTableViewCell **)(a1 + 56);
    do
    {
      v4 = (uint64_t)*(v3 - 3);
      v5 = (uint64_t)*(v3 - 2);
      v6 = (uint64_t)*(v3 - 1);
      v7 = *v3;
      swift_bridgeObjectRetain(*v3);
      v8 = static String._fromSubstring(_:)(v4, v5, v6, v7);
      v10 = v9;
      swift_bridgeObjectRelease(v7, v9, v11, v12, v13, v14, v15, v16);
      v18 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
      v17 = *(_QWORD *)_swiftEmptyArrayStorage.cellInset;
      if (v18 >= v17 >> 1)
        sub_1001214C4(v17 > 1, v18 + 1, 1);
      *(_QWORD *)_swiftEmptyArrayStorage.cellPadding = v18 + 1;
      v19 = (char *)&_swiftEmptyArrayStorage + 16 * v18;
      *((_QWORD *)v19 + 4) = v8;
      *((_QWORD *)v19 + 5) = v10;
      v3 += 4;
      --v1;
    }
    while (v1);
  }
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_1005E8044@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  double v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t OpaqueTypeConformance2;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  __int128 v58;

  v55 = a2;
  v54 = sub_100047110(&qword_10083DB48);
  v51 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100047110(&qword_10083DB50);
  __chkstk_darwin(v52);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100047110(&qword_10083DB58);
  __chkstk_darwin(v53);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10083DB60);
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - v13;
  v15 = sub_100047110(&qword_10083DB68);
  __chkstk_darwin(v15);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v50 - v19;
  *(_QWORD *)v20 = static HorizontalAlignment.center.getter(v21, v22, v23, v24, v25);
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 0;
  v26 = sub_100047110(&qword_10083DB70);
  sub_1005E8628(a1, (uint64_t)&v20[*(int *)(v26 + 44)]);
  v58 = *a1;
  v27 = swift_retain(*((_QWORD *)&v58 + 1));
  v28 = COERCE_DOUBLE(MetricsPublisher.distanceGoalFinishTime.getter(v27));
  v30 = v29;
  v31 = sub_10004D634((uint64_t)&v58);
  if ((v30 & 1) != 0)
  {
    *(_QWORD *)v8 = static HorizontalAlignment.center.getter(v31, v32, v33, v34, v35);
    *((_QWORD *)v8 + 1) = 0;
    v8[16] = 1;
    v42 = sub_100047110(&qword_10083DB78);
    sub_1005E92F8((uint64_t)a1, &v8[*(int *)(v42 + 44)]);
    sub_100021CC0((uint64_t)v8, (uint64_t)v6, &qword_10083DB58);
    swift_storeEnumTagMultiPayload(v6, v52, 1);
    v43 = sub_100007050(&qword_10083DB80);
    v44 = sub_1005E995C();
    v56 = v43;
    v57 = v44;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v56, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
    v46 = sub_100028384(&qword_10083DBA0, &qword_10083DB58, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v6, v54, v53, OpaqueTypeConformance2, v46);
    sub_10001BE90((uint64_t)v8, &qword_10083DB58);
  }
  else
  {
    sub_1005E844C(v28);
    v36 = v51;
    v37 = v54;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v6, v4, v54);
    swift_storeEnumTagMultiPayload(v6, v52, 0);
    v38 = sub_100007050(&qword_10083DB80);
    v39 = sub_1005E995C();
    v56 = v38;
    v57 = v39;
    v40 = swift_getOpaqueTypeConformance2(&v56, &opaque type descriptor for <<opaque return type of View.workoutViewStyle(_:)>>, 1);
    v41 = sub_100028384(&qword_10083DBA0, &qword_10083DB58, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v6, v37, v53, v40, v41);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v4, v37);
  }
  sub_100021CC0((uint64_t)v20, (uint64_t)v17, &qword_10083DB68);
  sub_100021CC0((uint64_t)v14, (uint64_t)v11, &qword_10083DB60);
  v47 = v55;
  sub_100021CC0((uint64_t)v17, v55, &qword_10083DB68);
  v48 = sub_100047110(&qword_10083DBA8);
  sub_100021CC0((uint64_t)v11, v47 + *(int *)(v48 + 48), &qword_10083DB60);
  sub_10001BE90((uint64_t)v14, &qword_10083DB60);
  sub_10001BE90((uint64_t)v20, &qword_10083DB68);
  sub_10001BE90((uint64_t)v11, &qword_10083DB60);
  return sub_10001BE90((uint64_t)v17, &qword_10083DB68);
}

uint64_t sub_1005E844C(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v27;

  v3 = type metadata accessor for WorkoutViewStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10083DB98);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10083DB80);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static HorizontalAlignment.leading.getter(v13);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v14 = sub_100047110(&qword_10083DBB0);
  v15 = sub_1005E8CB4(&v9[*(int *)(v14 + 44)], a1);
  v16 = static Edge.Set.bottom.getter(v15);
  v17 = EdgeInsets.init(_all:)(-*(double *)(v1 + 40));
  v19 = v18;
  v21 = v20;
  v23 = v22;
  sub_100021CC0((uint64_t)v9, (uint64_t)v12, &qword_10083DB98);
  v24 = &v12[*(int *)(v10 + 36)];
  *v24 = v16;
  *((double *)v24 + 1) = v17;
  *((_QWORD *)v24 + 2) = v19;
  *((_QWORD *)v24 + 3) = v21;
  *((_QWORD *)v24 + 4) = v23;
  v24[40] = 0;
  sub_10001BE90((uint64_t)v9, &qword_10083DB98);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for WorkoutViewStyle.iOSNotificationMetric(_:), v3);
  v25 = sub_1005E995C();
  View.workoutViewStyle(_:)(v6, v10, v25);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_10001BE90((uint64_t)v12, &qword_10083DB80);
}

uint64_t sub_1005E8628@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  double v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  __n128 v37;
  double v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  double v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t OpaqueTypeConformance2;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, _QWORD, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD v95[2];
  _OWORD v96[2];

  v94 = a2;
  v87 = type metadata accessor for PacerRow(0);
  v89 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_100047110(&qword_10083DC40);
  v93 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v84 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100047110(&qword_10083DC48);
  v90 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v86 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v88 = (char *)&v69 - v8;
  v9 = type metadata accessor for PillConfiguration(0, v7);
  v82 = *(_QWORD *)(v9 - 8);
  v83 = v9;
  __chkstk_darwin(v9);
  v78 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100047110(&qword_10083DC50);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v70 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WorkoutViewStyle(0);
  v79 = *(_QWORD *)(v13 - 8);
  v12 = v79;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for PacerViewConfiguration(0, v14);
  v71 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v69 - v20;
  v77 = sub_100047110(&qword_10083DC58);
  __chkstk_darwin(v77);
  v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100047110(&qword_10083DC60);
  __chkstk_darwin(v76);
  v74 = (uint64_t)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v75 = (uint64_t)&v69 - v26;
  v96[0] = *a1;
  v27 = *((_QWORD *)&v96[0] + 1);
  v28 = swift_retain(*((_QWORD *)&v96[0] + 1));
  v29 = MetricsPublisher.secondsAheadOfPacer.getter(v28);
  sub_10004D634((uint64_t)v96);
  v30 = enum case for WorkoutViewStyle.iOSHeroMetric(_:);
  v31 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
  v32 = v13;
  v31(v16, enum case for WorkoutViewStyle.iOSHeroMetric(_:), v13);
  v73 = v31;
  v33 = PacerViewConfiguration.init(secondsAheadOfPacer:workoutViewStyle:)(v16, v29);
  PacerViewConfiguration.text.getter(v33);
  v34 = *(void (**)(char *, uint64_t))(v71 + 8);
  v35 = v21;
  v36 = v72;
  v34(v35, v72);
  v37 = swift_retain(v27);
  v38 = MetricsPublisher.secondsAheadOfPacer.getter(v37);
  sub_10004D634((uint64_t)v96);
  v31(v16, v30, v13);
  v39 = PacerViewConfiguration.init(secondsAheadOfPacer:workoutViewStyle:)(v16, v38);
  v40 = v78;
  PacerViewConfiguration.pillConfiguration.getter(v39);
  v41 = ((uint64_t (*)(char *, uint64_t))v34)(v18, v36);
  v42 = PillConfiguration.pillColor.getter(v41);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v40, v83);
  v43 = v80;
  v44 = v70;
  v45 = v81;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v23, v70, v81);
  *(_QWORD *)&v23[*(int *)(v77 + 36)] = v42;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  v46 = v74;
  sub_100021CC0((uint64_t)v23, v74, &qword_10083DC58);
  *(_QWORD *)(v46 + *(int *)(v76 + 36)) = 0x3FF0000000000000;
  sub_10001BE90((uint64_t)v23, &qword_10083DC58);
  v47 = v75;
  sub_1005E9A84(v46, v75);
  v48 = swift_retain(v27);
  v49 = MetricsPublisher.secondsAheadOfPacer.getter(v48);
  v50 = sub_10004D634((uint64_t)v96);
  v51 = v85;
  PacerRow.init(secondsAheadOfPacer:)(v50, v49);
  v52 = sub_1000083D8(&qword_10083DC68, (uint64_t (*)(uint64_t))&type metadata accessor for PacerRow, (uint64_t)&protocol conformance descriptor for PacerRow);
  v53 = v84;
  v54 = v87;
  View.metricRow(padding:)(v87, v52, 0.0);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v51, v54);
  v73(v16, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v32);
  v95[0] = v54;
  v95[1] = v52;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v95, &opaque type descriptor for <<opaque return type of View.metricRow(padding:)>>, 1);
  v56 = v86;
  v57 = v91;
  View.workoutViewStyle(_:)(v16, v91, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v16, v32);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v53, v57);
  v58 = v90;
  v59 = v88;
  v60 = v92;
  (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v88, v56, v92);
  sub_100021CC0(v47, v46, &qword_10083DC60);
  v61 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  v62 = v58;
  v63 = v56;
  v61(v56, v59, v60);
  v64 = v94;
  sub_100021CC0(v46, v94, &qword_10083DC60);
  v65 = sub_100047110(&qword_10083DC70);
  v66 = v64 + *(int *)(v65 + 48);
  *(_QWORD *)v66 = 0;
  *(_BYTE *)(v66 + 8) = 1;
  v61((char *)(v64 + *(int *)(v65 + 64)), v63, v60);
  v67 = *(void (**)(char *, uint64_t))(v62 + 8);
  v67(v59, v60);
  sub_10001BE90(v47, &qword_10083DC60);
  v67(v63, v60);
  return sub_10001BE90(v46, &qword_10083DC60);
}

uint64_t sub_1005E8CB4@<X0>(char *a1@<X8>, double a2@<D0>)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  CHWorkoutDetailHeartRateTableViewCell *v30;
  unint64_t v31;
  CHWorkoutDetailHeartRateTableViewCell *v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  CHWorkoutDetailHeartRateTableViewCell *v40;
  SEL v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  void (*v78)(char *, uint64_t);
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  _QWORD v93[3];

  v92 = a1;
  v3 = type metadata accessor for WorkoutViewStyle(0);
  v90 = *(_QWORD *)(v3 - 8);
  v91 = v3;
  v4 = __chkstk_darwin(v3);
  v89 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ElapsedTimeView(0, v4);
  v85 = *(_QWORD *)(v6 - 8);
  v7 = v6;
  __chkstk_darwin(v6);
  v9 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100047110(&qword_10083DBB8);
  __chkstk_darwin(v84);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_10083DBC0);
  v13 = *(_QWORD *)(v12 - 8);
  v87 = v12;
  v88 = v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v86 = (char *)&v80 - v17;
  v18 = type metadata accessor for LocalizationFeature(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100047110(&qword_10083DBC8);
  v82 = *(_QWORD *)(v22 - 8);
  v83 = v22;
  __chkstk_darwin(v22);
  v81 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v80 - v26;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v19 + 104))(v21, enum case for LocalizationFeature.workout(_:), v18, v25);
  v28 = static Localization.workoutUILocalizedString(_:feature:)(0xD000000000000019, 0x80000001006A9D10, v21);
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v93[0] = v28;
  v93[1] = v30;
  v31 = sub_100038CA0();
  v32 = (CHWorkoutDetailHeartRateTableViewCell *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(10, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for String, v31);
  swift_bridgeObjectRelease(v30, v33, v34, v35, v36, v37, v38, v39);
  v40 = sub_1005E7F48((uint64_t)v32);
  swift_bridgeObjectRelease(v32, v41, v42, v43, v44, v45, v46, v47);
  v93[0] = v40;
  KeyPath = swift_getKeyPath(&unk_100649CC8);
  v49 = sub_100047110((uint64_t *)&unk_10081E160);
  v50 = sub_100047110(&qword_10083DBD0);
  v51 = sub_100028384(&qword_100838FF8, (uint64_t *)&unk_10081E160, (uint64_t)&protocol conformance descriptor for [A]);
  v52 = sub_100028384(&qword_10083DBD8, &qword_10083DBD0, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v80 = v27;
  ForEach<>.init(_:id:content:)(v93, KeyPath, sub_1005E9194, 0, v49, v50, v51, &protocol witness table for String, v52);
  ElapsedTimeView.init(elapsedTime:showSubseconds:)(0, a2);
  type metadata accessor for PacerWorkoutConfiguration(0);
  v53 = static PacerWorkoutConfiguration.displayColor.getter();
  v54 = Color.init(_:)(v53);
  v55 = swift_getKeyPath(&unk_100649CE0);
  v56 = v85;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v11, v9, v7);
  v57 = v84;
  v58 = (uint64_t *)&v11[*(int *)(v84 + 36)];
  *v58 = v55;
  v58[1] = v54;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v7);
  v60 = v89;
  v59 = v90;
  v61 = v91;
  (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v89, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v91);
  v62 = sub_1005E99E8();
  v63 = v15;
  View.workoutViewStyle(_:)(v60, v57, v62);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  sub_10001BE90((uint64_t)v11, &qword_10083DBB8);
  v64 = v88;
  v65 = v86;
  v66 = v15;
  v67 = v87;
  (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v86, v66, v87);
  v68 = v81;
  v69 = v82;
  v70 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
  v71 = v27;
  v72 = v83;
  v70(v81, v71, v83);
  v73 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  v74 = v64;
  v73(v63, v65, v67);
  v75 = v92;
  v70(v92, v68, v72);
  v76 = sub_100047110(&qword_10083DBF0);
  v73(&v75[*(int *)(v76 + 48)], v63, v67);
  v77 = *(void (**)(char *, uint64_t))(v74 + 8);
  v77(v65, v67);
  v78 = *(void (**)(char *, uint64_t))(v69 + 8);
  v78(v80, v72);
  v77(v63, v67);
  return ((uint64_t (*)(char *, uint64_t))v78)(v68, v72);
}

uint64_t sub_1005E9194@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = a1[1];
  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v5 = sub_100047110(&qword_10083DBF8);
  return sub_1005E91EC(v3, v4, (char *)(a2 + *(int *)(v5 + 44)));
}

uint64_t sub_1005E91EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v6 = sub_100047110(&qword_100824458);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v17 - v11;
  static WorkoutNotificationFont.multilineTextView(with:lineLimit:)(a1, a2, 1);
  v13 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v13(v9, v12, v6);
  v13(a3, v9, v6);
  v14 = &a3[*(int *)(sub_100047110(&qword_10083DC00) + 48)];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v12, v6);
  return ((uint64_t (*)(char *, uint64_t))v15)(v9, v6);
}

uint64_t sub_1005E92F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  _QWORD *v44;
  char *v45;
  int *v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  uint64_t OpaqueTypeConformance2;
  void (*v54)(char *);
  unsigned int v55;
  uint64_t v56;
  __int128 *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  _QWORD v67[3];

  v63 = a2;
  v64 = type metadata accessor for WorkoutViewStyle(0);
  v3 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10083DC08);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10083DC10);
  v10 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  v60 = v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10083DC18);
  v66 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v62 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v61 = (char *)&v50 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v50 - v18;
  __chkstk_darwin(v20);
  v65 = (char *)&v50 - v21;
  v22 = *(_QWORD *)(a1 + 56);
  v57 = (__int128 *)a1;
  v58 = v22;
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v23);
  *((_QWORD *)v8 + 1) = v22;
  v8[16] = 0;
  v56 = sub_100047110(&qword_10083DC20);
  sub_1005E9738((__int128 *)a1, 8, 1, &v8[*(int *)(v56 + 44)]);
  v24 = sub_100028384(&qword_10083DC28, &qword_10083DC08, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v50 = v6;
  View.metricRow(padding:)(v6, v24, 0.0);
  sub_10001BE90((uint64_t)v8, &qword_10083DC08);
  v55 = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
  v54 = *(void (**)(char *))(v3 + 104);
  v25 = v64;
  v54(v5);
  v67[0] = v6;
  v67[1] = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v67, &opaque type descriptor for <<opaque return type of View.metricRow(padding:)>>, 1);
  v51 = v19;
  v26 = v5;
  v27 = v5;
  v28 = v59;
  View.workoutViewStyle(_:)(v27, v59, OpaqueTypeConformance2);
  v52 = *(void (**)(char *, uint64_t))(v3 + 8);
  v29 = v26;
  v52(v26, v25);
  v30 = *(void (**)(char *, uint64_t))(v60 + 8);
  v31 = v28;
  v30(v12, v28);
  v32 = *(uint64_t (**)(char *, char *, uint64_t))(v66 + 32);
  v33 = v32(v65, v19, v13);
  v34 = static VerticalAlignment.center.getter(v33);
  v35 = v58;
  *(_QWORD *)v8 = v34;
  *((_QWORD *)v8 + 1) = v35;
  v8[16] = 0;
  sub_1005E9738(v57, 4, 5, &v8[*(int *)(v56 + 44)]);
  View.metricRow(padding:)(v50, v24, 0.0);
  sub_10001BE90((uint64_t)v8, &qword_10083DC08);
  v36 = v29;
  v37 = v64;
  ((void (*)(char *, _QWORD, uint64_t))v54)(v29, v55, v64);
  v38 = v61;
  View.workoutViewStyle(_:)(v36, v31, OpaqueTypeConformance2);
  v52(v36, v37);
  v30(v12, v31);
  v39 = v51;
  v32(v51, v38, v13);
  v41 = v65;
  v40 = v66;
  v42 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v42(v38, v65, v13);
  v43 = v62;
  v42(v62, v39, v13);
  v44 = v63;
  *v63 = 0x4000000000000000;
  *((_BYTE *)v44 + 8) = 0;
  v45 = (char *)v44;
  v46 = (int *)sub_100047110(&qword_10083DC30);
  v42(&v45[v46[12]], v38, v13);
  v47 = &v45[v46[16]];
  *(_QWORD *)v47 = 0x4000000000000000;
  v47[8] = 0;
  v42(&v45[v46[20]], v43, v13);
  v48 = *(void (**)(char *, uint64_t))(v40 + 8);
  v48(v39, v13);
  v48(v41, v13);
  v48(v43, v13);
  return ((uint64_t (*)(char *, uint64_t))v48)(v38, v13);
}

uint64_t sub_1005E9738@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  char *v28;
  __int128 v29;

  v27 = a3;
  v28 = a4;
  v6 = sub_100047110(&qword_10081EFB0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v27 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v27 - v17;
  v20 = *((_QWORD *)a1 + 2);
  v19 = *((_QWORD *)a1 + 3);
  v29 = *a1;
  v21 = *((_QWORD *)&v29 + 1);
  swift_retain(*((_QWORD *)&v29 + 1));
  static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)(a2, v20, v19, v21);
  sub_10004D634((uint64_t)&v29);
  swift_retain(v21);
  static MetricViewBuilder.view(metricType:formattingManager:activityType:metricsPublisher:)(v27, v20, v19, v21);
  sub_10004D634((uint64_t)&v29);
  v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v22(v12, v18, v6);
  v22(v9, v15, v6);
  v23 = v28;
  v22(v28, v12, v6);
  v24 = sub_100047110(&qword_10083DC38);
  v22(&v23[*(int *)(v24 + 48)], v9, v6);
  v25 = *(void (**)(char *, uint64_t))(v7 + 8);
  v25(v15, v6);
  v25(v18, v6);
  v25(v9, v6);
  return ((uint64_t (*)(char *, uint64_t))v25)(v12, v6);
}

uint64_t sub_1005E9900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  __int128 *v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v12[4];

  v8 = v6[1];
  v12[0] = *v6;
  v12[1] = v8;
  v9 = v6[3];
  v12[2] = v6[2];
  v12[3] = v9;
  *(_QWORD *)a6 = static HorizontalAlignment.center.getter(a1, a2, a3, a4, a5);
  *(_QWORD *)(a6 + 8) = 0;
  *(_BYTE *)(a6 + 16) = 0;
  v10 = sub_100047110(&qword_10083DB40);
  return sub_1005E8044(v12, a6 + *(int *)(v10 + 44));
}

unint64_t sub_1005E995C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083DB88;
  if (!qword_10083DB88)
  {
    v1 = sub_100007050(&qword_10083DB80);
    sub_100028384(&qword_10083DB90, &qword_10083DB98, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083DB88);
  }
  return result;
}

unint64_t sub_1005E99E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083DBE0;
  if (!qword_10083DBE0)
  {
    v1 = sub_100007050(&qword_10083DBB8);
    sub_1000083D8(&qword_10083DBE8, (uint64_t (*)(uint64_t))&type metadata accessor for ElapsedTimeView, (uint64_t)&protocol conformance descriptor for ElapsedTimeView);
    sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10083DBE0);
  }
  return result;
}

uint64_t sub_1005E9A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10083DC60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E9ACC()
{
  return sub_100028384(&qword_10083DC78, &qword_10083DC80, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

__n128 sub_1005E9AF8@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  _OWORD v11[9];
  _OWORD v12[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100649D40);
  v5 = swift_getKeyPath(&unk_100649D68);
  static Published.subscript.getter(v11, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v12[0];
  *(_OWORD *)(a2 + 128) = v11[8];
  *(_OWORD *)(a2 + 144) = v6;
  *(_OWORD *)(a2 + 153) = *(_OWORD *)((char *)v12 + 9);
  v7 = v11[5];
  *(_OWORD *)(a2 + 64) = v11[4];
  *(_OWORD *)(a2 + 80) = v7;
  v8 = v11[7];
  *(_OWORD *)(a2 + 96) = v11[6];
  *(_OWORD *)(a2 + 112) = v8;
  v9 = v11[1];
  *(_OWORD *)a2 = v11[0];
  *(_OWORD *)(a2 + 16) = v9;
  result = (__n128)v11[3];
  *(_OWORD *)(a2 + 32) = v11[2];
  *(__n128 *)(a2 + 48) = result;
  return result;
}

uint64_t sub_1005E9B9C(_OWORD *a1, void **a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[9];
  _OWORD v18[2];
  _OWORD v19[9];
  _OWORD v20[2];

  v3 = a1[9];
  v19[8] = a1[8];
  v20[0] = v3;
  *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)a1 + 153);
  v4 = a1[5];
  v19[4] = a1[4];
  v19[5] = v4;
  v5 = a1[7];
  v19[6] = a1[6];
  v19[7] = v5;
  v6 = a1[1];
  v19[0] = *a1;
  v19[1] = v6;
  v7 = a1[3];
  v19[2] = a1[2];
  v19[3] = v7;
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_100649D40);
  v10 = swift_getKeyPath(&unk_100649D68);
  v11 = a1[9];
  v17[8] = a1[8];
  v18[0] = v11;
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)a1 + 153);
  v12 = a1[5];
  v17[4] = a1[4];
  v17[5] = v12;
  v13 = a1[7];
  v17[6] = a1[6];
  v17[7] = v13;
  v14 = a1[1];
  v17[0] = *a1;
  v17[1] = v14;
  v15 = a1[3];
  v17[2] = a1[2];
  v17[3] = v15;
  sub_100576EB4((uint64_t *)v19);
  return static Published.subscript.setter(v17, v8, KeyPath, v10);
}

void sub_1005E9C78()
{
  qword_10086B050 = 0x4065E00000000000;
}

id sub_1005E9C8C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "fu_sausageFontOfSize:", 22.0);
  if (result)
    qword_10086B058 = (uint64_t)result;
  else
    __break(1u);
  return result;
}

id sub_1005E9CD0(uint64_t a1, uint64_t a2, CHWorkoutDetailHeartRateTableViewCell *a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  NSString v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  objc_super v34;

  v4 = v3;
  v7 = OBJC_IVAR___CHDivingDetailMapTableViewCell_titleLabel1;
  v8 = objc_allocWithZone((Class)UILabel);
  v9 = v4;
  v10 = objc_msgSend(v8, "init");
  v11 = UIView.forAutoLayout()(v10);

  *(_QWORD *)&v4[v7] = v11;
  v12 = OBJC_IVAR___CHDivingDetailMapTableViewCell_titleLabel2;
  v13 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v14 = UIView.forAutoLayout()(v13);

  *(_QWORD *)&v9[v12] = v14;
  v15 = OBJC_IVAR___CHDivingDetailMapTableViewCell_valueLabel1;
  v16 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v17 = UIView.forAutoLayout()(v16);

  *(_QWORD *)&v9[v15] = v17;
  v18 = OBJC_IVAR___CHDivingDetailMapTableViewCell_valueLabel2;
  v19 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v20 = UIView.forAutoLayout()(v19);

  *(_QWORD *)&v9[v18] = v20;
  v21 = OBJC_IVAR___CHDivingDetailMapTableViewCell_separatorView;
  v22 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v23 = UIView.forAutoLayout()(v22);

  *(_QWORD *)&v9[v21] = v23;
  *(_QWORD *)&v9[OBJC_IVAR___CHDivingDetailMapTableViewCell_dive] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___CHDivingDetailMapTableViewCell_dataCalculator] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___CHDivingDetailMapTableViewCell_depthChartView] = 0;

  if (a3)
  {
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3, v25, v26, v27, v28, v29, v30, v31);
  }
  else
  {
    v24 = 0;
  }
  v34.receiver = v9;
  v34.super_class = (Class)type metadata accessor for DivingDetailMapTableViewCell();
  v32 = objc_msgSendSuper2(&v34, "initWithStyle:reuseIdentifier:", a1, v24);

  return v32;
}

void sub_1005E9ED8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v6 = *(void **)(v3 + OBJC_IVAR___CHDivingDetailMapTableViewCell_dive);
  *(_QWORD *)(v3 + OBJC_IVAR___CHDivingDetailMapTableViewCell_dive) = a1;
  v7 = a1;

  v8 = *(void **)(v3 + OBJC_IVAR___CHDivingDetailMapTableViewCell_dataCalculator);
  *(_QWORD *)(v3 + OBJC_IVAR___CHDivingDetailMapTableViewCell_dataCalculator) = a3;
  v9 = a3;

  switch(a2)
  {
    case 2:
      sub_1005EB68C();
      break;
    case 1:
      sub_1005E9FE0(1);
      break;
    case 0:
      sub_1005E9FE0(0);
      break;
  }
}

void sub_1005E9FE0(char a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  char **v7;
  __int128 *v8;
  void *v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  id v11;
  NSString v12;
  id v13;
  CHWorkoutDetailHeartRateTableViewCell *v14;
  uint64_t KeyPath;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  NSString v22;
  id v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  uint64_t v25;
  uint64_t v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  id v28;
  NSString v29;
  SEL v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  id v42;
  NSString v43;
  id v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  uint64_t v46;
  uint64_t v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  void *v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  CHWorkoutDetailHeartRateTableViewCell *v55;
  NSString v56;
  SEL v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  NSString v65;
  id v66;
  CHWorkoutDetailHeartRateTableViewCell *v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  uint64_t v69;
  uint64_t v70;
  CHWorkoutDetailHeartRateTableViewCell *v71;
  id v72;
  NSString v73;
  SEL v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  void *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  CHWorkoutDetailHeartRateTableViewCell *v87;
  NSString v88;
  SEL v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  NSString v101;
  SEL v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  void *v109;
  uint64_t v110;
  void *v111;
  CHWorkoutDetailHeartRateTableViewCell *v112;
  CHWorkoutDetailHeartRateTableViewCell *v113;
  id v114;
  NSString v115;
  SEL v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  uint64_t v127;
  id v128;
  NSString v129;
  SEL v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  void *v137;
  CHWorkoutDetailHeartRateTableViewCell *v138;
  CHWorkoutDetailHeartRateTableViewCell *v139;
  id v140;
  NSString v141;
  SEL v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  uint64_t v153;
  id v154;
  NSString v155;
  SEL v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  uint64_t v166;
  id v167;
  id v168;
  id v169;
  uint64_t v170;
  id v171;
  id v172;
  id v173;
  void *v174;
  uint64_t v175;
  id v176;
  id v177;
  uint64_t v178;
  id v179;
  void *v180;
  id v181;
  id v182;
  double v183;
  id v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  CHWorkoutDetailHeartRateTableViewCell *v188;
  Class isa;
  SEL v190;
  id v191;
  id v192;
  id v193;
  id v194;
  id v195;
  id v196;
  void *v197;
  id v198;
  id v199;
  id v200;
  void *v201;
  id v202;
  id v203;
  id v204;
  double v205;
  double v206;
  id v207;
  id v208;
  uint64_t v209;
  CHWorkoutDetailHeartRateTableViewCell *v210;
  Class v211;
  SEL v212;
  id v213;
  id v214;
  id v215;
  id v216;
  id v217;
  id v218;
  void *v219;
  void *v220;
  id v221;
  id v222;
  id v223;
  void *v224;
  void *v225;
  id v226;
  id v227;
  id v228;
  id v229;
  uint64_t v230;
  CHWorkoutDetailHeartRateTableViewCell *v231;
  Class v232;
  SEL v233;
  id v234;
  id v235;
  id v236;
  id v237;
  id v238;
  id v239;
  void *v240;
  void *v241;
  id v242;
  id v243;
  id v244;
  void *v245;
  void *v246;
  id v247;
  id v248;
  id v249;
  id v250;
  uint64_t v251;
  CHWorkoutDetailHeartRateTableViewCell *v252;
  id v253;
  id v254;
  Class v255;
  SEL v256;
  id v257;
  id v258;
  id v259;
  id v260;
  id v261;
  id v262;
  id v263;
  id v264;
  CHWorkoutDetailHeartRateTableViewCell *v265;
  id v266;
  Class v267;
  SEL v268;
  id v269;
  id v270;
  id v271;
  id v272;
  id v273;
  id v274;
  id v275;
  id v276;
  id v277;
  double v278;
  id v279;
  uint64_t v280;
  CHWorkoutDetailHeartRateTableViewCell *v281;
  id v282;
  Class v283;
  SEL v284;
  id v285;
  id v286;
  id v287;
  id v288;
  id v289;
  id v290;
  id v291;
  uint64_t v292;
  id v293;
  CHWorkoutDetailHeartRateTableViewCell *v294;
  id v295;
  uint64_t v296;
  id v297;
  CHWorkoutDetailHeartRateTableViewCell *v298;
  id v299;
  CHWorkoutDetailHeartRateTableViewCell *v300;
  __int128 *v301;
  uint64_t v302;
  id v303;
  CHWorkoutDetailHeartRateTableViewCell *v304;
  uint64_t v305;
  void *v306;
  void *v307;
  void *v308;
  _OWORD v309[5];
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  _OWORD v314[2];
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  _OWORD v324[2];
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  _OWORD v334[2];
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  _OWORD v344[2];
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  _OWORD v354[3];

  v2 = v1;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "systemBackgroundColor");
  objc_msgSend(v1, "setBackgroundColor:", v5);

  v6 = *(CHWorkoutDetailHeartRateTableViewCell **)&v1[OBJC_IVAR___CHDivingDetailMapTableViewCell_dataCalculator];
  if (v6)
  {
    v7 = (char **)&v345;
    v8 = &v335;
    v308 = v4;
    if (!a1)
      goto LABEL_9;
    if (a1 != 1)
      return;
    v9 = (void *)objc_opt_self(NSBundle);
    v300 = v6;
    v10 = v6;
    v11 = objc_msgSend(v9, "mainBundle");
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v304 = v14;

    KeyPath = swift_getKeyPath(&unk_100649D40);
    v16 = swift_getKeyPath(&unk_100649D68);
    static Published.subscript.getter(&v335, v10, KeyPath, v16);
    swift_release(KeyPath);
    swift_release(v16);
    v353 = v343;
    v354[0] = v344[0];
    *(_OWORD *)((char *)v354 + 9) = *(_OWORD *)((char *)v344 + 9);
    v349 = v339;
    v350 = v340;
    v351 = v341;
    v352 = v342;
    v345 = v335;
    v346 = v336;
    v347 = v337;
    v348 = v338;
    v298 = (CHWorkoutDetailHeartRateTableViewCell *)v341;
    swift_bridgeObjectRetain(v341);
    sub_1001B5240((uint64_t *)&v345);
    v17 = (void *)objc_opt_self(ARUIMetricColors);
    v18 = objc_msgSend(v17, "elapsedTimeColors");
    if (v18)
    {
      v19 = v18;
      v7 = &selRef_headerStringForSection_isRecentAndRelevant_;
      v20 = objc_msgSend(v18, "nonGradientTextColor");

      v307 = v20;
      if (v20)
      {
        v21 = objc_msgSend(v9, "mainBundle");
        v22 = String._bridgeToObjectiveC()();
        v23 = objc_msgSend(v21, "localizedStringForKey:value:table:", v22, 0, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
        v6 = v24;

        v25 = swift_getKeyPath(&unk_100649D40);
        v26 = swift_getKeyPath(&unk_100649D68);
        static Published.subscript.getter(&v325, v10, v25, v26);
        swift_release(v25);
        swift_release(v26);
        v343 = v333;
        v344[0] = v334[0];
        *(_OWORD *)((char *)v344 + 9) = *(_OWORD *)((char *)v334 + 9);
        v339 = v329;
        v340 = v330;
        v341 = v331;
        v342 = v332;
        v335 = v325;
        v336 = v326;
        v337 = v327;
        v338 = v328;
        v27 = (CHWorkoutDetailHeartRateTableViewCell *)v332;
        swift_bridgeObjectRetain(v332);
        sub_1001B5240((uint64_t *)&v335);
        v28 = objc_allocWithZone((Class)NSMutableAttributedString);
        v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v27, v30, v31, v32, v33, v34, v35, v36);
        v8 = (__int128 *)objc_msgSend(v28, "initWithString:", v29);

        v37 = objc_msgSend(v17, "paceColors");
        if (v37)
        {
          v38 = v37;
          v294 = v6;
          v39 = objc_msgSend(v37, "nonGradientTextColor");

          v306 = v39;
          if (v39)
          {
LABEL_16:
            v301 = v8;
            v99 = OBJC_IVAR___CHDivingDetailMapTableViewCell_titleLabel1;
            v100 = *(id *)&v2[OBJC_IVAR___CHDivingDetailMapTableViewCell_titleLabel1];
            v101 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v304, v102, v103, v104, v105, v106, v107, v108);
            objc_msgSend(v100, "setText:", v101);

            v109 = *(void **)&v2[v99];
            v110 = v99;
            v111 = (void *)objc_opt_self(UIFont);
            static String._unconditionallyBridgeFromObjectiveC(_:)(UIFontTextStyleBody);
            v113 = v112;
            v114 = v109;
            v115 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v113, v116, v117, v118, v119, v120, v121, v122);
            v123 = objc_msgSend(v111, "defaultFontForTextStyle:", v115);

            objc_msgSend(v114, "setFont:", v123);
            v302 = v110;
            v124 = *(id *)&v2[v110];
            v125 = objc_msgSend(v308, "labelColor");
            objc_msgSend(v124, "setTextColor:", v125);

            v126 = objc_msgSend(v2, "contentView");
            objc_msgSend(v126, "addSubview:", *(_QWORD *)&v2[v110]);

            v127 = OBJC_IVAR___CHDivingDetailMapTableViewCell_titleLabel2;
            v128 = *(id *)&v2[OBJC_IVAR___CHDivingDetailMapTableViewCell_titleLabel2];
            v129 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v294, v130, v131, v132, v133, v134, v135, v136);
            objc_msgSend(v128, "setText:", v129);

            v137 = *(void **)&v2[v127];
            static String._unconditionallyBridgeFromObjectiveC(_:)(UIFontTextStyleBody);
            v139 = v138;
            v140 = v137;
            v141 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v139, v142, v143, v144, v145, v146, v147, v148);
            v149 = objc_msgSend(v111, "defaultFontForTextStyle:", v141);

            objc_msgSend(v140, "setFont:", v149);
            v305 = v127;
            v150 = *(id *)&v2[v127];
            v151 = objc_msgSend(v308, "labelColor");
            objc_msgSend(v150, "setTextColor:", v151);

            v152 = objc_msgSend(v2, "contentView");
            objc_msgSend(v152, "addSubview:", *(_QWORD *)&v2[v127]);

            v153 = OBJC_IVAR___CHDivingDetailMapTableViewCell_valueLabel1;
            v154 = *(id *)&v2[OBJC_IVAR___CHDivingDetailMapTableViewCell_valueLabel1];
            v155 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v298, v156, v157, v158, v159, v160, v161, v162);
            objc_msgSend(v154, "setText:", v155);

            objc_msgSend(*(id *)&v2[v153], "setTextColor:", v307);
            v163 = *(id *)&v2[v153];
            v164 = objc_msgSend(v111, "fu_sausageFontOfSize:", 30.0);
            objc_msgSend(v163, "setFont:", v164);

            objc_msgSend(*(id *)&v2[v153], "setNumberOfLines:", 0);
            v165 = objc_msgSend(v2, "contentView");
            objc_msgSend(v165, "addSubview:", *(_QWORD *)&v2[v153]);

            v166 = OBJC_IVAR___CHDivingDetailMapTableViewCell_valueLabel2;
            objc_msgSend(*(id *)&v2[OBJC_IVAR___CHDivingDetailMapTableViewCell_valueLabel2], "setAttributedText:", v301);
            objc_msgSend(*(id *)&v2[v166], "setTextColor:", v306);
            v167 = *(id *)&v2[v166];
            v168 = objc_msgSend(v111, "fu_sausageFontOfSize:", 30.0);
            objc_msgSend(v167, "setFont:", v168);

            v292 = v166;
            objc_msgSend(*(id *)&v2[v166], "setNumberOfLines:", 0);
            v169 = objc_msgSend(v2, "contentView");
            objc_msgSend(v169, "addSubview:", *(_QWORD *)&v2[v166]);

            v170 = OBJC_IVAR___CHDivingDetailMapTableViewCell_separatorView;
            v296 = OBJC_IVAR___CHDivingDetailMapTableViewCell_separatorView;
            v171 = *(id *)&v2[OBJC_IVAR___CHDivingDetailMapTableViewCell_separatorView];
            v172 = objc_msgSend(v308, "separatorColor");
            objc_msgSend(v171, "setBackgroundColor:", v172);

            v173 = objc_msgSend(v2, "contentView");
            objc_msgSend(v173, "addSubview:", *(_QWORD *)&v2[v170]);

            sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
            v174 = *(void **)&v2[v110];
            v175 = sub_10001E724(0, &qword_1008261E0, UILabel_ptr);
            *((_QWORD *)&v346 + 1) = v175;
            *(_QWORD *)&v345 = v174;
            v176 = v174;
            v177 = objc_msgSend(v2, "contentView");
            v178 = sub_10001E724(0, (unint64_t *)&qword_100821308, UIView_ptr);
            *((_QWORD *)&v336 + 1) = v178;
            *(_QWORD *)&v335 = v177;
            v179 = sub_1002F2E74(&v345, 11, 0, &v335, 3, 1.0, 28.0);
            v180 = *(void **)&v2[v110];
            *((_QWORD *)&v346 + 1) = v175;
            *(_QWORD *)&v345 = v180;
            v181 = v180;
            v182 = objc_msgSend(v2, "contentView");
            *((_QWORD *)&v336 + 1) = v178;
            *(_QWORD *)&v335 = v182;
            v183 = sub_10005F11C();
            v184 = sub_1002F2E74(&v345, 5, 0, &v335, 5, 1.0, v183);
            v185 = objc_msgSend(v2, "contentView");
            v186 = sub_100047110((uint64_t *)&unk_100828340);
            v187 = swift_allocObject(v186, 48, 7);
            *(_OWORD *)(v187 + 16) = xmmword_100629280;
            *(_QWORD *)(v187 + 32) = v179;
            *(_QWORD *)(v187 + 40) = v184;
            *(_QWORD *)&v345 = v187;
            specialized Array._endMutation()(v187);
            v188 = (CHWorkoutDetailHeartRateTableViewCell *)v345;
            v299 = v179;
            v297 = v184;
            isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v188, v190, v191, v192, v193, v194, v195, v196);
            objc_msgSend(v185, "addConstraints:", isa);

            v197 = *(void **)&v2[v305];
            *((_QWORD *)&v346 + 1) = v175;
            *(_QWORD *)&v345 = v197;
            v198 = v197;
            v199 = objc_msgSend(v2, "contentView");
            *((_QWORD *)&v336 + 1) = v178;
            *(_QWORD *)&v335 = v199;
            v200 = sub_1002F2E74(&v345, 11, 0, &v335, 3, 1.0, 28.0);
            v201 = *(void **)&v2[v305];
            *((_QWORD *)&v346 + 1) = v175;
            *(_QWORD *)&v345 = v201;
            v202 = v201;
            v203 = objc_msgSend(v2, "contentView");
            *((_QWORD *)&v336 + 1) = v178;
            *(_QWORD *)&v335 = v203;
            v204 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
            objc_msgSend(v204, "bounds");
            v206 = v205;

            v207 = sub_1002F2E74(&v345, 5, 0, &v335, 5, 1.0, v206 * 0.5);
            v208 = objc_msgSend(v2, "contentView");
            v209 = swift_allocObject(v186, 48, 7);
            *(_OWORD *)(v209 + 16) = xmmword_100629280;
            *(_QWORD *)(v209 + 32) = v200;
            *(_QWORD *)(v209 + 40) = v207;
            *(_QWORD *)&v345 = v209;
            specialized Array._endMutation()(v209);
            v210 = (CHWorkoutDetailHeartRateTableViewCell *)v345;
            v295 = v200;
            v293 = v207;
            v211 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v210, v212, v213, v214, v215, v216, v217, v218);
            objc_msgSend(v208, "addConstraints:", v211);

            v219 = *(void **)&v2[v153];
            *((_QWORD *)&v346 + 1) = v175;
            *(_QWORD *)&v345 = v219;
            v220 = *(void **)&v2[v302];
            *((_QWORD *)&v336 + 1) = v175;
            *(_QWORD *)&v335 = v220;
            v221 = v219;
            v222 = v220;
            v223 = sub_1002F2E74(&v345, 11, 0, &v335, 11, 1.0, 30.0);
            v224 = *(void **)&v2[v153];
            *((_QWORD *)&v346 + 1) = v175;
            *(_QWORD *)&v345 = v224;
            v225 = *(void **)&v2[v302];
            *((_QWORD *)&v336 + 1) = v175;
            *(_QWORD *)&v335 = v225;
            v226 = v224;
            v227 = v225;
            v228 = sub_1002F2E74(&v345, 5, 0, &v335, 5, 1.0, 0.0);
            v229 = objc_msgSend(v2, "contentView");
            v230 = swift_allocObject(v186, 48, 7);
            *(_OWORD *)(v230 + 16) = xmmword_100629280;
            *(_QWORD *)(v230 + 32) = v223;
            *(_QWORD *)(v230 + 40) = v228;
            *(_QWORD *)&v345 = v230;
            specialized Array._endMutation()(v230);
            v231 = (CHWorkoutDetailHeartRateTableViewCell *)v345;
            v303 = v223;
            v291 = v228;
            v232 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v231, v233, v234, v235, v236, v237, v238, v239);
            objc_msgSend(v229, "addConstraints:", v232);

            v240 = *(void **)&v2[v292];
            *((_QWORD *)&v346 + 1) = v175;
            *(_QWORD *)&v345 = v240;
            v241 = *(void **)&v2[v305];
            *((_QWORD *)&v336 + 1) = v175;
            *(_QWORD *)&v335 = v241;
            v242 = v240;
            v243 = v241;
            v244 = sub_1002F2E74(&v345, 11, 0, &v335, 11, 1.0, 30.0);
            v245 = *(void **)&v2[v292];
            *((_QWORD *)&v346 + 1) = v175;
            *(_QWORD *)&v345 = v245;
            v246 = *(void **)&v2[v305];
            *((_QWORD *)&v336 + 1) = v175;
            *(_QWORD *)&v335 = v246;
            v247 = v245;
            v248 = v246;
            v249 = sub_1002F2E74(&v345, 5, 0, &v335, 5, 1.0, 0.0);
            v250 = objc_msgSend(v2, "contentView");
            v251 = swift_allocObject(v186, 48, 7);
            *(_OWORD *)(v251 + 16) = xmmword_100629280;
            *(_QWORD *)(v251 + 32) = v244;
            *(_QWORD *)(v251 + 40) = v249;
            *(_QWORD *)&v345 = v251;
            specialized Array._endMutation()(v251);
            v252 = (CHWorkoutDetailHeartRateTableViewCell *)v345;
            v253 = v244;
            v254 = v249;
            v255 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v252, v256, v257, v258, v259, v260, v261, v262);
            objc_msgSend(v250, "addConstraints:", v255);

            v263 = *(id *)&v2[v296];
            v264 = objc_msgSend(v2, "contentView");
            v265 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1005EB498(v263, v264);

            v266 = objc_msgSend(v2, "contentView");
            v267 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v265, v268, v269, v270, v271, v272, v273, v274);
            objc_msgSend(v266, "addConstraints:", v267);

            v275 = objc_msgSend(v2, "contentView");
            v276 = objc_msgSend(v275, "heightAnchor");

            v277 = objc_msgSend(v276, "constraintEqualToConstant:", 74.0);
            LODWORD(v278) = 1148829696;
            objc_msgSend(v277, "setPriority:", v278);
            objc_msgSend(v277, "setActive:", 1);
            v279 = objc_msgSend(v2, "contentView");
            v280 = swift_allocObject(v186, 40, 7);
            *(_OWORD *)(v280 + 16) = xmmword_100623630;
            *(_QWORD *)(v280 + 32) = v277;
            *(_QWORD *)&v345 = v280;
            specialized Array._endMutation()(v280);
            v281 = (CHWorkoutDetailHeartRateTableViewCell *)v345;
            v282 = v277;
            v283 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v281, v284, v285, v286, v287, v288, v289, v290);
            objc_msgSend(v279, "addConstraints:", v283);

            return;
          }
          __break(1u);
LABEL_9:
          v40 = (void *)objc_opt_self(NSBundle);
          v41 = v6;
          v42 = objc_msgSend(v40, "mainBundle");
          v43 = String._bridgeToObjectiveC()();
          v44 = objc_msgSend(v42, "localizedStringForKey:value:table:", v43, 0, 0);

          static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
          v304 = v45;

          v46 = swift_getKeyPath(&unk_100649D40);
          v47 = swift_getKeyPath(&unk_100649D68);
          static Published.subscript.getter(&v335, v41, v46, v47);
          swift_release(v46);
          swift_release(v47);
          v353 = v343;
          v354[0] = v344[0];
          *(_OWORD *)((char *)v7 + 153) = *(__int128 *)((char *)v8 + 153);
          v349 = v339;
          v350 = v340;
          v351 = v341;
          v352 = v342;
          v345 = v335;
          v346 = v336;
          v347 = v337;
          v348 = v338;
          v48 = (CHWorkoutDetailHeartRateTableViewCell *)v337;
          swift_bridgeObjectRetain(v337);
          sub_1001B5240((uint64_t *)&v345);
          v49 = (void *)objc_opt_self(ARUIMetricColors);
          v50 = objc_msgSend(v49, "diveColors");
          if (v50)
          {
            v51 = v50;
            v298 = v48;
            v300 = v6;
            v52 = objc_msgSend(v50, "nonGradientTextColor");

            v307 = v52;
            if (v52)
            {
              v53 = swift_getKeyPath(&unk_100649D40);
              v54 = swift_getKeyPath(&unk_100649D68);
              static Published.subscript.getter(&v335, v41, v53, v54);
              swift_release(v53);
              swift_release(v54);
              v333 = v343;
              v334[0] = v344[0];
              *(_OWORD *)((char *)v334 + 9) = *(_OWORD *)((char *)v344 + 9);
              v329 = v339;
              v330 = v340;
              v331 = v341;
              v332 = v342;
              v325 = v335;
              v326 = v336;
              v327 = v337;
              v328 = v338;
              v55 = (CHWorkoutDetailHeartRateTableViewCell *)v339;
              swift_bridgeObjectRetain(v339);
              sub_1001B5240((uint64_t *)&v325);
              v56 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v55, v57, v58, v59, v60, v61, v62, v63);
              v64 = objc_msgSend(v40, "mainBundle");
              v65 = String._bridgeToObjectiveC()();
              v66 = objc_msgSend(v64, "localizedStringForKey:value:table:", v65, 0, 0);

              static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
              v68 = v67;

              v69 = swift_getKeyPath(&unk_100649D40);
              v70 = swift_getKeyPath(&unk_100649D68);
              static Published.subscript.getter(&v315, v41, v69, v70);
              swift_release(v69);
              swift_release(v70);
              v343 = v323;
              v344[0] = v324[0];
              *(_OWORD *)((char *)v344 + 9) = *(_OWORD *)((char *)v324 + 9);
              v339 = v319;
              v340 = v320;
              v341 = v321;
              v342 = v322;
              v335 = v315;
              v336 = v316;
              v337 = v317;
              v338 = v318;
              v71 = (CHWorkoutDetailHeartRateTableViewCell *)v319;
              swift_bridgeObjectRetain(v319);
              sub_1001B5240((uint64_t *)&v335);
              v72 = objc_allocWithZone((Class)NSMutableAttributedString);
              v73 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v71, v74, v75, v76, v77, v78, v79, v80);
              v81 = objc_msgSend(v72, "initWithString:", v73);

              v8 = (__int128 *)v81;
              v82 = objc_msgSend(v49, "diveColors");
              if (v82)
              {
                v83 = v82;
                v84 = objc_msgSend(v82, "nonGradientTextColor");

                if (v84)
                {
                  v294 = v68;
                  v306 = v84;
                  v85 = swift_getKeyPath(&unk_100649D40);
                  v86 = swift_getKeyPath(&unk_100649D68);
                  static Published.subscript.getter(v309, v41, v85, v86);
                  swift_release(v85);
                  swift_release(v86);
                  v323 = v313;
                  v324[0] = v314[0];
                  *(_OWORD *)((char *)v324 + 9) = *(_OWORD *)((char *)v314 + 9);
                  v319 = v309[4];
                  v320 = v310;
                  v321 = v311;
                  v322 = v312;
                  v315 = v309[0];
                  v316 = v309[1];
                  v317 = v309[2];
                  v318 = v309[3];
                  v87 = (CHWorkoutDetailHeartRateTableViewCell *)v310;
                  swift_bridgeObjectRetain(v310);
                  sub_1001B5240((uint64_t *)&v315);
                  v88 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease(v87, v89, v90, v91, v92, v93, v94, v95);
                  v96 = objc_msgSend(v56, "rangeOfString:", v88);
                  v98 = v97;

                  if (qword_10081E0F8 != -1)
                    swift_once(&qword_10081E0F8, sub_1005E9C8C);
                  objc_msgSend(v8, "addAttribute:value:range:", NSFontAttributeName, qword_10086B058, v96, v98);

                  goto LABEL_16;
                }
LABEL_24:
                __break(1u);
                return;
              }
LABEL_23:
              __break(1u);
              goto LABEL_24;
            }
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
}

uint64_t sub_1005EB498(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  id v6;
  double v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  double v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  double v19;
  double v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  _QWORD v27[3];
  uint64_t v28;

  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  v4 = sub_10001E724(0, (unint64_t *)&qword_100821308, UIView_ptr);
  v28 = v4;
  *((_QWORD *)&v26 + 1) = v4;
  v27[0] = a1;
  *(_QWORD *)&v25 = a2;
  v5 = a1;
  v6 = a2;
  v7 = sub_10005F11C();
  v8 = sub_1002F2E74(v27, 5, 0, &v25, 5, 1.0, v7);
  v28 = v4;
  *((_QWORD *)&v26 + 1) = v4;
  v27[0] = v5;
  *(_QWORD *)&v25 = v6;
  v9 = v5;
  v10 = v6;
  v11 = sub_1002F2E74(v27, 4, 0, &v25, 4, 1.0, 0.0);
  v28 = v4;
  *((_QWORD *)&v26 + 1) = v4;
  v27[0] = v9;
  *(_QWORD *)&v25 = v10;
  v12 = v9;
  v13 = v10;
  v14 = sub_10005F11C();
  v15 = sub_1002F2E74(v27, 6, 0, &v25, 6, 1.0, -v14);
  v28 = v4;
  v27[0] = v12;
  v25 = 0u;
  v26 = 0u;
  v16 = (void *)objc_opt_self(UIScreen);
  v17 = v12;
  v18 = objc_msgSend(v16, "mainScreen");
  objc_msgSend(v18, "scale");
  v20 = v19;

  v21 = sub_1002F2E74(v27, 8, 0, &v25, 8, 1.0, 1.0 / v20);
  v22 = sub_100047110((uint64_t *)&unk_100828340);
  v23 = swift_allocObject(v22, 64, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100623750;
  *(_QWORD *)(v23 + 32) = v8;
  *(_QWORD *)(v23 + 40) = v11;
  *(_QWORD *)(v23 + 48) = v15;
  *(_QWORD *)(v23 + 56) = v21;
  v27[0] = v23;
  specialized Array._endMutation()(v23);
  return v27[0];
}

void sub_1005EB68C()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  _QWORD v28[2];
  __int16 v29;

  v1 = *(void **)&v0[OBJC_IVAR___CHDivingDetailMapTableViewCell_dataCalculator];
  if (v1)
  {
    v2 = v0;
    v3 = OBJC_IVAR___CHDivingDetailMapTableViewCell_depthChartView;
    if (!*(_QWORD *)&v0[OBJC_IVAR___CHDivingDetailMapTableViewCell_depthChartView])
    {
      v4 = swift_allocObject(&unk_1007ADD98, 24, 7);
      *(_QWORD *)(v4 + 16) = v1;
      v28[0] = sub_10012F3AC;
      v28[1] = v4;
      v29 = 256;
      v5 = objc_allocWithZone((Class)sub_100047110(&qword_10083DCF0));
      v6 = v1;
      v7 = (void *)UIHostingController.init(rootView:)(v28);
      v8 = objc_msgSend(v7, "view");
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

        v10 = objc_msgSend(v7, "view");
        if (v10)
        {
          v11 = v10;
          v12 = objc_msgSend(v2, "contentView");
          objc_msgSend(v12, "frame");
          v14 = v13;
          v16 = v15;
          v18 = v17;
          v20 = v19;

          objc_msgSend(v11, "setFrame:", v14, v16, v18, v20);
          v21 = objc_msgSend(v2, "contentView");
          v22 = objc_msgSend(v7, "view");
          if (v22)
          {
            v23 = v22;
            objc_msgSend(v21, "addSubview:", v22);

            v24 = objc_msgSend(v7, "view");
            v25 = *(void **)&v2[v3];
            *(_QWORD *)&v2[v3] = v24;

            sub_1005EB8B8();
            v26 = objc_msgSend(v7, "view");
            if (v26)
            {
              v27 = v26;
              objc_msgSend(v26, "setNeedsLayout");

              return;
            }
LABEL_12:
            __break(1u);
            return;
          }
LABEL_11:
          __break(1u);
          goto LABEL_12;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_11;
    }
  }
}

void sub_1005EB8B8()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  double v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR___CHDivingDetailMapTableViewCell_depthChartView];
  if (v1)
  {
    v2 = v0;
    v3 = (void *)objc_opt_self(NSLayoutConstraint);
    v4 = sub_100047110((uint64_t *)&unk_100828340);
    v5 = swift_allocObject(v4, 72, 7);
    *(_OWORD *)(v5 + 16) = xmmword_10062ED40;
    v6 = v1;
    v7 = objc_msgSend(v2, "contentView");
    v8 = objc_msgSend(v7, "heightAnchor");

    if (qword_10081E0F0 != -1)
      swift_once(&qword_10081E0F0, sub_1005E9C78);
    v9 = *(double *)&qword_10086B050;
    v10 = sub_10005F11C();
    v11 = objc_msgSend(v8, "constraintEqualToConstant:", v9 + v10 + v10);

    *(_QWORD *)(v5 + 32) = v11;
    v12 = objc_msgSend(v6, "topAnchor");
    v13 = objc_msgSend(v2, "contentView");
    v14 = objc_msgSend(v13, "topAnchor");

    v15 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v14, sub_10005F11C() + -5.0);
    *(_QWORD *)(v5 + 40) = v15;
    v16 = objc_msgSend(v6, "bottomAnchor");
    v17 = objc_msgSend(v2, "contentView");
    v18 = objc_msgSend(v17, "bottomAnchor");

    v19 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v18, sub_10005F11C() + -5.0);
    *(_QWORD *)(v5 + 48) = v19;
    v20 = objc_msgSend(v6, "trailingAnchor");
    v21 = objc_msgSend(v2, "contentView");
    v22 = objc_msgSend(v21, "trailingAnchor");

    v23 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v22, -sub_10005F11C());
    *(_QWORD *)(v5 + 56) = v23;
    v24 = objc_msgSend(v6, "leadingAnchor");
    v25 = objc_msgSend(v2, "contentView");
    v26 = objc_msgSend(v25, "leadingAnchor");

    v27 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v26, sub_10005F11C());
    *(_QWORD *)(v5 + 64) = v27;
    specialized Array._endMutation()(v28);
    sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v5, v29, v30, v31, v32, v33, v34, v35);
    objc_msgSend(v3, "activateConstraints:", isa);

  }
}

id sub_1005EBC84()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DivingDetailMapTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DivingDetailMapTableViewCell()
{
  return objc_opt_self(CHDivingDetailMapTableViewCell);
}

uint64_t sub_1005EBD6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1005EBD98()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v1 = v0;
  v2 = OBJC_IVAR___CHDivingDetailMapTableViewCell_titleLabel1;
  v3 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v4 = UIView.forAutoLayout()();

  *(_QWORD *)&v1[v2] = v4;
  v5 = OBJC_IVAR___CHDivingDetailMapTableViewCell_titleLabel2;
  v6 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = UIView.forAutoLayout()();

  *(_QWORD *)&v1[v5] = v7;
  v8 = OBJC_IVAR___CHDivingDetailMapTableViewCell_valueLabel1;
  v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v10 = UIView.forAutoLayout()();

  *(_QWORD *)&v1[v8] = v10;
  v11 = OBJC_IVAR___CHDivingDetailMapTableViewCell_valueLabel2;
  v12 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v13 = UIView.forAutoLayout()();

  *(_QWORD *)&v1[v11] = v13;
  v14 = OBJC_IVAR___CHDivingDetailMapTableViewCell_separatorView;
  v15 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v16 = UIView.forAutoLayout()();

  *(_QWORD *)&v1[v14] = v16;
  *(_QWORD *)&v1[OBJC_IVAR___CHDivingDetailMapTableViewCell_dive] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___CHDivingDetailMapTableViewCell_dataCalculator] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___CHDivingDetailMapTableViewCell_depthChartView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x800000010068F5D0, "FitnessApp/DivingDetailMapTableViewCell.swift", 45, 2, 226, 0);
  __break(1u);
}

uint64_t sub_1005EBF10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

id sub_1005EBF18()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  qword_10083DCF8 = (uint64_t)result;
  return result;
}

char *sub_1005EBF5C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  double v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  char *v29;
  uint64_t v30;
  void *v31;
  char *v32;
  id v33;
  uint64_t v34;
  void *v35;
  objc_super v37;

  *(_QWORD *)&v4[OBJC_IVAR___CHWorkoutCellImageLabelView_workout] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___CHWorkoutCellImageLabelView_fitnessAppContext] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___CHWorkoutCellImageLabelView_formattingManager] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___CHWorkoutCellImageLabelView_achievementCount] = 0;
  v4[OBJC_IVAR___CHWorkoutCellImageLabelView_diveDisplayStyle] = 1;
  v9 = OBJC_IVAR___CHWorkoutCellImageLabelView_workoutImageView;
  v10 = objc_allocWithZone((Class)UIImageView);
  v11 = v4;
  v12 = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = objc_msgSend(v12, "layer");
  objc_msgSend(v13, "setCornerRadius:", 3.0);

  objc_msgSend(v12, "setClipsToBounds:", 1);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v4[v9] = v12;
  v14 = OBJC_IVAR___CHWorkoutCellImageLabelView_workoutIconView;
  v15 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v14] = v15;
  v16 = OBJC_IVAR___CHWorkoutCellImageLabelView_labelStackView;
  v17 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v17, "setAxis:", 1);
  objc_msgSend(v17, "setDistribution:", 3);
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v16] = v17;
  v18 = OBJC_IVAR___CHWorkoutCellImageLabelView_workoutTitleLabel;
  v19 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  LODWORD(v20) = 1148846080;
  objc_msgSend(v19, "setContentCompressionResistancePriority:forAxis:", 1, v20);
  objc_msgSend(v19, "setLineBreakMode:", 0);
  objc_msgSend(v19, "setNumberOfLines:", 0);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v18] = v19;
  v21 = OBJC_IVAR___CHWorkoutCellImageLabelView_goalLabel;
  v22 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v21] = v22;
  v23 = OBJC_IVAR___CHWorkoutCellImageLabelView_badgeCountLabel;
  v24 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v25 = UIView.forAutoLayout()(v24);

  *(_QWORD *)&v11[v23] = v25;
  v26 = OBJC_IVAR___CHWorkoutCellImageLabelView_separatorView;
  v27 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v28 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
  objc_msgSend(v27, "setBackgroundColor:", v28);

  objc_msgSend(v27, "setHidden:", 1);
  objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v26] = v27;

  v37.receiver = v11;
  v37.super_class = (Class)type metadata accessor for WorkoutCellImageLabelView();
  v29 = (char *)objc_msgSendSuper2(&v37, "initWithFrame:", a1, a2, a3, a4);
  v30 = OBJC_IVAR___CHWorkoutCellImageLabelView_badgeCountLabel;
  v31 = *(void **)&v29[OBJC_IVAR___CHWorkoutCellImageLabelView_badgeCountLabel];
  v32 = v29;
  v33 = v31;
  if (FIUILocaleIsRightToLeft(v33))
    v34 = 0;
  else
    v34 = 2;
  objc_msgSend(v33, "setTextAlignment:", v34);

  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v32[OBJC_IVAR___CHWorkoutCellImageLabelView_workoutImageView]);
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v32[OBJC_IVAR___CHWorkoutCellImageLabelView_workoutIconView]);
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v29[v30]);
  v35 = *(void **)&v32[OBJC_IVAR___CHWorkoutCellImageLabelView_labelStackView];
  objc_msgSend(v35, "addArrangedSubview:", *(_QWORD *)&v32[OBJC_IVAR___CHWorkoutCellImageLabelView_workoutTitleLabel]);
  objc_msgSend(v35, "addArrangedSubview:", *(_QWORD *)&v32[OBJC_IVAR___CHWorkoutCellImageLabelView_goalLabel]);
  objc_msgSend(v32, "addSubview:", v35);
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v32[OBJC_IVAR___CHWorkoutCellImageLabelView_separatorView]);
  sub_1005EC400();

  return v32;
}

void sub_1005EC400()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  uint64_t v104;
  CHWorkoutDetailHeartRateTableViewCell *v105;
  id v106;
  id v107;
  char v108;
  const char *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  CHWorkoutDetailHeartRateTableViewCell *v116;
  CHWorkoutDetailHeartRateTableViewCell *v117;
  void *v118;
  SEL v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  CHWorkoutDetailHeartRateTableViewCell *v128;
  id v129;
  id v130;
  Class isa;

  v1 = v0;
  v130 = (id)sub_100047110((uint64_t *)&unk_100828340);
  v2 = swift_allocObject(v130, 168, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100633320;
  v3 = *(void **)&v1[OBJC_IVAR___CHWorkoutCellImageLabelView_workoutImageView];
  v4 = objc_msgSend(v3, "leadingAnchor");
  v5 = objc_msgSend(v1, "leadingAnchor");
  v6 = objc_msgSend(v4, "constraintEqualToAnchor:", v5);

  *(_QWORD *)(v2 + 32) = v6;
  v7 = objc_msgSend(v3, "topAnchor");
  v8 = objc_msgSend(v1, "topAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:constant:", v8, 15.0);

  *(_QWORD *)(v2 + 40) = v9;
  v10 = objc_msgSend(v3, "widthAnchor");
  v11 = objc_msgSend(v10, "constraintEqualToConstant:", 48.0);

  *(_QWORD *)(v2 + 48) = v11;
  v12 = objc_msgSend(v3, "heightAnchor");
  v13 = objc_msgSend(v12, "constraintEqualToConstant:", 48.0);

  *(_QWORD *)(v2 + 56) = v13;
  v14 = *(void **)&v1[OBJC_IVAR___CHWorkoutCellImageLabelView_workoutIconView];
  v127 = v14;
  v15 = objc_msgSend(v14, "centerXAnchor");
  v16 = objc_msgSend(v3, "centerXAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v2 + 64) = v17;
  v18 = objc_msgSend(v14, "centerYAnchor");
  v19 = objc_msgSend(v3, "centerYAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v2 + 72) = v20;
  v21 = *(void **)&v1[OBJC_IVAR___CHWorkoutCellImageLabelView_labelStackView];
  v22 = objc_msgSend(v21, "topAnchor");
  v23 = objc_msgSend(v3, "bottomAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v23, 10.0);

  *(_QWORD *)(v2 + 80) = v24;
  v25 = objc_msgSend(v21, "leadingAnchor");
  v26 = objc_msgSend(v1, "leadingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v2 + 88) = v27;
  v28 = objc_msgSend(v21, "trailingAnchor");
  v29 = objc_msgSend(v1, "trailingAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v2 + 96) = v30;
  v31 = objc_msgSend(v21, "bottomAnchor");
  v32 = objc_msgSend(v1, "bottomAnchor");
  v33 = objc_msgSend(v31, "constraintLessThanOrEqualToAnchor:constant:", v32, -15.0);

  *(_QWORD *)(v2 + 104) = v33;
  v34 = *(void **)&v1[OBJC_IVAR___CHWorkoutCellImageLabelView_goalLabel];
  v126 = v34;
  v35 = objc_msgSend(v34, "topAnchor");
  v129 = *(id *)&v1[OBJC_IVAR___CHWorkoutCellImageLabelView_workoutTitleLabel];
  v36 = objc_msgSend(v129, "bottomAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v2 + 112) = v37;
  v38 = *(void **)&v1[OBJC_IVAR___CHWorkoutCellImageLabelView_separatorView];
  v39 = objc_msgSend(v38, "widthAnchor");
  v40 = objc_msgSend(v1, "widthAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

  *(_QWORD *)(v2 + 120) = v41;
  v42 = objc_msgSend(v38, "heightAnchor");
  v43 = objc_msgSend(v42, "constraintEqualToConstant:", 0.5);

  *(_QWORD *)(v2 + 128) = v43;
  v44 = objc_msgSend(v38, "bottomAnchor");
  v45 = objc_msgSend(v1, "bottomAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  *(_QWORD *)(v2 + 136) = v46;
  v47 = *(void **)&v1[OBJC_IVAR___CHWorkoutCellImageLabelView_badgeCountLabel];
  v48 = objc_msgSend(v47, "topAnchor");
  v49 = objc_msgSend(v34, "lastBaselineAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, 10.0);

  *(_QWORD *)(v2 + 144) = v50;
  v51 = objc_msgSend(v47, "trailingAnchor");
  v52 = objc_msgSend(v1, "trailingAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

  *(_QWORD *)(v2 + 152) = v53;
  v54 = objc_msgSend(v47, "bottomAnchor");
  v55 = objc_msgSend(v1, "bottomAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:constant:", v55, -15.0);

  *(_QWORD *)(v2 + 160) = v56;
  specialized Array._endMutation()(v57);
  v128 = (CHWorkoutDetailHeartRateTableViewCell *)v2;
  v58 = swift_allocObject(v130, 160, 7);
  *(_OWORD *)(v58 + 16) = xmmword_100626C10;
  v59 = objc_msgSend(v3, "leadingAnchor");
  v60 = objc_msgSend(v1, "leadingAnchor");
  v61 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

  *(_QWORD *)(v58 + 32) = v61;
  v62 = objc_msgSend(v3, "centerYAnchor");
  v63 = objc_msgSend(v21, "centerYAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

  *(_QWORD *)(v58 + 40) = v64;
  v65 = objc_msgSend(v3, "widthAnchor");
  v66 = objc_msgSend(v65, "constraintEqualToConstant:", 48.0);

  *(_QWORD *)(v58 + 48) = v66;
  v67 = objc_msgSend(v3, "heightAnchor");
  v68 = objc_msgSend(v67, "constraintEqualToConstant:", 48.0);

  *(_QWORD *)(v58 + 56) = v68;
  v69 = objc_msgSend(v127, "centerXAnchor");
  v70 = objc_msgSend(v3, "centerXAnchor");
  v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

  *(_QWORD *)(v58 + 64) = v71;
  v72 = objc_msgSend(v127, "centerYAnchor");
  v73 = objc_msgSend(v3, "centerYAnchor");
  v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

  *(_QWORD *)(v58 + 72) = v74;
  v75 = objc_msgSend(v21, "topAnchor");
  v76 = objc_msgSend(v1, "topAnchor");
  v77 = objc_msgSend(v75, "constraintEqualToAnchor:constant:", v76, 12.0);

  *(_QWORD *)(v58 + 80) = v77;
  v78 = objc_msgSend(v21, "leadingAnchor");
  v79 = objc_msgSend(v3, "trailingAnchor");
  v80 = objc_msgSend(v78, "constraintEqualToAnchor:constant:", v79, 8.0);

  *(_QWORD *)(v58 + 88) = v80;
  v81 = objc_msgSend(v21, "trailingAnchor");
  v82 = objc_msgSend(v47, "leadingAnchor");
  v83 = objc_msgSend(v81, "constraintEqualToAnchor:constant:", v82, -5.0);

  *(_QWORD *)(v58 + 96) = v83;
  v84 = objc_msgSend(v21, "bottomAnchor");
  v85 = objc_msgSend(v1, "bottomAnchor");
  v86 = objc_msgSend(v84, "constraintEqualToAnchor:constant:", v85, -12.0);

  *(_QWORD *)(v58 + 104) = v86;
  v87 = objc_msgSend(v126, "topAnchor");
  v88 = objc_msgSend(v129, "bottomAnchor");
  v89 = objc_msgSend(v87, "constraintEqualToAnchor:", v88);

  *(_QWORD *)(v58 + 112) = v89;
  v90 = objc_msgSend(v38, "widthAnchor");
  v91 = objc_msgSend(v1, "widthAnchor");
  v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

  *(_QWORD *)(v58 + 120) = v92;
  v93 = objc_msgSend(v38, "heightAnchor");
  v94 = objc_msgSend(v93, "constraintEqualToConstant:", 0.5);

  *(_QWORD *)(v58 + 128) = v94;
  v95 = objc_msgSend(v38, "bottomAnchor");
  v96 = objc_msgSend(v1, "bottomAnchor");
  v97 = objc_msgSend(v95, "constraintEqualToAnchor:", v96);

  *(_QWORD *)(v58 + 136) = v97;
  v98 = objc_msgSend(v47, "topAnchor");
  v99 = objc_msgSend(v1, "topAnchor");
  v100 = objc_msgSend(v98, "constraintEqualToAnchor:constant:", v99, 15.0);

  *(_QWORD *)(v58 + 144) = v100;
  v101 = objc_msgSend(v47, "trailingAnchor");
  v102 = objc_msgSend(v1, "trailingAnchor");
  v103 = objc_msgSend(v101, "constraintEqualToAnchor:", v102);

  *(_QWORD *)(v58 + 152) = v103;
  specialized Array._endMutation()(v104);
  v105 = (CHWorkoutDetailHeartRateTableViewCell *)v58;
  v106 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v107 = objc_msgSend(v106, "preferredContentSizeCategory");

  v108 = UIContentSizeCategory.isAccessibilityCategory.getter(v107);
  if ((v108 & 1) != 0)
    v116 = v105;
  else
    v116 = v128;
  if ((v108 & 1) != 0)
    v117 = v128;
  else
    v117 = v105;
  swift_bridgeObjectRelease(v116, v109, v110, v111, v112, v113, v114, v115);
  v118 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v117, v119, v120, v121, v122, v123, v124, v125);
  objc_msgSend(v118, "activateConstraints:", isa);

}

id sub_1005ED270(void *a1, void *a2, void *a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;

  v13 = a5 & 1;
  v14 = *(void **)(v7 + OBJC_IVAR___CHWorkoutCellImageLabelView_workout);
  *(_QWORD *)(v7 + OBJC_IVAR___CHWorkoutCellImageLabelView_workout) = a1;
  v15 = a1;

  v16 = *(void **)(v7 + OBJC_IVAR___CHWorkoutCellImageLabelView_fitnessAppContext);
  *(_QWORD *)(v7 + OBJC_IVAR___CHWorkoutCellImageLabelView_fitnessAppContext) = a2;
  v17 = a2;

  v18 = *(void **)(v7 + OBJC_IVAR___CHWorkoutCellImageLabelView_formattingManager);
  *(_QWORD *)(v7 + OBJC_IVAR___CHWorkoutCellImageLabelView_formattingManager) = a3;
  v19 = a3;

  *(_QWORD *)(v7 + OBJC_IVAR___CHWorkoutCellImageLabelView_achievementCount) = a4;
  *(_BYTE *)(v7 + OBJC_IVAR___CHWorkoutCellImageLabelView_diveDisplayStyle) = v13;
  sub_1005ED378(a6, a7);
  return sub_1005EE1D8();
}

void sub_1005ED378(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t inited;
  void *v12;
  NSString *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSString *v17;
  void *v18;
  id v19;
  unint64_t v20;
  Class isa;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  __CFString *v30;
  unsigned int v31;
  id v32;
  id v33;
  unsigned int v34;
  id v35;
  id v36;
  unsigned int v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v52;
  char *v53;
  _QWORD aBlock[5];
  uint64_t v55;
  char v56[120];

  v3 = *(void **)(v2 + OBJC_IVAR___CHWorkoutCellImageLabelView_workout);
  if (v3)
  {
    v4 = *(void **)(v2 + OBJC_IVAR___CHWorkoutCellImageLabelView_fitnessAppContext);
    if (v4)
    {
      v5 = *(void **)(v2 + OBJC_IVAR___CHWorkoutCellImageLabelView_formattingManager);
      if (v5)
      {
        v6 = v3;
        v53 = v4;
        v7 = v5;
        v52 = objc_msgSend(v7, "formattedTypeForWorkout:workoutActivity:context:", v6, 0, CFSTR("WorkoutsListDisplayContext"));
        v8 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v52);
        v9 = objc_msgSend(v8, "length");
        v10 = sub_100047110((uint64_t *)&unk_10082EDA0);
        inited = swift_initStackObject(v10, v56);
        *(_OWORD *)(inited + 16) = xmmword_100620BC0;
        *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
        v12 = (void *)objc_opt_self(UIColor);
        v13 = NSForegroundColorAttributeName;
        v14 = objc_msgSend(v12, "whiteColor");
        v15 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
        *(_QWORD *)(inited + 40) = v14;
        *(_QWORD *)(inited + 64) = v15;
        *(_QWORD *)(inited + 72) = NSFontAttributeName;
        v16 = qword_10081E100;
        v17 = NSFontAttributeName;
        if (v16 != -1)
          swift_once(&qword_10081E100, sub_1005EBF18);
        v18 = (void *)qword_10083DCF8;
        *(_QWORD *)(inited + 104) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
        *(_QWORD *)(inited + 80) = v18;
        v19 = v18;
        v20 = sub_100038C84(inited);
        type metadata accessor for Key(0);
        sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v8, "addAttributes:range:", isa, 0, v9, swift_bridgeObjectRelease(v20).n128_f64[0]);

        objc_msgSend(*(id *)(v2 + OBJC_IVAR___CHWorkoutCellImageLabelView_workoutTitleLabel), "setAttributedText:", v8);
        if (objc_msgSend(v6, "workoutActivityType") == (id)84
          && (*(_BYTE *)(v2 + OBJC_IVAR___CHWorkoutCellImageLabelView_diveDisplayStyle) & 1) == 0)
        {
          v22 = *(void **)(v2 + OBJC_IVAR___CHWorkoutCellImageLabelView_goalLabel);
          v23 = objc_msgSend(v7, "formattedDurationForWorkout:workoutActivity:context:", v6, 0, CFSTR("WorkoutsListDisplayContext"));
        }
        else
        {
          v22 = *(void **)(v2 + OBJC_IVAR___CHWorkoutCellImageLabelView_goalLabel);
          v23 = objc_msgSend(v7, "formattedGoalForWorkout:context:", v6, CFSTR("WorkoutsListDisplayContext"));
        }
        v24 = v23;
        objc_msgSend(v22, "setAttributedText:", v24);

        v25 = swift_allocObject(&unk_1007ADE08, 24, 7);
        swift_unknownObjectWeakInit(v25 + 16, v2);
        v26 = swift_allocObject(&unk_1007ADE30, 32, 7);
        *(_QWORD *)(v26 + 16) = v25;
        *(_QWORD *)(v26 + 24) = v6;
        aBlock[4] = sub_1005EEA80;
        v55 = v26;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100598C48;
        aBlock[3] = &unk_1007ADE48;
        v27 = _Block_copy(aBlock);
        v28 = v55;
        v29 = v6;
        v30 = CFSTR("WorkoutsListDisplayContext");
        swift_release(v28);
        objc_msgSend(v7, "fetchIconImageForWorkout:context:completion:", v29, v30, v27);
        _Block_release(v27);

        if (objc_msgSend(v29, "fiui_isConnectedGymWorkout"))
          v31 = objc_msgSend(v7, "hasConnectedGymVendorIconForWorkout:", v29);
        else
          v31 = 0;
        v32 = objc_msgSend(v29, "sourceRevision");
        v33 = objc_msgSend(v32, "source");

        v34 = objc_msgSend(v33, "_hasFirstPartyBundleID");
        v35 = objc_msgSend(v29, "sourceRevision");
        v36 = objc_msgSend(v35, "source");

        LODWORD(v35) = objc_msgSend(v36, "_isAppleWatch");
        if ((_DWORD)v35)
        {
          if (((v31 | v34 ^ 1) & 1) != 0)
          {
LABEL_20:
            v45 = v29;
            v46 = sub_1005EEA88(v45);

            if ((v46 & 1) != 0)
            {
              v47 = *(_QWORD *)&v53[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
              v48 = swift_allocObject(&unk_1007ADE08, 24, 7);
              swift_unknownObjectWeakInit(v48 + 16, v2);
              v49 = v45;
              swift_retain(v48);
              sub_10003AFE0(a1, a2);
              sub_10039C43C(v49, v47, v48, v49, a1, a2);

              swift_release(v48);
              sub_100022BA4(a1, a2);

              swift_release(v48);
            }
            else
            {

            }
            return;
          }
        }
        else
        {
          v37 = objc_msgSend(v29, "_isWatchWorkout");
          if (((v31 | v34 ^ 1) & 1) != 0 || !v37)
            goto LABEL_20;
        }
        v38 = objc_msgSend(v29, "fiui_activityType");
        v39 = (id)FIUIStaticWorkoutIconImage();
        if (!v39)
        {
          __break(1u);
          return;
        }
        v40 = v39;
        v41 = objc_msgSend(v39, "imageWithRenderingMode:", 2);

        v42 = sub_1003B13FC(v29);
        v43 = *(void **)(v2 + OBJC_IVAR___CHWorkoutCellImageLabelView_workoutIconView);
        v44 = objc_msgSend(v42, "nonGradientTextColor");
        objc_msgSend(v43, "setTintColor:", v44);

        objc_msgSend(v43, "setImage:", v41);
        goto LABEL_20;
      }
    }
  }
}

void sub_1005ED9EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  char v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  _BYTE v20[24];
  _BYTE v21[24];
  _BYTE v22[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(void **)(Strong + OBJC_IVAR___CHWorkoutCellImageLabelView_workout);
    v9 = v8;

    if (v8)
    {
      sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
      v10 = v9;
      v11 = a3;
      v12 = static NSObject.== infix(_:_:)(v10, v11);

      if ((v12 & 1) != 0)
      {
        swift_beginAccess(v5, v21, 0, 0);
        v13 = swift_unknownObjectWeakLoadStrong(v5);
        if (!v13
          || (v14 = (void *)v13,
              v15 = *(id *)(v13 + OBJC_IVAR___CHWorkoutCellImageLabelView_workoutImageView),
              v14,
              v16 = objc_msgSend(v15, "image"),
              v16,
              v15,
              !v16))
        {
          swift_beginAccess(v5, v20, 0, 0);
          v17 = swift_unknownObjectWeakLoadStrong(v5);
          if (v17)
          {
            v18 = (void *)v17;
            v19 = *(id *)(v17 + OBJC_IVAR___CHWorkoutCellImageLabelView_workoutImageView);

            objc_msgSend(v19, "setImage:", a1);
          }
        }
      }
    }
  }
}

double sub_1005EDB6C(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  double result;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t inited;
  void *v26;
  NSString *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString *v31;
  void *v32;
  id v33;
  unint64_t v34;
  Class isa;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  char *v42;
  id v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  char *v54;
  _BYTE v55[24];
  _BYTE v56[24];
  _BYTE v57[24];
  _BYTE v58[112];
  _BYTE v59[32];

  v9 = a2 + 16;
  swift_beginAccess(a2 + 16, v59, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = *(void **)(Strong + OBJC_IVAR___CHWorkoutCellImageLabelView_workout);
    v14 = v13;

    if (v13)
    {
      v15 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
      v16 = v14;
      v17 = a3;
      v18 = static NSObject.== infix(_:_:)(v16, v17);

      if ((v18 & 1) != 0)
      {
        if (a1)
        {
          v20 = *(_QWORD *)&a1[OBJC_IVAR___CHCatalogItemViewModel_title];
          v21 = objc_allocWithZone((Class)NSMutableAttributedString);
          v54 = a1;
          v22 = objc_msgSend(v21, "initWithAttributedString:", v20);
          v23 = objc_msgSend(v22, "length");
          v24 = sub_100047110((uint64_t *)&unk_10082EDA0);
          inited = swift_initStackObject(v24, v58);
          *(_OWORD *)(inited + 16) = xmmword_100620BC0;
          *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
          v26 = (void *)objc_opt_self(UIColor);
          v27 = NSForegroundColorAttributeName;
          v28 = objc_msgSend(v26, "whiteColor");
          v29 = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
          *(_QWORD *)(inited + 40) = v28;
          *(_QWORD *)(inited + 64) = v29;
          *(_QWORD *)(inited + 72) = NSFontAttributeName;
          v30 = qword_10081E100;
          v31 = NSFontAttributeName;
          if (v30 != -1)
            swift_once(&qword_10081E100, sub_1005EBF18);
          v32 = (void *)qword_10083DCF8;
          *(_QWORD *)(inited + 104) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
          *(_QWORD *)(inited + 80) = v32;
          v33 = v32;
          v34 = sub_100038C84(inited);
          type metadata accessor for Key(0);
          sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v22, "addAttributes:range:", isa, 0, v23, swift_bridgeObjectRelease(v34).n128_f64[0]);

          swift_beginAccess(v9, v57, 0, 0);
          v36 = swift_unknownObjectWeakLoadStrong(v9);
          if (v36)
          {
            v37 = (void *)v36;
            v38 = *(id *)(v36 + OBJC_IVAR___CHWorkoutCellImageLabelView_workoutTitleLabel);

            objc_msgSend(v38, "setAttributedText:", v22);
          }
          swift_beginAccess(v9, v56, 0, 0);
          v39 = swift_unknownObjectWeakLoadStrong(v9);
          if (v39
            && (v40 = (void *)v39,
                v41 = *(void **)(v39 + OBJC_IVAR___CHWorkoutCellImageLabelView_fitnessAppContext),
                v42 = v41,
                v40,
                v41))
          {
            v43 = *(id *)&v42[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];

            v44 = swift_allocObject(&unk_1007ADE08, 24, 7);
            swift_beginAccess(v9, v55, 0, 0);
            v45 = (void *)swift_unknownObjectWeakLoadStrong(v9);
            swift_unknownObjectWeakInit(v44 + 16, v45);

            v46 = (_QWORD *)swift_allocObject(&unk_1007ADE80, 48, 7);
            v46[2] = v44;
            v46[3] = v17;
            v46[4] = a4;
            v46[5] = a5;
            v47 = v17;
            swift_retain(v44);
            sub_10003AFE0(a4, a5);
            sub_10039636C(v54, (uint64_t)sub_1005EEBA8, (uint64_t)v46, 48.0, 48.0);

            swift_release(v44);
            swift_release(v46);

          }
          else
          {

          }
        }
        else
        {
          v48 = static os_log_type_t.error.getter(v19);
          v49 = (void *)HKLogActivity;
          v50 = sub_100047110((uint64_t *)&unk_100827460);
          v51 = swift_allocObject(v50, 112, 7);
          *(_OWORD *)(v51 + 16) = xmmword_100620BC0;
          *(_QWORD *)(v51 + 56) = &type metadata for String;
          *(_QWORD *)(v51 + 64) = sub_100038CF8();
          *(_QWORD *)(v51 + 32) = 0xD000000000000028;
          *(_QWORD *)(v51 + 40) = 0x80000001006A9EA0;
          *(_QWORD *)(v51 + 96) = v15;
          *(_QWORD *)(v51 + 104) = sub_10018A478();
          *(_QWORD *)(v51 + 72) = v17;
          v52 = v17;
          v53 = v49;
          os_log(_:dso:log:_:_:)(v48, &_mh_execute_header, v53, "%@ failed to fetch catalog item view model for workout %@", 57, 2, v51);

          *(_QWORD *)&result = swift_bridgeObjectRelease(v51).n128_u64[0];
        }
      }
    }
  }
  return result;
}

void sub_1005EE048(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void))
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = *(void **)(Strong + OBJC_IVAR___CHWorkoutCellImageLabelView_workout);
    v11 = v10;

    if (v10)
    {
      sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
      v12 = v11;
      v13 = a3;
      v14 = static NSObject.== infix(_:_:)(v12, v13);

      if ((v14 & 1) != 0)
      {
        if (a1)
        {
          swift_beginAccess(v7, v22, 0, 0);
          v15 = swift_unknownObjectWeakLoadStrong(v7);
          if (v15)
          {
            v16 = (void *)v15;
            v17 = *(id *)(v15 + OBJC_IVAR___CHWorkoutCellImageLabelView_workoutIconView);

            objc_msgSend(v17, "setImage:", 0);
          }
          swift_beginAccess(v7, v21, 0, 0);
          v18 = swift_unknownObjectWeakLoadStrong(v7);
          if (v18)
          {
            v19 = (void *)v18;
            v20 = *(id *)(v18 + OBJC_IVAR___CHWorkoutCellImageLabelView_workoutImageView);

            objc_msgSend(v20, "setImage:", a1);
          }
        }
      }
    }
  }
  if (a4)
    a4();
}

id sub_1005EE1D8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  NSString v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v37;
  char *v38;
  Class v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t KeyPath;
  uint64_t v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  unint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void (*v62)(char *, uint64_t);
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;

  v1 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AttributedString(0);
  v5 = __chkstk_darwin(v4);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v63 - v7;
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v63 - v10;
  v12 = __chkstk_darwin(v9);
  __chkstk_darwin(v12);
  v71 = (char *)&v63 - v16;
  v17 = OBJC_IVAR___CHWorkoutCellImageLabelView_achievementCount;
  if (*(uint64_t *)&v0[OBJC_IVAR___CHWorkoutCellImageLabelView_achievementCount] < 1)
    return objc_msgSend(*(id *)&v0[OBJC_IVAR___CHWorkoutCellImageLabelView_badgeCountLabel], "setHidden:", 1);
  v67 = v15;
  v68 = v0;
  v69 = v14;
  v70 = v13;
  v18 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v66 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v19 = sub_100047110((uint64_t *)&unk_100828340);
  v20 = swift_allocObject(v19, 40, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100623630;
  *(_QWORD *)(v20 + 32) = v18;
  v72 = v20;
  specialized Array._endMutation()(v20);
  v21 = v72;
  sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  v65 = v18;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v21);
  v23 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v24 = objc_msgSend(v23, "configurationWithPaletteColors:", isa);

  v25 = v24;
  v26 = objc_msgSend(v23, "configurationWithScale:", 1);
  v27 = objc_msgSend(v25, "configurationByApplyingConfiguration:", v26);

  v28 = v27;
  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend((id)objc_opt_self(UIImage), "smm_systemImageNamed:withConfiguration:", v29, v28);

  v64 = v28;
  v31 = v30;
  v32 = objc_msgSend(v31, "imageWithRenderingMode:", 2);
  if (v32)
  {
    v33 = v32;
    v34 = objc_msgSend((id)objc_opt_self(NSTextAttachment), "textAttachmentWithImage:", v32);
    v35 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v34);

  }
  else
  {
    v35 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
    v34 = v31;
  }

  AttributedString.init(_:)(v35);
  v37 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v37, "setNumberStyle:", 0);
  objc_msgSend(v37, "setRoundingMode:", 4);
  v38 = v68;
  v39 = Int._bridgeToObjectiveC()().super.super.isa;
  v40 = objc_msgSend(v37, "stringForObjectValue:", v39);

  v63 = v31;
  if (v40)
  {
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v42 = v38;
    v44 = v43;

  }
  else
  {
    v72 = *(_QWORD *)&v38[v17];
    v41 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v42 = v38;
    v44 = v45;
  }
  AttributeContainer.init()();
  v46 = v69;
  AttributedString.init(_:attributes:)(v41, v44, v3);
  v47 = AttributedString.init(stringLiteral:)(32, 0xE100000000000000);
  AttributedString.init()(v47);
  v48 = sub_1000083D8((unint64_t *)&qword_100833768, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  AttributedString.append<A>(_:)(v46, v4, v48);
  AttributedString.append<A>(_:)(v11, v4, v48);
  AttributedString.append<A>(_:)(v71, v4, v48);
  KeyPath = swift_getKeyPath(&unk_100649DC0);
  *(&v63 - 2) = (id)__chkstk_darwin(KeyPath);
  v50 = swift_getKeyPath(&unk_100649DF0);
  v51 = v66;
  v72 = (uint64_t)v66;
  v52 = sub_10018A608();
  v68 = v51;
  AttributedString.subscript.setter(&v72, v50, v52);
  v53 = swift_getKeyPath(&unk_100649E30);
  *(&v63 - 2) = (id)__chkstk_darwin(v53);
  v54 = swift_getKeyPath(&unk_100649E60);
  v55 = v65;
  v72 = (uint64_t)v65;
  v56 = sub_100274874();
  v57 = v55;
  AttributedString.subscript.setter(&v72, v54, v56);
  v58 = *(void **)&v42[OBJC_IVAR___CHWorkoutCellImageLabelView_badgeCountLabel];
  sub_10001E724(0, (unint64_t *)&qword_1008202D0, NSAttributedString_ptr);
  v59 = v70;
  v60 = v67;
  (*(void (**)(uint64_t, char *, uint64_t))(v70 + 16))(v67, v8, v4);
  v61 = (void *)NSAttributedString.init(_:)(v60);
  objc_msgSend(v58, "setAttributedText:", v61);

  objc_msgSend(v58, "setHidden:", 0);
  v62 = *(void (**)(char *, uint64_t))(v59 + 8);
  v62(v8, v4);
  v62(v11, v4);
  v62(v46, v4);
  return (id)((uint64_t (*)(char *, uint64_t))v62)(v71, v4);
}

id sub_1005EE8CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutCellImageLabelView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutCellImageLabelView()
{
  return objc_opt_self(CHWorkoutCellImageLabelView);
}

uint64_t sub_1005EE9DC()
{
  return 8;
}

uint64_t sub_1005EE9E8(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1005EE9F0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1005EEA04(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1005EEA1C()
{
  return 8;
}

uint64_t sub_1005EEA30()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005EEA54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1005EEA80(uint64_t a1)
{
  uint64_t v1;

  sub_1005ED9EC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1005EEA88(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;

  v1 = objc_msgSend(a1, "metadata");
  if (!v1)
  {
    v11 = 0u;
    v12 = 0u;
    goto LABEL_8;
  }
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v4 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16) || (v7 = sub_100438F74(v4, v5), (v8 & 1) == 0))
  {
    v11 = 0u;
    v12 = 0u;
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v3);
    goto LABEL_8;
  }
  sub_10003E9BC(*(_QWORD *)(v3 + 56) + 32 * v7, (uint64_t)&v11);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v12 + 1))
  {
LABEL_8:
    v9 = 0;
    goto LABEL_9;
  }
  v9 = 1;
LABEL_9:
  sub_1000F996C((uint64_t)&v11);
  return v9;
}

uint64_t sub_1005EEB6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1005EEBA8(uint64_t a1)
{
  uint64_t v1;

  sub_1005EE048(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(void))(v1 + 32));
}

uint64_t sub_1005EEBB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v1 = MindfulnessSessionViewModel.metadata.getter(a1);
  if (!v1)
  {
    v10 = 0u;
    v11 = 0u;
    goto LABEL_8;
  }
  v2 = v1;
  v3 = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  v5 = v4;
  if (!*(_QWORD *)(v2 + 16) || (v6 = sub_100438F74(v3, v4), (v7 & 1) == 0))
  {
    v10 = 0u;
    v11 = 0u;
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v2);
    goto LABEL_8;
  }
  sub_10003E9BC(*(_QWORD *)(v2 + 56) + 32 * v6, (uint64_t)&v10);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v2);
  if (!*((_QWORD *)&v11 + 1))
  {
LABEL_8:
    v8 = 0;
    goto LABEL_9;
  }
  v8 = 1;
LABEL_9:
  sub_1000F996C((uint64_t)&v10);
  return v8;
}

void sub_1005EEC64()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  double v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutCellImageLabelView_workout] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutCellImageLabelView_fitnessAppContext] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutCellImageLabelView_formattingManager] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutCellImageLabelView_achievementCount] = 0;
  v0[OBJC_IVAR___CHWorkoutCellImageLabelView_diveDisplayStyle] = 1;
  v2 = OBJC_IVAR___CHWorkoutCellImageLabelView_workoutImageView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = objc_msgSend(v3, "layer");
  objc_msgSend(v4, "setCornerRadius:", 3.0);

  objc_msgSend(v3, "setClipsToBounds:", 1);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v2] = v3;
  v5 = OBJC_IVAR___CHWorkoutCellImageLabelView_workoutIconView;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v5] = v6;
  v7 = OBJC_IVAR___CHWorkoutCellImageLabelView_labelStackView;
  v8 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v8, "setAxis:", 1);
  objc_msgSend(v8, "setDistribution:", 3);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v7] = v8;
  v9 = OBJC_IVAR___CHWorkoutCellImageLabelView_workoutTitleLabel;
  v10 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  LODWORD(v11) = 1148846080;
  objc_msgSend(v10, "setContentCompressionResistancePriority:forAxis:", 1, v11);
  objc_msgSend(v10, "setLineBreakMode:", 0);
  objc_msgSend(v10, "setNumberOfLines:", 0);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v9] = v10;
  v12 = OBJC_IVAR___CHWorkoutCellImageLabelView_goalLabel;
  v13 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v12] = v13;
  v14 = OBJC_IVAR___CHWorkoutCellImageLabelView_badgeCountLabel;
  v15 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = UIView.forAutoLayout()();

  *(_QWORD *)&v1[v14] = v16;
  v17 = OBJC_IVAR___CHWorkoutCellImageLabelView_separatorView;
  v18 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v19 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
  objc_msgSend(v18, "setBackgroundColor:", v19);

  objc_msgSend(v18, "setHidden:", 1);
  objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v17] = v18;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/WorkoutCellImageLabelView.swift", 42, 2, 300, 0);
  __break(1u);
}

uint64_t sub_1005EEFD4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005EEFF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1005EF010(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 88) = a2;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = v2;
  *(_QWORD *)(v3 + 48) = swift_getObjectType(v2);
  return swift_task_switch(sub_1005EF058, 0, 0);
}

uint64_t sub_1005EF058()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v7;
  char v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  os_log_type_t v12;
  void *v13;
  os_log_type_t v14;
  _BOOL8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v1 = *(unsigned __int8 *)(v0 + 88);
  if (v1 == 38)
  {
    v2 = *(_QWORD *)(v0 + 40);
    v3 = swift_allocObject(&unk_1007ADEE8, 24, 7);
    *(_QWORD *)(v0 + 56) = v3;
    swift_unknownObjectWeakInit(v3 + 16, v2);
    v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 64) = v4;
    v5 = type metadata accessor for Date(0);
    *v4 = v0;
    v4[1] = sub_1005EF320;
    return withCheckedContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 32), 0, 0, 0xD000000000000015, 0x80000001006A9F00, sub_1005F048C, v3, v5);
  }
  v7 = (void *)sub_1005F0DF8(v1);
  if ((v8 & 1) != 0)
  {
    v9 = sub_1005F0D88(*(_BYTE *)(v0 + 88));
    *(_QWORD *)(v0 + 72) = v9;
    if (v9)
    {
      v10 = (uint64_t)v9;
      v11 = (_QWORD *)swift_task_alloc(dword_10083DD94);
      *(_QWORD *)(v0 + 80) = v11;
      *v11 = v0;
      v11[1] = sub_1005EF370;
      return sub_1005EF800(*(_QWORD *)(v0 + 32), v10);
    }
    v12 = static os_log_type_t.error.getter(0);
    v13 = (void *)HKLogActivity;
    v14 = v12;
    v15 = os_log_type_enabled(HKLogActivity, v12);
    if (v15)
    {
      v16 = *(_QWORD *)(v0 + 48);
      v17 = *(_BYTE *)(v0 + 88);
      v18 = v13;
      v19 = swift_slowAlloc(22, -1);
      v20 = swift_slowAlloc(64, -1);
      v27 = v20;
      *(_DWORD *)v19 = 136315394;
      v21 = _typeName(_:qualified:)(v16, 0);
      v23 = v22;
      *(_QWORD *)(v0 + 16) = sub_10003E8EC(v21, v22, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v19 + 4);
      swift_bridgeObjectRelease(v23);
      *(_WORD *)(v19 + 12) = 2080;
      v24 = sub_1005F0860(v17);
      v26 = v25;
      *(_QWORD *)(v0 + 24) = sub_10003E8EC(v24, v25, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v19 + 14);
      swift_bridgeObjectRelease(v26);
      _os_log_impl((void *)&_mh_execute_header, v18, v14, "%s firstSampleDate: fail to find activity type or sample type for %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);

    }
    Date.init()(v15);
  }
  else
  {
    sub_1005EF3F4(v7, *(_QWORD *)(v0 + 32));
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005EF320()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 56);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  swift_release(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1005EF370()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 80));
  return swift_task_switch(sub_1005EF3C4, 0, 0);
}

uint64_t sub_1005EF3C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1005EF3F4(id a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  void (*v31)(uint64_t, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;

  v39 = a2;
  v38 = type metadata accessor for Date(0);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v35 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v5);
  v37 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_workoutDataProvider), "unfilteredWorkouts");
  v8 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
LABEL_29:
    if (v9 < 0)
      v24 = v9;
    else
      v24 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v10 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v9);
    if (v10)
      goto LABEL_3;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
LABEL_3:
      v40 = v9;
      v41 = v9 & 0xC000000000000001;
      v33 = v9 + 32;
      v34 = v9 & 0xFFFFFFFFFFFFFF8;
      do
      {
        if (__OFSUB__(v10--, 1))
          goto LABEL_28;
        if (v41)
        {
          v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v9);
        }
        else
        {
          if ((v10 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_40:
            __break(1u);
            return;
          }
          if (v10 >= *(_QWORD *)(v34 + 16))
            goto LABEL_40;
          v12 = *(id *)(v33 + 8 * v10);
        }
        v42 = v12;
        v13 = objc_msgSend(v12, "workoutActivities", v33);
        v14 = sub_10001E724(0, (unint64_t *)&qword_10082E6A0, HKWorkoutActivity_ptr);
        v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

        if ((unint64_t)v15 >> 62)
        {
          if (v15 < 0)
            v22 = v15;
          else
            v22 = v15 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(v15, 2);
          v16 = _CocoaArrayWrapper.endIndex.getter(v22);
          swift_bridgeObjectRelease(v15);
          if (v16)
          {
LABEL_13:
            v9 = 4;
            while (1)
            {
              v17 = (v15 & 0xC000000000000001) != 0
                  ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v15)
                  : *(id *)(v15 + 8 * v9);
              v18 = v17;
              v19 = v9 - 3;
              if (__OFADD__(v9 - 4, 1))
                break;
              v20 = objc_msgSend(v17, "fiui_activityType");
              v21 = objc_msgSend(v20, "identifier");

              if (v21 == a1)
              {

                swift_bridgeObjectRelease_n(v15, 2);
                v9 = v40;
                v23 = (void *)sub_1005F0538(v10, v40);
                goto LABEL_34;
              }
              ++v9;
              if (v19 == v16)
                goto LABEL_4;
            }
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        else
        {
          v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v15);
          if (v16)
            goto LABEL_13;
        }
LABEL_4:
        swift_bridgeObjectRelease_n(v15, 2);

        v9 = v40;
      }
      while (v10);
    }
  }
  v23 = 0;
LABEL_34:
  v25 = swift_bridgeObjectRelease(v9);
  v27 = (uint64_t)v37;
  v26 = v38;
  if (v23)
  {
    v28 = objc_msgSend(v23, "endDate", v25.n128_f64[0]);
    v29 = v35;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v28);

    v30 = v36;
    v31 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
    v31(v27, v29, v26);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v26);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v27, 1, v26);
    if ((_DWORD)v32 != 1)
    {

      v31(v39, (char *)v27, v26);
      return;
    }
  }
  else
  {
    v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v36 + 56))(v37, 1, 1, v38, v25);
  }
  Date.init()(v32);

  sub_10018DFE8(v27);
}

uint64_t sub_1005EF800(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v3[8] = swift_getObjectType(v2);
  v4 = type metadata accessor for Date(0);
  v3[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[10] = v5;
  v3[11] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110((uint64_t *)&unk_100828370);
  v3[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10083DDA0);
  v3[13] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[14] = v8;
  v3[15] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10083DDA8);
  v3[16] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[17] = v10;
  v3[18] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005EF8EC, 0, 0);
}

id sub_1005EF8EC()
{
  _QWORD *v0;
  id v1;
  id result;
  void *v3;
  unsigned __int8 v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = objc_msgSend((id)objc_opt_self(HKQuery), "_predicateForObjectsFromAppleWatches");
  v0[19] = v1;
  result = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(result, "isStandalonePhoneFitnessMode");

    if ((v4 & 1) != 0)
      v1 = 0;
    else
      v5 = v1;
    v7 = v0[17];
    v6 = v0[18];
    v8 = v0[16];
    v9 = v0[6];
    v10 = v0[7];
    v11 = sub_10001E724(0, &qword_100823568, HKSample_ptr);
    static HKSamplePredicate.quantitySample(type:predicate:)(v9, v1, v11);

    v12 = sub_100047110(&qword_10083DDB0);
    v13 = *(unsigned __int8 *)(v7 + 80);
    v14 = (v13 + 32) & ~v13;
    v15 = swift_allocObject(v12, v14 + *(_QWORD *)(v7 + 72), v13 | 7);
    *(_OWORD *)(v15 + 16) = xmmword_100622F90;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v15 + v14, v6, v8);
    v16 = sub_100047110(&qword_10083DDB8);
    v17 = *(_QWORD *)(sub_100047110(&qword_10083DDC0) - 8);
    v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72), *(unsigned __int8 *)(v17 + 80) | 7);
    *(_OWORD *)(v18 + 16) = xmmword_100622F90;
    KeyPath = swift_getKeyPath(&unk_100649EA8);
    SortDescriptor.init<A>(_:order:)(KeyPath, 0);
    v20 = sub_10001E724(0, (unint64_t *)&qword_100823F18, HKQuantitySample_ptr);
    HKSampleQueryDescriptor.init(predicates:sortDescriptors:limit:)(v15, v18, 1, 0, v20);
    v21 = *(_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_healthStore);
    v22 = (_QWORD *)swift_task_alloc(async function pointer to HKSampleQueryDescriptor.result(for:)[1]);
    v0[20] = v22;
    *v22 = v0;
    v22[1] = sub_1005EFB08;
    return (id)HKSampleQueryDescriptor.result(for:)(v21, v0[13]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005EFB08(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 160);
  *(_QWORD *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 176) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1005EFDB0;
  else
    v5 = sub_1005EFB74;
  return swift_task_switch(v5, 0, 0);
}

void sub_1005EFB74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 168);
  if (!((unint64_t)v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_12:
    v21 = *(_QWORD *)(v0 + 96);
    v22 = *(_QWORD *)(v0 + 72);
    v23 = *(_QWORD *)(v0 + 80);
    v24 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 168));
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(v21, 1, 1, v22, v24);
    goto LABEL_13;
  }
  if (v1 < 0)
    v19 = *(_QWORD *)(v0 + 168);
  else
    v19 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 168));
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v1);
  if (!v20)
    goto LABEL_12;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 168));
    v2 = *(_QWORD *)(v0 + 168);
LABEL_6:
    v5 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 80);
    v8 = objc_msgSend(v3, "endDate", swift_bridgeObjectRelease(v2).n128_f64[0]);

    static Date._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    v9(v4, v5, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6);
    if ((_DWORD)v10 != 1)
    {
      v36 = *(_QWORD *)(v0 + 144);
      v11 = *(_QWORD *)(v0 + 128);
      v12 = *(_QWORD *)(v0 + 136);
      v13 = *(_QWORD *)(v0 + 112);
      v14 = *(_QWORD *)(v0 + 120);
      v16 = *(_QWORD *)(v0 + 96);
      v15 = *(_QWORD *)(v0 + 104);
      v17 = *(_QWORD *)(v0 + 72);
      v18 = *(_QWORD *)(v0 + 40);

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v36, v11);
      v9(v18, v16, v17);
LABEL_14:
      v33 = *(_QWORD *)(v0 + 120);
      v35 = *(_QWORD *)(v0 + 88);
      v34 = *(_QWORD *)(v0 + 96);
      swift_task_dealloc(*(_QWORD *)(v0 + 144));
      swift_task_dealloc(v33);
      swift_task_dealloc(v34);
      swift_task_dealloc(v35);
      (*(void (**)(void))(v0 + 8))();
      return;
    }
LABEL_13:
    v25 = *(_QWORD *)(v0 + 144);
    v26 = *(void **)(v0 + 152);
    v27 = *(_QWORD *)(v0 + 128);
    v28 = *(_QWORD *)(v0 + 136);
    v30 = *(_QWORD *)(v0 + 112);
    v29 = *(_QWORD *)(v0 + 120);
    v32 = *(_QWORD *)(v0 + 96);
    v31 = *(_QWORD *)(v0 + 104);
    Date.init()(v10);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v25, v27);
    sub_10018DFE8(v32);
    goto LABEL_14;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(_QWORD *)(v0 + 168);
    v3 = *(id *)(v2 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_1005EFDB0(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  void *v3;
  os_log_type_t v4;
  _BOOL8 v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v29;
  NSObject *log;
  uint64_t v31;
  uint64_t v32;

  v2 = static os_log_type_t.error.getter(a1);
  v3 = (void *)HKLogActivity;
  v4 = v2;
  v5 = os_log_type_enabled(HKLogActivity, v2);
  if (v5)
  {
    v6 = *(_QWORD *)(v1 + 176);
    v7 = *(_QWORD *)(v1 + 64);
    v8 = *(id *)(v1 + 48);
    swift_errorRetain(v6);
    v9 = v8;
    swift_errorRetain(v6);
    log = v3;
    v10 = swift_slowAlloc(32, -1);
    v29 = (_QWORD *)swift_slowAlloc(16, -1);
    v31 = swift_slowAlloc(32, -1);
    v32 = v31;
    *(_DWORD *)v10 = 136315650;
    v11 = _typeName(_:qualified:)(v7, 0);
    v13 = v12;
    *(_QWORD *)(v1 + 16) = sub_10003E8EC(v11, v12, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v10 + 4);
    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v10 + 12) = 2112;
    *(_QWORD *)(v1 + 24) = v9;
    v14 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32, v10 + 14);
    *v29 = v9;

    *(_WORD *)(v10 + 22) = 2112;
    swift_errorRetain(v6);
    v15 = _swift_stdlib_bridgeErrorToNSError(v6);
    *(_QWORD *)(v1 + 32) = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 32, v1 + 40, v10 + 24);
    v29[1] = v15;
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, log, v4, "%s error firstQuantitySampleDate for %@: %@", (uint8_t *)v10, 0x20u);
    v16 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v29, 2, v16);
    swift_slowDealloc(v29, -1, -1);
    swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  v17 = *(_QWORD *)(v1 + 176);
  v18 = *(_QWORD *)(v1 + 144);
  v19 = *(void **)(v1 + 152);
  v20 = *(_QWORD *)(v1 + 128);
  v21 = *(_QWORD *)(v1 + 136);
  v23 = *(_QWORD *)(v1 + 112);
  v22 = *(_QWORD *)(v1 + 120);
  v24 = *(_QWORD *)(v1 + 104);
  Date.init()(v5);
  swift_errorRelease(v17);

  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v20);
  v25 = *(_QWORD *)(v1 + 120);
  v27 = *(_QWORD *)(v1 + 88);
  v26 = *(_QWORD *)(v1 + 96);
  swift_task_dealloc(*(_QWORD *)(v1 + 144));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_1005F0068(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  _QWORD aBlock[5];
  uint64_t v21;
  char v22[24];

  v4 = sub_100047110(&qword_10083DD98);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = type metadata accessor for Date(0);
  __chkstk_darwin(v7);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_mindfulnessDataProvider);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v13 = *(unsigned __int8 *)(v5 + 80);
    v14 = (v13 + 16) & ~v13;
    v15 = swift_allocObject(&unk_1007ADF10, v14 + v6, v13 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_1005F04F8;
    v21 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000197D4;
    aBlock[3] = &unk_1007ADF28;
    v16 = _Block_copy(aBlock);
    v17 = v21;
    v18 = v12;
    objc_msgSend(v18, "allMindfulnessSessionsWithCompletion:", v16, swift_release(v17).n128_f64[0]);
    _Block_release(v16);

  }
  else
  {
    Date.init()(0);
    CheckedContinuation.resume(returning:)(v9, v4);
  }
}

void sub_1005F0234(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  __n128 v16;
  id v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v22 - v10;
  if (!((unint64_t)a1 >> 62))
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v12)
      goto LABEL_3;
LABEL_15:
    v16 = swift_bridgeObjectRelease(a1);
    goto LABEL_16;
  }
  if (a1 < 0)
    v20 = a1;
  else
    v20 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v12 = _CocoaArrayWrapper.endIndex.getter(v20);
  if (!v12)
    goto LABEL_15;
LABEL_3:
  v13 = v12 - 1;
  if (__OFSUB__(v12, 1))
  {
    __break(1u);
    goto LABEL_20;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_20:
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
LABEL_8:
    v15 = v14;
    v16 = swift_bridgeObjectRelease(a1);
    if (v15)
    {
      v17 = objc_msgSend(v15, "endDate", v16.n128_f64[0]);
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v17);

      v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v18(v4, v9, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
      if ((_DWORD)v19 != 1)
      {
        v18(v11, v4, v5);
LABEL_18:
        v21 = sub_100047110(&qword_10083DD98);
        CheckedContinuation.resume(returning:)(v11, v21);

        return;
      }
LABEL_17:
      Date.init()(v19);
      sub_10018DFE8((uint64_t)v4);
      goto LABEL_18;
    }
LABEL_16:
    v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(v4, 1, 1, v5, v16);
    v15 = 0;
    goto LABEL_17;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v13 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(id *)(a1 + 8 * v13 + 32);
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1005F0468()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005F048C(uint64_t a1)
{
  uint64_t v1;

  sub_1005F0068(a1, v1);
}

uint64_t sub_1005F0494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100047110(&qword_10083DD98);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1005F04F8(uint64_t a1)
{
  sub_100047110(&qword_10083DD98);
  sub_1005F0234(a1);
}

unint64_t sub_1005F0538(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
    return specialized _ArrayBuffer._getElementSlowPath(_:)(result, a2);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return (unint64_t)*(id *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

unint64_t sub_1005F0594()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100823578;
  if (!qword_100823578)
  {
    v1 = objc_opt_self(NSDate);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100823578);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivityDashboardMetricCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1005F061C + 4 * byte_100649ED5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1005F0650 + 4 * byte_100649ED0[v4]))();
}

uint64_t sub_1005F0650(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005F0658(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005F0660);
  return result;
}

uint64_t sub_1005F066C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005F0674);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1005F0678(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005F0680(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityDashboardMetricCategory()
{
  return &type metadata for ActivityDashboardMetricCategory;
}

uint64_t getEnumTagSinglePayload for ActivityDashboardMetric(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xDA)
    goto LABEL_17;
  if (a2 + 38 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 38) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 38;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 38;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 38;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x27;
  v8 = v6 - 39;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityDashboardMetric(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 38 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 38) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xDA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD9)
    return ((uint64_t (*)(void))((char *)&loc_1005F0778 + 4 * byte_100649EDF[v4]))();
  *a1 = a2 + 38;
  return ((uint64_t (*)(void))((char *)sub_1005F07AC + 4 * byte_100649EDA[v4]))();
}

uint64_t sub_1005F07AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005F07B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005F07BCLL);
  return result;
}

uint64_t sub_1005F07C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005F07D0);
  *(_BYTE *)result = a2 + 38;
  return result;
}

uint64_t sub_1005F07D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005F07DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityDashboardMetric()
{
  return &type metadata for ActivityDashboardMetric;
}

unint64_t sub_1005F07FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083DDC8;
  if (!qword_10083DDC8)
  {
    v1 = sub_100007050(&qword_10082A318);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10083DDC8);
  }
  return result;
}

uint64_t sub_1005F0848(unsigned __int8 a1)
{
  return sub_1005F0C5C(a1, 23, 0x454D414E5FLL, (void *)0xE500000000000000);
}

uint64_t sub_1005F0860(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1005F089C + 4 * byte_100649EE4[a1]))(0x54535F4C41544F54, 0xEB00000000535045);
}

uint64_t sub_1005F089C()
{
  return 0x49445F4C41544F54;
}

uint64_t sub_1005F08C0()
{
  return 0x55505F4C41544F54;
}

unint64_t sub_1005F08E0()
{
  return 0xD000000000000019;
}

uint64_t sub_1005F0C38(unsigned __int8 a1)
{
  return sub_1005F0C5C(a1, 29, 0x4E5F54524F48535FLL, (void *)0xEB00000000454D41);
}

uint64_t sub_1005F0C5C(unsigned __int8 a1, Swift::Int a2, uint64_t a3, void *a4)
{
  Swift::String v7;
  void *object;
  Swift::String v9;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;

  _StringGuts.grow(_:)(a2);
  swift_bridgeObjectRelease(0xE000000000000000);
  v7._countAndFlagsBits = sub_1005F0860(a1);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._countAndFlagsBits = a3;
  v9._object = a4;
  String.append(_:)(v9);
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle", 0xD000000000000010);
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, 0, 0);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  swift_bridgeObjectRelease(0x80000001006AA1F0);

  return v13;
}

id sub_1005F0D88(unsigned __int8 a1)
{
  _QWORD *v1;
  uint64_t v2;

  if (a1 > 3u)
    return 0;
  v1 = *(&off_1007AE070 + (char)a1);
  v2 = sub_10001E724(0, (unint64_t *)&unk_100828350, HKSampleType_ptr);
  return objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "quantityTypeForIdentifier:", *v1);
}

uint64_t sub_1005F0DF8(unsigned __int8 a1)
{
  int v1;
  uint64_t result;

  v1 = a1 - 4;
  result = 37;
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return result;
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      result = 13;
      break;
    case 15:
    case 16:
    case 17:
    case 18:
      result = 24;
      break;
    case 19:
    case 20:
    case 21:
    case 22:
      result = 52;
      break;
    case 23:
    case 24:
    case 25:
      result = 46;
      break;
    case 26:
    case 27:
    case 28:
    case 29:
      result = 70;
      break;
    case 30:
    case 31:
    case 32:
    case 33:
      result = 71;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

void sub_1005F0E80(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6C61746F74;
  if (*v1)
    v2 = 0x65676172657661;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

void sub_1005F0EBC(char a1)
{
  __asm { BR              X10 }
}

id sub_1005F0EF4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, objc_super a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  id v21;
  void *v22;
  id v23;

  v21 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "distanceColors");
  if (!v21)
  {
    __break(1u);
    JUMPOUT(0x1005F1290);
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "nonGradientTextColor");

  if (!v23)
  {
    __break(1u);
    JUMPOUT(0x1005F0F40);
  }
  return v23;
}

unint64_t sub_1005F133C@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1005F15F8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1005F1364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1005F1608();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1005F13C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1005F1608();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_1005F140C(_QWORD *a1@<X8>)
{
  *a1 = &off_100782948;
}

unint64_t sub_1005F1420()
{
  unint64_t result;

  result = qword_10083DDD0;
  if (!qword_10083DDD0)
  {
    result = swift_getWitnessTable(&unk_10064A078, &type metadata for ActivityDashboardMetric);
    atomic_store(result, (unint64_t *)&qword_10083DDD0);
  }
  return result;
}

unint64_t sub_1005F1468()
{
  unint64_t result;

  result = qword_10083DDD8;
  if (!qword_10083DDD8)
  {
    result = swift_getWitnessTable(&unk_10064A0E0, &type metadata for ActivityDashboardMetricCategory);
    atomic_store(result, (unint64_t *)&qword_10083DDD8);
  }
  return result;
}

_QWORD *sub_1005F14AC(char a1)
{
  if ((a1 - 1) > 0x10u)
    return _swiftEmptyArrayStorage;
  else
    return off_1007AE090[(char)(a1 - 1)];
}

_QWORD *sub_1005F14DC(char a1)
{
  uint64_t v1;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 39;
  v3 = &byte_100782968;
  do
  {
    v7 = *v3++;
    v6 = v7;
    if (v7 - 4 >= 0x22)
    {
      if (v6 >= 4)
      {
        if (a1 != 2)
          goto LABEL_5;
      }
      else if (a1)
      {
        goto LABEL_5;
      }
    }
    else if (a1 != 1)
    {
      goto LABEL_5;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      sub_100121AD4(0, _swiftEmptyArrayStorage[2] + 1, 1);
    v5 = _swiftEmptyArrayStorage[2];
    v4 = _swiftEmptyArrayStorage[3];
    if (v5 >= v4 >> 1)
      sub_100121AD4(v4 > 1, v5 + 1, 1);
    _swiftEmptyArrayStorage[2] = v5 + 1;
    *((_BYTE *)&_swiftEmptyArrayStorage[4] + v5) = v6;
LABEL_5:
    --v1;
  }
  while (v1);
  return _swiftEmptyArrayStorage;
}

unint64_t sub_1005F15F8(unint64_t result)
{
  if (result >= 0x27)
    return 39;
  return result;
}

unint64_t sub_1005F1608()
{
  unint64_t result;

  result = qword_10083DDE0;
  if (!qword_10083DDE0)
  {
    result = swift_getWitnessTable(&unk_10064A040, &type metadata for ActivityDashboardMetric);
    atomic_store(result, (unint64_t *)&qword_10083DDE0);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC10FitnessAppP33_D5007B55BC718C31F12B13DCC989E22B19ResourceBundleClass);
}

BOOL sub_1005F166C(int a1, int a2, int a3)
{
  BOOL v6;

  if (qword_100869BC0 == -1)
  {
    v6 = dword_100869BB0 < a1;
    if (dword_100869BB0 > a1)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_100869BC0, 0, (dispatch_function_t)sub_1005F1754);
    v6 = dword_100869BB0 < a1;
    if (dword_100869BB0 > a1)
      return 1;
  }
  if (v6)
    return 0;
  if (dword_100869BB4 > a2)
    return 1;
  return dword_100869BB4 >= a2 && dword_100869BB8 >= a3;
}

uint64_t sub_1005F1754()
{
  return sub_1005F18EC(1);
}

uint64_t sub_1005F175C(int a1, int a2, int a3, int a4)
{
  BOOL v9;
  _DWORD v10[2];

  if (qword_100869BC8 == -1)
  {
    if (qword_100869BD0)
    {
LABEL_3:
      v10[0] = a1;
      v10[1] = (a2 << 16) | (a3 << 8) | a4;
      return _availability_version_check(1, v10);
    }
  }
  else
  {
    dispatch_once_f(&qword_100869BC8, 0, (dispatch_function_t)sub_1005F18E4);
    if (qword_100869BD0)
      goto LABEL_3;
  }
  if (qword_100869BC0 == -1)
  {
    v9 = dword_100869BB0 < a2;
    if (dword_100869BB0 > a2)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_100869BC0, 0, (dispatch_function_t)sub_1005F1754);
    v9 = dword_100869BB0 < a2;
    if (dword_100869BB0 > a2)
      return 1;
  }
  if (v9)
    return 0;
  if (dword_100869BB4 > a3)
    return 1;
  return dword_100869BB4 >= a3 && dword_100869BB8 >= a4;
}

uint64_t sub_1005F18E4()
{
  return sub_1005F18EC(0);
}

uint64_t sub_1005F18EC(uint64_t result)
{
  void *v1;
  BOOL v2;
  unsigned __int8 *v4;
  uint64_t (*v5)(_QWORD);
  unint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t, _QWORD, _QWORD);
  uint64_t (*v8)(_QWORD, const char *, uint64_t, unsigned __int8 *);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(void);
  FILE *v12;
  FILE *v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  FILE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  FILE *v27;
  unsigned int (*v28)(uint64_t, char *, uint64_t, uint64_t);
  char v29[32];

  v1 = (void *)qword_100869BD0;
  if (qword_100869BD0)
    v2 = (_DWORD)result == 0;
  else
    v2 = 0;
  if (!v2)
  {
    if (&__availability_version_check)
    {
      qword_100869BD0 = (uint64_t)&__availability_version_check;
      v1 = &__availability_version_check;
    }
    if (!v1 || (_DWORD)result != 0)
    {
      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        v4 = *(unsigned __int8 **)result;
        result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          v5 = (uint64_t (*)(_QWORD))result;
          v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            v7 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))result;
            result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              v8 = (uint64_t (*)(_QWORD, const char *, uint64_t, unsigned __int8 *))result;
              result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  v10 = (uint64_t (*)(uint64_t))result;
                  result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    v11 = (uint64_t (*)(void))result;
                    result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        v12 = (FILE *)result;
                        result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          v13 = (FILE *)result;
                          v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          v14 = ftell(v13);
                          if (v14 < 0)
                          {
                            v16 = 0;
                          }
                          else
                          {
                            v15 = v14;
                            rewind(v13);
                            v16 = malloc(v15);
                            if (v16)
                            {
                              v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                v17 = v5(0);
                                if (v17)
                                {
                                  v18 = v17;
                                  v19 = v13;
                                  if (v6)
                                    v20 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))v6)(0, v17, 0, 0, 0);
                                  else
                                    v20 = v7(0, v17, 0, 0);
                                  v21 = v20;
                                  if (v20)
                                  {
                                    v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      v23 = v22;
                                      v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984))
                                            sscanf(v29, "%d.%d.%d", &dword_100869BB0, &dword_100869BB4, &dword_100869BB8);
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  v19 = v13;
                                }
                                v16 = v26;
                              }
                              else
                              {
                                v16 = v26;
                                v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1005F1C1C(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "[AppProtection] bundleIdentifier hidden, hiding app icon", v1, 2u);
}

uint64_t sub_1005F1C5C()
{
  char *v0;
  int v1;
  int v2;
  os_log_t v3;

  v0 = dlerror();
  v1 = abort_report_np("%s", v0);
  return sub_1005F1C7C(v1, v2, v3);
}

void sub_1005F1C7C(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = 138543618;
  v5 = v3;
  v6 = 2114;
  v7 = a2;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "[sharing-setup] %{public}@ Failed to complete end to end Cloud sync with error: %{public}@", (uint8_t *)&v4, 0x16u);
}

void sub_1005F1D04(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Existing move goal lookup failed with error %@", (uint8_t *)&v2, 0xCu);
}

void sub_1005F1D78(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Existing move goal lookup timed out", v1, 2u);
}

void sub_1005F1DB8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100067C50();
  sub_100067C24((void *)&_mh_execute_header, v0, v1, "Error reading activity mode characteristic with error=%@", v2, v3, v4, v5, v6);
  sub_100067C34();
}

void sub_1005F1E18(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Saving first daily goals and activity move mode timed out.", v1, 2u);
}

void sub_1005F1E58()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_100067C50();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "[sharing-setup] Failed to complete end to end Cloud sync with error: %{public}@", v1, 0xCu);
  sub_100067C34();
}

void sub_1005F1EC4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100067C50();
  sub_100067C24((void *)&_mh_execute_header, v0, v1, "[sharing-setup] Could not force nano sync after saving activity goals: %{public}@", v2, v3, v4, v5, v6);
  sub_100067C34();
}

void sub_1005F1F24()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100067C50();
  sub_100067C24((void *)&_mh_execute_header, v0, v1, "Error deleting goal schedule: %@", v2, v3, v4, v5, v6);
  sub_100067C34();
}

void sub_1005F1F84()
{
  uint64_t v0;
  os_log_t v1;

  sub_100067C5C();
  sub_100067C3C((void *)&_mh_execute_header, v0, v1, "Failed to fetch most recent sample for type %@ error %@");
  sub_100067C34();
}

void sub_1005F1FE8()
{
  uint64_t v0;
  os_log_t v1;

  sub_100067C5C();
  sub_100067C3C((void *)&_mh_execute_header, v0, v1, "Failed to fetch most recent samples for type %@ error %@");
  sub_100067C34();
}

void sub_1005F204C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100067C50();
  sub_100067C24((void *)&_mh_execute_header, v0, v1, "Error deleting existing goal schedule: %@", v2, v3, v4, v5, v6);
  sub_100067C34();
}

void sub_1005F20AC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100067C50();
  sub_100067C24((void *)&_mh_execute_header, v0, v1, "Error saving goal schedule: %@", v2, v3, v4, v5, v6);
  sub_100067C34();
}

void sub_1005F210C(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Some destinations unreachable showing alert", v1, 2u);
}

void sub_1005F214C(uint64_t a1, char a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  int v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 1024;
  v6 = a2 & 1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error sending invite (%@), destination unreachable=%d", (uint8_t *)&v3, 0x12u);
}

void sub_1005F21D4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100067C24((void *)&_mh_execute_header, a2, a3, "Error getting heart rate for workout: %@", a5, a6, a7, a8, 2u);
  sub_100067C34();
}

void sub_1005F2238(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100067C24((void *)&_mh_execute_header, a2, a3, "Error getting recovery heart rates: %{public}@", a5, a6, a7, a8, 2u);
  sub_100067C34();
}

void sub_1005F229C(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = 138412546;
  v5 = v3;
  v6 = 2112;
  v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error getting data (%@) for workout: %@", (uint8_t *)&v4, 0x16u);
  sub_100067C34();
}

void sub_1005F2320()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10007C1E8();
  sub_10007C1D0((void *)&_mh_execute_header, v0, v1, "[Workout Data Calculator] Did get an error back from effort observer query. Nil'ing it out and will respin next time.", v2, v3, v4, v5, v6);
  sub_10007C1E0();
}

void sub_1005F234C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10007C1E8();
  sub_10007C1D0((void *)&_mh_execute_header, v0, v1, "Remainder distance should never be negative", v2, v3, v4, v5, v6);
  sub_10007C1E0();
}

void sub_1005F2378()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10007C1E8();
  sub_10007C1D0((void *)&_mh_execute_header, v0, v1, "Remainder should not be greater than splitDelimiter, should have been apportioned to its own split", v2, v3, v4, v5, v6);
  sub_10007C1E0();
}

void sub_1005F23A4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10007C1E8();
  sub_10007C1D0((void *)&_mh_execute_header, v0, v1, "Cannot calculate splits for nil distance samples or stroke samples. Returning empty splits", v2, v3, v4, v5, v6);
  sub_10007C1E0();
}

void sub_1005F23D0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10007C1E8();
  sub_10007C1D0((void *)&_mh_execute_header, v0, v1, "Cannot calculate splits for empty distance samples. Returning empty splits", v2, v3, v4, v5, v6);
  sub_10007C1E0();
}

void sub_1005F23FC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10007C1E8();
  sub_10007C1D0((void *)&_mh_execute_header, v0, v1, "Failed to properly interpolate stroke samples. Bailing.", v2, v3, v4, v5, v6);
  sub_10007C1E0();
}

void sub_1005F2428(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10007C1D0((void *)&_mh_execute_header, a1, a3, "Failed to open knowledge base URL for no-heart-rate view with current locale.", a5, a6, a7, a8, 0);
}

void sub_1005F245C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10007C1D0((void *)&_mh_execute_header, a1, a3, "Failed to open knowledge base URL for no-heart-rate view with en_US locale. Giving up.", a5, a6, a7, a8, 0);
}

void sub_1005F2490(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100081EE0((void *)&_mh_execute_header, a2, a3, "CHASActivitySetupMetricsCollectionViewController found unexpected presentation context %ld", a5, a6, a7, a8, 0);
  sub_100067C34();
}

void sub_1005F24F8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100067C24((void *)&_mh_execute_header, a2, a3, "CHASActivitySetupMetricsCollectionViewController failed to fetch move goal with error %@", a5, a6, a7, a8, 2u);
  sub_100067C34();
}

void sub_1005F255C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100067C24((void *)&_mh_execute_header, a2, a3, "CHASActivitySetupMetricsCollectionViewController failed to fetch exercise and stand goals with error %@", a5, a6, a7, a8, 2u);
  sub_100067C34();
}

void sub_1005F25C0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100067C24((void *)&_mh_execute_header, a2, a3, "CHASActivitySetupMetricsCollectionViewController failed to fetch pre-Kincaid move goal with error %@", a5, a6, a7, a8, 2u);
  sub_100067C34();
}

void sub_1005F2624(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to animate tableView reloading.", v1, 2u);
}

void sub_1005F2664(uint64_t a1, void *a2, uint64_t a3)
{
  void *v4;
  NSObject *v5;
  void *v6;
  int v7;
  void *v8;
  __int16 v9;
  uint64_t v10;

  v4 = *(void **)(a1 + 32);
  v5 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "UUID"));
  v7 = 138412546;
  v8 = v6;
  v9 = 2112;
  v10 = a3;
  _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error deleting workout: %@: %@", (uint8_t *)&v7, 0x16u);

}

void sub_1005F2720()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100067C50();
  sub_100067C24((void *)&_mh_execute_header, v0, v1, "CHMoveModeUtilities failed to save activity move mode change: %{public}@", v2, v3, v4, v5, v6);
  sub_100067C34();
}

void sub_1005F2780()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100067C50();
  sub_100067C24((void *)&_mh_execute_header, v0, v1, "CHMoveModeUtilities failed to save new move goal and default exercise/stand goals for activity move mode: %{public}@", v2, v3, v4, v5, v6);
  sub_100067C34();
}

void sub_1005F27E0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100067C50();
  sub_100067C24((void *)&_mh_execute_header, v0, v1, "CHMoveModeUtilities failed to force cloud sync after saving activity move mode: %{public}@", v2, v3, v4, v5, v6);
  sub_100067C34();
}

void sub_1005F2840()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100067C50();
  sub_100067C24((void *)&_mh_execute_header, v0, v1, "CHMoveModeUtilities failed to force nano sync after saving activity move mode: %{public}@", v2, v3, v4, v5, v6);
  sub_100067C34();
}

void sub_1005F28A0(uint64_t *a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *a1;
  v3 = 138543362;
  v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to fetch watch accounts info with error: %{public}@", (uint8_t *)&v3, 0xCu);
}

void sub_1005F2918()
{
  __assert_rtn("-[CHWorkoutDetailDataSource _registerCellClasses]", "CHWorkoutDetailDataSource.m", 479, "self.cellClassesBySection.count == CHWorkoutDetailSectionRowCount");
}

void sub_1005F2940()
{
  __assert_rtn("-[CHWorkoutDetailDataSource _createTableItems]", "CHWorkoutDetailDataSource.m", 542, "self.tableSectionHeaders.count == CHWorkoutDetailSectionRowCount");
}

void sub_1005F2968(void *a1, uint64_t a2, double a3)
{
  NSObject *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  _UNKNOWN **v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  _UNKNOWN **v15;

  v5 = a1;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a2));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", a3));
  v8 = 138544130;
  v9 = v6;
  v10 = 2114;
  v11 = &off_1007B3CB0;
  v12 = 2114;
  v13 = v7;
  v14 = 2114;
  v15 = &off_1007B3F50;
  _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Workout heart rate chart unavailable for statistics pairs with data: %{public}@, mininum required: %{public}@, readings/min: %{public}@, minimum required: %{public}@", (uint8_t *)&v8, 0x2Au);

}

void sub_1005F2A70(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to retrieve activity item providers for seymour workout: %@. Falling back to sharing generic workout", (uint8_t *)&v2, 0xCu);
}

void sub_1005F2AE4(uint64_t a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = 138412290;
  v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "No result returned from AMS for bundle ID %@", (uint8_t *)&v3, 0xCu);
}

void sub_1005F2B5C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = 138412546;
  v5 = v3;
  v6 = 2112;
  v7 = a2;
  sub_1000AB4CC((void *)&_mh_execute_header, a3, (uint64_t)a3, "Fetching app info for bundle ID %@ failed with error %@", (uint8_t *)&v4);
}

void sub_1005F2BDC(void *a1, uint64_t a2)
{
  NSObject *v3;
  id v4;
  void *v5;
  uint64_t v6;
  int v7;
  void *v8;
  __int16 v9;
  uint64_t v10;

  v3 = a1;
  v4 = sub_1000AA158();
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v7 = 138412546;
  v8 = v5;
  v9 = 2112;
  v10 = a2;
  sub_1000AB4CC((void *)&_mh_execute_header, v3, v6, "Failed to create (%@) dir: %@", (uint8_t *)&v7);

}

void sub_1005F2C88()
{
  uint64_t v0;
  os_log_t v1;

  sub_1000AF154();
  sub_100067C3C((void *)&_mh_execute_header, v0, v1, "[FASC] An error occurred in initial fetch of activity summary query %@. Error: %@");
}

void sub_1005F2CEC()
{
  uint64_t v0;
  os_log_t v1;

  sub_1000AF154();
  sub_100067C3C((void *)&_mh_execute_header, v0, v1, "[FASC] An error occurred in update handler of activity summary query %@. Error: %@");
}

void sub_1005F2D50(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[CHWorkoutDataProvider] Error updating workouts: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1005F2DC4(void **a1, void *a2)
{
  void *v2;
  NSObject *v3;
  int v4;
  id v5;

  v2 = *a1;
  v3 = a2;
  v4 = 134217984;
  v5 = objc_msgSend(v2, "currentPhase");
  _os_log_fault_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "PhoneSceneDelegate found unexpected onboarding phase %ld", (uint8_t *)&v4, 0xCu);

}

void sub_1005F2E5C(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Data collection preference: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1005F2ED0(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error reading data from workout sharing URL: %@ error: %@", (uint8_t *)&v3, 0x16u);
}

void sub_1005F2F54()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10007C1E8();
  sub_10007C1D0((void *)&_mh_execute_header, v0, v1, "Not able to get sandbox using startAccessingSecurityScopedResource. Reading file might not work.", v2, v3, v4, v5, v6);
  sub_10007C1E0();
}

void sub_1005F2F80()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10007C1E8();
  sub_10007C1D0((void *)&_mh_execute_header, v0, v1, "[seymour] failed to navigate to tab", v2, v3, v4, v5, v6);
  sub_10007C1E0();
}

void sub_1005F2FAC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10007C1E8();
  sub_10007C1D0((void *)&_mh_execute_header, v0, v1, "[seymour] Failed to select tab", v2, v3, v4, v5, v6);
  sub_10007C1E0();
}

void sub_1005F2FD8(int a1, NSObject *a2)
{
  _DWORD v2[2];

  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unknown Fitness Coaching notification type (%d)", (uint8_t *)v2, 8u);
  sub_10007C1E0();
}

void sub_1005F3048()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10007C1E8();
  sub_10007C1D0((void *)&_mh_execute_header, v0, v1, "Invalid Fitness Coaching notification type", v2, v3, v4, v5, v6);
  sub_10007C1E0();
}

void sub_1005F3074()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10007C1E8();
  sub_10007C1D0((void *)&_mh_execute_header, v0, v1, "Invalid Fitness Coaching goal recommendation", v2, v3, v4, v5, v6);
  sub_10007C1E0();
}

void sub_1005F30A0(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = 138543362;
  v4 = a1;
  sub_1000D362C((void *)&_mh_execute_header, a2, a3, "Couldn't find friend list section for date: %{public}@", (uint8_t *)&v3);
}

void sub_1005F310C(void *a1, void *a2)
{
  NSObject *v3;
  void *v4;
  uint64_t v5;
  int v6;
  void *v7;

  v3 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "UUID"));
  v6 = 138543362;
  v7 = v4;
  sub_1000D362C((void *)&_mh_execute_header, v3, v5, "Couldn't find row for friend with UUID: %{public}@", (uint8_t *)&v6);

}

void sub_1005F31A8(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "No valid address, cannot send invitation", v1, 2u);
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGColor");
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGImage");
}

id objc_msgSend_CGSizeValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGSizeValue");
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URL");
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLContexts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLContexts");
}

id objc_msgSend_URLWithSize_cropStyle_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithSize:cropStyle:format:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UTF8String");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUID");
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUIDString");
}

id objc_msgSend__accessibilitySetInterfaceStyleIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilitySetInterfaceStyleIntent:");
}

id objc_msgSend__activeDateIntervals_containsDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeDateIntervals:containsDate:");
}

id objc_msgSend__activeDateIntervalsForWorkout_during_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeDateIntervalsForWorkout:during:");
}

id objc_msgSend__activeDateIntervalsForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeDateIntervalsForWorkout:workoutActivity:");
}

id objc_msgSend__activeDateIntervalsForWorkoutActivity_during_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeDateIntervalsForWorkoutActivity:during:");
}

id objc_msgSend__activeDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeDuration");
}

id objc_msgSend__activeEnergyInfoForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeEnergyInfoForWorkout:");
}

id objc_msgSend__activeWorkoutElapsedTimeFromDate_toDate_forWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeWorkoutElapsedTimeFromDate:toDate:forWorkout:workoutActivity:");
}

id objc_msgSend__activityGoalTypeForCurrentPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activityGoalTypeForCurrentPage");
}

id objc_msgSend__activityLevelView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activityLevelView");
}

id objc_msgSend__activityMoveMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activityMoveMode");
}

id objc_msgSend__activityMoveModeWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activityMoveModeWithError:");
}

id objc_msgSend__activitySharingIsSetup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activitySharingIsSetup");
}

id objc_msgSend__activitySummaryIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activitySummaryIndex");
}

id objc_msgSend__add_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_add:");
}

id objc_msgSend__addAndRearrangeWeekviewsAndGroups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAndRearrangeWeekviewsAndGroups");
}

id objc_msgSend__addDataProviderUpdateHandlers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addDataProviderUpdateHandlers");
}

id objc_msgSend__addLayoutConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addLayoutConstraints");
}

id objc_msgSend__addSuggestedContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSuggestedContact:");
}

id objc_msgSend__animateRingOnTouch_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateRingOnTouch:completion:");
}

id objc_msgSend__animateToTappedState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateToTappedState:");
}

id objc_msgSend__applicationIconImageForBundleIdentifier_format_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationIconImageForBundleIdentifier:format:scale:");
}

id objc_msgSend__autocompleteSharedContactStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_autocompleteSharedContactStore");
}

id objc_msgSend__averageHeartRateQuantityFromWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_averageHeartRateQuantityFromWorkout:workoutActivity:");
}

id objc_msgSend__backdropViewLayerGroupName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_backdropViewLayerGroupName");
}

id objc_msgSend__beatsPerMinute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beatsPerMinute");
}

id objc_msgSend__bodyMassCharacteristicQuantityWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyMassCharacteristicQuantityWithError:");
}

id objc_msgSend__buildFreshViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildFreshViews");
}

id objc_msgSend__cachedPhoneCloudKitAccountStatusIsActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachedPhoneCloudKitAccountStatusIsActive");
}

id objc_msgSend__cachedWatchCloudKitAccountAssumedToExist(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachedWatchCloudKitAccountAssumedToExist");
}

id objc_msgSend__cachedWatchCloudKitAccountStatusIsActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachedWatchCloudKitAccountStatusIsActive");
}

id objc_msgSend__calculateLastVisibleDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateLastVisibleDate");
}

id objc_msgSend__calculateSectionContentOffsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateSectionContentOffsets");
}

id objc_msgSend__calculateStatistics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateStatistics");
}

id objc_msgSend__centerForRingAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_centerForRingAtIndex:");
}

id objc_msgSend__centerXForRingAt_percent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_centerXForRingAt:percent:");
}

id objc_msgSend__checkCurrentMonth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkCurrentMonth");
}

id objc_msgSend__checkPairedWatchIsMinimumVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkPairedWatchIsMinimumVersion");
}

id objc_msgSend__checkReachableForContact_withDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkReachableForContact:withDestination:");
}

id objc_msgSend__clearWeeklyGoalDisplayContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearWeeklyGoalDisplayContext");
}

id objc_msgSend__clearWindowSceneAndOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearWindowSceneAndOptions");
}

id objc_msgSend__cloudKitAccountsAreActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cloudKitAccountsAreActive");
}

id objc_msgSend__commonConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commonConstraints");
}

id objc_msgSend__commonInit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commonInit");
}

id objc_msgSend__configureWorkoutHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureWorkoutHandler");
}

id objc_msgSend__constrainViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_constrainViews");
}

id objc_msgSend__constructKBURLWithLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_constructKBURLWithLocale:");
}

id objc_msgSend__contact_hasEmailDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contact:hasEmailDestination:");
}

id objc_msgSend__contact_hasPhoneNumberDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contact:hasPhoneNumberDestination:");
}

id objc_msgSend__countPerMinuteUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_countPerMinuteUnit");
}

id objc_msgSend__countWorkouts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_countWorkouts");
}

id objc_msgSend__createAndAddSubviews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAndAddSubviews");
}

id objc_msgSend__createAverageHeartRateLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAverageHeartRateLabel");
}

id objc_msgSend__createAwardSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAwardSection");
}

id objc_msgSend__createBurnBarSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createBurnBarSection");
}

id objc_msgSend__createCatalogItemViewModelIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createCatalogItemViewModelIfNeeded");
}

id objc_msgSend__createContentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createContentView");
}

id objc_msgSend__createDiveSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDiveSection");
}

id objc_msgSend__createDownhillRunsSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDownhillRunsSection");
}

id objc_msgSend__createEffortSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createEffortSection");
}

id objc_msgSend__createExpandButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createExpandButton");
}

id objc_msgSend__createGoalViewWithFrame_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createGoalViewWithFrame:configuration:");
}

id objc_msgSend__createGuidedRunMediaMomentsSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createGuidedRunMediaMomentsSection");
}

id objc_msgSend__createHeartRateSectionWithHeartRateReadings_averageHeartRate_recoveryHeartRateReadings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createHeartRateSectionWithHeartRateReadings:averageHeartRate:recoveryHeartRateReadings:");
}

id objc_msgSend__createIntervalsSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createIntervalsSection");
}

id objc_msgSend__createLabels(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createLabels");
}

id objc_msgSend__createLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createLayout");
}

id objc_msgSend__createMultiSportSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createMultiSportSection");
}

id objc_msgSend__createOrbActions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createOrbActions");
}

id objc_msgSend__createPeoplePicker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPeoplePicker");
}

id objc_msgSend__createPowerSectionWithPowerSamples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPowerSectionWithPowerSamples:");
}

id objc_msgSend__createRingsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRingsView");
}

id objc_msgSend__createRootViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRootViewController");
}

id objc_msgSend__createRouteAndWeatherCellIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRouteAndWeatherCellIfNeeded");
}

id objc_msgSend__createRouteAndWeatherSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRouteAndWeatherSection");
}

id objc_msgSend__createSegmentedControl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSegmentedControl");
}

id objc_msgSend__createSegmentsSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSegmentsSection");
}

id objc_msgSend__createSeparator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSeparator");
}

id objc_msgSend__createSplitsSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSplitsSection");
}

id objc_msgSend__createSubItemsForWorkoutMetrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSubItemsForWorkoutMetrics");
}

id objc_msgSend__createSummarySection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSummarySection");
}

id objc_msgSend__createSwimSetsSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSwimSetsSection");
}

id objc_msgSend__createTableItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createTableItems");
}

id objc_msgSend__createTitleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createTitleLabel");
}

id objc_msgSend__createTrackLapsSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createTrackLapsSection");
}

id objc_msgSend__createValuesSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createValuesSection");
}

id objc_msgSend__currentPageHasGoalSchedule(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentPageHasGoalSchedule");
}

id objc_msgSend__currentWeekStartDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentWeekStartDate");
}

id objc_msgSend__dateInterval(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dateInterval");
}

id objc_msgSend__dayDateFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dayDateFormatter");
}

id objc_msgSend__dayViewDisplayContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dayViewDisplayContext");
}

id objc_msgSend__decimalNumberFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decimalNumberFormatter");
}

id objc_msgSend__deleteObjects_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteObjects:options:completion:");
}

id objc_msgSend__deleteWorkoutAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteWorkoutAtIndexPath:");
}

id objc_msgSend__descriptionForOutgoingInvites_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_descriptionForOutgoingInvites:");
}

id objc_msgSend__destinationAddressesForCurrentAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_destinationAddressesForCurrentAccount");
}

id objc_msgSend__destinationMatchesCurrentAccountDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_destinationMatchesCurrentAccountDestination:");
}

id objc_msgSend__determinePresentationContextIfNeededWithHealthStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_determinePresentationContextIfNeededWithHealthStore:");
}

id objc_msgSend__dismissAndNotifyDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissAndNotifyDelegate");
}

id objc_msgSend__dismissKeyboard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissKeyboard:");
}

id objc_msgSend__distanceInfoForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_distanceInfoForWorkout:");
}

id objc_msgSend__durationInfoForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_durationInfoForWorkout:");
}

id objc_msgSend__emptyContact(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_emptyContact");
}

id objc_msgSend__emptyItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_emptyItem");
}

id objc_msgSend__endEditingAndDiscardChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endEditingAndDiscardChanges:");
}

id objc_msgSend__endValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endValue");
}

id objc_msgSend__enumerateActiveTimePeriods_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateActiveTimePeriods:");
}

id objc_msgSend__executeBlockWaitingOnFriendsDataIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeBlockWaitingOnFriendsDataIfNeeded");
}

id objc_msgSend__exerciseGoalViewConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_exerciseGoalViewConfiguration");
}

id objc_msgSend__exerciseQuantityForToday(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_exerciseQuantityForToday");
}

id objc_msgSend__existingActivityGoalScheduleForCurrentPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_existingActivityGoalScheduleForCurrentPage");
}

id objc_msgSend__fetchBurnBarScoreSummary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchBurnBarScoreSummary");
}

id objc_msgSend__fetchChicletWithParameters_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchChicletWithParameters:completion:");
}

id objc_msgSend__fetchHeartRateDataForWorkout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchHeartRateDataForWorkout:workoutActivity:completion:");
}

id objc_msgSend__fetchIconForConnectedGymWorkout_context_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchIconForConnectedGymWorkout:context:completion:");
}

id objc_msgSend__fetchIconForFirstPartyWorkout_context_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchIconForFirstPartyWorkout:context:completion:");
}

id objc_msgSend__fetchIconForThirdPartyWorkout_context_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchIconForThirdPartyWorkout:context:completion:");
}

id objc_msgSend__fetchIconFromLaunchServicesWithParameters_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchIconFromLaunchServicesWithParameters:completion:");
}

id objc_msgSend__fetchIconFromNRGWithParameters_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchIconFromNRGWithParameters:completion:");
}

id objc_msgSend__fetchMostRecentExerciseGoalSampleWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchMostRecentExerciseGoalSampleWithCompletion:");
}

id objc_msgSend__fetchMostRecentGoalSchedulesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchMostRecentGoalSchedulesWithCompletion:");
}

id objc_msgSend__fetchMostRecentMoveGoalSampleWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchMostRecentMoveGoalSampleWithCompletion:");
}

id objc_msgSend__fetchMostRecentSampleForQuantityType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchMostRecentSampleForQuantityType:completion:");
}

id objc_msgSend__fetchMostRecentStandGoalSampleWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchMostRecentStandGoalSampleWithCompletion:");
}

id objc_msgSend__fetchPhoneIconForWorkout_context_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchPhoneIconForWorkout:context:completion:");
}

id objc_msgSend__fetchPreferredTrackDistanceUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchPreferredTrackDistanceUnit");
}

id objc_msgSend__fetchRingImageForWorkout_context_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchRingImageForWorkout:context:completion:");
}

id objc_msgSend__fetchRoundIconWithParameters_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchRoundIconWithParameters:completion:");
}

id objc_msgSend__fetchWatchIconForWorkout_context_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchWatchIconForWorkout:context:completion:");
}

id objc_msgSend__filterMenu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_filterMenu");
}

id objc_msgSend__findCenteredWeekAndUpdateTitleIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findCenteredWeekAndUpdateTitleIfNecessary");
}

id objc_msgSend__firstBaselineOffsetFromTop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_firstBaselineOffsetFromTop");
}

id objc_msgSend__fitGoalLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fitGoalLabel");
}

id objc_msgSend__fitnessDataCollectionEnabledPreference(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fitnessDataCollectionEnabledPreference");
}

id objc_msgSend__fitnessModeRequiresWatchSetup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fitnessModeRequiresWatchSetup");
}

id objc_msgSend__fitsWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fitsWidth:");
}

id objc_msgSend__fontForSectionHeaderType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fontForSectionHeaderType:");
}

id objc_msgSend__formatGoalLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_formatGoalLabel");
}

id objc_msgSend__formattedDateForDetailWithWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_formattedDateForDetailWithWorkout:");
}

id objc_msgSend__formattedDateForListViewWithWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_formattedDateForListViewWithWorkout:");
}

id objc_msgSend__formattedDescriptionForDayViewWithWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_formattedDescriptionForDayViewWithWorkout:");
}

id objc_msgSend__formattedDescriptionForListViewWithWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_formattedDescriptionForListViewWithWorkout:");
}

id objc_msgSend__formattedDistanceStringForWorkout_distanceString_unitString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_formattedDistanceStringForWorkout:distanceString:unitString:");
}

id objc_msgSend__formattedGoalForDetailViewWithWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_formattedGoalForDetailViewWithWorkout:");
}

id objc_msgSend__formattedValueString_withUnitString_paceFormat_context_color_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_formattedValueString:withUnitString:paceFormat:context:color:");
}

id objc_msgSend__formattingManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_formattingManager");
}

id objc_msgSend__fractionToFillTotalSplitDelimiterDistance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fractionToFillTotalSplitDelimiterDistance");
}

id objc_msgSend__friendDetailDisplayContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_friendDetailDisplayContext");
}

id objc_msgSend__geocoder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_geocoder");
}

id objc_msgSend__getAndHandlePhoneCloudKitAccountStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getAndHandlePhoneCloudKitAccountStatus");
}

id objc_msgSend__getAndHandleWatchCloudKitAccountStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getAndHandleWatchCloudKitAccountStatus");
}

id objc_msgSend__getDayWithTouches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getDayWithTouches:");
}

id objc_msgSend__goalCompletionEventsForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_goalCompletionEventsForWorkout:");
}

id objc_msgSend__goalStringForWorkout_outValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_goalStringForWorkout:outValue:");
}

id objc_msgSend__goalType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_goalType");
}

id objc_msgSend__groundElevationFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_groundElevationFont");
}

id objc_msgSend__groundElevationHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_groundElevationHeight");
}

id objc_msgSend__guessedKindForString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_guessedKindForString:");
}

id objc_msgSend__handleActivityShareShortcut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleActivityShareShortcut");
}

id objc_msgSend__handleActivitySharingURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleActivitySharingURL:");
}

id objc_msgSend__handleFriendsShortcut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleFriendsShortcut");
}

id objc_msgSend__handleHistoryShortcut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleHistoryShortcut");
}

id objc_msgSend__handleInitialResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleInitialResults:");
}

id objc_msgSend__handleLocations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLocations:");
}

id objc_msgSend__handleRemovedObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemovedObjects:");
}

id objc_msgSend__handleSettingsShortcut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSettingsShortcut");
}

id objc_msgSend__handleShortcutItem_didJustLaunch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleShortcutItem:didJustLaunch:");
}

id objc_msgSend__handleTodayShortcut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleTodayShortcut");
}

id objc_msgSend__handleTrendsShortcut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleTrendsShortcut");
}

id objc_msgSend__handleUpdatedRelationships_withAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdatedRelationships:withAnchor:");
}

id objc_msgSend__handleWatchStatusAndCloudKitAccountStatusChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleWatchStatusAndCloudKitAccountStatusChange");
}

id objc_msgSend__handleWorkoutConfigurationURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleWorkoutConfigurationURL:");
}

id objc_msgSend__hasFirstPartyBundleID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasFirstPartyBundleID");
}

id objc_msgSend__headerConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_headerConfiguration");
}

id objc_msgSend__heightOffsetForWeekRow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_heightOffsetForWeekRow:");
}

id objc_msgSend__hideSetupControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hideSetupControllerAnimated:");
}

id objc_msgSend__horizontalConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_horizontalConstraints");
}

id objc_msgSend__indexPathAdjustedForSummaryCellForRow_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexPathAdjustedForSummaryCellForRow:inSection:");
}

id objc_msgSend__indexPathsToInsertForSection_deletedIndexPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexPathsToInsertForSection:deletedIndexPaths:");
}

id objc_msgSend__indexPathsToInsertWithSectionSet_deletedIndexPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexPathsToInsertWithSectionSet:deletedIndexPaths:");
}

id objc_msgSend__indexPathsToRemoveForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexPathsToRemoveForSection:");
}

id objc_msgSend__indexPathsToRemoveWithSectionSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexPathsToRemoveWithSectionSet:");
}

id objc_msgSend__init(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_init");
}

id objc_msgSend__insertBurnBarSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertBurnBarSection");
}

id objc_msgSend__insertDownhillRunsSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertDownhillRunsSection");
}

id objc_msgSend__insertGuidedRunMediaMomentsSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertGuidedRunMediaMomentsSection");
}

id objc_msgSend__insertHeartRateSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertHeartRateSection");
}

id objc_msgSend__insertHeartRateSubItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertHeartRateSubItem");
}

id objc_msgSend__insertIntervalsSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertIntervalsSection");
}

id objc_msgSend__insertMultiSportSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertMultiSportSection");
}

id objc_msgSend__insertPowerSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertPowerSection");
}

id objc_msgSend__insertSegmentsSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertSegmentsSection");
}

id objc_msgSend__insertSplitsSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertSplitsSection");
}

id objc_msgSend__insertSwimSetsSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertSwimSetsSection");
}

id objc_msgSend__insertTrackLapsSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertTrackLapsSection");
}

id objc_msgSend__inviteFriends(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_inviteFriends");
}

id objc_msgSend__isAppleWatch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAppleWatch");
}

id objc_msgSend__isCompetitionSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCompetitionSection:");
}

id objc_msgSend__isContactsAccessAuthorized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isContactsAccessAuthorized");
}

id objc_msgSend__isDataHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isDataHidden");
}

id objc_msgSend__isExtendedMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isExtendedMode");
}

id objc_msgSend__isGoalSchedule_theSameAs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isGoalSchedule:theSameAs:");
}

id objc_msgSend__isIndexPathEditable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isIndexPathEditable:");
}

id objc_msgSend__isLastVisibleWeek_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isLastVisibleWeek:");
}

id objc_msgSend__isManagedAppleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isManagedAppleId:");
}

id objc_msgSend__isSetupViewControllerVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isSetupViewControllerVisible");
}

id objc_msgSend__isStandalonePhoneFitnessMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isStandalonePhoneFitnessMode");
}

id objc_msgSend__isStandalonePhoneSummary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isStandalonePhoneSummary");
}

id objc_msgSend__isVerticalCell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isVerticalCell");
}

id objc_msgSend__isWatchWorkout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isWatchWorkout");
}

id objc_msgSend__labelsForHeartRateRecovery(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_labelsForHeartRateRecovery");
}

id objc_msgSend__lastBaseline(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lastBaseline");
}

id objc_msgSend__lastLineBaselineFrameOriginY(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lastLineBaselineFrameOriginY");
}

id objc_msgSend__layoutLabels(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutLabels");
}

id objc_msgSend__layoutPrivacyLinkIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutPrivacyLinkIfNecessary");
}

id objc_msgSend__loadActivitySummariesForWeek_ringGroupIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadActivitySummariesForWeek:ringGroupIndex:");
}

id objc_msgSend__loadExerciseAndStandGoalViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadExerciseAndStandGoalViews");
}

id objc_msgSend__loadMoveGoalView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadMoveGoalView");
}

id objc_msgSend__loadWorkoutsForWeek_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadWorkoutsForWeek:");
}

id objc_msgSend__locationArrowImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_locationArrowImage");
}

id objc_msgSend__logFriendListDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logFriendListDisplayMode:");
}

id objc_msgSend__logMessageComposeResult_messageComposeViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logMessageComposeResult:messageComposeViewController:");
}

id objc_msgSend__makeAppleWeatherFooterView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_makeAppleWeatherFooterView");
}

id objc_msgSend__makeFooterView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_makeFooterView");
}

id objc_msgSend__makeFriendDetailViewControllerForSection_row_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_makeFriendDetailViewControllerForSection:row:");
}

id objc_msgSend__makeUltraModeFooterView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_makeUltraModeFooterView");
}

id objc_msgSend__maxDepthInfoForDive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maxDepthInfoForDive:");
}

id objc_msgSend__mergeRecipient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeRecipient:");
}

id objc_msgSend__monthYearDateFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_monthYearDateFormatter");
}

id objc_msgSend__moveGoalViewConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moveGoalViewConfiguration");
}

id objc_msgSend__moveQuantityForToday(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moveQuantityForToday");
}

id objc_msgSend__nextButtonTapped(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nextButtonTapped");
}

id objc_msgSend__noSuggestionString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_noSuggestionString");
}

id objc_msgSend__normalizeSubItemsArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_normalizeSubItemsArray:");
}

id objc_msgSend__openKBURLWithLocale_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openKBURLWithLocale:completionHandler:");
}

id objc_msgSend__openKBURLWithRetry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openKBURLWithRetry");
}

id objc_msgSend__paceFormats(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_paceFormats");
}

id objc_msgSend__paceUnitForActivityType_paceFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_paceUnitForActivityType:paceFormat:");
}

id objc_msgSend__parseFitnessCoachingNotificationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseFitnessCoachingNotificationType:");
}

id objc_msgSend__parseGoalRecommendation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseGoalRecommendation:");
}

id objc_msgSend__performAfterFriendDataIsAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAfterFriendDataIsAvailable:");
}

id objc_msgSend__popViewControllerIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popViewControllerIfNeeded");
}

id objc_msgSend__populateAchievements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateAchievements");
}

id objc_msgSend__populateProgressBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateProgressBar:");
}

id objc_msgSend__populateSuggestedContactsWithReachability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateSuggestedContactsWithReachability");
}

id objc_msgSend__predicateForActiveDateIntervals_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predicateForActiveDateIntervals:");
}

id objc_msgSend__predicateForObjectsFromWorkout_withinWorkoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predicateForObjectsFromWorkout:withinWorkoutActivity:");
}

id objc_msgSend__preferredServiceIdentifierForDestination_inReachableDestinationsByService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredServiceIdentifierForDestination:inReachableDestinationsByService:");
}

id objc_msgSend__prepareForScrollAnimationStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareForScrollAnimationStart");
}

id objc_msgSend__presentActivityViewControllerForItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentActivityViewControllerForItems:");
}

id objc_msgSend__presentConfigurationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentConfigurationData:");
}

id objc_msgSend__presentErrorAlertWithMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentErrorAlertWithMessage:");
}

id objc_msgSend__presentInitialAchievementIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentInitialAchievementIfNeeded");
}

id objc_msgSend__presentOnboardingNavigationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentOnboardingNavigationController:");
}

id objc_msgSend__presentPageAwaitingLocationData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentPageAwaitingLocationData");
}

id objc_msgSend__presentShareSheetWithTitle_image_workoutData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentShareSheetWithTitle:image:workoutData:");
}

id objc_msgSend__pushDetailViewControllerForSection_row_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushDetailViewControllerForSection:row:");
}

id objc_msgSend__quantityByAddingQuantity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_quantityByAddingQuantity:");
}

id objc_msgSend__queryAllServicesForDestinations_reachableUpdateHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queryAllServicesForDestinations:reachableUpdateHandler:completionHandler:");
}

id objc_msgSend__queue_downhillRunsForWorkout_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_downhillRunsForWorkout:error:");
}

id objc_msgSend__queue_intervalsForWorkout_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_intervalsForWorkout:error:");
}

id objc_msgSend__queue_openWaterSwimDistanceByStrokeStyleForWorkout_workoutActivity_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_openWaterSwimDistanceByStrokeStyleForWorkout:workoutActivity:error:");
}

id objc_msgSend__queue_refreshCacheWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_refreshCacheWithCompletion:");
}

id objc_msgSend__queue_segmentsForWorkout_markerEvents_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_segmentsForWorkout:markerEvents:error:");
}

id objc_msgSend__queue_sortAllWorkoutsByMonthAndYearWithCurrentFilter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_sortAllWorkoutsByMonthAndYearWithCurrentFilter");
}

id objc_msgSend__queue_strokeStyleForLaps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_strokeStyleForLaps:");
}

id objc_msgSend__queue_swimDistanceByStrokeStyleForWorkout_workoutActivity_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_swimDistanceByStrokeStyleForWorkout:workoutActivity:error:");
}

id objc_msgSend__queue_swimmingSetsForWorkout_workoutActivity_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_swimmingSetsForWorkout:workoutActivity:error:");
}

id objc_msgSend__queue_swimmingSplitsForWorkout_workoutActivity_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_swimmingSplitsForWorkout:workoutActivity:error:");
}

id objc_msgSend__queue_trackLapsForWorkout_lapEvents_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_trackLapsForWorkout:lapEvents:error:");
}

id objc_msgSend__readjustFrom_to_fromGroupRange_toGroupRange_down_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readjustFrom:to:fromGroupRange:toGroupRange:down:");
}

id objc_msgSend__readjustOffsetIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readjustOffsetIfNecessary");
}

id objc_msgSend__readjustRings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readjustRings");
}

id objc_msgSend__readjustScrollViewToOffset_weekOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readjustScrollViewToOffset:weekOffset:");
}

id objc_msgSend__rearrangeWeeks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rearrangeWeeks:");
}

id objc_msgSend__recipientFromDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recipientFromDestination:");
}

id objc_msgSend__recreateFilterObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recreateFilterObjects");
}

id objc_msgSend__refilterShownContacts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refilterShownContacts");
}

id objc_msgSend__refreshBadgeCounts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refreshBadgeCounts");
}

id objc_msgSend__refreshCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refreshCache");
}

id objc_msgSend__registerCellClasses(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerCellClasses");
}

id objc_msgSend__registerForNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerForNotifications");
}

id objc_msgSend__relayoutRingGroups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_relayoutRingGroups");
}

id objc_msgSend__reloadActivitySummariesFromCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadActivitySummariesFromCache");
}

id objc_msgSend__reloadAllActivitySummariesFromCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadAllActivitySummariesFromCache");
}

id objc_msgSend__reloadAllWorkoutsFromCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadAllWorkoutsFromCache");
}

id objc_msgSend__reloadData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadData");
}

id objc_msgSend__reloadDataForFilter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadDataForFilter");
}

id objc_msgSend__reloadDataFromProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadDataFromProvider");
}

id objc_msgSend__removeAdvancedView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeAdvancedView");
}

id objc_msgSend__requestWheelchairDiagnosticsSubmissionIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestWheelchairDiagnosticsSubmissionIfNecessary");
}

id objc_msgSend__requireIntrinsicSizeForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requireIntrinsicSizeForView:");
}

id objc_msgSend__resetSearchResults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetSearchResults");
}

id objc_msgSend__resetToViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetToViewController:");
}

id objc_msgSend__restingDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_restingDuration");
}

id objc_msgSend__retryAnchoredObjectQueryWithRetryCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_retryAnchoredObjectQueryWithRetryCount:");
}

id objc_msgSend__ringImageForWorkout_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ringImageForWorkout:context:");
}

id objc_msgSend__rowAlignmentOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rowAlignmentOptions");
}

id objc_msgSend__runAnimatedUpdateHandlers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_runAnimatedUpdateHandlers");
}

id objc_msgSend__runFilterActionFinishedHandlers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_runFilterActionFinishedHandlers");
}

id objc_msgSend__runFilterActionStartedHandlers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_runFilterActionStartedHandlers");
}

id objc_msgSend__runHandlers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_runHandlers:");
}

id objc_msgSend__runUpdateHandlers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_runUpdateHandlers");
}

id objc_msgSend__scaledValueForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scaledValueForValue:");
}

id objc_msgSend__scrollAnimationFinished(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollAnimationFinished");
}

id objc_msgSend__searchForRecipientWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchForRecipientWithText:");
}

id objc_msgSend__sectionTypeForSectionIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sectionTypeForSectionIndex:");
}

id objc_msgSend__sectionWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sectionWidth");
}

id objc_msgSend__sendInviteToRecipientsByService_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendInviteToRecipientsByService:completion:");
}

id objc_msgSend__seriesSamplesForType_workout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_seriesSamplesForType:workout:workoutActivity:completion:");
}

id objc_msgSend__setAccessoryBaseColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAccessoryBaseColor:");
}

id objc_msgSend__setActivityLevel_activityMoveMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setActivityLevel:activityMoveMode:");
}

id objc_msgSend__setActivityTabBarImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setActivityTabBarImage");
}

id objc_msgSend__setAllowsAutorotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAllowsAutorotation:");
}

id objc_msgSend__setBadgeCount_forTabBarItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBadgeCount:forTabBarItem:");
}

id objc_msgSend__setBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBundleIdentifier:");
}

id objc_msgSend__setDataForGroups_withStartingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDataForGroups:withStartingDate:");
}

id objc_msgSend__setDefaultAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDefaultAttributes:");
}

id objc_msgSend__setDrawsSeparatorAtTopOfSections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDrawsSeparatorAtTopOfSections:");
}

id objc_msgSend__setFirstLineBaselineFrameOriginY_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setFirstLineBaselineFrameOriginY:");
}

id objc_msgSend__setFirstLineCapFrameOriginY_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setFirstLineCapFrameOriginY:");
}

id objc_msgSend__setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setFont:");
}

id objc_msgSend__setGoalQuantity_goalView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setGoalQuantity:goalView:");
}

id objc_msgSend__setGoalQuantityForGoalView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setGoalQuantityForGoalView:");
}

id objc_msgSend__setGoalSchedules_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setGoalSchedules:");
}

id objc_msgSend__setHeaderAndFooterViewsFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHeaderAndFooterViewsFloat:");
}

id objc_msgSend__setHyphenationFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHyphenationFactor:");
}

id objc_msgSend__setIsWatchWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIsWatchWorkout:");
}

id objc_msgSend__setLastLineBaselineFrameOriginY_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLastLineBaselineFrameOriginY:");
}

id objc_msgSend__setParticipatesInAudioSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setParticipatesInAudioSession:");
}

id objc_msgSend__setRowAlignmentsOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRowAlignmentsOptions:");
}

id objc_msgSend__setSelectedViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSelectedViewController:");
}

id objc_msgSend__setShouldHaveFullLengthBottomSeparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShouldHaveFullLengthBottomSeparator:");
}

id objc_msgSend__setShowSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShowSuggestions:");
}

id objc_msgSend__setupActivityAppAndLoadData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupActivityAppAndLoadData");
}

id objc_msgSend__setupCell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupCell");
}

id objc_msgSend__setupCellSizes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupCellSizes");
}

id objc_msgSend__setupCells(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupCells");
}

id objc_msgSend__setupCloudRestoreUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupCloudRestoreUI");
}

id objc_msgSend__setupDataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupDataSource");
}

id objc_msgSend__setupDeeplinks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupDeeplinks");
}

id objc_msgSend__setupNumberOfItemsInSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupNumberOfItemsInSection");
}

id objc_msgSend__setupOnboarding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupOnboarding");
}

id objc_msgSend__setupTabBarViewControllersAndOrbActions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupTabBarViewControllersAndOrbActions");
}

id objc_msgSend__setupTableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupTableView");
}

id objc_msgSend__shareIconForWorkout_routeImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shareIconForWorkout:routeImage:");
}

id objc_msgSend__shareValueForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shareValueForWorkout:");
}

id objc_msgSend__shareWorkout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shareWorkout");
}

id objc_msgSend__shouldShowChangeGoalFooter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowChangeGoalFooter");
}

id objc_msgSend__shouldShowCompetitionAcceptAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowCompetitionAcceptAction");
}

id objc_msgSend__shouldShowCompetitionRequestAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowCompetitionRequestAction");
}

id objc_msgSend__shouldShowCompetitionRulesAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowCompetitionRulesAction");
}

id objc_msgSend__shouldShowExerciseAndStandCells(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowExerciseAndStandCells");
}

id objc_msgSend__shouldShowMuteAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowMuteAction");
}

id objc_msgSend__shouldShowProgressBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowProgressBar:");
}

id objc_msgSend__shouldShowSplits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowSplits");
}

id objc_msgSend__shouldShowStepsAndDistanceCells(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowStepsAndDistanceCells");
}

id objc_msgSend__shouldShowWhileDataIsHiddenForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowWhileDataIsHiddenForSection:");
}

id objc_msgSend__shouldUseVeryShortWeekdays(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldUseVeryShortWeekdays");
}

id objc_msgSend__showAdvancedViewForCurrentGoalPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showAdvancedViewForCurrentGoalPage");
}

id objc_msgSend__showAdvancedViewIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showAdvancedViewIfNeeded");
}

id objc_msgSend__showAveragePaceForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showAveragePaceForWorkout:workoutActivity:");
}

id objc_msgSend__showCoachingDataCollectionMessageIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showCoachingDataCollectionMessageIfNeeded");
}

id objc_msgSend__showDetailForFriend_date_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showDetailForFriend:date:");
}

id objc_msgSend__showSetupControllerInPhase_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showSetupControllerInPhase:animated:");
}

id objc_msgSend__sizeForGoalCell_withPreferredWidth_availableWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sizeForGoalCell:withPreferredWidth:availableWidth:");
}

id objc_msgSend__sortMenu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sortMenu");
}

id objc_msgSend__source(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_source");
}

id objc_msgSend__standGoalViewConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_standGoalViewConfiguration");
}

id objc_msgSend__standQuantityForToday(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_standQuantityForToday");
}

id objc_msgSend__startEdit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startEdit");
}

id objc_msgSend__stopActivityIndicator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopActivityIndicator");
}

id objc_msgSend__stopRouteQueryIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopRouteQueryIfNecessary");
}

id objc_msgSend__storeGoals(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storeGoals");
}

id objc_msgSend__stringFromDate_withTimeInterval_textStyle_forceAMPM_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stringFromDate:withTimeInterval:textStyle:forceAMPM:");
}

id objc_msgSend__subLabelsForHeartRateRecovery(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_subLabelsForHeartRateRecovery");
}

id objc_msgSend__swimmingSplitsForWorkout_workoutActivity_distanceSamples_strokeSamples_forDelimeterUnit_splitDelimiter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_swimmingSplitsForWorkout:workoutActivity:distanceSamples:strokeSamples:forDelimeterUnit:splitDelimiter:");
}

id objc_msgSend__systemContentInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemContentInset");
}

id objc_msgSend__systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemImageNamed:");
}

id objc_msgSend__systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemImageNamed:withConfiguration:");
}

id objc_msgSend__systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:");
}

id objc_msgSend__testMarkersForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_testMarkersForWorkout:");
}

id objc_msgSend__testTrackLapsForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_testTrackLapsForWorkout:");
}

id objc_msgSend__textFieldShouldBecomeFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_textFieldShouldBecomeFirstResponder");
}

id objc_msgSend__titleForConfirmButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_titleForConfirmButton");
}

id objc_msgSend__titleStringForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_titleStringForDate:");
}

id objc_msgSend__todayDateFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_todayDateFormatter");
}

id objc_msgSend__toggleAdvancedMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_toggleAdvancedMode");
}

id objc_msgSend__totalBasalEnergyBurned(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_totalBasalEnergyBurned");
}

id objc_msgSend__touchesInside_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_touchesInside:");
}

id objc_msgSend__transformAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transformAttributes:");
}

id objc_msgSend__transformButtonForExpandedState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transformButtonForExpandedState:");
}

id objc_msgSend__transformFriendAchievementsToACHAchievements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transformFriendAchievementsToACHAchievements");
}

id objc_msgSend__treatAsFirstPartyWorkout_workoutActivity_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_treatAsFirstPartyWorkout:workoutActivity:formattingManager:");
}

id objc_msgSend__try_reloadDataForFilter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_try_reloadDataForFilter");
}

id objc_msgSend__underwaterTimeInfoForDive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_underwaterTimeInfoForDive:");
}

id objc_msgSend__unitManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unitManager");
}

id objc_msgSend__updateActivitySharingWatchPairingStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateActivitySharingWatchPairingStatus");
}

id objc_msgSend__updateAdvanceViewButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAdvanceViewButton:");
}

id objc_msgSend__updateChartSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateChartSpacing");
}

id objc_msgSend__updateConfigurationForStandalone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateConfigurationForStandalone:");
}

id objc_msgSend__updateFilterButtonTitleForWorkoutTypeKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateFilterButtonTitleForWorkoutTypeKey:");
}

id objc_msgSend__updateFiltersList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateFiltersList");
}

id objc_msgSend__updateGoalLabelWithGoal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateGoalLabelWithGoal:");
}

id objc_msgSend__updatePaceFormatForSets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePaceFormatForSets:");
}

id objc_msgSend__updateSections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSections");
}

id objc_msgSend__updateSectionsForCurrentDisplayContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSectionsForCurrentDisplayContext");
}

id objc_msgSend__updateSeymourNavigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSeymourNavigationController");
}

id objc_msgSend__updateSharingTextForMe(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSharingTextForMe");
}

id objc_msgSend__updateSplits_withDistance_duration_strokeCount_splitDelimiterInUserUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSplits:withDistance:duration:strokeCount:splitDelimiterInUserUnit:");
}

id objc_msgSend__uuidForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uuidForWorkout:workoutActivity:");
}

id objc_msgSend__value(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_value");
}

id objc_msgSend__verticalConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_verticalConstraints");
}

id objc_msgSend__viewControllerAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewControllerAtIndex:");
}

id objc_msgSend__warmDataCalculatorCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_warmDataCalculatorCache");
}

id objc_msgSend__workoutDetailDisplayContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_workoutDetailDisplayContext");
}

id objc_msgSend__workoutDetailOpenGoalDisplayContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_workoutDetailOpenGoalDisplayContext");
}

id objc_msgSend__workoutForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_workoutForIndexPath:");
}

id objc_msgSend__workoutSupportsDistanceAndPace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_workoutSupportsDistanceAndPace:");
}

id objc_msgSend__workoutTypeInfoForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_workoutTypeInfoForWorkout:");
}

id objc_msgSend__workoutsForFriend_snapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_workoutsForFriend:snapshot:");
}

id objc_msgSend__workoutsListDisplayContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_workoutsListDisplayContext");
}

id objc_msgSend__yValueForCellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_yValueForCellAtIndex:");
}

id objc_msgSend_aa_isManagedAppleID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_isManagedAppleID");
}

id objc_msgSend_aa_primaryAppleAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_primaryAppleAccount");
}

id objc_msgSend_acceptCompetitionInviteFromFriendUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acceptCompetitionInviteFromFriendUUID:completion:");
}

id objc_msgSend_acceptCompetitionRequestFromFriend_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acceptCompetitionRequestFromFriend:completion:");
}

id objc_msgSend_acceptFriendInviteFromFriendUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acceptFriendInviteFromFriendUUID:completion:");
}

id objc_msgSend_acceptInvitationFromFriend_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acceptInvitationFromFriend:completion:");
}

id objc_msgSend_accessoryView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessoryView");
}

id objc_msgSend_accountTypeWithAccountTypeIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountTypeWithAccountTypeIdentifier:");
}

id objc_msgSend_accountsWithAccountType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountsWithAccountType:");
}

id objc_msgSend_achievedShortDescriptionForAchievement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievedShortDescriptionForAchievement:");
}

id objc_msgSend_achievement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievement");
}

id objc_msgSend_achievementAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievementAtIndexPath:");
}

id objc_msgSend_achievementForTemplateUniqueName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievementForTemplateUniqueName:");
}

id objc_msgSend_achievementLocalizationProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievementLocalizationProvider");
}

id objc_msgSend_achievementSelectedBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievementSelectedBlock");
}

id objc_msgSend_achievementTappedHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievementTappedHandler");
}

id objc_msgSend_achievementWithTemplateUniqueName_completedDate_value_friendUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievementWithTemplateUniqueName:completedDate:value:friendUUID:");
}

id objc_msgSend_achievements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievements");
}

id objc_msgSend_achievementsCell_didTapAchievement_subCell_frameInCHHorizontalScrollingAchievementsTableViewCellCoordinates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievementsCell:didTapAchievement:subCell:frameInCHHorizontalScrollingAchievementsTableViewCellCoordinates:");
}

id objc_msgSend_achievementsDataProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievementsDataProvider");
}

id objc_msgSend_achievementsForDateComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievementsForDateComponents:");
}

id objc_msgSend_achievementsForWorkoutIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievementsForWorkoutIdentifier:");
}

id objc_msgSend_achievementsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievementsView");
}

id objc_msgSend_achievementsView_didTapAchievement_cell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "achievementsView:didTapAchievement:cell:");
}

id objc_msgSend_actionCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionCount");
}

id objc_msgSend_actionIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionIdentifier");
}

id objc_msgSend_actionWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithHandler:");
}

id objc_msgSend_actionWithTitle_image_identifier_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:image:identifier:handler:");
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:style:handler:");
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activate");
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateConstraints:");
}

id objc_msgSend_activateWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateWithCompletionHandler:");
}

id objc_msgSend_activeEnergy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeEnergy");
}

id objc_msgSend_activeHours(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeHours");
}

id objc_msgSend_activeHoursGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeHoursGoal");
}

id objc_msgSend_activePairingDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activePairingDevice");
}

id objc_msgSend_activity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activity");
}

id objc_msgSend_activityDashboardViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityDashboardViewController");
}

id objc_msgSend_activityDataProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityDataProvider");
}

id objc_msgSend_activityDateCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityDateCache");
}

id objc_msgSend_activityGoalScheduleType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityGoalScheduleType");
}

id objc_msgSend_activityGoalScheduleWithDate_goalType_goal_device_metadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityGoalScheduleWithDate:goalType:goal:device:metadata:");
}

id objc_msgSend_activityHasBeenSetup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityHasBeenSetup");
}

id objc_msgSend_activityLevelForSegmentedControlIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityLevelForSegmentedControlIndex:");
}

id objc_msgSend_activityRingGroupForRingType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityRingGroupForRingType:");
}

id objc_msgSend_activitySharingClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activitySharingClient");
}

id objc_msgSend_activitySharingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activitySharingViewController");
}

id objc_msgSend_activitySummary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activitySummary");
}

id objc_msgSend_activitySummaryForCacheIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activitySummaryForCacheIndex:");
}

id objc_msgSend_activityTileNavController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityTileNavController");
}

id objc_msgSend_activityTileViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityTileViewController");
}

id objc_msgSend_activityType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityType");
}

id objc_msgSend_activityTypeWithHKWorkoutActivityTypeIdentifier_isIndoor_metadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityTypeWithHKWorkoutActivityTypeIdentifier:isIndoor:metadata:");
}

id objc_msgSend_activityTypeWithWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityTypeWithWorkout:");
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAction:");
}

id objc_msgSend_addAnimatedUpdateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimatedUpdateHandler:");
}

id objc_msgSend_addArrangedSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addArrangedSubview:");
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttribute:value:range:");
}

id objc_msgSend_addAttributes_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttributes:range:");
}

id objc_msgSend_addButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addButton");
}

id objc_msgSend_addButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addButton:");
}

id objc_msgSend_addCharactersInString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCharactersInString:");
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addClip(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClip");
}

id objc_msgSend_addCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCompletion:");
}

id objc_msgSend_addConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConstraints:");
}

id objc_msgSend_addFilterActionFinishedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFilterActionFinishedHandler:");
}

id objc_msgSend_addFinishBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFinishBlock:");
}

id objc_msgSend_addFriendViewControllerDidDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFriendViewControllerDidDismiss:");
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGestureRecognizer:");
}

id objc_msgSend_addIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addIndex:");
}

id objc_msgSend_addInitialLoadObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addInitialLoadObserver:");
}

id objc_msgSend_addLayoutGuide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLayoutGuide:");
}

id objc_msgSend_addListenerID_capabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addListenerID:capabilities:");
}

id objc_msgSend_addMainSectionObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMainSectionObserver:");
}

id objc_msgSend_addMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMonitor:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addRecentAndRelevantSectionObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRecentAndRelevantSectionObserver:");
}

id objc_msgSend_addRecipient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRecipient:");
}

id objc_msgSend_addSublayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSublayer:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:forControlEvents:");
}

id objc_msgSend_addTarget_action_forEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:forEvents:");
}

id objc_msgSend_addTimer_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTimer:forMode:");
}

id objc_msgSend_addUpdateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addUpdateHandler:");
}

id objc_msgSend_additionalSafeAreaInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalSafeAreaInsets");
}

id objc_msgSend_additionalServiceIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalServiceIdentifiers");
}

id objc_msgSend_additionalSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalSpacing");
}

id objc_msgSend_address(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "address");
}

id objc_msgSend_adjustSafeAreaInsetsWithHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustSafeAreaInsetsWithHeight:");
}

id objc_msgSend_adjustWeekLabelsByOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustWeekLabelsByOffset:");
}

id objc_msgSend_advanceGoalHeaderTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "advanceGoalHeaderTitle");
}

id objc_msgSend_aggregationStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aggregationStyle");
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertControllerWithTitle:message:preferredStyle:");
}

id objc_msgSend_alignGoalViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alignGoalViews");
}

id objc_msgSend_allDestinationsForActiveOrPendingFriends(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allDestinationsForActiveOrPendingFriends");
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allKeys");
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allObjects");
}

id objc_msgSend_allSamples(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allSamples");
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allValues");
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_analyticsHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsHandler");
}

id objc_msgSend_andPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "andPredicateWithSubpredicates:");
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateAlongsideTransition:completion:");
}

id objc_msgSend_animateModalBadgeView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateModalBadgeView");
}

id objc_msgSend_animateModalBadgeViewIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateModalBadgeViewIfNeeded");
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:");
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:completion:");
}

id objc_msgSend_animateWithDuration_animations_curve_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:curve:completion:");
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:options:animations:completion:");
}

id objc_msgSend_animationWithEndingFloatValue_duration_timingFunction_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationWithEndingFloatValue:duration:timingFunction:completion:");
}

id objc_msgSend_annotateView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotateView");
}

id objc_msgSend_annotateView_withAchievement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotateView:withAchievement:");
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anyObject");
}

id objc_msgSend_appBadgeAggregator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appBadgeAggregator");
}

id objc_msgSend_appIconFormat(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appIconFormat");
}

id objc_msgSend_appIconWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appIconWidth");
}

id objc_msgSend_appearance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearance");
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendAttributedString:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_applicationProxyForCompanionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationProxyForCompanionIdentifier:");
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationState");
}

id objc_msgSend_appliesLargeCellInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appliesLargeCellInset");
}

id objc_msgSend_applyConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyConstraints");
}

id objc_msgSend_applyProgressBarConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyProgressBarConstraints:");
}

id objc_msgSend_applyTextBaselineConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyTextBaselineConstraints");
}

id objc_msgSend_applyTextLeadingAndTrailingConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyTextLeadingAndTrailingConstraints");
}

id objc_msgSend_applyViewConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyViewConstraints");
}

id objc_msgSend_areMultipleDevicesSharingDataForSnapshotIndex_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "areMultipleDevicesSharingDataForSnapshotIndex:completion:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "array");
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_as_competitionAcceptConfirmationMessageForCompetition_experienceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_competitionAcceptConfirmationMessageForCompetition:experienceType:");
}

id objc_msgSend_as_competitionAcceptConfirmationTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_competitionAcceptConfirmationTitle");
}

id objc_msgSend_as_competitionAcceptErrorMessage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_competitionAcceptErrorMessage");
}

id objc_msgSend_as_competitionLearnMoreDetailActionForExperienceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_competitionLearnMoreDetailActionForExperienceType:");
}

id objc_msgSend_as_competitionLearnMoreFullDescriptionForExperienceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_competitionLearnMoreFullDescriptionForExperienceType:");
}

id objc_msgSend_as_competitionLearnMorePopupAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_competitionLearnMorePopupAction");
}

id objc_msgSend_as_competitionLearnMoreTitleForExperienceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_competitionLearnMoreTitleForExperienceType:");
}

id objc_msgSend_as_competitionReceivedNotificationMessageForExperienceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_competitionReceivedNotificationMessageForExperienceType:");
}

id objc_msgSend_as_competitionReceivedNotificationTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_competitionReceivedNotificationTitle");
}

id objc_msgSend_as_competitionRequestDurationRemainingString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_competitionRequestDurationRemainingString");
}

id objc_msgSend_as_competitionSendConfirmationMessageForExperienceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_competitionSendConfirmationMessageForExperienceType:");
}

id objc_msgSend_as_competitionSendConfirmationTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_competitionSendConfirmationTitle");
}

id objc_msgSend_as_competitionStageString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_competitionStageString");
}

id objc_msgSend_as_competitionStatusBreadcrumbStringForExperienceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_competitionStatusBreadcrumbStringForExperienceType:");
}

id objc_msgSend_as_darkCompetitionGold(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_darkCompetitionGold");
}

id objc_msgSend_as_detailedSharingDurationString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_detailedSharingDurationString");
}

id objc_msgSend_as_distanceStringWithContext_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_distanceStringWithContext:formattingManager:");
}

id objc_msgSend_as_exerciseDurationStringWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_exerciseDurationStringWithContext:");
}

id objc_msgSend_as_exerciseProgressStringWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_exerciseProgressStringWithContext:");
}

id objc_msgSend_as_friendListNameStringWithDotPrefix_keyColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_friendListNameStringWithDotPrefix:keyColor:");
}

id objc_msgSend_as_invitedDurationString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_invitedDurationString");
}

id objc_msgSend_as_lightCompetitionGold(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_lightCompetitionGold");
}

id objc_msgSend_as_movePercentStringWithContext_snapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_movePercentStringWithContext:snapshot:");
}

id objc_msgSend_as_moveProgressStringWithContext_formattingManager_snapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_moveProgressStringWithContext:formattingManager:snapshot:");
}

id objc_msgSend_as_pushesStringWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_pushesStringWithContext:");
}

id objc_msgSend_as_simpleHiddenFromString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_simpleHiddenFromString");
}

id objc_msgSend_as_stepsStringWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "as_stepsStringWithContext:");
}

id objc_msgSend_ascender(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ascender");
}

id objc_msgSend_assetWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetWithURL:");
}

id objc_msgSend_atomViewForRecipient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "atomViewForRecipient:");
}

id objc_msgSend_attachPaletteWithHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachPaletteWithHeight:");
}

id objc_msgSend_attrStringWithValue_unit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attrStringWithValue:unit:");
}

id objc_msgSend_attributedStringWithAttachment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedStringWithAttachment:");
}

id objc_msgSend_attributedText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedText");
}

id objc_msgSend_authorizationStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorizationStatus");
}

id objc_msgSend_authorizationStatusForEntityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorizationStatusForEntityType:");
}

id objc_msgSend_autoupdatingCurrentCalendar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoupdatingCurrentCalendar");
}

id objc_msgSend_avPlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avPlayer");
}

id objc_msgSend_avPlayerLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avPlayerLayer");
}

id objc_msgSend_available(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "available");
}

id objc_msgSend_averageHeartRate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "averageHeartRate");
}

id objc_msgSend_averageHeartRateForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "averageHeartRateForWorkout:workoutActivity:");
}

id objc_msgSend_averageQuantity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "averageQuantity");
}

id objc_msgSend_awardsDataProviderWrapper(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "awardsDataProviderWrapper");
}

id objc_msgSend_backSideIconImageForAchievement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backSideIconImageForAchievement:");
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColor");
}

id objc_msgSend_backingOriginOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backingOriginOffset");
}

id objc_msgSend_badgeAspectRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeAspectRatio");
}

id objc_msgSend_badgeConfigurationForAchievement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeConfigurationForAchievement:");
}

id objc_msgSend_badgeContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeContainer");
}

id objc_msgSend_badgeFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeFrame");
}

id objc_msgSend_badgeImageFactory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeImageFactory");
}

id objc_msgSend_badgeRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeRect");
}

id objc_msgSend_badgeView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeView");
}

id objc_msgSend_bagForProfile_profileVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bagForProfile:profileVersion:");
}

id objc_msgSend_bagSubProfile(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bagSubProfile");
}

id objc_msgSend_bagSubProfileVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bagSubProfileVersion");
}

id objc_msgSend_barColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "barColor");
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "becomeFirstResponder");
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "begin");
}

id objc_msgSend_beginListeningForCloudStatusUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginListeningForCloudStatusUpdates");
}

id objc_msgSend_beginUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginUpdates");
}

id objc_msgSend_bezierPathWithOvalInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithOvalInRect:");
}

id objc_msgSend_biologicalSex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "biologicalSex");
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blackColor");
}

id objc_msgSend_bodyLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bodyLabel");
}

id objc_msgSend_boldButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldButton");
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldSystemFontOfSize:");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomAnchor");
}

id objc_msgSend_boundingRectWithSize_options_attributes_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundingRectWithSize:options:attributes:context:");
}

id objc_msgSend_boundingRectWithSize_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundingRectWithSize:options:context:");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bounds");
}

id objc_msgSend_bridge_isDownhillSnowSport(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bridge_isDownhillSnowSport");
}

id objc_msgSend_bridge_supportsElevationAscendedInSummary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bridge_supportsElevationAscendedInSummary");
}

id objc_msgSend_bridge_supportsElevationDescendedInSummary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bridge_supportsElevationDescendedInSummary");
}

id objc_msgSend_bringSubviewToFront_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bringSubviewToFront:");
}

id objc_msgSend_briskColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "briskColors");
}

id objc_msgSend_briskMinutes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "briskMinutes");
}

id objc_msgSend_briskMinutesGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "briskMinutesGoal");
}

id objc_msgSend_browsingConsentAlertCompletion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "browsingConsentAlertCompletion");
}

id objc_msgSend_browsingConsentAlertController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "browsingConsentAlertController");
}

id objc_msgSend_buddyControllerDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buddyControllerDone:");
}

id objc_msgSend_buddyControllerDone_nextControllerClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buddyControllerDone:nextControllerClass:");
}

id objc_msgSend_buddyControllerReleaseHold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buddyControllerReleaseHold:");
}

id objc_msgSend_buddyControllerReleaseHoldAndSkip_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buddyControllerReleaseHoldAndSkip:");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleID");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifier");
}

id objc_msgSend_bundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithIdentifier:");
}

id objc_msgSend_burnBarExpanded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "burnBarExpanded");
}

id objc_msgSend_buttonControllerDidUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonControllerDidUpdate");
}

id objc_msgSend_buttonTray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonTray");
}

id objc_msgSend_buttonWithConfiguration_primaryAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithConfiguration:primaryAction:");
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithType:");
}

id objc_msgSend_cache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cache");
}

id objc_msgSend_cacheContainerForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheContainerForWorkout:workoutActivity:");
}

id objc_msgSend_cacheKeyForColor_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheKeyForColor:size:");
}

id objc_msgSend_cachedDownhillRunsForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedDownhillRunsForWorkout:workoutActivity:");
}

id objc_msgSend_cachedEffortSampleCollectionForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedEffortSampleCollectionForWorkout:workoutActivity:");
}

id objc_msgSend_cadenceColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cadenceColors");
}

id objc_msgSend_cadenceSamples(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cadenceSamples");
}

id objc_msgSend_cadenceSamplesForWorkout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cadenceSamplesForWorkout:workoutActivity:completion:");
}

id objc_msgSend_calendar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calendar");
}

id objc_msgSend_calendarIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calendarIdentifier");
}

id objc_msgSend_calendarWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calendarWithIdentifier:");
}

id objc_msgSend_calorieGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calorieGoal");
}

id objc_msgSend_canSeeMyActivityData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSeeMyActivityData");
}

id objc_msgSend_canSendText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSendText");
}

id objc_msgSend_cancelTaskWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelTaskWithID:");
}

id objc_msgSend_canonicalUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canonicalUnit");
}

id objc_msgSend_categoryIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "categoryIdentifier");
}

id objc_msgSend_categorySampleWithType_value_startDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "categorySampleWithType:value:startDate:endDate:");
}

id objc_msgSend_categoryTypeForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "categoryTypeForIdentifier:");
}

id objc_msgSend_celebrationMovieURLForAchievementIdentifer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "celebrationMovieURLForAchievementIdentifer:");
}

id objc_msgSend_celebrationVideoContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "celebrationVideoContainer");
}

id objc_msgSend_cellClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellClass");
}

id objc_msgSend_cellClassesBySection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellClassesBySection");
}

id objc_msgSend_cellDidBecomeFirstResponder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellDidBecomeFirstResponder:");
}

id objc_msgSend_cellDidResignFirstResponder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellDidResignFirstResponder:");
}

id objc_msgSend_cellForItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellForItemAtIndexPath:");
}

id objc_msgSend_cellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellForRowAtIndexPath:");
}

id objc_msgSend_cellHeightForAchievement_preferredWidth_appliesLargeCellInsets_locProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellHeightForAchievement:preferredWidth:appliesLargeCellInsets:locProvider:");
}

id objc_msgSend_cellSizeForIndexPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellSizeForIndexPath");
}

id objc_msgSend_cellWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellWidth");
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "center");
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerXAnchor");
}

id objc_msgSend_centerXForElementAt_width_percent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerXForElementAt:width:percent:");
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerYAnchor");
}

id objc_msgSend_chAwardsDataProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chAwardsDataProvider");
}

id objc_msgSend_ch_beatsPerMinute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ch_beatsPerMinute");
}

id objc_msgSend_ch_fetchBodyMassBeforeDate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ch_fetchBodyMassBeforeDate:completion:");
}

id objc_msgSend_ch_mostRecentQuantityOfType_beforeDate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ch_mostRecentQuantityOfType:beforeDate:completion:");
}

id objc_msgSend_ch_rootViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ch_rootViewController");
}

id objc_msgSend_ch_transformViewsForRightToLeftLanguages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ch_transformViewsForRightToLeftLanguages:");
}

id objc_msgSend_chartPointWithDate_valueIndexSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chartPointWithDate:valueIndexSet:");
}

id objc_msgSend_checkInWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkInWithCompletion:");
}

id objc_msgSend_circle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "circle");
}

id objc_msgSend_clearAllCachedImages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearAllCachedImages");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearColor");
}

id objc_msgSend_clearContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearContext");
}

id objc_msgSend_clearText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearText");
}

id objc_msgSend_cloudDeviceProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudDeviceProvider");
}

id objc_msgSend_cloudKitAccountStatusWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudKitAccountStatusWithCompletion:");
}

id objc_msgSend_cloudSyncObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudSyncObserver");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "code");
}

id objc_msgSend_collectionView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionView");
}

id objc_msgSend_collectionView_layout_referenceSizeForHeaderInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionView:layout:referenceSizeForHeaderInSection:");
}

id objc_msgSend_collectionView_layout_sizeForItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionView:layout:sizeForItemAtIndexPath:");
}

id objc_msgSend_collectionView_numberOfItemsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionView:numberOfItemsInSection:");
}

id objc_msgSend_collectionViewLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionViewLayout");
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithAlphaComponent:");
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithRed:green:blue:alpha:");
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithWhite:alpha:");
}

id objc_msgSend_commit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commit");
}

id objc_msgSend_commmitWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commmitWithError:");
}

id objc_msgSend_companionFriendListConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "companionFriendListConfiguration");
}

id objc_msgSend_companionGraph(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "companionGraph");
}

id objc_msgSend_companionTotalScoreFriendDetailConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "companionTotalScoreFriendDetailConfiguration");
}

id objc_msgSend_companionTotalWinsFriendDetailConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "companionTotalWinsFriendDetailConfiguration");
}

id objc_msgSend_companionTotalWinsStandaloneFriendDetailConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "companionTotalWinsStandaloneFriendDetailConfiguration");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_competitionPendingAcceptance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "competitionPendingAcceptance");
}

id objc_msgSend_completedFetchWithLocationReadings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completedFetchWithLocationReadings:");
}

id objc_msgSend_completionHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completionHandler");
}

id objc_msgSend_component_fromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "component:fromDate:");
}

id objc_msgSend_components_fromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:");
}

id objc_msgSend_components_fromDate_toDate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:toDate:options:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByCharactersInSet:");
}

id objc_msgSend_composeInputLineHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "composeInputLineHeight");
}

id objc_msgSend_composeRecipientView_textDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "composeRecipientView:textDidChange:");
}

id objc_msgSend_composeRecipientViewRequestAddRecipient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "composeRecipientViewRequestAddRecipient:");
}

id objc_msgSend_computeMaxYForGoalViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "computeMaxYForGoalViews");
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configuration");
}

id objc_msgSend_configurationWithActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithActions:");
}

id objc_msgSend_configurationWithFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithFont:");
}

id objc_msgSend_configurationWithIdentifier_previewProvider_actionProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithIdentifier:previewProvider:actionProvider:");
}

id objc_msgSend_configurationWithPointSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:");
}

id objc_msgSend_configurationWithPointSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:weight:");
}

id objc_msgSend_configurationWithTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithTextStyle:");
}

id objc_msgSend_configureBadgeView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureBadgeView");
}

id objc_msgSend_configureForAchievement_badgeImageFactory_localizationProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureForAchievement:badgeImageFactory:localizationProvider:");
}

id objc_msgSend_configureHeaderWithActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureHeaderWithActivityType:");
}

id objc_msgSend_configurePlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurePlayer");
}

id objc_msgSend_configureWithAchievement_badgeImageFactory_locProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithAchievement:badgeImageFactory:locProvider:");
}

id objc_msgSend_configureWithActionTypes_labelTexts_footerText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithActionTypes:labelTexts:footerText:");
}

id objc_msgSend_configureWithDive_row_dataCalculator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithDive:row:dataCalculator:");
}

id objc_msgSend_configureWithDownhillRun_downhillRunIndex_activityType_isLastCell_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithDownhillRun:downhillRunIndex:activityType:isLastCell:formattingManager:");
}

id objc_msgSend_configureWithDownhillRunsStats_activityType_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithDownhillRunsStats:activityType:formattingManager:");
}

id objc_msgSend_configureWithFitnessAppContext_workout_scoreSummaryWrapper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithFitnessAppContext:workout:scoreSummaryWrapper:");
}

id objc_msgSend_configureWithInterval_index_workout_activityType_activityMoveMode_isLastCell_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithInterval:index:workout:activityType:activityMoveMode:isLastCell:formattingManager:");
}

id objc_msgSend_configureWithSectionName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithSectionName:");
}

id objc_msgSend_configureWithSegment_segmentIndex_workout_trackDistanceUnit_activityType_activityMoveMode_isLastCell_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithSegment:segmentIndex:workout:trackDistanceUnit:activityType:activityMoveMode:isLastCell:formattingManager:");
}

id objc_msgSend_configureWithSwimmingSet_index_isLastCell_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithSwimmingSet:index:isLastCell:formattingManager:");
}

id objc_msgSend_configureWithSwimmingSplit_splitIndex_isLastCell_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithSwimmingSplit:splitIndex:isLastCell:formattingManager:");
}

id objc_msgSend_configureWithTitle1_value1_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithTitle1:value1:");
}

id objc_msgSend_configureWithTitle2_value2_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithTitle2:value2:");
}

id objc_msgSend_configureWithTitle_buttonAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithTitle:buttonAction:");
}

id objc_msgSend_configureWithTrackLap_lapIndex_workout_distanceUnit_activityType_activityMoveMode_isLastCell_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithTrackLap:lapIndex:workout:distanceUnit:activityType:activityMoveMode:isLastCell:formattingManager:");
}

id objc_msgSend_configureWithWorkout_fitnessAppContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithWorkout:fitnessAppContext:");
}

id objc_msgSend_configureWithWorkout_workoutActivity_dataCalculator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithWorkout:workoutActivity:dataCalculator:");
}

id objc_msgSend_configureWithWorkout_workoutActivity_dataCalculator_formattingManager_heartRateReadings_averageHeartRate_parent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithWorkout:workoutActivity:dataCalculator:formattingManager:heartRateReadings:averageHeartRate:parent:");
}

id objc_msgSend_configureWithWorkout_workoutActivity_dataCalculator_formattingManager_parent_locationReadings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithWorkout:workoutActivity:dataCalculator:formattingManager:parent:locationReadings:");
}

id objc_msgSend_configureWithWorkout_workoutActivity_dataCalculator_formattingManager_powerSamples_parent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithWorkout:workoutActivity:dataCalculator:formattingManager:powerSamples:parent:");
}

id objc_msgSend_configureWithWorkout_workoutActivity_dataCalculator_parent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithWorkout:workoutActivity:dataCalculator:parent:");
}

id objc_msgSend_configureWithWorkout_workoutActivity_formattingManager_dataCalculator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithWorkout:workoutActivity:formattingManager:dataCalculator:");
}

id objc_msgSend_configureWithWorkout_workoutActivity_unit_split_splitIndex_splitDistance_isLastCell_dataCalculator_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithWorkout:workoutActivity:unit:split:splitIndex:splitDistance:isLastCell:dataCalculator:formattingManager:");
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_connectAutomatically(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectAutomatically");
}

id objc_msgSend_connectionOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionOptions");
}

id objc_msgSend_constrainViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constrainViews");
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:");
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:constant:");
}

id objc_msgSend_constraintEqualToAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:multiplier:");
}

id objc_msgSend_constraintEqualToAnchor_multiplier_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:multiplier:constant:");
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToConstant:");
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToAnchor:");
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToAnchor:constant:");
}

id objc_msgSend_constraintGreaterThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToConstant:");
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToAnchor:multiplier:");
}

id objc_msgSend_constraintLessThanOrEqualToSystemSpacingAfterAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToSystemSpacingAfterAnchor:multiplier:");
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:");
}

id objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintsWithVisualFormat:options:metrics:views:");
}

id objc_msgSend_contact(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contact");
}

id objc_msgSend_contactWithDisplayName_emailOrPhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactWithDisplayName:emailOrPhoneNumber:");
}

id objc_msgSend_containerGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerGuide");
}

id objc_msgSend_containerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerView");
}

id objc_msgSend_containsDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsDate:");
}

id objc_msgSend_containsMonthTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsMonthTitle");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_content(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "content");
}

id objc_msgSend_contentInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInset");
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentOffset");
}

id objc_msgSend_contentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentSize");
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentView");
}

id objc_msgSend_contextualActionWithStyle_title_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextualActionWithStyle:title:handler:");
}

id objc_msgSend_continueButtonTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "continueButtonTitle");
}

id objc_msgSend_continueUserActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "continueUserActivity:");
}

id objc_msgSend_controlCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlCharacterSet");
}

id objc_msgSend_convertRect_toView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:toView:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countLabelTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countLabelTopConstraint");
}

id objc_msgSend_countUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countUnit");
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCalendar");
}

id objc_msgSend_currentCompetition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCompetition");
}

id objc_msgSend_currentExerciseGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentExerciseGoal");
}

id objc_msgSend_currentFilteredTypeIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentFilteredTypeIdentifier");
}

id objc_msgSend_currentItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentItem");
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentLocale");
}

id objc_msgSend_currentMoveGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentMoveGoal");
}

id objc_msgSend_currentNotificationCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentNotificationCenter");
}

id objc_msgSend_currentPhase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentPhase");
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentRunLoop");
}

id objc_msgSend_currentSelectedDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentSelectedDate");
}

id objc_msgSend_currentSnapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentSnapshot");
}

id objc_msgSend_currentStandGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentStandGoal");
}

id objc_msgSend_currentWeekStartDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentWeekStartDate");
}

id objc_msgSend_currentlySelectedSwimmingPaceFormat(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentlySelectedSwimmingPaceFormat");
}

id objc_msgSend_customSplits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customSplits");
}

id objc_msgSend_customSplitsForWorkout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customSplitsForWorkout:workoutActivity:completion:");
}

id objc_msgSend_cyclingSpeedSamples(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cyclingSpeedSamples");
}

id objc_msgSend_darkGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "darkGrayColor");
}

id objc_msgSend_darkeningLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "darkeningLayer");
}

id objc_msgSend_dataAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataAvailable");
}

id objc_msgSend_dataCalculator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataCalculator");
}

id objc_msgSend_dataProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataProvider");
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSource");
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfFile:");
}

id objc_msgSend_dataWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:options:error:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "date");
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingTimeInterval:");
}

id objc_msgSend_dateByAddingUnit_value_toDate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingUnit:value:toDate:options:");
}

id objc_msgSend_dateBySettingUnit_value_ofDate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateBySettingUnit:value:ofDate:options:");
}

id objc_msgSend_dateCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateCache");
}

id objc_msgSend_dateFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFont");
}

id objc_msgSend_dateFormatFromTemplate_options_locale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFormatFromTemplate:options:locale:");
}

id objc_msgSend_dateFromComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFromComponents:");
}

id objc_msgSend_dateFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFromString:");
}

id objc_msgSend_dateInterval(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateInterval");
}

id objc_msgSend_dateOfBirth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateOfBirth");
}

id objc_msgSend_dateSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateSelected:");
}

id objc_msgSend_dateTopMargin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateTopMargin");
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_day(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "day");
}

id objc_msgSend_dayCells(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dayCells");
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateConstraints:");
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugDescription");
}

id objc_msgSend_decimalDigitCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decimalDigitCharacterSet");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_defaultCircularRingImageForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCircularRingImageForContext:");
}

id objc_msgSend_defaultContentConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultContentConfiguration");
}

id objc_msgSend_defaultFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultFontForTextStyle:");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_defaultParagraphStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultParagraphStyle");
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultWorkspace");
}

id objc_msgSend_degreeCelsiusUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "degreeCelsiusUnit");
}

id objc_msgSend_degreeFahrenheitUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "degreeFahrenheitUnit");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegate");
}

id objc_msgSend_deleteArchivedSessionForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteArchivedSessionForWorkout:");
}

id objc_msgSend_deleteObject_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteObject:withCompletion:");
}

id objc_msgSend_deleteRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_deleteSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteSections:withRowAnimation:");
}

id objc_msgSend_deleteWorkout_shouldDeleteAssociatedSamples_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteWorkout:shouldDeleteAssociatedSamples:completion:");
}

id objc_msgSend_demoExertionForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "demoExertionForWorkout:");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithIdentifier:");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:");
}

id objc_msgSend_dequeueReusableCellWithReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:");
}

id objc_msgSend_dequeueReusableHeaderFooterViewWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableHeaderFooterViewWithIdentifier:");
}

id objc_msgSend_dequeueReusableSupplementaryViewOfKind_withReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:");
}

id objc_msgSend_descender(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descender");
}

id objc_msgSend_descriptorForRequiredKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptorForRequiredKeys");
}

id objc_msgSend_deselectItemAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deselectItemAtIndexPath:animated:");
}

id objc_msgSend_deselectRowAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deselectRowAtIndexPath:animated:");
}

id objc_msgSend_destination(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destination");
}

id objc_msgSend_destinationStripped(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destinationStripped");
}

id objc_msgSend_detachPalette(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detachPalette");
}

id objc_msgSend_detachPalette_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detachPalette:");
}

id objc_msgSend_detailLineOneLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailLineOneLabel");
}

id objc_msgSend_detailLineTwoLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailLineTwoLabel");
}

id objc_msgSend_detailTextLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailTextLabel");
}

id objc_msgSend_detailViewControllerForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailViewControllerForWorkout:");
}

id objc_msgSend_detailViewDateFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailViewDateFormatter");
}

id objc_msgSend_device(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "device");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didAppear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didAppear");
}

id objc_msgSend_didExpandDetailSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didExpandDetailSection:");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didMoveToParentViewController:");
}

id objc_msgSend_didPresentMediaMomentItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didPresentMediaMomentItem");
}

id objc_msgSend_didSetInitialSwimmingPaceFormat(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didSetInitialSwimmingPaceFormat");
}

id objc_msgSend_didSetupBadgeView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didSetupBadgeView");
}

id objc_msgSend_didTapEditPregnancy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didTapEditPregnancy");
}

id objc_msgSend_didTapInboxBarButtonView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didTapInboxBarButtonView:");
}

id objc_msgSend_didUpdateDemoOverrideEffortValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didUpdateDemoOverrideEffortValues");
}

id objc_msgSend_didUpdatePauseStateNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didUpdatePauseStateNotification");
}

id objc_msgSend_didWinRace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didWinRace");
}

id objc_msgSend_directionalLayoutMargins(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directionalLayoutMargins");
}

id objc_msgSend_dismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismiss");
}

id objc_msgSend_dismissRemoteViewControllerOnHostController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissRemoteViewControllerOnHostController:");
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_displayContextWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayContextWithName:");
}

id objc_msgSend_displayDetail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayDetail:");
}

id objc_msgSend_displayFilter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayFilter");
}

id objc_msgSend_displayMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayMode");
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayName");
}

id objc_msgSend_displayScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayScale");
}

id objc_msgSend_displayString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayString");
}

id objc_msgSend_displaysEarnedInstanceCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displaysEarnedInstanceCount");
}

id objc_msgSend_distance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distance");
}

id objc_msgSend_distanceColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceColors");
}

id objc_msgSend_distanceGoalAchievedTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceGoalAchievedTime");
}

id objc_msgSend_distanceInMeters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceInMeters");
}

id objc_msgSend_distanceInUserDistanceUnitForDistanceInMeters_distanceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceInUserDistanceUnitForDistanceInMeters:distanceType:");
}

id objc_msgSend_distanceInUserUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceInUserUnit");
}

id objc_msgSend_distanceSamples(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceSamples");
}

id objc_msgSend_distanceSamplesForWorkout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceSamplesForWorkout:workoutActivity:completion:");
}

id objc_msgSend_distanceType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceType");
}

id objc_msgSend_distanceUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceUnit");
}

id objc_msgSend_distantFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distantFuture");
}

id objc_msgSend_diveColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diveColors");
}

id objc_msgSend_divingDataCalculator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "divingDataCalculator");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domain");
}

id objc_msgSend_dominantStrokeStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dominantStrokeStyle");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_doubleValueForUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleValueForUnit:");
}

id objc_msgSend_downhillRun(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downhillRun");
}

id objc_msgSend_downhillRunEventsBridge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downhillRunEventsBridge");
}

id objc_msgSend_downhillRunIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downhillRunIndex");
}

id objc_msgSend_downhillRuns(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downhillRuns");
}

id objc_msgSend_downhillRunsForWorkout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downhillRunsForWorkout:completion:");
}

id objc_msgSend_downhillRunsStats(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downhillRunsStats");
}

id objc_msgSend_drawAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawAtPoint:");
}

id objc_msgSend_drawAtPoint_blendMode_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawAtPoint:blendMode:alpha:");
}

id objc_msgSend_drawInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawInRect:");
}

id objc_msgSend_drawInRect_blendMode_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawInRect:blendMode:alpha:");
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "duration");
}

id objc_msgSend_durationScaledToFillSplit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "durationScaledToFillSplit");
}

id objc_msgSend_earliestDateToTileForMonth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "earliestDateToTileForMonth:");
}

id objc_msgSend_earnedDateComponents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "earnedDateComponents");
}

id objc_msgSend_earnedInstanceCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "earnedInstanceCount");
}

id objc_msgSend_earnedInstanceCountLabelView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "earnedInstanceCountLabelView");
}

id objc_msgSend_earnedInstances(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "earnedInstances");
}

id objc_msgSend_editedSettingsController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editedSettingsController");
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectWithStyle:");
}

id objc_msgSend_effectiveTypeIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveTypeIdentifier");
}

id objc_msgSend_effortForWorkout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effortForWorkout:workoutActivity:completion:");
}

id objc_msgSend_effortSampleCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effortSampleCollection");
}

id objc_msgSend_elapsedTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "elapsedTime");
}

id objc_msgSend_elapsedTimeColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "elapsedTimeColors");
}

id objc_msgSend_elevationColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "elevationColors");
}

id objc_msgSend_elevationDescended(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "elevationDescended");
}

id objc_msgSend_emailAddresses(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emailAddresses");
}

id objc_msgSend_emptyKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emptyKey");
}

id objc_msgSend_endDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endDate");
}

id objc_msgSend_endDiscovery(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endDiscovery");
}

id objc_msgSend_endEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEditing:");
}

id objc_msgSend_endRefreshing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endRefreshing");
}

id objc_msgSend_endUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endUpdates");
}

id objc_msgSend_energyBurned(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "energyBurned");
}

id objc_msgSend_energyBurnedGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "energyBurnedGoal");
}

id objc_msgSend_energyBurnedInUserUnitForCalories_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "energyBurnedInUserUnitForCalories:");
}

id objc_msgSend_energyColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "energyColors");
}

id objc_msgSend_enumerateIndexesUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateIndexesUsingBlock:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumerateValidDisplayModesForFilter_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateValidDisplayModesForFilter:usingBlock:");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_executeQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeQuery:");
}

id objc_msgSend_exerciseGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exerciseGoal");
}

id objc_msgSend_existsWorkoutOnCacheIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existsWorkoutOnCacheIndex:");
}

id objc_msgSend_expandButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandButton");
}

id objc_msgSend_expanded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expanded");
}

id objc_msgSend_expandingHeaderView_didChangeExpanded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandingHeaderView:didChangeExpanded:");
}

id objc_msgSend_expectedIntervalDistanceForStepKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expectedIntervalDistanceForStepKeyPath:");
}

id objc_msgSend_expectedIntervalDurationForStepKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expectedIntervalDurationForStepKeyPath:");
}

id objc_msgSend_expectedSplitDistance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expectedSplitDistance");
}

id objc_msgSend_extraProminentInsetGroupedHeaderConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extraProminentInsetGroupedHeaderConfiguration");
}

id objc_msgSend_features(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "features");
}

id objc_msgSend_fetchActivitySharingDataIfTimeSinceLastFetchIsGreaterThan_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchActivitySharingDataIfTimeSinceLastFetchIsGreaterThan:completion:");
}

id objc_msgSend_fetchAvatarImageForFriend_diameter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAvatarImageForFriend:diameter:");
}

id objc_msgSend_fetchCatalogArtworkForCatalogItemViewModel_imageSize_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCatalogArtworkForCatalogItemViewModel:imageSize:completion:");
}

id objc_msgSend_fetchCatalogItemViewModelForWorkout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCatalogItemViewModelForWorkout:completion:");
}

id objc_msgSend_fetchExertionForWorkout_workoutActivity_healthStore_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchExertionForWorkout:workoutActivity:healthStore:completion:");
}

id objc_msgSend_fetchIconImageForWorkout_context_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchIconImageForWorkout:context:completion:");
}

id objc_msgSend_fetchIconWithCHIconParameters_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchIconWithCHIconParameters:withCompletion:");
}

id objc_msgSend_fetchLocations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchLocations");
}

id objc_msgSend_fetchLocationsFromWorkout_applyThreshold_withSamplesHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchLocationsFromWorkout:applyThreshold:withSamplesHandler:");
}

id objc_msgSend_fetchLocationsFromWorkout_workoutActivity_samplesHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchLocationsFromWorkout:workoutActivity:samplesHandler:");
}

id objc_msgSend_fetchPhoneIconWithParameters_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchPhoneIconWithParameters:completion:");
}

id objc_msgSend_fetchReachableDestinationsFor_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchReachableDestinationsFor:completion:");
}

id objc_msgSend_fetchScoreSummaryForWorkout_healthStore_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchScoreSummaryForWorkout:healthStore:completion:");
}

id objc_msgSend_fetchWatchAppBundleIDForCompanionAppBundleID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchWatchAppBundleIDForCompanionAppBundleID:completion:");
}

id objc_msgSend_fetchWatchIconWithParameters_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchWatchIconWithParameters:completion:");
}

id objc_msgSend_fi_swimmingLocationType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fi_swimmingLocationType");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_filledButtonConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filledButtonConfiguration");
}

id objc_msgSend_filledWorkoutCircleWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filledWorkoutCircleWithSize:");
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_finishEnteringRecipient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishEnteringRecipient");
}

id objc_msgSend_firstBaselineAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstBaselineAnchor");
}

id objc_msgSend_firstCoordinate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstCoordinate");
}

id objc_msgSend_firstCoordinateUpdatedBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstCoordinateUpdatedBlock");
}

id objc_msgSend_firstDayOfMonthCellIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstDayOfMonthCellIndex");
}

id objc_msgSend_firstName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstName");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstObject");
}

id objc_msgSend_fitnessAppContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fitnessAppContext");
}

id objc_msgSend_fitnessColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fitnessColors");
}

id objc_msgSend_fitnessMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fitnessMode");
}

id objc_msgSend_fitnessStartOfWeekOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fitnessStartOfWeekOffset");
}

id objc_msgSend_fitnessUIFormattingManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fitnessUIFormattingManager");
}

id objc_msgSend_fiui_activityType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_activityType");
}

id objc_msgSend_fiui_appendHeartRate_date_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_appendHeartRate:date:");
}

id objc_msgSend_fiui_averageCadence(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_averageCadence");
}

id objc_msgSend_fiui_averagePace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_averagePace");
}

id objc_msgSend_fiui_averagePower(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_averagePower");
}

id objc_msgSend_fiui_completionFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_completionFactor");
}

id objc_msgSend_fiui_connectedGymBrandName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_connectedGymBrandName");
}

id objc_msgSend_fiui_customSplits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_customSplits");
}

id objc_msgSend_fiui_dateInterval(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_dateInterval");
}

id objc_msgSend_fiui_distanceGoalCompletionTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_distanceGoalCompletionTime");
}

id objc_msgSend_fiui_duration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_duration");
}

id objc_msgSend_fiui_hasAveragePace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_hasAveragePace");
}

id objc_msgSend_fiui_isConnectedGymWorkout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_isConnectedGymWorkout");
}

id objc_msgSend_fiui_isNonzero(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_isNonzero");
}

id objc_msgSend_fiui_lapLength(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_lapLength");
}

id objc_msgSend_fiui_splitsForUserPreferredDistanceUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_splitsForUserPreferredDistanceUnit:");
}

id objc_msgSend_fiui_strokeStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_strokeStyle");
}

id objc_msgSend_fiui_swimmingLocationType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_swimmingLocationType");
}

id objc_msgSend_fiui_totalDistance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_totalDistance");
}

id objc_msgSend_fiui_totalStepCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_totalStepCount");
}

id objc_msgSend_fiui_weightedAverageHeartRateWithStartDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_weightedAverageHeartRateWithStartDate:endDate:");
}

id objc_msgSend_fiui_workoutCustomSplits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_workoutCustomSplits");
}

id objc_msgSend_fiui_workoutSplitsForUserPreferredDistanceUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fiui_workoutSplitsForUserPreferredDistanceUnit:");
}

id objc_msgSend_flashScrollIndicators(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flashScrollIndicators");
}

id objc_msgSend_flattenedImageWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flattenedImageWithColor:");
}

id objc_msgSend_flightsClimbedColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flightsClimbedColors");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "floatValue");
}

id objc_msgSend_flushMetricEvents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flushMetricEvents");
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "font");
}

id objc_msgSend_fontDescriptor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptor");
}

id objc_msgSend_fontDescriptorByAddingAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptorByAddingAttributes:");
}

id objc_msgSend_fontDescriptorWithSymbolicTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptorWithSymbolicTraits:");
}

id objc_msgSend_fontSizeChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontSizeChanged:");
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithDescriptor:size:");
}

id objc_msgSend_forCompanion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forCompanion");
}

id objc_msgSend_forDayView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forDayView");
}

id objc_msgSend_forModalPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forModalPresentation");
}

id objc_msgSend_forceCloudSyncDataUploadForProfileWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceCloudSyncDataUploadForProfileWithCompletion:");
}

id objc_msgSend_forceNanoSyncWithOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceNanoSyncWithOptions:completion:");
}

id objc_msgSend_formUnionWithCharacterSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formUnionWithCharacterSet:");
}

id objc_msgSend_formattedActiveEnergyForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedActiveEnergyForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedActiveEnergyValueForUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedActiveEnergyValueForUnit:");
}

id objc_msgSend_formattedAverageActiveEnergyBurnWithFormattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedAverageActiveEnergyBurnWithFormattingManager:");
}

id objc_msgSend_formattedAverageCadenceForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedAverageCadenceForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedAveragePowerForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedAveragePowerForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedAveragePowerStringFor_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedAveragePowerStringFor:context:");
}

id objc_msgSend_formattedAverageSwimPaceWithDuration_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedAverageSwimPaceWithDuration:context:");
}

id objc_msgSend_formattedAverageWorkoutDurationWithFormattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedAverageWorkoutDurationWithFormattingManager:");
}

id objc_msgSend_formattedCount_color_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedCount:color:context:");
}

id objc_msgSend_formattedDateForWorkout_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedDateForWorkout:context:");
}

id objc_msgSend_formattedDescriptionForWorkout_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedDescriptionForWorkout:context:");
}

id objc_msgSend_formattedDistanceByStrokeStyle_isPoolSwim_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedDistanceByStrokeStyle:isPoolSwim:context:");
}

id objc_msgSend_formattedDistanceForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedDistanceForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedDistanceValueForUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedDistanceValueForUnit:");
}

id objc_msgSend_formattedDistanceWithFormattingManager_distanceType_amountType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedDistanceWithFormattingManager:distanceType:amountType:");
}

id objc_msgSend_formattedDownhillRunsCount_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedDownhillRunsCount:context:");
}

id objc_msgSend_formattedDurationForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedDurationForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedElapsedTimeForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedElapsedTimeForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedElevation_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedElevation:context:");
}

id objc_msgSend_formattedElevationGainForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedElevationGainForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedEnergyBurn_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedEnergyBurn:context:");
}

id objc_msgSend_formattedFlightsClimbedForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedFlightsClimbedForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedGoalCompletedDurationForWorkout_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedGoalCompletedDurationForWorkout:context:");
}

id objc_msgSend_formattedGoalForWorkout_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedGoalForWorkout:context:");
}

id objc_msgSend_formattedHeartRate_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedHeartRate:context:");
}

id objc_msgSend_formattedLapCountForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedLapCountForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedListStringForDate_font_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedListStringForDate:font:");
}

id objc_msgSend_formattedPaceOrSpeedForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedPaceOrSpeedForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedPaceOrSpeedWithDistance_overDuration_activityType_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedPaceOrSpeedWithDistance:overDuration:activityType:context:");
}

id objc_msgSend_formattedPaceWithFormattingManager_distanceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedPaceWithFormattingManager:distanceType:");
}

id objc_msgSend_formattedPoolLengthForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedPoolLengthForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedPowerStringFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedPowerStringFor:");
}

id objc_msgSend_formattedRacePaceOrSpeedForWorkout_metersPerSecond_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedRacePaceOrSpeedForWorkout:metersPerSecond:context:");
}

id objc_msgSend_formattedRaceTimeForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedRaceTimeForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedSessionCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedSessionCount");
}

id objc_msgSend_formattedStepCountForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedStepCountForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedTimeRangeForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedTimeRangeForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedTotalActiveEnergyBurnWithFormattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedTotalActiveEnergyBurnWithFormattingManager:");
}

id objc_msgSend_formattedTotalDurationWithFormattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedTotalDurationWithFormattingManager:");
}

id objc_msgSend_formattedTotalEnergyForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedTotalEnergyForWorkout:workoutActivity:context:");
}

id objc_msgSend_formattedTotalWorkoutDurationWithFormattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedTotalWorkoutDurationWithFormattingManager:");
}

id objc_msgSend_formattedTypeForWorkout_workoutActivity_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattedTypeForWorkout:workoutActivity:context:");
}

id objc_msgSend_formatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formatter");
}

id objc_msgSend_formattingManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formattingManager");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frame");
}

id objc_msgSend_frameOrigin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameOrigin");
}

id objc_msgSend_fridayGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fridayGoal");
}

id objc_msgSend_friend(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "friend");
}

id objc_msgSend_friendAchievements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "friendAchievements");
}

id objc_msgSend_friendListManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "friendListManager");
}

id objc_msgSend_friendManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "friendManager");
}

id objc_msgSend_friendWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "friendWithUUID:");
}

id objc_msgSend_friendWorkouts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "friendWorkouts");
}

id objc_msgSend_friendsSetupViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "friendsSetupViewController");
}

id objc_msgSend_friendsSetupViewController_didCompletePhase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "friendsSetupViewController:didCompletePhase:");
}

id objc_msgSend_friendsSetupViewControllerDidCompleteSetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "friendsSetupViewControllerDidCompleteSetup:");
}

id objc_msgSend_friendsSetupViewControllerShouldTransitionToCloudKitSignInPhase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "friendsSetupViewControllerShouldTransitionToCloudKitSignInPhase:");
}

id objc_msgSend_fu_fontWithStraightSidedNumbers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fu_fontWithStraightSidedNumbers");
}

id objc_msgSend_fu_lightSausageFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fu_lightSausageFontOfSize:");
}

id objc_msgSend_fu_monospacedFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fu_monospacedFont");
}

id objc_msgSend_fu_sausageFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fu_sausageFontOfSize:");
}

id objc_msgSend_fu_shortSlashFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fu_shortSlashFont");
}

id objc_msgSend_fu_systemTextGreyColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fu_systemTextGreyColor");
}

id objc_msgSend_fullName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullName");
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "functionWithName:");
}

id objc_msgSend_generateHeaders(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateHeaders");
}

id objc_msgSend_getAccountsInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAccountsInfo:");
}

id objc_msgSend_getIconForBundleID_iconVariant_block_timeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getIconForBundleID:iconVariant:block:timeout:");
}

id objc_msgSend_getNotificationSettingsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getNotificationSettingsWithCompletionHandler:");
}

id objc_msgSend_getRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRed:green:blue:alpha:");
}

id objc_msgSend_goal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goal");
}

id objc_msgSend_goalColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goalColor");
}

id objc_msgSend_goalDays(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goalDays");
}

id objc_msgSend_goalDescriptionFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goalDescriptionFont");
}

id objc_msgSend_goalProgressAttrStringWithCurrentValue_goalValue_unitString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goalProgressAttrStringWithCurrentValue:goalValue:unitString:");
}

id objc_msgSend_goalQuantityForToday(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goalQuantityForToday");
}

id objc_msgSend_goalType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goalType");
}

id objc_msgSend_goalUnitStringFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goalUnitStringFormatter");
}

id objc_msgSend_goalValueStringFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goalValueStringFormatter");
}

id objc_msgSend_gradientDarkColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gradientDarkColor");
}

id objc_msgSend_gradientLightColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gradientLightColor");
}

id objc_msgSend_gramUnitWithMetricPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gramUnitWithMetricPrefix:");
}

id objc_msgSend_grayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "grayColor");
}

id objc_msgSend_groundContactTimeSamples(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groundContactTimeSamples");
}

id objc_msgSend_groupDiameter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupDiameter");
}

id objc_msgSend_gymKitIconWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gymKitIconWidth");
}

id objc_msgSend_handleActivitySharingURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleActivitySharingURL:");
}

id objc_msgSend_handleFitnessCoachingNotificationResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFitnessCoachingNotificationResponse:");
}

id objc_msgSend_handleNotificationResponse_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNotificationResponse:completion:");
}

id objc_msgSend_handleNotificationResponse_presentingNavigationController_healthStore_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNotificationResponse:presentingNavigationController:healthStore:formattingManager:");
}

id objc_msgSend_handleWindowScene_with_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleWindowScene:with:");
}

id objc_msgSend_hasActiveLocationQuery(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasActiveLocationQuery");
}

id objc_msgSend_hasAnyFriendsSetup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAnyFriendsSetup");
}

id objc_msgSend_hasAverageCadenceForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAverageCadenceForWorkout:workoutActivity:");
}

id objc_msgSend_hasAverageCyclingPowerForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAverageCyclingPowerForWorkout:workoutActivity:");
}

id objc_msgSend_hasAverageCyclingSpeedForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAverageCyclingSpeedForWorkout:workoutActivity:");
}

id objc_msgSend_hasAveragePowerForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAveragePowerForWorkout:workoutActivity:");
}

id objc_msgSend_hasCachedThumbnailImageForAchievement_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCachedThumbnailImageForAchievement:size:");
}

id objc_msgSend_hasCarriedForwardGoals(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCarriedForwardGoals");
}

id objc_msgSend_hasChartableMetrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasChartableMetrics");
}

id objc_msgSend_hasCompetitionHistory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCompetitionHistory");
}

id objc_msgSend_hasConnectedGymVendorIconForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasConnectedGymVendorIconForWorkout:");
}

id objc_msgSend_hasCurrentWorkouts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCurrentWorkouts");
}

id objc_msgSend_hasDemoWorkouts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasDemoWorkouts");
}

id objc_msgSend_hasDistanceForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasDistanceForWorkout:workoutActivity:");
}

id objc_msgSend_hasElevationAscendedDataForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasElevationAscendedDataForWorkout:workoutActivity:");
}

id objc_msgSend_hasFlightsClimbedForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasFlightsClimbedForWorkout:workoutActivity:");
}

id objc_msgSend_hasPendingCompetitionRequestFromMe(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPendingCompetitionRequestFromMe");
}

id objc_msgSend_hasReachedMaxNumberOfFriends(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasReachedMaxNumberOfFriends");
}

id objc_msgSend_hasStepCountForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasStepCountForWorkout:workoutActivity:");
}

id objc_msgSend_hasVisibleAchievements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasVisibleAchievements");
}

id objc_msgSend_hasVisitedSeymourTabKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasVisitedSeymourTabKey");
}

id objc_msgSend_hasWeatherConditionForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasWeatherConditionForWorkout:workoutActivity:");
}

id objc_msgSend_hasWheelchairDataSubmissionAllowedBeenSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasWheelchairDataSubmissionAllowedBeenSet");
}

id objc_msgSend_hasWorkouts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasWorkouts");
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hash");
}

id objc_msgSend_headerFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headerFont");
}

id objc_msgSend_headerStringForSection_isRecentAndRelevant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headerStringForSection:isRecentAndRelevant:");
}

id objc_msgSend_headerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headerView");
}

id objc_msgSend_headerViewForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headerViewForSection:");
}

id objc_msgSend_healthStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "healthStore");
}

id objc_msgSend_heartRateColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heartRateColors");
}

id objc_msgSend_heartRateDataForWorkout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heartRateDataForWorkout:workoutActivity:completion:");
}

id objc_msgSend_heartRateReadings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heartRateReadings");
}

id objc_msgSend_height(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "height");
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightAnchor");
}

id objc_msgSend_heightConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightConstraint");
}

id objc_msgSend_heightForCellAtIndex_oneTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightForCellAtIndex:oneTime:");
}

id objc_msgSend_heightForWorkoutActivityTypeKey_statistics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightForWorkoutActivityTypeKey:statistics:");
}

id objc_msgSend_hiddenApplications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hiddenApplications");
}

id objc_msgSend_hide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hide");
}

id objc_msgSend_highlightWeekdayLabelForDateAndSetDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightWeekdayLabelForDateAndSetDay:");
}

id objc_msgSend_highlightedLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedLabelColor");
}

id objc_msgSend_highlightedSubLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedSubLabelColor");
}

id objc_msgSend_historyDataProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "historyDataProvider");
}

id objc_msgSend_historyFilterDisambiguatesLocationForActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "historyFilterDisambiguatesLocationForActivityType:");
}

id objc_msgSend_hkWorkoutFromFriendWorkout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hkWorkoutFromFriendWorkout");
}

id objc_msgSend_hk_configureWithActivitySummary_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hk_configureWithActivitySummary:animated:");
}

id objc_msgSend_hk_configureWithActivitySummary_isStandaloneFallback_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hk_configureWithActivitySummary:isStandaloneFallback:animated:completion:");
}

id objc_msgSend_hk_dateByAddingDays_toDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hk_dateByAddingDays:toDate:");
}

id objc_msgSend_hk_dictionaryByAddingEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hk_dictionaryByAddingEntriesFromDictionary:");
}

id objc_msgSend_hk_filter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hk_filter:");
}

id objc_msgSend_hk_firstObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hk_firstObjectPassingTest:");
}

id objc_msgSend_hk_gregorianCalendar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hk_gregorianCalendar");
}

id objc_msgSend_hk_gregorianCalendarWithUTCTimeZone(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hk_gregorianCalendarWithUTCTimeZone");
}

id objc_msgSend_hk_map_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hk_map:");
}

id objc_msgSend_hk_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hk_preferredFontForTextStyle:");
}

id objc_msgSend_hk_startOfDateByAddingDays_toDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hk_startOfDateByAddingDays:toDate:");
}

id objc_msgSend_hk_startOfFitnessWeekBeforeDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hk_startOfFitnessWeekBeforeDate:");
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "host");
}

id objc_msgSend_iMessageService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iMessageService");
}

id objc_msgSend_iconForConnectedGymDevice_preferredIconWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconForConnectedGymDevice:preferredIconWidth:");
}

id objc_msgSend_iconImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconImage");
}

id objc_msgSend_iconImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconImageView");
}

id objc_msgSend_iconVariant2x(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconVariant2x");
}

id objc_msgSend_iconVariant3x(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconVariant3x");
}

id objc_msgSend_iconWithSystemImageName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconWithSystemImageName:");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifier");
}

id objc_msgSend_ignoreCompetitionInviteFromFriendUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreCompetitionInviteFromFriendUUID:completion:");
}

id objc_msgSend_ignoreCompetitionRequestFromFriend_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreCompetitionRequestFromFriend:completion:");
}

id objc_msgSend_ignoreFriendInviteFromFriendUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreFriendInviteFromFriendUUID:completion:");
}

id objc_msgSend_ignoreInvitationFromFriend_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreInvitationFromFriend:completion:");
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "image");
}

id objc_msgSend_imageDimension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageDimension");
}

id objc_msgSend_imageFactory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageFactory");
}

id objc_msgSend_imageForCacheKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForCacheKey:");
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:");
}

id objc_msgSend_imageNamed_inBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:inBundle:");
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageView");
}

id objc_msgSend_imageWithContentsOfCPBitmapFile_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithContentsOfCPBitmapFile:flags:");
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithRenderingMode:");
}

id objc_msgSend_imageWithSymbolConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithSymbolConfiguration:");
}

id objc_msgSend_imageWithTintColor_renderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithTintColor:renderingMode:");
}

id objc_msgSend_incomingTableViewCellDidTapAccept_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incomingTableViewCellDidTapAccept:");
}

id objc_msgSend_incomingTableViewCellDidTapIgnore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incomingTableViewCellDidTapIgnore:");
}

id objc_msgSend_index(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "index");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectPassingTest:");
}

id objc_msgSend_indexPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPath");
}

id objc_msgSend_indexPathForCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForCell:");
}

id objc_msgSend_indexPathForItem_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForItem:inSection:");
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForRow:inSection:");
}

id objc_msgSend_indexPathsForVisibleRows(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathsForVisibleRows");
}

id objc_msgSend_indexSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSet");
}

id objc_msgSend_indexSetWithIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSetWithIndex:");
}

id objc_msgSend_indexSetWithIndexesInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSetWithIndexesInRange:");
}

id objc_msgSend_indicatorView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indicatorView");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "init");
}

id objc_msgSend_initForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForWorkout:");
}

id objc_msgSend_initUsingEarnedShader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initUsingEarnedShader:");
}

id objc_msgSend_initWithAchievement_healthStore_friendListManager_achievementDataProvider_badgeImageFactory_resourceProvider_formattingManager_localizationProvider_pauseRingsCoordinator_fitnessAppContext_workoutFormattingManager_workoutDataProvider_forModalPresentation_shouldShowCelebration_shouldShowEarned_shouldShowAssociatedWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAchievement:healthStore:friendListManager:achievementDataProvider:badgeImageFactory:resourceProvider:formattingManager:localizationProvider:pauseRingsCoordinator:fitnessAppContext:workoutFormattingManager:workoutDataProvider:forModalPresentation:shouldShowCelebration:shouldShowEarned:shouldShowAssociatedWorkout:");
}

id objc_msgSend_initWithAchievement_locProvider_formatsForFriend_forDayView_forModalPresentation_shouldShowCelebration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAchievement:locProvider:formatsForFriend:forDayView:forModalPresentation:shouldShowCelebration:");
}

id objc_msgSend_initWithActionIdentifier_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActionIdentifier:userInfo:");
}

id objc_msgSend_initWithActivityDataProvider_activityDateCache_achievementsDataProvider_balanceDataProvider_pauseRingsCoordinator_historyDataProvider_workoutFormattingManager_workoutDataProvider_friendListManager_friendsSetupCoordinator_chFriendManager_achievementLocalizationProvider_badgeImageFactory_healthStore_fiuiFormattingManager_fitnessAppContext_wheelchairUseCache_trendsAvailabilityManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityDataProvider:activityDateCache:achievementsDataProvider:balanceDataProvider:pauseRingsCoordinator:historyDataProvider:workoutFormattingManager:workoutDataProvider:friendListManager:friendsSetupCoordinator:chFriendManager:achievementLocalizationProvider:badgeImageFactory:healthStore:fiuiFormattingManager:fitnessAppContext:wheelchairUseCache:trendsAvailabilityManager:");
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityIndicatorStyle:");
}

id objc_msgSend_initWithActivityItems_applicationActivities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityItems:applicationActivities:");
}

id objc_msgSend_initWithActivitySettingsController_showWheelchair_pregnancyStateProvider_showPregnancy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivitySettingsController:showWheelchair:pregnancyStateProvider:showPregnancy:");
}

id objc_msgSend_initWithActivitySharingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivitySharingClient:");
}

id objc_msgSend_initWithAppContext_badgingProvider_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAppContext:badgingProvider:delegate:");
}

id objc_msgSend_initWithArrangedSubviews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArrangedSubviews:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithAutocompleteSearchType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAutocompleteSearchType:");
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBarButtonSystemItem:target:action:");
}

id objc_msgSend_initWithCalendarIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCalendarIdentifier:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithCategory_domainName_healthStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCategory:domainName:healthStore:");
}

id objc_msgSend_initWithCollectionView_achievements_imageFactory_locProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCollectionView:achievements:imageFactory:locProvider:");
}

id objc_msgSend_initWithCollectionViewLayout_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCollectionViewLayout:context:");
}

id objc_msgSend_initWithComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithComponent:");
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:");
}

id objc_msgSend_initWithContact_address_kind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContact:address:kind:");
}

id objc_msgSend_initWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfURL:");
}

id objc_msgSend_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:");
}

id objc_msgSend_initWithCustomView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCustomView:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithData_MIMEType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:MIMEType:");
}

id objc_msgSend_initWithDataCalculator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataCalculator:");
}

id objc_msgSend_initWithDataLinkMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataLinkMonitor:");
}

id objc_msgSend_initWithDataProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataProvider:");
}

id objc_msgSend_initWithDataProvider_collectionView_localizationProvider_badgeImageFactory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataProvider:collectionView:localizationProvider:badgeImageFactory:");
}

id objc_msgSend_initWithDataProvider_collectionView_recentAndRelevantCollectionView_recentAndRelevantDataSource_localizationProvider_badgeImageFactory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataProvider:collectionView:recentAndRelevantCollectionView:recentAndRelevantDataSource:localizationProvider:badgeImageFactory:");
}

id objc_msgSend_initWithDataProvider_healthStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataProvider:healthStore:");
}

id objc_msgSend_initWithDate_andRows_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDate:andRows:");
}

id objc_msgSend_initWithDate_quantity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDate:quantity:");
}

id objc_msgSend_initWithDateCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDateCache:");
}

id objc_msgSend_initWithDateCache_pauseRingsCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDateCache:pauseRingsCoordinator:");
}

id objc_msgSend_initWithDateCache_workoutsDataProvider_pauseRingsCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDateCache:workoutsDataProvider:pauseRingsCoordinator:");
}

id objc_msgSend_initWithDateInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDateInterval:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:code:userInfo:");
}

id objc_msgSend_initWithDownhillRunBridges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDownhillRunBridges:");
}

id objc_msgSend_initWithDownhillRunDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDownhillRunDataSource:");
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffect:");
}

id objc_msgSend_initWithFitnessAppContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFitnessAppContext:");
}

id objc_msgSend_initWithFitnessAppContext_activitySharingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFitnessAppContext:activitySharingClient:");
}

id objc_msgSend_initWithFitnessPlusAvailable_buttonHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFitnessPlusAvailable:buttonHandler:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithFrame_badgeImageFactory_locProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:badgeImageFactory:locProvider:");
}

id objc_msgSend_initWithFrame_collectionViewLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:collectionViewLayout:");
}

id objc_msgSend_initWithFrame_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:configuration:");
}

id objc_msgSend_initWithFrame_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:style:");
}

id objc_msgSend_initWithFriendListManager_andWithFriendManager_achievementsDataProvider_workoutsDataProvider_workoutFormattingManager_formattingManager_badgeImageFactory_healthStore_fitnessAppContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFriendListManager:andWithFriendManager:achievementsDataProvider:workoutsDataProvider:workoutFormattingManager:formattingManager:badgeImageFactory:healthStore:fitnessAppContext:");
}

id objc_msgSend_initWithFriendListManager_friendManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFriendListManager:friendManager:");
}

id objc_msgSend_initWithFriendListManager_friendManager_achievementsDataProvider_workoutsDataProvider_workoutFormattingManager_formattingManager_badgeImageFactory_healthStore_fitnessAppContext_makeFriendDetailViewControllerBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFriendListManager:friendManager:achievementsDataProvider:workoutsDataProvider:workoutFormattingManager:formattingManager:badgeImageFactory:healthStore:fitnessAppContext:makeFriendDetailViewControllerBlock:");
}

id objc_msgSend_initWithFriendListManager_friendManager_friend_snapshot_snapshotDate_achievementsDataProvider_workoutDataProvider_workoutFormattingManager_formattingManager_badgeImageFactory_healthStore_fitnessAppContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFriendListManager:friendManager:friend:snapshot:snapshotDate:achievementsDataProvider:workoutDataProvider:workoutFormattingManager:formattingManager:badgeImageFactory:healthStore:fitnessAppContext:");
}

id objc_msgSend_initWithFriendManager_friendListSectionManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFriendManager:friendListSectionManager:");
}

id objc_msgSend_initWithGoalSchedule_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGoalSchedule:");
}

id objc_msgSend_initWithHealthStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHealthStore:");
}

id objc_msgSend_initWithHealthStore_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHealthStore:delegate:");
}

id objc_msgSend_initWithHealthStore_diveSession_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHealthStore:diveSession:formattingManager:");
}

id objc_msgSend_initWithHealthStore_fitnessAppContext_activityDataProvider_pauseRingsCoordinator_historyDataProvider_achievementsDataProvider_achievementLocalizationProvider_fiuiModel_badgeImageFactory_friendListManager_fiuiFormattingManager_workoutFormattingManager_activityDateCache_trendsAvailabilityManager_wheelchairUseCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHealthStore:fitnessAppContext:activityDataProvider:pauseRingsCoordinator:historyDataProvider:achievementsDataProvider:achievementLocalizationProvider:fiuiModel:badgeImageFactory:friendListManager:fiuiFormattingManager:workoutFormattingManager:activityDateCache:trendsAvailabilityManager:wheelchairUseCache:");
}

id objc_msgSend_initWithHealthStore_gregorianCalendar_historyDataProvider_activityDataProvider_isFaking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHealthStore:gregorianCalendar:historyDataProvider:activityDataProvider:isFaking:");
}

id objc_msgSend_initWithHealthStore_layoutMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHealthStore:layoutMode:");
}

id objc_msgSend_initWithHealthStore_seymourAvailabilityManager_wheelchairUseCache_formattingManager_pregnancyStateProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHealthStore:seymourAvailabilityManager:wheelchairUseCache:formattingManager:pregnancyStateProvider:");
}

id objc_msgSend_initWithHealthStore_unitManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHealthStore:unitManager:");
}

id objc_msgSend_initWithHealthStore_wheelchairUseCache_workoutDataProvider_achievementsDataProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHealthStore:wheelchairUseCache:workoutDataProvider:achievementsDataProvider:");
}

id objc_msgSend_initWithIconImage_routeImage_metricTitleAndValueInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIconImage:routeImage:metricTitleAndValueInfo:");
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:");
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:");
}

id objc_msgSend_initWithImage_menu_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:menu:");
}

id objc_msgSend_initWithImage_style_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:style:target:action:");
}

id objc_msgSend_initWithIntervalDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIntervalDataSource:");
}

id objc_msgSend_initWithItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithItems:");
}

id objc_msgSend_initWithLatitude_longitude_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLatitude:longitude:");
}

id objc_msgSend_initWithLocation_workout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocation:workout:");
}

id objc_msgSend_initWithLocationReadings_title_sharingEnabled_shareText_excludedActivityTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocationReadings:title:sharingEnabled:shareText:excludedActivityTypes:");
}

id objc_msgSend_initWithMaximumRingCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMaximumRingCount:");
}

id objc_msgSend_initWithMetricsVersion_activityType_activityMoveMode_deviceSupportsElevationMetrics_deviceSupportsGroundElevationMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMetricsVersion:activityType:activityMoveMode:deviceSupportsElevationMetrics:deviceSupportsGroundElevationMetrics:");
}

id objc_msgSend_initWithMigrationKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMigrationKeys:");
}

id objc_msgSend_initWithModel_activitySharingClient_workoutDataProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithModel:activitySharingClient:workoutDataProvider:");
}

id objc_msgSend_initWithNextMoveMode_notificationType_healthStore_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNextMoveMode:notificationType:healthStore:formattingManager:");
}

id objc_msgSend_initWithNibName_bundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNibName:bundle:");
}

id objc_msgSend_initWithNumberOfRings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNumberOfRings:");
}

id objc_msgSend_initWithOutgoingInvites_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutgoingInvites:");
}

id objc_msgSend_initWithPathRendererClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPathRendererClass:");
}

id objc_msgSend_initWithPauseRingsCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPauseRingsCoordinator:");
}

id objc_msgSend_initWithPlatformImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlatformImage:");
}

id objc_msgSend_initWithPredicate_anchor_options_resultsHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPredicate:anchor:options:resultsHandler:");
}

id objc_msgSend_initWithPredicate_resultsHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPredicate:resultsHandler:");
}

id objc_msgSend_initWithPresentationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPresentationContext:");
}

id objc_msgSend_initWithPresentationContext_goalType_editTodayOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPresentationContext:goalType:editTodayOnly:");
}

id objc_msgSend_initWithPresentationContext_pregnancyStateProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPresentationContext:pregnancyStateProvider:");
}

id objc_msgSend_initWithPresentingViewController_detailViewController_shouldPlayFlipInAnimation_initialBadgeFrame_conversionView_didStartAnimationBlock_didFinishAnimationBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPresentingViewController:detailViewController:shouldPlayFlipInAnimation:initialBadgeFrame:conversionView:didStartAnimationBlock:didFinishAnimationBlock:");
}

id objc_msgSend_initWithPresentingViewController_detailViewController_shouldPlayFlipInAnimation_initialBadgeFrame_conversionView_presentAlongsideBlock_dismissAlongsideBlock_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPresentingViewController:detailViewController:shouldPlayFlipInAnimation:initialBadgeFrame:conversionView:presentAlongsideBlock:dismissAlongsideBlock:completionBlock:");
}

id objc_msgSend_initWithProgressViewStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProgressViewStyle:");
}

id objc_msgSend_initWithQuantitySamples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQuantitySamples:");
}

id objc_msgSend_initWithQuantityType_predicate_quantityHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQuantityType:predicate:quantityHandler:");
}

id objc_msgSend_initWithQuantityType_quantitySamplePredicate_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQuantityType:quantitySamplePredicate:options:completionHandler:");
}

id objc_msgSend_initWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:");
}

id objc_msgSend_initWithRingGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRingGroup:");
}

id objc_msgSend_initWithRingGroups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRingGroups:");
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRootViewController:");
}

id objc_msgSend_initWithSBSApplicationShortcutIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSBSApplicationShortcutIcon:");
}

id objc_msgSend_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:");
}

id objc_msgSend_initWithSamples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSamples:");
}

id objc_msgSend_initWithSegmentDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSegmentDataSource:");
}

id objc_msgSend_initWithSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSettings:");
}

id objc_msgSend_initWithSizingDelegate_dateProvider_pauseRingsCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSizingDelegate:dateProvider:pauseRingsCoordinator:");
}

id objc_msgSend_initWithSplitDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSplitDataSource:");
}

id objc_msgSend_initWithSplitDelimiterDistance_distanceInUserUnit_strokeCount_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSplitDelimiterDistance:distanceInUserUnit:strokeCount:duration:");
}

id objc_msgSend_initWithStartDate_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartDate:duration:");
}

id objc_msgSend_initWithStartDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartDate:endDate:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:attributes:");
}

id objc_msgSend_initWithStringValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStringValue:");
}

id objc_msgSend_initWithStyle_achievement_achLocalizationProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStyle:achievement:achLocalizationProvider:");
}

id objc_msgSend_initWithStyle_diameter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStyle:diameter:");
}

id objc_msgSend_initWithStyle_reuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStyle:reuseIdentifier:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithSwimmingSetDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSwimmingSetDataSource:");
}

id objc_msgSend_initWithSwimmingSplitDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSwimmingSplitDataSource:");
}

id objc_msgSend_initWithSystemImageName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSystemImageName:");
}

id objc_msgSend_initWithTabBarController_fitnessAppContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTabBarController:fitnessAppContext:");
}

id objc_msgSend_initWithTabBarController_healthStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTabBarController:healthStore:");
}

id objc_msgSend_initWithTableView_dataProvider_fitnessAppContext_formattingManager_badgeImageFactory_awardsDataProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTableView:dataProvider:fitnessAppContext:formattingManager:badgeImageFactory:awardsDataProvider:");
}

id objc_msgSend_initWithTableView_workout_workoutActivity_healthStore_model_fitnessAppContext_formattingManager_badgeImageFactory_achievementLocalizationProvider_awardsDataProvider_fiuiFormattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTableView:workout:workoutActivity:healthStore:model:fitnessAppContext:formattingManager:badgeImageFactory:achievementLocalizationProvider:awardsDataProvider:fiuiFormattingManager:");
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:action:");
}

id objc_msgSend_initWithTitle_menu_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:menu:");
}

id objc_msgSend_initWithTitle_passwordLength_supportedOrientations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:passwordLength:supportedOrientations:");
}

id objc_msgSend_initWithTitle_style_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:style:target:action:");
}

id objc_msgSend_initWithTrackLapDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTrackLapDataSource:");
}

id objc_msgSend_initWithType_clientIdentifier_clientVersion_bag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:clientIdentifier:clientVersion:bag:");
}

id objc_msgSend_initWithType_localizedTitle_localizedSubtitle_icon_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:localizedTitle:localizedSubtitle:icon:userInfo:");
}

id objc_msgSend_initWithType_predicate_anchor_limit_resultsHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:predicate:anchor:limit:resultsHandler:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_initWithUnitManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUnitManager:");
}

id objc_msgSend_initWithWindowScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWindowScene:");
}

id objc_msgSend_initWithWorkout_dataCalculator_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWorkout:dataCalculator:formattingManager:");
}

id objc_msgSend_initWithWorkout_dataCalculator_trackDistanceUnit_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWorkout:dataCalculator:trackDistanceUnit:formattingManager:");
}

id objc_msgSend_initWithWorkout_workoutActivity_dataCalculator_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWorkout:workoutActivity:dataCalculator:formattingManager:");
}

id objc_msgSend_initWithWorkout_workoutActivity_dataCalculator_formattingManager_locationReadings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWorkout:workoutActivity:dataCalculator:formattingManager:locationReadings:");
}

id objc_msgSend_initWithWorkout_workoutActivity_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWorkout:workoutActivity:formattingManager:");
}

id objc_msgSend_initWithWorkout_workoutActivity_healthStore_formattingManager_isFirstPartyWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWorkout:workoutActivity:healthStore:formattingManager:isFirstPartyWorkout:");
}

id objc_msgSend_initWithWorkout_workoutActivity_healthStore_model_fitnessAppContext_workoutFormattingManager_workoutDataProvider_badgeImageFactory_friendListManager_achievementLocalizationProvider_pauseRingsCoordinator_achievementResourceProvider_formattingManager_awardsDataProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWorkout:workoutActivity:healthStore:model:fitnessAppContext:workoutFormattingManager:workoutDataProvider:badgeImageFactory:friendListManager:achievementLocalizationProvider:pauseRingsCoordinator:achievementResourceProvider:formattingManager:awardsDataProvider:");
}

id objc_msgSend_initWithWorkoutEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWorkoutEvent:");
}

id objc_msgSend_initWithWorkouts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWorkouts:");
}

id objc_msgSend_initializeCachePathOnMainQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initializeCachePathOnMainQueue");
}

id objc_msgSend_insertArrangedSubview_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertArrangedSubview:atIndex:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_insertObjects_atIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObjects:atIndexes:");
}

id objc_msgSend_insertRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_insertSamples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSamples:");
}

id objc_msgSend_insertSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSections:withRowAnimation:");
}

id objc_msgSend_insertSublayer_below_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSublayer:below:");
}

id objc_msgSend_insertSubview_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:atIndex:");
}

id objc_msgSend_insertSubview_below_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:below:");
}

id objc_msgSend_insetView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insetView");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intValue");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerValue");
}

id objc_msgSend_interactivePopGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interactivePopGestureRecognizer");
}

id objc_msgSend_intersectionWithDateInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectionWithDateInterval:");
}

id objc_msgSend_interval(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interval");
}

id objc_msgSend_intervalIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intervalIndex");
}

id objc_msgSend_intervals(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intervals");
}

id objc_msgSend_intervalsForWorkout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intervalsForWorkout:completion:");
}

id objc_msgSend_intrinsicContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intrinsicContentSize");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidate");
}

id objc_msgSend_invalidateIntrinsicContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateIntrinsicContentSize");
}

id objc_msgSend_invalidateLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateLayout");
}

id objc_msgSend_invalidateMaxCellHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateMaxCellHeight");
}

id objc_msgSend_isActivityDataVisibleToMeForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isActivityDataVisibleToMeForDate:");
}

id objc_msgSend_isAmm(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAmm");
}

id objc_msgSend_isAppleInternalInstall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAppleInternalInstall");
}

id objc_msgSend_isAwaitingCompetitionResponseFromMe(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAwaitingCompetitionResponseFromMe");
}

id objc_msgSend_isAwaitingInviteResponseFromMe(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAwaitingInviteResponseFromMe");
}

id objc_msgSend_isCloudKitAccountActiveWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCloudKitAccountActiveWithCompletion:");
}

id objc_msgSend_isCompatibleWithUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCompatibleWithUnit:");
}

id objc_msgSend_isCompetitionActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCompetitionActive");
}

id objc_msgSend_isCurrentFilterValid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCurrentFilterValid");
}

id objc_msgSend_isDate_equalToDate_toUnitGranularity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDate:equalToDate:toUnitGranularity:");
}

id objc_msgSend_isDate_inSameDayAsDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDate:inSameDayAsDate:");
}

id objc_msgSend_isDateInToday_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDateInToday:");
}

id objc_msgSend_isDescendantOfView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDescendantOfView:");
}

id objc_msgSend_isDiagnosticSubmissionAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDiagnosticSubmissionAllowed");
}

id objc_msgSend_isEmail(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEmail");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToAttributedString:");
}

id objc_msgSend_isEqualToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDate:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isFutureDay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFutureDay");
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHidden");
}

id objc_msgSend_isIndoor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isIndoor");
}

id objc_msgSend_isIndoorCyclingForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isIndoorCyclingForWorkout:workoutActivity:");
}

id objc_msgSend_isIntervalWorkout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isIntervalWorkout");
}

id objc_msgSend_isLikePhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLikePhoneNumber:");
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMainThread");
}

id objc_msgSend_isMe(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMe");
}

id objc_msgSend_isMetricTypeSupported_isMachineWorkout_activityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMetricTypeSupported:isMachineWorkout:activityType:");
}

id objc_msgSend_isMirroringSessionActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMirroringSessionActive");
}

id objc_msgSend_isMultiSportWorkout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMultiSportWorkout");
}

id objc_msgSend_isMuted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMuted");
}

id objc_msgSend_isMyActivityDataCurrentlyHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMyActivityDataCurrentlyHidden");
}

id objc_msgSend_isNavigationBarHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNavigationBarHidden");
}

id objc_msgSend_isPaused(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPaused");
}

id objc_msgSend_isPausedForActivitySummary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPausedForActivitySummary:");
}

id objc_msgSend_isPausedForActivitySummaryCacheIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPausedForActivitySummaryCacheIndex:");
}

id objc_msgSend_isPhoneNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPhoneNumber");
}

id objc_msgSend_isRaceWorkout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRaceWorkout");
}

id objc_msgSend_isRunningInStoreDemoMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRunningInStoreDemoMode");
}

id objc_msgSend_isSessionViewControllerPresented(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSessionViewControllerPresented");
}

id objc_msgSend_isSeymourGuidedRunWorkout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSeymourGuidedRunWorkout");
}

id objc_msgSend_isSeymourPairedWorkout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSeymourPairedWorkout");
}

id objc_msgSend_isSeymourWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSeymourWorkout:");
}

id objc_msgSend_isStandaloneForCacheIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStandaloneForCacheIndex:");
}

id objc_msgSend_isStandalonePhoneFitnessMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStandalonePhoneFitnessMode");
}

id objc_msgSend_isSwimmingActivity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSwimmingActivity");
}

id objc_msgSend_isTrackWorkout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTrackWorkout");
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isViewLoaded");
}

id objc_msgSend_isWatchWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWatchWorkout:");
}

id objc_msgSend_isWheelchairUser(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWheelchairUser");
}

id objc_msgSend_item(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "item");
}

id objc_msgSend_kIntervalWorkoutStepDistanceGoalAchievedDateKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kIntervalWorkoutStepDistanceGoalAchievedDateKey");
}

id objc_msgSend_kIntervalWorkoutStepDistanceGoalAchievedDurationKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kIntervalWorkoutStepDistanceGoalAchievedDurationKey");
}

id objc_msgSend_kIntervalWorkoutStepMetadataKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kIntervalWorkoutStepMetadataKey");
}

id objc_msgSend_kIntervalWorkoutStepSuccessful(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kIntervalWorkoutStepSuccessful");
}

id objc_msgSend_kRaceWorkoutAveragePaceOnRouteMetadataKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kRaceWorkoutAveragePaceOnRouteMetadataKey");
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "key");
}

id objc_msgSend_keyColorForDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyColorForDisplayMode:");
}

id objc_msgSend_keyColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyColors");
}

id objc_msgSend_keyLineView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyLineView");
}

id objc_msgSend_kilocalorieUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kilocalorieUnit");
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "label");
}

id objc_msgSend_labelBaselineConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelBaselineConstraint");
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelColor");
}

id objc_msgSend_labelFirstBaselineConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelFirstBaselineConstraint");
}

id objc_msgSend_laneNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "laneNumber");
}

id objc_msgSend_languageCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageCode");
}

id objc_msgSend_lapColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lapColors");
}

id objc_msgSend_lapIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lapIndex");
}

id objc_msgSend_lapLength(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lapLength");
}

id objc_msgSend_lastBaselineAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastBaselineAnchor");
}

id objc_msgSend_lastEffortAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastEffortAnchor");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastObject");
}

id objc_msgSend_laterDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "laterDate:");
}

id objc_msgSend_latestAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "latestAnchor");
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layer");
}

id objc_msgSend_layoutFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutFrame");
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutIfNeeded");
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leadingAnchor");
}

id objc_msgSend_leadingMargin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leadingMargin");
}

id objc_msgSend_leadingTextConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leadingTextConstraint");
}

id objc_msgSend_leanBodyMass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leanBodyMass");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_lightGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lightGrayColor");
}

id objc_msgSend_lightTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lightTextColor");
}

id objc_msgSend_linkButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkButton");
}

id objc_msgSend_linkLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkLabel");
}

id objc_msgSend_linkWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkWithBundleIdentifier:");
}

id objc_msgSend_linkedContactStoreIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkedContactStoreIdentifier");
}

id objc_msgSend_listViewDateFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listViewDateFormatter");
}

id objc_msgSend_loadAppImageAtURL_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadAppImageAtURL:completionHandler:");
}

id objc_msgSend_loadDataIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadDataIfNeeded");
}

id objc_msgSend_loadingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadingView");
}

id objc_msgSend_locProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locProvider");
}

id objc_msgSend_localDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localDevice");
}

id objc_msgSend_localTimeZone(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localTimeZone");
}

id objc_msgSend_localeIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localeIdentifier");
}

id objc_msgSend_localeWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localeWithLocaleIdentifier:");
}

id objc_msgSend_locality(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locality");
}

id objc_msgSend_localizationKeyForEnergyBaseKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizationKeyForEnergyBaseKey:");
}

id objc_msgSend_localizationProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizationProvider");
}

id objc_msgSend_localizedAttributedBacksideString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedAttributedBacksideString");
}

id objc_msgSend_localizedAttributedCombinedString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedAttributedCombinedString");
}

id objc_msgSend_localizedAttributedCombinedStringWithoutProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedAttributedCombinedStringWithoutProgress");
}

id objc_msgSend_localizedAttributedShortenedBacksideString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedAttributedShortenedBacksideString");
}

id objc_msgSend_localizedButtonTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedButtonTitle");
}

id objc_msgSend_localizedCapitalizedString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedCapitalizedString");
}

id objc_msgSend_localizedCompactGoalDescriptionForGoalType_goalValue_activityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedCompactGoalDescriptionForGoalType:goalValue:activityType:");
}

id objc_msgSend_localizedGoalDescriptionForDive_healthStore_outValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedGoalDescriptionForDive:healthStore:outValue:");
}

id objc_msgSend_localizedGoalDescriptionForWorkout_withValue_appendActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedGoalDescriptionForWorkout:withValue:appendActivityType:");
}

id objc_msgSend_localizedLongActiveEnergyUnitString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedLongActiveEnergyUnitString");
}

id objc_msgSend_localizedLongActiveHoursUnitStringForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedLongActiveHoursUnitStringForValue:");
}

id objc_msgSend_localizedLongBriskMinutesUnitStringForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedLongBriskMinutesUnitStringForValue:");
}

id objc_msgSend_localizedLongMoveUnitStringWithActivityMoveMode_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedLongMoveUnitStringWithActivityMoveMode:value:");
}

id objc_msgSend_localizedLowercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedLowercaseString");
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedName");
}

id objc_msgSend_localizedNameForWorkoutTypeKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedNameForWorkoutTypeKey:");
}

id objc_msgSend_localizedNaturalScaleStringWithDistanceInMeters_distanceType_unitStyle_usedUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedNaturalScaleStringWithDistanceInMeters:distanceType:unitStyle:usedUnit:");
}

id objc_msgSend_localizedPaceStringWithDistance_overDuration_paceFormat_distanceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedPaceStringWithDistance:overDuration:paceFormat:distanceType:");
}

id objc_msgSend_localizedShareTextWithWorkout_shareValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedShareTextWithWorkout:shareValue:");
}

id objc_msgSend_localizedShortActiveEnergyUnitString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedShortActiveEnergyUnitString");
}

id objc_msgSend_localizedShortCadenceUnitStringForActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedShortCadenceUnitStringForActivityType:");
}

id objc_msgSend_localizedShortNameForWorkoutTypeKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedShortNameForWorkoutTypeKey:");
}

id objc_msgSend_localizedShortPowerUnitString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedShortPowerUnitString");
}

id objc_msgSend_localizedShortUnitStringForDistanceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedShortUnitStringForDistanceType:");
}

id objc_msgSend_localizedShortUnitStringForDistanceUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedShortUnitStringForDistanceUnit:");
}

id objc_msgSend_localizedShortUnitStringForDistanceUnit_textCase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedShortUnitStringForDistanceUnit:textCase:");
}

id objc_msgSend_localizedSpeedUnitStringForActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedSpeedUnitStringForActivityType:");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringFromDate_dateStyle_timeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringFromDate:dateStyle:timeStyle:");
}

id objc_msgSend_localizedStringFromNumber_numberStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringFromNumber:numberStyle:");
}

id objc_msgSend_localizedStringWithActiveEnergy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithActiveEnergy:");
}

id objc_msgSend_localizedStringWithActiveHours_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithActiveHours:");
}

id objc_msgSend_localizedStringWithBeatsPerMinute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithBeatsPerMinute:");
}

id objc_msgSend_localizedStringWithBriskMinutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithBriskMinutes:");
}

id objc_msgSend_localizedStringWithDistanceInMeters_distanceType_unitStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithDistanceInMeters:distanceType:unitStyle:");
}

id objc_msgSend_localizedStringWithDistanceInMeters_distanceType_unitStyle_roundingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithDistanceInMeters:distanceType:unitStyle:roundingMode:");
}

id objc_msgSend_localizedStringWithDistanceInMeters_distanceUnit_unitStyle_decimalPrecision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithDistanceInMeters:distanceUnit:unitStyle:decimalPrecision:");
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithFormat:");
}

id objc_msgSend_localizedStringWithHeartRate_unitStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithHeartRate:unitStyle:");
}

id objc_msgSend_localizedStringWithMoveQuantity_activityMoveMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithMoveQuantity:activityMoveMode:");
}

id objc_msgSend_localizedStrokeCountStringWithCount_overDistance_paceFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStrokeCountStringWithCount:overDistance:paceFormat:");
}

id objc_msgSend_localizedSwimmingPaceStringWithDistance_overDuration_paceFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedSwimmingPaceStringWithDistance:overDuration:paceFormat:");
}

id objc_msgSend_localizedUppercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedUppercaseString");
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "location");
}

id objc_msgSend_locationFetcher(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationFetcher");
}

id objc_msgSend_locationFetcherObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationFetcherObserver");
}

id objc_msgSend_locationForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationForWorkout:workoutActivity:");
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationInView:");
}

id objc_msgSend_locationReadings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationReadings");
}

id objc_msgSend_locationType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationType");
}

id objc_msgSend_logCardConfigurationAnalytics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logCardConfigurationAnalytics");
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lowercaseString");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainBundle");
}

id objc_msgSend_mainCollectionView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainCollectionView");
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainScreen");
}

id objc_msgSend_mainSectionCellPadding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainSectionCellPadding");
}

id objc_msgSend_mainSectionCellWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainSectionCellWidth");
}

id objc_msgSend_mainSectionDataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainSectionDataSource");
}

id objc_msgSend_mainSectionHorizontalInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainSectionHorizontalInset");
}

id objc_msgSend_makeDownhillRunBridgesWithHealthStore_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeDownhillRunBridgesWithHealthStore:completion:");
}

id objc_msgSend_makeHostingControllerWithStartingEffort_cancel_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeHostingControllerWithStartingEffort:cancel:completion:");
}

id objc_msgSend_makeKeyAndVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeKeyAndVisible");
}

id objc_msgSend_makeNotificationConsentViewController_buttonHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeNotificationConsentViewController:buttonHandler:");
}

id objc_msgSend_makeObjectsPerformSelector_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeObjectsPerformSelector:withObject:");
}

id objc_msgSend_makeViewWithGoalSchedule_goalDaysModel_wheelchairUser_goalType_formattingManager_showFooter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeViewWithGoalSchedule:goalDaysModel:wheelchairUser:goalType:formattingManager:showFooter:");
}

id objc_msgSend_makeWithAchievementBadgeImageFactory_achievementLocalizationProvider_achievementsDataProvider_activitySharingClient_awardsDataProvider_fitnessAppContext_fiuiFormattingManager_friendListSectionManager_friendsSetupCoordinator_friendManager_healthStore_seymourCatalogItemDataProvider_wheelchairUseCache_workoutDataProvider_workoutFormattingManager_pauseRingsCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeWithAchievementBadgeImageFactory:achievementLocalizationProvider:achievementsDataProvider:activitySharingClient:awardsDataProvider:fitnessAppContext:fiuiFormattingManager:friendListSectionManager:friendsSetupCoordinator:friendManager:healthStore:seymourCatalogItemDataProvider:wheelchairUseCache:workoutDataProvider:workoutFormattingManager:pauseRingsCoordinator:");
}

id objc_msgSend_maxCellHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxCellHeight");
}

id objc_msgSend_maximumValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumValue");
}

id objc_msgSend_me(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "me");
}

id objc_msgSend_measuredHeightWithDisplayMode_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "measuredHeightWithDisplayMode:formattingManager:");
}

id objc_msgSend_menuWithChildren_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuWithChildren:");
}

id objc_msgSend_menuWithTitle_children_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuWithTitle:children:");
}

id objc_msgSend_menuWithTitle_image_identifier_options_children_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuWithTitle:image:identifier:options:children:");
}

id objc_msgSend_metadata(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadata");
}

id objc_msgSend_meterUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "meterUnit");
}

id objc_msgSend_meterUnitWithMetricPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "meterUnitWithMetricPrefix:");
}

id objc_msgSend_metricColorsForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metricColorsForWorkout:");
}

id objc_msgSend_metricTitleAndValueInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metricTitleAndValueInfo");
}

id objc_msgSend_metricsVersionForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metricsVersionForWorkout:");
}

id objc_msgSend_migrateIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "migrateIfNeeded");
}

id objc_msgSend_migrationKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "migrationKeys");
}

id objc_msgSend_mileUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mileUnit");
}

id objc_msgSend_minValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minValue");
}

id objc_msgSend_mindfulnessSessionsStatistics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mindfulnessSessionsStatistics");
}

id objc_msgSend_minimumValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumValue");
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_minuteUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minuteUnit");
}

id objc_msgSend_mmg(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mmg");
}

id objc_msgSend_mmv(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mmv");
}

id objc_msgSend_modalBadgeFlipStarted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modalBadgeFlipStarted");
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "model");
}

id objc_msgSend_mondayGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mondayGoal");
}

id objc_msgSend_monogramForContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monogramForContact:");
}

id objc_msgSend_month(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "month");
}

id objc_msgSend_monthScrollDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monthScrollDelegate");
}

id objc_msgSend_monthTitleBottomMargin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monthTitleBottomMargin");
}

id objc_msgSend_monthTitleTopMargin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monthTitleTopMargin");
}

id objc_msgSend_monthTitleView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monthTitleView");
}

id objc_msgSend_mostRecentWorkout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mostRecentWorkout");
}

id objc_msgSend_mostRecentWorkout_supportsMetric_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mostRecentWorkout:supportsMetric:");
}

id objc_msgSend_moveMinuteGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveMinuteGoal");
}

id objc_msgSend_moveModeChangeGoalsNotificationCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveModeChangeGoalsNotificationCategory");
}

id objc_msgSend_moveModeChangeModeNotificationCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveModeChangeModeNotificationCategory");
}

id objc_msgSend_moveModeNotificationCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveModeNotificationCategory");
}

id objc_msgSend_movementEndDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "movementEndDate");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCopy");
}

id objc_msgSend_nCellsPerRow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nCellsPerRow");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_nameFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameFont");
}

id objc_msgSend_nanoSystemSettingsManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nanoSystemSettingsManager");
}

id objc_msgSend_navigateToHistoryAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigateToHistoryAnimated:");
}

id objc_msgSend_navigateToMindfulnessHistoryAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigateToMindfulnessHistoryAnimated:");
}

id objc_msgSend_navigateToTrophyCaseAnimated_initialAchievement_shouldShowCelebration_forModalPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigateToTrophyCaseAnimated:initialAchievement:shouldShowCelebration:forModalPresentation:");
}

id objc_msgSend_navigateToTrophyCaseSection_withAchievementID_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigateToTrophyCaseSection:withAchievementID:animated:");
}

id objc_msgSend_navigateToURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigateToURL:");
}

id objc_msgSend_navigateToWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigateToWorkout:");
}

id objc_msgSend_navigateToWorkoutHistoryWithActivityType_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigateToWorkoutHistoryWithActivityType:animated:");
}

id objc_msgSend_navigateToWorkoutPlanCreation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigateToWorkoutPlanCreation");
}

id objc_msgSend_navigateToWorkoutPlanDetail(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigateToWorkoutPlanDetail");
}

id objc_msgSend_navigationActionForHeaderInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationActionForHeaderInSection:");
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationBar");
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationController");
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationItem");
}

id objc_msgSend_navigationStackDisplacedBySetupController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationStackDisplacedBySetupController");
}

id objc_msgSend_needsWatchIcon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsWatchIcon");
}

id objc_msgSend_newGradientForStartColor_endColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newGradientForStartColor:endColor:");
}

id objc_msgSend_nextMoveModeUserInfoKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextMoveModeUserInfoKey");
}

id objc_msgSend_nextWeekStartDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextWeekStartDate");
}

id objc_msgSend_nonGradientTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nonGradientTextColor");
}

id objc_msgSend_nonZeroMetadataExistsInWorkout_orWorkoutActivity_withKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nonZeroMetadataExistsInWorkout:orWorkoutActivity:withKey:");
}

id objc_msgSend_notification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notification");
}

id objc_msgSend_notificationResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationResponse");
}

id objc_msgSend_notificationTypeUserInfoKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationTypeUserInfoKey");
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "null");
}

id objc_msgSend_numberForKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberForKey:error:");
}

id objc_msgSend_numberOfItemsInRecentAndRelevantSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfItemsInRecentAndRelevantSection:");
}

id objc_msgSend_numberOfItemsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfItemsInSection:");
}

id objc_msgSend_numberOfNewFriendsAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfNewFriendsAllowed");
}

id objc_msgSend_numberOfRecentAndRelevantSections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfRecentAndRelevantSections");
}

id objc_msgSend_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfRowsInSection:");
}

id objc_msgSend_numberOfSections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfSections");
}

id objc_msgSend_numberOfSectionsInCollectionView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfSectionsInCollectionView:");
}

id objc_msgSend_numberOfSectionsInTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfSectionsInTableView:");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "object");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_oldDevicesExist(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oldDevicesExist");
}

id objc_msgSend_onboardingCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingCoordinator");
}

id objc_msgSend_openSensitiveURL_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openSensitiveURL:withOptions:");
}

id objc_msgSend_openURL_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:options:completionHandler:");
}

id objc_msgSend_openURL_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:withCompletionHandler:");
}

id objc_msgSend_openURLContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURLContext:");
}

id objc_msgSend_openWaterSwimDistanceByStrokeStyleForWorkout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openWaterSwimDistanceByStrokeStyleForWorkout:workoutActivity:completion:");
}

id objc_msgSend_orPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orPredicateWithSubpredicates:");
}

id objc_msgSend_pace100UnitFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pace100UnitFont");
}

id objc_msgSend_paceCell_didSelectNewPaceFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paceCell:didSelectNewPaceFormat:");
}

id objc_msgSend_paceColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paceColors");
}

id objc_msgSend_paceDistanceUnitForDistanceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paceDistanceUnitForDistanceType:");
}

id objc_msgSend_paceFormatUpdatedBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paceFormatUpdatedBlock");
}

id objc_msgSend_paceSamples(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paceSamples");
}

id objc_msgSend_paceSelectionDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paceSelectionDelegate");
}

id objc_msgSend_pairingID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pairingID");
}

id objc_msgSend_paletteDateSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paletteDateSelected:");
}

id objc_msgSend_paletteForEdge_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paletteForEdge:size:");
}

id objc_msgSend_paletteScrolledInDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paletteScrolledInDirection:");
}

id objc_msgSend_panGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "panGestureRecognizer");
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parentViewController");
}

id objc_msgSend_passwordController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "passwordController");
}

id objc_msgSend_passwordEnteredHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "passwordEnteredHandler");
}

id objc_msgSend_passwordEntryCancelledHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "passwordEntryCancelledHandler");
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathExtension");
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathForResource:ofType:");
}

id objc_msgSend_pause(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pause");
}

id objc_msgSend_pauseRingsCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseRingsCoordinator");
}

id objc_msgSend_perMinuteWorkoutRecoveryHeartRateFromReadings_workoutEndDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "perMinuteWorkoutRecoveryHeartRateFromReadings:workoutEndDate:");
}

id objc_msgSend_percentStringWithNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "percentStringWithNumber:");
}

id objc_msgSend_percentUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "percentUnit");
}

id objc_msgSend_perform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "perform");
}

id objc_msgSend_performAsCurrentTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAsCurrentTraitCollection:");
}

id objc_msgSend_performEndToEndCloudSyncOnSkippingSetupForHealthStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performEndToEndCloudSyncOnSkippingSetupForHealthStore:");
}

id objc_msgSend_performEndToEndCloudSyncWithNRDeviceUUID_syncParticipantFirst_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performEndToEndCloudSyncWithNRDeviceUUID:syncParticipantFirst:completion:");
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:");
}

id objc_msgSend_phoneCloudKitAccountIsActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneCloudKitAccountIsActive");
}

id objc_msgSend_phoneNumbers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneNumbers");
}

id objc_msgSend_pillImageForColor_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pillImageForColor:size:");
}

id objc_msgSend_pillImages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pillImages");
}

id objc_msgSend_placeBadgeViewInContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "placeBadgeViewInContainer");
}

id objc_msgSend_plainButtonConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "plainButtonConfiguration");
}

id objc_msgSend_play(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "play");
}

id objc_msgSend_playFlipInAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playFlipInAnimation");
}

id objc_msgSend_player(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "player");
}

id objc_msgSend_playerItemWithAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerItemWithAsset:");
}

id objc_msgSend_playerLayerWithPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerLayerWithPlayer:");
}

id objc_msgSend_pointSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointSize");
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToRootViewControllerAnimated:");
}

id objc_msgSend_popToViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToViewController:animated:");
}

id objc_msgSend_popViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popViewControllerAnimated:");
}

id objc_msgSend_populateExistingCharacteristics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateExistingCharacteristics");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_powerColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "powerColors");
}

id objc_msgSend_powerSamples(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "powerSamples");
}

id objc_msgSend_powerSamplesForWorkout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "powerSamplesForWorkout:workoutActivity:completion:");
}

id objc_msgSend_predicateForActivitySummariesBetweenStartDateComponents_endDateComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForActivitySummariesBetweenStartDateComponents:endDateComponents:");
}

id objc_msgSend_predicateForObjectsFromWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForObjectsFromWorkout:");
}

id objc_msgSend_predicateForSamplesWithStartDate_endDate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForSamplesWithStartDate:endDate:options:");
}

id objc_msgSend_predicateForWorkoutRecoveryTimeWithWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForWorkoutRecoveryTimeWithWorkout:");
}

id objc_msgSend_predicateWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithBlock:");
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithFormat:");
}

id objc_msgSend_predicateWithValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithValue:");
}

id objc_msgSend_preferredAppStoreIconWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredAppStoreIconWidth");
}

id objc_msgSend_preferredCellHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredCellHeight");
}

id objc_msgSend_preferredCollectionViewHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredCollectionViewHeight");
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredContentSizeCategory");
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontDescriptorWithTextStyle:");
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_addingSymbolicTraits_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:");
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:");
}

id objc_msgSend_preferredHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredHeight");
}

id objc_msgSend_preferredHeightForConfiguration_friend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredHeightForConfiguration:friend:");
}

id objc_msgSend_preferredHeightForFriend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredHeightForFriend:");
}

id objc_msgSend_preferredHeightForWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredHeightForWidth:");
}

id objc_msgSend_preferredHeightForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredHeightForWorkout:");
}

id objc_msgSend_preferredHeightForWorkout_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredHeightForWorkout:formattingManager:");
}

id objc_msgSend_preferredHeightForWorkout_indexPath_numberOfRows_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredHeightForWorkout:indexPath:numberOfRows:");
}

id objc_msgSend_preferredQuantity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredQuantity");
}

id objc_msgSend_preferredServiceIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredServiceIdentifier");
}

id objc_msgSend_preferredSizeForSectionName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredSizeForSectionName:");
}

id objc_msgSend_preferredWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredWidth");
}

id objc_msgSend_pregnancySectionIndexPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pregnancySectionIndexPath");
}

id objc_msgSend_prepareForReuse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForReuse");
}

id objc_msgSend_presentAchievement_badgeRect_cell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentAchievement:badgeRect:cell:");
}

id objc_msgSend_presentAppSettingsShowingPane_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentAppSettingsShowingPane:");
}

id objc_msgSend_presentDetailForAchievement_badgeRect_conversionView_cell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentDetailForAchievement:badgeRect:conversionView:cell:");
}

id objc_msgSend_presentEffortViewController_presentationCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentEffortViewController:presentationCompletion:");
}

id objc_msgSend_presentPageForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentPageForSection:");
}

id objc_msgSend_presentRemoteViewControllerOnHostController_workoutPlanData_dismissHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentRemoteViewControllerOnHostController:workoutPlanData:dismissHandler:completionHandler:");
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:animated:completion:");
}

id objc_msgSend_presentViewController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:completion:");
}

id objc_msgSend_presentWithController_onDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentWithController:onDismiss:");
}

id objc_msgSend_presentWorkoutConfigurationWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentWorkoutConfigurationWithData:");
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedViewController");
}

id objc_msgSend_presenter_userNotificationCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presenter:userNotificationCenter:");
}

id objc_msgSend_pressToTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pressToTransition:");
}

id objc_msgSend_previewViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previewViewController");
}

id objc_msgSend_previousWeekStartDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previousWeekStartDate");
}

id objc_msgSend_primaryDestinationForMessaging(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryDestinationForMessaging");
}

id objc_msgSend_privacyFlow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "privacyFlow");
}

id objc_msgSend_productType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "productType");
}

id objc_msgSend_progress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progress");
}

id objc_msgSend_progressBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressBar");
}

id objc_msgSend_pushCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushCount");
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushViewController:animated:");
}

id objc_msgSend_quantity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quantity");
}

id objc_msgSend_quantitySampleWithType_quantity_startDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quantitySampleWithType:quantity:startDate:endDate:");
}

id objc_msgSend_quantitySampleWithType_quantity_startDate_endDate_metadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quantitySampleWithType:quantity:startDate:endDate:metadata:");
}

id objc_msgSend_quantityType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quantityType");
}

id objc_msgSend_quantityTypeForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quantityTypeForIdentifier:");
}

id objc_msgSend_quantityWithUnit_doubleValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quantityWithUnit:doubleValue:");
}

id objc_msgSend_quaternarySystemFillColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quaternarySystemFillColor");
}

id objc_msgSend_queryDestinations_updateHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryDestinations:updateHandler:completionHandler:");
}

id objc_msgSend_raceAheadColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raceAheadColors");
}

id objc_msgSend_raceBehindColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raceBehindColors");
}

id objc_msgSend_raceTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raceTime");
}

id objc_msgSend_raceWorkoutDisplayDistance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raceWorkoutDisplayDistance");
}

id objc_msgSend_rangeOfCharacterFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:");
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_reachableEmailAddress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reachableEmailAddress");
}

id objc_msgSend_reachablePhoneNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reachablePhoneNumber");
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reason");
}

id objc_msgSend_recentAndRelevantAchievementAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recentAndRelevantAchievementAtIndexPath:");
}

id objc_msgSend_recentAndRelevantCollectionView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recentAndRelevantCollectionView");
}

id objc_msgSend_recentAndRelevantDataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recentAndRelevantDataSource");
}

id objc_msgSend_recipientView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recipientView");
}

id objc_msgSend_recipients(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recipients");
}

id objc_msgSend_recoveryDateIntervalWithWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recoveryDateIntervalWithWorkout:");
}

id objc_msgSend_recoveryHeartRateReadings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recoveryHeartRateReadings");
}

id objc_msgSend_rectForHeaderInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rectForHeaderInSection:");
}

id objc_msgSend_redColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "redColor");
}

id objc_msgSend_reflow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reflow");
}

id objc_msgSend_refreshControl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshControl");
}

id objc_msgSend_registerClass_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellReuseIdentifier:");
}

id objc_msgSend_registerClass_forCellWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellWithReuseIdentifier:");
}

id objc_msgSend_registerClass_forHeaderFooterViewReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forHeaderFooterViewReuseIdentifier:");
}

id objc_msgSend_registerClass_forSupplementaryViewOfKind_withReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:");
}

id objc_msgSend_registerURLHandlerWithSlug_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerURLHandlerWithSlug:completion:");
}

id objc_msgSend_relationship(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relationship");
}

id objc_msgSend_relevantEarnedInstance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relevantEarnedInstance");
}

id objc_msgSend_reloadCells(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadCells");
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadData");
}

id objc_msgSend_reloadDataAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadDataAnimated:");
}

id objc_msgSend_reloadRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_reloadSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadSections:withRowAnimation:");
}

id objc_msgSend_reloadViewDataAtDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadViewDataAtDate:");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllObjects");
}

id objc_msgSend_removeAllSamples(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllSamples");
}

id objc_msgSend_removeArrangedSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeArrangedSubview:");
}

id objc_msgSend_removeAttribute_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAttribute:range:");
}

id objc_msgSend_removeFriend_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFriend:completion:");
}

id objc_msgSend_removeFriendWithUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFriendWithUUID:completion:");
}

id objc_msgSend_removeFromParentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromParentViewController");
}

id objc_msgSend_removeFromSuperlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperlayer");
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperview");
}

id objc_msgSend_removeInitialLoadObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeInitialLoadObserver:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLastObject");
}

id objc_msgSend_removeLeadingPadding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLeadingPadding");
}

id objc_msgSend_removeListenerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeListenerID:");
}

id objc_msgSend_removeMainSectionObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeMainSectionObserver:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInArray:");
}

id objc_msgSend_removeObjectsInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInRange:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeRecentAndRelevantSectionObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeRecentAndRelevantSectionObserver:");
}

id objc_msgSend_removeRecipient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeRecipient:");
}

id objc_msgSend_removeSamplesWithUUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSamplesWithUUIDs:");
}

id objc_msgSend_removeTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTarget:action:forControlEvents:");
}

id objc_msgSend_renderRingGroup_withRenderer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderRingGroup:withRenderer:");
}

id objc_msgSend_renderRingGroupController_withRenderer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderRingGroupController:withRenderer:");
}

id objc_msgSend_replaceCurrentItemWithPlayerItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceCurrentItemWithPlayerItem:");
}

id objc_msgSend_representedElementCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "representedElementCategory");
}

id objc_msgSend_representedElementKind(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "representedElementKind");
}

id objc_msgSend_representsToday(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "representsToday");
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "request");
}

id objc_msgSend_requiredDistanceForIntervalTimeGoalForStepKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiredDistanceForIntervalTimeGoalForStepKeyPath:");
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resignFirstResponder");
}

id objc_msgSend_resizableImageWithCapInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resizableImageWithCapInsets:");
}

id objc_msgSend_resizableImageWithCapInsets_resizingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resizableImageWithCapInsets:resizingMode:");
}

id objc_msgSend_resizeBadgeForCurrentViewSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resizeBadgeForCurrentViewSize");
}

id objc_msgSend_resizedImageWithNewSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resizedImageWithNewSize:");
}

id objc_msgSend_resourceProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resourceProvider");
}

id objc_msgSend_responseDataItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseDataItems");
}

id objc_msgSend_reuseIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reuseIdentifier");
}

id objc_msgSend_reverseGeocodeLocation_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reverseGeocodeLocation:completionHandler:");
}

id objc_msgSend_reverseSampleEnumerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reverseSampleEnumerator");
}

id objc_msgSend_rightBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightBarButtonItem");
}

id objc_msgSend_ringDiameter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringDiameter");
}

id objc_msgSend_ringGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringGroup");
}

id objc_msgSend_ringThickness(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringThickness");
}

id objc_msgSend_rings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rings");
}

id objc_msgSend_ringsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ringsView");
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rootViewController");
}

id objc_msgSend_routeImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeImage");
}

id objc_msgSend_routeImageForSharing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeImageForSharing");
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "row");
}

id objc_msgSend_rows(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rows");
}

id objc_msgSend_safeAreaLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeAreaLayoutGuide");
}

id objc_msgSend_safeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeObjectAtIndex:");
}

id objc_msgSend_sampleAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sampleAtIndex:");
}

id objc_msgSend_samples(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "samples");
}

id objc_msgSend_saturdayGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saturdayGoal");
}

id objc_msgSend_saveContainerToCache_forWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveContainerToCache:forWorkout:workoutActivity:");
}

id objc_msgSend_saveObject_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveObject:withCompletion:");
}

id objc_msgSend_saveObjects_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveObjects:withCompletion:");
}

id objc_msgSend_saveWithQuantity_effortSampleCollection_workout_workoutActivity_healthStore_canSendAnalytics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveWithQuantity:effortSampleCollection:workout:workoutActivity:healthStore:canSendAnalytics:");
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scale");
}

id objc_msgSend_scaledValueForSmallWidth_bigWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaledValueForSmallWidth:bigWidth:");
}

id objc_msgSend_scheduleFrom_goalType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleFrom:goalType:");
}

id objc_msgSend_scheduledGoals(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledGoals");
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheme");
}

id objc_msgSend_scrollOrRelayoutWeekIfNeededToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollOrRelayoutWeekIfNeededToDate:");
}

id objc_msgSend_scrollToDate_windowHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToDate:windowHeight:");
}

id objc_msgSend_scrollToRowAtIndexPath_atScrollPosition_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToRowAtIndexPath:atScrollPosition:animated:");
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollView");
}

id objc_msgSend_scrollViewContentInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollViewContentInset");
}

id objc_msgSend_scrolledPastMonthWithDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrolledPastMonthWithDate:");
}

id objc_msgSend_seahorse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seahorse");
}

id objc_msgSend_searchForText_withAutocompleteFetchContext_consumer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchForText:withAutocompleteFetchContext:consumer:");
}

id objc_msgSend_secondUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondUnit");
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryLabelColor");
}

id objc_msgSend_secondarySystemBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondarySystemBackgroundColor");
}

id objc_msgSend_secondaryTextProperties(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryTextProperties");
}

id objc_msgSend_secondsFromGMT(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondsFromGMT");
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "section");
}

id objc_msgSend_sectionForFriendsCompetingWithMe(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionForFriendsCompetingWithMe");
}

id objc_msgSend_sectionForFriendsHidingDataFromMe(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionForFriendsHidingDataFromMe");
}

id objc_msgSend_sectionForFriendsInvitedByMe(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionForFriendsInvitedByMe");
}

id objc_msgSend_sectionForFriendsInvitingMe(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionForFriendsInvitingMe");
}

id objc_msgSend_sectionForFriendsMyDataIsHiddenFrom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionForFriendsMyDataIsHiddenFrom");
}

id objc_msgSend_sectionForFriendsRequestedToCompeteByMe(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionForFriendsRequestedToCompeteByMe");
}

id objc_msgSend_sectionForFriendsRequestedToDowngradeByMe(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionForFriendsRequestedToDowngradeByMe");
}

id objc_msgSend_sectionForFriendsRequestingMeToCompete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionForFriendsRequestingMeToCompete");
}

id objc_msgSend_sectionForFriendsWithNoHiding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionForFriendsWithNoHiding");
}

id objc_msgSend_sectionsForDisplayContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionsForDisplayContext:");
}

id objc_msgSend_sedentaryColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sedentaryColors");
}

id objc_msgSend_segControlToBaselineConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segControlToBaselineConstraint");
}

id objc_msgSend_segment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segment");
}

id objc_msgSend_segmentIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segmentIndex");
}

id objc_msgSend_segmentedControl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segmentedControl");
}

id objc_msgSend_segments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segments");
}

id objc_msgSend_segmentsExpanded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segmentsExpanded");
}

id objc_msgSend_segmentsForWorkout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segmentsForWorkout:completion:");
}

id objc_msgSend_selectedIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedIndex");
}

id objc_msgSend_selectedPaceFormat(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedPaceFormat");
}

id objc_msgSend_selectedSegmentIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedSegmentIndex");
}

id objc_msgSend_selectedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedViewController");
}

id objc_msgSend_sendCompetitionInviteToFriendUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCompetitionInviteToFriendUUID:completion:");
}

id objc_msgSend_sendCompetitionRequestToFriend_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCompetitionRequestToFriend:completion:");
}

id objc_msgSend_sendDidViewTrainingLoadAnalyticsFromURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDidViewTrainingLoadAnalyticsFromURL:");
}

id objc_msgSend_sendFriendInviteToDestination_callerID_serviceIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendFriendInviteToDestination:callerID:serviceIdentifier:completion:");
}

id objc_msgSend_sendInvitationToDestinations_callerID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendInvitationToDestinations:callerID:completion:");
}

id objc_msgSend_sendInviteToRecipient_callerID_serviceIdentifier_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendInviteToRecipient:callerID:serviceIdentifier:withCompletion:");
}

id objc_msgSend_separatorColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "separatorColor");
}

id objc_msgSend_separatorInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "separatorInset");
}

id objc_msgSend_separatorView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "separatorView");
}

id objc_msgSend_serializedConfigurationContainsRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializedConfigurationContainsRoute");
}

id objc_msgSend_serializedConfigurationDataIncludingRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializedConfigurationDataIncludingRoute:");
}

id objc_msgSend_serializedConfigurationRouteSnapshotData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializedConfigurationRouteSnapshotData");
}

id objc_msgSend_serializedConfigurationWithEmbedding_snapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializedConfigurationWithEmbedding:snapshot:");
}

id objc_msgSend_serviceIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceIdentifier");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set");
}

id objc_msgSend_setAcceptTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAcceptTintColor:");
}

id objc_msgSend_setAccessibilityHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityHint:");
}

id objc_msgSend_setAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityIdentifier:");
}

id objc_msgSend_setAccessibilityLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityLabel:");
}

id objc_msgSend_setAccessibilityTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityTraits:");
}

id objc_msgSend_setAccessibilityViewIsModal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityViewIsModal:");
}

id objc_msgSend_setAccessoryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessoryType:");
}

id objc_msgSend_setAchUnitManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAchUnitManager:");
}

id objc_msgSend_setAchievement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAchievement:");
}

id objc_msgSend_setAchievementSelectedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAchievementSelectedBlock:");
}

id objc_msgSend_setAchievementTappedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAchievementTappedHandler:");
}

id objc_msgSend_setAchievements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAchievements:");
}

id objc_msgSend_setActionAtItemEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionAtItemEnd:");
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:");
}

id objc_msgSend_setActiveEnergy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveEnergy:");
}

id objc_msgSend_setActivityDashboardViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityDashboardViewController:");
}

id objc_msgSend_setActivityDataVisible_friendUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityDataVisible:friendUUID:completion:");
}

id objc_msgSend_setActivityDataVisible_toFriend_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityDataVisible:toFriend:completion:");
}

id objc_msgSend_setActivityLevels_activityMoveMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityLevels:activityMoveMode:");
}

id objc_msgSend_setActivitySharingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivitySharingViewController:");
}

id objc_msgSend_setActivitySummary_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivitySummary:animated:");
}

id objc_msgSend_setActivitySummaryProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivitySummaryProvider:");
}

id objc_msgSend_setActivityTileNavController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityTileNavController:");
}

id objc_msgSend_setActivityTileViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityTileViewController:");
}

id objc_msgSend_setActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityType:");
}

id objc_msgSend_setActivityTypeKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityTypeKey:");
}

id objc_msgSend_setAdditionalSafeAreaInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditionalSafeAreaInsets:");
}

id objc_msgSend_setAdditionalServiceIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditionalServiceIdentifiers:");
}

id objc_msgSend_setAdditionalSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditionalSpacing:");
}

id objc_msgSend_setAdditionalSpacingPerRow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditionalSpacingPerRow:");
}

id objc_msgSend_setAddresses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddresses:");
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontSizeToFitWidth:");
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlignment:");
}

id objc_msgSend_setAllowsCancel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsCancel:");
}

id objc_msgSend_setAllowsDefaultTighteningForTruncation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsDefaultTighteningForTruncation:");
}

id objc_msgSend_setAllowsEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsEditing:");
}

id objc_msgSend_setAllowsSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsSelection:");
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlpha:");
}

id objc_msgSend_setAlwaysBounceVertical_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysBounceVertical:");
}

id objc_msgSend_setAnalyticsHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnalyticsHandler:");
}

id objc_msgSend_setAnchorRule_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnchorRule:");
}

id objc_msgSend_setAnimationDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimationDuration:");
}

id objc_msgSend_setAppBadgeAggregator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppBadgeAggregator:");
}

id objc_msgSend_setAppIconFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppIconFormat:");
}

id objc_msgSend_setAppIconWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppIconWidth:");
}

id objc_msgSend_setAppliesLargeCellInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppliesLargeCellInset:");
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedText:");
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizingMask:");
}

id objc_msgSend_setAvPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvPlayer:");
}

id objc_msgSend_setAverageHeartRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAverageHeartRate:");
}

id objc_msgSend_setAverageText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAverageText:");
}

id objc_msgSend_setAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAxis:");
}

id objc_msgSend_setAxisDescriptorPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAxisDescriptorPadding:");
}

id objc_msgSend_setAxisSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAxisSpacing:");
}

id objc_msgSend_setBackBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackBarButtonItem:");
}

id objc_msgSend_setBackButtonDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackButtonDisplayMode:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundView:");
}

id objc_msgSend_setBackingOriginOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackingOriginOffset:");
}

id objc_msgSend_setBadgeBacksideAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeBacksideAttributedString:");
}

id objc_msgSend_setBadgeBacksideIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeBacksideIcon:");
}

id objc_msgSend_setBadgeColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeColor:");
}

id objc_msgSend_setBadgeContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeContainer:");
}

id objc_msgSend_setBadgeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeText:");
}

id objc_msgSend_setBadgeTextAttributes_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeTextAttributes:forState:");
}

id objc_msgSend_setBadgeValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeValue:");
}

id objc_msgSend_setBarColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBarColor:");
}

id objc_msgSend_setBarStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBarStyle:");
}

id objc_msgSend_setBaseBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaseBackgroundColor:");
}

id objc_msgSend_setBaseForegroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaseForegroundColor:");
}

id objc_msgSend_setBaselineRelativeArrangement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaselineRelativeArrangement:");
}

id objc_msgSend_setBodyLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBodyLabel:");
}

id objc_msgSend_setBoldFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBoldFont:");
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBool:forKey:");
}

id objc_msgSend_setBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBounds:");
}

id objc_msgSend_setBrowsingConsentAlertCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrowsingConsentAlertCompletion:");
}

id objc_msgSend_setBrowsingConsentAlertController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrowsingConsentAlertController:");
}

id objc_msgSend_setBuddyControllerDoneAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBuddyControllerDoneAction:");
}

id objc_msgSend_setBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleID:");
}

id objc_msgSend_setBundleIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleIdentifiers:");
}

id objc_msgSend_setBurnBarExpanded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBurnBarExpanded:");
}

id objc_msgSend_setButtonSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonSize:");
}

id objc_msgSend_setByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObject:");
}

id objc_msgSend_setCadenceSamples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCadenceSamples:");
}

id objc_msgSend_setCalendarUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCalendarUnit:");
}

id objc_msgSend_setCanCancelContentTouches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanCancelContentTouches:");
}

id objc_msgSend_setCategory_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategory:error:");
}

id objc_msgSend_setCelebrationVideoContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCelebrationVideoContainer:");
}

id objc_msgSend_setCellClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCellClass:");
}

id objc_msgSend_setCellClassesBySection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCellClassesBySection:");
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenter:");
}

id objc_msgSend_setCircleHidden_updateCircleColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCircleHidden:updateCircleColor:");
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClipsToBounds:");
}

id objc_msgSend_setCollectionView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollectionView:");
}

id objc_msgSend_setColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColor:");
}

id objc_msgSend_setCompetition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompetition:");
}

id objc_msgSend_setCompletedWelcomeViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletedWelcomeViews");
}

id objc_msgSend_setCompletedWhatsNewViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletedWhatsNewViews");
}

id objc_msgSend_setComposeInputLineHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setComposeInputLineHeight:");
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:");
}

id objc_msgSend_setConfigurationUpdateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfigurationUpdateHandler:");
}

id objc_msgSend_setConnectionOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionOptions:");
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConstant:");
}

id objc_msgSend_setContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContact:");
}

id objc_msgSend_setContacts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContacts:");
}

id objc_msgSend_setContainerGuide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainerGuide:");
}

id objc_msgSend_setContentBufferEdgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentBufferEdgeInsets:");
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentCompressionResistancePriority:forAxis:");
}

id objc_msgSend_setContentConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentConfiguration:");
}

id objc_msgSend_setContentHuggingPriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentHuggingPriority:forAxis:");
}

id objc_msgSend_setContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInset:");
}

id objc_msgSend_setContentInsetAdjustmentBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInsetAdjustmentBehavior:");
}

id objc_msgSend_setContentInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInsets:");
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentMode:");
}

id objc_msgSend_setContentOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentOffset:");
}

id objc_msgSend_setContentOffset_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentOffset:animated:");
}

id objc_msgSend_setContentScrollView_forEdge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentScrollView:forEdge:");
}

id objc_msgSend_setContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentSize:");
}

id objc_msgSend_setContents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContents:");
}

id objc_msgSend_setContentsScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentsScale:");
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerRadius:");
}

id objc_msgSend_setCountLabelTopConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCountLabelTopConstraint:");
}

id objc_msgSend_setCountLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCountLimit:");
}

id objc_msgSend_setCurrentFilteredTypeIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentFilteredTypeIdentifier:completion:");
}

id objc_msgSend_setCurrentSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentSection:");
}

id objc_msgSend_setCurrentValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentValue:");
}

id objc_msgSend_setCurrentValue_goalValue_unitString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentValue:goalValue:unitString:");
}

id objc_msgSend_setCurrentValue_unitString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentValue:unitString:");
}

id objc_msgSend_setCustomSplits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomSplits:");
}

id objc_msgSend_setCyclingSpeedSamples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCyclingSpeedSamples:");
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSource:");
}

id objc_msgSend_setDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDate:");
}

id objc_msgSend_setDateBottomMargin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateBottomMargin:");
}

id objc_msgSend_setDateDiameter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateDiameter:");
}

id objc_msgSend_setDateFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateFont:");
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateFormat:");
}

id objc_msgSend_setDateInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateInterval:");
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateStyle:");
}

id objc_msgSend_setDateTopMargin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateTopMargin:");
}

id objc_msgSend_setDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDay:");
}

id objc_msgSend_setDayDiameter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDayDiameter:");
}

id objc_msgSend_setDebugIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDebugIdentifier:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDetailText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailText:");
}

id objc_msgSend_setDidAppear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidAppear:");
}

id objc_msgSend_setDidSetInitialSwimmingPaceFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidSetInitialSwimmingPaceFormat:");
}

id objc_msgSend_setDidSetupBadgeView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidSetupBadgeView:");
}

id objc_msgSend_setDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirection:");
}

id objc_msgSend_setDirectionalLayoutMargins_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirectionalLayoutMargins:");
}

id objc_msgSend_setDirectionalLockEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirectionalLockEnabled:");
}

id objc_msgSend_setDisableActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisableActions:");
}

id objc_msgSend_setDiscardBackBuffers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscardBackBuffers:");
}

id objc_msgSend_setDisplayFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayFilter:");
}

id objc_msgSend_setDisplayIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayIcon:");
}

id objc_msgSend_setDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayMode:");
}

id objc_msgSend_setDisplayScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayScale:");
}

id objc_msgSend_setDisplayedPropertyKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayedPropertyKeys:");
}

id objc_msgSend_setDistance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistance:");
}

id objc_msgSend_setDistanceGoalAchievedTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistanceGoalAchievedTime:");
}

id objc_msgSend_setDistanceInUserUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistanceInUserUnit:");
}

id objc_msgSend_setDistanceSamples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistanceSamples:");
}

id objc_msgSend_setDistanceUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistanceUnit:");
}

id objc_msgSend_setDistribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistribution:");
}

id objc_msgSend_setDominantStrokeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDominantStrokeStyle:");
}

id objc_msgSend_setDownhillRun_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDownhillRun:");
}

id objc_msgSend_setDownhillRunIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDownhillRunIndex:");
}

id objc_msgSend_setDownhillRuns_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDownhillRuns:");
}

id objc_msgSend_setDownhillRunsStats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDownhillRunsStats:");
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDuration:");
}

id objc_msgSend_setEarnedInstanceCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEarnedInstanceCount:");
}

id objc_msgSend_setEarnedInstanceCountLabelBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEarnedInstanceCountLabelBackgroundColor:");
}

id objc_msgSend_setEdgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEdgeInsets:");
}

id objc_msgSend_setEditable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditable:");
}

id objc_msgSend_setEditing_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditing:animated:");
}

id objc_msgSend_setEffortQuantity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEffortQuantity:");
}

id objc_msgSend_setEffortSampleCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEffortSampleCollection:");
}

id objc_msgSend_setElapsedTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setElapsedTime:");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setEndDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndDate:");
}

id objc_msgSend_setEstimatedRowHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEstimatedRowHeight:");
}

id objc_msgSend_setEvictsObjectsWhenApplicationEntersBackground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEvictsObjectsWhenApplicationEntersBackground:");
}

id objc_msgSend_setEvictsObjectsWithDiscardedContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEvictsObjectsWithDiscardedContent:");
}

id objc_msgSend_setExcludedActivityTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExcludedActivityTypes:");
}

id objc_msgSend_setExclusiveTouch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExclusiveTouch:");
}

id objc_msgSend_setExpanded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpanded:");
}

id objc_msgSend_setExpectedSplitDistance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpectedSplitDistance:");
}

id objc_msgSend_setFill(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFill");
}

id objc_msgSend_setFirstCoordinate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstCoordinate:");
}

id objc_msgSend_setFirstCoordinateUpdatedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstCoordinateUpdatedBlock:");
}

id objc_msgSend_setFirstWeekday_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstWeekday:");
}

id objc_msgSend_setFitnessUIFormattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFitnessUIFormattingManager:");
}

id objc_msgSend_setFixedBadgeAngle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFixedBadgeAngle:");
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setFont_textColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:textColor:");
}

id objc_msgSend_setForceAMPMOnFirstLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForceAMPMOnFirstLabel:");
}

id objc_msgSend_setFormatsForFriend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFormatsForFriend:");
}

id objc_msgSend_setFormattingContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFormattingContext:");
}

id objc_msgSend_setFormattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFormattingManager:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setFriend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFriend:");
}

id objc_msgSend_setFriend_competition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFriend:competition:");
}

id objc_msgSend_setFriend_snapshot_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFriend:snapshot:animated:");
}

id objc_msgSend_setFriend_snapshot_formattingManager_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFriend:snapshot:formattingManager:animated:");
}

id objc_msgSend_setFriendAchievements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFriendAchievements:");
}

id objc_msgSend_setFriendManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFriendManager:");
}

id objc_msgSend_setFriendsSetupCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFriendsSetupCoordinator:");
}

id objc_msgSend_setFriendsSetupViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFriendsSetupViewController:");
}

id objc_msgSend_setFullFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullFrame:");
}

id objc_msgSend_setGoalColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGoalColor:");
}

id objc_msgSend_setGoalDescriptionFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGoalDescriptionFont:");
}

id objc_msgSend_setGoalUnitStringFormatter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGoalUnitStringFormatter:");
}

id objc_msgSend_setGoalValueStringFormatter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGoalValueStringFormatter:");
}

id objc_msgSend_setGroundContactTimeSamples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroundContactTimeSamples:");
}

id objc_msgSend_setGroupDiameter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupDiameter:");
}

id objc_msgSend_setGymKitIconWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGymKitIconWidth:");
}

id objc_msgSend_setHasActiveLocationQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasActiveLocationQuery:");
}

id objc_msgSend_setHasWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasWorkout:");
}

id objc_msgSend_setHeaderString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeaderString:");
}

id objc_msgSend_setHealthStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHealthStore:");
}

id objc_msgSend_setHeartRateReadings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeartRateReadings:");
}

id objc_msgSend_setHeightConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeightConstraint:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setHideClippedLabels_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHideClippedLabels:");
}

id objc_msgSend_setHidesKeyLine_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesKeyLine:");
}

id objc_msgSend_setHidesPromptInLandscape_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesPromptInLandscape:");
}

id objc_msgSend_setHidesSeparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesSeparator:");
}

id objc_msgSend_setHidesWhenStopped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesWhenStopped:");
}

id objc_msgSend_setHighlightedLabelColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightedLabelColor:");
}

id objc_msgSend_setHighlightedSubLabelColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightedSubLabelColor:");
}

id objc_msgSend_setHistoryDataProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHistoryDataProvider:");
}

id objc_msgSend_setHistoryPagingViewControllerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHistoryPagingViewControllerDelegate:");
}

id objc_msgSend_setHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHost:");
}

id objc_msgSend_setHyphenationFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHyphenationFactor:");
}

id objc_msgSend_setIconImageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconImageView:");
}

id objc_msgSend_setIconVariant2x_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconVariant2x:");
}

id objc_msgSend_setIconVariant3x_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconVariant3x:");
}

id objc_msgSend_setIgnoreTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnoreTintColor:");
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:");
}

id objc_msgSend_setImage_forCacheKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:forCacheKey:");
}

id objc_msgSend_setImage_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:forState:");
}

id objc_msgSend_setImageDimension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageDimension:");
}

id objc_msgSend_setImageFactory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageFactory:");
}

id objc_msgSend_setImagePadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImagePadding:");
}

id objc_msgSend_setImplicitGroupCreationThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImplicitGroupCreationThreshold:");
}

id objc_msgSend_setIncludeUpcomingEventMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludeUpcomingEventMembers:");
}

id objc_msgSend_setIncrementButton_decrementButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncrementButton:decrementButton:");
}

id objc_msgSend_setIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIndex:");
}

id objc_msgSend_setIndicatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIndicatorStyle:");
}

id objc_msgSend_setIndoor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIndoor:");
}

id objc_msgSend_setInteger_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteger:forKey:");
}

id objc_msgSend_setIntegerValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIntegerValue:");
}

id objc_msgSend_setInterspacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterspacing:");
}

id objc_msgSend_setInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterval:");
}

id objc_msgSend_setIntervalIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIntervalIndex:");
}

id objc_msgSend_setIntervals_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIntervals:");
}

id objc_msgSend_setIsAccessibilityElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAccessibilityElement:");
}

id objc_msgSend_setIsDiscoveryAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDiscoveryAllowed:");
}

id objc_msgSend_setIsExpanded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsExpanded:");
}

id objc_msgSend_setIsPaused_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPaused:");
}

id objc_msgSend_setIsStandalonePhoneFitnessMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsStandalonePhoneFitnessMode:");
}

id objc_msgSend_setIsStandalonePhoneFitnessMode_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsStandalonePhoneFitnessMode:animated:");
}

id objc_msgSend_setIsWatchWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsWatchWorkout:");
}

id objc_msgSend_setKeyColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyColor:");
}

id objc_msgSend_setKeyboardDismissMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardDismissMode:");
}

id objc_msgSend_setLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabel:");
}

id objc_msgSend_setLabelAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelAttributes:");
}

id objc_msgSend_setLabelBaselineConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelBaselineConstraint:");
}

id objc_msgSend_setLabelColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelColor:");
}

id objc_msgSend_setLabelFirstBaselineConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelFirstBaselineConstraint:");
}

id objc_msgSend_setLabelFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelFont:");
}

id objc_msgSend_setLaneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLaneNumber:");
}

id objc_msgSend_setLapIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLapIndex:");
}

id objc_msgSend_setLargeTitleDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLargeTitleDisplayMode:");
}

id objc_msgSend_setLastEffortAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastEffortAnchor:");
}

id objc_msgSend_setLastPhoneCloudKitAccountFetchTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastPhoneCloudKitAccountFetchTimestamp:");
}

id objc_msgSend_setLastWatchCloudKitAccountFetchTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastWatchCloudKitAccountFetchTimestamp:");
}

id objc_msgSend_setLayoutMargins_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLayoutMargins:");
}

id objc_msgSend_setLayoutMarginsRelativeArrangement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLayoutMarginsRelativeArrangement:");
}

id objc_msgSend_setLeadingMargin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeadingMargin:");
}

id objc_msgSend_setLeadingTextConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeadingTextConstraint:");
}

id objc_msgSend_setLeftBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftBarButtonItem:");
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineBreakMode:");
}

id objc_msgSend_setLineInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineInsets:");
}

id objc_msgSend_setLineSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineSpacing:");
}

id objc_msgSend_setLinkButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLinkButton:");
}

id objc_msgSend_setLinkLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLinkLabel:");
}

id objc_msgSend_setLoadingView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoadingView:");
}

id objc_msgSend_setLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocation:");
}

id objc_msgSend_setLocation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocation:completion:");
}

id objc_msgSend_setLocationFetcher_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocationFetcher:");
}

id objc_msgSend_setLocationFetcherObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocationFetcherObserver:");
}

id objc_msgSend_setLocationReadings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocationReadings:");
}

id objc_msgSend_setMainCollectionView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMainCollectionView:");
}

id objc_msgSend_setMainSectionCellWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMainSectionCellWidth:");
}

id objc_msgSend_setMainSectionDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMainSectionDataSource:");
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMasksToBounds:");
}

id objc_msgSend_setMaxValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxValue:");
}

id objc_msgSend_setMaximumContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumContentSizeCategory:");
}

id objc_msgSend_setMaximumFractionDigits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumFractionDigits:");
}

id objc_msgSend_setMaximumLineHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumLineHeight:");
}

id objc_msgSend_setMaximumValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumValue:");
}

id objc_msgSend_setMenu_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMenu:");
}

id objc_msgSend_setMinValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinValue:");
}

id objc_msgSend_setMindfulnessSessionsStatistics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMindfulnessSessionsStatistics:");
}

id objc_msgSend_setMinimumFractionDigits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumFractionDigits:");
}

id objc_msgSend_setMinimumInteritemSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumInteritemSpacing:");
}

id objc_msgSend_setMinimumLineHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumLineHeight:");
}

id objc_msgSend_setMinimumLineSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumLineSpacing:");
}

id objc_msgSend_setMinimumMiddleMargin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumMiddleMargin:");
}

id objc_msgSend_setMinimumScaleFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumScaleFactor:");
}

id objc_msgSend_setMinimumValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumValue:");
}

id objc_msgSend_setMinumumStepValueIncrement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinumumStepValueIncrement:");
}

id objc_msgSend_setMinute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinute:");
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationStyle:");
}

id objc_msgSend_setMonth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMonth:");
}

id objc_msgSend_setMonthScrollDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMonthScrollDelegate:");
}

id objc_msgSend_setMonthTitleBottomMargin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMonthTitleBottomMargin:");
}

id objc_msgSend_setMonthTitleTopMargin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMonthTitleTopMargin:");
}

id objc_msgSend_setMonthWeekStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMonthWeekStart:");
}

id objc_msgSend_setMovementEndDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMovementEndDate:");
}

id objc_msgSend_setMuteEnabled_forFriend_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMuteEnabled:forFriend:completion:");
}

id objc_msgSend_setMuteEnabled_friendUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMuteEnabled:friendUUID:completion:");
}

id objc_msgSend_setNCellsPerRow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNCellsPerRow:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNameFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNameFont:");
}

id objc_msgSend_setNanoSystemSettingsManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNanoSystemSettingsManager:");
}

id objc_msgSend_setNarrowFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNarrowFrame:");
}

id objc_msgSend_setNavBarBackdropGroupName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavBarBackdropGroupName:");
}

id objc_msgSend_setNavigationBarHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHidden:");
}

id objc_msgSend_setNavigationBarHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHidden:animated:");
}

id objc_msgSend_setNavigationDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationDelegate:");
}

id objc_msgSend_setNavigationStackDisplacedBySetupController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationStackDisplacedBySetupController:");
}

id objc_msgSend_setNavigationTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationTracker:");
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsLayout");
}

id objc_msgSend_setNeedsStatusBarAppearanceUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsStatusBarAppearanceUpdate");
}

id objc_msgSend_setNeedsUpdateConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsUpdateConfiguration");
}

id objc_msgSend_setNeedsWatchIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsWatchIcon:");
}

id objc_msgSend_setNumLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumLines:");
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLines:");
}

id objc_msgSend_setNumberOfWorkoutsForCacheKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfWorkoutsForCacheKey:");
}

id objc_msgSend_setNumberStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberStyle:");
}

id objc_msgSend_setObject_atIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:atIndexedSubscript:");
}

id objc_msgSend_setObject_forCacheIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forCacheIndex:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setObservedProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObservedProgress:");
}

id objc_msgSend_setOnDidTapMediaMomentItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOnDidTapMediaMomentItem:");
}

id objc_msgSend_setOnboardingCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOnboardingCoordinator:");
}

id objc_msgSend_setOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpacity:");
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpaque:");
}

id objc_msgSend_setOpponentScoreViewWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpponentScoreViewWidth:");
}

id objc_msgSend_setOtherAddressesAlreadyChosen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtherAddressesAlreadyChosen:");
}

id objc_msgSend_setPace100UnitFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPace100UnitFont:");
}

id objc_msgSend_setPaceSamples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPaceSamples:");
}

id objc_msgSend_setPaceSelectionDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPaceSelectionDelegate:");
}

id objc_msgSend_setPagingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPagingEnabled:");
}

id objc_msgSend_setParagraphStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParagraphStyle:");
}

id objc_msgSend_setPasswordController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPasswordController:");
}

id objc_msgSend_setPasswordEnteredHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPasswordEnteredHandler:");
}

id objc_msgSend_setPasswordEntryCancelledHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPasswordEntryCancelledHandler:");
}

id objc_msgSend_setPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPath:");
}

id objc_msgSend_setPauseRingsCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPauseRingsCoordinator:");
}

id objc_msgSend_setPaused_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPaused:");
}

id objc_msgSend_setPercentage_ofRingAtIndex_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPercentage:ofRingAtIndex:animated:");
}

id objc_msgSend_setPhase_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhase:animated:");
}

id objc_msgSend_setPhoneCloudKitAccountIsActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhoneCloudKitAccountIsActive:");
}

id objc_msgSend_setPillBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPillBackgroundColor:");
}

id objc_msgSend_setPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayer:");
}

id objc_msgSend_setPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPosition:");
}

id objc_msgSend_setPowerSamples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPowerSamples:");
}

id objc_msgSend_setPredicateForEnablingContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicateForEnablingContact:");
}

id objc_msgSend_setPredicateForSelectionOfContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicateForSelectionOfContact:");
}

id objc_msgSend_setPredictsBasedOnOutgoingInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredictsBasedOnOutgoingInteraction:");
}

id objc_msgSend_setPreferredAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredAction:");
}

id objc_msgSend_setPreferredAppStoreIconWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredAppStoreIconWidth:");
}

id objc_msgSend_setPreferredWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredWidth:");
}

id objc_msgSend_setPrefersLargeTitles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefersLargeTitles:");
}

id objc_msgSend_setPrefersSideBySideTextAndSecondaryText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefersSideBySideTextAndSecondaryText:");
}

id objc_msgSend_setPrefetchingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefetchingEnabled:");
}

id objc_msgSend_setPregnancyStateProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPregnancyStateProvider:");
}

id objc_msgSend_setPresentedViewControllerShouldUseDarkMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentedViewControllerShouldUseDarkMode:");
}

id objc_msgSend_setPreventsDisplaySleepDuringVideoPlayback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreventsDisplaySleepDuringVideoPlayback:");
}

id objc_msgSend_setPrimaryScoreFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryScoreFont:");
}

id objc_msgSend_setPrimaryScoreUnitFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryScoreUnitFont:");
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriority:");
}

id objc_msgSend_setProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgress:");
}

id objc_msgSend_setProgressTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgressTintColor:");
}

id objc_msgSend_setReachableEmailAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReachableEmailAddress:");
}

id objc_msgSend_setReachablePhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReachablePhoneNumber:");
}

id objc_msgSend_setRecentAndRelevantCollectionView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecentAndRelevantCollectionView:");
}

id objc_msgSend_setRecentAndRelevantDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecentAndRelevantDataSource:");
}

id objc_msgSend_setRecipient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecipient:");
}

id objc_msgSend_setRecipientView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecipientView:");
}

id objc_msgSend_setRecoveryHeartRateReadings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecoveryHeartRateReadings:");
}

id objc_msgSend_setRefreshControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRefreshControl:");
}

id objc_msgSend_setRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItem:");
}

id objc_msgSend_setRightBarButtonItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItems:");
}

id objc_msgSend_setRingDiameter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRingDiameter:");
}

id objc_msgSend_setRingThickness_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRingThickness:");
}

id objc_msgSend_setRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRootViewController:");
}

id objc_msgSend_setRoundingValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoundingValue:");
}

id objc_msgSend_setRouteImageForSharing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteImageForSharing:");
}

id objc_msgSend_setRowHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRowHeight:");
}

id objc_msgSend_setScheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScheme:");
}

id objc_msgSend_setScrollDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollDirection:");
}

id objc_msgSend_setScrollEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollEnabled:");
}

id objc_msgSend_setScrollViewContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollViewContentInset:");
}

id objc_msgSend_setSearchTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchTypes:");
}

id objc_msgSend_setSecondaryScoreFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecondaryScoreFont:");
}

id objc_msgSend_setSecondaryText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecondaryText:");
}

id objc_msgSend_setSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSection:");
}

id objc_msgSend_setSectionFooterHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSectionFooterHeight:");
}

id objc_msgSend_setSectionHeaderTopPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSectionHeaderTopPadding:");
}

id objc_msgSend_setSectionHeadersPinToVisibleBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSectionHeadersPinToVisibleBounds:");
}

id objc_msgSend_setSegControlToBaselineConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSegControlToBaselineConstraint:");
}

id objc_msgSend_setSegment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSegment:");
}

id objc_msgSend_setSegmentIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSegmentIndex:");
}

id objc_msgSend_setSegments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSegments:");
}

id objc_msgSend_setSegmentsExpanded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSegmentsExpanded:");
}

id objc_msgSend_setSelectedBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedBackgroundView:");
}

id objc_msgSend_setSelectedIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedIndex:");
}

id objc_msgSend_setSelectedPaceFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedPaceFormat:");
}

id objc_msgSend_setSelectedSegmentIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedSegmentIndex:");
}

id objc_msgSend_setSelectedViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedViewController:");
}

id objc_msgSend_setSelectionStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionStyle:");
}

id objc_msgSend_setSeparatorColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorColor:");
}

id objc_msgSend_setSeparatorHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorHidden:");
}

id objc_msgSend_setSeparatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorStyle:");
}

id objc_msgSend_setServiceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServiceIdentifier:");
}

id objc_msgSend_setSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSet:");
}

id objc_msgSend_setSetIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetIndex:");
}

id objc_msgSend_setSetupNavigationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetupNavigationController:");
}

id objc_msgSend_setSeymourAvailabilityManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeymourAvailabilityManager:");
}

id objc_msgSend_setSeymourNavController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeymourNavController:");
}

id objc_msgSend_setShadowBlur_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowBlur:");
}

id objc_msgSend_setShadowColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowColor:");
}

id objc_msgSend_setShadowOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowOffset:");
}

id objc_msgSend_setSharingImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharingImage:");
}

id objc_msgSend_setSharingText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharingText:");
}

id objc_msgSend_setShortcutItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShortcutItems:");
}

id objc_msgSend_setShortenedBadgeBacksideStringProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShortenedBadgeBacksideStringProvider:");
}

id objc_msgSend_setShouldAdjustButtonTrayForKeyboard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAdjustButtonTrayForKeyboard:");
}

id objc_msgSend_setShouldCenterLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldCenterLines:");
}

id objc_msgSend_setShouldIncludeActivitySummaryPrivateProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldIncludeActivitySummaryPrivateProperties:");
}

id objc_msgSend_setShouldIncludeActivitySummaryStatistics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldIncludeActivitySummaryStatistics:");
}

id objc_msgSend_setShouldUseFakeSegmentMarkers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldUseFakeSegmentMarkers:");
}

id objc_msgSend_setShownContacts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShownContacts:");
}

id objc_msgSend_setShowsHorizontalScrollIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsHorizontalScrollIndicator:");
}

id objc_msgSend_setShowsSeparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsSeparator:");
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsVerticalScrollIndicator:");
}

id objc_msgSend_setSideMargin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSideMargin:");
}

id objc_msgSend_setSortDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortDescriptor:");
}

id objc_msgSend_setSortedTypeIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortedTypeIdentifiers:");
}

id objc_msgSend_setSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpacing:");
}

id objc_msgSend_setSpecialization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpecialization:");
}

id objc_msgSend_setSpinner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpinner:");
}

id objc_msgSend_setSplit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSplit:");
}

id objc_msgSend_setSplitIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSplitIndex:");
}

id objc_msgSend_setSplits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSplits:");
}

id objc_msgSend_setSplitsDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSplitsDictionary:");
}

id objc_msgSend_setSplitsExpanded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSplitsExpanded:");
}

id objc_msgSend_setSpriteSheet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpriteSheet:");
}

id objc_msgSend_setStartDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartDate:");
}

id objc_msgSend_setStepKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStepKeyPath:");
}

id objc_msgSend_setStrideLengthSamples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrideLengthSamples:");
}

id objc_msgSend_setStrokeCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrokeCount:");
}

id objc_msgSend_setStrokeSamples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrokeSamples:");
}

id objc_msgSend_setStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStyle:");
}

id objc_msgSend_setSubAnchorRule_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubAnchorRule:");
}

id objc_msgSend_setSubAxisDescriptorPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubAxisDescriptorPadding:");
}

id objc_msgSend_setSubAxisSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubAxisSpacing:");
}

id objc_msgSend_setSubItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubItems:");
}

id objc_msgSend_setSubLabelAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubLabelAlignment:");
}

id objc_msgSend_setSubTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubTimeInterval:");
}

id objc_msgSend_setSubtitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubtitle:");
}

id objc_msgSend_setSummary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSummary:");
}

id objc_msgSend_setSummaryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSummaryType:");
}

id objc_msgSend_setSwimDistanceByStrokeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwimDistanceByStrokeStyle:");
}

id objc_msgSend_setSwimDistanceByStrokeStyleUpdateBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwimDistanceByStrokeStyleUpdateBlock:");
}

id objc_msgSend_setSwimLocationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwimLocationType:");
}

id objc_msgSend_setSwimmingSets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwimmingSets:");
}

id objc_msgSend_setSwimmingSplit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwimmingSplit:");
}

id objc_msgSend_setSwimmingSplitItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwimmingSplitItems:");
}

id objc_msgSend_setSwimmingSplits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwimmingSplits:");
}

id objc_msgSend_setSwolfScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwolfScore:");
}

id objc_msgSend_setSynchronizesWithCA_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSynchronizesWithCA:");
}

id objc_msgSend_setTabBarController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTabBarController:");
}

id objc_msgSend_setTableFooterView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableFooterView:");
}

id objc_msgSend_setTableHeaderViewShouldAutoHide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableHeaderViewShouldAutoHide:");
}

id objc_msgSend_setTableItemsBySection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableItemsBySection:");
}

id objc_msgSend_setTableSectionHeaders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableSectionHeaders:");
}

id objc_msgSend_setTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableView:");
}

id objc_msgSend_setTemplateUniqueName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTemplateUniqueName:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextAlignment:");
}

id objc_msgSend_setTextBottomBaselineConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextBottomBaselineConstraint:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setTextColorHighlighted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColorHighlighted:");
}

id objc_msgSend_setTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextStyle:");
}

id objc_msgSend_setThickness_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThickness:");
}

id objc_msgSend_setThumbnail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThumbnail:");
}

id objc_msgSend_setTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeInterval:");
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeStyle:");
}

id objc_msgSend_setTimeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeZone:");
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTintColor:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:forState:");
}

id objc_msgSend_setTitleColor_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleColor:forState:");
}

id objc_msgSend_setTitleLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleLabel:");
}

id objc_msgSend_setTitleString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleString:");
}

id objc_msgSend_setTitleText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleText:");
}

id objc_msgSend_setTitleTextAttributes_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleTextAttributes:forState:");
}

id objc_msgSend_setTopColor_bottomColor_ofRingAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTopColor:bottomColor:ofRingAtIndex:");
}

id objc_msgSend_setTotalDistance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalDistance:");
}

id objc_msgSend_setTotalText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalText:");
}

id objc_msgSend_setTrackDistanceUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackDistanceUnit:");
}

id objc_msgSend_setTrackLap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackLap:");
}

id objc_msgSend_setTrackLaps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackLaps:");
}

id objc_msgSend_setTrackTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackTintColor:");
}

id objc_msgSend_setTrailingTextConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrailingTextConstraint:");
}

id objc_msgSend_setTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransform:");
}

id objc_msgSend_setTransitionAnimator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitionAnimator:");
}

id objc_msgSend_setTransitionAnimatorFromViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitionAnimatorFromViewController:");
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:");
}

id objc_msgSend_setTranslucent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslucent:");
}

id objc_msgSend_setTrophyCaseViewControllerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrophyCaseViewControllerDelegate:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setUnhighlightedLabelColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnhighlightedLabelColor:");
}

id objc_msgSend_setUnhighlightedSubLabelColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnhighlightedSubLabelColor:");
}

id objc_msgSend_setUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnit:");
}

id objc_msgSend_setUnitFormatString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnitFormatString:");
}

id objc_msgSend_setUnitTextYOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnitTextYOffset:");
}

id objc_msgSend_setUpdateBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdateBlock:");
}

id objc_msgSend_setUpdateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdateHandler:");
}

id objc_msgSend_setUrlRetryCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrlRetryCount:");
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInteractionEnabled:");
}

id objc_msgSend_setUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInterfaceStyle:");
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:");
}

id objc_msgSend_setValueAttrString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValueAttrString:");
}

id objc_msgSend_setValueColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValueColor:");
}

id objc_msgSend_setValueFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValueFont:");
}

id objc_msgSend_setValueIncrement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValueIncrement:");
}

id objc_msgSend_setValueStepIncremement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValueStepIncremement:");
}

id objc_msgSend_setValueUpdateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValueUpdateHandler:");
}

id objc_msgSend_setVerticalOscillationSamples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVerticalOscillationSamples:");
}

id objc_msgSend_setVideoGravity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideoGravity:");
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setView:");
}

id objc_msgSend_setViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewControllers:");
}

id objc_msgSend_setViewControllers_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewControllers:animated:");
}

id objc_msgSend_setWasSuccessful_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWasSuccessful:");
}

id objc_msgSend_setWatchCloudKitAccountAssumedToExist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWatchCloudKitAccountAssumedToExist:");
}

id objc_msgSend_setWatchCloudKitAccountExists_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWatchCloudKitAccountExists:");
}

id objc_msgSend_setWatchCloudKitAccountFetchInProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWatchCloudKitAccountFetchInProgress:");
}

id objc_msgSend_setWheelchairDataSubmissionAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWheelchairDataSubmissionAllowed:");
}

id objc_msgSend_setWheelchairUseCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWheelchairUseCache:");
}

id objc_msgSend_setWheelchairUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWheelchairUser:");
}

id objc_msgSend_setWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWindow:");
}

id objc_msgSend_setWindowScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWindowScene:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithCurrentSelectedDate_caller_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithCurrentSelectedDate:caller:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWorkout_fitnessAppContext_formattingManager_achievementCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkout:fitnessAppContext:formattingManager:achievementCount:");
}

id objc_msgSend_setWorkout_fitnessAppContext_formattingManager_achievementCount_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkout:fitnessAppContext:formattingManager:achievementCount:completion:");
}

id objc_msgSend_setWorkoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkoutActivity:");
}

id objc_msgSend_setWorkoutBrandName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkoutBrandName:");
}

id objc_msgSend_setWorkoutFormattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkoutFormattingManager:");
}

id objc_msgSend_setWorkoutStatistics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkoutStatistics:");
}

id objc_msgSend_setWorkoutStatistics_activityTypeKey_formattingManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkoutStatistics:activityTypeKey:formattingManager:");
}

id objc_msgSend_setWorkoutTypeFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkoutTypeFont:");
}

id objc_msgSend_setXAxisDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setXAxisDescriptor:");
}

id objc_msgSend_setYAxisDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setYAxisDescriptor:");
}

id objc_msgSend_settingsWithContactStore_threeDTouchEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsWithContactStore:threeDTouchEnabled:");
}

id objc_msgSend_setupCelebrationVideoIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupCelebrationVideoIfNeeded");
}

id objc_msgSend_setupCircleBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupCircleBackground");
}

id objc_msgSend_setupFlowUserInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupFlowUserInfo");
}

id objc_msgSend_setupGoalViewValueChanged_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupGoalViewValueChanged:value:");
}

id objc_msgSend_setupLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupLabelFont");
}

id objc_msgSend_setupNavigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupNavigationController");
}

id objc_msgSend_seymourAppWillResignActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seymourAppWillResignActive");
}

id objc_msgSend_seymourAppWillTerminate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seymourAppWillTerminate");
}

id objc_msgSend_seymourAvailabilityDidChangeNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seymourAvailabilityDidChangeNotification");
}

id objc_msgSend_seymourAvailabilityManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seymourAvailabilityManager");
}

id objc_msgSend_seymourCatalogItemDataProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seymourCatalogItemDataProvider");
}

id objc_msgSend_seymourNavController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seymourNavController");
}

id objc_msgSend_seymourNavigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seymourNavigationController");
}

id objc_msgSend_seymourTabDeselected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seymourTabDeselected");
}

id objc_msgSend_seymourTabSelectedWithSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seymourTabSelectedWithSelection:");
}

id objc_msgSend_shallowCopyReplacingEarnedInstances_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shallowCopyReplacingEarnedInstances:");
}

id objc_msgSend_shareDescriptionForAchievement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareDescriptionForAchievement:");
}

id objc_msgSend_shareImageForWorkout_routeImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareImageForWorkout:routeImage:");
}

id objc_msgSend_shareSheetActivityItemsWithWorkout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareSheetActivityItemsWithWorkout:completion:");
}

id objc_msgSend_shareTextForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareTextForWorkout:");
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shared");
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedApplication");
}

id objc_msgSend_sharedBehavior(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedBehavior");
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedConnection");
}

id objc_msgSend_sharedDeviceConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedDeviceConnection");
}

id objc_msgSend_sharedImageManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedImageManager");
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedInstance");
}

id objc_msgSend_sharedInstanceForServiceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedInstanceForServiceIdentifier:");
}

id objc_msgSend_sharedNavigator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedNavigator");
}

id objc_msgSend_sharingImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharingImage");
}

id objc_msgSend_sharingSpriteSheet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharingSpriteSheet");
}

id objc_msgSend_sharingText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharingText");
}

id objc_msgSend_shiftLocations_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shiftLocations:withCompletion:");
}

id objc_msgSend_shifter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shifter");
}

id objc_msgSend_shortWeekdaySymbols(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shortWeekdaySymbols");
}

id objc_msgSend_shortcutItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shortcutItem");
}

id objc_msgSend_shouldAccountForHeaderHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAccountForHeaderHeight");
}

id objc_msgSend_shouldBypassFirstResponderAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldBypassFirstResponderAction:");
}

id objc_msgSend_shouldFakeData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldFakeData");
}

id objc_msgSend_shouldHandleNotificationCategoryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldHandleNotificationCategoryIdentifier:");
}

id objc_msgSend_shouldHandleNotificationResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldHandleNotificationResponse:");
}

id objc_msgSend_shouldShowCelebration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowCelebration");
}

id objc_msgSend_shouldShowCountForAchievement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowCountForAchievement:");
}

id objc_msgSend_shouldShowDistanceForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowDistanceForWorkout:workoutActivity:");
}

id objc_msgSend_shouldShowRaceResults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowRaceResults");
}

id objc_msgSend_shouldUseCircularGradientImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUseCircularGradientImage");
}

id objc_msgSend_shouldUseFakeSegmentMarkers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUseFakeSegmentMarkers");
}

id objc_msgSend_showActivityOnDate_shareImmediately_animated_forGoalCompleteNotification_goalRecommendation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showActivityOnDate:shareImmediately:animated:forGoalCompleteNotification:goalRecommendation:");
}

id objc_msgSend_showAllTrendsAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAllTrendsAnimated:");
}

id objc_msgSend_showDetailForFriendWithUUID_date_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showDetailForFriendWithUUID:date:");
}

id objc_msgSend_showDetailForMeOnDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showDetailForMeOnDate:");
}

id objc_msgSend_showInbox(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showInbox");
}

id objc_msgSend_showLoad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showLoad");
}

id objc_msgSend_showMindfulnessSessionWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showMindfulnessSessionWithUUID:");
}

id objc_msgSend_showPregnancy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPregnancy");
}

id objc_msgSend_showSummaryCardWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSummaryCardWithIdentifier:");
}

id objc_msgSend_showTimeoutDialogWithDismissCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showTimeoutDialogWithDismissCompletion:");
}

id objc_msgSend_showTodayAndShareImmediately_animated_forGoalCompleteNotification_goalRecommendation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showTodayAndShareImmediately:animated:forGoalCompleteNotification:goalRecommendation:");
}

id objc_msgSend_showTodayAndShareImmediately_animated_forGoalCompleteNotification_goalRecommendation_withPauseRingsEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showTodayAndShareImmediately:animated:forGoalCompleteNotification:goalRecommendation:withPauseRingsEditing:");
}

id objc_msgSend_showTrendWithIdentifier_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showTrendWithIdentifier:animated:");
}

id objc_msgSend_showWorkoutWithId_activityId_page_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showWorkoutWithId:activityId:page:");
}

id objc_msgSend_siblingIndexPathsForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siblingIndexPathsForIndexPath:");
}

id objc_msgSend_simpleWorkoutCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "simpleWorkoutCount");
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "size");
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFits:");
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeToFit");
}

id objc_msgSend_sizeWithAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeWithAttributes:");
}

id objc_msgSend_snapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshot");
}

id objc_msgSend_snapshotIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotIndex");
}

id objc_msgSend_snapshotWithGoalsCarriedForwardForSnapshotIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotWithGoalsCarriedForwardForSnapshotIndex:");
}

id objc_msgSend_snapshotWithSize_lineWidth_traitCollection_insets_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotWithSize:lineWidth:traitCollection:insets:completion:");
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_sortedDateComponentKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedDateComponentKeys");
}

id objc_msgSend_sortedTypeIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedTypeIdentifiers");
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "source");
}

id objc_msgSend_sourceName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceName");
}

id objc_msgSend_sourceRevision(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceRevision");
}

id objc_msgSend_spinner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spinner");
}

id objc_msgSend_split(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "split");
}

id objc_msgSend_splitDelimiterDistance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitDelimiterDistance");
}

id objc_msgSend_splitIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitIndex");
}

id objc_msgSend_splits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splits");
}

id objc_msgSend_splitsDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitsDictionary");
}

id objc_msgSend_splitsExpanded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitsExpanded");
}

id objc_msgSend_splitsForWorkout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitsForWorkout:workoutActivity:completion:");
}

id objc_msgSend_stackedLabels(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stackedLabels");
}

id objc_msgSend_standGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standGoal");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardUserDefaults");
}

id objc_msgSend_startAccessingSecurityScopedResource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAccessingSecurityScopedResource");
}

id objc_msgSend_startActivitySummaryQuery(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startActivitySummaryQuery");
}

id objc_msgSend_startAnimating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAnimating");
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startDate");
}

id objc_msgSend_startEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startEditing");
}

id objc_msgSend_startFetching(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startFetching");
}

id objc_msgSend_startObservation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startObservation:");
}

id objc_msgSend_startOfDayForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startOfDayForDate:");
}

id objc_msgSend_startOfDayMidnight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startOfDayMidnight");
}

id objc_msgSend_startOfFitnessWeekAfterWeekStarting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startOfFitnessWeekAfterWeekStarting:");
}

id objc_msgSend_startOfFitnessWeekBeforeWeekStarting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startOfFitnessWeekBeforeWeekStarting:");
}

id objc_msgSend_startOfMonth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startOfMonth");
}

id objc_msgSend_startSyncIfRestoreNotCompleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSyncIfRestoreNotCompleted");
}

id objc_msgSend_startTrackingWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startTrackingWorkout:workoutActivity:");
}

id objc_msgSend_stateKnown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateKnown");
}

id objc_msgSend_statisticsForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statisticsForType:");
}

id objc_msgSend_statusBarFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarFrame");
}

id objc_msgSend_statusBarManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarManager");
}

id objc_msgSend_stepColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stepColors");
}

id objc_msgSend_stepCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stepCount");
}

id objc_msgSend_stepKeyPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stepKeyPath");
}

id objc_msgSend_stopAccessingSecurityScopedResource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAccessingSecurityScopedResource");
}

id objc_msgSend_stopAnimating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAnimating");
}

id objc_msgSend_stopObservation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopObservation:");
}

id objc_msgSend_stopQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopQuery:");
}

id objc_msgSend_stopTrackingWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopTrackingWorkout:workoutActivity:");
}

id objc_msgSend_strideLengthSamples(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strideLengthSamples");
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "string");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByTrimmingCharactersInSet:");
}

id objc_msgSend_stringForAchievement_locProvider_formatForFriend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForAchievement:locProvider:formatForFriend:");
}

id objc_msgSend_stringFromContact_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromContact:style:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringFromNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromNumber:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringValue");
}

id objc_msgSend_stringWithDayNameAndShortMonthFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithDayNameAndShortMonthFromDate:");
}

id objc_msgSend_stringWithDuration_durationFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithDuration:durationFormat:");
}

id objc_msgSend_stringWithEitherTodayOrLongStyleDateFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithEitherTodayOrLongStyleDateFromDate:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithNumber_decimalPrecision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithNumber:decimalPrecision:");
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithString:");
}

id objc_msgSend_stringWithValidatedFormat_validFormatSpecifiers_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithValidatedFormat:validFormatSpecifiers:error:");
}

id objc_msgSend_strokeCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strokeCount");
}

id objc_msgSend_strokeCountScaledToFillSplit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strokeCountScaledToFillSplit");
}

id objc_msgSend_strokeSamples(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strokeSamples");
}

id objc_msgSend_strokeSamplesForWorkout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strokeSamplesForWorkout:workoutActivity:completion:");
}

id objc_msgSend_subItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subItems");
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subarrayWithRange:");
}

id objc_msgSend_subjectMonitorRegistry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subjectMonitorRegistry");
}

id objc_msgSend_subtitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subtitle");
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subviews");
}

id objc_msgSend_sumQuantity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sumQuantity");
}

id objc_msgSend_summaryConfigureWithWorkout_workoutActivity_fitnessAppContext_catalogItemViewModel_formattingManager_resizeBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "summaryConfigureWithWorkout:workoutActivity:fitnessAppContext:catalogItemViewModel:formattingManager:resizeBlock:");
}

id objc_msgSend_summaryCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "summaryCoordinator");
}

id objc_msgSend_summaryDeeplinkViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "summaryDeeplinkViewController");
}

id objc_msgSend_summaryIndexes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "summaryIndexes");
}

id objc_msgSend_summaryType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "summaryType");
}

id objc_msgSend_sundayGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sundayGoal");
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superview");
}

id objc_msgSend_supportsActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsActivityType:");
}

id objc_msgSend_supportsCapability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsCapability:");
}

id objc_msgSend_supportsCompetitions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsCompetitions");
}

id objc_msgSend_supportsDistanceForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsDistanceForWorkout:workoutActivity:");
}

id objc_msgSend_supportsDownhillRunsCountForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsDownhillRunsCountForWorkout:workoutActivity:");
}

id objc_msgSend_supportsElevationAscendedForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsElevationAscendedForWorkout:workoutActivity:");
}

id objc_msgSend_supportsElevationDescendedForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsElevationDescendedForWorkout:workoutActivity:");
}

id objc_msgSend_supportsPaceForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsPaceForWorkout:workoutActivity:");
}

id objc_msgSend_supportsTrackWorkout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsTrackWorkout");
}

id objc_msgSend_swimDistanceByStrokeStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swimDistanceByStrokeStyle");
}

id objc_msgSend_swimDistanceByStrokeStyleForWorkout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swimDistanceByStrokeStyleForWorkout:workoutActivity:completion:");
}

id objc_msgSend_swimDistanceByStrokeStyleUpdateBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swimDistanceByStrokeStyleUpdateBlock");
}

id objc_msgSend_swimLocationType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swimLocationType");
}

id objc_msgSend_swimmingLocationType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swimmingLocationType");
}

id objc_msgSend_swimmingPacePerHundredForWorkout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swimmingPacePerHundredForWorkout:workoutActivity:completion:");
}

id objc_msgSend_swimmingSets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swimmingSets");
}

id objc_msgSend_swimmingSetsForWorkout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swimmingSetsForWorkout:workoutActivity:completion:");
}

id objc_msgSend_swimmingSplit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swimmingSplit");
}

id objc_msgSend_swimmingSplitItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swimmingSplitItems");
}

id objc_msgSend_swimmingSplits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swimmingSplits");
}

id objc_msgSend_swimmingSplitsForWorkout_workoutActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swimmingSplitsForWorkout:workoutActivity:completion:");
}

id objc_msgSend_synchronizeUserDefaultsDomain_keys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronizeUserDefaultsDomain:keys:");
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBackgroundColor");
}

id objc_msgSend_systemBlackColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBlackColor");
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBlueColor");
}

id objc_msgSend_systemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:");
}

id objc_msgSend_systemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:weight:");
}

id objc_msgSend_systemFontOfSize_weight_design_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:weight:design:");
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:");
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:withConfiguration:");
}

id objc_msgSend_systemLayoutSizeFittingSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemLayoutSizeFittingSize:");
}

id objc_msgSend_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:");
}

id objc_msgSend_systemTimeZone(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemTimeZone");
}

id objc_msgSend_tabBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabBar");
}

id objc_msgSend_tabBarController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabBarController");
}

id objc_msgSend_tabBarItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabBarItem");
}

id objc_msgSend_tableItemsBySection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableItemsBySection");
}

id objc_msgSend_tableSectionHeaders(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableSectionHeaders");
}

id objc_msgSend_tableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView");
}

id objc_msgSend_tableView_cellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:cellForRowAtIndexPath:");
}

id objc_msgSend_tableView_heightForHeaderInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:heightForHeaderInSection:");
}

id objc_msgSend_tableView_heightForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:heightForRowAtIndexPath:");
}

id objc_msgSend_tableView_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:numberOfRowsInSection:");
}

id objc_msgSend_tappedContinue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tappedContinue:");
}

id objc_msgSend_teardownPlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teardownPlayer");
}

id objc_msgSend_template(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "template");
}

id objc_msgSend_templateUniqueName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "templateUniqueName");
}

id objc_msgSend_tertiaryLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tertiaryLabelColor");
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "text");
}

id objc_msgSend_textBottomBaselineConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textBottomBaselineConstraint");
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textColor");
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textLabel");
}

id objc_msgSend_textProperties(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textProperties");
}

id objc_msgSend_textSizeDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textSizeDidChange:");
}

id objc_msgSend_textView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textView");
}

id objc_msgSend_thumbnailImageForAchievement_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailImageForAchievement:size:");
}

id objc_msgSend_thursdayGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thursdayGoal");
}

id objc_msgSend_timeDateFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeDateFormatter");
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceReferenceDate");
}

id objc_msgSend_timeZoneForWorkout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeZoneForWorkout:");
}

id objc_msgSend_timeZoneWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeZoneWithName:");
}

id objc_msgSend_timerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tintColor");
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "title");
}

id objc_msgSend_titleForAchievement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleForAchievement:");
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleLabel");
}

id objc_msgSend_titleString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleString");
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topAnchor");
}

id objc_msgSend_topDivider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topDivider");
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topViewController");
}

id objc_msgSend_totalActiveEnergyBurn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "totalActiveEnergyBurn");
}

id objc_msgSend_totalDistance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "totalDistance");
}

id objc_msgSend_totalEnergyBurned(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "totalEnergyBurned");
}

id objc_msgSend_totalFlightsClimbed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "totalFlightsClimbed");
}

id objc_msgSend_totalNumberOfPendingRequests(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "totalNumberOfPendingRequests");
}

id objc_msgSend_trackDistanceUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackDistanceUnit");
}

id objc_msgSend_trackLap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackLap");
}

id objc_msgSend_trackLaps(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackLaps");
}

id objc_msgSend_trackLapsForWorkout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackLapsForWorkout:completion:");
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trailingAnchor");
}

id objc_msgSend_trailingTextConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trailingTextConstraint");
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollection");
}

id objc_msgSend_traitCollectionWithTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollectionWithTraits:");
}

id objc_msgSend_transitionAnimator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionAnimator");
}

id objc_msgSend_transitionAnimatorFromViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionAnimatorFromViewController");
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionCoordinator");
}

id objc_msgSend_trendsAvailability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trendsAvailability");
}

id objc_msgSend_trendsAvailabilityDidChangeNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trendsAvailabilityDidChangeNotification");
}

id objc_msgSend_trendsAvailabilityManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trendsAvailabilityManager");
}

id objc_msgSend_triggerFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerFetch");
}

id objc_msgSend_trophyCaseDidBeginCelebration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trophyCaseDidBeginCelebration:");
}

id objc_msgSend_tuesdayGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tuesdayGoal");
}

id objc_msgSend_tvConnectionManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvConnectionManager");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "type");
}

id objc_msgSend_unachievedShortDescriptionForAchievement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unachievedShortDescriptionForAchievement:");
}

id objc_msgSend_unavailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unavailable");
}

id objc_msgSend_uncommentedAddresses(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uncommentedAddresses");
}

id objc_msgSend_unearned(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unearned");
}

id objc_msgSend_unhide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unhide");
}

id objc_msgSend_unifiedContactWithIdentifier_keysToFetch_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unifiedContactWithIdentifier:keysToFetch:error:");
}

id objc_msgSend_uniqueName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uniqueName");
}

id objc_msgSend_unit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unit");
}

id objc_msgSend_unitFormatString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unitFormatString");
}

id objc_msgSend_unitFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unitFromString:");
}

id objc_msgSend_unitManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unitManager");
}

id objc_msgSend_unitTextYOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unitTextYOffset");
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntegerValue");
}

id objc_msgSend_updateAuthorization(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAuthorization");
}

id objc_msgSend_updateAvailability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAvailability");
}

id objc_msgSend_updateBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBlock");
}

id objc_msgSend_updateContinueButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContinueButton");
}

id objc_msgSend_updateDateTextForDayNumber_textColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDateTextForDayNumber:textColor:");
}

id objc_msgSend_updateDiscoveryStateIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDiscoveryStateIfNeeded");
}

id objc_msgSend_updateHeaderViewContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateHeaderViewContent");
}

id objc_msgSend_updateHiddenAppBundleIds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateHiddenAppBundleIds");
}

id objc_msgSend_updateOutgoingInvites_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateOutgoingInvites:");
}

id objc_msgSend_updateSharingImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSharingImage");
}

id objc_msgSend_updateWidgets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWidgets");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uppercaseString");
}

id objc_msgSend_urlRetryCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlRetryCount");
}

id objc_msgSend_userActiveEnergyBurnedUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userActiveEnergyBurnedUnit");
}

id objc_msgSend_userCachesDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userCachesDirectory");
}

id objc_msgSend_userDistanceElevationUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userDistanceElevationUnit");
}

id objc_msgSend_userDistanceHKUnitForDistanceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userDistanceHKUnitForDistanceType:");
}

id objc_msgSend_userDistanceUnitForDistanceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userDistanceUnitForDistanceType:");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInfo");
}

id objc_msgSend_userInterfaceLayoutDirectionForSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceLayoutDirectionForSemanticContentAttribute:");
}

id objc_msgSend_userLapLengthHKUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userLapLengthHKUnit");
}

id objc_msgSend_userPreferredDistanceUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userPreferredDistanceUnit");
}

id objc_msgSend_userText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userText");
}

id objc_msgSend_username(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "username");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "value");
}

id objc_msgSend_valueAttrString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueAttrString");
}

id objc_msgSend_valueColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueColor");
}

id objc_msgSend_valueDisplayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueDisplayColor");
}

id objc_msgSend_valueFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueFont");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueForProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForProperty:");
}

id objc_msgSend_valueForSmallWidth_mediumWidth_largeWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForSmallWidth:mediumWidth:largeWidth:");
}

id objc_msgSend_valueIncrement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueIncrement");
}

id objc_msgSend_valueLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueLabel");
}

id objc_msgSend_valueWithCGSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCGSize:");
}

id objc_msgSend_valueWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithSize:");
}

id objc_msgSend_verticalOscillationSamples(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verticalOscillationSamples");
}

id objc_msgSend_veryShortWeekdaySymbols(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "veryShortWeekdaySymbols");
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "view");
}

id objc_msgSend_viewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController");
}

id objc_msgSend_viewControllerForContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForContact:");
}

id objc_msgSend_viewControllerForUnknownContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForUnknownContact:");
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllers");
}

id objc_msgSend_viewIfLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewIfLoaded");
}

id objc_msgSend_walkingAndRunningDistance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "walkingAndRunningDistance");
}

id objc_msgSend_wasSuccessful(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasSuccessful");
}

id objc_msgSend_watchCloudKitAccountAssumedToExist(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "watchCloudKitAccountAssumedToExist");
}

id objc_msgSend_watchCloudKitAccountExists(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "watchCloudKitAccountExists");
}

id objc_msgSend_watchCloudKitAccountFetchInProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "watchCloudKitAccountFetchInProgress");
}

id objc_msgSend_wattUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wattUnit");
}

id objc_msgSend_weatherHumidityForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weatherHumidityForWorkout:workoutActivity:");
}

id objc_msgSend_weatherTemperatureForWorkout_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weatherTemperatureForWorkout:workoutActivity:");
}

id objc_msgSend_wednesdayGoal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wednesdayGoal");
}

id objc_msgSend_week_cellSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "week:cellSelected:");
}

id objc_msgSend_week_pressedOnDay_down_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "week:pressedOnDay:down:");
}

id objc_msgSend_weekDayLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekDayLabel");
}

id objc_msgSend_weekOfYear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekOfYear");
}

id objc_msgSend_weekWithStartDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekWithStartDate:");
}

id objc_msgSend_weight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weight");
}

id objc_msgSend_wheelchairSectionIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wheelchairSectionIndex");
}

id objc_msgSend_wheelchairSharingSpriteSheet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wheelchairSharingSpriteSheet");
}

id objc_msgSend_wheelchairUse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wheelchairUse");
}

id objc_msgSend_wheelchairUseCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wheelchairUseCache");
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whiteColor");
}

id objc_msgSend_whitespaceAndNewlineCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whitespaceAndNewlineCharacterSet");
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "widthAnchor");
}

id objc_msgSend_willMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willMoveToParentViewController:");
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "window");
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowScene");
}

id objc_msgSend_windows(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windows");
}

id objc_msgSend_withdrawFriendInviteToFriendUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "withdrawFriendInviteToFriendUUID:completion:");
}

id objc_msgSend_withdrawInvitationToFriend_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "withdrawInvitationToFriend:completion:");
}

id objc_msgSend_workout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workout");
}

id objc_msgSend_workoutActivities(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutActivities");
}

id objc_msgSend_workoutActivity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutActivity");
}

id objc_msgSend_workoutActivityType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutActivityType");
}

id objc_msgSend_workoutAnalyticsHandlerFor_workoutActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutAnalyticsHandlerFor:workoutActivity:");
}

id objc_msgSend_workoutBrandName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutBrandName");
}

id objc_msgSend_workoutConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutConfiguration");
}

id objc_msgSend_workoutDataProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutDataProvider");
}

id objc_msgSend_workoutEventWithType_dateInterval_metadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutEventWithType:dateInterval:metadata:");
}

id objc_msgSend_workoutEvents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutEvents");
}

id objc_msgSend_workoutForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutForIndexPath:");
}

id objc_msgSend_workoutFormattingManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutFormattingManager");
}

id objc_msgSend_workoutHasGoalCompletionEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutHasGoalCompletionEvent:");
}

id objc_msgSend_workoutIsFirstParty(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutIsFirstParty");
}

id objc_msgSend_workoutIsPoolSwim(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutIsPoolSwim");
}

id objc_msgSend_workoutRingWithPercent_colors_diameter_thickness_renderer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutRingWithPercent:colors:diameter:thickness:renderer:");
}

id objc_msgSend_workoutRouteType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutRouteType");
}

id objc_msgSend_workoutStatistics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutStatistics");
}

id objc_msgSend_workoutStatisticsForMonthAndYear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutStatisticsForMonthAndYear");
}

id objc_msgSend_workoutType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutType");
}

id objc_msgSend_workoutTypeFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutTypeFont");
}

id objc_msgSend_workouts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workouts");
}

id objc_msgSend_workoutsByDay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutsByDay");
}

id objc_msgSend_workoutsByMonthAndYear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutsByMonthAndYear");
}

id objc_msgSend_workoutsDataProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutsDataProvider");
}

id objc_msgSend_workoutsListDataSource_didEncounterReloadingException_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutsListDataSource:didEncounterReloadingException:");
}

id objc_msgSend_workoutsListDataSource_didScrollToSectionWithDateComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutsListDataSource:didScrollToSectionWithDateComponents:");
}

id objc_msgSend_workoutsListDataSource_didSelectWorkout_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutsListDataSource:didSelectWorkout:atIndexPath:");
}

id objc_msgSend_workoutsListDataSource_requestsDeleteConfirmationForWorkout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutsListDataSource:requestsDeleteConfirmationForWorkout:completion:");
}

id objc_msgSend_workoutsListViewController_didScrollToDateComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workoutsListViewController:didScrollToDateComponents:");
}

id objc_msgSend_writeToCPBitmapFile_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToCPBitmapFile:flags:");
}

id objc_msgSend_writeToURL_atomically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:atomically:");
}

id objc_msgSend_xAxisDescriptor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xAxisDescriptor");
}

id objc_msgSend_yardUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yardUnit");
}

id objc_msgSend_year(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "year");
}
