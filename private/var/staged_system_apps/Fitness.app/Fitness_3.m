uint64_t sub_1002062B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100206214();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

unint64_t sub_100206304()
{
  unint64_t result;

  result = qword_100827B10;
  if (!qword_100827B10)
  {
    result = swift_getWitnessTable(&unk_10062D724, &type metadata for WorkoutSplitEntity.SplitType);
    atomic_store(result, (unint64_t *)&qword_100827B10);
  }
  return result;
}

unint64_t sub_10020634C()
{
  unint64_t result;

  result = qword_100827B18;
  if (!qword_100827B18)
  {
    result = swift_getWitnessTable(&unk_10062D74C, &type metadata for WorkoutSplitEntity.SplitType);
    atomic_store(result, (unint64_t *)&qword_100827B18);
  }
  return result;
}

unint64_t sub_100206394()
{
  unint64_t result;

  result = qword_100827B20;
  if (!qword_100827B20)
  {
    result = swift_getWitnessTable(&unk_10062D774, &type metadata for WorkoutSplitEntity.SplitType);
    atomic_store(result, (unint64_t *)&qword_100827B20);
  }
  return result;
}

unint64_t sub_1002063DC()
{
  unint64_t result;

  result = qword_100827B28;
  if (!qword_100827B28)
  {
    result = swift_getWitnessTable(&unk_10062D7CC, &type metadata for WorkoutSplitEntity.SplitType);
    atomic_store(result, (unint64_t *)&qword_100827B28);
  }
  return result;
}

uint64_t sub_100206420@<X0>(uint64_t a1@<X8>)
{
  return sub_10020711C(&qword_10081D7C0, (uint64_t)qword_10086A1D8, (uint64_t)sub_100205E38, a1);
}

uint64_t sub_10020643C(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10020647C();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_10020647C()
{
  unint64_t result;

  result = qword_100827B30;
  if (!qword_100827B30)
  {
    result = swift_getWitnessTable(&unk_10062D62C, &type metadata for WorkoutSplitEntity.SplitType);
    atomic_store(result, (unint64_t *)&qword_100827B30);
  }
  return result;
}

uint64_t sub_1002064C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10020647C();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1002064FC()
{
  unint64_t result;

  result = qword_100827B38;
  if (!qword_100827B38)
  {
    result = swift_getWitnessTable(&unk_10062D80C, &type metadata for WorkoutSplitEntity.SplitType);
    atomic_store(result, (unint64_t *)&qword_100827B38);
  }
  return result;
}

unint64_t sub_100206544()
{
  unint64_t result;

  result = qword_100827B40;
  if (!qword_100827B40)
  {
    result = swift_getWitnessTable(&unk_10062D834, &type metadata for WorkoutSplitEntity.SplitType);
    atomic_store(result, (unint64_t *)&qword_100827B40);
  }
  return result;
}

unint64_t sub_10020658C()
{
  unint64_t result;

  result = qword_100827B48;
  if (!qword_100827B48)
  {
    result = swift_getWitnessTable(&unk_10062D5B4, &type metadata for WorkoutSplitEntity.SplitType);
    atomic_store(result, (unint64_t *)&qword_100827B48);
  }
  return result;
}

uint64_t sub_1002065D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002063DC();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10020660C()
{
  return sub_100028384(&qword_100827B50, &qword_100827B58, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_100206638(_QWORD *a1@<X8>)
{
  *a1 = &off_100780BF0;
}

unint64_t sub_10020664C()
{
  unint64_t result;

  result = qword_100827B60;
  if (!qword_100827B60)
  {
    result = swift_getWitnessTable(&unk_10062D8C4, &type metadata for WorkoutSplitEntity);
    atomic_store(result, (unint64_t *)&qword_100827B60);
  }
  return result;
}

unint64_t sub_100206694()
{
  unint64_t result;

  result = qword_100827B68;
  if (!qword_100827B68)
  {
    result = swift_getWitnessTable(&unk_10062D8FC, &type metadata for WorkoutSplitEntity);
    atomic_store(result, (unint64_t *)&qword_100827B68);
  }
  return result;
}

unint64_t sub_1002066DC()
{
  unint64_t result;

  result = qword_100827B70;
  if (!qword_100827B70)
  {
    result = swift_getWitnessTable(&unk_10062D92C, &type metadata for WorkoutSplitEntity);
    atomic_store(result, (unint64_t *)&qword_100827B70);
  }
  return result;
}

unint64_t sub_100206724()
{
  unint64_t result;

  result = qword_100827B78;
  if (!qword_100827B78)
  {
    result = swift_getWitnessTable(&unk_10063EE50, &type metadata for WorkoutSplitEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100827B78);
  }
  return result;
}

uint64_t sub_100206768(uint64_t a1, uint64_t a2)
{
  return sub_100028404(&qword_100827B80, a2, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutSplitIdentifier, (uint64_t)&unk_10062DAEC);
}

uint64_t type metadata accessor for WorkoutSplitIdentifier()
{
  return objc_opt_self(_TtC10FitnessApp22WorkoutSplitIdentifier);
}

uint64_t sub_1002067B4()
{
  uint64_t v0;

  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_100008398(v0, qword_10086A1F0);
  sub_10003CE9C(v0, (uint64_t)qword_10086A1F0);
  return TypeDisplayRepresentation.init(stringLiteral:)(0x2074756F6B726F57, 0xED000074696C7053);
}

_QWORD *sub_10020681C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  Swift::String v20;
  _QWORD *result;
  Swift::String v22;
  void *object;
  void *v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  void *v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;

  v2 = v1;
  v4 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v33 - v18;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
  v35._countAndFlagsBits = 0x2074696C7053;
  v35._object = (void *)0xE600000000000000;
  result = EntityProperty.wrappedValue.getter(&v34);
  if (__OFADD__(v34, 1))
  {
    __break(1u);
  }
  else
  {
    ++v34;
    v22._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v33 = a1;
    object = v22._object;
    String.append(_:)(v22);
    swift_bridgeObjectRelease(object);
    v24 = v35._object;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v35);
    swift_bridgeObjectRelease(v24);
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v25);
    LocalizedStringResource.init(stringInterpolation:)(v19);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
    v27._countAndFlagsBits = (uint64_t)sub_100206AB4();
    v28 = v27._object;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v27);
    swift_bridgeObjectRelease(v28);
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v29);
    LocalizedStringResource.init(stringInterpolation:)(v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    v30 = *(_QWORD *)(v1 + 56);
    v31 = *(_QWORD *)(v2 + 64);
    v32 = swift_bridgeObjectRetain(v31);
    DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(v30, v31, 0, 0, v32);
    return (_QWORD *)DisplayRepresentation.init(title:subtitle:image:)(v13, v9, v6);
  }
  return result;
}

id sub_100206AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  double v18;
  void (*v19)(_QWORD *, uint64_t);
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  double v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  double v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void *v44;
  void *v45;
  Swift::String v46;
  Swift::String v47;
  void *v48;
  Swift::String v49;
  Swift::String v50;
  __n128 v51;
  uint64_t v53;
  void *v54;
  void (*v55)(_QWORD *, uint64_t);
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  id v63[2];

  v1 = v0;
  v2 = sub_100047110(&qword_100821E38);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100047110(&qword_100821E10);
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  __chkstk_darwin(v5);
  v62 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100821E40);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, 0, 0);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  AppDependency.wrappedValue.getter(v63);
  v17 = v63[0];
  v56 = *(_QWORD *)(v1 + 16);
  EntityProperty.wrappedValue.getter(v10);
  v18 = Measurement.value.getter(v7);
  v19 = *(void (**)(_QWORD *, uint64_t))(v8 + 8);
  v19(v10, v7);
  v20 = objc_msgSend(v17, "stringWithDuration:durationFormat:", 3, v18);

  v57 = (void *)v14;
  v59 = v16;
  v55 = v19;
  if (v20)
  {
    v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v22 = v21;

  }
  else
  {
    swift_bridgeObjectRetain(v16);
    v58 = v14;
    v22 = v16;
  }
  v24 = v60;
  v23 = v61;
  EntityProperty.wrappedValue.getter(v4);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48))(v4, 1, v23) == 1)
  {
    swift_bridgeObjectRelease(v59);
    sub_10001BE90((uint64_t)v4, &qword_100821E38);
    return (id)v58;
  }
  else
  {
    v54 = v22;
    (*(void (**)(char *, _QWORD *, uint64_t))(v24 + 32))(v62, v4, v23);
    v26 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
    v27 = Measurement.value.getter(v23);
    v28 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v26, v27);

    v29 = *(_QWORD *)(v1 + 40);
    v30 = FIUIPaceFormatForDistanceType(v29);
    AppDependency.wrappedValue.getter(v63);
    v31 = v63[0];
    v32 = v28;
    EntityProperty.wrappedValue.getter(v10);
    v33 = Measurement.value.getter(v7);
    v55(v10, v7);
    v34 = objc_msgSend(v31, "localizedPaceStringWithDistance:overDuration:paceFormat:distanceType:", v32, v30, v29, v33);

    if (v34)
    {
      v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v37 = v36;

      v38 = v57;
      v39 = v59;
    }
    else
    {
      v39 = v59;
      swift_bridgeObjectRetain(v59);
      v38 = v57;
      v35 = (uint64_t)v57;
      v37 = v39;
    }
    AppDependency.wrappedValue.getter(v63);
    v40 = v63[0];
    v41 = v61;
    v42 = objc_msgSend(v63[0], "localizedStringWithDistanceInMeters:distanceType:unitStyle:", v29, 1, Measurement.value.getter(v61));

    v43 = v60;
    if (v42)
    {
      v38 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v45 = v44;
      swift_bridgeObjectRelease(v39);

      v39 = v45;
    }
    v63[0] = v38;
    v63[1] = v39;
    v46._countAndFlagsBits = 548913696;
    v46._object = (void *)0xA400000000000000;
    String.append(_:)(v46);
    v47._countAndFlagsBits = v58;
    v48 = v54;
    v47._object = v54;
    String.append(_:)(v47);
    swift_bridgeObjectRelease(v48);
    v49._countAndFlagsBits = 548913696;
    v49._object = (void *)0xA400000000000000;
    String.append(_:)(v49);
    v50._countAndFlagsBits = v35;
    v50._object = v37;
    String.append(_:)(v50);

    v51 = swift_bridgeObjectRelease(v37);
    v25 = v63[0];
    (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v62, v41, v51);
  }
  return v25;
}

double sub_100206F4C@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  if (qword_10081D7B8 != -1)
    swift_once(&qword_10081D7B8, sub_100205D8C);
  v2 = qword_10086A1C8;
  v3 = unk_10086A1D0;
  *a1 = qword_10086A1C8;
  a1[1] = v3;
  swift_retain(v2);
  *(_QWORD *)&result = swift_retain(v3).n128_u64[0];
  return result;
}

unint64_t sub_100206FAC()
{
  unint64_t result;

  result = qword_100827B88;
  if (!qword_100827B88)
  {
    result = swift_getWitnessTable(&unk_10062D964, &type metadata for WorkoutSplitEntity);
    atomic_store(result, (unint64_t *)&qword_100827B88);
  }
  return result;
}

unint64_t sub_100206FF4()
{
  unint64_t result;

  result = qword_100827B90;
  if (!qword_100827B90)
  {
    result = swift_getWitnessTable(&unk_10062D98C, &type metadata for WorkoutSplitEntity);
    atomic_store(result, (unint64_t *)&qword_100827B90);
  }
  return result;
}

unint64_t sub_10020703C()
{
  unint64_t result;

  result = qword_100827B98;
  if (!qword_100827B98)
  {
    result = swift_getWitnessTable(&unk_10062D9B4, &type metadata for WorkoutSplitEntity);
    atomic_store(result, (unint64_t *)&qword_100827B98);
  }
  return result;
}

unint64_t sub_100207084()
{
  unint64_t result;

  result = qword_100827BA0;
  if (!qword_100827BA0)
  {
    result = swift_getWitnessTable(&unk_10062DA0C, &type metadata for WorkoutSplitEntity);
    atomic_store(result, (unint64_t *)&qword_100827BA0);
  }
  return result;
}

uint64_t sub_1002070C8(uint64_t a1, uint64_t a2)
{
  return sub_100028404(&qword_100827BA8, a2, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutSplitIdentifier, (uint64_t)&unk_10062DB1C);
}

uint64_t sub_1002070F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return swift_retain(v2);
}

uint64_t sub_100207100@<X0>(uint64_t a1@<X8>)
{
  return sub_10020711C(&qword_10081D7C8, (uint64_t)qword_10086A1F0, (uint64_t)sub_1002067B4, a1);
}

uint64_t sub_10020711C@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for TypeDisplayRepresentation(0);
  v7 = sub_10003CE9C(v6, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a4, v7, v6);
}

uint64_t sub_100207188()
{
  return sub_100028384(&qword_100827BB0, &qword_100827BB8, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_1002071B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10020920C();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1002071F0()
{
  unint64_t result;

  result = qword_100827BC0;
  if (!qword_100827BC0)
  {
    result = swift_getWitnessTable(&unk_10062DA3C, &type metadata for WorkoutSplitEntity);
    atomic_store(result, (unint64_t *)&qword_100827BC0);
  }
  return result;
}

uint64_t sub_100207238(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100207084();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_100207270(char *a1)
{
  sub_10038FF58(*a1);
}

void sub_10020727C()
{
  char *v0;

  sub_1003916EC(*v0);
}

void sub_100207284()
{
  __asm { BR              X10 }
}

uint64_t sub_1002072C4(uint64_t a1)
{
  String.hash(into:)(a1, 1701869940, 0xE400000000000000);
  return swift_bridgeObjectRelease(0xE400000000000000);
}

void sub_100207318(uint64_t a1)
{
  char *v1;

  sub_10039219C(a1, *v1);
}

unint64_t sub_100207320@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1002094D8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10020734C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100207380 + 4 * byte_10062D564[*v0]))();
}

void sub_100207380(_QWORD *a1@<X8>)
{
  *a1 = 1701869940;
  a1[1] = 0xE400000000000000;
}

void sub_100207394(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001006878B0;
}

void sub_1002073B4(_QWORD *a1@<X8>)
{
  *a1 = 0x7865646E69;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1002073CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100207400 + 4 * byte_10062D568[*v0]))(0x4974756F6B726F77, 0xE900000000000064);
}

uint64_t sub_100207400()
{
  return 1701869940;
}

unint64_t sub_100207410()
{
  return 0xD000000000000011;
}

uint64_t sub_10020742C()
{
  return 0x7865646E69;
}

unint64_t sub_100207440@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1002094D8(a1);
  *a2 = result;
  return result;
}

void sub_100207464(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100207470(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100209140();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100207498(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100209140();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002074C0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v1 = v0;
  v2 = *v0;
  v3 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7 = JSONEncoder.init()();
  v27 = v1;
  v9 = sub_100028404(&qword_100827C98, v8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutSplitIdentifier, (uint64_t)&unk_10062DA8C);
  v16 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v27, v2, v9);
  v18 = v17;
  static String.Encoding.utf8.getter();
  v19 = String.init(data:encoding:)(v16, v18, v5);
  if (v20)
  {
    v21 = v19;
    sub_10004D9E4(v16, v18);
  }
  else
  {
    v23 = sub_1002090FC();
    v24 = swift_allocError(&type metadata for WorkoutSplitIdentifier.JSONError, v23, 0, 0);
    swift_willThrow(v24);
    v25 = sub_10004D9E4(v16, v18);
    v10 = static os_log_type_t.error.getter(v25);
    v11 = (void *)HKLogActivity;
    v12 = sub_100047110((uint64_t *)&unk_100827460);
    v13 = swift_allocObject(v12, 112, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v13 + 56) = &type metadata for String;
    *(_QWORD *)(v13 + 64) = sub_100038CF8();
    *(_QWORD *)(v13 + 32) = 0xD000000000000016;
    *(_QWORD *)(v13 + 40) = 0x800000010068FD40;
    v14 = v11;
    v15 = _convertErrorToNSError(_:)(v24);
    *(_QWORD *)(v13 + 96) = sub_1002090C0();
    *(_QWORD *)(v13 + 104) = sub_100028404((unint64_t *)&qword_100828C70, 255, (uint64_t (*)(uint64_t))sub_1002090C0, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v13 + 72) = v15;
    os_log(_:dso:log:_:_:)(v10, &_mh_execute_header, v14, "%@ Error creating JSON data. error=%@", 37, 2, v13);

    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v24);
    v21 = 0;
  }
  swift_release(v7);
  return v21;
}

void sub_100207704(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  if (*(_BYTE *)(v2 + 32))
    v6 = 0x6D6F74737563;
  else
    v6 = 0x647261646E617473;
  if (*(_BYTE *)(v2 + 32))
    v7 = 0xE600000000000000;
  else
    v7 = 0xE800000000000000;
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  Hasher._combine(_:)(*(_QWORD *)(v2 + 40));
  Hasher._combine(_:)(*(_QWORD *)(v2 + 48));
}

uint64_t *sub_1002077A8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;

  v3 = v1;
  v5 = *v1;
  v19 = sub_100047110(&qword_100827CC0);
  v6 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100016804(a1, v9);
  v11 = sub_100209140();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WorkoutSplitIdentifier.Key, &type metadata for WorkoutSplitIdentifier.Key, v11, v9, v10);
  if (v2)
  {
    swift_deallocPartialClassInstance(v1, v5, 56, 7);
  }
  else
  {
    v12 = v6;
    BYTE1(v23) = 0;
    v13 = v19;
    v1[2] = KeyedDecodingContainer.decode(_:forKey:)((char *)&v23 + 1, v19);
    v1[3] = v14;
    v22 = 1;
    v15 = sub_1002091C8();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v23, &type metadata for WorkoutSplitEntity.SplitType, &v22, v13, &type metadata for WorkoutSplitEntity.SplitType, v15);
    *((_BYTE *)v1 + 32) = v23;
    v21 = 2;
    v1[5] = KeyedDecodingContainer.decode(_:forKey:)(&v21, v13);
    v20 = 3;
    v17 = KeyedDecodingContainer.decode(_:forKey:)(&v20, v13);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v13);
    v3[6] = v17;
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  return v3;
}

uint64_t sub_1002079A0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v3 = v1;
  v5 = sub_100047110(&qword_100827CA8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100016804(a1, v9);
  v11 = sub_100209140();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WorkoutSplitIdentifier.Key, &type metadata for WorkoutSplitIdentifier.Key, v11, v9, v10);
  v12 = *(_QWORD *)(v3 + 16);
  v13 = *(_QWORD *)(v3 + 24);
  v23 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v23, v5);
  if (!v2)
  {
    v22 = *(_BYTE *)(v3 + 32);
    v21 = 1;
    v14 = sub_100209184();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v21, v5, &type metadata for WorkoutSplitEntity.SplitType, v14);
    v15 = *(_QWORD *)(v3 + 40);
    v20 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v15, &v20, v5);
    v16 = *(_QWORD *)(v3 + 48);
    v19 = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v16, &v19, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100207B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v6 = type metadata accessor for String.Encoding(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String.Encoding.utf8.getter(v8);
  v11 = String.data(using:allowLossyConversion:)(v10, 0, a1, a2);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if (v13 >> 60 == 15)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010068FC90, "FitnessApp/WorkoutSplitEntity.swift", 35, 2, 206, 0);
    __break(1u);
  }
  else
  {
    v14 = type metadata accessor for JSONDecoder(0);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    v15 = JSONDecoder.init()();
    v17 = sub_100028404(&qword_100827C90, v16, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutSplitIdentifier, (uint64_t)&unk_10062DA64);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v21, v3, v11, v13, v3, v17);
    swift_release(v15);
    sub_1000DC774(v11, v13);
    v18 = v21;
    result = swift_dynamicCastClass(v21, v3);
    if (!result)
    {
      swift_release(v18);
      return 0;
    }
  }
  return result;
}

Swift::Int sub_100207DD0()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  String.hash(into:)(v1, 0x676E69646F636E65, 0xED0000726F727245);
  return Hasher._finalize()();
}

uint64_t sub_100207E2C(uint64_t a1)
{
  return String.hash(into:)(a1, 0x676E69646F636E65, 0xED0000726F727245);
}

Swift::Int sub_100207E50(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  String.hash(into:)(v2, 0x676E69646F636E65, 0xED0000726F727245);
  return Hasher._finalize()();
}

uint64_t sub_100207EA8@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100780C98, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_100207EF8(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "encodingError");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_100207F20()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 56, 7);
}

Swift::Int sub_100207F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v7, v2, v3);
  swift_bridgeObjectRelease(v3);
  if (*(_BYTE *)(v1 + 32))
    v4 = 0x6D6F74737563;
  else
    v4 = 0x647261646E617473;
  if (*(_BYTE *)(v1 + 32))
    v5 = 0xE600000000000000;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  Hasher._combine(_:)(*(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(*(_QWORD *)(v1 + 48));
  return Hasher._finalize()();
}

uint64_t *sub_10020800C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *result;

  v6 = swift_allocObject(v2, 56, 7);
  result = sub_1002077A8(a1);
  if (!v3)
    *a2 = v6;
  return result;
}

uint64_t sub_100208060(_QWORD *a1)
{
  return sub_1002079A0(a1);
}

uint64_t sub_100208080@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1002074C0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1002080A8()
{
  return sub_1002074C0();
}

uint64_t sub_1002080C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_100207B1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002080EC(uint64_t a1, uint64_t a2)
{
  return sub_100028404(&qword_100827BC8, a2, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutSplitIdentifier, (uint64_t)&unk_10062DB5C);
}

Swift::Int sub_100208118()
{
  return sub_100207F44();
}

void sub_100208138(uint64_t a1)
{
  sub_100207704(a1);
}

Swift::Int sub_100208158(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v4);
  if (*(_BYTE *)(v2 + 32))
    v5 = 0x6D6F74737563;
  else
    v5 = 0x647261646E617473;
  if (*(_BYTE *)(v2 + 32))
    v6 = 0xE600000000000000;
  else
    v6 = 0xE800000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  Hasher._combine(_:)(*(_QWORD *)(v2 + 40));
  Hasher._combine(_:)(*(_QWORD *)(v2 + 48));
  return Hasher._finalize()();
}

BOOL sub_100208218(uint64_t *a1, uint64_t *a2)
{
  return sub_1002085E4(*a1, *a2);
}

uint64_t destroy for WorkoutSplitEntity(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[6]);
  return swift_bridgeObjectRelease(a1[8]);
}

uint64_t *initializeWithCopy for WorkoutSplitEntity(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v8 = a2[4];
  v7 = a2[5];
  a1[4] = v8;
  a1[5] = v7;
  v10 = a2[6];
  v9 = a2[7];
  a1[6] = v10;
  a1[7] = v9;
  v11 = a2[8];
  a1[8] = v11;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v8);
  swift_retain(v10);
  swift_bridgeObjectRetain(v11);
  return a1;
}

uint64_t *assignWithCopy for WorkoutSplitEntity(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[4];
  v13 = a1[4];
  a1[4] = v12;
  swift_retain(v12);
  swift_release(v13);
  a1[5] = a2[5];
  v14 = a2[6];
  v15 = a1[6];
  a1[6] = v14;
  swift_retain(v14);
  swift_release(v15);
  a1[7] = a2[7];
  v16 = a2[8];
  v17 = a1[8];
  a1[8] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  return a1;
}

_QWORD *assignWithTake for WorkoutSplitEntity(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = a1[4];
  a1[4] = *(_QWORD *)(a2 + 32);
  swift_release(v6);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = a1[6];
  a1[5] = *(_QWORD *)(a2 + 40);
  a1[6] = v7;
  swift_release(v8);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = a1[8];
  a1[7] = *(_QWORD *)(a2 + 56);
  a1[8] = v9;
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrendsCardFactory(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrendsCardFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutSplitEntity()
{
  return &type metadata for WorkoutSplitEntity;
}

uint64_t storeEnumTagSinglePayload for WorkoutSplitEntity.SplitType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100208564 + 4 * byte_10062D571[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100208598 + 4 * byte_10062D56C[v4]))();
}

uint64_t sub_100208598(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002085A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002085A8);
  return result;
}

uint64_t sub_1002085B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002085BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002085C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002085C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutSplitEntity.SplitType()
{
  return &type metadata for WorkoutSplitEntity.SplitType;
}

BOOL sub_1002085E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  _BOOL8 result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v16;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = v4 == v6 && v5 == v7;
  if (v8 || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0), result = 0, (v9 & 1) != 0))
  {
    if (*(_BYTE *)(a1 + 32))
      v11 = 0x6D6F74737563;
    else
      v11 = 0x647261646E617473;
    if (*(_BYTE *)(a1 + 32))
      v12 = 0xE600000000000000;
    else
      v12 = 0xE800000000000000;
    if (*(_BYTE *)(a2 + 32))
      v13 = 0x6D6F74737563;
    else
      v13 = 0x647261646E617473;
    if (*(_BYTE *)(a2 + 32))
      v14 = 0xE600000000000000;
    else
      v14 = 0xE800000000000000;
    if (v11 == v13 && v12 == v14)
    {
      swift_bridgeObjectRelease_n(v12, 2);
    }
    else
    {
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v13, v14, 0);
      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease(v14);
      result = 0;
      if ((v16 & 1) == 0)
        return result;
    }
    return *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48);
  }
  return result;
}

unint64_t sub_1002086F4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double (*v16)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v17;
  __n128 v18;
  uint64_t v20;

  v0 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v0);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100827CD8);
  v11 = *(_QWORD *)(sub_100047110(&qword_100827CE0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v10, v14 + 2 * v12, v13 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100620BC0;
  *(_BYTE *)(v15 + v14) = 0;
  LocalizedStringResource.init(stringLiteral:)(0x647261646E617453, 0xEE0074696C705320);
  v16 = *(double (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v17.n128_f64[0] = v16(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000013, 0x800000010068FC40, 0, 0, v17);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  *(_BYTE *)(v15 + v14 + v12) = 1;
  LocalizedStringResource.init(stringLiteral:)(0x53206D6F74737543, 0xEC00000074696C70);
  v18.n128_f64[0] = v16(v5, 1, 1, v6);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000018, 0x800000010068FC20, 0, 0, v18);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  return sub_100436078(v15);
}

void sub_10020894C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, int a8@<W7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, __n128);
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _OWORD v98[2];
  uint64_t v99;

  LODWORD(v94) = a8;
  v88 = a7;
  v91 = a9;
  v92 = a5;
  v95 = a4;
  v96 = a3;
  v97 = a2;
  v83 = a6;
  v84 = a10;
  v11 = sub_100047110(&qword_100821E18);
  v12 = __chkstk_darwin(v11);
  v90 = (uint64_t)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v89 = (char *)&v78 - v14;
  v15 = sub_100047110(&qword_100821E38);
  v16 = __chkstk_darwin(v15);
  v87 = (uint64_t)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v86 = (char *)&v78 - v18;
  v19 = sub_100047110(&qword_100821E40);
  v81 = *(_QWORD *)(v19 - 8);
  v20 = __chkstk_darwin(v19);
  v85 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v80 = (char *)&v78 - v22;
  v23 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_100821E48);
  LocalizedStringResource.init(stringLiteral:)(0x7865646E49, 0xE500000000000000);
  v26 = EntityProperty<>.init(title:)(v25);
  sub_100047110(&qword_100821E50);
  v27 = v26;
  swift_retain(v26);
  LocalizedStringResource.init(stringLiteral:)(0x6E6F697461727544, 0xE800000000000000);
  v28 = EntityProperty<>.init(title:)(v25);
  sub_100047110(&qword_100821E58);
  swift_retain(v28);
  LocalizedStringResource.init(stringLiteral:)(0x65636E6174736944, 0xE800000000000000);
  v29 = EntityProperty<>.init(title:)(v25);
  sub_100047110(&qword_100821E80);
  swift_retain(v29);
  LocalizedStringResource.init(stringLiteral:)(0x2065676172657641, 0xED00006465657053);
  v30 = EntityProperty<>.init(title:)(v25);
  sub_100047110(&qword_1008201E8);
  type metadata accessor for AppDependencyManager(0);
  memset(v98, 0, sizeof(v98));
  v99 = 0;
  swift_retain(v30);
  v32 = static AppDependencyManager.shared.getter(v31);
  v33 = AppDependency.__allocating_init(key:manager:)(v98, v32);
  v34 = type metadata accessor for WorkoutSplitIdentifier();
  v35 = swift_allocObject(v34, 56, 7);
  v36 = v88;
  *(_QWORD *)(v35 + 16) = v83;
  *(_QWORD *)(v35 + 24) = v36;
  v37 = (v94 & 1) == 0;
  *(_BYTE *)(v35 + 32) = v94 & 1;
  v38 = a1;
  *(_QWORD *)(v35 + 40) = v84;
  *(_QWORD *)(v35 + 48) = a1;
  v39 = 0xD000000000000013;
  if (!v37)
    v39 = 0xD000000000000018;
  v88 = v39;
  if (v37)
    v40 = 0x800000010068FC40;
  else
    v40 = 0x800000010068FC20;
  *(_QWORD *)&v98[0] = v38;
  v79 = v33;
  swift_retain_n(v33, 2);
  swift_retain(v35);
  v41 = v27;
  swift_retain(v27);
  swift_retain(v28);
  v42 = v29;
  swift_retain(v29);
  v78 = v30;
  swift_retain(v30);
  swift_bridgeObjectRetain(v40);
  EntityProperty.wrappedValue.setter(v98);
  swift_bridgeObjectRelease(v40);
  swift_release(v33);
  swift_release(v30);
  swift_release(v29);
  v43 = v28;
  swift_release(v28);
  v44 = v41;
  v93 = v41;
  v45 = swift_release(v41);
  v46 = v81;
  v47 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v81 + 16);
  v48 = v80;
  v47(v80, v97, v19, v45);
  v49 = v85;
  v82 = v19;
  ((void (*)(char *, char *, uint64_t))v47)(v85, v48, v19);
  swift_retain(v35);
  swift_retain(v44);
  v50 = v43;
  swift_retain(v43);
  swift_retain(v42);
  v51 = v78;
  swift_retain(v78);
  v52 = v79;
  swift_retain(v79);
  v94 = v40;
  swift_bridgeObjectRetain(v40);
  v53 = v49;
  v54 = v50;
  EntityProperty.wrappedValue.setter(v53);
  v85 = *(char **)(v46 + 8);
  ((void (*)(char *, uint64_t))v85)(v48, v19);
  swift_bridgeObjectRelease(v40);
  v55 = v52;
  swift_release(v52);
  swift_release(v51);
  v56 = v42;
  swift_release(v42);
  swift_release(v50);
  v57 = v93;
  swift_release(v93);
  swift_release(v35);
  v58 = sub_100047110(&qword_100821E10);
  v59 = *(_QWORD *)(v58 - 8);
  v83 = v58;
  v84 = v59;
  v60 = (uint64_t)v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v86, v96, v58);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v60, 0, 1, v58);
  v61 = v87;
  sub_100021CC0(v60, v87, &qword_100821E38);
  swift_retain(v35);
  swift_retain(v57);
  swift_retain(v54);
  swift_retain(v56);
  v62 = v51;
  swift_retain(v51);
  v63 = v55;
  swift_retain(v55);
  v64 = v94;
  swift_bridgeObjectRetain(v94);
  EntityProperty.wrappedValue.setter(v61);
  sub_10001BE90(v60, &qword_100821E38);
  swift_bridgeObjectRelease(v64);
  v65 = v63;
  swift_release(v63);
  swift_release(v62);
  swift_release(v56);
  swift_release(v54);
  swift_release(v57);
  swift_release(v35);
  v66 = sub_100047110(&qword_100821EB0);
  v67 = *(_QWORD *)(v66 - 8);
  v68 = (uint64_t)v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v89, v95, v66);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v67 + 56))(v68, 0, 1, v66);
  v69 = v90;
  sub_100021CC0(v68, v90, &qword_100821E18);
  swift_retain(v35);
  swift_retain(v57);
  swift_retain(v54);
  swift_retain(v56);
  swift_retain(v62);
  v70 = v65;
  swift_retain(v65);
  v71 = v94;
  swift_bridgeObjectRetain(v94);
  EntityProperty.wrappedValue.setter(v69);
  sub_10001BE90(v68, &qword_100821E18);
  swift_bridgeObjectRelease(v71);
  v72 = v70;
  swift_release(v70);
  swift_release(v62);
  swift_release(v56);
  swift_release(v54);
  v73 = v93;
  swift_release(v93);
  v74 = swift_release(v35);
  (*(void (**)(uint64_t, uint64_t, __n128))(v67 + 8))(v95, v66, v74);
  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v96, v83);
  ((void (*)(uint64_t, uint64_t))v85)(v97, v82);
  swift_release(v72);
  swift_release(v62);
  swift_release(v56);
  swift_release(v54);
  swift_release(v73);
  swift_release(v35);
  v76 = v91;
  v75 = v92;
  *v91 = v35;
  v76[1] = v73;
  v76[2] = v54;
  v76[3] = v56;
  v76[4] = v62;
  v76[5] = v75;
  v77 = v88;
  v76[6] = v72;
  v76[7] = v77;
  v76[8] = v71;
}

unint64_t sub_1002090C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008274A0;
  if (!qword_1008274A0)
  {
    v1 = objc_opt_self(NSError);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1008274A0);
  }
  return result;
}

unint64_t sub_1002090FC()
{
  unint64_t result;

  result = qword_100827CA0;
  if (!qword_100827CA0)
  {
    result = swift_getWitnessTable(&unk_10062DDEC, &type metadata for WorkoutSplitIdentifier.JSONError);
    atomic_store(result, (unint64_t *)&qword_100827CA0);
  }
  return result;
}

unint64_t sub_100209140()
{
  unint64_t result;

  result = qword_100827CB0;
  if (!qword_100827CB0)
  {
    result = swift_getWitnessTable(&unk_10062DD9C, &type metadata for WorkoutSplitIdentifier.Key);
    atomic_store(result, (unint64_t *)&qword_100827CB0);
  }
  return result;
}

unint64_t sub_100209184()
{
  unint64_t result;

  result = qword_100827CB8;
  if (!qword_100827CB8)
  {
    result = swift_getWitnessTable(&unk_10062D694, &type metadata for WorkoutSplitEntity.SplitType);
    atomic_store(result, (unint64_t *)&qword_100827CB8);
  }
  return result;
}

unint64_t sub_1002091C8()
{
  unint64_t result;

  result = qword_100827CC8;
  if (!qword_100827CC8)
  {
    result = swift_getWitnessTable(&unk_10062D66C, &type metadata for WorkoutSplitEntity.SplitType);
    atomic_store(result, (unint64_t *)&qword_100827CC8);
  }
  return result;
}

unint64_t sub_10020920C()
{
  unint64_t result;

  result = qword_100827CD0;
  if (!qword_100827CD0)
  {
    result = swift_getWitnessTable(&unk_10062D86C, &type metadata for WorkoutSplitEntity);
    atomic_store(result, (unint64_t *)&qword_100827CD0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WorkoutSplitIdentifier.Key(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10020929C + 4 * byte_10062D57B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1002092D0 + 4 * byte_10062D576[v4]))();
}

uint64_t sub_1002092D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002092D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002092E0);
  return result;
}

uint64_t sub_1002092EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002092F4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1002092F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100209300(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutSplitIdentifier.Key()
{
  return &type metadata for WorkoutSplitIdentifier.Key;
}

uint64_t storeEnumTagSinglePayload for WorkoutSplitIdentifier.JSONError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10020935C + 4 * byte_10062D580[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10020937C + 4 * byte_10062D585[v4]))();
}

_BYTE *sub_10020935C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10020937C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100209384(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10020938C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100209394(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10020939C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutSplitIdentifier.JSONError()
{
  return &type metadata for WorkoutSplitIdentifier.JSONError;
}

unint64_t sub_1002093BC()
{
  unint64_t result;

  result = qword_100827CE8;
  if (!qword_100827CE8)
  {
    result = swift_getWitnessTable(&unk_10062DC84, &type metadata for WorkoutSplitIdentifier.JSONError);
    atomic_store(result, (unint64_t *)&qword_100827CE8);
  }
  return result;
}

unint64_t sub_100209404()
{
  unint64_t result;

  result = qword_100827CF0;
  if (!qword_100827CF0)
  {
    result = swift_getWitnessTable(&unk_10062DD74, &type metadata for WorkoutSplitIdentifier.Key);
    atomic_store(result, (unint64_t *)&qword_100827CF0);
  }
  return result;
}

unint64_t sub_10020944C()
{
  unint64_t result;

  result = qword_100827CF8;
  if (!qword_100827CF8)
  {
    result = swift_getWitnessTable(&unk_10062DCAC, &type metadata for WorkoutSplitIdentifier.Key);
    atomic_store(result, (unint64_t *)&qword_100827CF8);
  }
  return result;
}

unint64_t sub_100209494()
{
  unint64_t result;

  result = qword_100827D00;
  if (!qword_100827D00)
  {
    result = swift_getWitnessTable(&unk_10062DCD4, &type metadata for WorkoutSplitIdentifier.Key);
    atomic_store(result, (unint64_t *)&qword_100827D00);
  }
  return result;
}

unint64_t sub_1002094D8(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100780C18, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

uint64_t sub_100209520()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 17, 7);
}

uint64_t type metadata accessor for RingCoordinator()
{
  return objc_opt_self(_TtC10FitnessApp15RingCoordinator);
}

void destroy for ActivityRingsViewRepresentable(uint64_t a1)
{

  if (*(_QWORD *)(a1 + 32))
    swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t initializeWithCopy for ActivityRingsViewRepresentable(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  _OWORD *v6;
  id v7;
  uint64_t v8;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  v6 = (_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 32);
  v7 = v4;
  if (v5)
  {
    v8 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v5;
    *(_QWORD *)(a1 + 40) = v8;
    swift_retain(v8);
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v6;
  }
  return a1;
}

uint64_t assignWithCopy for ActivityRingsViewRepresentable(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(_QWORD *)(a1 + 32);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  v8 = *(_QWORD *)(a2 + 32);
  if (!v7)
  {
    if (v8)
    {
      v11 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v8;
      *(_QWORD *)(a1 + 40) = v11;
      swift_retain(v11);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v8)
  {
    swift_release(*(_QWORD *)(a1 + 40));
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  swift_retain(v9);
  swift_release(v10);
  return a1;
}

uint64_t assignWithTake for ActivityRingsViewRepresentable(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 32);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_WORD *)(a1 + 27) = *(_WORD *)(a2 + 27);
  if (!v6)
  {
    if (v5)
    {
      v9 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v5;
      *(_QWORD *)(a1 + 40) = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v5)
  {
    swift_release(*(_QWORD *)(a1 + 40));
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v7;
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityRingsViewRepresentable(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityRingsViewRepresentable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityRingsViewRepresentable()
{
  return &type metadata for ActivityRingsViewRepresentable;
}

void sub_100209880(void *a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  SEL *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  char v22;
  char v23;

  v3 = v2;
  v6 = sub_100047110(&qword_100827DC8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100045AD4((uint64_t)(v3 + 28), (uint64_t)&v22, &qword_10083B4F0);
  sub_100045AD4((uint64_t)&v22, (uint64_t)&v23, &qword_10083B4F0);
  v10 = v23;
  if (v23 == 2)
  {
    UIViewRepresentableContext.coordinator.getter(&v21, v6);
    v11 = *(_BYTE *)(v21 + 16);
    swift_release(v21);
    v12 = v11 & v3[25];
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    if ((v10 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v12 = 1;
    }
    else
    {
      UIViewRepresentableContext.coordinator.getter(&v21, v6);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v13 = *(_BYTE *)(v21 + 16);
      swift_release(v21);
      if ((v13 & 1) != 0)
        v12 = 0;
      else
        v12 = v3[25];
    }
  }
  sub_100209AB8(a1, v12 & 1);
  UIViewRepresentableContext.coordinator.getter(&v21, v6);
  v14 = v21;
  *(_BYTE *)(v21 + 16) = 0;
  swift_release(v14);
  if (v3[27])
  {
    v15 = (SEL *)(v3[27] == 1 ? &selRef_defaultSpriteSheet : &selRef_wheelchairSpriteSheet);
    v16 = objc_msgSend((id)objc_opt_self(ARUISpriteSheetFactory), *v15);
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(a1, "ringGroup");
      if ((v3[8] & 1) != 0)
        v19 = 0;
      else
        v19 = v17;
      objc_msgSend(v18, "setSpriteSheet:", v19);

      v20 = objc_msgSend(a1, "ringGroup");
      objc_msgSend(v20, "playSpriteAnimation");

    }
  }
}

void sub_100209AB8(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  float v6;
  int v7;
  id v8;
  id v9;
  void *v10;
  float v11;
  float v12;
  id v13;
  id v14;
  char **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  __n128 v20;
  id v21;
  id v22;
  double v23;
  double v24;
  double v25;
  id v26;
  void (*v27)(void);
  uint64_t v28;
  id v29;

  v3 = v2;
  v6 = ARUIRingPercentageValueNoRing;
  v7 = *(unsigned __int8 *)(v3 + 24);
  if (v7 == 2)
  {
    sub_100045AD4(v3, (uint64_t)&v28, &qword_100827DD0);
    sub_100045AD4((uint64_t)&v28, (uint64_t)&v29, &qword_100827DD0);
    if (v29)
    {
      v8 = objc_msgSend(v29, "_isStandalonePhoneSummary");
    }
    else
    {
      v9 = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
      if (!v9)
      {
        __break(1u);
        return;
      }
      v10 = v9;
      v8 = objc_msgSend(v9, "isStandalonePhoneFitnessMode");

    }
  }
  else
  {
    v8 = (id)(v7 & 1);
  }
  v11 = v6;
  v12 = v6;
  if (*(_QWORD *)v3)
  {
    v13 = *(id *)v3;
    v14 = objc_msgSend(v13, "activityMoveMode");
    v15 = &selRef__moveMinutesCompletionPercentage;
    if (v14 != (id)2)
      v15 = &selRef__activeEnergyCompletionPercentage;
    objc_msgSend(v13, *v15);
    v12 = v16;
    objc_msgSend(v13, "_exerciseTimeCompletionPercentage");
    v11 = v17;
    objc_msgSend(v13, "_standHoursCompletionPercentage");
    v19 = v18;

    v6 = v19;
  }

  v21 = objc_msgSend(a1, "ringGroup");
  objc_msgSend(v21, "setIsStandalonePhoneFitnessMode:animated:", v8, 0);

  v22 = objc_msgSend(a1, "ringGroup");
  *(float *)&v23 = v12;
  *(float *)&v24 = v11;
  *(float *)&v25 = v6;
  objc_msgSend(v22, "setActiveEnergyPercentage:exerciseMinutesPercentage:standHoursPercentage:animated:completion:", a2 & 1, 0, v23, v24, v25);

  v26 = objc_msgSend(a1, "ringGroup");
  objc_msgSend(v26, "setIsPaused:animated:", *(unsigned __int8 *)(v3 + 8), *(unsigned __int8 *)(v3 + 26));

  v27 = *(void (**)(void))(v3 + 32);
  if (v27)
    v27();
}

void sub_100209CFC(void *a1, uint64_t a2)
{
  sub_100209880(a1, a2);
}

uint64_t sub_100209D34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for RingCoordinator();
  result = swift_allocObject(v2, 17, 7);
  *(_BYTE *)(result + 16) = 1;
  *a1 = result;
  return result;
}

uint64_t sub_100209D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100209F7C();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100209DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100209F7C();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100209E0C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100209F7C();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

unint64_t sub_100209E34()
{
  unint64_t result;

  result = qword_100827DC0;
  if (!qword_100827DC0)
  {
    result = swift_getWitnessTable(&unk_10062DE90, &type metadata for ActivityRingsViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_100827DC0);
  }
  return result;
}

uint64_t sub_100209E78()
{
  id v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(ARUIRingGroup), "activityRingGroupForRingType:", 3);
  v1 = objc_msgSend(v0, "forCompanion");

  if (qword_10081DE00 != -1)
    swift_once(&qword_10081DE00, sub_100495AA4);
  v2 = objc_msgSend(objc_allocWithZone((Class)ARUIRingsView), "initWithRingGroup:renderer:", v1, qword_10086ABF0);

  v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v2, "setBackgroundColor:", v3);

  v4 = ARUIRingsView.nilRings(animated:)(0);
  return v4;
}

unint64_t sub_100209F7C()
{
  unint64_t result;

  result = qword_100827DD8;
  if (!qword_100827DD8)
  {
    result = swift_getWitnessTable(&unk_10062DEE0, &type metadata for ActivityRingsViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_100827DD8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivityRingsViewRepresentable.SpriteSheetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10020A00C + 4 * byte_10062DE35[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10020A040 + 4 * byte_10062DE30[v4]))();
}

uint64_t sub_10020A040(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10020A048(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10020A050);
  return result;
}

uint64_t sub_10020A05C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10020A064);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10020A068(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10020A070(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityRingsViewRepresentable.SpriteSheetType()
{
  return &type metadata for ActivityRingsViewRepresentable.SpriteSheetType;
}

unint64_t sub_10020A090()
{
  unint64_t result;

  result = qword_100827DE0;
  if (!qword_100827DE0)
  {
    result = swift_getWitnessTable(&unk_10062DFC0, &type metadata for ActivityRingsViewRepresentable.SpriteSheetType);
    atomic_store(result, (unint64_t *)&qword_100827DE0);
  }
  return result;
}

uint64_t sub_10020A0D4()
{
  uint64_t v0;

  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 56, 7);
}

char *sub_10020A0F8(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  char *v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    *((_QWORD *)a1 + 1) = v8;
    v9 = a3[6];
    v10 = &a1[v9];
    v11 = (uint64_t)a2 + v9;
    v12 = type metadata accessor for AttributedString(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
    v15 = v4;
    v16 = swift_retain(v8);
    v14(v10, v11, v12, v16);
    ((void (*)(char *, char *, uint64_t))v14)(&v7[a3[7]], (char *)a2 + a3[7], v12);
    v17 = a3[8];
    v18 = &v7[v17];
    v19 = (char *)a2 + v17;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))((char *)a2 + v17, 1, v12))
    {
      v20 = sub_100047110((uint64_t *)&unk_10082EDF0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v14)(v18, v19, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
    v21 = a3[9];
    v22 = a3[10];
    v23 = *(char **)((char *)a2 + v21);
    *(_QWORD *)&v7[v21] = v23;
    v7[v22] = *((_BYTE *)a2 + v22);
    v24 = a3[11];
    v25 = &v7[v24];
    v26 = (char **)((char *)a2 + v24);
    v27 = v26[1];
    *(_QWORD *)v25 = *v26;
    *((_QWORD *)v25 + 1) = v27;
    v28 = v23;
    swift_bridgeObjectRetain(v27);
  }
  return v7;
}

_QWORD *sub_10020A26C(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  id v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for AttributedString(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v14 = v7;
  v15 = swift_retain(v6);
  v13(v9, v10, v11, v15);
  ((void (*)(char *, uint64_t, uint64_t))v13)((char *)a1 + a3[7], a2 + a3[7], v11);
  v16 = a3[8];
  v17 = (char *)a1 + v16;
  v18 = (const void *)(a2 + v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v16, 1, v11))
  {
    v19 = sub_100047110((uint64_t *)&unk_10082EDF0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, const void *, uint64_t))v13)(v17, v18, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
  }
  v20 = a3[9];
  v21 = a3[10];
  v22 = *(void **)(a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = v22;
  *((_BYTE *)a1 + v21) = *(_BYTE *)(a2 + v21);
  v23 = a3[11];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = v22;
  swift_bridgeObjectRetain(v26);
  return a1;
}

uint64_t sub_10020A3B0(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void *, const void *, uint64_t);
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t (*v20)(const void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v10;
  swift_retain(v10);
  swift_release(v9);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = type metadata accessor for AttributedString(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(void *, const void *, uint64_t))(v15 + 24);
  v16(v12, v13, v14);
  v16((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v14);
  v17 = a3[8];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  v21 = v20((const void *)(a1 + v17), 1, v14);
  v22 = v20(v19, 1, v14);
  if (!v21)
  {
    if (!v22)
    {
      v16(v18, v19, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v18, v14);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v23 = sub_100047110((uint64_t *)&unk_10082EDF0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v18, v19, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
LABEL_7:
  v24 = a3[9];
  v25 = *(void **)(a1 + v24);
  v26 = *(void **)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v26;
  v27 = v26;

  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v28 = a3[11];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v31 = v30[1];
  v32 = v29[1];
  v29[1] = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease(v32);
  return a1;
}

char *sub_10020A56C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for AttributedString(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  v12 = a3[8];
  v13 = &a1[v12];
  v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    v15 = sub_100047110((uint64_t *)&unk_10082EDF0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v16 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  a1[v16] = a2[v16];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  return a1;
}

uint64_t sub_10020A688(uint64_t a1, char *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, char *, uint64_t);
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  swift_release(v7);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = &a2[v8];
  v11 = type metadata accessor for AttributedString(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 40);
  v13(v9, v10, v11);
  v13(a1 + a3[7], &a2[a3[7]], v11);
  v14 = a3[8];
  v15 = (void *)(a1 + v14);
  v16 = &a2[v14];
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  v18 = v17(a1 + v14, 1, v11);
  v19 = v17((uint64_t)v16, 1, v11);
  if (!v18)
  {
    if (!v19)
    {
      v13((uint64_t)v15, v16, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v15, v11);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = sub_100047110((uint64_t *)&unk_10082EDF0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v15, v16, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
LABEL_7:
  v21 = a3[9];
  v22 = *(void **)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)&a2[v21];

  v23 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = a2[a3[10]];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)&a2[v23];
  v27 = *v25;
  v26 = v25[1];
  v28 = v24[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease(v28);
  return a1;
}

uint64_t sub_10020A820(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for AttributedString(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_100047110((uint64_t *)&unk_10082EDF0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

char *sub_10020A8C4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for AttributedString(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_100047110((uint64_t *)&unk_10082EDF0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_10020A964@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  void *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  if (objc_msgSend(*v1, "isMe"))
  {
    if (qword_10081D7D0 != -1)
      swift_once(&qword_10081D7D0, sub_10020AB28);
    v11 = sub_10003CE9C(v3, (uint64_t)qword_100827E98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v11, v3);
  }
  else
  {
    v13 = objc_msgSend(v10, "UUID");
    if (v13)
    {
      v14 = v13;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v13);

      v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v15(v9, v6, v3);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3);
      if ((_DWORD)result != 1)
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v15)(a1, v9, v3);
    }
    else
    {
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10020AB28()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for UUID(0);
  sub_100008398(v0, qword_100827E98);
  v1 = sub_10003CE9C(v0, (uint64_t)qword_100827E98);
  return UUID.init()(v1);
}

void *sub_10020AB74()
{
  return &protocol witness table for Double;
}

char *sub_10020AB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  id v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *result;
  NSString v12;
  id v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;
  objc_super v27;

  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_activitySummaryProvider] = 0;
  v6 = objc_allocWithZone((Class)type metadata accessor for PaletteViewControllerSizingDelegate());
  v7 = v3;
  v8 = (char *)objc_msgSend(v6, "init");
  v9 = type metadata accessor for ActivitySharingFriendDetailPaletteDateProvider();
  v10 = swift_allocObject(v9, 24, 7);
  *(_QWORD *)(v10 + 16) = objc_msgSend(objc_allocWithZone((Class)NSDate), "init");
  result = (char *)objc_msgSend(objc_allocWithZone((Class)PaletteViewController), "initWithSizingDelegate:dateProvider:", v8, v10);
  if (result)
  {
    *(_QWORD *)&v7[OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_paletteViewController] = result;

    if (a3)
    {
      v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a3);
    }
    else
    {
      v12 = 0;
    }
    v27.receiver = v7;
    v27.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailPaletteTableViewCell();
    v13 = objc_msgSendSuper2(&v27, "initWithStyle:reuseIdentifier:", a1, v12);

    v14 = (char *)v13;
    v15 = objc_msgSend(v14, "contentView");
    v16 = *(void **)&v8[OBJC_IVAR___CHPaletteViewControllerSizingDelegate_view];
    *(_QWORD *)&v8[OBJC_IVAR___CHPaletteViewControllerSizingDelegate_view] = v15;

    v17 = objc_msgSend(v14, "contentView");
    result = (char *)objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_paletteViewController], "view");
    if (result)
    {
      v18 = result;
      objc_msgSend(v17, "addSubview:", result);

      v19 = (void *)objc_opt_self(NSLayoutConstraint);
      v20 = sub_100047110((uint64_t *)&unk_100828340);
      v21 = swift_allocObject(v20, 40, 7);
      *(_OWORD *)(v21 + 16) = xmmword_100623630;
      v22 = objc_msgSend(v14, "contentView");
      v23 = objc_msgSend(v22, "heightAnchor");

      v24 = objc_msgSend(v23, "constraintEqualToConstant:", 70.0);
      *(_QWORD *)(v21 + 32) = v24;
      specialized Array._endMutation()(v25);
      sub_100039898();
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v19, "activateConstraints:", isa, swift_bridgeObjectRelease(v21).n128_f64[0]);

      swift_release(v10);
      return v14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_10020AE80(void *a1, void *a2)
{
  uint64_t v2;
  objc_class *v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  objc_super v14;

  v5 = (objc_class *)type metadata accessor for ActivitySharingFriendDetailActivitySummaryProvider();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider_friend] = a1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider_pauseRingsCoordinator] = a2;
  v14.receiver = v6;
  v14.super_class = v5;
  v7 = a1;
  v8 = a2;
  v9 = objc_msgSendSuper2(&v14, "init");
  v10 = OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_activitySummaryProvider;
  v11 = *(void **)(v2
                 + OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_activitySummaryProvider);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_activitySummaryProvider) = v9;

  if (objc_msgSend(v7, "isMe", v14.receiver, v14.super_class))
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_paletteViewController), "setPauseRingsCoordinator:", v8);
  v12 = *(void **)(v2
                 + OBJC_IVAR____TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell_paletteViewController);
  objc_msgSend(v12, "setActivitySummaryProvider:", *(_QWORD *)(v2 + v10));
  return objc_msgSend(v12, "setIsUserInteractionEnabled:", 0);
}

id sub_10020AFE8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailPaletteTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivitySharingFriendDetailPaletteTableViewCell()
{
  return objc_opt_self(_TtC10FitnessApp47ActivitySharingFriendDetailPaletteTableViewCell);
}

unint64_t sub_10020B070()
{
  return 0xD00000000000002FLL;
}

void sub_10020B08C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  unint64_t v33;
  void *v34;
  id v35;
  __n128 v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _OWORD v41[16];
  _OWORD v42[16];

  v1 = v0;
  v2 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WorkoutActivityEntity(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v39 - v9;
  v11 = objc_msgSend(v0, "workoutActivity");
  if (!v11)
    goto LABEL_11;
  v12 = v11;
  v13 = objc_msgSend(v0, "workout");
  v40 = v12;
  sub_100136B14(v12, 0, 0, v13, v10);
  sub_10020B570((uint64_t)v10, (uint64_t)v8);
  *(_QWORD *)&v42[0] = _swiftEmptyArrayStorage;
  v14 = sub_1000083D8((unint64_t *)&qword_10081F608, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
  v15 = sub_100047110((uint64_t *)&unk_10083D740);
  v16 = sub_1001121C8();
  dispatch thunk of SetAlgebra.init<A>(_:)(v42, v15, v16, v2, v14);
  v17 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
  v18 = sub_1000083D8(&qword_100821C10, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625F30);
  v19 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v8, v4, v5, v18);
  v20 = objc_msgSend(v1, "view");
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v20, "subviews");

    v23 = sub_1001F32FC();
    v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

    if ((unint64_t)v24 >> 62)
    {
      if (v24 < 0)
        v38 = v24;
      else
        v38 = v24 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v24);
      v25 = _CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease(v24);
    }
    else
    {
      v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v25)
    {
      if ((v24 & 0xC000000000000001) != 0)
      {
        v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v24);
      }
      else
      {
        if (!*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
        v26 = *(id *)(v24 + 32);
      }
      v27 = v26;
      v28 = swift_bridgeObjectRelease(v24);
      UIView.annotate(with:)(v19, v28);

      sub_10020B5B4((uint64_t)v10);
    }
    else
    {
      swift_bridgeObjectRelease(v24);
      sub_10020B5B4((uint64_t)v10);

    }
LABEL_11:
    sub_1001641A8(objc_msgSend(v1, "workout"), objc_msgSend(v1, "workoutFormattingManager"), v42);
    *(_QWORD *)&v41[0] = _swiftEmptyArrayStorage;
    sub_100112010(v42);
    v29 = sub_1000083D8((unint64_t *)&qword_10081F608, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
    v30 = sub_100047110((uint64_t *)&unk_10083D740);
    v31 = sub_1001121C8();
    dispatch thunk of SetAlgebra.init<A>(_:)(v41, v30, v31, v2, v29);
    v41[12] = v42[12];
    v41[13] = v42[13];
    v41[14] = v42[14];
    v41[15] = v42[15];
    v41[8] = v42[8];
    v41[9] = v42[9];
    v41[10] = v42[10];
    v41[11] = v42[11];
    v41[4] = v42[4];
    v41[5] = v42[5];
    v41[6] = v42[6];
    v41[7] = v42[7];
    v41[0] = v42[0];
    v41[1] = v42[1];
    v41[2] = v42[2];
    v41[3] = v42[3];
    v32 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
    v33 = sub_100112214();
    v34 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v41, v4, &type metadata for WorkoutEntity, v33);
    v35 = objc_msgSend(v1, "view");
    if (v35)
    {
      v37 = v35;
      UIView.annotate(with:)(v34, v36);

      sub_100112258(v42);
      return;
    }
    goto LABEL_19;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_10020B570(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutActivityEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10020B5B4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutActivityEntity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_10020B5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  char *v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  UIColor v15;
  uint64_t v16;
  void *v17;
  objc_class *v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  NSString v30;
  uint64_t v31;
  NSString v32;
  id v33;
  char *v34;
  id v35;
  id v36;
  id v37;
  objc_super v39;

  v6 = OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_div;
  sub_10001E724(0, (unint64_t *)&qword_100821308, UIView_ptr);
  v7 = v3;
  *(_QWORD *)&v3[v6] = sub_1005AEEC8();
  v8 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DayViewTitleAndValueLabelPair()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v9 = (void *)objc_opt_self(UIColor);
  v10 = objc_msgSend(v9, "labelColor");
  v11 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor;
  v12 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor];
  *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor] = v10;
  v13 = v10;

  v14 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel;
  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel], "setTextColor:", *(_QWORD *)&v8[v11]);

  sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  v15.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.67843, 0.70588, 0.74902, 1.0).super.isa;
  v16 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor;
  v17 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor];
  *(UIColor *)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor] = v15;
  v18 = v15.super.isa;

  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel], "setTextColor:", *(_QWORD *)&v8[v16]);
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, 0, 0);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v25 = (uint64_t *)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText];
  v26 = *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText + 8];
  *v25 = v22;
  v25[1] = v24;
  swift_bridgeObjectRetain(v24);
  v27 = swift_bridgeObjectRelease(v26).n128_u64[0];
  v28 = *(void **)&v8[v14];
  v29 = v25[1];
  if (v29)
  {
    swift_bridgeObjectRetain(v29);
    v30 = String._bridgeToObjectiveC()();
    v27 = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  else
  {
    v30 = 0;
  }
  v31 = OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_labelPair;
  objc_msgSend(v28, "setText:", v30, *(double *)&v27);
  swift_bridgeObjectRelease(v24);

  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v7[v31] = v8;

  if (a3)
  {
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v32 = 0;
  }
  v39.receiver = v7;
  v39.super_class = (Class)type metadata accessor for DayViewFlightsTableViewCell();
  v33 = objc_msgSendSuper2(&v39, "initWithStyle:reuseIdentifier:", a1, v32);

  v34 = (char *)v33;
  v35 = objc_msgSend(v9, "systemBackgroundColor");
  objc_msgSend(v34, "setBackgroundColor:", v35);

  v36 = objc_msgSend(v34, "contentView");
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v34[OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_labelPair]);

  v37 = objc_msgSend(v34, "contentView");
  objc_msgSend(v37, "addSubview:", *(_QWORD *)&v34[OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_div]);

  sub_10020BA14();
  return v34;
}

void sub_10020BA14()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  Class isa;
  uint64_t v44;

  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_div];
  v2 = objc_msgSend(v1, "topAnchor");
  v3 = objc_msgSend(v0, "contentView");
  v4 = objc_msgSend(v3, "topAnchor");

  v42 = objc_msgSend(v2, "constraintEqualToAnchor:", v4);
  v5 = objc_msgSend(v1, "leadingAnchor");
  v6 = objc_msgSend(v0, "contentView");
  v7 = objc_msgSend(v6, "leadingAnchor");

  v40 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v7, 16.0);
  v8 = objc_msgSend(v1, "trailingAnchor");
  v9 = objc_msgSend(v0, "contentView");
  v10 = objc_msgSend(v9, "trailingAnchor");

  v39 = objc_msgSend(v8, "constraintEqualToAnchor:", v10);
  v11 = objc_msgSend(v1, "heightAnchor");
  if (qword_10081DD78 != -1)
    swift_once(&qword_10081DD78, sub_100442F3C);
  v37 = objc_msgSend(v11, "constraintEqualToConstant:", *(double *)&qword_10086AA08);

  v12 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_labelPair];
  v13 = objc_msgSend(v12, "leadingAnchor");
  v14 = objc_msgSend(v0, "contentView");
  v15 = objc_msgSend(v14, "leadingAnchor");

  v38 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v15, 16.0);
  v16 = objc_msgSend(v12, "trailingAnchor");
  v17 = objc_msgSend(v0, "contentView");
  v18 = objc_msgSend(v17, "trailingAnchor");

  v19 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v18, -16.0);
  v20 = objc_msgSend(v12, "topAnchor");
  v21 = objc_msgSend(v1, "bottomAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v21, 16.0);

  v23 = objc_msgSend(v12, "bottomAnchor");
  v24 = objc_msgSend(v0, "contentView");
  v25 = objc_msgSend(v24, "bottomAnchor");

  v34 = objc_msgSend(v23, "constraintEqualToAnchor:", v25);
  v36 = (id)objc_opt_self(NSLayoutConstraint);
  v26 = sub_100047110((uint64_t *)&unk_100828340);
  v27 = swift_allocObject(v26, 96, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100624C80;
  *(_QWORD *)(v27 + 32) = v42;
  *(_QWORD *)(v27 + 40) = v40;
  *(_QWORD *)(v27 + 48) = v39;
  *(_QWORD *)(v27 + 56) = v37;
  *(_QWORD *)(v27 + 64) = v38;
  *(_QWORD *)(v27 + 72) = v19;
  *(_QWORD *)(v27 + 80) = v22;
  *(_QWORD *)(v27 + 88) = v34;
  v44 = v27;
  specialized Array._endMutation()(v27);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  v35 = v42;
  v41 = v40;
  v28 = v39;
  v29 = v37;
  v30 = v38;
  v31 = v19;
  v32 = v22;
  v33 = v34;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v36, "activateConstraints:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);

}

uint64_t sub_10020BF10(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  char *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  UIColor v12;
  uint64_t v13;
  void *v14;
  objc_class *v15;
  id v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  NSString v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;

  v2 = v1;
  v4 = OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_div;
  sub_10001E724(0, (unint64_t *)&qword_100821308, UIView_ptr);
  v5 = v1;
  *(_QWORD *)&v1[v4] = sub_1005AEEC8();
  v6 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DayViewTitleAndValueLabelPair()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v8 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor;
  v9 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor];
  *(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor] = v7;
  v10 = v7;

  v11 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel;
  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel], "setTextColor:", *(_QWORD *)&v6[v8]);

  sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  v12.super.isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.67843, 0.70588, 0.74902, 1.0).super.isa;
  v13 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor;
  v14 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor];
  *(UIColor *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor] = v12;
  v15 = v12.super.isa;

  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel], "setTextColor:", *(_QWORD *)&v6[v13]);
  v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, 0, 0);

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22 = (uint64_t *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText];
  v23 = *(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText + 8];
  *v22 = v19;
  v22[1] = v21;
  swift_bridgeObjectRetain(v21);
  v24 = swift_bridgeObjectRelease(v23).n128_u64[0];
  v25 = *(void **)&v6[v11];
  v26 = v22[1];
  if (v26)
  {
    swift_bridgeObjectRetain(v26);
    v27 = String._bridgeToObjectiveC()();
    v24 = swift_bridgeObjectRelease(v26).n128_u64[0];
  }
  else
  {
    v27 = 0;
  }
  v28 = OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_labelPair;
  objc_msgSend(v25, "setText:", v27, *(double *)&v24);
  swift_bridgeObjectRelease(v21);

  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v28] = v6;

  v29 = *(void **)&v5[v28];
  v30 = type metadata accessor for DayViewFlightsTableViewCell();
  swift_deallocPartialClassInstance(v5, v30, 24, 7);
  return 0;
}

id sub_10020C230()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayViewFlightsTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DayViewFlightsTableViewCell()
{
  return objc_opt_self(_TtC10FitnessApp27DayViewFlightsTableViewCell);
}

void sub_10020C2B8(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  Class isa;
  id v6;
  uint64_t v7;
  CHWorkoutDetailHeartRateTableViewCell *v8;
  CHWorkoutDetailHeartRateTableViewCell *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;

  v3 = (void *)objc_opt_self(FIUIFormattingManager);
  v4 = objc_msgSend((id)objc_opt_self(HKUnit), "countUnit");
  objc_msgSend(a1, "doubleValueForUnit:", v4);

  isa = Double._bridgeToObjectiveC()().super.super.isa;
  v6 = objc_msgSend(v3, "stringWithNumber:decimalPrecision:", isa, 1);

  if (v6)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v9 = v8;

    v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp27DayViewFlightsTableViewCell_labelPair);
    v11 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel;
    v12 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v10
                                                                + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel), "font"));
    if (v12)
    {
      v13 = v12;
      v14 = sub_1000387C4(v7, (uint64_t)v9, 0, 0xE000000000000000, v12);
      swift_bridgeObjectRelease(v9, v15, v16, v17, v18, v19, v20, v21);

      v22 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText;
      v23 = *(void **)(v10 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText);
      *(_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText) = v14;
      v25 = v14;

      v24 = *(void **)(v10 + v11);
      objc_msgSend(v24, "setText:", 0);
      objc_msgSend(v24, "setAttributedText:", *(_QWORD *)(v10 + v22));

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

char *sub_10020C454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v6;
  char *v7;
  char *result;
  void *v9;
  char *v10;
  uint64_t v11;
  NSString v12;
  id v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  Class isa;
  objc_super v20;

  v6 = (void *)objc_opt_self(ASCompetitionScoreViewConfiguration);
  v7 = v3;
  result = (char *)objc_msgSend(v6, "companionTotalScoreFriendDetailConfiguration");
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = result;
  objc_msgSend(result, "setNameBaselineOffset:", 25.0);
  objc_msgSend(v9, "setPrimaryScoreBaselineOffset:", 12.0);
  result = (char *)objc_msgSend(objc_allocWithZone((Class)ASCompetitionScoreView), "initWithConfiguration:", v9);
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v10 = result;
  v11 = OBJC_IVAR____TtC10FitnessApp56ActivitySharingFriendDetailCompetitionScoreTableViewCell_scoreView;
  objc_msgSend(result, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  *(_QWORD *)&v7[v11] = v10;
  if (a3)
  {
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v12 = 0;
  }
  v20.receiver = v7;
  v20.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailCompetitionScoreTableViewCell();
  v13 = objc_msgSendSuper2(&v20, "initWithStyle:reuseIdentifier:", a1, v12);

  v14 = (char *)v13;
  v15 = objc_msgSend(v14, "contentView");
  objc_msgSend(v15, "addSubview:", *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp56ActivitySharingFriendDetailCompetitionScoreTableViewCell_scoreView]);

  v16 = (void *)objc_opt_self(NSLayoutConstraint);
  v17 = objc_msgSend(v14, "contentView");
  v18 = UIView.constraintsPinningToEdgesOfView(_:supportingRTL:insets:leadingPriority:trailingPriority:topPriority:bottomPriority:)(0.0, 16.0, 0.0, 16.0, 1000.0, 1000.0, 1000.0, 1000.0);

  sub_100039898();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "activateConstraints:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  return v14;
}

id sub_10020C6EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailCompetitionScoreTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivitySharingFriendDetailCompetitionScoreTableViewCell()
{
  return objc_opt_self(_TtC10FitnessApp56ActivitySharingFriendDetailCompetitionScoreTableViewCell);
}

unint64_t sub_10020C74C()
{
  return 0xD000000000000038;
}

void sub_10020C768()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;

  v1 = objc_msgSend((id)objc_opt_self(ASCompetitionScoreViewConfiguration), "companionTotalScoreFriendDetailConfiguration");
  if (!v1)
    __break(1u);
  v2 = v1;
  objc_msgSend(v1, "setNameBaselineOffset:", 25.0);
  objc_msgSend(v2, "setPrimaryScoreBaselineOffset:", 12.0);
  v3 = objc_msgSend(objc_allocWithZone((Class)ASCompetitionScoreView), "initWithConfiguration:", v2);
  if (!v3)
    __break(1u);
  v4 = OBJC_IVAR____TtC10FitnessApp56ActivitySharingFriendDetailCompetitionScoreTableViewCell_scoreView;
  v5 = v3;
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  *(_QWORD *)&v0[v4] = v5;
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/ActivitySharingFriendDetailCompetitionScoreTableViewCell.swift", 73, 2, 51, 0);
  __break(1u);
}

_QWORD *initializeBufferWithCopyOfBuffer for WorkoutDetailSwimmingView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

void destroy for WorkoutDetailSwimmingView(uint64_t a1)
{

}

_QWORD *assignWithCopy for WorkoutDetailSwimmingView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

_QWORD *assignWithTake for WorkoutDetailSwimmingView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;

  v3 = a2[1];
  v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

ValueMetadata *type metadata accessor for WorkoutDetailSwimmingView()
{
  return &type metadata for WorkoutDetailSwimmingView;
}

uint64_t sub_10020C914(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006AFEC8, 1);
}

void sub_10020C924(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  id v53;
  NSString v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  void (**v77)(char *, _QWORD *);
  char *v78;
  uint64_t v79;
  char *v80;
  __n128 v81;
  uint64_t (*v82)(void);
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  void *v104;
  id v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  __n128 v115;
  char *v116;
  uint64_t v117;
  char *v118;
  __n128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int *v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, char *, uint64_t);
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  int *v141;
  void (*v142)(char *, uint64_t);
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  void (**v161)(char *, _QWORD *);
  _QWORD *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char v173[16];
  uint64_t v174;
  _QWORD *v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;

  v150 = a3;
  v147 = sub_100047110(&qword_100828018);
  v5 = __chkstk_darwin(v147);
  v151 = (uint64_t *)((char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v149 = (uint64_t)&v143 - v7;
  v166 = type metadata accessor for DynamicTypeSize(0);
  v163 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v165 = (char *)&v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_100047110(&qword_100820D90);
  v169 = *(_QWORD *)(v170 - 8);
  v9 = __chkstk_darwin(v170);
  v148 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v146 = (char *)&v143 - v12;
  v13 = __chkstk_darwin(v11);
  v171 = (char *)&v143 - v14;
  v15 = __chkstk_darwin(v13);
  v168 = (char *)&v143 - v16;
  __chkstk_darwin(v15);
  v167 = (char *)&v143 - v17;
  v159 = (_QWORD *)type metadata accessor for SegmentedPickerStyle(0);
  v161 = (void (**)(char *, _QWORD *))*(v159 - 1);
  __chkstk_darwin(v159);
  v19 = (char *)&v143 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_100047110(&qword_100828020);
  v157 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v21 = (char *)&v143 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_100047110(&qword_100828028);
  v158 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v23 = (char *)&v143 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_100047110(&qword_100828030);
  v24 = __chkstk_darwin(v156);
  v26 = (char *)&v143 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v172 = (uint64_t)&v143 - v27;
  v154 = LocalizedStringKey.init(stringLiteral:)(0x69442074696C7053, 0xEE0065636E617473);
  v153 = v28;
  v30 = v29;
  v152 = v31;
  v32 = type metadata accessor for WorkoutDetailSwimmingSplitDataSource(0);
  v33 = sub_10020D830();
  v162 = a2;
  v145 = v32;
  v34 = ObservedObject.projectedValue.getter(a1, a2, v32, v33);
  KeyPath = swift_getKeyPath(&unk_10062E2D0);
  v144 = v33;
  ObservedObject.Wrapper.subscript.getter(&v176, KeyPath, v34, v33);
  swift_release(KeyPath);

  v178 = v176;
  v179 = v177;
  v174 = a1;
  v175 = a2;
  v36 = sub_100047110(&qword_100828040);
  v37 = sub_10020D888();
  v38 = Picker<>.init(_:selection:content:)(v154, v153, v30 & 1, v152, &v178, sub_10020D880, v173, &type metadata for Int, v36, &protocol witness table for Int, v37);
  SegmentedPickerStyle.init()(v38);
  v39 = sub_100028384(&qword_100828050, &qword_100828020, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  v40 = v155;
  v41 = v159;
  View.pickerStyle<A>(_:)(v19, v155, v159, v39, &protocol witness table for SegmentedPickerStyle);
  v161[1](v19, v41);
  v42 = (*(uint64_t (**)(char *, uint64_t))(v157 + 8))(v21, v40);
  LOBYTE(v41) = static Edge.Set.bottom.getter(v42);
  v43 = EdgeInsets.init(_all:)(24.0);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = v158;
  v51 = v160;
  (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v26, v23, v160);
  v52 = &v26[*(int *)(v156 + 36)];
  *v52 = (char)v41;
  *((double *)v52 + 1) = v43;
  *((_QWORD *)v52 + 2) = v45;
  *((_QWORD *)v52 + 3) = v47;
  *((_QWORD *)v52 + 4) = v49;
  v52[40] = 0;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v23, v51);
  v164 = v26;
  sub_100045AD4((uint64_t)v26, v172, &qword_100828030);
  v53 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v54 = String._bridgeToObjectiveC()();
  v55 = objc_msgSend(v53, "localizedStringForKey:value:table:", v54, 0, 0);

  v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
  v58 = v57;

  *(_QWORD *)&v176 = v56;
  *((_QWORD *)&v176 + 1) = v58;
  v59 = sub_100038CA0();
  v60 = Text.init<A>(_:)(&v176, &type metadata for String, v59);
  v62 = v61;
  v64 = v63;
  v66 = v65 & 1;
  v67 = static Font.headline.getter();
  v69 = Text.font(_:)(v67, v60, v62, v66, v64, v68);
  v71 = v70;
  LOBYTE(v34) = v72;
  v74 = v73;
  swift_release(v67);
  sub_1000E4458(v60, v62, v66);
  v75 = swift_bridgeObjectRelease(v64);
  *(_QWORD *)&v176 = v69;
  *((_QWORD *)&v176 + 1) = v71;
  LOBYTE(v177) = v34 & 1;
  *((_QWORD *)&v177 + 1) = v74;
  v76 = v163;
  v77 = *(void (***)(char *, _QWORD *))(v163 + 104);
  v78 = v165;
  LODWORD(v160) = enum case for DynamicTypeSize.large(_:);
  v79 = v166;
  v161 = v77;
  ((void (*)(char *, __n128))v77)(v165, v75);
  v80 = v168;
  View.dynamicTypeSize(_:)(v78, &type metadata for Text, &protocol witness table for Text);
  v163 = *(_QWORD *)(v76 + 8);
  ((void (*)(char *, uint64_t))v163)(v78, v79);
  sub_1000E4458(v176, *((uint64_t *)&v176 + 1), v177);
  v81 = swift_bridgeObjectRelease(*((_QWORD *)&v177 + 1));
  v159 = *(_QWORD **)(v169 + 32);
  ((void (*)(char *, char *, uint64_t, __n128))v159)(v167, v80, v170, v81);
  v82 = *(uint64_t (**)(void))((swift_isaMask & *v162) + 0x188);
  v83 = v162;
  v84 = v82();
  v86 = v85;

  *(_QWORD *)&v176 = v84;
  *((_QWORD *)&v176 + 1) = v86;
  v87 = Text.init<A>(_:)(&v176, &type metadata for String, v59);
  v89 = v88;
  v91 = v90;
  v93 = v92 & 1;
  v94 = static Font.largeTitle.getter();
  v96 = Text.font(_:)(v94, v87, v89, v93, v91, v95);
  v98 = v97;
  v100 = v99;
  v102 = v101;
  swift_release(v94);
  sub_1000E4458(v87, v89, v93);
  swift_bridgeObjectRelease(v91);
  v103 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "paceColors");
  if (v103)
  {
    v104 = v103;
    v162 = v83;
    v105 = objc_msgSend(v103, "nonGradientTextColor");

    if (v105)
    {
      v106 = v100 & 1;
      v107 = Color.init(_:)(v105);
      v108 = Text.foregroundColor(_:)(v107, v96, v98, v100 & 1, v102);
      v110 = v109;
      v112 = v111;
      v114 = v113;
      swift_release(v107);
      sub_1000E4458(v96, v98, v106);
      v115 = swift_bridgeObjectRelease(v102);
      *(_QWORD *)&v176 = v108;
      *((_QWORD *)&v176 + 1) = v110;
      LOBYTE(v177) = v112 & 1;
      *((_QWORD *)&v177 + 1) = v114;
      v116 = v165;
      v117 = v166;
      ((void (*)(char *, _QWORD, uint64_t, __n128))v161)(v165, v160, v166, v115);
      v118 = v146;
      View.dynamicTypeSize(_:)(v116, &type metadata for Text, &protocol witness table for Text);
      ((void (*)(char *, uint64_t))v163)(v116, v117);
      sub_1000E4458(v176, *((uint64_t *)&v176 + 1), v177);
      v119 = swift_bridgeObjectRelease(*((_QWORD *)&v177 + 1));
      v120 = v170;
      ((void (*)(char *, char *, uint64_t, __n128))v159)(v171, v118, v170, v119);
      v121 = swift_getKeyPath(&unk_10062E2F8);
      v122 = (uint64_t)v151;
      *v151 = v121;
      v123 = sub_100047110(&qword_100828058);
      swift_storeEnumTagMultiPayload(v122, v123, 0);
      v124 = (int *)v147;
      v125 = (_QWORD *)(v122 + *(int *)(v147 + 36));
      v126 = v162;
      *v125 = ObservedObject.init(wrappedValue:)(v126, v145, v144);
      v125[1] = v127;
      *(_QWORD *)(v122 + v124[10]) = 0x4040000000000000;
      *(_QWORD *)(v122 + v124[11]) = 0x4010000000000000;
      *(_QWORD *)(v122 + v124[12]) = 0x4020000000000000;
      v128 = v122 + v124[13];
      *(_QWORD *)&v178 = 0;
      GestureState.init(wrappedValue:)(&v176, &v178, &type metadata for Double);
      v129 = *((_QWORD *)&v176 + 1);
      v130 = v177;
      *(_QWORD *)v128 = v176;
      *(_QWORD *)(v128 + 8) = v129;
      *(_OWORD *)(v128 + 16) = v130;
      v131 = (_QWORD *)(v122 + v124[14]);
      *(_QWORD *)&v178 = 0;
      State.init(wrappedValue:)(&v176, &v178, &type metadata for Double);
      v132 = *((_QWORD *)&v176 + 1);
      *v131 = v176;
      v131[1] = v132;
      v133 = v149;
      sub_100045AD4(v122, v149, &qword_100828018);
      v134 = (uint64_t)v164;
      sub_100021CC0(v172, (uint64_t)v164, &qword_100828030);
      v135 = v169;
      v136 = *(void (**)(char *, char *, uint64_t))(v169 + 16);
      v137 = v168;
      v138 = v167;
      v136(v168, v167, v120);
      v139 = v148;
      v136(v148, v171, v120);
      sub_100021CC0(v133, v122, &qword_100828018);
      v140 = v150;
      sub_100021CC0(v134, v150, &qword_100828030);
      v141 = (int *)sub_100047110(&qword_100828060);
      v136((char *)(v140 + v141[12]), v137, v120);
      v136((char *)(v140 + v141[16]), v139, v120);
      sub_100021CC0(v122, v140 + v141[20], &qword_100828018);
      sub_10001BE90(v133, &qword_100828018);
      v142 = *(void (**)(char *, uint64_t))(v135 + 8);
      v142(v171, v120);
      v142(v138, v120);
      sub_10001BE90(v172, &qword_100828030);
      sub_10001BE90(v122, &qword_100828018);
      v142(v139, v120);
      v142(v137, v120);
      sub_10001BE90((uint64_t)v164, &qword_100828030);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10020D4D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10062E350);
  v5 = swift_getKeyPath(&unk_10062E378);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_10020D54C(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10062E350);
  v5 = swift_getKeyPath(&unk_10062E378);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_10020D5B8(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v13 = *(_QWORD *)&a2[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_supportedPaceDistances];
  v4 = v13;
  KeyPath = swift_getKeyPath(&unk_10062E328);
  v6 = swift_allocObject(&unk_10078EF10, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_bridgeObjectRetain(v4);
  v7 = a2;
  v8 = sub_100047110(&qword_100828068);
  v9 = sub_100047110(&qword_100827A20);
  v10 = sub_100028384(&qword_100828070, &qword_100828068, (uint64_t)&protocol conformance descriptor for [A]);
  v11 = sub_100204544();
  return ForEach<>.init(_:id:content:)(&v13, KeyPath, sub_10020D924, v6, v8, v9, v10, &protocol witness table for Int, v11);
}

uint64_t sub_10020D6B8@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD v15[2];

  v4 = *a1;
  v5 = a2;
  sub_10021FC98(v4);
  v7 = v6;
  v9 = v8;

  v15[0] = v7;
  v15[1] = v9;
  v10 = sub_100038CA0();
  result = Text.init<A>(_:)(v15, &type metadata for String, v10);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v12;
  *(_BYTE *)(a3 + 16) = v13 & 1;
  *(_QWORD *)(a3 + 24) = v14;
  *(_QWORD *)(a3 + 32) = v4;
  *(_BYTE *)(a3 + 40) = 0;
  *(_QWORD *)(a3 + 48) = v4;
  *(_WORD *)(a3 + 56) = 0;
  return result;
}

uint64_t sub_10020D744@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_100047110(&qword_100828000);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = (_QWORD *)v1[1];
  *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v4);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v9 = sub_100047110(&qword_100828008);
  sub_10020C924(v8, v7, (uint64_t)&v6[*(int *)(v9 + 44)]);
  LOBYTE(v7) = static Edge.Set.all.getter(v10);
  sub_100021CC0((uint64_t)v6, a1, &qword_100828000);
  v11 = a1 + *(int *)(sub_100047110(&qword_100828010) + 36);
  *(_BYTE *)v11 = (_BYTE)v7;
  *(_OWORD *)(v11 + 8) = xmmword_1006251F0;
  *(_OWORD *)(v11 + 24) = xmmword_1006251F0;
  *(_BYTE *)(v11 + 40) = 0;
  return sub_10001BE90((uint64_t)v6, &qword_100828000);
}

unint64_t sub_10020D830()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100828038;
  if (!qword_100828038)
  {
    v1 = type metadata accessor for WorkoutDetailSwimmingSplitDataSource(255);
    result = swift_getWitnessTable(&unk_10063E2D4, v1);
    atomic_store(result, (unint64_t *)&qword_100828038);
  }
  return result;
}

uint64_t sub_10020D880()
{
  uint64_t v0;

  return sub_10020D5B8(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

unint64_t sub_10020D888()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100828048;
  if (!qword_100828048)
  {
    v1 = sub_100007050(&qword_100828040);
    sub_100204544();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100828048);
  }
  return result;
}

_QWORD *sub_10020D8F4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10020D900()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10020D924@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10020D6B8(a1, *(void **)(v2 + 24), a2);
}

unint64_t sub_10020D938()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100828078;
  if (!qword_100828078)
  {
    v1 = sub_100007050(&qword_100828010);
    sub_100028384((unint64_t *)&unk_100828080, &qword_100828000, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100828078);
  }
  return result;
}

uint64_t sub_10020D9C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10001BE90(a1, &qword_10081E650);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_10078F100, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &unk_1008282A0, v16);
}

uint64_t sub_10020DB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10020DB44(a1, a2, a3, (uint64_t)&unk_10078F150, &qword_10081F218, (uint64_t)&unk_100828300);
}

uint64_t sub_10020DB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10020DB44(a1, a2, a3, (uint64_t)&unk_10078F128, &qword_1008282F0, (uint64_t)&unk_1008282E8);
}

uint64_t sub_10020DB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v27[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12);
  if ((_DWORD)v14 == 1)
  {
    sub_10001BE90(a1, &qword_10081E650);
    v15 = 7168;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
    {
LABEL_3:
      v17 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v16);
      swift_unknownObjectRetain(v16);
      v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
      v21 = v20;
      swift_unknownObjectRelease(v16);
      goto LABEL_6;
    }
  }
  else
  {
    v22 = TaskPriority.rawValue.getter(v14);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v15 = v22 | 0x1C00;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
      goto LABEL_3;
  }
  v19 = 0;
  v21 = 0;
LABEL_6:
  v23 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  v24 = sub_100047110(a5);
  if (v21 | v19)
  {
    v27[0] = 0;
    v27[1] = 0;
    v25 = v27;
    v27[2] = v19;
    v27[3] = v21;
  }
  else
  {
    v25 = 0;
  }
  return swift_task_create(v15, v25, v24, a6, v23);
}

uint64_t sub_10020DCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v21[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_10001BE90(a1, &qword_10081E650);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v10);
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_10078F678, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  v18 = sub_10001E724(0, (unint64_t *)&qword_1008284B0, UIImage_ptr);
  if (v15 | v13)
  {
    v21[0] = 0;
    v21[1] = 0;
    v19 = v21;
    v21[2] = v13;
    v21[3] = v15;
  }
  else
  {
    v19 = 0;
  }
  return swift_task_create(v9, v19, v18, &unk_1008284A8, v17);
}

char *sub_10020DE20(void *a1, void *a2, void *a3, _BYTE *a4, char *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  char *v15;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  objc_class *v43;
  char *v44;
  id v45;
  id v46;
  id v47;
  objc_class *v48;
  char *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  _BYTE *v58;
  char *result;
  char *v60;
  char *v61;
  void *v62;
  char *v63;
  id v64;
  char *v65;
  uint64_t v66;
  objc_class *v67;
  char *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t *v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  _BYTE *v89;
  char *v90;
  id v91;
  id v92;
  id v93;
  id v94;
  objc_class *v95;
  id v96;
  id v97;
  id v98;
  char *v99;
  uint64_t v100;
  __n128 v101;
  id v102;
  __n128 v103;
  objc_class *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  id v121;
  id v122;
  uint64_t v123;
  unsigned int v124;
  id v125;
  char *v126;
  _BYTE *v127;
  id v128;
  char *v129;
  _BYTE *v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  char *v139;
  id v140;
  objc_super v141;
  __int128 v142[2];
  objc_super v143;
  objc_super v144;
  objc_super v145;

  v135 = a8;
  v133 = a7;
  v132 = a6;
  v130 = a4;
  v140 = a15;
  v136 = a13;
  v137 = a14;
  v134 = a12;
  v138 = a10;
  v131 = a9;
  v20 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v20);
  v129 = (char *)&v123 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit(&v15[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_delegate], 0);
  v22 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_impressionsTracker;
  v23 = type metadata accessor for ActivityTileImpressionsTracker();
  v24 = (_QWORD *)swift_allocObject(v23, 56, 7);
  type metadata accessor for BasicImpressionsTracker(0);
  v25 = v15;
  v24[2] = BasicImpressionsTracker.__allocating_init(threshold:)(0.5);
  v24[3] = &protocol witness table for BasicImpressionsTracker;
  v24[4] = 0;
  v24[5] = sub_10004D314((uint64_t)_swiftEmptyArrayStorage);
  v24[6] = sub_10004D47C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v15[v22] = v24;
  v26 = &v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_paletteBannerInsets];
  *(double *)v26 = sub_100032C10();
  *((_QWORD *)v26 + 1) = v27;
  *((_QWORD *)v26 + 2) = v28;
  *((_QWORD *)v26 + 3) = v29;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementTransitionAnimator] = 0;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_transitionAnimatorFromViewController] = 0;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerViewController] = 0;
  v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_visibility] = 0;
  v30 = &v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_initialPresentation];
  *(_QWORD *)v30 = 0;
  v30[8] = 1;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_observers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_keyValueObservers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_resignActiveObserver] = 0;
  v31 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_accountButton;
  v32 = type metadata accessor for AccountButton(0);
  *(_QWORD *)&v25[v31] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v32)), "init");
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore] = a1;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext] = a2;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDataProvider] = a3;
  v33 = v130;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator] = v130;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_historyDataProvider] = a5;
  v34 = *(void **)&a5[OBJC_IVAR___CHHistoryDataProvider_workoutDataProvider];
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutDataProvider] = v34;
  v35 = objc_allocWithZone((Class)FIMindfulnessSessionDataProvider);
  v36 = a1;
  v139 = a2;
  v128 = a3;
  v127 = v33;
  v126 = a5;
  v130 = v34;
  v37 = objc_msgSend(v35, "initWithHealthStore:", v36);
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionDataProvider] = v37;
  v38 = v132;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementsDataProvider] = v132;
  v40 = v133;
  v39 = v134;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider] = v133;
  v41 = v135;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiModel] = v135;
  v42 = v131;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory] = v131;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager] = a11;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager] = v39;
  v43 = (objc_class *)type metadata accessor for MindfulnessSessionFormattingManager();
  v44 = (char *)objc_allocWithZone(v43);
  *(_QWORD *)&v44[OBJC_IVAR___CHMindfulnessSessionFormattingManager_fiuiFormattingManager] = a11;
  *(_QWORD *)&v44[OBJC_IVAR___CHMindfulnessSessionFormattingManager_healthStore] = v36;
  v145.receiver = v44;
  v145.super_class = v43;
  v45 = a11;
  v46 = v36;
  v47 = v45;
  v132 = v38;
  v125 = v40;
  v133 = v41;
  v131 = v42;
  v135 = v39;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager] = objc_msgSendSuper2(&v145, "init");
  v48 = (objc_class *)type metadata accessor for StackFormattingManager();
  v49 = (char *)objc_allocWithZone(v48);
  *(_QWORD *)&v49[OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_fiuiFormattingManager] = v47;
  *(_QWORD *)&v49[OBJC_IVAR____TtC10FitnessApp22StackFormattingManager_healthStore] = v46;
  v144.receiver = v49;
  v144.super_class = v48;
  v50 = v46;
  v51 = v47;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_stackFormattingManager] = objc_msgSendSuper2(&v144, "init");
  v53 = v136;
  v52 = v137;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDateCache] = v136;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsAvailabilityManager] = v52;
  v54 = v140;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_wheelchairUseCache] = v140;
  v55 = v138;
  *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager] = v138;
  v56 = (void *)objc_opt_self(ActivitySummaryCache);
  v136 = v53;
  v137 = v52;
  v140 = v54;
  v138 = v55;
  v57 = objc_msgSend(v56, "sharedInstance");
  v58 = v130;
  result = (char *)objc_msgSend(v51, "unitManager");
  if (result)
  {
    v60 = result;
    v61 = v139;
    v62 = *(void **)&v139[OBJC_IVAR___CHFitnessAppContext_pregnancyStateProvider];
    v63 = (char *)objc_allocWithZone((Class)type metadata accessor for TrendsDataProvider(0));
    v64 = v50;
    v130 = v128;
    v65 = sub_1003A7998(v64, v57, v58, v60, v130, v62, v63);
    v66 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsDataProvider;
    *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsDataProvider] = v65;
    v67 = (objc_class *)type metadata accessor for TrendsFormattingManager();
    v68 = (char *)objc_allocWithZone(v67);
    *(_QWORD *)&v68[OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter] = v51;
    v143.receiver = v68;
    v143.super_class = v67;
    v134 = v51;
    v69 = objc_msgSendSuper2(&v143, "init");
    v70 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsFormattingManager;
    *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsFormattingManager] = v69;
    v124 = objc_msgSend(v140, "isWheelchairUser");
    v71 = *(_QWORD *)&v61[OBJC_IVAR___CHFitnessAppContext_dependencies];
    v72 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_dependencies;
    *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_dependencies] = v71;
    swift_retain_n(v71, 2);
    v73 = sub_100047110((uint64_t *)&unk_100828460);
    dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v142, 0, 0, v73);
    swift_release(v71);
    sub_10002411C(v142, (uint64_t)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_avatarSettingsProvider]);
    v74 = *(_QWORD *)&v25[v72];
    swift_retain(v74);
    v75 = sub_100047110((uint64_t *)&unk_1008361E0);
    dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v142, 0, 0, v75);
    swift_release(v74);
    v76 = v142[0];
    *(_OWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_eventHub] = v142[0];
    v77 = type metadata accessor for SubscriptionToken(0);
    swift_allocObject(v77, *(unsigned int *)(v77 + 48), *(unsigned __int16 *)(v77 + 52));
    v78 = swift_unknownObjectRetain(v76);
    *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_subscriptionToken] = SubscriptionToken.init(eventHub:)(v78, *((_QWORD *)&v76 + 1));
    v79 = objc_msgSend(objc_allocWithZone((Class)AAUIAchievementResourceProvider), "init");
    *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider] = v79;
    v80 = type metadata accessor for AAUIAwardsDataProvider(0);
    v81 = v64;
    v82 = AAUIAwardsDataProvider.__allocating_init(healthStore:layoutMode:)();
    v83 = (uint64_t *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider];
    v83[3] = v80;
    v83[4] = (uint64_t)&protocol witness table for AAUIAwardsDataProvider;
    *v83 = v82;
    v84 = *(void **)&v25[v66];
    v85 = *(void **)&v25[v70];
    sub_1000252E0((uint64_t)v83, (uint64_t)v142);
    v86 = *(_QWORD *)&v25[v72];
    v87 = type metadata accessor for ActivityTileViewDataModel();
    v123 = swift_allocObject(v87, 72, 7);
    v88 = v81;
    v128 = v88;
    v89 = v130;
    v130 = v89;
    v90 = v126;
    v91 = v125;
    v92 = v137;
    v93 = v84;
    v94 = v85;
    swift_retain(v86);
    *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel] = sub_10057F7C0(v88, v89, v90, v92, v93, v94, v142, v91, v124, v86);
    sub_1000252E0((uint64_t)v83, (uint64_t)v142);
    v95 = (objc_class *)type metadata accessor for TrophyCasePrefetcher();
    v96 = objc_allocWithZone(v95);
    v97 = v131;
    v98 = sub_10000D3B0(v142, v97);

    v99 = &v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trophyCasePrefetcher];
    *((_QWORD *)v99 + 3) = v95;
    *((_QWORD *)v99 + 4) = &off_1007957C8;
    *(_QWORD *)v99 = v98;
    v100 = type metadata accessor for SummaryBannerActionPresenter(0);
    swift_allocObject(v100, *(unsigned int *)(v100 + 48), *(unsigned __int16 *)(v100 + 52));
    v101 = swift_retain(v86);
    *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_summaryBannerActionPresenter] = SummaryBannerActionPresenter.init(dependencies:placement:)(v101);
    v102 = objc_allocWithZone((Class)type metadata accessor for MarketingPaletteBannerPresenter(0));
    v103 = swift_retain(v86);
    *(_QWORD *)&v25[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerPresenter] = MarketingPaletteBannerPresenter.init(dependencies:placement:)(v103);

    v104 = (objc_class *)type metadata accessor for ActivityTileViewController();
    v141.receiver = v25;
    v141.super_class = v104;
    v105 = (char *)objc_msgSendSuper2(&v141, "initWithNibName:bundle:", 0, 0);
    v106 = *(_QWORD *)&v105[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_summaryBannerActionPresenter];
    v107 = swift_allocObject(&unk_10078F0B0, 24, 7);
    swift_unknownObjectWeakInit(v107 + 16, v105);
    v108 = v105;
    swift_retain(v106);
    v109 = swift_retain(v107);
    dispatch thunk of SummaryBannerActionPresenter.onNavigateToURLAction.setter(sub_100218698, v107, v109);
    swift_release(v106);
    swift_release(v107);
    v110 = type metadata accessor for TaskPriority(0);
    v111 = (uint64_t)v129;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v129, 1, 1, v110);
    type metadata accessor for MainActor(0);
    v112 = v108;
    v113 = static MainActor.shared.getter(v112);
    v114 = (_QWORD *)swift_allocObject(&unk_10078F650, 40, 7);
    v114[2] = v113;
    v114[3] = &protocol witness table for MainActor;
    v114[4] = v112;
    v115 = sub_10020D9C0(v111, (uint64_t)&unk_100828478, (uint64_t)v114);
    swift_release(v115);
    v116 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerPresenter;
    v117 = *(void **)&v112[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerPresenter];
    v119 = sub_100028404((unint64_t *)&unk_100828480, v118, (uint64_t (*)(uint64_t))type metadata accessor for ActivityTileViewController, (uint64_t)&unk_10062E530);
    v120 = v112;
    v121 = v117;
    dispatch thunk of MarketingPaletteBannerPresenter.display.setter(v105, v119);

    v122 = *(id *)&v112[v116];
    dispatch thunk of MarketingPaletteBannerPresenter.activate()();

    return v120;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10020E8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  _BYTE v15[24];

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext)+ OBJC_IVAR___CHFitnessAppContext_navigationDelegate);
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "navigateToSeymourTab");
      if ((v11 & 1) != 0)
      {
        static Log.default.getter(v11);
        v12._countAndFlagsBits = 0xD000000000000059;
        v12._object = (void *)0x8000000100690C90;
        v13._object = (void *)0x8000000100690CF0;
        v13._countAndFlagsBits = 0xD000000000000027;
        Logger.trace(file:function:)(v12, v13);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        sub_100537108(1);
      }

      swift_unknownObjectRelease(v10);
    }
    else
    {

    }
  }
}

id sub_10020EB34()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  double v11;
  objc_super v13;
  _QWORD v14[3];
  uint64_t v15;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_observers];
  v2 = (void *)objc_opt_self(NSNotificationCenter);
  v3 = objc_msgSend(v2, "defaultCenter", swift_bridgeObjectRetain(v1).n128_f64[0]);
  v4 = v3;
  v5 = *(_QWORD *)(v1 + 16);
  if (v5)
  {
    v6 = v1 + 32;
    swift_bridgeObjectRetain(v1);
    v7 = v4;
    do
    {
      sub_10003E9BC(v6, (uint64_t)v14);
      v8 = v15;
      v9 = sub_100016804(v14, v15);
      v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v8);
      objc_msgSend(v7, "removeObserver:", v10);
      swift_unknownObjectRelease(v10);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v14);
      v6 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n(v1, 2);

  }
  else
  {

    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v1).n128_u64[0];
  }
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDataProvider]+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers), "removeObject:", v0, v11);
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for ActivityTileViewController();
  return objc_msgSendSuper2(&v13, "dealloc");
}

uint64_t sub_10020EF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4[9] = a4;
  v5 = type metadata accessor for Date(0);
  v4[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[11] = v6;
  v4[12] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100824368);
  v4[13] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[14] = v8;
  v4[15] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ServiceSubscription(0);
  v4[16] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[17] = v10;
  v4[18] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ServiceSubscriptionRequest(0);
  v4[19] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[20] = v12;
  v4[21] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MainActor(0);
  v4[22] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  v4[23] = v14;
  v4[24] = v15;
  return swift_task_switch(sub_10020F060, v14, v15);
}

uint64_t sub_10020F060()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v7;

  v1 = v0[21];
  v2 = sub_100047110(&qword_100828490);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v0 + 2, 0, 0, v2);
  ServiceSubscriptionRequest.init(authenticationBehavior:cacheBehavior:)(1, 1);
  v3 = v0[5];
  v4 = v0[6];
  sub_100016804(v0 + 2, v3);
  dispatch thunk of ServiceSubscriptionClientProtocol.fetchServiceSubscription(with:)(v1, v3, v4);
  v7 = (char *)&dword_100839988 + dword_100839988;
  v5 = (_QWORD *)swift_task_alloc(unk_10083998C);
  v0[25] = v5;
  *v5 = v0;
  v5[1] = sub_10020F160;
  return ((uint64_t (*)(_QWORD, const char *, uint64_t, uint64_t, uint64_t))v7)(v0[18], "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Tab/ActivityTileViewController.swift", 107, 2, 247);
}

uint64_t sub_10020F160()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(_QWORD, _QWORD))(v2[14] + 8))(v2[15], v2[13]);
  if (v0)
    v4 = sub_10020F494;
  else
    v4 = sub_10020F1D0;
  return swift_task_switch(v4, v2[23], v2[24]);
}

uint64_t sub_10020F1D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  void *v23;
  os_log_type_t v24;
  NSObject *v25;
  uint8_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v34;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 176));
  Date.init()(v10);
  v34 = ServiceSubscription.isSubscribed(date:)(v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 16));
  v11 = *(_QWORD *)(v0 + 208);
  v12 = *(_QWORD *)(v0 + 72);
  v13 = sub_100016804((_QWORD *)(v12 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trophyCasePrefetcher), *(_QWORD *)(v12 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trophyCasePrefetcher + 24));
  v14 = *v13;
  v15 = (_QWORD *)(*v13 + OBJC_IVAR____TtC10FitnessApp20TrophyCasePrefetcher_awardsDataProvider);
  v16 = v15[3];
  v17 = v15[4];
  sub_100016804(v15, v16);
  v18 = sub_100028404(&qword_100828498, 255, (uint64_t (*)(uint64_t))type metadata accessor for TrophyCasePrefetcher, (uint64_t)&unk_100634E88);
  dispatch thunk of AAUIAwardsDataProviding.add(observer:)(v14, v18, v16, v17);
  sub_100018248();
  v19 = *(_QWORD *)(v12 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider + 24);
  v20 = *(_QWORD *)(v12 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider + 32);
  sub_100016804((_QWORD *)(v12 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider), v19);
  v21 = dispatch thunk of AAUIAwardsDataProviding.activate(isFitnessPlusSubscriber:)(v34 & 1, v19, v20);
  if (v11)
  {
    v22 = static os_log_type_t.error.getter(v21);
    v23 = (void *)HKLogActivity;
    v24 = v22;
    if (os_log_type_enabled(HKLogActivity, v22))
    {
      swift_errorRetain(v11);
      swift_errorRetain(v11);
      v25 = v23;
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v26 = 138412290;
      swift_errorRetain(v11);
      v28 = _swift_stdlib_bridgeErrorToNSError(v11);
      *(_QWORD *)(v0 + 56) = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v26 + 4);
      *v27 = v28;
      swift_errorRelease(v11);
      swift_errorRelease(v11);
      _os_log_impl((void *)&_mh_execute_header, v25, v24, "Failed to activate AwardsDataProvider: %@", v26, 0xCu);
      v29 = sub_100047110(&qword_10081E648);
      swift_arrayDestroy(v27, 1, v29);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);
      swift_errorRelease(v11);

    }
    else
    {
      swift_errorRelease(v11);
    }
  }
  v30 = *(_QWORD *)(v0 + 144);
  v31 = *(_QWORD *)(v0 + 120);
  v32 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020F494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  os_log_type_t v6;
  void *v7;
  os_log_type_t v8;
  uint64_t v9;
  NSObject *v10;
  uint8_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = swift_release(*(_QWORD *)(v0 + 176));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1, v2, v4);
  v5 = _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 16));
  v6 = static os_log_type_t.error.getter(v5);
  v7 = (void *)HKLogActivity;
  v8 = v6;
  if (os_log_type_enabled(HKLogActivity, v6))
  {
    v9 = *(_QWORD *)(v0 + 208);
    swift_errorRetain(v9);
    swift_errorRetain(v9);
    v10 = v7;
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v11 = 138412290;
    swift_errorRetain(v9);
    v13 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v0 + 64) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v11 + 4);
    *v12 = v13;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v10, v8, "Failed to fetch F+ subscription status, assuming not subscribed: %@", v11, 0xCu);
    v14 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v12, 1, v14);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    swift_errorRelease(v9);

  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 208));
  }
  v15 = *(_QWORD *)(v0 + 72);
  v16 = sub_100016804((_QWORD *)(v15 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trophyCasePrefetcher), *(_QWORD *)(v15 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trophyCasePrefetcher + 24));
  v17 = *v16;
  v18 = (_QWORD *)(*v16 + OBJC_IVAR____TtC10FitnessApp20TrophyCasePrefetcher_awardsDataProvider);
  v19 = v18[3];
  v20 = v18[4];
  sub_100016804(v18, v19);
  v21 = sub_100028404(&qword_100828498, 255, (uint64_t (*)(uint64_t))type metadata accessor for TrophyCasePrefetcher, (uint64_t)&unk_100634E88);
  dispatch thunk of AAUIAwardsDataProviding.add(observer:)(v17, v21, v19, v20);
  sub_100018248();
  v22 = *(_QWORD *)(v15 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider + 24);
  v23 = *(_QWORD *)(v15 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider + 32);
  sub_100016804((_QWORD *)(v15 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider), v22);
  dispatch thunk of AAUIAwardsDataProviding.activate(isFitnessPlusSubscriber:)(0, v22, v23);
  v24 = *(_QWORD *)(v0 + 144);
  v25 = *(_QWORD *)(v0 + 120);
  v26 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10020F834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t Strong;
  void *v6;
  id v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  v3 = static os_log_type_t.info.getter();
  v4 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "ActivityTileViewController entering background, pausing videos", 62, 2, _swiftEmptyArrayStorage);

  swift_beginAccess(v2, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_10081D7E0 != -1)
      swift_once(&qword_10081D7E0, sub_10004CD78);
    objc_msgSend(v7, "postNotificationName:object:", qword_10086A210, v6);

  }
}

void sub_10020F940(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  v3 = static os_log_type_t.default.getter(a1);
  v4 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "ActivityTileViewController did receive significantTimeChangeNotification notification", 85, 2, _swiftEmptyArrayStorage);

  swift_beginAccess(v2, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_100014278();

  }
}

void sub_10020F9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t Strong;
  void *v13;
  id v14;
  _QWORD v15[2];
  _QWORD v16[5];
  __int128 v17;
  __int128 v18;

  v3 = Notification.userInfo.getter();
  if (v3)
  {
    v4 = v3;
    v15[0] = 0xD000000000000010;
    v15[1] = 0x8000000100688AB0;
    AnyHashable.init<A>(_:)(v16, v15, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v4 + 16) && (v5 = sub_10004C814((uint64_t)v16), (v6 & 1) != 0))
    {
      sub_10003E9BC(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v17);
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
    swift_bridgeObjectRelease(v4);
    sub_10004CC10((uint64_t)v16);
    if (*((_QWORD *)&v18 + 1))
    {
      v7 = swift_dynamicCast(v15, &v17, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
      if ((v7 & 1) != 0)
      {
        v8 = a2 + 16;
        v9 = LOBYTE(v15[0]);
        v10 = static os_log_type_t.default.getter(v7);
        v11 = HKLogActivity;
        os_log(_:dso:log:_:_:)(v10, &_mh_execute_header, v11, "ActivityTileViewController did receive WheelchairUseDidChange notification", 74, 2, _swiftEmptyArrayStorage);

        swift_beginAccess(v8, v16, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(v8);
        if (Strong)
        {
          v13 = (void *)Strong;
          v14 = objc_retain(*(id *)(Strong
                                  + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider));

          objc_msgSend(v14, "setWheelchairUser:", v9);
        }
      }
    }
    else
    {
      sub_10001BE90((uint64_t)&v17, (uint64_t *)&unk_100828420);
    }
  }
}

void sub_10020FB84(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];
  objc_super v15;

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for ActivityTileViewController();
  v15.receiver = v2;
  v15.super_class = v8;
  objc_msgSendSuper2(&v15, "viewWillDisappear:", a1 & 1);
  v9 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_10081D7E0 != -1)
    swift_once(&qword_10081D7E0, sub_10004CD78);
  objc_msgSend(v9, "postNotificationName:object:", qword_10086A210, v2);

  v11 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_visibility;
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_visibility) == 2)
  {
    v14[1] = v2;
    Date.init()(v10);
    v13 = sub_100028404(&qword_100828430, v12, (uint64_t (*)(uint64_t))type metadata accessor for ActivityTileViewController, (uint64_t)&unk_10062E4E8);
    MetricImpressionPublishing.publishImpressions(on:)(v7, v8, v13);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *((_BYTE *)v2 + v11) = 1;
}

void sub_10020FDE4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  Class isa;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v1, "tableView");
  if (!v6)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v7 = v6;
  v8 = (uint64_t)objc_msgSend(v6, "numberOfSections");

  if (v8 < 1)
    return;
  v9 = objc_msgSend(v1, "tableView");
  if (!v9)
    goto LABEL_9;
  v10 = v9;
  v11 = (uint64_t)objc_msgSend(v9, "numberOfRowsInSection:", 0);

  if (v11 < 1)
    return;
  IndexPath.init(row:section:)(0, 0);
  v12 = objc_msgSend(v1, "tableView");
  if (!v12)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v13 = v12;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v13, "scrollToRowAtIndexPath:atScrollPosition:animated:", isa, 1, 1);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_100210010(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  char *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  char v48;
  void (*v49)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  id v58;
  _BYTE v59[40];

  v4 = sub_100047110((uint64_t *)&unk_100828380);
  __chkstk_darwin(v4);
  v56 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FitnessPlusStackViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v55 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v54 - v10;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000252E0(a1, (uint64_t)v59);
  v16 = sub_100047110((uint64_t *)&unk_10082E5B0);
  v17 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  if (swift_dynamicCast(&v58, v59, v16, v17, 6))
  {

    v18 = type metadata accessor for WorkoutsListTableViewCell();
    if (swift_dynamicCastClass(a2, v18))
    {
      sub_1000252E0(a1, (uint64_t)v59);
      v19 = a2;
      if ((swift_dynamicCast(&v58, v59, v16, v17, 6) & 1) != 0)
      {
        v56 = v19;
        v20 = v57;
        v21 = v58;
        v22 = *(_QWORD *)(v57 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel);
        v23 = objc_msgSend(v58, "UUID");
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        v24 = UUID.uuidString.getter();
        v26 = v25;
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        v27 = (_QWORD *)(*(_QWORD *)(v22 + 40)
                       + OBJC_IVAR____TtC10FitnessApp27AwardsActivityTileDataModel_achievementsDataProvider);
        v28 = v27[3];
        v29 = v27[4];
        sub_100016804(v27, v28);
        v30 = dispatch thunk of AAUIAwardsDataProviding.achievements(forWorkoutIdentifier:)(v24, v26, v28, v29);
        swift_bridgeObjectRelease(v26);
        v31 = *(void **)(v20 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext);
        v32 = *(void **)(v20 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager);
        if ((unint64_t)v30 >> 62)
        {
          if (v30 < 0)
            v53 = v30;
          else
            v53 = v30 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v30);
          v33 = _CocoaArrayWrapper.endIndex.getter(v53);
          swift_bridgeObjectRelease(v30);
        }
        else
        {
          v33 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease(v30);
        sub_100110A00(v21, v31, v32, v33, 1, 0, 0);

      }
      else
      {

      }
    }
  }
  else
  {
    sub_1000252E0(a1, (uint64_t)v59);
    v34 = type metadata accessor for MindfulnessSessionViewModel(0);
    if (swift_dynamicCast(&v58, v59, v16, v34, 6))
    {

      v35 = type metadata accessor for MindfulnessSessionListTableViewCell();
      v36 = swift_dynamicCastClass(a2, v35);
      if (v36)
      {
        v37 = v36;
        sub_1000252E0(a1, (uint64_t)v59);
        v38 = a2;
        if ((swift_dynamicCast(&v58, v59, v16, v34, 6) & 1) != 0)
        {
          v39 = v58;
          v40 = *(char **)(v57 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext);
          v41 = *(void **)(v57
                         + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager);
          v42 = swift_allocObject(&unk_10078F470, 24, 7);
          swift_unknownObjectWeakInit(v42 + 16, v37);
          swift_retain(v42);
          sub_1004474CC(v39, v40, v41, (uint64_t)sub_10012F3BC, v42);

          swift_release_n(v42, 2);
        }
        else
        {

        }
      }
    }
    else
    {
      sub_1000252E0(a1, (uint64_t)v59);
      if (swift_dynamicCast(v11, v59, v16, v6, 6))
      {
        sub_100011F54((uint64_t)v11, type metadata accessor for FitnessPlusStackViewModel);
        v43 = type metadata accessor for StackListTableViewCell(0);
        v44 = swift_dynamicCastClass(a2, v43);
        if (v44)
        {
          v45 = v44;
          sub_1000252E0(a1, (uint64_t)v59);
          v46 = a2;
          v47 = (uint64_t)v56;
          v48 = swift_dynamicCast(v56, v59, v16, v6, 6);
          v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
          if ((v48 & 1) != 0)
          {
            v49(v47, 0, 1, v6);
            v50 = v55;
            sub_100047C88(v47, v55, type metadata accessor for FitnessPlusStackViewModel);
            v51 = *(void **)(v57 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext);
            v52 = swift_allocObject(&unk_10078F448, 24, 7);
            swift_unknownObjectWeakInit(v52 + 16, v45);
            swift_retain(v52);
            sub_1002B56C0(v50, v51, (uint64_t)sub_100218594, v52);

            swift_release_n(v52, 2);
            sub_100011F54(v50, type metadata accessor for FitnessPlusStackViewModel);
          }
          else
          {
            v49(v47, 1, 1, v6);

            sub_10001BE90(v47, (uint64_t *)&unk_100828380);
          }
        }
      }
    }
  }
}

void sub_100210570(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  id v5;
  id v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsAvailabilityManager);
    v5 = objc_allocWithZone((Class)type metadata accessor for TrendsSplashViewController());
    v6 = sub_100160110(v4);
    objc_msgSend(v3, "presentViewController:animated:completion:", v6, 1, 0);

  }
}

void sub_10021060C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100210664(a1);

  }
}

void sub_100210664(unsigned __int8 *a1)
{
  char *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  char *v17;
  id v18;
  char v19;
  char *v20;
  id v21;
  void *v22;
  uint64_t v23;
  char *v24;

  v3 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                 + 32);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(v3 + 72);
  v6 = *(_BYTE *)(v3 + 80);
  v7 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_wheelchairUseCache], "isWheelchairUser");
  v8 = objc_msgSend(v1, "navigationController");
  if (!v8)
    return;
  v9 = v8;
  v10 = objc_msgSend(v8, "viewControllers");

  v11 = sub_10001E724(0, (unint64_t *)&qword_100828310, UIViewController_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if (!((unint64_t)v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13)
      goto LABEL_4;
LABEL_19:
    swift_bridgeObjectRelease(v12);
    return;
  }
  if (v12 < 0)
    v23 = v12;
  else
    v23 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  v13 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v12);
  if (!v13)
    goto LABEL_19;
LABEL_4:
  v14 = v13 - 1;
  if (__OFSUB__(v13, 1))
  {
    __break(1u);
    goto LABEL_21;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
LABEL_21:
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
    goto LABEL_9;
  }
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_23:
    __break(1u);
    return;
  }
  v15 = *(id *)(v12 + 8 * v14 + 32);
LABEL_9:
  v16 = v15;
  swift_bridgeObjectRelease(v12);
  v17 = v1;
  v18 = v16;
  v19 = static NSObject.== infix(_:_:)(v18, v17);

  if ((v19 & 1) != 0)
  {
    v20 = sub_1002C9B24(a1, *(_QWORD *)&v17[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsDataProvider], *(void **)&v17[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsFormattingManager], v4, v5, v6, v7);
    if (v20)
    {
      v24 = v20;
      v21 = objc_msgSend(v17, "navigationController");
      if (v21)
      {
        v22 = v21;
        objc_msgSend(v21, "pushViewController:animated:", v24, 1);

      }
    }
  }
}

void sub_1002108C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  char *v4;
  double v5;
  uint64_t v6;
  char *v7;
  char *v8;
  double v9;
  uint64_t v10;
  char *v11;
  char v12[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = *(char **)(Strong + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView);
    v5 = dbl_10062E630[v4[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection]];
    v6 = swift_allocObject(&unk_10078F498, 24, 7);
    *(_QWORD *)(v6 + 16) = v4;
    v7 = v4;
    sub_100151A58((uint64_t)sub_1001F6140, v6, v5);
    swift_release(v6);
    v8 = *(char **)&v3[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView];
    v9 = dbl_10062E630[v8[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection]];
    v10 = swift_allocObject(&unk_10078F4C0, 24, 7);
    *(_QWORD *)(v10 + 16) = v8;
    v11 = v8;
    sub_100151A58((uint64_t)sub_100218814, v10, v9);

    swift_release(v10);
  }
}

uint64_t sub_1002109DC(void *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  char *v6;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  NSString *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  id v43;
  id v44;
  char *v45;
  void *v46;
  id v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  void *v52;
  __int128 v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v66;
  void **aBlock;
  uint64_t v68;
  uint64_t (*v69)(uint64_t);
  void *v70;
  id (*v71)();
  uint64_t v72;
  NSRect v73;

  v12 = static os_log_type_t.default.getter(a1);
  v13 = (void *)HKLogActivity;
  v14 = sub_100047110((uint64_t *)&unk_100827460);
  v15 = swift_allocObject(v14, 152, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100624A40;
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  v16 = sub_100038CF8();
  *(_QWORD *)(v15 + 64) = v16;
  *(_QWORD *)(v15 + 32) = 0xD000000000000038;
  *(_QWORD *)(v15 + 40) = 0x8000000100690970;
  *(_QWORD *)(v15 + 96) = sub_10001E724(0, (unint64_t *)&qword_10082BBF0, ACHAchievement_ptr);
  *(_QWORD *)(v15 + 104) = sub_10021859C();
  *(_QWORD *)(v15 + 72) = a1;
  v17 = v13;
  v18 = a1;
  v73.origin.x = a3;
  v73.origin.y = a4;
  v73.size.width = a5;
  v73.size.height = a6;
  v19 = NSStringFromRect(v73);
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  *(_QWORD *)(v15 + 136) = &type metadata for String;
  *(_QWORD *)(v15 + 144) = v16;
  *(_QWORD *)(v15 + 112) = v20;
  *(_QWORD *)(v15 + 120) = v22;
  os_log(_:dso:log:_:_:)(v12, &_mh_execute_header, v17, "%@ presenting detail for achievement %{public}@ badgeRect %{public}@", 68, 2, v15);

  v66 = objc_msgSend(v18, "unearned", swift_bridgeObjectRelease(v15).n128_f64[0]) ^ 1;
  if (AAUIShouldUseNewTrophyCase())
  {
    v63 = type metadata accessor for TrophyCaseAwardDetailViewController();
    v23 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
    v24 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
    sub_1000252E0((uint64_t)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)&aBlock);
    v25 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
    v26 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
    v27 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
    v28 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
    v29 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
    v56 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
    v57 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
    v30 = (uint64_t)v70;
    v59 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutDataProvider];
    v60 = (uint64_t)v71;
    v62 = sub_10017C044((uint64_t)&aBlock, (uint64_t)v70);
    v61 = v18;
    v58 = v23;
    v55 = v24;
    v31 = v25;
    v32 = v26;
    v33 = v27;
    v34 = v28;
    *(_QWORD *)&v54 = v29;
    *((_QWORD *)&v54 + 1) = v56;
    v35 = sub_1005A7AB0(v61, v58, v55, v62, v31, v32, v33, v34, v54, v57, v59, 0, 0, v66, 1, 0, v63, v30, v60);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&aBlock);
  }
  else
  {
    v35 = objc_msgSend(objc_allocWithZone((Class)CHAchievementDetailViewController), "initWithAchievement:locProvider:formatsForFriend:forDayView:forModalPresentation:shouldShowCelebration:", v18, *(_QWORD *)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider], 0, 1, 0, 0);
  }
  v36 = objc_opt_self(UIViewController);
  v37 = swift_dynamicCastObjCClass(v35, v36);
  if (v37)
  {
    v64 = v37;
    v38 = swift_allocObject(&unk_10078F4E8, 24, 7);
    *(_QWORD *)(v38 + 16) = a2;
    v39 = swift_allocObject(&unk_10078F510, 24, 7);
    *(_QWORD *)(v39 + 16) = a2;
    v40 = objc_allocWithZone((Class)AAUIAchievementDetailTransitionAnimator);
    v71 = sub_1002185F4;
    v72 = v38;
    aBlock = _NSConcreteStackBlock;
    v68 = 1107296256;
    v69 = sub_10002D0F8;
    v70 = &unk_10078F528;
    v41 = _Block_copy(&aBlock);
    v42 = v72;
    v43 = a2;
    swift_unknownObjectRetain_n(v35, 2);
    v44 = v43;
    swift_retain(v38);
    swift_retain(v39);
    v45 = v6;
    swift_release(v42);
    v71 = sub_100218610;
    v72 = v39;
    aBlock = _NSConcreteStackBlock;
    v68 = 1107296256;
    v69 = sub_10002D0F8;
    v70 = &unk_10078F550;
    v46 = _Block_copy(&aBlock);
    swift_release(v72);
    v47 = objc_msgSend(v40, "initWithPresentingViewController:detailViewController:shouldPlayFlipInAnimation:initialBadgeFrame:conversionView:didStartAnimationBlock:didFinishAnimationBlock:", v45, v35, v66, v44, v41, v46, a3, a4, a5, a6);

    swift_unknownObjectRelease(v35);
    _Block_release(v46);
    _Block_release(v41);
    v48 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementTransitionAnimator;
    v49 = *(void **)&v45[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementTransitionAnimator];
    *(_QWORD *)&v45[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementTransitionAnimator] = v47;

    v50 = *(void **)&v45[v48];
    if (v50)
      objc_msgSend(v50, "setShouldAdjustForInset:", 1);
    v51 = objc_msgSend(v45, "navigationController");
    if (v51)
    {
      v52 = v51;
      objc_msgSend(v51, "pushViewController:animated:", v64, 1);

    }
    swift_release(v39);
    swift_release(v38);
    swift_unknownObjectRelease(v35);
  }
  return swift_unknownObjectRelease(v35);
}

uint64_t sub_100210F40(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  char *v22;
  id v23;
  void *v24;
  char v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  _BYTE v29[40];
  _QWORD v30[5];

  v2 = v1;
  v4 = sub_100047110((uint64_t *)&unk_100828380);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FitnessPlusStackViewModel(0);
  v8 = *(_QWORD *)(v7 - 8);
  result = __chkstk_darwin(v7);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                              + 24)
                  + 24);
  if (*(_QWORD *)(v12 + 16) > a1)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else
    {
      sub_1000252E0(v12 + 40 * a1 + 32, (uint64_t)v30);
      sub_1000252E0((uint64_t)v30, (uint64_t)v29);
      v13 = sub_100047110((uint64_t *)&unk_10082E5B0);
      v14 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
      if (swift_dynamicCast(&v28, v29, v13, v14, 6))
      {
        v15 = v28;
        sub_100213888(v28, 0, 0, 0);

      }
      else
      {
        sub_1000252E0((uint64_t)v30, (uint64_t)v29);
        v16 = type metadata accessor for MindfulnessSessionViewModel(0);
        if (swift_dynamicCast(&v28, v29, v13, v16, 6))
        {
          v17 = v28;
          v18 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
          v19 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager];
          v20 = objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionDetailViewController(0));
          v21 = v17;
          v22 = sub_1002C26F0(v21, v18, v19);
          v23 = objc_msgSend(v2, "navigationController");
          if (v23)
          {
            v24 = v23;
            objc_msgSend(v23, "pushViewController:animated:", v22, 1);

          }
          else
          {

          }
        }
        else
        {
          sub_1000252E0((uint64_t)v30, (uint64_t)v29);
          v25 = swift_dynamicCast(v6, v29, v13, v7, 6);
          v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
          if ((v25 & 1) == 0)
          {
            v26(v6, 1, 1, v7);
            _s10FitnessApp24HistoryViewActionContextVwxx_0(v30);
            return sub_10001BE90((uint64_t)v6, (uint64_t *)&unk_100828380);
          }
          v26(v6, 0, 1, v7);
          sub_100047C88((uint64_t)v6, (uint64_t)v11, type metadata accessor for FitnessPlusStackViewModel);
          sub_100213E68((uint64_t)v11);
          sub_100011F54((uint64_t)v11, type metadata accessor for FitnessPlusStackViewModel);
        }
      }
      return _s10FitnessApp24HistoryViewActionContextVwxx_0(v30);
    }
  }
  return result;
}

uint64_t sub_100211210(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, _QWORD);
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, char *, uint64_t);
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  void (*v101)(char *, uint64_t);
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128[32];

  v106 = a1;
  v105 = type metadata accessor for Logger(0);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v3 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v116 = *(_QWORD *)(v4 - 8);
  v117 = v4;
  __chkstk_darwin(v4);
  v115 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v6);
  v109 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110((uint64_t *)&unk_10082E600);
  __chkstk_darwin(v8);
  v108 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_1008282D0);
  __chkstk_darwin(v10);
  v107 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MetricPage(0);
  v113 = *(_QWORD *)(v12 - 8);
  v114 = v12;
  __chkstk_darwin(v12);
  v112 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_1008283D0);
  __chkstk_darwin(v14);
  v122 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MetricClickAction(0);
  v123 = *(_QWORD *)(v16 - 8);
  v124 = v16;
  __chkstk_darwin(v16);
  v121 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for MetricClickElement(0);
  v118 = *(_QWORD *)(v18 - 8);
  v119 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for MetricLocation(0);
  v110 = *(_QWORD *)(v21 - 8);
  v111 = v21;
  v22 = __chkstk_darwin(v21);
  v120 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v25 = (char *)&v102 - v24;
  v26 = sub_100047110(&qword_100824DE0);
  __chkstk_darwin(v26);
  v28 = (char *)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for CatalogTipSection(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v102 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = v1;
  v33 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel)
                  + 48)
      + OBJC_IVAR____TtC10FitnessApp31CatalogTipActivityTileDataModel_tipSection;
  swift_beginAccess(v33, v128, 0, 0);
  sub_100021CC0(v33, (uint64_t)v28, &qword_100824DE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    v34 = v104;
    v35 = v105;
    v36 = sub_10001BE90((uint64_t)v28, &qword_100824DE0);
    v37 = static Log.default.getter(v36);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.error.getter(v38);
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "[ActivityTileViewController] tip row selected with no tip section", v40, 2u);
      swift_slowDealloc(v40, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v3, v35);
  }
  else
  {
    v42 = v32;
    v102 = v32;
    sub_100047C88((uint64_t)v28, (uint64_t)v32, type metadata accessor for CatalogTipSection);
    sub_100030780(2);
    v44 = v43;
    v46 = v45;
    v47 = *(void (**)(char *, _QWORD))(v118 + 104);
    v48 = v119;
    v47(v20, enum case for MetricClickElement.shelf(_:));
    v49 = sub_1003190E8((uint64_t)_swiftEmptyArrayStorage);
    v103 = v25;
    MetricLocation.init(identifier:identifierType:index:name:elementType:metadata:)(0x5472656E69617254, 0xEB00000000737069, 0x64695F737469, 0xE600000000000000, 0, v44, v46, v20, v49);
    v50 = &v42[*(int *)(v29 + 24)];
    v51 = (uint64_t *)&v50[*(int *)(type metadata accessor for CatalogTipSectionItem(0) + 28)];
    v53 = v51[1];
    v105 = *v51;
    v52 = v105;
    v54 = swift_bridgeObjectRetain(v53);
    v55 = (void *)ShelfLockupAttributedTagStrings.detail.getter(v54);
    v56 = objc_msgSend(v55, "string");

    v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
    v59 = v58;

    v60 = enum case for MetricClickElement.button(_:);
    ((void (*)(char *, _QWORD, uint64_t))v47)(v20, enum case for MetricClickElement.button(_:), v48);
    v61 = sub_1003190E8((uint64_t)_swiftEmptyArrayStorage);
    v62 = v120;
    MetricLocation.init(identifier:identifierType:index:name:elementType:metadata:)(v52, v53, 0x64695F737469, 0xE600000000000000, v106, v57, v59, v20, v61);
    v127 = v125;
    (*(void (**)(char *, _QWORD, uint64_t))(v123 + 104))(v121, enum case for MetricClickAction.navigate(_:), v124);
    ((void (*)(char *, uint64_t, uint64_t))v47)(v20, v60, v48);
    v63 = enum case for MetricClickDestination.trainerTip(_:);
    v64 = type metadata accessor for MetricClickDestination(0);
    v65 = *(_QWORD *)(v64 - 8);
    v66 = v122;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 104))(v122, v63, v64);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v66, 0, 1, v64);
    v67 = enum case for MetricPageCategory.summary(_:);
    v68 = type metadata accessor for MetricPageCategory(0);
    v69 = *(_QWORD *)(v68 - 8);
    v70 = v107;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 104))(v107, v67, v68);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v70, 0, 1, v68);
    v71 = enum case for MetricPageContext.summary(_:);
    v72 = type metadata accessor for MetricPageContext(0);
    v73 = *(_QWORD *)(v72 - 8);
    v74 = v108;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 104))(v108, v71, v72);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v74, 0, 1, v72);
    v75 = type metadata accessor for URL(0);
    v76 = v109;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v109, 1, 1, v75);
    swift_bridgeObjectRetain(v53);
    v77 = v112;
    MetricPage.init(pageIdentifier:pageType:pageContext:pageUrl:pageName:)(1701670760, 0xE400000000000000, v70, v74, v76, 0, 0);
    v78 = sub_100047110(&qword_1008283D8);
    v79 = v110;
    v80 = *(_QWORD *)(v110 + 72);
    v81 = *(unsigned __int8 *)(v110 + 80);
    v82 = (v81 + 32) & ~v81;
    v83 = swift_allocObject(v78, v82 + 2 * v80, v81 | 7);
    *(_OWORD *)(v83 + 16) = xmmword_100620BC0;
    v84 = v83 + v82;
    v85 = *(void (**)(uint64_t, char *, uint64_t))(v79 + 16);
    v86 = v62;
    v87 = v111;
    v85(v84, v86, v111);
    v85(v84 + v80, v103, v87);
    v126 = *(_QWORD *)(v125 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_impressionsTracker);
    swift_retain(v126);
    v88 = v115;
    Date.init()(v89);
    v90 = type metadata accessor for ActivityTileImpressionsTracker();
    v91 = sub_100028404(&qword_1008282D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for ActivityTileImpressionsTracker, (uint64_t)&unk_10063DE80);
    v92 = MetricImpressionConsuming.snapshotOnScreenImpressions(on:)(v88, v90, v91);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v88, v117);
    swift_release(v126);
    v93 = type metadata accessor for ActivityTileViewController();
    v95 = sub_100028404(&qword_1008283E0, v94, (uint64_t (*)(uint64_t))type metadata accessor for ActivityTileViewController, (uint64_t)&unk_10062E4C0);
    v96 = v121;
    v97 = v53;
    v98 = v53;
    v99 = (uint64_t)v122;
    MetricClickPublishing.publishClick(actionType:targetType:targetIdentifier:targetIdentifierType:metricPage:locations:impressions:topicRoutingBehavior:)(v121, v20, v105, v98, v122, v77, v83, v92, 1, v93, v95);
    swift_bridgeObjectRelease(v97);
    swift_bridgeObjectRelease(v83);
    v100 = swift_bridgeObjectRelease(v92);
    (*(void (**)(char *, uint64_t, __n128))(v113 + 8))(v77, v114, v100);
    sub_10001BE90(v99, &qword_1008283D0);
    (*(void (**)(char *, uint64_t))(v118 + 8))(v20, v119);
    (*(void (**)(char *, uint64_t))(v123 + 8))(v96, v124);
    v101 = *(void (**)(char *, uint64_t))(v79 + 8);
    v101(v120, v87);
    v101(v103, v87);
    return sub_100011F54((uint64_t)v102, type metadata accessor for CatalogTipSection);
  }
}

uint64_t sub_100211B4C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  char *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char v96[32];

  v78 = type metadata accessor for Logger(0);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v79 = (char *)&v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100047110(&qword_10082E5C0);
  __chkstk_darwin(v2);
  v91 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v85 = *(_QWORD *)(v4 - 8);
  v86 = v4;
  __chkstk_darwin(v4);
  v88 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110((uint64_t *)&unk_1008283A0);
  __chkstk_darwin(v6);
  v87 = (uint64_t)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MetricPageContext(0);
  v83 = *(_QWORD *)(v8 - 8);
  v84 = v8;
  __chkstk_darwin(v8);
  v93 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for CatalogTipPlayerOptions(0);
  v80 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v92 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CatalogTipSummaryNavigationHandlers(0);
  v89 = *(_QWORD *)(v11 - 8);
  v90 = v11;
  __chkstk_darwin(v11);
  v94 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100824DE0);
  __chkstk_darwin(v13);
  v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CatalogTipSection(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v19 = __chkstk_darwin(v16);
  v20 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v22 = (char *)&v74 - v21;
  v23 = v0;
  v24 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                  + 48)
      + OBJC_IVAR____TtC10FitnessApp31CatalogTipActivityTileDataModel_tipSection;
  swift_beginAccess(v24, v96, 0, 0);
  sub_100021CC0(v24, (uint64_t)v15, &qword_100824DE0);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v81 = v16;
  if (v25(v15, 1, v16) == 1)
  {
    v26 = v77;
    v27 = v78;
    v28 = sub_10001BE90((uint64_t)v15, &qword_100824DE0);
    v29 = v79;
    v30 = static Log.default.getter(v28);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.error.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "[ActivityTileViewController] tip row selected with no tip section", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v29, v27);
  }
  else
  {
    sub_100047C88((uint64_t)v15, (uint64_t)v22, type metadata accessor for CatalogTipSection);
    v35 = swift_allocObject(&unk_10078F0B0, 24, 7);
    swift_unknownObjectWeakInit(v35 + 16, v0);
    v36 = swift_allocObject(&unk_10078F0B0, 24, 7);
    v76 = v0;
    swift_unknownObjectWeakInit(v36 + 16, v0);
    v75 = v22;
    sub_10004F8C8((uint64_t)v22, (uint64_t)v20, type metadata accessor for CatalogTipSection);
    v37 = *(unsigned __int8 *)(v17 + 80);
    v38 = (v37 + 24) & ~v37;
    v39 = swift_allocObject(&unk_10078F330, v38 + v18, v37 | 7);
    *(_QWORD *)(v39 + 16) = v36;
    v40 = v39 + v38;
    v41 = v39;
    v79 = (char *)v39;
    sub_100047C88((uint64_t)v20, v40, type metadata accessor for CatalogTipSection);
    v78 = v35;
    swift_retain(v35);
    swift_retain(v41);
    CatalogTipSummaryNavigationHandlers.init(onLearnMoreTapped:onSeeMoreTipsTapped:)(sub_1002182D8, v35, sub_100218484, v41);
    v77 = type metadata accessor for CatalogTipPlayerPresenter(0);
    v74 = *(_QWORD *)&v23[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_dependencies];
    v42 = v74;
    v43 = sub_100047110(&qword_1008283B0);
    v44 = swift_allocObject(v43, ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ 2 * *(_QWORD *)(v80 + 72), *(unsigned __int8 *)(v80 + 80) | 7);
    *(_OWORD *)(v44 + 16) = xmmword_100620BC0;
    swift_retain(v42);
    v46 = static CatalogTipPlayerOptions.summary.getter(v45);
    static CatalogTipPlayerOptions.catalogSync.getter(v46);
    v95 = v44;
    v47 = sub_100028404(&qword_1008283B8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for CatalogTipPlayerOptions, (uint64_t)&protocol conformance descriptor for CatalogTipPlayerOptions);
    v48 = sub_100047110(&qword_1008283C0);
    v49 = sub_1000283C4(&qword_1008283C8, &qword_1008283C0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v95, v48, v49, v82, v47);
    (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v93, enum case for MetricPageContext.summary(_:), v84);
    v50 = &v22[*(int *)(v81 + 24)];
    v51 = (int *)type metadata accessor for CatalogTipSectionItem(0);
    v52 = v87;
    sub_100021CC0((uint64_t)&v50[v51[8]], v87, (uint64_t *)&unk_1008283A0);
    v53 = &v50[v51[9]];
    v54 = *(_QWORD *)v53;
    v55 = *((_QWORD *)v53 + 1);
    v56 = (uint64_t *)&v50[v51[10]];
    v57 = *v56;
    v58 = v56[1];
    v83 = v54;
    v84 = v57;
    v59 = v51[12];
    v60 = (uint64_t *)&v50[v51[11]];
    v61 = v60[1];
    v82 = *v60;
    v62 = v88;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v88, &v50[v59], v86);
    v64 = v89;
    v63 = v90;
    v65 = v91;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v91, v94, v90);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v65, 0, 1, v63);
    v66 = &v50[v51[7]];
    v68 = *(_QWORD *)v66;
    v67 = *((_QWORD *)v66 + 1);
    swift_bridgeObjectRetain(v61);
    swift_bridgeObjectRetain(v67);
    swift_bridgeObjectRetain(v55);
    v69 = swift_bridgeObjectRetain(v58);
    v70 = CatalogTipPlayerPresenter.__allocating_init(dependencies:metricTopicRoutingBehavior:options:pageContext:streamingArtwork:streamingArtworkCropCode:streamingSubtitle:streamingTitle:streamingURL:summaryNavigationHandlers:tipIdentifier:)(v74, 1, v92, v93, v52, v83, v55, v84, v69, v58, v82, v61, v62, v65, v68, v67);
    v71 = objc_allocWithZone((Class)type metadata accessor for CatalogTipPlayerViewController(0));
    swift_retain(v70);
    v73 = (void *)CatalogTipPlayerViewController.init(presenter:)(v72);
    objc_msgSend(v76, "presentViewController:animated:completion:", v73, 1, 0);
    swift_release(v78);
    swift_release(v79);
    swift_release(v70);

    (*(void (**)(char *, uint64_t))(v64 + 8))(v94, v63);
    return sub_100011F54((uint64_t)v75, type metadata accessor for CatalogTipSection);
  }
}

void sub_100212330(uint64_t a1)
{
  char *v1;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  id v17;
  id v18;
  uint64_t v19;

  v3 = &v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_initialPresentation];
  if (v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_visibility])
  {
    v4 = v1;
    *(_QWORD *)v3 = 0;
    v3[8] = 1;
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_dependencies];
    v6 = (uint64_t *)(*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext]
                   + OBJC_IVAR___CHFitnessAppContext_accountFitnessSettingsProvider);
    v7 = *v6;
    v8 = v6[1];
    v9 = objc_allocWithZone((Class)type metadata accessor for AccountViewController(0));
    swift_retain(v5);
    swift_unknownObjectRetain(v7);
    v10 = (void *)AccountViewController.init(dependencies:fitnessSettingsProvider:)(v5, v7, v8);
    v17 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v10);
    switch(a1)
    {
      case 0:
        goto LABEL_10;
      case 1:
        v11 = objc_allocWithZone((Class)type metadata accessor for NotificationSettingsViewController(0));
        v12 = swift_retain(v5);
        v13 = (id)NotificationSettingsViewController.init(dependencies:)(v12);
        goto LABEL_9;
      case 2:
        v13 = objc_msgSend(objc_allocWithZone((Class)CHASActivitySetupMetricsCollectionViewController), "initWithPresentationContext:", 6);
        goto LABEL_9;
      case 3:
        ObjectType = swift_getObjectType(v7);
        swift_unknownObjectRetain(v7);
        v15 = dispatch thunk of AccountFitnessSettingsProviding.makeChangeGoalsViewController()(ObjectType, v8);
        goto LABEL_8;
      case 4:
        v14 = swift_getObjectType(v7);
        swift_unknownObjectRetain(v7);
        v15 = dispatch thunk of AccountFitnessSettingsProviding.makeUnitsViewController()(v14, v8);
LABEL_8:
        v13 = (id)v15;
        swift_unknownObjectRelease(v7);
        if (v13)
        {
LABEL_9:
          objc_msgSend(v17, "pushViewController:animated:", v13, 0, v17);

        }
LABEL_10:
        objc_msgSend(v4, "presentViewController:animated:completion:", v17, 1, 0, v17);

        break;
      default:
        v19 = a1;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for AppSettingsPane, &v19, &type metadata for AppSettingsPane, &type metadata for Int);
        __break(1u);
        break;
    }
  }
  else
  {
    *(_QWORD *)v3 = a1;
    v3[8] = 0;
  }
}

void sub_1002125A4(char a1, uint64_t a2)
{
  uint64_t v3;
  os_log_type_t v4;
  void *v5;
  os_log_type_t v6;
  NSObject *v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a2 && (a1 & 1) == 0)
  {
    v3 = swift_errorRetain(a2);
    v4 = static os_log_type_t.error.getter(v3);
    v5 = (void *)HKLogActivity;
    v6 = v4;
    if (os_log_type_enabled(HKLogActivity, v4))
    {
      swift_errorRetain(a2);
      swift_errorRetain(a2);
      v7 = v5;
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v8 = 138412290;
      swift_errorRetain(a2);
      v10 = _swift_stdlib_bridgeErrorToNSError(a2);
      v12 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v8 + 4);
      *v9 = v10;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v7, v6, "presentWorkoutStructureData failed with error: %@", v8, 0xCu);
      v11 = sub_100047110(&qword_10081E648);
      swift_arrayDestroy(v9, 1, v11);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);
      swift_errorRelease(a2);

    }
    else
    {
      swift_errorRelease(a2);
    }
  }
}

void sub_100212840(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext);

    sub_1005348FC();
  }
}

void sub_1002128A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext);

    sub_100535C7C(a2);
  }
}

char *sub_100212924(void *a1, int a2, int a3, char a4, uint64_t a5, char a6)
{
  char *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  char *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  char *v56;
  void *v57;
  void *v58;
  char *v59;
  id v60;
  void *v61;
  __n128 v62;
  void *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  id v99;
  id v100;
  char *v101;
  void (*v102)();
  id v103;
  id v104;
  void *v105;
  char *v106;
  id v107;
  id v108;
  void *v109;
  char **v110;
  int v111;
  int v112;
  uint64_t v113;
  int v114;
  id v115;
  _QWORD aBlock[3];
  void *v117;
  void (*v118)();
  uint64_t v119;

  v113 = a5;
  v98 = a3;
  v114 = a2;
  LODWORD(v115) = a4 & 1;
  v112 = a6 & 1;
  v97 = type metadata accessor for DispatchWorkItemFlags(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for DispatchQoS(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for DispatchTime(0);
  v89 = *(_QWORD *)(v91 - 8);
  v11 = __chkstk_darwin(v91);
  v88 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v90 = (char *)&v88 - v14;
  if ((a4 & 1) != 0)
  {
    v15 = 1;
  }
  else
  {
    v13 = sub_1002132C0();
    v15 = v13;
  }
  LODWORD(v110) = static os_log_type_t.default.getter(v13);
  v16 = (void *)HKLogActivity;
  v17 = sub_100047110((uint64_t *)&unk_100827460);
  v18 = swift_allocObject(v17, 152, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100624A40;
  *(_QWORD *)(v18 + 56) = &type metadata for String;
  v19 = sub_100038CF8();
  *(_QWORD *)(v18 + 64) = v19;
  *(_QWORD *)(v18 + 32) = 0xD000000000000050;
  *(_QWORD *)(v18 + 40) = 0x8000000100690600;
  v20 = v16;
  v21 = a1;
  v22 = objc_msgSend(v21, "description");
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  *(_QWORD *)(v18 + 96) = &type metadata for String;
  *(_QWORD *)(v18 + 104) = v19;
  *(_QWORD *)(v18 + 72) = v23;
  *(_QWORD *)(v18 + 80) = v25;
  v111 = v15 & 1;
  LOBYTE(aBlock[0]) = v15 & 1;
  BYTE1(aBlock[0]) = (_BYTE)v115;
  v26 = String.init<A>(describing:)(aBlock, &type metadata for CelebrationContext);
  *(_QWORD *)(v18 + 136) = &type metadata for String;
  *(_QWORD *)(v18 + 144) = v19;
  *(_QWORD *)(v18 + 112) = v26;
  *(_QWORD *)(v18 + 120) = v27;
  os_log(_:dso:log:_:_:)(v110, &_mh_execute_header, v20, "%@ presenting today view for %{public}@ with celebration context %{public}@", 75, 2, v18);

  *(_QWORD *)&v28 = swift_bridgeObjectRelease(v18).n128_u64[0];
  v29 = *(char **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDateCache];
  v30 = OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate;
  LOBYTE(v20) = objc_msgSend(*(id *)&v29[OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate], "isEqualToDate:", v21, v28);
  v31 = *(void **)&v29[v30];
  *(_QWORD *)&v29[v30] = v21;
  v32 = v21;

  if ((v20 & 1) == 0)
  {
    v33 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_10081D748 != -1)
      swift_once(&qword_10081D748, sub_1001E2C48);
    objc_msgSend(v33, "postNotificationName:object:", qword_10086A0E0, v6);

  }
  v34 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDataProvider];
  v35 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
  v36 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionDataProvider];
  v37 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
  v105 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
  v103 = *(id *)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
  sub_1000252E0((uint64_t)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)aBlock);
  v38 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
  v39 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutDataProvider];
  v104 = *(id *)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager];
  v40 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
  v107 = *(id *)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  v108 = v40;
  v109 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  v106 = (char *)objc_allocWithZone((Class)type metadata accessor for HistoryPagingViewController(0));
  v41 = (uint64_t)v117;
  v102 = v118;
  v42 = sub_10017C044((uint64_t)aBlock, (uint64_t)v117);
  v110 = &v88;
  __chkstk_darwin(v42);
  v44 = (char *)&v88 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v45 + 16))(v44);
  v111 |= (_DWORD)v115 << 8;
  v115 = v34;
  v101 = v29;
  v100 = v35;
  v99 = v36;
  v46 = v37;
  v105 = v105;
  v47 = v103;
  v48 = v38;
  v49 = v39;
  v103 = v49;
  v50 = v104;
  v104 = v50;
  v51 = v107;
  v107 = v51;
  v52 = v108;
  v108 = v52;
  v109 = v109;
  v87 = v41;
  v86 = v52;
  v84 = v50;
  v85 = v51;
  v82 = v48;
  v83 = v49;
  v53 = v48;
  v54 = v115;
  v55 = v100;
  v56 = v101;
  v57 = v99;
  v58 = v105;
  v59 = (char *)sub_10021C478(v115, v101, v100, v99, v46, v105, v47, (uint64_t)v44, v82, v83, v84, v85, v86, v109, v111, v113, v112, 0, v106,
                  v87,
                  (uint64_t)v102);

  _s10FitnessApp24HistoryViewActionContextVwxx_0(aBlock);
  swift_unknownObjectWeakAssign(&v59[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_delegate], v6);
  v60 = objc_msgSend(v6, "navigationController");
  if (v60)
  {
    v61 = v60;
    objc_msgSend(v60, "pushViewController:animated:", v59, v98 & 1);

  }
  if ((v114 & 1) != 0)
  {
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v63 = (void *)static OS_dispatch_queue.main.getter(v62);
    v64 = v88;
    static DispatchTime.now()(v63);
    v65 = v90;
    + infix(_:_:)(v64, 0.1);
    v115 = *(id *)(v89 + 8);
    v66 = v91;
    ((void (*)(char *, uint64_t))v115)(v64, v91);
    v67 = swift_allocObject(&unk_10078F2B8, 24, 7);
    *(_QWORD *)(v67 + 16) = v59;
    v118 = sub_1002182D0;
    v119 = v67;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    v117 = &unk_10078F2D0;
    v68 = _Block_copy(aBlock);
    v69 = v119;
    v70 = v59;
    swift_release(v69);
    v71 = v92;
    static DispatchQoS.unspecified.getter(v72);
    aBlock[0] = _swiftEmptyArrayStorage;
    v73 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v74 = v59;
    v75 = sub_100047110(&qword_100828C80);
    v76 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
    v77 = v95;
    v78 = v75;
    v79 = v97;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v78, v76, v97, v73);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v65, v71, v77, v68);
    _Block_release(v68);

    v80 = v79;
    v59 = v74;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v77, v80);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v71, v94);
    ((void (*)(char *, uint64_t))v115)(v65, v66);
  }
  return v59;
}

uint64_t sub_1002132C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  NSString v16;
  unsigned int v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  double v24;
  double v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  double v31;
  id v32;
  double v33;
  double v34;
  uint64_t v35;
  char *v36;
  char *v37;
  id v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  char v49;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v57 = type metadata accessor for Calendar(0);
  v59 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v58 = (char *)&v51 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v1);
  v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v51 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v51 - v12;
  v14 = (void *)objc_opt_self(NSUserDefaults);
  v15 = objc_msgSend(v14, "standardUserDefaults");
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "BOOLForKey:", v16);

  if (!v17)
    goto LABEL_15;
  v53 = v3;
  v54 = v8;
  v52 = v11;
  v55 = v5;
  v56 = v4;
  Date.init()(v18);
  v19 = objc_msgSend(*(id *)(*(_QWORD *)(v60 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDataProvider)+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache), "activitySummaryForCacheIndex:", sub_1000237E8());
  if (!v19)
    goto LABEL_14;
  v20 = v19;
  if ((objc_msgSend(v19, "_isStandalonePhoneSummary") & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v56);

LABEL_15:
    v49 = 0;
    return v49 & 1;
  }
  if (objc_msgSend(v20, "activityMoveMode") == (id)2)
  {
    v21 = objc_msgSend(v20, "appleMoveTime");
    v22 = (void *)objc_opt_self(HKUnit);
    v23 = objc_msgSend(v22, "minuteUnit");
    objc_msgSend(v21, "doubleValueForUnit:", v23);
    v25 = v24;

    v26 = objc_msgSend(v20, "appleMoveTimeGoal");
    v27 = objc_msgSend(v22, "minuteUnit");
  }
  else
  {
    v28 = objc_msgSend(v20, "activeEnergyBurned");
    v29 = (void *)objc_opt_self(HKUnit);
    v30 = objc_msgSend(v29, "kilocalorieUnit");
    objc_msgSend(v28, "doubleValueForUnit:", v30);
    v25 = v31;

    v26 = objc_msgSend(v20, "activeEnergyBurnedGoal");
    v27 = objc_msgSend(v29, "kilocalorieUnit");
  }
  v32 = v27;
  objc_msgSend(v26, "doubleValueForUnit:", v32);
  v34 = v33;
  v36 = v58;
  v35 = v59;
  v37 = v54;

  if (v34 <= 0.0 || v34 > v25)
  {

LABEL_14:
    (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v56);
    goto LABEL_15;
  }
  v38 = objc_msgSend(v14, "standardUserDefaults");
  v39 = String._bridgeToObjectiveC()();
  v40 = objc_msgSend(v38, "hk_dateForKey:", v39);

  if (!v40)
  {
    v42 = v55;
    v41 = v56;
    v44 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v53, 1, 1, v56);
    goto LABEL_18;
  }
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v40);

  v42 = v55;
  v41 = v56;
  v43 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  v44 = (uint64_t)v53;
  v43(v53, v37, v56);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v44, 0, 1, v41);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v44, 1, v41) == 1)
  {
LABEL_18:

    (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v41);
    sub_10001BE90(v44, (uint64_t *)&unk_100828370);
    v49 = 1;
    return v49 & 1;
  }
  v45 = v52;
  v46 = ((uint64_t (*)(char *, uint64_t, uint64_t))v43)(v52, v44, v41);
  static Calendar.current.getter(v46);
  v47 = Calendar.isDate(_:inSameDayAs:)(v45, v13);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v57);
  v48 = *(void (**)(char *, uint64_t))(v42 + 8);
  v48(v45, v41);
  v48(v13, v41);
  v49 = v47 ^ 1;
  return v49 & 1;
}

void sub_1002137F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v3 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController), "currentlyDisplayedViewController");
  v1 = type metadata accessor for HistoryDayViewController(0);
  v2 = swift_dynamicCastClass(v3, v1);
  if (v2)
  {
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary))
      sub_10047C518();
    else
      *(_BYTE *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_shareWhenDataLoads) = 1;
  }

}

void sub_100213888(void *a1, void *a2, uint64_t a3, void *a4)
{
  char *v4;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  objc_class *v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  objc_class *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  objc_class *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  char *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  objc_class *v41;
  Class v42;
  id string_8a;
  char *v47;
  char *v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  char *v70;
  objc_super v71;
  objc_super v72;
  _QWORD v73[6];
  Swift::String v74;

  v6 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
  v7 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiModel];
  v8 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  v9 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
  v10 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutDataProvider];
  v49 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
  v52 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
  v55 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
  v58 = *(id *)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
  v11 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
  v61 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  v40 = (uint64_t)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider];
  sub_1000252E0((uint64_t)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)v73);
  v12 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  v13 = objc_allocWithZone(v12);
  sub_1000252E0((uint64_t)v73, (uint64_t)v13 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v72.receiver = v13;
  v72.super_class = v12;
  v41 = v12;
  v69 = a1;
  v14 = v6;
  v65 = v7;
  v67 = v8;
  v63 = v9;
  v15 = v10;
  v50 = v49;
  v53 = v52;
  v56 = v55;
  v16 = v58;
  v17 = v11;
  v18 = v61;
  v59 = objc_msgSendSuper2(&v72, "init");
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v73);
  v62 = objc_msgSend(objc_allocWithZone((Class)CHWorkoutDetailViewController), "initWithWorkout:workoutActivity:healthStore:model:fitnessAppContext:workoutFormattingManager:workoutDataProvider:badgeImageFactory:friendListManager:achievementLocalizationProvider:pauseRingsCoordinator:achievementResourceProvider:formattingManager:awardsDataProvider:", v69, 0, v14, v65, v67, v63, v15, v50, v53, v56, v16, v17, v18, v59);

  v47 = v14;
  v39 = v16;

  v38 = v17;
  v19 = v18;

  v20 = v62;
  if (v62)
  {
    v21 = objc_msgSend(v4, "navigationController");
    v22 = a4;
    if (v21)
    {
      v23 = v21;
      objc_msgSend(v21, "pushViewController:animated:", v62, a4 == 0);

    }
    if (a2)
    {
      v60 = v4;
      v24 = a2;
      if (objc_msgSend(v69, "isMultiSportWorkout"))
      {
        sub_1000252E0(v40, (uint64_t)v73);
        v25 = objc_allocWithZone(v41);
        sub_1000252E0((uint64_t)v73, (uint64_t)v25 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
        v71.receiver = v25;
        v71.super_class = v41;
        v26 = v69;
        v70 = v47;
        v66 = v65;
        v68 = v67;
        v64 = v63;
        v27 = v15;
        v28 = v50;
        v29 = v53;
        string_8a = v56;
        v48 = v39;
        v51 = v38;
        v54 = v19;
        v42 = v24;
        v30 = v24;
        v57 = objc_msgSendSuper2(&v71, "init");
        _s10FitnessApp24HistoryViewActionContextVwxx_0(v73);
        v31 = objc_msgSend(objc_allocWithZone((Class)CHWorkoutDetailViewController), "initWithWorkout:workoutActivity:healthStore:model:fitnessAppContext:workoutFormattingManager:workoutDataProvider:badgeImageFactory:friendListManager:achievementLocalizationProvider:pauseRingsCoordinator:achievementResourceProvider:formattingManager:awardsDataProvider:", v26, v30, v70, v66, v68, v64, v27, v28, v29, string_8a, v48, v51, v54, v57);

        if (v31)
        {
          v32 = v31;
          v33 = objc_msgSend(v60, "navigationController");
          v22 = a4;
          if (v33)
          {
            v34 = v33;
            objc_msgSend(v33, "pushViewController:animated:", v32, a4 == 0);

          }
          v35 = v32;
          v20 = v62;
        }
        else
        {
          v35 = 0;
          v20 = v62;
          v32 = v62;
          v22 = a4;
        }
        v24 = v42;
      }
      else
      {
        v35 = 0;
        v32 = v62;
      }

    }
    else
    {
      v35 = 0;
      v32 = v62;
    }
    v36 = v32;
    if (v22)
    {
      swift_bridgeObjectRetain(v22);
      v74._countAndFlagsBits = a3;
      v74._object = v22;
      v37 = (char *)&loc_100213DAC + dword_100213E3C[sub_100382D28(v74)];
      __asm { BR              X10 }
    }

  }
}

void sub_100213E68(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  objc_class *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  char *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  objc_super v43;
  _QWORD v44[5];

  v2 = v1;
  v4 = type metadata accessor for FitnessPlusStackViewModel(0);
  __chkstk_darwin(v4);
  v42 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004F8C8(a1, v42, v6);
  v7 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_historyDataProvider];
  v8 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  v9 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  v10 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
  v11 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiModel];
  v12 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
  v13 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
  v14 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
  v35 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
  v15 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
  v32 = v14;
  v33 = v15;
  sub_1000252E0((uint64_t)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)v44);
  v16 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  v17 = objc_allocWithZone(v16);
  sub_1000252E0((uint64_t)v44, (uint64_t)v17 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v43.receiver = v17;
  v43.super_class = v16;
  v41 = v7;
  v40 = v8;
  v39 = v9;
  v38 = v10;
  v37 = v11;
  v36 = v12;
  v34 = v13;
  v18 = v32;
  v19 = v35;
  v20 = v33;
  v21 = objc_msgSendSuper2(&v43, "init");
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v44);
  v22 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_stackFormattingManager];
  v23 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
  v24 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager];
  v25 = objc_allocWithZone((Class)type metadata accessor for StackDetailViewController(0));
  v26 = v22;
  v27 = v23;
  v28 = v24;
  v29 = sub_100234484(v42, v41, v40, v39, v38, v37, v36, v34, v18, v19, v20, v21, v26, v27, v28);
  v30 = objc_msgSend(v2, "navigationController");
  if (v30)
  {
    v31 = v30;
    objc_msgSend(v30, "pushViewController:animated:", v29, 1);

  }
}

void sub_1002140F0(void *a1, char a2)
{
  char *v2;
  char *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  objc_class *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  __int16 v25;
  unsigned __int16 v26;
  id v27;
  void *v28;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  objc_super v42;
  _QWORD v43[6];

  v3 = v2;
  v4 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_historyDataProvider];
  v5 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  v6 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  v7 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
  v8 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
  v9 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiModel];
  v31 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
  v32 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
  v36 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
  v34 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
  v35 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
  sub_1000252E0((uint64_t)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)v43);
  v10 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  v11 = objc_allocWithZone(v10);
  sub_1000252E0((uint64_t)v43, (uint64_t)v11 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v42.receiver = v11;
  v42.super_class = v10;
  v40 = v4;
  v39 = v5;
  v38 = v6;
  v37 = v7;
  v33 = v8;
  v30 = v9;
  v12 = v31;
  v13 = v32;
  v14 = v34;
  v15 = v36;
  v16 = v35;
  v17 = objc_msgSendSuper2(&v42, "init");
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v43);
  v18 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager];
  v19 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_stackFormattingManager];
  v20 = objc_allocWithZone((Class)type metadata accessor for HistoryListViewController());
  sub_1004FFCB8(v40, v39, v38, v37, v33, v30, v12, v13, v14, v15, v16, v17, v18, v19);
  v22 = v21;
  if (a1)
  {
    v23 = a1;
    if (objc_msgSend(v23, "effectiveTypeIdentifier") == (id)84)
    {
      v24 = 0;
      v25 = 1024;
    }
    else
    {
      if (objc_msgSend((id)objc_opt_self(CHWorkoutTypeKey), "historyFilterDisambiguatesLocationForActivityType:", objc_msgSend(v23, "identifier")))v26 = (unsigned __int16)objc_msgSend(v23, "isIndoor");
      else
        v26 = 2;
      v24 = objc_msgSend(v23, "identifier");
      v25 = v26;
    }
    sub_100500CEC((uint64_t)v24, v25);

  }
  else
  {
    sub_100500CEC(0, 768);
  }
  v27 = objc_msgSend(v3, "navigationController");
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v27, "pushViewController:animated:", v22, a2 & 1);

  }
}

void sub_100214448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  Class isa;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  id v31;
  void *v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _QWORD aBlock[5];
  uint64_t v40;

  v38 = a3;
  v36 = a2;
  v6 = sub_100047110((uint64_t *)&unk_10082E690);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)objc_opt_self(HKQuery);
  v11 = sub_100047110((uint64_t *)&unk_10082E670);
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(v11, v15 + *(_QWORD *)(v13 + 72), v14 | 7);
  *(_OWORD *)(v16 + 16) = xmmword_100622F90;
  v17 = v16 + v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v17, a1, v12);
  v18 = sub_100230D30(v16);
  swift_setDeallocating(v16);
  swift_arrayDestroy(v17, 1, v12);
  swift_deallocClassInstance(v16, 32, 7);
  sub_100028404((unint64_t *)&qword_100828330, 255, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  isa = Set._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(v10, "predicateForObjectsWithUUIDs:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v21 = sub_10001E724(0, (unint64_t *)&unk_100828350, HKSampleType_ptr);
  v22 = objc_msgSend((id)swift_getObjCClassFromMetadata(v21), "workoutType");
  sub_100021CC0(v36, (uint64_t)v9, (uint64_t *)&unk_10082E690);
  v23 = *(unsigned __int8 *)(v7 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = (v8 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = swift_allocObject(&unk_10078F218, v26 + 16, v23 | 7);
  sub_100218188((uint64_t)v9, v27 + v24);
  v29 = v37;
  v28 = v38;
  *(_QWORD *)(v27 + v25) = v37;
  v30 = (_QWORD *)(v27 + v26);
  *v30 = v28;
  v30[1] = a4;
  v31 = objc_allocWithZone((Class)HKSampleQuery);
  aBlock[4] = sub_1002181D0;
  v40 = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100008B5C;
  aBlock[3] = &unk_10078F230;
  v32 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a4);
  v33 = v29;
  v34 = objc_msgSend(v31, "initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:", v22, v20, 1, 0, v32);

  _Block_release(v32);
  objc_msgSend(*(id *)&v33[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore], "executeQuery:", v34, swift_release(v40).n128_f64[0]);

}

void sub_100214740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  _QWORD *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  _QWORD aBlock[5];
  _QWORD *v53;

  v51 = a6;
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    return;
  v48 = a7;
  v49 = a5;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 >= 0)
      v44 = a2 & 0xFFFFFFFFFFFFFF8;
    else
      v44 = a2;
    swift_bridgeObjectRetain(a2);
    if (_CocoaArrayWrapper.endIndex.getter(v44))
      goto LABEL_4;
LABEL_17:
    swift_bridgeObjectRelease(a2);
    return;
  }
  v19 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  if (!v19)
    goto LABEL_17;
LABEL_4:
  v47 = v12;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
  }
  else
  {
    if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v20 = *(id *)(a2 + 32);
  }
  v50 = v20;
  swift_bridgeObjectRelease(a2);
  v21 = objc_opt_self(HKWorkout);
  v22 = swift_dynamicCastObjCClass(v50, v21);
  if (v22)
  {
    v23 = (void *)v22;
    v24 = type metadata accessor for UUID(0);
    v25 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(a4, 1, v24) != 1)
    {
      v26 = objc_msgSend(v23, "workoutActivities");
      v27 = sub_10001E724(0, (unint64_t *)&qword_10082E6A0, HKWorkoutActivity_ptr);
      v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

      v46 = &v45;
      __chkstk_darwin(v29);
      *(&v45 - 2) = a4;
      v25 = sub_1003933E0(sub_1002182B4, (uint64_t)(&v45 - 4), v28);
      swift_bridgeObjectRelease(v28);
    }
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v46 = (uint64_t *)static OS_dispatch_queue.main.getter(v30);
    v31 = (_QWORD *)swift_allocObject(&unk_10078F268, 56, 7);
    v33 = v48;
    v32 = v49;
    v31[2] = v49;
    v31[3] = v23;
    v34 = v51;
    v31[4] = v25;
    v31[5] = v34;
    v31[6] = v33;
    aBlock[4] = sub_100218288;
    v53 = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_10078F280;
    v35 = _Block_copy(aBlock);
    v36 = v53;
    swift_bridgeObjectRetain(v33);
    v37 = v32;
    v51 = v50;
    v38 = v25;
    swift_release(v36);
    static DispatchQoS.unspecified.getter(v39);
    aBlock[0] = _swiftEmptyArrayStorage;
    v40 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v41 = sub_100047110(&qword_100828C80);
    v42 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v41, v42, v11, v40);
    v43 = v46;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v18, v14, v35);
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  else
  {

  }
}

uint64_t sub_100214B3C(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  int v19;
  uint64_t *v20;
  char v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  char *v27;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110((uint64_t *)&unk_100828360);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110((uint64_t *)&unk_10082E690);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v26 - v14;
  v16 = objc_msgSend(*a1, "UUID");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v16);

  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
  v17 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_100021CC0((uint64_t)v15, (uint64_t)v9, (uint64_t *)&unk_10082E690);
  sub_100021CC0(a2, v17, (uint64_t *)&unk_10082E690);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v18((uint64_t)v9, 1, v4) == 1)
  {
    sub_10001BE90((uint64_t)v15, (uint64_t *)&unk_10082E690);
    v19 = v18(v17, 1, v4);
    if (v19 == 1)
      v20 = (uint64_t *)&unk_10082E690;
    else
      v20 = (uint64_t *)&unk_100828360;
    if (v19 == 1)
      v21 = -1;
    else
      v21 = 0;
  }
  else
  {
    sub_100021CC0((uint64_t)v9, (uint64_t)v13, (uint64_t *)&unk_10082E690);
    if (v18(v17, 1, v4) == 1)
    {
      sub_10001BE90((uint64_t)v15, (uint64_t *)&unk_10082E690);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
      v21 = 0;
      v20 = (uint64_t *)&unk_100828360;
    }
    else
    {
      v22 = v27;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v27, v17, v4);
      v23 = sub_100028404((unint64_t *)&unk_10082E6B0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v21 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v22, v4, v23);
      v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v22, v4);
      v20 = (uint64_t *)&unk_10082E690;
      sub_10001BE90((uint64_t)v15, (uint64_t *)&unk_10082E690);
      v24(v13, v4);
    }
  }
  sub_10001BE90((uint64_t)v9, v20);
  return v21 & 1;
}

void sub_100214F54(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  Class isa;
  id v14;
  Class v15;
  uint64_t v16;
  id v17;
  void *v18;
  char *v19;
  id v20;
  _QWORD v21[5];
  uint64_t v22;

  v2 = v1;
  v4 = (void *)objc_opt_self(HKQuery);
  v5 = sub_100047110((uint64_t *)&unk_10082E670);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject(v5, v9 + *(_QWORD *)(v7 + 72), v8 | 7);
  *(_OWORD *)(v10 + 16) = xmmword_100622F90;
  v11 = v10 + v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11, a1, v6);
  v12 = sub_100230D30(v10);
  swift_setDeallocating(v10);
  swift_arrayDestroy(v11, 1, v6);
  swift_deallocClassInstance(v10, 32, 7);
  sub_100028404((unint64_t *)&qword_100828330, 255, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  isa = Set._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v4, "predicateForObjectsWithUUIDs:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

  sub_10001E724(0, (unint64_t *)&unk_10082E680, HKCategoryType_ptr);
  v15 = HKCategoryType.init(_:)(HKCategoryTypeIdentifierMindfulSession).super.super.super.isa;
  v16 = swift_allocObject(&unk_10078F178, 24, 7);
  *(_QWORD *)(v16 + 16) = v2;
  v17 = objc_allocWithZone((Class)HKSampleQuery);
  v21[4] = sub_100218084;
  v22 = v16;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = sub_100008B5C;
  v21[3] = &unk_10078F190;
  v18 = _Block_copy(v21);
  v19 = v2;
  v20 = objc_msgSend(v17, "initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:", v15, v14, 1, 0, v18);

  _Block_release(v18);
  objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore], "executeQuery:", v20, swift_release(v22).n128_f64[0]);

}

void sub_1002151B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  __n128 v39;
  void *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  _QWORD aBlock[5];
  uint64_t v59;

  v57 = a4;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v52 - v17;
  v19 = type metadata accessor for UUID(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    return;
  v54 = v10;
  v55 = v9;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 >= 0)
      v51 = a2 & 0xFFFFFFFFFFFFFF8;
    else
      v51 = a2;
    swift_bridgeObjectRetain(a2);
    if (_CocoaArrayWrapper.endIndex.getter(v51))
      goto LABEL_4;
LABEL_18:
    swift_bridgeObjectRelease(a2);
    return;
  }
  v22 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  if (!v22)
    goto LABEL_18;
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
  }
  else
  {
    if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v23 = *(id *)(a2 + 32);
  }
  v56 = v23;
  swift_bridgeObjectRelease(a2);
  v24 = objc_opt_self(HKCategorySample);
  v25 = (void *)swift_dynamicCastObjCClass(v56, v24);
  if (v25)
  {
    v26 = v25;
    v53 = v6;
    v27 = objc_msgSend(v25, "UUID");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v27);

    v28 = objc_msgSend(v26, "startDate");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v28);

    v29 = objc_msgSend(v26, "endDate");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v29);

    v30 = objc_msgSend(v26, "metadata");
    if (v30)
    {
      v31 = v30;
      v32 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v30, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    }
    else
    {
      v32 = 0;
    }
    v33 = objc_msgSend(v26, "sourceRevision");
    v34 = sub_100047110((uint64_t *)&unk_100828340);
    v35 = swift_allocObject(v34, 40, 7);
    *(_OWORD *)(v35 + 16) = xmmword_100623630;
    *(_QWORD *)(v35 + 32) = v26;
    aBlock[0] = v35;
    specialized Array._endMutation()(v35);
    v36 = aBlock[0];
    v37 = objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionViewModel(0));
    v56 = v56;
    v38 = (void *)MindfulnessSessionViewModel.init(uuid:startDate:endDate:duration:metadata:sourceRevision:mindfulnessSessions:)(v21, v18, v16, 0, 1, v32, v33, v36);
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v40 = (void *)static OS_dispatch_queue.main.getter(v39);
    v41 = swift_allocObject(&unk_10078F1C8, 32, 7);
    v42 = v57;
    *(_QWORD *)(v41 + 16) = v57;
    *(_QWORD *)(v41 + 24) = v38;
    aBlock[4] = sub_1002180B8;
    v59 = v41;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_10078F1E0;
    v43 = _Block_copy(aBlock);
    v44 = v59;
    v45 = v42;
    v46 = v38;
    swift_release(v44);
    static DispatchQoS.unspecified.getter(v47);
    aBlock[0] = _swiftEmptyArrayStorage;
    v48 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v49 = sub_100047110(&qword_100828C80);
    v50 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v49, v50, v5, v48);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v43);
    _Block_release(v43);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v55);
  }
  else
  {

  }
}

void sub_10021569C(char *a1, void *a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  char *v9;

  v4 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  v5 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager];
  v6 = objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionDetailViewController(0));
  v9 = sub_1002C26F0(a2, v4, v5);
  v7 = objc_msgSend(a1, "navigationController");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "pushViewController:animated:", v9, 1);

  }
}

void sub_1002157FC(char a1)
{
  char *v1;
  char *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  objc_class *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  objc_super v36;
  _QWORD v37[6];

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_historyDataProvider];
  v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  v6 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
  v7 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
  v8 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiModel];
  v9 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
  v27 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
  v31 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
  v29 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
  v30 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
  sub_1000252E0((uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)v37);
  v10 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  v11 = objc_allocWithZone(v10);
  sub_1000252E0((uint64_t)v37, (uint64_t)v11 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v36.receiver = v11;
  v36.super_class = v10;
  v35 = v3;
  v34 = v4;
  v33 = v5;
  v32 = v6;
  v28 = v7;
  v26 = v8;
  v12 = v9;
  v13 = v27;
  v14 = v29;
  v15 = v31;
  v16 = v30;
  v17 = objc_msgSendSuper2(&v36, "init");
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v37);
  v18 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager];
  v19 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_stackFormattingManager];
  v20 = objc_allocWithZone((Class)type metadata accessor for HistoryListViewController());
  sub_1004FFCB8(v35, v34, v33, v32, v28, v26, v12, v13, v14, v15, v16, v17, v18, v19);
  v22 = v21;
  v23 = objc_msgSend(v2, "navigationController");
  if (v23)
  {
    v24 = v23;
    objc_msgSend(v23, "pushViewController:animated:", v22, a1 & 1);

  }
}

void sub_100215A80(char a1)
{
  char *v1;
  char *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  objc_class *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  objc_super v36;
  _QWORD v37[6];

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_historyDataProvider];
  v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  v6 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
  v7 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
  v8 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiModel];
  v9 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
  v27 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
  v31 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
  v29 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
  v30 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
  sub_1000252E0((uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)v37);
  v10 = (objc_class *)type metadata accessor for CHAwardsDataProvider();
  v11 = objc_allocWithZone(v10);
  sub_1000252E0((uint64_t)v37, (uint64_t)v11 + OBJC_IVAR___CHAwardsDataProvider_awardsDataProvider);
  v36.receiver = v11;
  v36.super_class = v10;
  v35 = v3;
  v34 = v4;
  v33 = v5;
  v32 = v6;
  v28 = v7;
  v26 = v8;
  v12 = v9;
  v13 = v27;
  v14 = v29;
  v15 = v31;
  v16 = v30;
  v17 = objc_msgSendSuper2(&v36, "init");
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v37);
  v18 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_mindfulnessSessionFormattingManager];
  v19 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_stackFormattingManager];
  v20 = objc_allocWithZone((Class)type metadata accessor for HistoryListViewController());
  sub_1004FFCB8(v35, v34, v33, v32, v28, v26, v12, v13, v14, v15, v16, v17, v18, v19);
  v22 = v21;
  sub_100500CEC(0, 1280);
  v23 = objc_msgSend(v2, "navigationController");
  if (v23)
  {
    v24 = v23;
    objc_msgSend(v23, "pushViewController:animated:", v22, a1 & 1);

  }
}

void sub_100215D10(char a1)
{
  char *v1;
  char *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  _BYTE *v19;
  id v20;
  id v21;
  void *v22;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  char *v29;

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
  v4 = (void *)objc_opt_self(ActivitySummaryCache);
  v28 = v3;
  v27 = objc_msgSend(v4, "sharedInstance");
  v5 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  v6 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsDataProvider];
  v7 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsFormattingManager];
  v8 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDataProvider];
  v9 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                 + 32);
  v26 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutDataProvider];
  v25 = v5;
  v24 = v6;
  v10 = v7;
  v11 = v8;
  v12 = sub_10025CBF0();
  v14 = v13;
  v15 = *(_QWORD *)(v9 + 64);
  v16 = *(_QWORD *)(v9 + 72);
  v17 = *(_BYTE *)(v9 + 80);
  v18 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext]
                 + OBJC_IVAR___CHFitnessAppContext_pregnancyStateProvider);
  v19 = objc_allocWithZone((Class)type metadata accessor for TrendsListViewController());
  v20 = v18;
  v29 = sub_10031A734(v28, v27, v26, v25, v24, v10, v11, v12, v14, v15, v16, v17, v18, v19);
  v21 = objc_msgSend(v2, "navigationController");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "pushViewController:animated:", v29, a1 & 1);

  }
}

void sub_100215F00(unint64_t a1, char a2)
{
  char *v2;
  char *v3;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  _BYTE *v22;
  id v23;
  id v24;
  void *v25;
  char v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  char *v33;

  v3 = v2;
  v5 = sub_1004E5E6C(a1);
  if (v5 != 9)
  {
    v6 = v5;
    v26 = a2;
    v7 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
    v8 = (void *)objc_opt_self(ActivitySummaryCache);
    v32 = v7;
    v31 = objc_msgSend(v8, "sharedInstance");
    v9 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
    v10 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsDataProvider];
    v11 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_trendsFormattingManager];
    v12 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityDataProvider];
    v13 = *(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_activityTileViewDataModel]
                    + 32);
    v30 = *(id *)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutDataProvider];
    v29 = v9;
    v28 = v10;
    v27 = v11;
    v14 = v12;
    v15 = sub_10025CBF0();
    v17 = v16;
    v18 = *(_QWORD *)(v13 + 64);
    v19 = *(_QWORD *)(v13 + 72);
    v20 = *(_BYTE *)(v13 + 80);
    v21 = *(void **)(*(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext]
                   + OBJC_IVAR___CHFitnessAppContext_pregnancyStateProvider);
    v22 = objc_allocWithZone((Class)type metadata accessor for TrendsListViewController());
    v23 = v21;
    v33 = sub_10031A734(v32, v31, v30, v29, v28, v27, v14, v15, v17, v18, v19, v20, v21, v22);
    v24 = objc_msgSend(v3, "navigationController");
    if (v24)
    {
      v25 = v24;
      objc_msgSend(v24, "pushViewController:animated:", v33, v26 & 1);

    }
    sub_10033200C(v6);

  }
}

id sub_10021613C(uint64_t a1, char a2)
{
  uint64_t v4;
  id result;

  v4 = objc_opt_self(CHAchievementsCellContentView);
  result = (id)swift_dynamicCastObjCClass(a1, v4);
  if (result)
    return objc_msgSend(result, "setBadgeHidden:", a2 & 1);
  return result;
}

char *sub_100216190(int a1, void *a2, int a3, int a4)
{
  char *v4;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  char *v28;
  id v29;
  void *v30;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  _BYTE *v40;
  id v41;
  id v42;
  id v43;
  int v44;
  int v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;

  v44 = a4;
  v45 = a3;
  v36 = a2;
  HIDWORD(v32) = a1;
  v6 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_healthStore];
  v7 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_friendListManager];
  sub_1000252E0((uint64_t)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_awardsDataProvider], (uint64_t)v46);
  v8 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_badgeImageFactory];
  v9 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fiuiFormattingManager];
  v10 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementResourceProvider];
  v11 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementLocalizationProvider];
  v12 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_fitnessAppContext];
  v38 = *(id *)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_pauseRingsCoordinator];
  v39 = v12;
  v13 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutDataProvider];
  v41 = *(id *)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_workoutFormattingManager];
  v42 = v13;
  v43 = *(id *)&v4[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_wheelchairUseCache];
  v40 = objc_allocWithZone((Class)type metadata accessor for TrophyCaseViewController());
  v14 = v47;
  v37 = v48;
  v15 = sub_10017C044((uint64_t)v46, v47);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  v19 = a2;
  v35 = v6;
  v34 = v7;
  v33 = v8;
  v20 = v9;
  v21 = v10;
  v22 = v11;
  v23 = v38;
  v24 = v39;
  v25 = v41;
  v26 = v42;
  v27 = v43;
  v28 = (char *)sub_10028A41C(v35, v34, (uint64_t)v17, v33, v20, v21, v22, v23, v24, v25, v26, v27, v36, v45, v44, v40, v14, v37);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v46);
  swift_unknownObjectWeakAssign(&v28[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_delegate], v4);
  v29 = objc_msgSend(v4, "navigationController");
  if (v29)
  {
    v30 = v29;
    objc_msgSend(v29, "pushViewController:animated:", v28, BYTE4(v32) & 1);

  }
  return v28;
}

uint64_t sub_100216670(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v5 + 96) = a5;
  *(_BYTE *)(v5 + 136) = a4;
  v6 = type metadata accessor for IndexSet(0);
  *(_QWORD *)(v5 + 104) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 112) = v7;
  *(_QWORD *)(v5 + 120) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 128) = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_100216708, v9, v10);
}

void sub_100216708()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSIndexSet *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;

  v1 = *(unsigned __int8 *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 128));
  if (v1 != 1)
    goto LABEL_12;
  v2 = *(_QWORD *)(v0 + 96) + 16;
  swift_beginAccess(v2, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (!Strong)
    goto LABEL_8;
  v4 = Strong;
  v5 = objc_msgSend(Strong, "tableView");

  if (!v5)
  {
    __break(1u);
    goto LABEL_14;
  }
  v6 = objc_msgSend(v5, "window");

  if (!v6)
  {
LABEL_8:
    v20 = *(_QWORD *)(v0 + 96) + 16;
    swift_beginAccess(v20, v0 + 40, 0, 0);
    v21 = (void *)swift_unknownObjectWeakLoadStrong(v20);
    if (!v21)
      goto LABEL_12;
    v22 = v21;
    v10 = objc_msgSend(v21, "tableView");

    if (v10)
    {
      objc_msgSend(v10, "reloadData");
      goto LABEL_11;
    }
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v7 = *(_QWORD *)(v0 + 96) + 16;
  swift_beginAccess(v7, v0 + 64, 0, 0);
  v8 = (void *)swift_unknownObjectWeakLoadStrong(v7);
  if (!v8)
  {
LABEL_12:
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "tableView");

  if (v10)
  {
    v12 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 88) = &off_100780E38;
    v14 = sub_100028404((unint64_t *)&qword_1008282A8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    v15 = sub_100047110(&qword_1008282B0);
    v16 = sub_1000283C4((unint64_t *)&qword_1008282B8, &qword_1008282B0);
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 88, v15, v16, v13, v14);
    IndexSet._bridgeToObjectiveC()(v17);
    v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    objc_msgSend(v10, "reloadSections:withRowAnimation:", v19, 100);

LABEL_11:
    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
}

double sub_100216944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;

  v8 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = swift_allocObject(&unk_10078F0B0, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v6);
  type metadata accessor for MainActor(0);
  swift_retain(v12);
  v14 = static MainActor.shared.getter(v13);
  v15 = swift_allocObject(&unk_10078F0D8, 48, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = &protocol witness table for MainActor;
  *(_BYTE *)(v15 + 32) = a6;
  *(_QWORD *)(v15 + 40) = v12;
  swift_release(v12);
  v16 = sub_10020D9C0((uint64_t)v10, (uint64_t)&unk_100828290, v15);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

uint64_t sub_100216A5C@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v6 = sub_100047110((uint64_t *)&unk_1008282C0);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)(v11, 0, 0, v6);
  v7 = v12;
  v8 = v13;
  sub_100016804(v11, v12);
  dispatch thunk of ArtworkImageLoading.fetchFallbackArtwork(for:)(v7, v8, a2, a3);
  v9 = sub_100047110(&qword_100822168);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 0, 1, v9);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(v11);
}

double sub_100216B20()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_paletteBannerInsets);
}

void *sub_100216B38()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerViewController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerViewController, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void *sub_100216B84(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerViewController, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t sub_100216BC8()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_summaryBannerActionPresenter));
}

uint64_t sub_100216BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to MarketingPaletteBannerDisplaying<>.showMarketingPaletteBanner(request:)[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1000DA0E4;
  return MarketingPaletteBannerDisplaying<>.showMarketingPaletteBanner(request:)(a1, a2, a3);
}

double sub_100216C44@<D0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  double result;

  v3 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_impressionsTracker);
  a1[3] = type metadata accessor for ActivityTileImpressionsTracker();
  a1[4] = sub_100028404(&qword_1008282D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for ActivityTileImpressionsTracker, (uint64_t)&unk_10063DE80);
  *a1 = v3;
  *(_QWORD *)&result = swift_retain(v3).n128_u64[0];
  return result;
}

uint64_t sub_100216CA8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v0 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110((uint64_t *)&unk_10082E600);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_1008282D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = enum case for MetricPageCategory.summary(_:);
  v10 = type metadata accessor for MetricPageCategory(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 104))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  v12 = enum case for MetricPageContext.summary(_:);
  v13 = type metadata accessor for MetricPageContext(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v5, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v5, 0, 1, v13);
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v2, 1, 1, v15);
  return MetricPage.init(pageIdentifier:pageType:pageContext:pageUrl:pageName:)(1701670760, 0xE400000000000000, v8, v5, v2, 0, 0);
}

uint64_t sub_100216E68()
{
  _QWORD *v0;

  return swift_unknownObjectRetain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_eventHub));
}

uint64_t sub_100216E9C()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_resignActiveObserver);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_resignActiveObserver, v3, 0, 0);
  return swift_unknownObjectRetain(*v1);
}

void *sub_100216EE4(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_resignActiveObserver, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t sub_100216F28(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10062E4E8, a1);
  return MetricResignActiveObserving<>.addResignActiveObserver()(a1, WitnessTable, a2);
}

uint64_t sub_100216F6C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10062E4E8, a1);
  return MetricResignActiveObserving<>.removeResignActiveObserver()(a1, WitnessTable, a2);
}

ValueMetadata *type metadata accessor for ActivityTileViewController.InitialPresentation()
{
  return &type metadata for ActivityTileViewController.InitialPresentation;
}

uint64_t storeEnumTagSinglePayload for ActivityTileViewController.Visibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100217014 + 4 * byte_10062E3B0[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100217048 + 4 * byte_10062E3AB[v4]))();
}

uint64_t sub_100217048(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100217050(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100217058);
  return result;
}

uint64_t sub_100217064(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10021706CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100217070(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100217078(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityTileViewController.Visibility()
{
  return &type metadata for ActivityTileViewController.Visibility;
}

unint64_t sub_100217098()
{
  unint64_t result;

  result = qword_100828270[0];
  if (!qword_100828270[0])
  {
    result = swift_getWitnessTable(&unk_10062E450, &type metadata for ActivityTileViewController.Visibility);
    atomic_store(result, qword_100828270);
  }
  return result;
}

uint64_t sub_1002170DC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100217100()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10021712C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_10082828C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1000EA380;
  return sub_100216670(a1, v4, v5, v6, v7);
}

uint64_t sub_1002171A8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1002187AC;
  return v6(a1);
}

uint64_t sub_10021720C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10082829C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000EA380;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100828298 + dword_100828298))(a1, v4);
}

uint64_t sub_10021727C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1002172E0;
  return v6(a1);
}

uint64_t sub_1002172E0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10021732C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_100217394;
  return v5(v2 + 32);
}

uint64_t sub_100217394()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1002173E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100217408(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1008282E4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000EA380;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1008282E0 + dword_1008282E0))(a1, v4);
}

uint64_t sub_100217478(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1008282FC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000DA0E4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1008282F8 + dword_1008282F8))(a1, v4);
}

uint64_t sub_1002174E8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_100217550;
  return v5(v2 + 16);
}

uint64_t sub_100217550()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 32));
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

void sub_1002175A0(uint64_t a1, void (*a2)(uint64_t, char *))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  void (*v25)(uint64_t, char *);

  v25 = a2;
  v3 = sub_100047110(&qword_100828458);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 64);
  v23 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v24 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v10 = 0;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24)
      goto LABEL_23;
    v20 = *(_QWORD *)(v23 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v24)
        goto LABEL_23;
      v20 = *(_QWORD *)(v23 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v24)
          goto LABEL_23;
        v20 = *(_QWORD *)(v23 + 8 * v10);
        if (!v20)
        {
          v10 = v19 + 3;
          if (v19 + 3 >= v24)
            goto LABEL_23;
          v20 = *(_QWORD *)(v23 + 8 * v10);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v20 - 1) & v20;
    v12 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(a1 + 56);
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v12);
    v15 = type metadata accessor for ImpressionMetrics(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = v13 + *(_QWORD *)(v16 + 72) * v12;
    v18 = (char *)v5 + *(int *)(v3 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v17, v15);
    *v5 = v14;
    v25(v14, v18);
    sub_10001BE90((uint64_t)v5, &qword_100828458);
  }
  v21 = v19 + 4;
  if (v21 >= v24)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v24)
      goto LABEL_23;
    v20 = *(_QWORD *)(v23 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_1002177D0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_delegate], 0);
  v2 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_impressionsTracker;
  v3 = type metadata accessor for ActivityTileImpressionsTracker();
  v4 = (_QWORD *)swift_allocObject(v3, 56, 7);
  type metadata accessor for BasicImpressionsTracker(0);
  v4[2] = BasicImpressionsTracker.__allocating_init(threshold:)(0.5);
  v4[3] = &protocol witness table for BasicImpressionsTracker;
  v4[4] = 0;
  v4[5] = sub_10004D314((uint64_t)_swiftEmptyArrayStorage);
  v4[6] = sub_10004D47C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v0[v2] = v4;
  v5 = &v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_paletteBannerInsets];
  *(double *)v5 = sub_100032C10();
  *((_QWORD *)v5 + 1) = v6;
  *((_QWORD *)v5 + 2) = v7;
  *((_QWORD *)v5 + 3) = v8;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementTransitionAnimator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_transitionAnimatorFromViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_marketingBannerViewController] = 0;
  v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_visibility] = 0;
  v9 = &v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_initialPresentation];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_observers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_keyValueObservers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_resignActiveObserver] = 0;
  v10 = OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_accountButton;
  v11 = type metadata accessor for AccountButton(0);
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v11)), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/ActivityTileViewController.swift", 43, 2, 418, 0);
  __break(1u);
  JUMPOUT(0x100217960);
}

void sub_100217978(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = IndexPath.section.getter(a1);
  switch(v2)
  {
    case 0:

      break;
    case 1:
      v4 = IndexPath.row.getter(v2);
      sub_100210F40(v4);
      break;
    case 2:
      v3 = IndexPath.row.getter(v2);
      sub_100211210(v3);
      sub_100211B4C();
      break;
    case 3:
    case 4:
    case 5:
      return;
    default:
      _StringGuts.grow(_:)(30);
      swift_bridgeObjectRelease(0xE000000000000000);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000038, 0x8000000100690760, "FitnessApp/ActivityTileViewController.swift", 43, 2, 594, 0);
      __break(1u);
      JUMPOUT(0x100217A94);
  }
}

void sub_100217AAC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  unsigned __int8 v27;
  void (*v28)(char *, uint64_t);
  char v29;
  uint64_t v30;
  char v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = v4;
  v36 = a3;
  v9 = sub_100047110(&qword_100828318);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v35 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v35 - v20;
  swift_bridgeObjectRetain(a2);
  v22 = sub_10052F2A0(a1, a2);
  if (v22 == 8)
    goto LABEL_13;
  sub_10052DE10(v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10001BE90((uint64_t)v11, &qword_100828318);
LABEL_13:

    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v11, v12);
  v23 = objc_msgSend(v5, "navigateToTrophyCaseAnimated:initialAchievement:shouldShowCelebration:forModalPresentation:", 0, 0, 0, 0);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
    goto LABEL_13;
  }
  v24 = v23;
  if (!a4)
    goto LABEL_11;
  if (qword_10081DD38 != -1)
    swift_once(&qword_10081DD38, sub_100421E50);
  v25 = sub_100422634(v36, a4);
  if (v25)
  {
    v26 = v25;
    v27 = objc_msgSend(v25, "unearned");
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v19, v21, v12);
    if ((v27 & 1) != 0)
    {
      v28 = *(void (**)(char *, uint64_t))(v13 + 8);
      v28(v19, v12);
      v29 = 0;
    }
    else
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, enum case for AAUIAwardsDataProviderSection.goForIt(_:), v12);
      v30 = sub_100028404((unint64_t *)&unk_100828320, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AAUIAwardsDataProviderSection, (uint64_t)&protocol conformance descriptor for AAUIAwardsDataProviderSection);
      v31 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v16, v12, v30);
      v28 = *(void (**)(char *, uint64_t))(v13 + 8);
      v28(v16, v12);
      v28(v19, v12);
      v29 = v31 ^ 1;
    }
    v32 = sub_100288390(v26, v29 & 1, 1u, 0);
    v33 = objc_msgSend(v24, "navigationController");
    if (v33)
    {
      v34 = v33;
      objc_msgSend(v33, "pushViewController:animated:", v32, 0);

      v28(v21, v12);
    }
    else
    {
      v28(v21, v12);

    }
  }
  else
  {
LABEL_11:
    sub_1002865E0((uint64_t)v21);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
  }
}

void *sub_100217E30(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  id v16;
  os_log_type_t v17;
  void *v18;
  os_log_type_t v19;
  NSObject *v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v4 = a1;
  if (!a1)
    return v4;
  v5 = v3;
  if (a1 == (void *)2)
  {
    v12 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_transitionAnimatorFromViewController);
    if (v12)
    {
      sub_10001E724(0, (unint64_t *)&qword_100828310, UIViewController_ptr);
      v13 = a3;
      v14 = v12;
      v15 = static NSObject.== infix(_:_:)(v14, v13);

      v4 = 0;
      if ((v15 & 1) == 0)
        return v4;
      goto LABEL_9;
    }
    return 0;
  }
  if (a1 != (void *)1)
  {
    v17 = static os_log_type_t.fault.getter(a1);
    v18 = (void *)HKLogActivity;
    v19 = v17;
    if (os_log_type_enabled(HKLogActivity, v17))
    {
      v20 = v18;
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v25 = v22;
      *(_DWORD *)v21 = 136315138;
      v24 = sub_10003E8EC(0xD000000000000037, 0x8000000100690570, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v21 + 4);
      _os_log_impl((void *)&_mh_execute_header, v20, v19, "%s found unexpected UINavigationController.Operation; skipping transition",
        v21,
        0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

    }
    return 0;
  }
  v8 = type metadata accessor for TrophyCaseAwardDetailViewController();
  v4 = 0;
  if (!objc_msgSend(a3, "isKindOfClass:", swift_getObjCClassFromMetadata(v8)))
    return v4;
  v9 = type metadata accessor for ActivityTileViewController();
  if (!objc_msgSend(a2, "isKindOfClass:", swift_getObjCClassFromMetadata(v9)))
    return 0;
  v10 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_transitionAnimatorFromViewController);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_transitionAnimatorFromViewController) = a2;
  v11 = a2;

LABEL_9:
  v4 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp26ActivityTileViewController_achievementTransitionAnimator);
  if (v4)
    v16 = v4;
  return v4;
}

uint64_t sub_100218060()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100218084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1002151B0(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_10021808C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002180B8()
{
  uint64_t v0;

  sub_10021569C(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1002180C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_100047110((uint64_t *)&unk_10082E690) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8 + 8));
  return swift_deallocObject(v0, v8 + 16, v2 | 7);
}

uint64_t sub_100218188(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110((uint64_t *)&unk_10082E690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1002181D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(sub_100047110((uint64_t *)&unk_10082E690) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100214740(a1, a2, a3, v3 + v8, *(void **)(v3 + v9), *(void **)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10021824C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100218288()
{
  uint64_t v0;

  sub_100213888(*(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1002182B4(id *a1)
{
  uint64_t v1;

  return sub_100214B3C(a1, *(_QWORD *)(v1 + 16)) & 1;
}

void sub_1002182D0()
{
  uint64_t v0;

  sub_1002137F4(*(_QWORD *)(v0 + 16));
}

void sub_1002182D8()
{
  uint64_t v0;

  sub_100212840(v0);
}

uint64_t sub_1002182E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v1 = type metadata accessor for CatalogTipSection(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v18 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v19 = v0;
  v5 = v0 + v4;

  v6 = v0 + v4 + *(int *)(v1 + 24);
  v7 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = (int *)type metadata accessor for CatalogTipSectionItem(0);
  v9 = v6 + v8[5];
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v8[6] + 8));
  v13 = swift_bridgeObjectRelease(*(_QWORD *)(v6 + v8[7] + 8));
  v14 = v6 + v8[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v11 + 48))(v14, 1, v10, v13))
    v12(v14, v10);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v8[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v8[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v8[11] + 8));
  v15 = v6 + v8[12];
  v16 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + *(int *)(v1 + 28) + 8));
  return swift_deallocObject(v19, v4 + v18, v3 | 7);
}

void sub_100218484()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CatalogTipSection(0) - 8) + 80);
  sub_1002128A8(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

void sub_1002184B4(char a1)
{
  uint64_t v1;

}

id sub_1002184F0(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), "showAllTrendsAnimated:", a1 & 1);
}

id sub_100218508(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), "navigateToHistoryAnimated:", a1 & 1);
}

uint64_t sub_100218520(void *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  return sub_1002109DC(a1, a2, a3, a4, a5, a6);
}

id sub_100218540(id result, void *a2, void *a3)
{
  id v4;
  id v5;

  if (result)
  {
    v4 = result;
    v5 = a2;
    return a3;
  }
  return result;
}

void sub_10021857C(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_10021060C(a1, v1);
}

void sub_100218584()
{
  uint64_t v0;

  sub_1002108C0(v0);
}

void sub_10021858C()
{
  uint64_t v0;

  sub_100210570(v0);
}

void sub_100218594()
{
  uint64_t v0;

  sub_1002B483C(v0);
}

unint64_t sub_10021859C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100828410;
  if (!qword_100828410)
  {
    v1 = sub_10001E724(255, (unint64_t *)&qword_10082BBF0, ACHAchievement_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100828410);
  }
  return result;
}

id sub_1002185F4()
{
  uint64_t v0;

  return sub_10021613C(*(_QWORD *)(v0 + 16), 1);
}

id sub_100218610()
{
  uint64_t v0;

  return sub_10021613C(*(_QWORD *)(v0 + 16), 0);
}

void sub_10021862C(uint64_t a1)
{
  uint64_t v1;

  sub_10020F834(a1, v1);
}

void sub_100218634(uint64_t a1)
{
  uint64_t v1;

  sub_10020F940(a1, v1);
}

void sub_10021863C(uint64_t a1)
{
  uint64_t v1;

  sub_10020F9E4(a1, v1);
}

id sub_100218644@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "contentSize");
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_100218674(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setContentSize:", *a1, a1[1]);
}

void sub_100218688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100467344(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_100218690(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004674A4(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_100218698(uint64_t a1)
{
  uint64_t v1;

  sub_10020E8C0(a1, v1);
}

uint64_t sub_1002186A0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002186CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100828474);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000DA0E4;
  return sub_10020EF50(a1, v4, v5, v6);
}

uint64_t sub_100218738(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1008284A4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000EA380;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1008284A0 + dword_1008284A0))(a1, v4);
}

void sub_100218844()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  void **v15;
  uint64_t v16;
  id v17;
  _BYTE v18[24];
  void **aBlock;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  void *ObjectType;
  void (*v23)(uint64_t);
  uint64_t v24;

  v1 = (void *)objc_opt_self(NSNotificationCenter);
  v2 = objc_msgSend(v1, "defaultCenter");
  if (qword_10081D740 != -1)
    swift_once(&qword_10081D740, sub_1001E2C14);
  v3 = qword_10086A0D8;
  v4 = (void *)objc_opt_self(NSOperationQueue);
  v5 = objc_msgSend(v4, "mainQueue");
  v6 = swift_allocObject(&unk_10078F878, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v0);
  v23 = sub_10021DAFC;
  v24 = v6;
  aBlock = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_1000398D4;
  ObjectType = &unk_10078F890;
  v7 = _Block_copy(&aBlock);
  v8 = (void **)objc_msgSend(v2, "addObserverForName:object:queue:usingBlock:", v3, 0, v5, v7, swift_release(v24).n128_f64[0]);
  _Block_release(v7);

  ObjectType = (void *)swift_getObjectType(v8);
  aBlock = v8;
  v9 = v0 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_deviceDateListener;
  swift_beginAccess(v0 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_deviceDateListener, v18, 33, 0);
  sub_10004C69C((uint64_t)&aBlock, v9);
  swift_endAccess(v18);
  v10 = objc_msgSend(v1, "defaultCenter");
  if (qword_10081D748 != -1)
    swift_once(&qword_10081D748, sub_1001E2C48);
  v11 = qword_10086A0E0;
  v12 = objc_msgSend(v4, "mainQueue");
  v13 = swift_allocObject(&unk_10078F878, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v0);
  v23 = sub_10021DB04;
  v24 = v13;
  aBlock = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_1000398D4;
  ObjectType = &unk_10078F8B8;
  v14 = _Block_copy(&aBlock);
  v15 = (void **)objc_msgSend(v10, "addObserverForName:object:queue:usingBlock:", v11, 0, v12, v14, swift_release(v24).n128_f64[0]);
  _Block_release(v14);

  ObjectType = (void *)swift_getObjectType(v15);
  aBlock = v15;
  v16 = v0 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_selectedDateListener;
  swift_beginAccess(v0 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_selectedDateListener, v18, 33, 0);
  sub_10004C69C((uint64_t)&aBlock, v16);
  swift_endAccess(v18);
  v17 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v17, "addObserver:selector:name:object:", v0, "checkFlightsClimbedEnabled", UIApplicationDidBecomeActiveNotification, 0);

}

void sub_100218B80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t Strong;
  char *v10;
  id v11;
  void *v12;
  Class isa;
  id v14;
  uint64_t v15;
  id v16;
  _QWORD v17[4];

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter(v17, v5);
  if (v17[3])
  {
    v8 = type metadata accessor for HistoryPagingViewController(0);
    if ((swift_dynamicCast(&v16, v17, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
    {

      return;
    }
  }
  else
  {
    sub_10001BE90((uint64_t)v17, (uint64_t *)&unk_100828420);
  }
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v10 = (char *)Strong;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(Strong
                                                                               + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDateCache)
                                                                   + OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentDeviceDate));
    sub_100219E44();
    objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController], "reloadData");
    v11 = objc_msgSend(v10, "navigationItem", sub_10021A084((uint64_t)v7, 1));
    v12 = (void *)objc_opt_self(FIUIDateFormattingUtilities);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v14 = objc_msgSend(v12, "stringWithDayNameAndShortMonthFromDate:", isa);

    objc_msgSend(v11, "setTitle:", v14);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);

  }
}

void sub_100218D54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  id v7[3];
  _QWORD v8[4];

  Notification.object.getter(v8, a1);
  if (v8[3])
  {
    v3 = type metadata accessor for HistoryPagingViewController(0);
    if ((swift_dynamicCast(v7, v8, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
    {

      return;
    }
  }
  else
  {
    sub_10001BE90((uint64_t)v8, (uint64_t *)&unk_100828420);
  }
  v4 = a2 + 16;
  swift_beginAccess(v4, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    Notification.object.getter(v8, Strong);
    sub_100218FD4((uint64_t)v8);

    sub_10001BE90((uint64_t)v8, (uint64_t *)&unk_100828420);
  }
}

void sub_100218E24()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned int v3;
  id v4;
  void *v5;
  unsigned int v6;
  uint64_t v7;
  id v8;
  id v9;
  NSString v10;

  v1 = OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_flightsClimbedEnabled;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_flightsClimbedEnabled) & 1) == 0)
  {
    v2 = (void *)objc_opt_self(_HKBehavior);
    v3 = objc_msgSend(v2, "anyPairedWatchHasFlightsClimbedCapability");
    v4 = objc_msgSend(v2, "sharedBehavior");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, "isStandalonePhoneFitnessMode");

      if ((v3 | v6) == 1)
      {
        v7 = static os_log_type_t.default.getter();
        v8 = HKLogActivity;
        os_log(_:dso:log:_:_:)(v7, &_mh_execute_header, v8, "Flights climbed enabled changing to true.", 41, 2, _swiftEmptyArrayStorage);

        *(_BYTE *)(v0 + v1) = 1;
        v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        v10 = String._bridgeToObjectiveC()();
        objc_msgSend(v9, "setBool:forKey:", 1, v10);

        objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController), "reloadData");
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100218FD4(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  char v9;
  id v10;
  void *v11;
  Class isa;
  id v13;
  uint64_t v15;
  void *v16;
  _BYTE v17[24];
  uint64_t v18;

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDateCache]
                                                                 + OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate));
  sub_100021CC0(a1, (uint64_t)v17, (uint64_t *)&unk_100828420);
  if (!v18)
  {
    sub_10001BE90((uint64_t)v17, (uint64_t *)&unk_100828420);
    goto LABEL_5;
  }
  v7 = sub_10001E724(0, &qword_100828758, &off_1007769E8);
  if (!swift_dynamicCast(&v16, v17, (char *)&type metadata for Any + 8, v7, 6))
  {
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  v8 = v16;
LABEL_6:
  v9 = v8 == 0;

  v10 = objc_msgSend(v1, "navigationItem", sub_10021A084((uint64_t)v6, v9));
  v11 = (void *)objc_opt_self(FIUIDateFormattingUtilities);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v13 = objc_msgSend(v11, "stringWithDayNameAndShortMonthFromDate:", isa);

  objc_msgSend(v10, "setTitle:", v13);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

id sub_100219178()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  objc_super v7;
  __int128 v8;
  uint64_t v9;
  char v10[24];
  __int128 v11;
  uint64_t v12;

  v1 = (uint64_t)&v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_deviceDateListener];
  swift_beginAccess(&v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_deviceDateListener], v10, 0, 0);
  sub_100021CC0(v1, (uint64_t)&v8, (uint64_t *)&unk_100828420);
  if (v9)
  {
    sub_100038FD4(&v8, &v11);
    v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v3 = v12;
    v4 = sub_100016804(&v11, v12);
    v5 = _bridgeAnythingToObjectiveC<A>(_:)(v4, v3);
    objc_msgSend(v2, "removeObserver:", v5);

    swift_unknownObjectRelease(v5);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v11);
  }
  else
  {
    sub_10001BE90((uint64_t)&v8, (uint64_t *)&unk_100828420);
  }
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDataProvider]+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers), "removeObject:", v0);
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for HistoryPagingViewController(0);
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_10021949C()
{
  return type metadata accessor for HistoryPagingViewController(0);
}

uint64_t type metadata accessor for HistoryPagingViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100828640;
  if (!qword_100828640)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HistoryPagingViewController);
  return result;
}

uint64_t sub_1002194E0(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  NSString v10;
  unsigned __int8 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_delegate];
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_delegate], 0);
  v4 = &v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_deviceDateListener];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v5 = &v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_selectedDateListener];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  v6 = OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_flightsClimbedEnabled;
  v7 = (void *)objc_opt_self(NSUserDefaults);
  v8 = v1;
  v9 = objc_msgSend(v7, "standardUserDefaults");
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "BOOLForKey:", v10);

  v1[v6] = v11;
  v8[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_celebrationComplete] = 0;
  v8[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_notificationGoalChangeComplete] = 0;
  v8[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_initialLoad] = 1;
  v12 = OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController;
  *(_QWORD *)&v8[v12] = objc_msgSend(objc_allocWithZone((Class)FIUIPageViewController), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_nPages] = 0;
  v13 = &v8[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_jan1_2014];
  sub_100219B8C((uint64_t)&v8[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_jan1_2014]);

  sub_1000F61B4(v3);
  sub_10001BE90((uint64_t)v4, (uint64_t *)&unk_100828420);
  sub_10001BE90((uint64_t)v5, (uint64_t *)&unk_100828420);

  v14 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);

  v15 = type metadata accessor for HistoryPagingViewController(0);
  swift_deallocPartialClassInstance(v8, v15, *(unsigned int *)((swift_isaMask & *(_QWORD *)v8) + 0x30), *(unsigned __int16 *)((swift_isaMask & *(_QWORD *)v8) + 0x34));
  return 0;
}

void sub_1002196F4()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  NSString v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  Class isa;
  uint64_t v20;

  sub_100219E44();
  v1 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v0, "setView:", v1);

  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController];
  objc_msgSend(v5, "willMoveToParentViewController:", v0);
  objc_msgSend(v0, "addChildViewController:", v5);
  v6 = objc_msgSend(v0, "view");
  if (!v6)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v7 = v6;
  v8 = objc_msgSend(v5, "view");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v7, "addSubview:", v8);

    objc_msgSend(v5, "setDataSource:", v0);
    objc_msgSend(v5, "setDelegate:", v0);
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

    v12 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithImage:style:target:action:", v11, 0, v0, "showHistoryMonthView");
    v13 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 9, v0, "shareImmediatelyWithSender:");
    v14 = objc_msgSend(v0, "navigationItem");
    v15 = sub_100047110((uint64_t *)&unk_100828340);
    v16 = swift_allocObject(v15, 48, 7);
    *(_OWORD *)(v16 + 16) = xmmword_100629280;
    *(_QWORD *)(v16 + 32) = v13;
    *(_QWORD *)(v16 + 40) = v12;
    v20 = v16;
    specialized Array._endMutation()(v16);
    sub_10001E724(0, (unint64_t *)&unk_10082EEB0, UIBarButtonItem_ptr);
    v17 = v13;
    v18 = v12;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v14, "setRightBarButtonItems:animated:", isa, 0, swift_bridgeObjectRelease(v20).n128_f64[0]);

    return;
  }
LABEL_7:
  __break(1u);
}

id sub_100219A18()
{
  char *v0;
  id v1;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for HistoryPagingViewController(0);
  objc_msgSendSuper2(&v3, "viewDidLoad");
  v1 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v1, "setLargeTitleDisplayMode:", 2);

  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDataProvider]+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers), "addObject:", v0);
}

uint64_t sub_100219B8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v2 = sub_100047110(&qword_100823FC8);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110((uint64_t *)&unk_100827450);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DateComponents(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10081D548 != -1)
    swift_once(&qword_10081D548, sub_100005A80);
  v15 = type metadata accessor for Calendar(0);
  sub_10003CE9C(v15, (uint64_t)qword_100869D10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 1, 1, v15);
  v16 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 1, 1, v16);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v7, v4, 0, 1, 2014, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1);
  Calendar.date(from:)(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17);
  if ((_DWORD)v19 != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a1, v14, v17);
  Date.init(timeIntervalSinceReferenceDate:)(v19, 410227200.0);
  return sub_10001BE90((uint64_t)v14, (uint64_t *)&unk_100828370);
}

uint64_t sub_100219E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Calendar(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DateComponents(0);
  v28 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDateCache)+ OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_calendar, v5);
  v12 = sub_100047110((uint64_t *)&unk_100828720);
  v13 = type metadata accessor for Calendar.Component(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = swift_allocObject(v12, v16 + *(_QWORD *)(v14 + 72), v15 | 7);
  *(_OWORD *)(v17 + 16) = xmmword_100622F90;
  v18 = v17 + v16;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v18, enum case for Calendar.Component.day(_:), v13);
  v19 = sub_1002302F0(v17);
  swift_setDeallocating(v17);
  swift_arrayDestroy(v18, 1, v13);
  v20 = swift_deallocClassInstance(v17, 32, 7);
  v21 = v1 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_jan1_2014;
  Date.init()(v20);
  Calendar.dateComponents(_:from:to:)(v19, v21, v4);
  v22 = swift_bridgeObjectRelease(v19);
  (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v4, v31, v22);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v24 = DateComponents.day.getter(v23);
  LOBYTE(v19) = v25;
  result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v11, v29);
  if ((v19 & 1) != 0)
    v27 = 1;
  else
    v27 = v24;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_nPages) = v27;
  return result;
}

double sub_10021A084(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  double v23;
  id v24;
  double result;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  Class isa;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v45;
  id aBlock[5];
  uint64_t v47;

  v4 = static os_log_type_t.default.getter(a1);
  v45 = (void *)HKLogActivity;
  v5 = sub_100047110((uint64_t *)&unk_100827460);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100622F90;
  v7 = sub_100047110((uint64_t *)&unk_100828730);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 + 32) & ~v10;
  v42 = v11 + *(_QWORD *)(v9 + 72);
  v43 = v7;
  v41 = v10 | 7;
  v12 = swift_allocObject(v7, v42, v10 | 7);
  *(_OWORD *)(v12 + 16) = xmmword_100622F90;
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v40(v12 + v11, a1, v8);
  v13 = sub_100047110(&qword_100824CE8);
  *(_QWORD *)(v6 + 56) = v13;
  v14 = sub_100028384((unint64_t *)&unk_100828740, &qword_100824CE8, (uint64_t)&protocol conformance descriptor for [A]);
  *(_QWORD *)(v6 + 64) = v14;
  *(_QWORD *)(v6 + 32) = v12;
  v15 = v45;
  os_log(_:dso:log:_:_:)(v4, &_mh_execute_header, v15, "Setting page view controller to date (%@)", 41, 2, v6);

  swift_bridgeObjectRelease(v6);
  v16 = sub_10021B20C(a1);
  if ((v17 & 1) != 0)
  {
    v35 = static os_log_type_t.default.getter(v16);
    v36 = (void *)HKLogActivity;
    v37 = swift_allocObject(v5, 72, 7);
    *(_OWORD *)(v37 + 16) = xmmword_100622F90;
    v38 = swift_allocObject(v43, v42, v41);
    *(_OWORD *)(v38 + 16) = xmmword_100622F90;
    v40(v38 + v11, a1, v8);
    *(_QWORD *)(v37 + 56) = v13;
    *(_QWORD *)(v37 + 64) = v14;
    *(_QWORD *)(v37 + 32) = v38;
    v39 = v36;
    os_log(_:dso:log:_:_:)(v35, &_mh_execute_header, v39, "No index found within range for %@", 34, 2, v37);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v37).n128_u64[0];
  }
  else
  {
    v18 = v16;
    v19 = objc_opt_self(CHExceptionHandler);
    v20 = swift_allocObject(&unk_10078F828, 33, 7);
    *(_QWORD *)(v20 + 16) = v2;
    *(_QWORD *)(v20 + 24) = v18;
    *(_BYTE *)(v20 + 32) = a2 & 1;
    aBlock[4] = sub_10021DAB8;
    v47 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_10078F840;
    v21 = _Block_copy(aBlock);
    v22 = v47;
    v2;
    *(_QWORD *)&v23 = swift_release(v22).n128_u64[0];
    aBlock[0] = 0;
    LOBYTE(v19) = objc_msgSend((id)v19, "tryClosure:error:", v21, aBlock, v23);
    _Block_release(v21);
    v24 = aBlock[0];
    if ((v19 & 1) == 0)
    {
      v26 = v24;
      v27 = _convertNSErrorToError(_:)(v24);

      v29 = swift_willThrow(v28);
      v30 = static os_log_type_t.default.getter(v29);
      v31 = (void *)HKLogActivity;
      v32 = swift_allocObject(v5, 72, 7);
      *(_OWORD *)(v32 + 16) = xmmword_100622F90;
      v33 = v31;
      isa = Date._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)(v32 + 56) = sub_10001E724(0, (unint64_t *)&qword_100823578, NSDate_ptr);
      *(_QWORD *)(v32 + 64) = sub_10017C7F8();
      *(_QWORD *)(v32 + 32) = isa;
      os_log(_:dso:log:_:_:)(v30, &_mh_execute_header, v33, "Error thrown setting page VC index for date %@", 46, 2, v32);

      swift_bridgeObjectRelease(v32);
      sub_10021CACC();
      swift_errorRelease(v27);
    }
  }
  return result;
}

uint64_t sub_10021A4A0(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  objc_class *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void *v34;
  __n128 v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  double v44;
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __objc2_prot *v61;
  void **aBlock;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  objc_super v68;

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v60 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v58 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (objc_class *)type metadata accessor for HistoryPagingViewController(0);
  v68.receiver = v2;
  v68.super_class = v14;
  objc_msgSendSuper2(&v68, "viewWillAppear:", a1 & 1);
  v15 = objc_msgSend(v2, "navigationController");
  if (v15)
  {
    v16 = v15;
    v59 = v4;
    v17 = objc_opt_self(CHActivityHistoryNavigationController);
    v18 = swift_dynamicCastObjCClass(v16, v17);
    if (v18)
    {
      v19 = (void *)v18;
      v20 = objc_msgSend(v2, "transitionCoordinator");
      if (v20)
      {
        v21 = v20;
        v22 = objc_msgSend(v20, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
        v23 = v22;
        if (!v22)
          goto LABEL_11;
        v61 = &OBJC_PROTOCOL___AnimatorDetailViewController;
        v57 = v13;
        v24 = v9;
        v25 = v7;
        v26 = v11;
        v27 = v10;
        v28 = v22;
        v29 = swift_dynamicCastObjCProtocolConditional(v22, 1, &v61);
        v23 = v28;
        v30 = v26;
        v31 = v25;
        v32 = v24;
        v33 = v57;
        if (v29)
        {
          v55 = v30;
          v56 = v27;
          v54 = v28;
          sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
          v34 = v21;
          v53 = static OS_dispatch_queue.main.getter(v35);
          v36 = swift_allocObject(&unk_10078F940, 32, 7);
          *(_QWORD *)(v36 + 16) = v21;
          *(_QWORD *)(v36 + 24) = v19;
          v66 = sub_10021DB4C;
          v67 = v36;
          aBlock = _NSConcreteStackBlock;
          v63 = 1107296256;
          v64 = sub_10002D0F8;
          v65 = &unk_10078F958;
          v37 = _Block_copy(&aBlock);
          v38 = v67;
          swift_unknownObjectRetain(v34);
          v52 = v16;
          swift_release(v38);
          static DispatchQoS.unspecified.getter(v39);
          aBlock = (void **)_swiftEmptyArrayStorage;
          v40 = sub_10002FAC0();
          v41 = sub_100047110(&qword_100828C80);
          v42 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
          dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v41, v42, v31, v40);
          v43 = (void *)v53;
          OS_dispatch_queue.async(group:qos:flags:execute:)(0, v33, v32, v37);
          _Block_release(v37);

          swift_unknownObjectRelease(v34);
          (*(void (**)(char *, uint64_t))(v58 + 8))(v32, v31);
          (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v56);
        }
        else
        {
LABEL_11:
          v46 = v23;
          if ((objc_msgSend(v21, "isCancelled") & 1) != 0)
          {
            objc_msgSend(v19, "reattachPaletteIfNeededExpanded:", 1);
            swift_unknownObjectRelease(v21);

          }
          else
          {
            v47 = swift_allocObject(&unk_10078F8F0, 24, 7);
            *(_QWORD *)(v47 + 16) = v19;
            v66 = sub_10021DB0C;
            v67 = v47;
            aBlock = _NSConcreteStackBlock;
            v63 = 1107296256;
            v64 = sub_10021AA14;
            v65 = &unk_10078F908;
            v48 = v21;
            v49 = _Block_copy(&aBlock);
            v50 = v67;
            v51 = v16;
            objc_msgSend(v48, "animateAlongsideTransition:completion:", v49, 0, swift_release(v50).n128_f64[0]);

            _Block_release(v49);
            swift_unknownObjectRelease(v48);
          }
        }
        goto LABEL_9;
      }
      objc_msgSend(v19, "attachPaletteWithHeight:", 70.0);
    }

LABEL_9:
    v4 = v59;
  }
  static Date._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDateCache]
                                                                 + OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate));
  v44 = sub_10021A084((uint64_t)v6, 0);
  return (*(uint64_t (**)(char *, uint64_t, double))(v60 + 8))(v6, v4, v44);
}

void sub_10021A958(void *a1, void *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  v4 = swift_allocObject(&unk_10078F990, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  v8[4] = sub_10021DB54;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10021AA14;
  v8[3] = &unk_10078F9A8;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = a2;
  objc_msgSend(a1, "animateAlongsideTransition:completion:", v5, 0, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
}

uint64_t sub_10021AA14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

void sub_10021AB94()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  Class isa;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDateCache];
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pauseRingsCoordinator];
  v4 = objc_msgSend(objc_allocWithZone((Class)CHActivityHistoryNavigationController), "initWithDateCache:pauseRingsCoordinator:", v2, v3);
  if (!v4)
    goto LABEL_7;
  v5 = v4;
  v6 = objc_msgSend(objc_allocWithZone((Class)MonthViewController), "initWithDataProvider:activityDateCache:badgeImageFactory:pauseRingsCoordinator:workoutFormattingManager:", *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDataProvider], v2, *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_badgeImageFactory], v3, *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_workoutFormattingManager]);
  if (!v6)
  {

LABEL_7:
    _StringGuts.grow(_:)(47);
    swift_bridgeObjectRelease(0xE000000000000000);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000043, 0x8000000100691190, "FitnessApp/HistoryPagingViewController.swift", 44, 2, 295, 0);
    __break(1u);
    return;
  }
  v7 = v6;
  v8 = sub_100047110((uint64_t *)&unk_100828340);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100623630;
  *(_QWORD *)(v9 + 32) = v7;
  v14 = v9;
  specialized Array._endMutation()(v9);
  sub_10001E724(0, (unint64_t *)&qword_100828310, UIViewController_ptr);
  v13 = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "setViewControllers:animated:", isa, 0, swift_bridgeObjectRelease(v14).n128_f64[0]);

  v11 = objc_msgSend(v1, "navigationController");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "presentViewController:animated:completion:", v5, 1, 0);

  }
}

void sub_10021AE28()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  _QWORD aBlock[5];
  uint64_t v12;

  if ((v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_celebrationComplete] & 1) == 0)
  {
    v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_celebrationComplete] = 1;
    v1 = type metadata accessor for RingCelebrationViewController(0);
    v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1)), "init");
    objc_msgSend(v10, "setModalPresentationStyle:", 5);
    objc_msgSend(v10, "setModalPresentationCapturesStatusBarAppearance:", 1);
    *((_BYTE *)v10 + OBJC_IVAR____TtC10FitnessApp29RingCelebrationViewController_shouldIncludeIntroFade) = (v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_celebrationContext + 1] & 1) == 0;
    v2 = static os_log_type_t.default.getter(v10);
    v3 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v2, &_mh_execute_header, v3, "Presenting ring celebration view controller", 43, 2, &_swiftEmptyArrayStorage);

    v4 = objc_msgSend(v0, "navigationController");
    if (v4)
    {
      v5 = v4;
      v6 = swift_allocObject(&unk_10078F7D8, 24, 7);
      *(_QWORD *)(v6 + 16) = v0;
      aBlock[4] = sub_10021DA8C;
      v12 = v6;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10002D0F8;
      aBlock[3] = &unk_10078F7F0;
      v7 = _Block_copy(aBlock);
      v8 = v12;
      v9 = v0;
      objc_msgSend(v5, "presentViewController:animated:completion:", v10, 0, v7, swift_release(v8).n128_f64[0]);
      _Block_release(v7);

    }
    else
    {

    }
  }
}

void sub_10021AFF4(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  os_log_type_t v7;
  void *v8;
  os_log_type_t v9;
  char *v10;
  char *v11;
  NSObject *v12;
  uint8_t *v13;
  uint64_t Strong;
  void *v15;
  void *v16;
  id v17;
  Class isa;
  NSString v19;
  uint64_t v20;
  _BOOL4 v21;
  uint64_t v22;

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static os_log_type_t.error.getter(v4);
  v8 = (void *)HKLogActivity;
  v9 = v7;
  if (os_log_type_enabled(HKLogActivity, v7))
  {
    v10 = a1;
    v20 = v2;
    v11 = v10;
    v12 = v8;
    v13 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v13 = 67109120;
    Strong = swift_unknownObjectWeakLoadStrong(&v11[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_delegate]);

    swift_unknownObjectRelease(Strong);
    v21 = Strong == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v13 + 4);

    v2 = v20;
    _os_log_impl((void *)&_mh_execute_header, v12, v9, "Calling back delegate for ringCelebrationDidBegin, delegate == nil ? %{BOOL}d", v13, 8u);
    swift_slowDealloc(v13, -1, -1);

  }
  v15 = (void *)swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_delegate]);
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "ringCelebrationDidBegin");
    swift_unknownObjectRelease(v16);
  }
  v17 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  Date.init()(v17);
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setObject:forKey:", isa, v19);

}

uint64_t sub_10021B20C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __n128 v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a1;
  v2 = type metadata accessor for Date(0);
  v36 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Calendar(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for DateComponents(0);
  v9 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDateCache)+ OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_calendar, v5);
  v12 = sub_100047110((uint64_t *)&unk_100828720);
  v13 = type metadata accessor for Calendar.Component(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = swift_allocObject(v12, v16 + *(_QWORD *)(v14 + 72), v15 | 7);
  *(_OWORD *)(v17 + 16) = xmmword_100622F90;
  v18 = v17 + v16;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v18, enum case for Calendar.Component.day(_:), v13);
  v19 = sub_1002302F0(v17);
  swift_setDeallocating(v17);
  swift_arrayDestroy(v18, 1, v13);
  v20 = swift_deallocClassInstance(v17, 32, 7);
  Date.init()(v20);
  Calendar.dateComponents(_:from:to:)(v19, v35, v4);
  v21 = swift_bridgeObjectRelease(v19);
  v22 = v4;
  v23 = v33[1];
  (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v22, v37, v21);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v25 = DateComponents.day.getter(v24);
  LOBYTE(v19) = v26;
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v34);
  if ((v19 & 1) != 0)
    return 0;
  v28 = OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_nPages;
  v29 = *(_QWORD *)(v23 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_nPages);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
    goto LABEL_12;
  }
  v32 = v31 - v25;
  if (__OFSUB__(v31, v25))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (FIUILocaleIsRightToLeft(result))
    result = v25;
  else
    result = v32;
  if (result < 0 || result >= *(_QWORD *)(v23 + v28))
    return 0;
  return result;
}

uint64_t sub_10021B4BC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[32];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = &unk_10062E698;
  v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[15] = &unk_10062E6B0;
  v4[16] = &unk_10062E6B0;
  v4[17] = &unk_10062E698;
  v4[18] = &unk_10062E698;
  v4[19] = &unk_10062E698;
  v4[20] = &unk_10062E698;
  v4[21] = &unk_10062E698;
  v4[22] = &unk_10062E6C8;
  v4[23] = &unk_10062E6E0;
  v4[24] = &unk_10062E6C8;
  v4[25] = &unk_10062E6F8;
  v4[26] = &unk_10062E6C8;
  v4[27] = &unk_10062E6C8;
  v4[28] = &unk_10062E6C8;
  v4[29] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[30] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[31] = *(_QWORD *)(result - 8) + 64;
    return swift_updateClassMetadata2(a1, 256, 32, v4, a1 + 80);
  }
  return result;
}

void sub_10021B750()
{
  _BYTE *v0;
  id v1;
  Class isa;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  char v9;
  char v10;
  char *v11;
  id v12;

  if ((v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_goalRecommendation + 8] & 1) == 0)
  {
    if ((v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_notificationGoalChangeComplete] & 1) != 0)
      return;
    v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_notificationGoalChangeComplete] = 1;
    v1 = objc_msgSend(objc_allocWithZone((Class)CHASActivitySetupViewController), "initWithPresentationContext:", 6);
    isa = Double._bridgeToObjectiveC()().super.super.isa;
    v3 = static os_log_type_t.default.getter(isa);
    v4 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "Showing setup view control with goal recommendation", 51, 2, &_swiftEmptyArrayStorage);

    objc_msgSend(v1, "setRecommendedMoveGoal:", isa);
    v12 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v1);
    objc_msgSend(v0, "presentViewController:animated:completion:", v12, 1, 0);

    goto LABEL_6;
  }
  if (v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_celebrationContext] == 1)
  {
    sub_10021AE28();
    return;
  }
  if (v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pauseRingsEditing] == 1)
  {
    v12 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController], "currentlyDisplayedViewController");
    v5 = type metadata accessor for HistoryDayViewController(0);
    v6 = swift_dynamicCastClass(v12, v5);
    if (v6)
    {
      v7 = (void *)v6;
      v8 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);
      v9 = *(_BYTE *)(v6 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary);
      v10 = *(_BYTE *)(*(_QWORD *)(v6 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider)
                     + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser);
      objc_allocWithZone((Class)type metadata accessor for PauseRingsViewController());
      v11 = sub_1003410E0(v8, v9, v10, 1);
      objc_msgSend(v7, "presentViewController:animated:completion:", v11, 1, 0);

      return;
    }
LABEL_6:

  }
}

char *sub_10021B9C4(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, _QWORD *a13, void *a14, char a15, uint64_t a16, uint64_t a17, _BYTE *a18)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  _OWORD *v25;
  _OWORD *v26;
  _OWORD *v27;
  _OWORD *v28;
  _OWORD *v29;
  _OWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  id v39;
  char *v40;
  _BYTE *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  char *v54;
  id v55;
  id v56;
  uint64_t v57;
  id v58;
  void *v59;
  _QWORD *v60;
  void *v61;
  unsigned __int8 v62;
  _QWORD *v63;
  uint64_t v64;
  char *result;
  char *v66;
  uint64_t v67;
  id v68;
  objc_class *v69;
  char *v70;
  void *v71;
  char *v72;
  id v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  id v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  _QWORD *v89;
  objc_super v90;
  _QWORD v91[5];
  _QWORD v92[5];
  _QWORD v93[5];

  v86 = a8;
  v83 = a7;
  v81 = a6;
  v80 = a5;
  v79 = a4;
  v78 = a3;
  v85 = a14;
  v88 = a12;
  v89 = a13;
  v87 = a11;
  v84 = a10;
  v82 = a9;
  v20 = type metadata accessor for Date(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93[3] = type metadata accessor for AppRecommendationDataProvider();
  v93[4] = &off_1007A2968;
  v93[0] = a16;
  v92[3] = &type metadata for WalkSuggestionDataProvider;
  v92[4] = &off_1007A6E18;
  v91[3] = type metadata accessor for SeymourWorkoutRecommendationDataProvider(0);
  v91[4] = &off_100786360;
  v91[0] = a17;
  v24 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_delegate];
  *((_QWORD *)v24 + 1) = 0;
  swift_unknownObjectWeakInit(v24, 0);
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_stepsAndDistanceCell] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_flightsCell] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringsConfigurationCell] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_protectedAppsSubscription] = 0;
  v25 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fontListener];
  *v25 = 0u;
  v25[1] = 0u;
  v26 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dateChangeListener];
  *v26 = 0u;
  v26[1] = 0u;
  v27 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionsListener];
  *v27 = 0u;
  v27[1] = 0u;
  v28 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsListener];
  *v28 = 0u;
  v28[1] = 0u;
  v29 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsUpdateListener];
  *v29 = 0u;
  v29[1] = 0u;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsQuery] = 0;
  v30 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_wheelchairListener];
  *v30 = 0u;
  v30[1] = 0u;
  a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_viewAppeared] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards] = _swiftEmptyArrayStorage;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData] = 0;
  a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didSetInitialChartData] = 0;
  a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didInitialChartAnimation] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_totalEnergy] = 0;
  a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_shareWhenDataLoads] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingImage] = 0;
  v31 = &a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingText];
  *v31 = 0;
  v31[1] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator] = 0;
  *(_QWORD *)&a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fromVC] = 0;
  a18[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_flightsClimbedEnabled] = a15;
  v32 = qword_10081D558;
  v33 = a18;
  if (v32 != -1)
    swift_once(&qword_10081D558, sub_100006F7C);
  v34 = type metadata accessor for Calendar(0);
  v35 = sub_10003CE9C(v34, (uint64_t)qword_100869D40);
  v77 = a1;
  v74 = v35;
  Calendar.startOfDay(for:)(a1);
  v36 = &v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date];
  (*(void (**)(_BYTE *, char *, uint64_t))(v21 + 32))(&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date], v23, v20);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v23, v36, v20);
  v37 = sub_1000237E8();
  v38 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v76 = v20;
  v75 = v38;
  v38((uint64_t)v23, v20);
  *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_summaryIndex] = v37;
  v39 = objc_allocWithZone((Class)type metadata accessor for ActivityDataProvider(0));
  v40 = a2;
  v41 = sub_1001958B8((uint64_t)v40);

  *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider] = v41;
  v42 = v78;
  *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator] = v78;
  v43 = v79;
  *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionDataProvider] = v79;
  v44 = v80;
  *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workoutFormattingManager] = v80;
  v45 = v81;
  *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workoutDataProvider] = v81;
  v46 = v83;
  *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionFormattingManager] = v83;
  *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fiuiFormattingManager] = v86;
  v47 = v82;
  *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_badgeImageFactory] = v82;
  v48 = v84;
  *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_friendListManager] = v84;
  *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementLocalizationProvider] = v87;
  v49 = (uint64_t)v89;
  *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementResourceProvider] = v88;
  sub_1000252E0(v49, (uint64_t)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsDataProvider]);
  v50 = v85;
  *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fitnessAppContext] = v85;
  sub_1000252E0((uint64_t)v93, (uint64_t)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_appRecommendationDataProvider]);
  sub_1000252E0((uint64_t)v92, (uint64_t)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_walkSuggestionDataProvider]);
  sub_1000252E0((uint64_t)v91, (uint64_t)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_seymourRecommendationDataProvider]);
  v78 = v42;
  v79 = v43;
  v80 = v44;
  v51 = v45;
  v52 = v46;
  v86 = v86;
  v53 = v47;
  v54 = v40;
  v55 = v53;
  v84 = v48;
  v87 = v87;
  v88 = v88;
  v56 = v50;
  v57 = v77;
  v58 = objc_msgSend(*(id *)&v54[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache], "activitySummaryForCacheIndex:", sub_1000237E8());
  v59 = v58;
  v60 = v89;
  v81 = v51;
  v83 = v55;
  v85 = v56;
  if (v58)
  {
    v61 = v52;
    v62 = objc_msgSend(v58, "_isStandalonePhoneSummary");
LABEL_7:
    v67 = v76;
    v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary] = v62;
    v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isToday] = Calendar.isDateInToday(_:)(v57) & 1;
    v68 = objc_msgSend(objc_allocWithZone((Class)UITableView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    *(_QWORD *)&v33[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_tableView] = v68;

    v69 = (objc_class *)type metadata accessor for HistoryDayViewController(0);
    v90.receiver = v33;
    v90.super_class = v69;
    v70 = (char *)objc_msgSendSuper2(&v90, "initWithNibName:bundle:", 0, 0);
    v71 = *(void **)&v70[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary];
    *(_QWORD *)&v70[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary] = v59;
    v72 = v70;
    v73 = v59;

    sub_10047B780();
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v91);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v92);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v93);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v60);
    v75(v57, v67);
    return v72;
  }
  v63 = v89;
  v64 = v57;
  result = (char *)objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (result)
  {
    v66 = result;
    v61 = v52;
    v62 = objc_msgSend(result, "isStandalonePhoneFitnessMode");

    v57 = v64;
    v60 = v63;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

char *sub_10021C248(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, __int128 a9, __int128 a10, _QWORD *a11, void *a12, char a13, uint64_t a14, uint64_t a15)
{
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char *v29;
  __int128 v31;
  __int128 v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  _QWORD v38[3];
  uint64_t v39;
  _UNKNOWN **v40;
  _QWORD v41[3];
  ValueMetadata *v42;
  char **v43;
  _QWORD v44[3];
  uint64_t v45;
  _UNKNOWN **v46;

  v36 = a7;
  v37 = a8;
  v34 = a5;
  v35 = a6;
  v33 = a4;
  v32 = a9;
  v31 = a10;
  v45 = type metadata accessor for AppRecommendationDataProvider();
  v46 = &off_1007A2968;
  v44[0] = a14;
  v42 = &type metadata for WalkSuggestionDataProvider;
  v43 = &off_1007A6E18;
  v39 = type metadata accessor for SeymourWorkoutRecommendationDataProvider(0);
  v40 = &off_100786360;
  v38[0] = a15;
  v18 = objc_allocWithZone((Class)type metadata accessor for HistoryDayViewController(0));
  v19 = sub_10017C044((uint64_t)v44, v45);
  __chkstk_darwin(v19);
  v21 = (uint64_t *)((char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  v23 = sub_10017C044((uint64_t)v41, (uint64_t)v42);
  __chkstk_darwin(v23);
  (*(void (**)(void))(v24 + 16))();
  v25 = sub_10017C044((uint64_t)v38, v39);
  __chkstk_darwin(v25);
  v27 = (uint64_t *)((char *)&v31 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  v29 = sub_10021B9C4(a1, a2, a3, v33, v34, v35, v36, v37, (void *)v32, *((void **)&v32 + 1), (void *)v31, *((void **)&v31 + 1), a11, a12, a13, *v21, *v27, v18);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v38);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v41);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v44);
  return v29;
}

id sub_10021C478(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, unsigned __int16 a15, uint64_t a16, unsigned __int8 a17, unsigned __int8 a18, char *a19, uint64_t a20,uint64_t a21)
{
  _QWORD *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  id v32;
  NSString v33;
  unsigned __int8 v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  char *v44;
  char v45;
  char *v46;
  char *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id result;
  void *v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  void *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  char *v84;
  objc_class *v85;
  id v86;
  id v87;
  id v88;
  id v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  int v98;
  uint64_t v99;
  int v100;
  id v101;
  id v102;
  objc_super v103;
  _QWORD v104[5];
  _QWORD v105[5];
  _QWORD v106[5];

  v93 = a7;
  v102 = a6;
  v89 = a5;
  v88 = a4;
  v87 = a3;
  v90 = a2;
  v100 = a17;
  LODWORD(v101) = a18;
  v99 = a16;
  v98 = a15;
  v97 = a14;
  v96 = a13;
  v95 = a12;
  v94 = a11;
  v92 = a10;
  v91 = a9;
  v106[3] = a20;
  v106[4] = a21;
  v26 = sub_10004C480(v106);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a20 - 8) + 32))(v26, a8, a20);
  swift_unknownObjectWeakInit(&a19[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_delegate], 0);
  v27 = &a19[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_deviceDateListener];
  *(_OWORD *)v27 = 0u;
  *((_OWORD *)v27 + 1) = 0u;
  v28 = &a19[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_selectedDateListener];
  *(_OWORD *)v28 = 0u;
  *((_OWORD *)v28 + 1) = 0u;
  v29 = OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_flightsClimbedEnabled;
  v30 = (void *)objc_opt_self(NSUserDefaults);
  v31 = a19;
  v32 = objc_msgSend(v30, "standardUserDefaults");
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(v32, "BOOLForKey:", v33);

  a19[v29] = v34;
  v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_celebrationComplete] = 0;
  v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_notificationGoalChangeComplete] = 0;
  v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_initialLoad] = 1;
  v35 = OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController;
  *(_QWORD *)&v31[v35] = objc_msgSend(objc_allocWithZone((Class)FIUIPageViewController), "init");
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_nPages] = 0;
  sub_100219B8C((uint64_t)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_jan1_2014]);
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDataProvider] = a1;
  v36 = v90;
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDateCache] = v90;
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pauseRingsCoordinator] = a3;
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_mindfulnessSessionDataProvider] = a4;
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_badgeImageFactory] = a5;
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_friendListManager] = v102;
  v37 = v93;
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_achievementResourceProvider] = v93;
  sub_1000252E0((uint64_t)v106, (uint64_t)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_awardsDataProvider]);
  v38 = v91;
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_workoutFormattingManager] = v91;
  v39 = v92;
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_workoutDataProvider] = v92;
  v40 = v94;
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_mindfulnessSessionFormattingManager] = v94;
  v41 = v95;
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_fiuiFormattingManager] = v95;
  v42 = v96;
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_achievementLocalizationProvider] = v96;
  v43 = v97;
  *(_QWORD *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_fitnessAppContext] = v97;
  v44 = &v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_celebrationContext];
  v45 = BYTE1(v98);
  *v44 = v98 & 1;
  v44[1] = v45 & 1;
  v46 = &v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_goalRecommendation];
  *(_QWORD *)v46 = v99;
  v46[8] = v100 & 1;
  v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pauseRingsEditing] = (char)v101;
  v101 = (id)objc_opt_self(_HKBehavior);
  v47 = a1;
  v48 = v36;
  v49 = v87;
  v50 = v88;
  v51 = v89;
  v52 = v102;
  v53 = v37;
  v54 = v38;
  v55 = v39;
  v56 = v40;
  v57 = v41;
  v58 = v42;
  v59 = v43;
  result = objc_msgSend(v101, "sharedBehavior");
  if (result)
  {
    v61 = result;
    v62 = objc_msgSend(result, "isStandalonePhoneFitnessMode");

    v63 = type metadata accessor for AppStoreQuery();
    swift_allocObject(v63, 168, 15);
    v64 = sub_1001A893C();
    v65 = (uint64_t *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_appStoreQuery];
    v65[3] = v63;
    v65[4] = (uint64_t)&off_10078BE70;
    *v65 = v64;
    v66 = *(void **)&v47[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_workoutDataProvider];
    v67 = &v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_recentWorkoutAppQuery];
    *((_QWORD *)v67 + 3) = &type metadata for RecentWorkoutAppQuery;
    *((_QWORD *)v67 + 4) = &off_1007A6F38;
    *(_QWORD *)v67 = v66;
    sub_1000252E0((uint64_t)v65, (uint64_t)v105);
    sub_1000252E0((uint64_t)v67, (uint64_t)v104);
    v68 = sub_10017C044((uint64_t)v105, v105[3]);
    __chkstk_darwin(v68);
    v70 = (uint64_t *)((char *)&v87 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v71 + 16))(v70);
    v72 = sub_10017C044((uint64_t)v104, v104[3]);
    __chkstk_darwin(v72);
    v74 = (uint64_t *)((char *)&v87 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v75 + 16))(v74);
    v76 = *v70;
    v77 = *v74;
    v78 = v66;
    v79 = sub_10031A5D8(v76, v77, (uint64_t)&off_100780E10, v62 ^ 1u);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v104);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v105);
    v80 = (uint64_t *)&v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_appRecommendationDataProvider];
    v80[3] = type metadata accessor for AppRecommendationDataProvider();
    v80[4] = (uint64_t)&off_1007A2968;
    *v80 = v79;
    v81 = type metadata accessor for SeymourWorkoutRecommendationDataProvider(0);
    swift_allocObject(v81, *(unsigned int *)(v81 + 48), *(unsigned __int16 *)(v81 + 52));
    v82 = sub_10010B2BC(v59);
    v83 = &v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_seymourWorkoutRecommendationDataProvider];
    *((_QWORD *)v83 + 3) = v81;
    *((_QWORD *)v83 + 4) = &off_100786360;
    *(_QWORD *)v83 = v82;
    v84 = &v31[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_walkSuggestionDataProvider];
    *((_QWORD *)v84 + 3) = &type metadata for WalkSuggestionDataProvider;
    *((_QWORD *)v84 + 4) = &off_1007A6E18;

    v85 = (objc_class *)type metadata accessor for HistoryPagingViewController(0);
    v103.receiver = v31;
    v103.super_class = v85;
    v86 = objc_msgSendSuper2(&v103, "initWithNibName:bundle:", 0, 0);
    sub_100218844();

    _s10FitnessApp24HistoryViewActionContextVwxx_0(v106);
    return v86;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_10021CACC()
{
  Swift::String v0;
  void *object;
  Swift::String v2;
  void *v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  double result;

  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease(0xE000000000000000);
  v0._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v0._object;
  String.append(_:)(v0);
  swift_bridgeObjectRelease(object);
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v3 = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(v3);
  v4._countAndFlagsBits = 46;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  v6 = static os_log_type_t.default.getter(v5);
  v7 = (void *)HKLogActivity;
  v8 = sub_100047110((uint64_t *)&unk_100827460);
  v9 = swift_allocObject(v8, 112, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v9 + 56) = &type metadata for String;
  v10 = sub_100038CF8();
  *(_QWORD *)(v9 + 32) = 0xD000000000000029;
  *(_QWORD *)(v9 + 40) = 0x8000000100691270;
  *(_QWORD *)(v9 + 96) = &type metadata for String;
  *(_QWORD *)(v9 + 104) = v10;
  *(_QWORD *)(v9 + 64) = v10;
  *(_QWORD *)(v9 + 72) = 0xD000000000000018;
  *(_QWORD *)(v9 + 80) = 0x80000001006912A0;
  v11 = v7;
  os_log(_:dso:log:_:_:)(v6, &_mh_execute_header, v11, "%@\n%@", 5, 2, v9);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

void sub_10021CC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController), "currentlyDisplayedViewController");
  v1 = type metadata accessor for HistoryDayViewController(0);
  v2 = swift_dynamicCastClass(v3, v1);
  if (v2)
  {
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary))
      sub_10047C518();
    else
      *(_BYTE *)(v2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_shareWhenDataLoads) = 1;
  }

}

uint64_t sub_10021CD24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t IsRightToLeft;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t (*v30)(char *, _QWORD, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  char *v64;
  char *v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  id v71;
  uint64_t *v72;
  uint64_t *v73;
  id v74;
  id v75;
  id v76;
  uint64_t *v77;
  id v78;
  id v79;
  int v80;
  id v81;
  void (*v82)(char *, uint64_t);
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  _QWORD v87[5];
  _QWORD v88[5];
  _QWORD v89[4];
  uint64_t v90;

  v2 = v1;
  v84 = type metadata accessor for Calendar.Component(0);
  v4 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v68 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v68 - v15;
  v17 = sub_100047110((uint64_t *)&unk_100828370);
  v18 = __chkstk_darwin(v17);
  v83 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v18);
  v86 = (uint64_t)&v68 - v21;
  v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_nPages);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
    goto LABEL_11;
  }
  v85 = v11;
  v25 = v24 - a1;
  if (__OFSUB__(v24, a1))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  IsRightToLeft = FIUILocaleIsRightToLeft(result);
  if ((_DWORD)IsRightToLeft)
    v25 = a1;
  Date.init()(IsRightToLeft);
  Calendar.startOfDay(for:)(v14);
  v27 = v14;
  v28 = *(void (**)(char *, uint64_t))(v8 + 8);
  v28(v27, v7);
  v29 = v4;
  v30 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v4 + 104);
  v31 = v84;
  result = v30(v6, enum case for Calendar.Component.day(_:), v84);
  v32 = -v25;
  if (__OFSUB__(0, v25))
    goto LABEL_12;
  v33 = v86;
  Calendar.date(byAdding:value:to:wrappingComponents:)(v6, v32, v16, 0);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v31);
  v34 = ((uint64_t (*)(char *, uint64_t))v28)(v16, v7);
  v35 = v85;
  Date.init()(v34);
  v36 = (uint64_t)v83;
  sub_100021CC0(v33, (uint64_t)v83, (uint64_t *)&unk_100828370);
  v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v36, 1, v7);
  v82 = v28;
  if (v37 == 1)
  {
    sub_10001BE90(v36, (uint64_t *)&unk_100828370);
  }
  else
  {
    v28(v35, v7);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v35, v36, v7);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v16, v35, v7);
  v38 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDataProvider);
  v39 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pauseRingsCoordinator);
  v84 = v7;
  v40 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_mindfulnessSessionDataProvider);
  v41 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_workoutFormattingManager);
  v83 = v16;
  v42 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_workoutDataProvider);
  v43 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_mindfulnessSessionFormattingManager);
  v74 = *(id *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_fiuiFormattingManager);
  v76 = *(id *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_badgeImageFactory);
  v78 = *(id *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_friendListManager);
  v81 = *(id *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_achievementLocalizationProvider);
  v79 = *(id *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_achievementResourceProvider);
  sub_1000252E0(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_awardsDataProvider, (uint64_t)&v90);
  v75 = *(id *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_fitnessAppContext);
  v80 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_flightsClimbedEnabled);
  sub_1000252E0(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_appRecommendationDataProvider, (uint64_t)v89);
  sub_1000252E0(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_walkSuggestionDataProvider, (uint64_t)v88);
  sub_1000252E0(v2 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_seymourWorkoutRecommendationDataProvider, (uint64_t)v87);
  v44 = sub_10017C044((uint64_t)v89, v89[3]);
  v77 = &v68;
  __chkstk_darwin(v44);
  v46 = (uint64_t *)((char *)&v68 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v47 + 16))(v46);
  v48 = sub_10017C044((uint64_t)v88, v88[3]);
  v73 = &v68;
  __chkstk_darwin(v48);
  (*(void (**)(void))(v49 + 16))();
  v50 = sub_10017C044((uint64_t)v87, v87[3]);
  v72 = &v68;
  __chkstk_darwin(v50);
  v52 = (uint64_t *)((char *)&v68 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v53 + 16))(v52);
  v70 = *v46;
  v68 = *v52;
  v71 = v38;
  v69 = v39;
  v54 = v40;
  v55 = v41;
  v56 = v42;
  v57 = v43;
  v58 = v74;
  v59 = v76;
  v60 = v78;
  v61 = v81;
  v62 = v79;
  v63 = v75;
  *(_QWORD *)&v67 = v61;
  *((_QWORD *)&v67 + 1) = v62;
  *(_QWORD *)&v66 = v59;
  *((_QWORD *)&v66 + 1) = v60;
  v64 = sub_10021C248((uint64_t)v83, v71, v69, v54, v55, v56, v57, v58, v66, v67, &v90, v63, v80, v70, v68);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v87);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v88);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v89);
  v65 = &v64[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_delegate];
  *((_QWORD *)v65 + 1) = &off_10078F7A8;
  swift_unknownObjectWeakAssign(v65, v2);
  v82(v85, v84);
  sub_10001BE90(v86, (uint64_t *)&unk_100828370);
  return (uint64_t)v64;
}

uint64_t sub_10021D3EC(uint64_t a1)
{
  Class v1;
  void (*v2)(char *, uint64_t);
  _QWORD *v4;
  Class v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t IsRightToLeft;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  Class isa;
  uint64_t v33;
  unsigned __int8 v34;
  void *v35;
  id v36;
  void *v37;
  Class v38;
  id v39;
  id v40;
  id v41;
  id v42;
  Class v43;
  char *v44;
  char *v45;
  uint64_t v46;

  v4 = (_QWORD *)type metadata accessor for Calendar.Component(0);
  v5 = (Class)*(v4 - 1);
  __chkstk_darwin(v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v8);
  v45 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v46 - 8);
  v11 = __chkstk_darwin(v46);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v43 - v15;
  __chkstk_darwin(v14);
  v44 = (char *)&v43 - v17;
  v18 = objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController), "currentlyDisplayedViewController");
  v19 = type metadata accessor for HistoryDayViewController(0);
  v20 = swift_dynamicCastClass(v18, v19);
  if (v20)
    -[objc_class setContentScrollView:forEdge:](v1, "setContentScrollView:forEdge:", *(_QWORD *)(v20 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_tableView), 15);

  v22 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_nPages);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
    goto LABEL_21;
  }
  v25 = v24 - a1;
  if (__OFSUB__(v24, a1))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    swift_once(&qword_10081D748, sub_1001E2C48);
    goto LABEL_13;
  }
  IsRightToLeft = FIUILocaleIsRightToLeft(v21);
  if (!(_DWORD)IsRightToLeft)
    a1 = v25;
  v43 = v1;
  v27 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDateCache);
  v1 = (Class)(v27 + OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_calendar);
  Date.init()(IsRightToLeft);
  Calendar.startOfDay(for:)(v13);
  v2 = *(void (**)(char *, uint64_t))(v10 + 8);
  v28 = v13;
  v13 = (char *)v46;
  v2(v28, v46);
  (*((void (**)(char *, _QWORD, _QWORD *))v5 + 13))(v7, enum case for Calendar.Component.day(_:), v4);
  v29 = -a1;
  if (__OFSUB__(0, a1))
    goto LABEL_22;
  v30 = (uint64_t)v45;
  Calendar.date(byAdding:value:to:wrappingComponents:)(v7, v29, v16, 0);
  (*((void (**)(char *, _QWORD *))v5 + 1))(v7, v4);
  v2(v16, (uint64_t)v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v10 + 48))(v30, 1, v13) == 1)
    return sub_10001BE90(v30, (uint64_t *)&unk_100828370);
  v7 = v44;
  (*(void (**)(char *, uint64_t, char *))(v10 + 32))(v44, v30, v13);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v33 = OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate;
  v34 = objc_msgSend(*(id *)(v27 + OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate), "isEqualToDate:", isa);
  v35 = *(void **)(v27 + v33);
  *(_QWORD *)(v27 + v33) = isa;
  v1 = isa;

  if ((v34 & 1) != 0)
  {
    v4 = v1;
    v5 = v43;
    goto LABEL_14;
  }
  v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v5 = v43;
  if (qword_10081D748 != -1)
    goto LABEL_23;
LABEL_13:
  objc_msgSend(v4, "postNotificationName:object:", qword_10086A0E0, v5);

LABEL_14:
  v36 = -[objc_class navigationItem](v5, "navigationItem");
  v37 = (void *)objc_opt_self(FIUIDateFormattingUtilities);
  v38 = Date._bridgeToObjectiveC()().super.isa;
  v39 = objc_msgSend(v37, "stringWithDayNameAndShortMonthFromDate:", v38);

  objc_msgSend(v36, "setTitle:", v39);
  v40 = objc_msgSend(*(id *)(*(_QWORD *)((char *)v5+ OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDataProvider)+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache), "activitySummaryForCacheIndex:", sub_1000237E8());

  v41 = -[objc_class navigationItem](v5, "navigationItem");
  v42 = objc_msgSend(v41, "rightBarButtonItem");

  if (!v40)
  {
    objc_msgSend(v42, "setEnabled:", 0);
    goto LABEL_18;
  }
  if (v42)
  {
    objc_msgSend(v42, "setEnabled:", 1);
LABEL_18:

  }
  return ((uint64_t (*)(char *, char *))v2)(v7, v13);
}

uint64_t sub_10021D88C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  char v11;
  uint64_t result;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  *v9 = static OS_dispatch_queue.main.getter(v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v11 = _dispatchPreconditionTest(_:)(v9);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) != 0)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDateCache]
                                                                   + OBJC_IVAR____TtC10FitnessApp17ActivityDateCache_currentSelectedDate));
    v13 = objc_msgSend(v1, "navigationItem");
    v14 = objc_msgSend(v13, "rightBarButtonItem");

    if (v14)
    {
      v15 = objc_msgSend(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_activityDataProvider]+ OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache), "activitySummaryForCacheIndex:", sub_1000237E8());
      v16 = v15;
      if (v15)

      objc_msgSend(v14, "setEnabled:", v16 != 0);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10021DA68()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10021DA8C()
{
  uint64_t v0;

  sub_10021AFF4(*(char **)(v0 + 16));
}

uint64_t sub_10021DA94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

id sub_10021DAB8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC10FitnessApp27HistoryPagingViewController_pageViewController), "setCurrentlyDisplayedIndex:animated:", *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_10021DAD8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10021DAFC(uint64_t a1)
{
  uint64_t v1;

  sub_100218B80(a1, v1);
}

void sub_10021DB04(uint64_t a1)
{
  uint64_t v1;

  sub_100218D54(a1, v1);
}

id sub_10021DB0C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "reattachPaletteIfNeededExpanded:", 1);
}

uint64_t sub_10021DB20()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10021DB4C()
{
  uint64_t v0;

  sub_10021A958(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10021DB84(void **a1, uint64_t a2, void *a3)
{
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  uint64_t result;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  void *i;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  BOOL v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  NSString *v62;
  NSString *v63;
  NSString *v64;
  Class isa;
  double v66;
  id v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;

  v5 = *a1;
  v6 = objc_msgSend(*(id *)(a2 + 24), "me");
  if (v6)
  {
    v7 = v6;
    sub_10001E724(0, (unint64_t *)&qword_100821A60, ASFriend_ptr);
    v8 = v5;
    v9 = v7;
    v10 = static NSObject.== infix(_:_:)(v9, v8);

    if ((v10 & 1) != 0)
      return 0;
  }
  result = (uint64_t)objc_msgSend(v5, "friendAchievements");
  if (!result)
    return result;
  v12 = (void *)result;
  v74 = a2;
  v72 = a3;
  v73 = v5;
  v13 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
  v14 = sub_100047110(&qword_1008235B8);
  v15 = sub_10001E6E4((unint64_t *)&qword_100828940, (unint64_t *)&qword_100828930, NSNumber_ptr);
  v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v12, v13, v14, v15);

  v17 = v16 + 64;
  v18 = 1 << *(_BYTE *)(v16 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v16 + 64);
  v21 = (unint64_t)(v18 + 63) >> 6;
  v75 = v16;
  swift_bridgeObjectRetain(v16);
  v22 = 0;
  for (i = &_swiftEmptySetSingleton; ; i = v29)
  {
    if (v20)
    {
      v24 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v25 = v24 | (v22 << 6);
      goto LABEL_8;
    }
    v30 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
LABEL_44:
      swift_bridgeObjectRetain(v20);
      v33 = _CocoaArrayWrapper.endIndex.getter(v47);
      swift_release(v20);
      v34 = v74;
      if (v33)
        goto LABEL_31;
LABEL_45:
      swift_release(v20);
      v36 = _swiftEmptyArrayStorage;
      goto LABEL_46;
    }
    if (v30 >= v21)
      goto LABEL_28;
    v31 = *(_QWORD *)(v17 + 8 * v30);
    ++v22;
    if (!v31)
    {
      v22 = v30 + 1;
      if (v30 + 1 >= v21)
        goto LABEL_28;
      v31 = *(_QWORD *)(v17 + 8 * v22);
      if (!v31)
      {
        v22 = v30 + 2;
        if (v30 + 2 >= v21)
          goto LABEL_28;
        v31 = *(_QWORD *)(v17 + 8 * v22);
        if (!v31)
        {
          v22 = v30 + 3;
          if (v30 + 3 >= v21)
            goto LABEL_28;
          v31 = *(_QWORD *)(v17 + 8 * v22);
          if (!v31)
          {
            v22 = v30 + 4;
            if (v30 + 4 >= v21)
              goto LABEL_28;
            v31 = *(_QWORD *)(v17 + 8 * v22);
            if (!v31)
              break;
          }
        }
      }
    }
LABEL_27:
    v20 = (v31 - 1) & v31;
    v25 = __clz(__rbit64(v31)) + (v22 << 6);
LABEL_8:
    v26 = *(_QWORD *)(*(_QWORD *)(v75 + 56) + 8 * v25);
    swift_bridgeObjectRetain(i);
    swift_bridgeObjectRetain(v26);
    sub_10004CF90(v27, i, (unint64_t *)&unk_100828960, _HKFitnessFriendAchievement_ptr, &qword_1008235C0, (void (*)(id *, id))sub_100142790);
    v29 = v28;
    swift_bridgeObjectRelease(i);
  }
  v32 = v30 + 5;
  if (v32 < v21)
  {
    v31 = *(_QWORD *)(v17 + 8 * v32);
    if (!v31)
    {
      while (1)
      {
        v22 = v32 + 1;
        if (__OFADD__(v32, 1))
          break;
        if (v22 >= v21)
          goto LABEL_28;
        v31 = *(_QWORD *)(v17 + 8 * v22);
        ++v32;
        if (v31)
          goto LABEL_27;
      }
      __break(1u);
LABEL_71:
      __break(1u);
    }
    v22 = v32;
    goto LABEL_27;
  }
LABEL_28:
  swift_release(v75);
  v20 = (unint64_t)sub_100296524((uint64_t)i);
  swift_bridgeObjectRelease(i);
  if ((v20 & 0x8000000000000000) != 0 || (v20 & 0x4000000000000000) != 0)
    goto LABEL_44;
  v33 = *(_QWORD *)(v20 + 16);
  v34 = v74;
  if (!v33)
    goto LABEL_45;
LABEL_31:
  v76 = _swiftEmptyArrayStorage;
  sub_10012193C(0, v33 & ~(v33 >> 63), 0);
  if (v33 < 0)
    goto LABEL_71;
  v35 = 0;
  v36 = v76;
  do
  {
    if ((v20 & 0xC000000000000001) != 0)
      v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v20);
    else
      v37 = *(id *)(v20 + 8 * v35 + 32);
    v38 = v37;
    v39 = objc_msgSend(v37, "templateUniqueName");
    if (v39)
    {
      v40 = v39;
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      v43 = v42;

    }
    else
    {

      v41 = 0;
      v43 = 0;
    }
    v76 = v36;
    v45 = v36[2];
    v44 = v36[3];
    if (v45 >= v44 >> 1)
    {
      sub_10012193C(v44 > 1, v45 + 1, 1);
      v36 = v76;
    }
    ++v35;
    v36[2] = v45 + 1;
    v46 = &v36[2 * v45];
    v46[4] = v41;
    v46[5] = v43;
  }
  while (v33 != v35);
  swift_release(v20);
  v34 = v74;
LABEL_46:
  v48 = objc_msgSend(*(id *)(v34 + 16), "template");
  v49 = objc_msgSend(v48, "uniqueName");

  if (v49)
  {
    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v52 = v51;

    v53 = v36[2];
    if (!v53)
    {
LABEL_65:
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v52);
      goto LABEL_66;
    }
  }
  else
  {
    v50 = 0;
    v52 = 0;
    v53 = v36[2];
    if (!v53)
      goto LABEL_65;
  }
  v54 = v36 + 5;
  while (2)
  {
    v55 = (_QWORD *)*v54;
    if (!*v54)
    {
      if (!v52)
        goto LABEL_61;
      goto LABEL_52;
    }
    if (!v52
      || ((v56 = *(v54 - 1), v56 == v50) ? (v57 = v55 == v52) : (v57 = 0),
          !v57 && (_stringCompareWithSmolCheck(_:_:expecting:)(v56, v55, v50, v52, 0) & 1) == 0))
    {
LABEL_52:
      v54 += 2;
      if (!--v53)
        goto LABEL_65;
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease(v36);
  v36 = v52;
LABEL_61:
  result = (uint64_t)objc_msgSend(v73, "contact", swift_bridgeObjectRelease(v36).n128_f64[0]);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v58 = (void *)result;
  v59 = objc_msgSend((id)result, "linkedContactStoreIdentifier");

  if (!v59)
  {
LABEL_66:
    swift_bridgeObjectRelease(v75);
    return 0;
  }
  v60 = sub_100047110((uint64_t *)&unk_100828340);
  v61 = swift_allocObject(v60, 56, 7);
  *(_OWORD *)(v61 + 16) = xmmword_100624C90;
  *(_QWORD *)(v61 + 32) = CNContactThumbnailImageDataKey;
  *(_QWORD *)(v61 + 40) = CNContactGivenNameKey;
  *(_QWORD *)(v61 + 48) = CNContactNicknameKey;
  v76 = (_QWORD *)v61;
  specialized Array._endMutation()(v61);
  v62 = CNContactThumbnailImageDataKey;
  v63 = CNContactGivenNameKey;
  v64 = CNContactNicknameKey;
  sub_100047110((uint64_t *)&unk_100828950);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v66 = swift_bridgeObjectRelease(v76).n128_u64[0];
  v76 = 0;
  v67 = objc_msgSend(v72, "unifiedContactWithIdentifier:keysToFetch:error:", v59, isa, &v76, v66);

  v68 = v76;
  if (v67)
  {
    v69 = v76;

    swift_bridgeObjectRelease(v75);
    return 1;
  }
  else
  {
    v70 = v76;
    v71 = _convertNSErrorToError(_:)(v68);

    swift_willThrow();
    swift_bridgeObjectRelease(v75);
    swift_errorRelease(v71);
    return 0;
  }
}

void sub_10021E224(uint64_t a1, void *a2)
{
  sub_10004CF90(a1, a2, (unint64_t *)&qword_100828970, CNContact_ptr, &qword_100822080, (void (*)(id *, id))sub_100142B40);
}

uint64_t sub_10021E248()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for FriendsAchievementDataProvider()
{
  return objc_opt_self(_TtC10FitnessApp30FriendsAchievementDataProvider);
}

char *sub_10021E294(char *a1, char **a2, int *a3)
{
  char *v4;
  int v5;
  char *v7;
  char v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  char *v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = &v23[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v23);
  }
  else
  {
    v7 = *a2;
    v8 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    a1[8] = v8;
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = (uint64_t)a2 + v9;
    v12 = type metadata accessor for UUID(0);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14 = v7;
    v13(v10, v11, v12);
    v15 = a3[6];
    v16 = &v4[v15];
    v17 = (uint64_t)a2 + v15;
    v18 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = a3[7];
    v20 = a3[8];
    v21 = *(char **)((char *)a2 + v19);
    *(_QWORD *)&v4[v19] = v21;
    *(_QWORD *)&v4[v20] = *(char **)((char *)a2 + v20);
    v22 = v21;
  }
  return v4;
}

void sub_10021E388(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + a2[6];
  v7 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

}

uint64_t sub_10021E408(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;

  v6 = *(void **)a2;
  v7 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for UUID(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v6;
  v12(v9, v10, v11);
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  v18 = a3[7];
  v19 = a3[8];
  v20 = *(void **)(a2 + v18);
  *(_QWORD *)(a1 + v18) = v20;
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  v21 = v20;
  return a1;
}

uint64_t sub_10021E4D0(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  char v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;

  v6 = *(void **)a2;
  v7 = *(_BYTE *)(a2 + 8);
  v8 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v7;
  v9 = v6;

  v10 = a3[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = a3[7];
  v19 = *(void **)(a2 + v18);
  v20 = *(void **)(a1 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  v21 = v19;

  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10021E5A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  return a1;
}

uint64_t sub_10021E654(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;

  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[7];
  v17 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);

  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10021E71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10021E728);
}

uint64_t sub_10021E728(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[7]);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t sub_10021E7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10021E7D8);
}

uint64_t sub_10021E7D8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
  return result;
}

uint64_t sub_10021E878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_10021E8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Date.isAfter(date:)(a2 + *(int *)(a3 + 24)) & 1;
}

BOOL sub_10021E8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (Date.isAfter(date:)(a1 + *(int *)(a3 + 24)) & 1) == 0;
}

BOOL sub_10021E914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (Date.isAfter(date:)(a2 + *(int *)(a3 + 24)) & 1) == 0;
}

uint64_t sub_10021E944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Date.isAfter(date:)(a1 + *(int *)(a3 + 24)) & 1;
}

uint64_t sub_10021E970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static UUID.== infix(_:_:)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20));
}

uint64_t sub_10021E980()
{
  return sub_1000083D8(&qword_100828A18, type metadata accessor for ActivitySharingHighlight, (uint64_t)&unk_10062E7D8);
}

uint64_t sub_10021E9AC()
{
  return sub_1000083D8((unint64_t *)&qword_100828330, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

uint64_t initializeBufferWithCopyOfBuffer for ActivitySharingHighlight.HighlightType(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

void destroy for ActivitySharingHighlight.HighlightType(id *a1)
{

}

uint64_t assignWithCopy for ActivitySharingHighlight.HighlightType(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t assignWithTake for ActivitySharingHighlight.HighlightType(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingHighlight.HighlightType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingHighlight.HighlightType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_10021EB14(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingHighlight.HighlightType()
{
  return &type metadata for ActivitySharingHighlight.HighlightType;
}

uint64_t sub_10021EB34()
{
  return MindfulnessSessionViewModel.metadata.getter();
}

uint64_t sub_10021EB54()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, "description");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v2;
}

uint64_t sub_10021EBA8()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, "metadata");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  return v3;
}

unint64_t sub_10021ED6C()
{
  unint64_t result;

  result = qword_100828A20;
  if (!qword_100828A20)
  {
    result = swift_getWitnessTable(&unk_10062E9A0, &type metadata for MindfulnessSessionEntity);
    atomic_store(result, (unint64_t *)&qword_100828A20);
  }
  return result;
}

unint64_t sub_10021EDB4()
{
  unint64_t result;

  result = qword_100828A28;
  if (!qword_100828A28)
  {
    result = swift_getWitnessTable(&unk_10062E9D8, &type metadata for MindfulnessSessionEntity);
    atomic_store(result, (unint64_t *)&qword_100828A28);
  }
  return result;
}

unint64_t sub_10021EDFC()
{
  unint64_t result;

  result = qword_100828A30;
  if (!qword_100828A30)
  {
    result = swift_getWitnessTable(&unk_10062EA08, &type metadata for MindfulnessSessionEntity);
    atomic_store(result, (unint64_t *)&qword_100828A30);
  }
  return result;
}

unint64_t sub_10021EE44()
{
  unint64_t result;

  result = qword_100828A38;
  if (!qword_100828A38)
  {
    result = swift_getWitnessTable(&unk_100635CF0, &type metadata for MindfulnessSessionEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100828A38);
  }
  return result;
}

void *sub_10021EE88()
{
  return &protocol witness table for UUID;
}

uint64_t sub_10021EE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  _OWORD v3[2];
  uint64_t v4;

  sub_100047110(&qword_1008201E0);
  v0 = type metadata accessor for AppDependencyManager(0);
  memset(v3, 0, sizeof(v3));
  v4 = 0;
  v1 = static AppDependencyManager.shared.getter(v0);
  result = AppDependency.__allocating_init(key:manager:)(v3, v1);
  qword_10086A228 = result;
  return result;
}

uint64_t sub_10021EEF8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_100008398(v7, qword_10086A230);
  sub_10003CE9C(v7, (uint64_t)qword_10086A230);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000002CLL, 0x80000001006913E0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v6, v2);
}

uint64_t sub_10021F008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_100047110(&qword_100828AA0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100828AA8);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100828A98);
  sub_100008398(v7, qword_10086A248);
  sub_10003CE9C(v7, (uint64_t)qword_10086A248);
  v8 = sub_10021F580();
  EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 1, &type metadata for MindfulnessSessionEntity, v8);
  v9._object = (void *)0x8000000100691410;
  v9._countAndFlagsBits = 0xD000000000000021;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)(v3, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v10);
  return EntityURLRepresentation.init(stringInterpolation:)(v6, &type metadata for MindfulnessSessionEntity, v8);
}

void sub_10021F188()
{
  id v0;
  id v1;
  id v2;
  id v3;
  objc_class *v4;
  char *v5;
  id v6;
  objc_super v7;

  v0 = objc_msgSend(objc_allocWithZone((Class)HKHealthStore), "init");
  v1 = objc_msgSend(objc_allocWithZone((Class)FIUIUnitManager), "initWithHealthStore:", v0);
  v2 = objc_msgSend(objc_allocWithZone((Class)FIUIFormattingManager), "initWithUnitManager:", v1);
  if (v2)
  {
    v3 = v2;
    v4 = (objc_class *)type metadata accessor for MindfulnessSessionFormattingManager();
    v5 = (char *)objc_allocWithZone(v4);
    *(_QWORD *)&v5[OBJC_IVAR___CHMindfulnessSessionFormattingManager_fiuiFormattingManager] = v3;
    *(_QWORD *)&v5[OBJC_IVAR___CHMindfulnessSessionFormattingManager_healthStore] = v0;
    v7.receiver = v5;
    v7.super_class = v4;
    v6 = objc_msgSendSuper2(&v7, "init");

    qword_10086A260 = (uint64_t)v6;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10021F264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  __n128 v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD v39[2];

  v39[1] = a2;
  v3 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v3);
  v39[0] = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v5);
  v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_1008239C0);
  __chkstk_darwin(v8);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10081D800 != -1)
    swift_once(&qword_10081D800, sub_10021F188);
  v16 = (void *)qword_10086A260;
  v17 = type metadata accessor for Trainer(0, v13);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  v18 = v16;
  v19 = sub_1004C3E8C(a1, (uint64_t)v10);

  sub_10021FBA4((uint64_t)v10);
  v20 = objc_msgSend(v19, "string");

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  LocalizedStringResource.init(stringLiteral:)(v21, v23);
  v24 = (id)qword_10086A260;
  v25 = sub_1004C4710();

  v26 = objc_msgSend(v25, "string");
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  LocalizedStringResource.init(stringLiteral:)(v27, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  v30 = (id)qword_10086A260;
  v31 = sub_1004C4BA0(a1);
  v33 = v32;

  if (v33)
    v35 = v31;
  else
    v35 = 0xD000000000000014;
  if (v33)
    v36 = v33;
  else
    v36 = 0x80000001006913C0;
  v37 = v39[0];
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(v35, v36, 0, 0, v34);
  return DisplayRepresentation.init(title:subtitle:image:)(v15, v7, v37);
}

double sub_10021F52C@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  double result;

  if (qword_10081D7E8 != -1)
    swift_once(&qword_10081D7E8, sub_10021EE94);
  v2 = qword_10086A228;
  *a1 = qword_10086A228;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

unint64_t sub_10021F580()
{
  unint64_t result;

  result = qword_100828A40;
  if (!qword_100828A40)
  {
    result = swift_getWitnessTable(&unk_10062E910, &type metadata for MindfulnessSessionEntity);
    atomic_store(result, (unint64_t *)&qword_100828A40);
  }
  return result;
}

unint64_t sub_10021F5C8()
{
  unint64_t result;

  result = qword_100828A48;
  if (!qword_100828A48)
  {
    result = swift_getWitnessTable(&unk_10062EA40, &type metadata for MindfulnessSessionEntity);
    atomic_store(result, (unint64_t *)&qword_100828A48);
  }
  return result;
}

uint64_t sub_10021F60C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10081D7F8 != -1)
    swift_once(&qword_10081D7F8, sub_10021F008);
  v2 = sub_100047110(&qword_100828A98);
  v3 = sub_10003CE9C(v2, (uint64_t)qword_10086A248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_10021F684()
{
  unint64_t result;

  result = qword_100828A50;
  if (!qword_100828A50)
  {
    result = swift_getWitnessTable(&unk_10062EA68, &type metadata for MindfulnessSessionEntity);
    atomic_store(result, (unint64_t *)&qword_100828A50);
  }
  return result;
}

unint64_t sub_10021F6CC()
{
  unint64_t result;

  result = qword_100828A58;
  if (!qword_100828A58)
  {
    result = swift_getWitnessTable(&unk_10062EA90, &type metadata for MindfulnessSessionEntity);
    atomic_store(result, (unint64_t *)&qword_100828A58);
  }
  return result;
}

unint64_t sub_10021F714()
{
  unint64_t result;

  result = qword_100828A60;
  if (!qword_100828A60)
  {
    result = swift_getWitnessTable(&unk_10062EAB8, &type metadata for MindfulnessSessionEntity);
    atomic_store(result, (unint64_t *)&qword_100828A60);
  }
  return result;
}

unint64_t sub_10021F75C()
{
  unint64_t result;

  result = qword_100828A68;
  if (!qword_100828A68)
  {
    result = swift_getWitnessTable(&unk_10062EB10, &type metadata for MindfulnessSessionEntity);
    atomic_store(result, (unint64_t *)&qword_100828A68);
  }
  return result;
}

uint64_t sub_10021F7A0()
{
  return MindfulnessSessionViewModel.uuid.getter();
}

uint64_t sub_10021F7C0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_10021FBE4();
  v4 = URLRepresentableEntity.urlRepresentationParameter.getter(a1, v3);
  return sub_100114BE8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

uint64_t sub_10021F808@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10081D7F0 != -1)
    swift_once(&qword_10081D7F0, sub_10021EEF8);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_10003CE9C(v2, (uint64_t)qword_10086A230);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_10021F87C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100828A78;
  if (!qword_100828A78)
  {
    v1 = sub_100007050(&qword_100828A80);
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyResolverSpecification<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100828A78);
  }
  return result;
}

uint64_t sub_10021F8C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10021F580();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10021F904()
{
  unint64_t result;

  result = qword_100828A88;
  if (!qword_100828A88)
  {
    result = swift_getWitnessTable(&unk_10062EB40, &type metadata for MindfulnessSessionEntity);
    atomic_store(result, (unint64_t *)&qword_100828A88);
  }
  return result;
}

uint64_t sub_10021F948@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10021F264(*v1, a1);
}

uint64_t sub_10021F950(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10021F75C();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

ValueMetadata *type metadata accessor for MindfulnessSessionEntity()
{
  return &type metadata for MindfulnessSessionEntity;
}

uint64_t sub_10021F998(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v23;
  uint64_t v24;

  v2 = type metadata accessor for Date(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v23 - v6;
  v8 = type metadata accessor for UUID(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "UUID");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v12 = objc_msgSend(a1, "startDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v12);

  v13 = objc_msgSend(a1, "endDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v13);

  v14 = objc_msgSend(a1, "metadata");
  if (v14)
  {
    v15 = v14;
    v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v16 = 0;
  }
  v17 = objc_msgSend(a1, "sourceRevision");
  v18 = sub_100047110((uint64_t *)&unk_100828340);
  v19 = swift_allocObject(v18, 40, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100623630;
  *(_QWORD *)(v19 + 32) = a1;
  v24 = v19;
  specialized Array._endMutation()(v19);
  v20 = v24;
  v21 = objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionViewModel(0));
  return MindfulnessSessionViewModel.init(uuid:startDate:endDate:duration:metadata:sourceRevision:mindfulnessSessions:)(v10, v7, v5, 0, 1, v16, v17, v20);
}

uint64_t sub_10021FBA4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_1008239C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10021FBE4()
{
  unint64_t result;

  result = qword_100828A90;
  if (!qword_100828A90)
  {
    result = swift_getWitnessTable(&unk_10062E968, &type metadata for MindfulnessSessionEntity);
    atomic_store(result, (unint64_t *)&qword_100828A90);
  }
  return result;
}

uint64_t sub_10021FC28()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10062EBF0);
  v2 = swift_getKeyPath(&unk_10062EC18);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_10021FC98(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  unint64_t v33;

  v3 = (void *)objc_opt_self(FIUIFormattingManager);
  v4 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a1);
  v5 = objc_msgSend(v3, "stringWithNumber:decimalPrecision:", v4, 1);

  if (v5)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = *(void **)(v1 + OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager);
  v10 = objc_msgSend(v9, "fitnessUIFormattingManager");
  v11 = objc_msgSend(v10, "unitManager");

  if (!v11)
  {
    swift_bridgeObjectRelease(v8);
    __break(1u);
    goto LABEL_13;
  }
  v12 = objc_msgSend(v11, "userDistanceUnitForDistanceType:", 3);

  v13 = objc_msgSend(v9, "fitnessUIFormattingManager");
  v14 = objc_msgSend(v13, "localizedShortUnitStringForDistanceUnit:", v12);

  if (!v14)
  {
LABEL_13:
    swift_bridgeObjectRelease(v8);
    __break(1u);
    return;
  }
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = sub_100038CA0();
  v19 = StringProtocol.localizedUppercase.getter(&type metadata for String, v18);
  v21 = v20;
  swift_bridgeObjectRelease(v17);
  v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle", v15, v17);
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v22, "localizedStringForKey:value:table:", v23, 0, 0);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28 = sub_100047110((uint64_t *)&unk_100827460);
  v29 = swift_allocObject(v28, 112, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v29 + 56) = &type metadata for String;
  v30 = sub_100038CF8();
  if (v8)
    v32 = v6;
  else
    v32 = 0;
  v33 = 0xE000000000000000;
  if (v8)
    v33 = v8;
  *(_QWORD *)(v29 + 32) = v32;
  *(_QWORD *)(v29 + 40) = v33;
  *(_QWORD *)(v29 + 96) = &type metadata for String;
  *(_QWORD *)(v29 + 104) = v30;
  *(_QWORD *)(v29 + 64) = v30;
  *(_QWORD *)(v29 + 72) = v19;
  *(_QWORD *)(v29 + 80) = v21;
  String.init(format:_:)(v25, v27, v29, v31);
  swift_bridgeObjectRelease(v27);
}

_QWORD *sub_10021FF54(void *a1, void *a2, void *a3, void *a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  objc_class *v19;
  _QWORD *v20;
  void (*v21)(void);
  _QWORD *v22;
  uint64_t v24;
  objc_super v25;
  uint64_t v26;

  v9 = sub_100047110(&qword_10081EC78);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_supportedPaceDistances] = &off_10077F940;
  v13 = &v4[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource__paceDistance];
  v26 = 100;
  v14 = v4;
  Published.init(initialValue:)(&v26, &type metadata for Int);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  *(_QWORD *)&v14[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_dataCalculator] = a3;
  *(_QWORD *)&v14[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager] = a4;
  *(_QWORD *)&v14[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_workout] = a1;
  *(_QWORD *)&v14[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_workoutActivity] = a2;
  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = a1;

  v19 = (objc_class *)type metadata accessor for WorkoutDetailSwimmingActivityDataSource(0);
  v25.receiver = v14;
  v25.super_class = v19;
  v20 = objc_msgSendSuper2(&v25, "init");
  v21 = *(void (**)(void))((swift_isaMask & *v20) + 0xC0);
  v22 = v20;
  v21();

  return v22;
}

void sub_10022014C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000021, 0x80000001006914B0, "FitnessApp/WorkoutDetailSwimmingActivityDataSource.swift", 56, 2, 38, 0);
  __break(1u);
}

id sub_1002201D0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailSwimmingActivityDataSource(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100220298()
{
  return type metadata accessor for WorkoutDetailSwimmingActivityDataSource(0);
}

uint64_t type metadata accessor for WorkoutDetailSwimmingActivityDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_100828B08;
  if (!qword_100828B08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutDetailSwimmingActivityDataSource);
  return result;
}

void sub_1002202DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = "\b";
  v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_100220374();
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_100220374()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_10081E9C8)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Int);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_10081E9C8);
  }
}

id sub_1002203D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  objc_class *v20;
  id v21;
  objc_super v23;

  v4 = type metadata accessor for Date(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v23 - v8;
  v10 = type metadata accessor for DateInterval(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = static Date.distantPast.getter(v12);
  static Date.distantFuture.getter(v15);
  DateInterval.init(start:end:)(v9, v7);
  v16 = (char *)objc_allocWithZone((Class)type metadata accessor for WorkoutChartedDistancePathRenderer(0));
  v17 = OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_downhillRunDateIntervals;
  *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_downhillRunDateIntervals] = 0;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(&v16[OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_highlightInterval], v14, v10);
  v18 = *(_QWORD *)&v16[v17];
  *(_QWORD *)&v16[v17] = 0;
  v19 = v16;
  swift_bridgeObjectRelease(v18);
  v19[OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_extendedMode] = 0;

  *(_QWORD *)&v19[OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings] = a2;
  v20 = (objc_class *)type metadata accessor for WorkoutOverlayPathRenderer();
  v23.receiver = v19;
  v23.super_class = v20;
  v21 = objc_msgSendSuper2(&v23, "initWithOverlay:", a1);
  swift_unknownObjectRelease(a1);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v21;
}

void sub_100220568(CGContext *a1, double a2, double a3, double a4, double a5, MKZoomScale a6)
{
  char *v6;
  char *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  double v24;
  double v25;
  char **v26;
  void *v27;
  id v28;
  id v29;
  double v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  double v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char **v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  id v53;
  BOOL v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  double v59;
  MKMapPoint v60;
  MKMapPoint v61;
  double v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  double v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t, __n128);
  char *v76;
  void (*v77)(char *, uint64_t, uint64_t, uint64_t);
  char *v78;
  char *v79;
  char v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  id v85;
  double v86;
  id v87;
  id v88;
  double v89;
  double v90;
  double v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  double v102;
  CGContext *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  MKMapRect v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char **v112;
  char *v113;
  double v114;
  double v115;
  MKZoomScale v116;
  id v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  id v123;
  void (*v124)(char *, uint64_t);
  char *v125;
  CLLocationCoordinate2D v126;
  CLLocationCoordinate2D v127;
  MKMapRect v128;

  v7 = v6;
  v108.size.height = a5;
  v108.size.width = a4;
  v108.origin.y = a3;
  v108.origin.x = a2;
  v10 = type metadata accessor for DateInterval(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v121 = (char *)&v96 - v15;
  v16 = sub_100047110((uint64_t *)&unk_100827440);
  __chkstk_darwin(v16);
  v122 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Date(0);
  v100 = *(_QWORD *)(v18 - 8);
  v19 = __chkstk_darwin(v18);
  v125 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v22 = (char *)&v96 - v21;
  v23 = objc_msgSend(v7, "overlay");
  objc_msgSend(v23, "boundingMapRect");
  v114 = v25;
  v115 = v24;
  swift_unknownObjectRelease(v23);
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  v103 = a1;
  v116 = a6;
  objc_msgSend(v7, "applyStrokePropertiesToContext:atZoomScale:", a1, a6);
  v26 = (char **)v7;
  v27 = *(void **)&v7[OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings];
  v28 = objc_msgSend(v27, "workout");
  v29 = objc_msgSend(v28, "workoutActivityType");

  v30 = 5.0;
  if (v29 == (id)46)
    v30 = 15.0;
  v102 = v30;
  v117 = v27;
  v31 = objc_msgSend(v27, "allValidLocations");
  v32 = sub_100221424();
  v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);

  if ((unint64_t)v33 >> 62)
    goto LABEL_57;
  if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_61:
    swift_bridgeObjectRelease(v33);
    return;
  }
LABEL_5:
  if ((v33 & 0xC000000000000001) != 0)
  {
    v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
  }
  else
  {
    if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      return;
    }
    v34 = *(id *)(v33 + 32);
  }
  v35 = (uint64_t)v34;
  *(_QWORD *)&v36 = swift_bridgeObjectRelease(v33).n128_u64[0];
  v37 = objc_msgSend(v117, "inOrderLocationArrays", v36);
  v38 = sub_100047110((uint64_t *)&unk_100828B50);
  v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v38);

  v99 = *(_QWORD *)(v39 + 16);
  if (v99)
  {
    v40 = 0;
    v41 = v26;
    v113 = (char *)v26 + OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_highlightInterval;
    v109 = OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_downhillRunDateIntervals;
    v98 = v39 + 32;
    v26 = &selRef_setRightBarButtonItems_animated_;
    v33 = v35;
    v112 = v41;
    v106 = v14;
    v105 = v18;
    v104 = v22;
    v97 = v39;
    while (1)
    {
      if (v40 >= *(_QWORD *)(v39 + 16))
        goto LABEL_56;
      v101 = v40;
      v43 = *(_QWORD *)(v98 + 8 * v40);
      v44 = v33;
      v45 = objc_msgSend((id)v33, v26[7], swift_bridgeObjectRetain(v43).n128_f64[0]);
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v45);

      v47 = Date.timeIntervalSinceReferenceDate.getter(v46);
      v124 = *(void (**)(char *, uint64_t))(v100 + 8);
      v124(v22, v18);
      v111 = v43;
      if ((unint64_t)v43 >> 62)
      {
        if (v43 < 0)
          v93 = v43;
        else
          v93 = v43 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v111);
        v48 = _CocoaArrayWrapper.endIndex.getter(v93);
        swift_bridgeObjectRelease(v111);
        v43 = v111;
        v33 = v44;
        if (v48)
        {
LABEL_15:
          v49 = 0;
          v119 = v43 & 0xC000000000000001;
          v107 = v43 + 32;
          v118 = v48;
          do
          {
            if (v119)
            {
              v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v111);
              v54 = __OFADD__(v49, 1);
              v55 = v49 + 1;
              if (v54)
                goto LABEL_55;
            }
            else
            {
              v53 = *(id *)(v107 + 8 * v49);
              v54 = __OFADD__(v49, 1);
              v55 = v49 + 1;
              if (v54)
              {
LABEL_55:
                __break(1u);
LABEL_56:
                __break(1u);
LABEL_57:
                if (v33 < 0)
                  v94 = v33;
                else
                  v94 = v33 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v33);
                v95 = _CocoaArrayWrapper.endIndex.getter(v94);
                swift_bridgeObjectRelease(v33);
                if (!v95)
                  goto LABEL_61;
                goto LABEL_5;
              }
            }
            v56 = v53;
            v57 = objc_msgSend(v53, v26[7]);
            static Date._unconditionallyBridgeFromObjectiveC(_:)(v57);

            v59 = Date.timeIntervalSinceReferenceDate.getter(v58);
            v124(v22, v18);
            if (v59 < v47)
            {

              break;
            }
            v120 = v55;
            objc_msgSend((id)v33, "coordinate");
            v60 = MKMapPointForCoordinate(v126);
            v123 = v56;
            objc_msgSend(v56, "coordinate");
            v61 = MKMapPointForCoordinate(v127);
            v62 = MKRoadWidthAtZoomScale(v116);
            v63 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "distanceColors");
            if (!v63)
              goto LABEL_64;
            v64 = v63;
            v65 = objc_msgSend(v63, "nonGradientTextColor");

            if (!v65)
              goto LABEL_65;
            v66 = objc_msgSend(v117, "workout");
            v67 = objc_msgSend(v66, "workoutActivityType");

            if (v67 == (id)67 || v67 == (id)61)
            {
              v68 = *(uint64_t *)((char *)v112 + v109);
              if (v68)
              {
                v110 = v33;
                *(_QWORD *)&v69 = swift_bridgeObjectRetain(v68).n128_u64[0];
                v70 = objc_msgSend(v123, "timestamp", v69);
                static Date._unconditionallyBridgeFromObjectiveC(_:)(v70);

                v71 = *(_QWORD *)(v68 + 16);
                if (v71)
                {
                  v72 = v68
                      + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
                  v73 = swift_bridgeObjectRetain(v68);
                  v74 = *(_QWORD *)(v11 + 72);
                  v75 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
                  v76 = v122;
                  while (1)
                  {
                    v75(v76, v72, v10, v73);
                    v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
                    v77(v76, 0, 1, v10);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v76, 1, v10) == 1)
                      break;
                    v78 = v76;
                    v79 = v121;
                    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v121, v78, v10);
                    v80 = DateInterval.contains(_:)(v125);
                    v81 = v10;
                    v82 = v80;
                    v83 = v79;
                    v84 = v81;
                    (*(void (**)(char *))(v11 + 8))(v83);
                    if ((v82 & 1) != 0)
                    {
                      swift_bridgeObjectRelease_n(v68, 2);
                      v18 = v105;
                      v124(v125, v105);
                      v14 = v106;
                      v10 = v84;
                      v22 = v104;
                      v33 = v110;
                      goto LABEL_41;
                    }
                    v72 += v74;
                    --v71;
                    v10 = v84;
                    v76 = v122;
                    if (!v71)
                      goto LABEL_36;
                  }
                }
                else
                {
                  swift_bridgeObjectRetain(v68);
                  v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
                  v76 = v122;
LABEL_36:
                  v77(v76, 1, 1, v10);
                }
                swift_bridgeObjectRelease_n(v68, 2);
                v18 = v105;
                v124(v125, v105);
                v14 = v106;
                v22 = v104;
                v33 = v110;
                if (qword_10081DE20 != -1)
                  swift_once(&qword_10081DE20, sub_1004AC088);
                v85 = (id)qword_10086AC38;

                v65 = v85;
              }
            }
LABEL_41:
            v26 = &selRef_setRightBarButtonItems_animated_;
            v86 = v62 * 0.666666667;
            (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v113, v10);
            v87 = objc_msgSend(v123, "timestamp");
            static Date._unconditionallyBridgeFromObjectiveC(_:)(v87);

            LOBYTE(v87) = DateInterval.contains(_:)(v22);
            v124(v22, v18);
            (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
            if ((v87 & 1) == 0)
            {
              v86 = v86 * 0.5;
              v88 = objc_msgSend(v65, "colorWithAlphaComponent:");

              v65 = v88;
            }
            v89 = v60.x - v115;
            v90 = v60.y - v114;
            v91 = v61.x - v115;
            v92 = v61.y - v114;
            if (v86 * v86 <= (v91 - v89) * (v91 - v89) + (v92 - v90) * (v92 - v90))
            {
              v128.origin.x = fmin(v60.x, v61.x) - v86 * 0.5;
              v128.origin.y = fmin(v60.y, v61.y) - v86 * 0.5;
              v128.size.width = vabdd_f64(v60.x, v61.x) + v86;
              v128.size.height = vabdd_f64(v60.y, v61.y) + v86;
              if (MKMapRectIntersectsRect(v108, v128))
                sub_100221070(v103, v102 < v59 - v47, v65, v89, v90, v91, v92, v86);

              v50 = v123;
              v33 = (uint64_t)v123;
            }
            else
            {
              v50 = v123;
            }
            v51 = objc_msgSend(v50, "timestamp");
            static Date._unconditionallyBridgeFromObjectiveC(_:)(v51);

            v47 = Date.timeIntervalSinceReferenceDate.getter(v52);
            v124(v22, v18);
            v49 = v120;
          }
          while (v120 != v118);
        }
      }
      else
      {
        v48 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
        v33 = v44;
        if (v48)
          goto LABEL_15;
      }
      v42 = v101 + 1;
      swift_bridgeObjectRelease(v111);
      v40 = v42;
      v39 = v97;
      if (v42 == v99)
      {
        swift_bridgeObjectRelease(v97);
        goto LABEL_54;
      }
    }
  }
  swift_bridgeObjectRelease(v39);
  v33 = v35;
LABEL_54:

}

void sub_100221070(CGContext *a1, char a2, void *a3, double a4, double a5, double a6, double a7, CGFloat a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v18;
  uint64_t v19;
  const CGPath *v20;
  CGColor *v21;
  CGPathDrawingMode v22;
  id v23;
  CGMutablePathRef Mutable;
  _QWORD v25[6];

  v9 = v8;
  Mutable = CGPathCreateMutable();
  v25[0] = 0x3FF0000000000000;
  v25[1] = 0;
  v25[2] = 0;
  v25[3] = 0x3FF0000000000000;
  v25[4] = 0;
  v25[5] = 0;
  CGMutablePathRef.move(to:transform:)(v25, a4, a5);
  CGMutablePathRef.addLine(to:transform:)(v25, a6, a7);
  if ((a2 & 1) != 0)
  {
    v18 = sub_100047110(&qword_100821510);
    v19 = swift_allocObject(v18, 48, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100620BC0;
    *(_QWORD *)(v19 + 32) = 0;
    *(CGFloat *)(v19 + 40) = a8 + a8;
    v20 = (const CGPath *)CGPathRef.copy(dashingWithPhase:lengths:transform:)(0.0);
    swift_bridgeObjectRelease(v19);
    CGContextAddPath(a1, v20);
    CGContextSetLineWidth(a1, a8);
    CGContextSetLineCap(a1, kCGLineCapRound);
    if (*(_BYTE *)(v9 + OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_extendedMode) == 1)
    {
      v21 = (CGColor *)objc_msgSend(a3, "CGColor");
    }
    else
    {
      v23 = objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
      v21 = (CGColor *)objc_msgSend(v23, "CGColor");

    }
    CGContextSetStrokeColorWithColor(a1, v21);
    v22 = kCGPathStroke;
  }
  else
  {
    v20 = (const CGPath *)CGPathRef.copy(strokingWithWidth:lineCap:lineJoin:miterLimit:transform:)(1, 1, v25, a8, 10.0);
    CGContextAddPath(a1, v20);
    v21 = (CGColor *)objc_msgSend(a3, "CGColor");
    CGContextSetFillColorWithColor(a1, v21);
    v22 = kCGPathFill;
  }

  CGContextDrawPath(a1, v22);
}

uint64_t sub_100221290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_highlightInterval;
  v2 = type metadata accessor for DateInterval(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC10FitnessApp34WorkoutChartedDistancePathRenderer_downhillRunDateIntervals));
}

id sub_1002212DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutChartedDistancePathRenderer(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100221360()
{
  return type metadata accessor for WorkoutChartedDistancePathRenderer(0);
}

uint64_t type metadata accessor for WorkoutChartedDistancePathRenderer(uint64_t a1)
{
  uint64_t result;

  result = qword_100828B40;
  if (!qword_100828B40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutChartedDistancePathRenderer);
  return result;
}

uint64_t sub_1002213A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for DateInterval(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_10062EC90;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 128);
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_100221424()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082AC90;
  if (!qword_10082AC90)
  {
    v1 = objc_opt_self(CLLocation);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10082AC90);
  }
  return result;
}

uint64_t sub_100221460(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_observers);
  swift_beginAccess(v1 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_observers, v13, 33, 0);
  v4 = sub_100030DDC(a1);
  if ((v5 & 1) != 0)
  {
    v6 = v4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v8 = *v3;
    v12 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100401884();
      v8 = v12;
    }
    v9 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v6 + 8);
    sub_1004D1B6C(v6, v8);
    v10 = *v3;
    *v3 = v8;
    swift_release(v9);
    swift_bridgeObjectRelease(v10);
  }
  return swift_endAccess(v13);
}

uint64_t sub_100221524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  char v5;
  _QWORD v6[2];
  _QWORD v7[5];
  __int128 v8;
  __int128 v9;

  v1 = v0;
  result = Notification.userInfo.getter();
  if (result)
  {
    v3 = result;
    v6[0] = 0xD000000000000010;
    v6[1] = 0x8000000100688AB0;
    AnyHashable.init<A>(_:)(v7, v6, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v3 + 16) && (v4 = sub_10004C814((uint64_t)v7), (v5 & 1) != 0))
    {
      sub_10003E9BC(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
    }
    else
    {
      v8 = 0u;
      v9 = 0u;
    }
    swift_bridgeObjectRelease(v3);
    sub_10004CC10((uint64_t)v7);
    if (*((_QWORD *)&v9 + 1))
    {
      result = swift_dynamicCast(v6, &v8, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
      if ((result & 1) != 0
        && LOBYTE(v6[0]) != *(unsigned __int8 *)(v1
                                               + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_lastWheelchairUseValue))
      {
        *(_BYTE *)(v1 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_lastWheelchairUseValue) = v6[0];
        return sub_10000FFA8();
      }
    }
    else
    {
      return sub_10001BE90((uint64_t)&v8, (uint64_t *)&unk_100828420);
    }
  }
  return result;
}

id sub_100221700()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendsDataProvider(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002218C8()
{
  return type metadata accessor for TrendsDataProvider(0);
}

uint64_t sub_1002218D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

unint64_t sub_100221950()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100828C70;
  if (!qword_100828C70)
  {
    v1 = sub_10001E724(255, (unint64_t *)&qword_1008274A0, NSError_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100828C70);
  }
  return result;
}

uint64_t sub_1002219A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002219CC()
{
  return sub_10000FFA8();
}

unint64_t sub_1002219EC(unint64_t a1, double a2)
{
  uint64_t v2;

  return sub_10052939C(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1002219F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  v19 = a1;
  v7 = v6;
  v8 = a1;
  v9 = a5 >> 1;
  v10 = (a5 >> 1) - a4;
  if (a5 >> 1 == a4)
  {
    swift_bridgeObjectRetain(a1);
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    swift_unknownObjectRetain(a2);
    v15 = 0;
    while (a4 + v15 < v9)
    {
      if (__OFADD__(v15, 1))
        goto LABEL_10;
      v17 = v15;
      v18 = *(_OWORD *)(a3 + 16 * a4 + 16 * v15);
      sub_10048C5D0(&v19, (double *)&v17, a6, &v16);
      swift_bridgeObjectRelease(v8);
      if (!v7)
      {
        v8 = v16;
        v19 = v16;
        if (v10 != ++v15)
          continue;
      }
      swift_unknownObjectRelease(a2);
      return;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_100221AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

_QWORD *sub_100221B70(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v54 = a1[3];
  v55 = a1[2];
  v52 = a1[10];
  v53 = a1[9];
  v50 = a1[17];
  v51 = a1[16];
  v48 = a1[28];
  v49 = a1[27];
  v46 = a1[35];
  v47 = a1[34];
  v44 = a1[42];
  v45 = a1[41];
  v42 = a1[53];
  v43 = a1[52];
  v40 = a1[60];
  v41 = a1[59];
  v38 = a1[67];
  v39 = a1[66];
  v36 = a1[78];
  v37 = a1[77];
  v34 = a1[85];
  v35 = a1[84];
  v32 = a1[92];
  v33 = a1[91];
  v30 = a1[103];
  v31 = a1[102];
  v28 = a1[110];
  v29 = a1[109];
  v26 = a1[117];
  v27 = a1[116];
  v24 = a1[128];
  v25 = a1[127];
  v22 = a1[135];
  v23 = a1[134];
  v20 = a1[142];
  v21 = a1[141];
  v18 = a1[153];
  v19 = a1[152];
  v16 = a1[160];
  v17 = a1[159];
  v14 = a1[167];
  v15 = a1[166];
  v12 = a1[178];
  v13 = a1[177];
  v2 = a1[184];
  v3 = a1[185];
  v4 = a1[191];
  v5 = a1[192];
  v6 = a1[202];
  v7 = a1[203];
  v8 = a1[209];
  v9 = a1[210];
  v10 = a1[216];
  swift_bridgeObjectRelease(a1[217]);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v44);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v46);
  swift_bridgeObjectRelease(v47);
  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v49);
  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v51);
  swift_bridgeObjectRelease(v52);
  swift_bridgeObjectRelease(v53);
  swift_bridgeObjectRelease(v54);
  swift_bridgeObjectRelease(v55);
  return a1;
}

id sub_1002220A4()
{
  return sub_100111F3C(type metadata accessor for ShowAllButton);
}

uint64_t type metadata accessor for ShowAllButton()
{
  return objc_opt_self(_TtC10FitnessApp13ShowAllButton);
}

uint64_t sub_1002220D0()
{
  uint64_t result;

  sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  result = static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)(UIFontTextStyleTitle3, 0, 0x100000000, *(_QWORD *)&UIFontWeightBold, 0, 0);
  qword_100828C88 = result;
  return result;
}

id sub_10022214C(uint64_t a1)
{
  return sub_100222254(a1, &UIFontTextStyleFootnote, &qword_100828C90);
}

id sub_100222160()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:variant:", UIFontTextStyleFootnote, 256);
  qword_100828C98 = (uint64_t)result;
  return result;
}

id sub_1002221A8(uint64_t a1)
{
  return sub_100222254(a1, &UIFontTextStyleFootnote, &qword_100828CA0);
}

void sub_1002221BC()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "briskColors");
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, "nonGradientTextColor");

    if (v2)
    {
      qword_100828CA8 = (uint64_t)v2;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10022222C(uint64_t a1)
{
  return sub_100222254(a1, &UIFontTextStyleFootnote, &qword_100828CB0);
}

id sub_100222240(uint64_t a1)
{
  return sub_100222254(a1, &UIFontTextStyleSubheadline, &qword_100828CB8);
}

id sub_100222254(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", *a2);
  *a3 = result;
  return result;
}

char *sub_10022229C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  NSString v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  NSString v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  void *v56;
  id v57;
  id v58;
  char *v59;
  id v60;
  uint64_t v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  void *v73;
  objc_super v75;

  v9 = &v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnAchievement];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnShowAllAchievements];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = &v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_templateUniqueName];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_stackTemplateUniqueNames] = _swiftEmptyArrayStorage;
  v12 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_roundedView;
  v13 = objc_allocWithZone((Class)UIView);
  v14 = v4;
  v15 = objc_msgSend(v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = objc_msgSend(v15, "layer");
  objc_msgSend(v16, "setCornerRadius:", 15.0);

  objc_msgSend(v15, "setClipsToBounds:", 1);
  v17 = sub_100032490();
  objc_msgSend(v15, "setBackgroundColor:", v17);

  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v4[v12] = v15;
  v18 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionLabel;
  v19 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, "setLineBreakMode:", 0);
  objc_msgSend(v19, "setNumberOfLines:", 0);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v14[v18] = v19;
  v20 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel;
  v21 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v22 = (void *)UILabel.textAlignment(_:)(1);

  objc_msgSend(v22, "setLineBreakMode:", 0);
  objc_msgSend(v22, "setNumberOfLines:", 0);
  v23 = (void *)UILabel.withLineBreakMode(_:)(0);

  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v14[v20] = v23;
  v24 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillView;
  v25 = objc_msgSend(objc_allocWithZone((Class)CHPillLabelView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v14[v24] = v25;
  v26 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView;
  v27 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v28 = (void *)UIView.withContentMode(_:)(1);

  objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v14[v26] = v28;
  v29 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView;
  v30 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v31 = (void *)UIView.withContentMode(_:)(7);

  objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v14[v29] = v31;
  v32 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel;
  v33 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v33, "setLineBreakMode:", 0);
  objc_msgSend(v33, "setNumberOfLines:", 0);
  if (qword_10081D820 != -1)
    swift_once(&qword_10081D820, sub_1002221A8);
  v34 = (void *)UILabel.withFont(_:)(qword_100828CA0);

  v35 = (void *)UILabel.withLineBreakMode(_:)(0);
  objc_msgSend(v35, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v14[v32] = v35;
  v36 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_showAllButton;
  v37 = type metadata accessor for ShowAllButton();
  v38 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v37)), "init");
  if (qword_10081D818 != -1)
    swift_once(&qword_10081D818, sub_100222160);
  v39 = qword_100828C98;
  v40 = objc_msgSend(v38, "titleLabel");
  objc_msgSend(v40, "setFont:", v39);

  if (qword_10081D828 != -1)
    swift_once(&qword_10081D828, sub_1002221BC);
  v41 = (void *)UIButton.withTitleTextColor(_:for:)(qword_100828CA8, 0);

  v42 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v43 = String._bridgeToObjectiveC()();
  v44 = objc_msgSend(v42, "localizedStringForKey:value:table:", v43, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
  v46 = v45;

  v47 = String._bridgeToObjectiveC()();
  objc_msgSend(v41, "setTitle:forState:", v47, objc_msgSend(v41, "state"));
  swift_bridgeObjectRelease(v46);

  v48 = objc_msgSend(v41, "titleLabel");
  objc_msgSend(v48, "setLineBreakMode:", 0);

  v49 = objc_msgSend(v41, "titleLabel");
  objc_msgSend(v49, "setLineBreakMode:", 0);

  v50 = objc_msgSend(v41, "titleLabel");
  objc_msgSend(v50, "setNumberOfLines:", 0);

  objc_msgSend(v41, "setContentHorizontalAlignment:", 2);
  objc_msgSend(v41, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v14[v36] = v41;
  v51 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel;
  v52 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v52, "setLineBreakMode:", 0);
  objc_msgSend(v52, "setNumberOfLines:", 0);
  objc_msgSend(v52, "setTextAlignment:", 1);
  v53 = (void *)UILabel.withLineBreakMode(_:)(0);

  v54 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v55 = (void *)UILabel.withTextColor(_:)(v54);

  if (qword_10081D810 != -1)
    swift_once(&qword_10081D810, sub_10022214C);
  v56 = (void *)UILabel.withFont(_:)(qword_100828C90);

  objc_msgSend(v56, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v14[v51] = v56;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackHeightConstraint] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewWidthConstraint] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewTopConstraint] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelTopMargin] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeViewToSectionDescriptionMargin] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint] = 0;

  v75.receiver = v14;
  v75.super_class = (Class)type metadata accessor for TrophyCaseSectionCell();
  v57 = objc_msgSendSuper2(&v75, "initWithFrame:", a1, a2, a3, a4);
  v58 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v59 = (char *)v57;
  v60 = objc_msgSend(v58, "initWithTarget:action:", v59, "didTapBadgeImageView:");
  v61 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView;
  v62 = *(void **)&v59[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView];
  objc_msgSend(v62, "addGestureRecognizer:", v60);
  v63 = v62;

  v64 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_showAllButton;
  objc_msgSend(*(id *)&v59[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_showAllButton], "addTarget:action:forControlEvents:", v59, "didTapShowAllButton:", 64);
  v65 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel;
  v66 = *(id *)&v59[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel];
  if (FIUILocaleIsRightToLeft(v66))
    v67 = 0;
  else
    v67 = 2;
  objc_msgSend(v66, "setTextAlignment:", v67);

  v68 = *(id *)&v59[v64];
  if (FIUILocaleIsRightToLeft(v68))
    v69 = 1;
  else
    v69 = 2;
  objc_msgSend(v68, "setContentHorizontalAlignment:", v69);

  v70 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView;
  v71 = *(id *)&v59[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView];
  if (FIUILocaleIsRightToLeft(v71))
    v72 = 8;
  else
    v72 = 7;
  objc_msgSend(v71, "setContentMode:", v72);

  v73 = *(void **)&v59[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_roundedView];
  objc_msgSend(v73, "addSubview:", *(_QWORD *)&v59[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionLabel]);
  objc_msgSend(v73, "addSubview:", *(_QWORD *)&v59[v61]);
  objc_msgSend(v73, "addSubview:", *(_QWORD *)&v59[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel]);
  objc_msgSend(v73, "addSubview:", *(_QWORD *)&v59[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel]);
  objc_msgSend(v73, "addSubview:", *(_QWORD *)&v59[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillView]);
  objc_msgSend(v73, "addSubview:", *(_QWORD *)&v59[v70]);
  objc_msgSend(v73, "addSubview:", *(_QWORD *)&v59[v64]);
  objc_msgSend(v73, "addSubview:", *(_QWORD *)&v59[v65]);
  objc_msgSend(v59, "addSubview:", v73);
  sub_100222C90();

  return v59;
}

void sub_100222C90()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  double v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  void *v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  uint64_t v105;
  Class isa;
  void *v107;
  id v108;
  void *v109;
  id v110;
  void *v111;
  id v112;
  void *v113;
  id v114;
  void *v115;
  id v116;
  void *v117;
  id v118;
  void *v119;
  id v120;
  void *v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  void *v142;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView];
  v3 = objc_msgSend(v2, "topAnchor");
  v4 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_roundedView];
  v5 = objc_msgSend(v4, "topAnchor");
  v141 = objc_msgSend(v3, "constraintEqualToAnchor:constant:", v5, 85.0);

  LODWORD(v6) = 1132068864;
  objc_msgSend(v141, "setPriority:", v6);
  v7 = objc_msgSend(v2, "widthAnchor");
  v8 = objc_msgSend(v4, "widthAnchor");
  v140 = objc_msgSend(v7, "constraintEqualToAnchor:multiplier:", v8, 0.6);

  v9 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView];
  v10 = objc_msgSend(v9, "heightAnchor");
  v139 = objc_msgSend(v10, "constraintEqualToConstant:", 38.0);

  v11 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel];
  v12 = objc_msgSend(v11, "topAnchor");
  v13 = objc_msgSend(v2, "bottomAnchor");
  v138 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, 20.0);

  v124 = *(id *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel];
  v14 = objc_msgSend(v124, "topAnchor");
  v15 = objc_msgSend(v2, "bottomAnchor");
  v129 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, 20.0);

  v135 = v9;
  v16 = objc_msgSend(v9, "topAnchor");
  v123 = v11;
  v17 = objc_msgSend(v11, "bottomAnchor");
  v131 = objc_msgSend(v16, "constraintGreaterThanOrEqualToAnchor:constant:", v17, 16.0);

  v18 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel];
  v136 = v18;
  v19 = objc_msgSend(v18, "topAnchor");
  v20 = objc_msgSend(v11, "bottomAnchor");
  v126 = objc_msgSend(v19, "constraintGreaterThanOrEqualToAnchor:constant:", v20, 16.0);

  v21 = objc_msgSend(v9, "topAnchor");
  v22 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillView];
  v23 = objc_msgSend(v22, "bottomAnchor");
  v133 = objc_msgSend(v21, "constraintGreaterThanOrEqualToAnchor:constant:", v23, 16.0);

  v24 = objc_msgSend(v18, "topAnchor");
  v25 = objc_msgSend(v22, "bottomAnchor");
  v128 = objc_msgSend(v24, "constraintGreaterThanOrEqualToAnchor:constant:", v25, 16.0);

  v137 = (id)objc_opt_self(NSLayoutConstraint);
  v26 = sub_100047110((uint64_t *)&unk_100828340);
  v27 = swift_allocObject(v26, 272, 7);
  *(_OWORD *)(v27 + 16) = xmmword_10062ED30;
  v28 = objc_msgSend(v4, "topAnchor");
  v29 = objc_msgSend(v1, "topAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v27 + 32) = v30;
  v31 = objc_msgSend(v4, "bottomAnchor");
  v32 = objc_msgSend(v1, "bottomAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v27 + 40) = v33;
  v34 = objc_msgSend(v4, "leadingAnchor");
  v35 = objc_msgSend(v1, "leadingAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v27 + 48) = v36;
  v37 = objc_msgSend(v4, "trailingAnchor");
  v38 = objc_msgSend(v1, "trailingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v27 + 56) = v39;
  v40 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionLabel];
  v41 = objc_msgSend(v40, "topAnchor");
  v42 = objc_msgSend(v4, "topAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v42, 16.0);

  *(_QWORD *)(v27 + 64) = v43;
  v44 = objc_msgSend(v40, "leadingAnchor");
  v45 = objc_msgSend(v4, "leadingAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:constant:", v45, 16.0);

  *(_QWORD *)(v27 + 72) = v46;
  v47 = objc_msgSend(v40, "trailingAnchor");
  v48 = objc_msgSend(v4, "trailingAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v48, -16.0);

  *(_QWORD *)(v27 + 80) = v49;
  v50 = objc_msgSend(v2, "topAnchor");
  v51 = objc_msgSend(v40, "bottomAnchor");
  v52 = objc_msgSend(v50, "constraintGreaterThanOrEqualToAnchor:constant:", v51, 16.0);

  *(_QWORD *)(v27 + 88) = v52;
  v53 = objc_msgSend(v2, "centerXAnchor");
  v54 = objc_msgSend(v4, "centerXAnchor");
  v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

  *(_QWORD *)(v27 + 96) = v55;
  v56 = objc_msgSend(v2, "heightAnchor");
  v57 = objc_msgSend(v2, "widthAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

  *(_QWORD *)(v27 + 104) = v58;
  *(_QWORD *)(v27 + 112) = v129;
  v130 = v129;
  v59 = objc_msgSend(v124, "leadingAnchor");
  v60 = objc_msgSend(v4, "leadingAnchor");
  v61 = objc_msgSend(v59, "constraintEqualToAnchor:constant:", v60, 16.0);

  *(_QWORD *)(v27 + 120) = v61;
  v62 = objc_msgSend(v124, "trailingAnchor");
  v63 = objc_msgSend(v4, "trailingAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:constant:", v63, -16.0);

  *(_QWORD *)(v27 + 128) = v64;
  v65 = objc_msgSend(v123, "leadingAnchor");
  v66 = objc_msgSend(v4, "leadingAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:constant:", v66, 16.0);

  *(_QWORD *)(v27 + 136) = v67;
  v68 = objc_msgSend(v123, "trailingAnchor");
  v69 = objc_msgSend(v4, "trailingAnchor");
  v70 = objc_msgSend(v68, "constraintEqualToAnchor:constant:", v69, -16.0);

  *(_QWORD *)(v27 + 144) = v70;
  *(_QWORD *)(v27 + 152) = v131;
  *(_QWORD *)(v27 + 160) = v126;
  v125 = v131;
  v132 = v126;
  v71 = objc_msgSend(v22, "centerXAnchor");
  v72 = objc_msgSend(v4, "centerXAnchor");
  v73 = objc_msgSend(v71, "constraintEqualToAnchor:", v72);

  *(_QWORD *)(v27 + 168) = v73;
  v74 = objc_msgSend(v22, "topAnchor");
  v75 = objc_msgSend(v123, "bottomAnchor");
  v76 = objc_msgSend(v74, "constraintEqualToAnchor:constant:", v75, 5.0);

  *(_QWORD *)(v27 + 176) = v76;
  *(_QWORD *)(v27 + 184) = v133;
  *(_QWORD *)(v27 + 192) = v128;
  v127 = v133;
  v134 = v128;
  v77 = objc_msgSend(v135, "leadingAnchor");
  v78 = objc_msgSend(v4, "leadingAnchor");
  v79 = objc_msgSend(v77, "constraintEqualToAnchor:constant:", v78, 16.0);

  *(_QWORD *)(v27 + 200) = v79;
  v80 = objc_msgSend(v135, "trailingAnchor");
  v81 = objc_msgSend(v4, "centerXAnchor");
  v82 = objc_msgSend(v80, "constraintEqualToAnchor:constant:", v81, -5.0);

  *(_QWORD *)(v27 + 208) = v82;
  v83 = objc_msgSend(v135, "bottomAnchor");
  v84 = objc_msgSend(v4, "bottomAnchor");
  v85 = objc_msgSend(v83, "constraintEqualToAnchor:constant:", v84, -16.0);

  *(_QWORD *)(v27 + 216) = v85;
  v86 = objc_msgSend(v136, "leadingAnchor");
  v87 = objc_msgSend(v4, "leadingAnchor");
  v88 = objc_msgSend(v86, "constraintEqualToAnchor:constant:", v87, 16.0);

  *(_QWORD *)(v27 + 224) = v88;
  v89 = objc_msgSend(v136, "trailingAnchor");
  v90 = objc_msgSend(v4, "trailingAnchor");
  v91 = objc_msgSend(v89, "constraintEqualToAnchor:constant:", v90, -16.0);

  *(_QWORD *)(v27 + 232) = v91;
  v92 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_showAllButton];
  v93 = objc_msgSend(v92, "topAnchor");
  v94 = objc_msgSend(v136, "bottomAnchor");
  v95 = objc_msgSend(v93, "constraintEqualToAnchor:", v94);

  *(_QWORD *)(v27 + 240) = v95;
  v96 = objc_msgSend(v92, "leadingAnchor");
  v97 = objc_msgSend(v4, "centerXAnchor");
  v98 = objc_msgSend(v96, "constraintEqualToAnchor:constant:", v97, 16.0);

  *(_QWORD *)(v27 + 248) = v98;
  v99 = objc_msgSend(v92, "trailingAnchor");
  v100 = objc_msgSend(v4, "trailingAnchor");
  v101 = objc_msgSend(v99, "constraintEqualToAnchor:constant:", v100, -16.0);

  *(_QWORD *)(v27 + 256) = v101;
  v102 = objc_msgSend(v92, "bottomAnchor");
  v103 = objc_msgSend(v4, "bottomAnchor");
  v104 = objc_msgSend(v102, "constraintEqualToAnchor:constant:", v103, -22.0);

  *(_QWORD *)(v27 + 264) = v104;
  specialized Array._endMutation()(v105);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v137, "activateConstraints:", isa, swift_bridgeObjectRelease(v27).n128_f64[0]);

  v107 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewTopConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewTopConstraint] = v141;
  v108 = v141;

  v109 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewWidthConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewWidthConstraint] = v140;
  v110 = v140;

  v111 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackHeightConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackHeightConstraint] = v139;
  v112 = v139;

  v113 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelTopMargin];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelTopMargin] = v138;
  v114 = v138;

  v115 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeViewToSectionDescriptionMargin];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeViewToSectionDescriptionMargin] = v130;
  v116 = v130;

  v117 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint] = v125;
  v118 = v125;

  v119 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint] = v132;
  v120 = v132;

  v121 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint] = v127;
  v122 = v127;

  v142 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint] = v134;

}

void sub_100223C44(char a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  Class isa;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;

  v3 = v2;
  v6 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView);
  v7 = objc_msgSend(v6, "topAnchor");
  v8 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_roundedView);
  v9 = objc_msgSend(v8, "topAnchor");
  v10 = objc_msgSend(v7, "constraintEqualToAnchor:constant:", v9, a2);

  if ((a1 & 1) != 0)
  {
    v12 = objc_msgSend(v6, "widthAnchor");
    v54 = objc_msgSend(v12, "constraintEqualToConstant:", 126.0);

    v13 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView), "heightAnchor");
    v53 = objc_msgSend(v13, "constraintEqualToConstant:", 38.0);

    v14 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel), "topAnchor");
    v15 = objc_msgSend(v6, "bottomAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, 16.0);

    v17 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel), "topAnchor");
    v18 = objc_msgSend(v6, "bottomAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, 30.0);
  }
  else
  {
    LODWORD(v11) = 1132068864;
    objc_msgSend(v10, "setPriority:", v11);
    v20 = objc_msgSend(v6, "widthAnchor");
    v21 = objc_msgSend(v8, "widthAnchor");
    v54 = objc_msgSend(v20, "constraintEqualToAnchor:multiplier:", v21, 0.6);

    v22 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView), "heightAnchor");
    v53 = objc_msgSend(v22, "constraintEqualToConstant:", 41.0);

    v23 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel), "topAnchor");
    v24 = objc_msgSend(v6, "bottomAnchor");
    v16 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, 20.0);

    v17 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel), "topAnchor");
    v18 = objc_msgSend(v6, "bottomAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, 20.0);
  }
  v25 = v19;

  v52 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewTopConstraint;
  v26 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewTopConstraint);
  if (v26)
    objc_msgSend(v26, "setActive:", 0);
  v51 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewWidthConstraint;
  v27 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewWidthConstraint);
  if (v27)
    objc_msgSend(v27, "setActive:", 0);
  v50 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackHeightConstraint;
  v28 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackHeightConstraint);
  if (v28)
    objc_msgSend(v28, "setActive:", 0);
  v49 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelTopMargin;
  v29 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelTopMargin);
  if (v29)
    objc_msgSend(v29, "setActive:", 0);
  v30 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeViewToSectionDescriptionMargin;
  v31 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeViewToSectionDescriptionMargin);
  if (v31)
    objc_msgSend(v31, "setActive:", 0);
  v48 = (id)objc_opt_self(NSLayoutConstraint);
  v32 = sub_100047110((uint64_t *)&unk_100828340);
  v33 = swift_allocObject(v32, 72, 7);
  *(_OWORD *)(v33 + 16) = xmmword_10062ED40;
  *(_QWORD *)(v33 + 32) = v10;
  *(_QWORD *)(v33 + 40) = v54;
  *(_QWORD *)(v33 + 48) = v53;
  *(_QWORD *)(v33 + 56) = v16;
  *(_QWORD *)(v33 + 64) = v25;
  v56 = v33;
  specialized Array._endMutation()(v33);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  v34 = v10;
  v35 = v54;
  v36 = v53;
  v37 = v16;
  v38 = v25;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v48, "activateConstraints:", isa, swift_bridgeObjectRelease(v56).n128_f64[0]);

  v40 = *(void **)(v3 + v52);
  *(_QWORD *)(v3 + v52) = v34;
  v41 = v34;

  v42 = *(void **)(v3 + v51);
  *(_QWORD *)(v3 + v51) = v35;
  v43 = v35;

  v44 = *(void **)(v3 + v50);
  *(_QWORD *)(v3 + v50) = v36;
  v45 = v36;

  v46 = *(void **)(v3 + v49);
  *(_QWORD *)(v3 + v49) = v37;
  v47 = v37;

  v55 = *(id *)(v3 + v30);
  *(_QWORD *)(v3 + v30) = v38;

}

void sub_1002241E4(char *a1, uint64_t a2, void *a3, _QWORD *a4)
{
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v7;
  id v8;
  uint64_t v9;
  char *v10;

  v4 = &a1[*a4];
  v5 = *(void (**)(uint64_t))v4;
  if (*(_QWORD *)v4)
  {
    v7 = *((_QWORD *)v4 + 1);
    v8 = a3;
    v10 = a1;
    v9 = sub_10003AFE0((uint64_t)v5, v7);
    v5(v9);
    sub_100022BA4((uint64_t)v5, v7);

  }
}

void sub_100224270(void *a1, char a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  void *v33;
  __n128 v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  double *v47;
  void *v48;
  id v49;
  id v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  _QWORD *v68;
  void **aBlock;
  uint64_t v70;
  uint64_t (*v71)(uint64_t);
  void *v72;
  uint64_t (*v73)();
  double *v74;

  v4 = v3;
  v67 = a3;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v65 = *(_QWORD *)(v7 - 8);
  v66 = v7;
  __chkstk_darwin(v7);
  v64 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v62 = *(_QWORD *)(v9 - 8);
  v63 = v9;
  __chkstk_darwin(v9);
  v61 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS.QoSClass(0);
  v59 = *(_QWORD *)(v11 - 8);
  v60 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100226178(a2);
  v21 = v20;
  v23 = v22;
  v24 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView];
  sub_100047110((uint64_t *)&unk_10083D730);
  v25 = a1;
  LocalizedStringResource.init(stringLiteral:)(0x64656E726145, 0xE600000000000000);
  v26 = EntityProperty<>.init(title:)(v19);
  v27 = v25;
  LOBYTE(aBlock) = objc_msgSend(v27, "unearned", swift_retain(v26).n128_f64[0]) ^ 1;
  EntityProperty.wrappedValue.setter(&aBlock);

  swift_release(v26);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v28 = sub_1000083D8((unint64_t *)&qword_10081F608, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
  v29 = sub_100047110((uint64_t *)&unk_10083D740);
  v30 = sub_1000283C4((unint64_t *)&qword_10081F610, (uint64_t *)&unk_10083D740);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v29, v30, v14, v28);
  aBlock = (void **)v26;
  v70 = (uint64_t)v27;
  v31 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
  v32 = sub_1000F49B4();
  v33 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(&aBlock, v16, &type metadata for AwardEntity, v32);
  UIView.annotate(with:)(v33, v34);

  v35 = objc_msgSend(v27, "template");
  v36 = objc_msgSend(v35, "uniqueName");

  if (v36)
  {
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v39 = v38;

  }
  else
  {
    v37 = 0;
    v39 = 0;
  }
  v40 = (uint64_t *)&v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_templateUniqueName];
  v41 = *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_templateUniqueName + 8];
  *v40 = v37;
  v40[1] = v39;
  swift_bridgeObjectRelease(v41);
  v42 = v67;
  if (objc_msgSend(v67, "hasCachedThumbnailImageForAchievement:size:", v27, v21, v23))
  {
    v43 = objc_msgSend(v42, "thumbnailImageForAchievement:size:", v27, v21, v23);
    objc_msgSend(v24, "setImage:", v43);

  }
  else
  {
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v45 = v59;
    v44 = v60;
    (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v13, enum case for DispatchQoS.QoSClass.userInitiated(_:), v60);
    v46 = (void *)static OS_dispatch_queue.global(qos:)(v13);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v44);
    v47 = (double *)swift_allocObject(&unk_10078FE98, 56, 7);
    *((_QWORD *)v47 + 2) = v42;
    *((_QWORD *)v47 + 3) = v27;
    v47[4] = v21;
    v47[5] = v23;
    *((_QWORD *)v47 + 6) = v4;
    v73 = sub_1002284B4;
    v74 = v47;
    aBlock = _NSConcreteStackBlock;
    v70 = 1107296256;
    v71 = sub_10002D0F8;
    v72 = &unk_10078FEB0;
    v48 = _Block_copy(&aBlock);
    v49 = v27;
    v50 = v42;
    v51 = v4;
    v52 = v61;
    static DispatchQoS.unspecified.getter(v51);
    v68 = _swiftEmptyArrayStorage;
    v53 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v54 = sub_100047110(&qword_100828C80);
    v55 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
    v56 = v64;
    v57 = v54;
    v58 = v66;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v68, v57, v55, v66, v53);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v52, v56, v48);
    _Block_release(v48);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v56, v58);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v52, v63);
    swift_release(v74);
  }
}

uint64_t sub_1002247AC(void *a1, void *a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  __n128 v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  _QWORD *v33;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(a1, "thumbnailImageForAchievement:size:", a2, a4, a5);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v18 = (void *)static OS_dispatch_queue.main.getter(v17);
  v19 = swift_allocObject(&unk_10078FE20, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, a3);
  v20 = (_QWORD *)swift_allocObject(&unk_10078FEE8, 40, 7);
  v20[2] = v19;
  v20[3] = a2;
  v20[4] = v16;
  aBlock[4] = sub_1002284F8;
  v33 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_10078FF00;
  v21 = _Block_copy(aBlock);
  v22 = v33;
  v23 = a2;
  v24 = v16;
  swift_release(v22);
  static DispatchQoS.unspecified.getter(v25);
  aBlock[0] = _swiftEmptyArrayStorage;
  v26 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v27 = sub_100047110(&qword_100828C80);
  v28 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v10, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v30);
}

void sub_100224A2C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  _BYTE v21[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v9 = *(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_templateUniqueName);
    v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_templateUniqueName + 8);
    swift_bridgeObjectRetain(v8);

  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  v10 = objc_msgSend(a2, "template");
  v11 = objc_msgSend(v10, "uniqueName");

  if (!v11)
  {
    if (!v8)
      goto LABEL_18;
LABEL_14:
    swift_bridgeObjectRelease(v8);
    return;
  }
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  if (!v8)
  {
    if (v14)
    {
      swift_bridgeObjectRelease(v14);
      return;
    }
    goto LABEL_18;
  }
  if (!v14)
    goto LABEL_14;
  if (v9 == v12 && v8 == v14)
  {
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v8, v12, v14, 0);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v14);
    if ((v16 & 1) == 0)
      return;
  }
LABEL_18:
  swift_beginAccess(v5, &v20, 0, 0);
  v17 = swift_unknownObjectWeakLoadStrong(v5);
  if (v17)
  {
    v18 = (void *)v17;
    v19 = *(id *)(v17 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView);

    objc_msgSend(v19, "setImage:", a3);
  }
}

void sub_100224BD8(uint64_t a1, char a2, void *a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  Class isa;
  id v32;
  uint64_t v33;
  unsigned __int8 v34;
  void *v35;
  Class v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int IsRightToLeft;
  id v63;
  id v64;
  _QWORD *v65;
  _QWORD aBlock[5];
  uint64_t v67;

  v63 = a3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD **)(v12 - 8);
  __chkstk_darwin(v12);
  v57 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS.QoSClass(0);
  v55 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v54 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100226294(a2);
  v19 = v18;
  IsRightToLeft = FIUILocaleIsRightToLeft(v20);
  if ((unint64_t)a1 >> 62)
    goto LABEL_20;
  v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v60 = v9;
    v61 = v8;
    v58 = v13;
    v59 = v12;
    v56 = v15;
    if (!v21)
      break;
    v53 = v4;
    aBlock[0] = _swiftEmptyArrayStorage;
    v4 = aBlock;
    sub_1001214C4(0, v21 & ~(v21 >> 63), 0);
    if (v21 < 0)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return;
    }
    v52 = v11;
    v12 = 0;
    v13 = (_QWORD *)aBlock[0];
    v64 = (id)(a1 & 0xC000000000000001);
    v11 = (char *)a1;
    v15 = a4;
    while (v21 != v12)
    {
      if (v64)
        v22 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
      else
        v22 = *(id *)(a1 + 8 * v12 + 32);
      v4 = v22;
      v23 = objc_msgSend(v22, "template");
      v24 = objc_msgSend(v23, "uniqueName");

      if (!v24)
        goto LABEL_25;
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v8 = v25;

      aBlock[0] = v13;
      v27 = v13[2];
      v26 = v13[3];
      a4 = v27 + 1;
      if (v27 >= v26 >> 1)
      {
        v4 = aBlock;
        sub_1001214C4(v26 > 1, v27 + 1, 1);
        v13 = (_QWORD *)aBlock[0];
      }
      ++v12;
      v13[2] = a4;
      v28 = &v13[2 * v27];
      v28[4] = v9;
      v28[5] = v8;
      a1 = (uint64_t)v11;
      if (v21 == v12)
      {
        a4 = v15;
        v11 = v52;
        v4 = v53;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_20:
    if (a1 < 0)
      v50 = a1;
    else
      v50 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v21 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_bridgeObjectRelease(a1);
  }
  v13 = _swiftEmptyArrayStorage;
LABEL_16:
  v29 = *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_stackTemplateUniqueNames);
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_stackTemplateUniqueNames) = v13;
  swift_bridgeObjectRelease(v29);
  sub_10001E724(0, (unint64_t *)&qword_10082BBF0, ACHAchievement_ptr);
  v30 = (char *)v4;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v32 = v63;
  v33 = IsRightToLeft;
  v34 = objc_msgSend(v63, "hasCachedThumbnailImageForAchievements:size:alignment:stackType:", isa, IsRightToLeft, a4, v17, v19);

  if ((v34 & 1) != 0)
  {
    v35 = *(void **)&v30[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView];
    v36 = Array._bridgeToObjectiveC()().super.isa;
    v64 = objc_msgSend(v32, "thumbnailImageForAchievements:size:alignment:stackType:", v36, v33, a4, v17, v19);

    objc_msgSend(v35, "setImage:", v64);
  }
  else
  {
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v38 = v54;
    v37 = v55;
    v39 = v56;
    (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v54, enum case for DispatchQoS.QoSClass.userInitiated(_:), v56);
    v64 = (id)static OS_dispatch_queue.global(qos:)(v38);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
    v40 = swift_allocObject(&unk_10078FDD0, 64, 7);
    *(_QWORD *)(v40 + 16) = v32;
    *(_QWORD *)(v40 + 24) = a1;
    *(double *)(v40 + 32) = v17;
    *(double *)(v40 + 40) = v19;
    *(_DWORD *)(v40 + 48) = v33;
    *(_DWORD *)(v40 + 52) = a4;
    *(_QWORD *)(v40 + 56) = v30;
    aBlock[4] = sub_100228408;
    v67 = v40;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_10078FDE8;
    v41 = _Block_copy(aBlock);
    swift_bridgeObjectRetain(a1);
    v42 = v32;
    v43 = v30;
    v44 = v57;
    static DispatchQoS.unspecified.getter(v43);
    v65 = _swiftEmptyArrayStorage;
    v45 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v46 = sub_100047110(&qword_100828C80);
    v47 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
    v48 = v61;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v65, v46, v47, v61, v45);
    v49 = v64;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v44, v11, v41);
    _Block_release(v41);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v48);
    ((void (*)(char *, uint64_t))v58[1])(v44, v59);
    swift_release(v67);
  }
}

uint64_t sub_100225134(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  Class isa;
  id v21;
  __n128 v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[5];
  _QWORD *v37;

  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v35 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for DispatchQoS(0);
  v17 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_10082BBF0, ACHAchievement_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v21 = objc_msgSend(a1, "thumbnailImageForAchievements:size:alignment:stackType:", isa, a3, a4, a6, a7);

  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v23 = (void *)static OS_dispatch_queue.main.getter(v22);
  v24 = swift_allocObject(&unk_10078FE20, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16, a5);
  v25 = (_QWORD *)swift_allocObject(&unk_10078FE48, 40, 7);
  v25[2] = v24;
  v25[3] = a2;
  v25[4] = v21;
  aBlock[4] = sub_100228474;
  v37 = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_10078FE60;
  v26 = _Block_copy(aBlock);
  v27 = v37;
  swift_bridgeObjectRetain(a2);
  v28 = v21;
  swift_release(v27);
  static DispatchQoS.unspecified.getter(v29);
  aBlock[0] = _swiftEmptyArrayStorage;
  v30 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v31 = sub_100047110(&qword_100828C80);
  v32 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v14, v30);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v19, v16, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v34);
}

void sub_1002253F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD *v27;
  _BYTE v28[24];

  v4 = a1 + 16;
  swift_beginAccess(a1 + 16, v28, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(_QWORD **)(Strong + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_stackTemplateUniqueNames);
    swift_bridgeObjectRetain(v7);

    if (!((unint64_t)a2 >> 62))
    {
LABEL_3:
      v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    v7 = 0;
    if (!((unint64_t)a2 >> 62))
      goto LABEL_3;
  }
  if (a2 < 0)
    v25 = a2;
  else
    v25 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v8 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(a2);
LABEL_4:
  v9 = _swiftEmptyArrayStorage;
  if (v8)
  {
    v27 = _swiftEmptyArrayStorage;
    sub_1001214C4(0, v8 & ~(v8 >> 63), 0);
    if ((v8 & 0x8000000000000000) == 0)
    {
      v10 = 0;
      v9 = v27;
      while (v8 != v10)
      {
        if ((a2 & 0xC000000000000001) != 0)
          v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a2);
        else
          v11 = *(id *)(a2 + 8 * v10 + 32);
        v12 = v11;
        v13 = objc_msgSend(v11, "template");
        v14 = objc_msgSend(v13, "uniqueName");

        if (!v14)
          goto LABEL_28;
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v17 = v16;

        v27 = v9;
        v19 = v9[2];
        v18 = v9[3];
        if (v19 >= v18 >> 1)
        {
          sub_1001214C4(v18 > 1, v19 + 1, 1);
          v9 = v27;
        }
        ++v10;
        v9[2] = v19 + 1;
        v20 = &v9[2 * v19];
        v20[4] = v15;
        v20[5] = v17;
        if (v8 == v10)
          goto LABEL_15;
      }
      __break(1u);
    }
    __break(1u);
LABEL_28:
    __break(1u);
  }
  else
  {
LABEL_15:
    if (v7)
    {
      v21 = sub_1002A0A98(v7, v9);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v9);
      if ((v21 & 1) != 0)
      {
        swift_beginAccess(v4, &v27, 0, 0);
        v22 = swift_unknownObjectWeakLoadStrong(v4);
        if (v22)
        {
          v23 = (void *)v22;
          v24 = *(id *)(v22 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView);

          objc_msgSend(v24, "setImage:", a3);
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease(v9);
    }
  }
}

void sub_10022565C()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TrophyCaseSectionCell();
  objc_msgSendSuper2(&v5, "prepareForReuse");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel], "setAttributedText:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel], "setText:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionLabel], "setText:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel], "setText:", 0);
  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint] = 0;

  v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint] = 0;

  v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint] = 0;

  v4 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint] = 0;

}

id sub_100225780()
{
  return sub_100111F3C(type metadata accessor for TrophyCaseSectionCell);
}

uint64_t type metadata accessor for TrophyCaseSectionCell()
{
  return objc_opt_self(_TtC10FitnessApp21TrophyCaseSectionCell);
}

id sub_100225930(char a1)
{
  _QWORD *v1;

  return objc_msgSend(*(id *)(*v1 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView), "setHidden:", a1 & 1);
}

double sub_100225954()
{
  _QWORD *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;

  objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView), "frame");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = UIEdgeInsets.init(uniform:)(5.0);
  return sub_1002283B8(v2, v4, v6, v8, v9, v10);
}

void sub_1002259C8(uint64_t a1, void *a2, uint64_t a3, char *a4, char *a5, void *a6, unsigned int a7, char a8, double a9, double a10, uint64_t a11, void *a12, NSString *a13, NSString *a14)
{
  sub_100227BE8(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14);
}

void sub_100225A04()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnAchievement];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = &v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnShowAllAchievements];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = &v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_templateUniqueName];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_stackTemplateUniqueNames] = _swiftEmptyArrayStorage;
  v5 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_roundedView;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = objc_msgSend(v6, "layer");
  objc_msgSend(v7, "setCornerRadius:", 15.0);

  objc_msgSend(v6, "setClipsToBounds:", 1);
  v8 = sub_100032490();
  objc_msgSend(v6, "setBackgroundColor:", v8);

  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v5] = v6;
  v9 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionLabel;
  v10 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v10, "setLineBreakMode:", 0);
  objc_msgSend(v10, "setNumberOfLines:", 0);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v9] = v10;
  v11 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel;
  v12 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = (void *)UILabel.textAlignment(_:)(1);

  objc_msgSend(v13, "setLineBreakMode:", 0);
  objc_msgSend(v13, "setNumberOfLines:", 0);
  v14 = (void *)UILabel.withLineBreakMode(_:)(0);

  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v11] = v14;
  v15 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillView;
  v16 = objc_msgSend(objc_allocWithZone((Class)CHPillLabelView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v15] = v16;
  v17 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageView;
  v18 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v19 = (void *)UIView.withContentMode(_:)(1);

  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v17] = v19;
  v20 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView;
  v21 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v22 = (void *)UIView.withContentMode(_:)(7);

  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v20] = v22;
  v23 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel;
  v24 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v24, "setLineBreakMode:", 0);
  objc_msgSend(v24, "setNumberOfLines:", 0);
  if (qword_10081D820 != -1)
    swift_once(&qword_10081D820, sub_1002221A8);
  v25 = (void *)UILabel.withFont(_:)(qword_100828CA0);

  v26 = (void *)UILabel.withLineBreakMode(_:)(0);
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v23] = v26;
  v27 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_showAllButton;
  v28 = type metadata accessor for ShowAllButton();
  v29 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v28)), "init");
  if (qword_10081D818 != -1)
    swift_once(&qword_10081D818, sub_100222160);
  v30 = qword_100828C98;
  v31 = objc_msgSend(v29, "titleLabel");
  objc_msgSend(v31, "setFont:", v30);

  if (qword_10081D828 != -1)
    swift_once(&qword_10081D828, sub_1002221BC);
  v32 = (void *)UIButton.withTitleTextColor(_:for:)(qword_100828CA8, 0);

  v33 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v37 = v36;

  v38 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "setTitle:forState:", v38, objc_msgSend(v32, "state"));
  swift_bridgeObjectRelease(v37);

  v39 = objc_msgSend(v32, "titleLabel");
  objc_msgSend(v39, "setLineBreakMode:", 0);

  v40 = objc_msgSend(v32, "titleLabel");
  objc_msgSend(v40, "setLineBreakMode:", 0);

  v41 = objc_msgSend(v32, "titleLabel");
  objc_msgSend(v41, "setNumberOfLines:", 0);

  objc_msgSend(v32, "setContentHorizontalAlignment:", 2);
  objc_msgSend(v32, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v27] = v32;
  v42 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel;
  v43 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v43, "setLineBreakMode:", 0);
  objc_msgSend(v43, "setNumberOfLines:", 0);
  objc_msgSend(v43, "setTextAlignment:", 1);
  v44 = (void *)UILabel.withLineBreakMode(_:)(0);

  v45 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v46 = (void *)UILabel.withTextColor(_:)(v45);

  if (qword_10081D810 != -1)
    swift_once(&qword_10081D810, sub_10022214C);
  v47 = (void *)UILabel.withFont(_:)(qword_100828C90);

  objc_msgSend(v47, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v42] = v47;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackHeightConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewWidthConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeImageViewTopConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelTopMargin] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeViewToSectionDescriptionMargin] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/TrophyCaseSectionCell.swift", 38, 2, 171, 0);
  __break(1u);
}

void sub_100226178(char a1)
{
  id v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  id v11;
  id v12;
  CGRect v13;

  v2 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v2, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v13.origin.x = v4;
  v13.origin.y = v6;
  v13.size.width = v8;
  v13.size.height = v10;
  CGRectGetWidth(v13);
  if ((a1 & 1) != 0)
  {
    v11 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v12 = objc_msgSend(v11, "preferredContentSizeCategory");

    UIContentSizeCategory.isAccessibilityCategory.getter(v12);
  }
}

double sub_100226294(char a1)
{
  id v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  id v12;
  id v13;
  CGRect v15;

  v2 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v2, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v15.origin.x = v4;
  v15.origin.y = v6;
  v15.size.width = v8;
  v15.size.height = v10;
  v11 = CGRectGetWidth(v15) + -20.0;
  if ((a1 & 1) != 0)
  {
    v12 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v13 = objc_msgSend(v12, "preferredContentSizeCategory");

    LOBYTE(v12) = UIContentSizeCategory.isAccessibilityCategory.getter(v13);
    if ((v12 & 1) == 0)
      v11 = (v11 + -10.0) * 0.5;
  }
  return v11 * 0.5 + -16.0 + -5.0;
}

id sub_1002263CC(void *a1, NSString *a2, void *a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  id v23;
  NSString *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  NSString *v36;
  id v37;
  uint64_t v38;
  NSString *v39;
  char v40;
  NSString *v41;
  NSString *v42;
  char *v43;
  void *v44;
  Class isa;
  id v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t inited;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  NSString v55;
  Class v56;
  id v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  NSString *v61;
  NSString *v62;
  NSString *v63;
  id v64;
  NSString *v65;
  NSString *v66;
  NSString *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  NSString v72;
  unint64_t v73;
  Class v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  NSString v79;
  Class v80;
  id v81;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSString *v88;
  NSString *v89;
  NSString *v90;
  __int128 v91;
  NSString *v92;
  id v93;
  unint64_t v94;
  char v95[64];
  char v96[72];

  v90 = a2;
  v86 = type metadata accessor for Calendar(0);
  v85 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v7);
  v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = (NSString *)type metadata accessor for Date(0);
  v87 = (uint64_t)*(v88 - 1);
  __chkstk_darwin(v88);
  v84 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100821648);
  __chkstk_darwin(v11);
  v13 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v83 - v15;
  v17 = type metadata accessor for DateComponents(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (void *)objc_opt_self(UIColor);
  v89 = (NSString *)objc_msgSend(v21, "labelColor");
  v93 = objc_msgSend(v21, "secondaryLabelColor");
  v94 = (unint64_t)a3;
  v22 = objc_msgSend(a3, "titleForAchievement:", a1);
  if (v22
    || (v23 = objc_msgSend(a1, "template"),
        v22 = objc_msgSend(v23, "uniqueName"),
        v23,
        v22))
  {
    *(_QWORD *)&v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v92 = v24;

  }
  else
  {
    *(_QWORD *)&v91 = 0;
    v92 = (NSString *)0xE000000000000000;
  }
  v25 = objc_msgSend(a1, "relevantEarnedInstance");
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
LABEL_10:
    v29 = &qword_100821648;
    v30 = (uint64_t)v16;
    goto LABEL_11;
  }
  v26 = v25;
  v27 = objc_msgSend(v25, "earnedDateComponents");

  if (v27)
  {
    static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v27);

    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v13, v28, 1, v17);
  sub_1000456B4((uint64_t)v13, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    goto LABEL_10;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  v37 = objc_msgSend((id)objc_opt_self(NSCalendar), "hk_gregorianCalendar");
  static Calendar._unconditionallyBridgeFromObjectiveC(_:)(v37);

  Calendar.date(from:)(v20);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v6, v86);
  v38 = v87;
  v39 = v88;
  if ((*(unsigned int (**)(char *, uint64_t, NSString *))(v87 + 48))(v9, 1, v88) != 1)
  {
    v43 = v84;
    (*(void (**)(char *, char *, NSString *))(v38 + 32))(v84, v9, v39);
    v44 = (void *)objc_opt_self(CHListAndDetailViewDateFormatter);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v36 = v90;
    v46 = objc_msgSend(v44, "formattedListStringForDate:font:", isa, v90);

    v47 = objc_msgSend(v46, "string");
    v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
    v35 = v48;

    (*(void (**)(char *, NSString *))(v38 + 8))(v43, v39);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    goto LABEL_21;
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v29 = (uint64_t *)&unk_100828370;
  v30 = (uint64_t)v9;
LABEL_11:
  sub_10001BE90(v30, v29);
  v31 = objc_msgSend((id)v94, "unachievedShortDescriptionForAchievement:", a1);
  if (!v31)
  {
LABEL_15:
    v94 = 0;
    v35 = 0xE000000000000000;
    v36 = v90;
LABEL_21:
    v41 = v89;
    v42 = v92;
    goto LABEL_22;
  }
  v32 = v31;
  v33 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v35 = v34;

  if (v33 == (void *)0xD000000000000028 && v35 == 0x8000000100688530)
  {
    swift_bridgeObjectRelease(0x8000000100688530);
    goto LABEL_15;
  }
  v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v35, 0xD000000000000028, 0x8000000100688530, 0);
  v36 = v90;
  v41 = v89;
  v42 = v92;
  if ((v40 & 1) != 0)
  {
    swift_bridgeObjectRelease(v35);
    v94 = 0;
    v35 = 0xE000000000000000;
  }
  else
  {
    v94 = (unint64_t)v33;
  }
LABEL_22:
  v49 = sub_100047110(&qword_100828DC0);
  inited = swift_initStackObject(v49, v96);
  v91 = xmmword_100620BC0;
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = v36;
  *(_QWORD *)(inited + 48) = NSForegroundColorAttributeName;
  *(_QWORD *)(inited + 56) = v41;
  v90 = NSFontAttributeName;
  v88 = v36;
  v89 = NSForegroundColorAttributeName;
  v92 = v41;
  v51 = sub_1004361C0(inited);
  sub_1002F78A0(v51);
  v53 = v52;
  v54 = objc_allocWithZone((Class)NSMutableAttributedString);
  v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v42);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  v56 = Dictionary._bridgeToObjectiveC()().super.isa;
  v57 = objc_msgSend(v54, "initWithString:attributes:", v55, v56, swift_bridgeObjectRelease(v53).n128_f64[0]);

  v58 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0)
    v58 = v94 & 0xFFFFFFFFFFFFLL;
  v59 = v35;
  if (v58)
  {
    v60 = swift_initStackObject(v49, v95);
    *(_OWORD *)(v60 + 16) = v91;
    v61 = v90;
    v62 = v88;
    *(_QWORD *)(v60 + 32) = v90;
    *(_QWORD *)(v60 + 40) = v62;
    v63 = v89;
    v64 = v93;
    *(_QWORD *)(v60 + 48) = v89;
    *(_QWORD *)(v60 + 56) = v64;
    v65 = v62;
    v66 = v61;
    v67 = v63;
    v93 = v64;
    v68 = sub_1004361C0(v60);
    sub_1002F78A0(v51);
    v70 = v69;
    swift_bridgeObjectRelease(v51);
    v71 = objc_allocWithZone((Class)NSAttributedString);
    v72 = String._bridgeToObjectiveC()();
    v73 = v59;
    v74 = Dictionary._bridgeToObjectiveC()().super.isa;
    v75 = objc_msgSend(v71, "initWithString:attributes:", v72, v74, swift_bridgeObjectRelease(v70).n128_f64[0]);

    sub_1002F78A0(v68);
    v77 = v76;
    swift_bridgeObjectRelease(v68);
    v78 = objc_allocWithZone((Class)NSAttributedString);
    v79 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v73);
    v80 = Dictionary._bridgeToObjectiveC()().super.isa;
    v81 = objc_msgSend(v78, "initWithString:attributes:", v79, v80, swift_bridgeObjectRelease(v77).n128_f64[0]);

    objc_msgSend(v57, "appendAttributedString:", v75);
    objc_msgSend(v57, "appendAttributedString:", v81);

  }
  else
  {
    swift_bridgeObjectRelease(v51);

    swift_bridgeObjectRelease(v35);
  }
  return v57;
}

id sub_100226C58()
{
  id v0;
  double v1;
  void *object;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  NSString *v7;
  id v8;
  NSString *v9;
  void *v10;
  id v11;
  unint64_t v12;
  id v13;
  NSString v14;
  Class isa;
  id v16;
  uint64_t v18;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  LODWORD(v1) = 1036831949;
  objc_msgSend(v0, "setHyphenationFactor:", v1);
  object = AAUIAwardsDataProviderSection.localized()()._object;
  v3 = sub_100047110((uint64_t *)&unk_10082EDA0);
  inited = swift_initStackObject(v3, &v18);
  *(_OWORD *)(inited + 16) = xmmword_100620BC0;
  *(_QWORD *)(inited + 32) = NSParagraphStyleAttributeName;
  v5 = sub_10001E724(0, &qword_100828DC8, NSMutableParagraphStyle_ptr);
  *(_QWORD *)(inited + 40) = v0;
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v6 = qword_10081D808;
  v7 = NSParagraphStyleAttributeName;
  v8 = v0;
  v9 = NSFontAttributeName;
  if (v6 != -1)
    swift_once(&qword_10081D808, sub_1002220D0);
  v10 = (void *)qword_100828C88;
  *(_QWORD *)(inited + 104) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  *(_QWORD *)(inited + 80) = v10;
  v11 = v10;
  v12 = sub_100038C84(inited);
  v13 = objc_allocWithZone((Class)NSMutableAttributedString);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  type metadata accessor for Key(0);
  sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v13, "initWithString:attributes:", v14, isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

  return v16;
}

double sub_100226E48(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  id v14;
  double v15;
  void *object;
  uint64_t v17;
  uint64_t inited;
  NSAttributedStringKey v19;
  uint64_t v20;
  NSAttributedStringKey v21;
  uint64_t v22;
  NSString *v23;
  id v24;
  NSString *v25;
  void *v26;
  id v27;
  unint64_t v28;
  id v29;
  NSString v30;
  Class isa;
  id v32;
  id v33;
  double v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  NSAttributedStringKey v42;
  NSAttributedStringKey v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  id v46;
  char v47[120];

  v4 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v8, "setLineBreakMode:", 0);
  objc_msgSend(v8, "setNumberOfLines:", 0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = a2 + -32.0;
    v11 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v12 = *(_QWORD *)(v5 + 72);
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v45 = v12;
    v43 = NSParagraphStyleAttributeName;
    v42 = NSFontAttributeName;
    v37 = a1;
    swift_bridgeObjectRetain(a1);
    v13 = 0.0;
    v40 = xmmword_100620BC0;
    v39 = (char *)&type metadata for Any + 8;
    v46 = v8;
    v41 = v5;
    v38 = v4;
    do
    {
      v44(v7, v11, v4);
      v14 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
      LODWORD(v15) = 1036831949;
      objc_msgSend(v14, "setHyphenationFactor:", v15);
      object = AAUIAwardsDataProviderSection.localized()()._object;
      v17 = sub_100047110((uint64_t *)&unk_10082EDA0);
      inited = swift_initStackObject(v17, v47);
      *(_OWORD *)(inited + 16) = v40;
      v19 = v43;
      *(_QWORD *)(inited + 32) = v43;
      v20 = sub_10001E724(0, &qword_100828DC8, NSMutableParagraphStyle_ptr);
      *(_QWORD *)(inited + 40) = v14;
      v21 = v42;
      *(_QWORD *)(inited + 64) = v20;
      *(_QWORD *)(inited + 72) = v21;
      v22 = qword_10081D808;
      v23 = v19;
      v24 = v14;
      v25 = v21;
      if (v22 != -1)
        swift_once(&qword_10081D808, sub_1002220D0);
      v26 = (void *)qword_100828C88;
      *(_QWORD *)(inited + 104) = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
      *(_QWORD *)(inited + 80) = v26;
      v27 = v26;
      v28 = sub_100038C84(inited);
      v29 = objc_allocWithZone((Class)NSMutableAttributedString);
      v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      type metadata accessor for Key(0);
      sub_1000083D8((unint64_t *)&qword_10081E850, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v32 = objc_msgSend(v29, "initWithString:attributes:", v30, isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

      v33 = v46;
      objc_msgSend(v46, "setAttributedText:", v32);

      objc_msgSend(v33, "sizeThatFits:", v10, 1.79769313e308);
      if (v34 + 16.0 > v13)
        v13 = v34 + 16.0;
      v4 = v38;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v38);
      v11 += v45;
      --v9;
    }
    while (v9);

    swift_bridgeObjectRelease(v37);
  }
  else
  {

    return 0.0;
  }
  return v13;
}

void sub_100227218(int a1, id a2, double a3, double a4, uint64_t a5, void *a6, char a7)
{
  double v11;
  id v12;
  void *v13;
  void *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  id v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  uint64_t *v26;
  void *v27;
  id v28;
  NSString *v29;
  id v30;
  void *v31;
  id v32;
  NSString v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  unsigned int v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  NSString v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  NSString v47;
  NSString v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  id v58;
  void *v59;
  id v60;
  NSString v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  NSString v65;
  id v66;
  id v67;
  id v68;

  v11 = a4 + -32.0;
  if ((objc_msgSend(a2, "unearned") & 1) != 0)
  {
    v12 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    objc_msgSend(v12, "setLineBreakMode:", 0);
    objc_msgSend(v12, "setNumberOfLines:", 0);
    objc_msgSend(v12, "setTextAlignment:", 1);
    v13 = (void *)UILabel.withLineBreakMode(_:)(0);

    if (qword_10081D810 != -1)
      swift_once(&qword_10081D810, sub_10022214C);
    v14 = (void *)UILabel.withFont(_:)(qword_100828C90);

    _StringGuts.grow(_:)(38);
    v16 = AAUIAwardsDataProviderSection.rawValue.getter(v15);
    v18 = v17;
    swift_bridgeObjectRelease(0xE000000000000000);
    v19._object = (void *)0x8000000100691BC0;
    v19._countAndFlagsBits = 0xD000000000000024;
    String.append(_:)(v19);
    v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle", v16);
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v24 = v23;
    swift_bridgeObjectRelease(v18);

    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "setText:", v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

    objc_msgSend(v14, "sizeThatFits:", v11, 1.79769313e308);
  }
  else
  {
    if ((a7 & 1) != 0)
    {
      if (qword_10081D830 != -1)
        swift_once(&qword_10081D830, sub_10022222C);
      v26 = &qword_100828CB0;
    }
    else
    {
      if (qword_10081D838 != -1)
        swift_once(&qword_10081D838, sub_100222240);
      v26 = &qword_100828CB8;
    }
    v27 = (void *)*v26;
    v28 = objc_allocWithZone((Class)UILabel);
    v29 = v27;
    v30 = objc_msgSend(v28, "init");
    objc_msgSend(v30, "setLineBreakMode:", 0);
    objc_msgSend(v30, "setNumberOfLines:", 0);
    v31 = (void *)UILabel.withFont(_:)(v29);

    v32 = sub_1002263CC(a2, v29, a6);
    v33 = objc_msgSend(v32, "string");

    if (!v33)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v36 = v35;
      v33 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v34 = swift_bridgeObjectRelease(v36).n128_u64[0];
    }
    objc_msgSend(v31, "setText:", v33, v34);

    objc_msgSend(v31, "sizeThatFits:", v11, 1.79769313e308);
    v37 = objc_msgSend(a2, "template");
    v38 = objc_msgSend(v37, "displaysEarnedInstanceCount");

    if (v38)
      objc_msgSend(a2, "earnedInstanceCount");
    v39 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v39, "setLineBreakMode:", 0);
    objc_msgSend(v39, "setNumberOfLines:", 0);
    if (qword_10081D820 != -1)
      swift_once(&qword_10081D820, sub_1002221A8);
    v40 = (void *)UILabel.withFont(_:)(qword_100828CA0);

    v41 = (void *)UILabel.withLineBreakMode(_:)(0);
    objc_msgSend(v41, "setTextAlignment:", 2);
    v42 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if (a5 == 1)
    {
      v43 = String._bridgeToObjectiveC()();
      v44 = objc_msgSend(v42, "localizedStringForKey:value:table:", v43, 0, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v46 = v45;

      v47 = String._bridgeToObjectiveC()();
    }
    else
    {
      v48 = String._bridgeToObjectiveC()();
      v49 = objc_msgSend(v42, "localizedStringForKey:value:table:", v48, 0, 0);

      v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
      v52 = v51;

      v53 = sub_100047110((uint64_t *)&unk_100827460);
      v54 = swift_allocObject(v53, 72, 7);
      *(_OWORD *)(v54 + 16) = xmmword_100622F90;
      if (__OFSUB__(a5, 1))
      {
        __break(1u);
        return;
      }
      *(_QWORD *)(v54 + 56) = &type metadata for Int;
      *(_QWORD *)(v54 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v54 + 32) = a5 - 1;
      String.init(format:_:)(v50, v52, v54, (__n128)xmmword_100622F90);
      v46 = v55;
      swift_bridgeObjectRelease(v52);
      v47 = String._bridgeToObjectiveC()();
    }
    objc_msgSend(v41, "setText:", v47, swift_bridgeObjectRelease(v46).n128_f64[0]);

    objc_msgSend(v41, "sizeThatFits:", v11 * 0.5, 1.79769313e308);
    v56 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
    if (qword_10081D818 != -1)
      swift_once(&qword_10081D818, sub_100222160);
    v57 = qword_100828C98;
    v58 = objc_msgSend(v56, "titleLabel");
    objc_msgSend(v58, "setFont:", v57);

    if (qword_10081D828 != -1)
      swift_once(&qword_10081D828, sub_1002221BC);
    v59 = (void *)UIButton.withTitleTextColor(_:for:)(qword_100828CA8, 0);

    v60 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v61 = String._bridgeToObjectiveC()();
    v62 = objc_msgSend(v60, "localizedStringForKey:value:table:", v61, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
    v64 = v63;

    v65 = String._bridgeToObjectiveC()();
    objc_msgSend(v59, "setTitle:forState:", v65, objc_msgSend(v59, "state"));
    swift_bridgeObjectRelease(v64);

    v66 = objc_msgSend(v59, "titleLabel");
    objc_msgSend(v66, "setLineBreakMode:", 0);

    v67 = objc_msgSend(v59, "titleLabel");
    objc_msgSend(v67, "setLineBreakMode:", 0);

    v68 = objc_msgSend(v59, "titleLabel");
    objc_msgSend(v68, "setNumberOfLines:", 0);

    objc_msgSend(v59, "setContentVerticalAlignment:", 2);
    objc_msgSend(v59, "setContentHorizontalAlignment:", 2);
    objc_msgSend(v59, "sizeThatFits:", v11 * 0.5, 1.79769313e308);

  }
}

void sub_100227BE8(uint64_t a1, void *a2, uint64_t a3, char *a4, char *a5, void *a6, unsigned int a7, char a8, double a9, uint64_t a10, void *a11, NSString *a12, NSString *a13)
{
  uint64_t v13;
  void *v18;
  void *v19;
  id v20;
  double v21;
  double v22;
  id v23;
  id v24;
  unsigned int v25;
  void *v26;
  id v27;
  unint64_t v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  NSString **v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  void *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  uint64_t v46;
  id v47;
  NSString v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  NSString v52;
  uint64_t *v53;
  NSString *v54;
  id v55;
  id v56;
  NSString v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  NSString v61;
  uint64_t v62;
  NSString v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v73;
  NSString *v77;

  v73 = a6;
  v77 = a12;
  v18 = a11;
  v19 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionLabel);
  v20 = sub_100226C58();
  objc_msgSend(v19, "setAttributedText:", v20);

  v21 = fmax(a9 + 16.0, 80.0);
  if ((a8 & 1) != 0)
    v22 = v21;
  else
    v22 = 85.0;
  if (!a2)
    goto LABEL_14;
  v23 = a2;
  v24 = objc_msgSend(v23, "template");
  v25 = objc_msgSend(v24, "displaysEarnedInstanceCount");

  if (!v25 || !objc_msgSend(v23, "earnedInstanceCount"))
  {

LABEL_14:
    objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillView), "setHidden:", 1, a1, v73);
    objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint), "setActive:", 1);
    objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint), "setActive:", 1);
    v32 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint);
    if (v32)
      objc_msgSend(v32, "setActive:", 0);
    v33 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint);
    if (v33)
      objc_msgSend(v33, "setActive:", 0);
    goto LABEL_18;
  }
  v26 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillView);
  v27 = objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
  objc_msgSend(v26, "setPillBackgroundColor:", v27);

  v28 = (unint64_t)objc_msgSend(v23, "earnedInstanceCount");
  if ((v28 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_35:
    swift_once(&qword_10081D830, sub_10022222C);
    goto LABEL_24;
  }
  objc_msgSend(v26, "setIntegerValue:", v28);
  objc_msgSend(v26, "setHidden:", 0);
  objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToStackViewConstraint), "setActive:", 0);
  objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabelToCountLabelConstraint), "setActive:", 0);
  v29 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToStackViewConstraint);
  if (v29)
    objc_msgSend(v29, "setActive:", 1);
  v30 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_pillViewToCountLabelConstraint);
  if (v30)
  {
    v31 = v30;
    objc_msgSend(v31, "setActive:", 1);

  }
LABEL_18:
  sub_100223C44(a8 & 1, v22);
  v34 = (_QWORD *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnAchievement);
  v35 = *(_QWORD *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnAchievement);
  v36 = *(_QWORD *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnAchievement + 8);
  *v34 = a10;
  v34[1] = a11;
  swift_retain(a11);
  sub_100022BA4(v35, v36);
  v37 = (NSString **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnShowAllAchievements);
  v38 = *(_QWORD *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnShowAllAchievements);
  v39 = *(_QWORD *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_tapOnShowAllAchievements + 8);
  *v37 = a12;
  v37[1] = a13;
  swift_retain(a13);
  sub_100022BA4(v38, v39);
  if (!a2)
    return;
  v77 = a2;
  sub_100224270(v77, a8 & 1, a5);
  sub_100224BD8(a3, a8 & 1, a5, a7);
  v40 = -[NSString unearned](v77, "unearned");
  v23 = *(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel);
  if (v40)
  {
    objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel), "setHidden:", 1);
    objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_showAllButton), "setHidden:", 1);
    objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel), "setHidden:", 1);
    objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView), "setHidden:", 1);
    v41 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel);
    objc_msgSend(v41, "setHidden:", 0);
    _StringGuts.grow(_:)(38);
    AAUIAwardsDataProviderSection.rawValue.getter(v42);
    v44 = v43;
    swift_bridgeObjectRelease(0xE000000000000000);
    v45._object = (void *)0x8000000100691BC0;
    v45._countAndFlagsBits = 0xD000000000000024;
    String.append(_:)(v45);
    v46 = v44;
    v47 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v48 = String._bridgeToObjectiveC()();
    v49 = objc_msgSend(v47, "localizedStringForKey:value:table:", v48, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v51 = v50;
    swift_bridgeObjectRelease(v46);

    v52 = String._bridgeToObjectiveC()();
    objc_msgSend(v41, "setText:", v52, swift_bridgeObjectRelease(v51).n128_f64[0]);
LABEL_33:

    return;
  }
  objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementTitleLabel), "setHidden:", 0);
  objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_showAllButton), "setHidden:", 0);
  v18 = *(void **)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_achievementCountLabel);
  objc_msgSend(v18, "setHidden:", 0);
  objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_badgeStackImageView), "setHidden:", 0);
  objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseSectionCell_sectionDescriptionLabel), "setHidden:", 1);
  if ((a8 & 1) == 0)
  {
    a5 = a4;
    if (qword_10081D838 != -1)
      swift_once(&qword_10081D838, sub_100222240);
    v53 = &qword_100828CB8;
    goto LABEL_28;
  }
  a5 = a4;
  if (qword_10081D830 != -1)
    goto LABEL_35;
LABEL_24:
  v53 = &qword_100828CB0;
LABEL_28:
  v54 = (NSString *)(id)*v53;
  v55 = sub_1002263CC(v77, v54, v73);
  objc_msgSend(v23, "setAttributedText:", v55);

  v56 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (a5 == (char *)1)
  {
    v57 = String._bridgeToObjectiveC()();
    v58 = objc_msgSend(v56, "localizedStringForKey:value:table:", v57, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v60 = v59;

    v61 = String._bridgeToObjectiveC()();
    v62 = v60;
LABEL_32:
    objc_msgSend(v18, "setText:", v61, swift_bridgeObjectRelease(v62).n128_f64[0]);

    v52 = v77;
    v77 = v54;
    goto LABEL_33;
  }
  v63 = String._bridgeToObjectiveC()();
  v64 = objc_msgSend(v56, "localizedStringForKey:value:table:", v63, 0, 0);

  v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
  v67 = v66;

  v68 = sub_100047110((uint64_t *)&unk_100827460);
  v69 = swift_allocObject(v68, 72, 7);
  *(_OWORD *)(v69 + 16) = xmmword_100622F90;
  if (!__OFSUB__(a5, 1))
  {
    *(_QWORD *)(v69 + 56) = &type metadata for Int;
    *(_QWORD *)(v69 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v69 + 32) = a5 - 1;
    String.init(format:_:)(v65, v67, v69, (__n128)xmmword_100622F90);
    v71 = v70;
    swift_bridgeObjectRelease(v67);
    v61 = String._bridgeToObjectiveC()();
    v62 = v71;
    goto LABEL_32;
  }
  __break(1u);
}

double sub_1002283B8(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t sub_1002283D4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100228408()
{
  uint64_t v0;

  return sub_100225134(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned int *)(v0 + 48), *(unsigned int *)(v0 + 52), *(_QWORD *)(v0 + 56), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_10022841C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100228440()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_100228474()
{
  uint64_t *v0;

  sub_1002253F0(v0[2], v0[3], v0[4]);
}

uint64_t sub_100228480()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002284B4()
{
  uint64_t v0;

  return sub_1002247AC(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 48), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_1002284C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1002284F8()
{
  uint64_t v0;

  sub_100224A2C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

id sub_10022851C(uint64_t a1)
{
  return sub_100222254(a1, &UIFontTextStyleSubheadline, &qword_100828DD0);
}

id sub_100228530(uint64_t a1)
{
  return sub_100222254(a1, &UIFontTextStyleTitle2, &qword_100828DD8);
}

id sub_100228544(uint64_t a1)
{
  return sub_100222254(a1, &UIFontTextStyleTitle2, &qword_100828DE0);
}

id sub_100228558(uint64_t a1)
{
  return sub_100222254(a1, &UIFontTextStyleCaption1, &qword_100828DE8);
}

id sub_10022856C(uint64_t a1)
{
  return sub_100222254(a1, &UIFontTextStyleSubheadline, &qword_100828DF0);
}

char *sub_100228580(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  char *result;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  char *v31;
  char *v32;
  void *v33;
  char *v34;
  objc_super v35;

  v9 = OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_contentView;
  v10 = objc_allocWithZone((Class)UIView);
  v11 = v4;
  v12 = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = sub_100032490();
  objc_msgSend(v12, "setBackgroundColor:", v13);

  v14 = objc_msgSend(v12, "layer");
  objc_msgSend(v14, "setCornerRadius:", 12.0);

  objc_msgSend(v12, "setClipsToBounds:", 1);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v4[v9] = v12;
  v15 = OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionStageLabel;
  v16 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_10081D860 != -1)
    swift_once(&qword_10081D860, sub_10022856C);
  v17 = (void *)UILabel.withFont(_:)(qword_100828DF0);

  v18 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v19 = (void *)UILabel.withTextColor(_:)(v18);

  objc_msgSend(v19, "setLineBreakMode:", 0);
  objc_msgSend(v19, "setNumberOfLines:", 0);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v15] = v19;
  *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_friend] = 0;
  result = (char *)objc_msgSend((id)objc_opt_self(ASCompetitionScoreViewConfiguration), "companionFriendListConfiguration");
  if (result)
  {
    v21 = result;
    v22 = OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreViewConfiguration;
    *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreViewConfiguration] = result;
    objc_msgSend(result, "setDivision:", 1);
    objc_msgSend(v21, "setMinimumMiddleMargin:", 0.0);
    v23 = qword_10081D840;
    v24 = v21;
    if (v23 != -1)
      swift_once(&qword_10081D840, sub_10022851C);
    objc_msgSend(v24, "setNameFont:", qword_100828DD0);

    v25 = qword_10081D848;
    v26 = *(id *)&v11[v22];
    if (v25 != -1)
      swift_once(&qword_10081D848, sub_100228530);
    objc_msgSend(v26, "setPrimaryScoreFont:", qword_100828DD8);

    v27 = qword_10081D850;
    v28 = *(id *)&v11[v22];
    if (v27 != -1)
      swift_once(&qword_10081D850, sub_100228544);
    objc_msgSend(v28, "setPrimaryScoreUnitFont:", qword_100828DE0);

    v29 = qword_10081D858;
    v30 = *(id *)&v11[v22];
    if (v29 != -1)
      swift_once(&qword_10081D858, sub_100228558);
    objc_msgSend(v30, "setSecondaryScoreFont:", qword_100828DE8);

    result = (char *)objc_msgSend(objc_allocWithZone((Class)ASCompetitionScoreView), "initWithConfiguration:", *(_QWORD *)&v11[v22]);
    if (result)
    {
      v31 = result;
      objc_msgSend(result, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreView] = v31;

      v35.receiver = v11;
      v35.super_class = (Class)type metadata accessor for ActivitySharingFriendListCompetitionView();
      v32 = (char *)objc_msgSendSuper2(&v35, "initWithFrame:", a1, a2, a3, a4);
      v33 = *(void **)&v32[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_contentView];
      v34 = v32;
      objc_msgSend(v34, "addSubview:", v33);
      objc_msgSend(v33, "addSubview:", *(_QWORD *)&v34[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreView]);
      objc_msgSend(v33, "addSubview:", *(_QWORD *)&v34[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionStageLabel]);
      sub_100228A20();

      return v34;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100228A20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  double v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  double v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  Class isa;
  uint64_t v33;
  id v34;
  _BYTE v35[88];

  v1 = v0;
  v34 = (id)objc_opt_self(NSLayoutConstraint);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_contentView);
  v33 = UIView.constraintsPinningToEdgesOfView(_:supportingRTL:insets:leadingPriority:trailingPriority:topPriority:bottomPriority:)(3.0, 0.0, 3.0, 0.0, 1000.0, 1000.0, 1000.0, 1000.0);
  v3 = sub_100047110((uint64_t *)&unk_100828340);
  inited = swift_initStackObject(v3, v35);
  *(_OWORD *)(inited + 16) = xmmword_100626C00;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreView);
  v6 = objc_msgSend(v5, "topAnchor");
  v7 = objc_msgSend(v2, "topAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(inited + 32) = v8;
  v9 = objc_msgSend(v5, "leadingAnchor");
  v10 = objc_msgSend(v2, "leadingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(inited + 40) = v11;
  v12 = objc_msgSend(v5, "trailingAnchor");
  v13 = objc_msgSend(v2, "trailingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(inited + 48) = v14;
  v15 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionStageLabel);
  v16 = objc_msgSend(v15, "topAnchor");
  v17 = objc_msgSend(v5, "bottomAnchor");
  v18 = *(void **)(v1
                 + OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreViewConfiguration);
  objc_msgSend(v18, "bottomMargin");
  v20 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, 10.0 - v19);

  *(_QWORD *)(inited + 56) = v20;
  v21 = objc_msgSend(v15, "leadingAnchor");
  v22 = objc_msgSend(v2, "leadingAnchor");
  objc_msgSend(v18, "sideMargin");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22);

  *(_QWORD *)(inited + 64) = v23;
  v24 = objc_msgSend(v15, "trailingAnchor");
  v25 = objc_msgSend(v2, "trailingAnchor");
  objc_msgSend(v18, "sideMargin");
  v27 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, -v26);

  *(_QWORD *)(inited + 72) = v27;
  v28 = objc_msgSend(v15, "bottomAnchor");
  v29 = objc_msgSend(v2, "bottomAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, -16.0);

  *(_QWORD *)(inited + 80) = v30;
  specialized Array._endMutation()(v31);
  sub_100032DE4(inited);
  sub_100039898();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v34, "activateConstraints:", isa, swift_bridgeObjectRelease(v33).n128_f64[0]);

}

double sub_100228E64()
{
  char *v0;
  void *v1;
  void *v2;
  double v3;

  v1 = (void *)objc_opt_self(ASCompetitionScoreView);
  v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionScoreViewConfiguration];
  objc_msgSend(v1, "preferredHeightForConfiguration:friend:", v2, *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_friend]);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionStageLabel], "intrinsicContentSize");
  objc_msgSend(v2, "bottomMargin");
  objc_msgSend(v0, "bounds");
  return v3;
}

id sub_100228F44()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendListCompetitionView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivitySharingFriendListCompetitionView()
{
  return objc_opt_self(_TtC10FitnessApp40ActivitySharingFriendListCompetitionView);
}

void sub_100228FFC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;

  v1 = v0;
  v2 = OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_contentView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = sub_100032490();
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v3, "layer");
  objc_msgSend(v5, "setCornerRadius:", 12.0);

  objc_msgSend(v3, "setClipsToBounds:", 1);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v2] = v3;
  v6 = OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_competitionStageLabel;
  v7 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_10081D860 != -1)
    swift_once(&qword_10081D860, sub_10022856C);
  v8 = (void *)UILabel.withFont(_:)(qword_100828DF0);

  v9 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v10 = (void *)UILabel.withTextColor(_:)(v9);

  objc_msgSend(v10, "setLineBreakMode:", 0);
  objc_msgSend(v10, "setNumberOfLines:", 0);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v6] = v10;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp40ActivitySharingFriendListCompetitionView_friend] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/ActivitySharingFriendListCompetitionView.swift", 57, 2, 96, 0);
  __break(1u);
}

void sub_100229218(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int *a5@<X4>, int *a6@<X5>, int a7@<W6>, int *a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int *v33;
  _QWORD *v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  void (*v38)(_BYTE *, uint64_t, uint64_t);
  uint64_t v39;
  _BYTE *v40;
  __n128 v41;
  int **v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(_QWORD, _QWORD, _QWORD, __n128);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void (*v60)(_QWORD, __n128);
  __n128 v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, __n128);
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(char *, uint64_t);
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t (*v91)(_QWORD, _QWORD, _QWORD, __n128);
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;

  LODWORD(v91) = a7;
  v89 = a2;
  v90 = a6;
  v87 = a5;
  v88 = a4;
  v86 = a3;
  v10 = type metadata accessor for ExertionValue(0);
  v94 = *(_QWORD *)(v10 - 8);
  v95 = v10;
  v11 = __chkstk_darwin(v10);
  v93 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v92 = (char *)&v81 - v13;
  v14 = type metadata accessor for AppleExertionScale(0);
  v15 = *(_QWORD *)(v14 - 8);
  v97 = v14;
  v98 = v15;
  v16 = __chkstk_darwin(v14);
  v85 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v81 - v19;
  v21 = __chkstk_darwin(v18);
  v96 = (char *)&v81 - v22;
  __chkstk_darwin(v21);
  v84 = (char *)&v81 - v23;
  v24 = sub_100047110(&qword_100822220);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v26);
  v31 = (char *)&v81 - v30;
  __chkstk_darwin(v29);
  v83 = (char *)&v81 - v32;
  v33 = (int *)type metadata accessor for WorkloadListItemStack(0);
  v34 = (_QWORD *)((char *)a8 + v33[12]);
  *v34 = swift_getKeyPath(&unk_10062EDF0);
  v35 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(v34, v35, 0);
  *(_BYTE *)a8 = a1;
  v36 = (char *)a8 + v33[5];
  v37 = type metadata accessor for AttributedString(0);
  v81 = *(_QWORD *)(v37 - 8);
  v38 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v81 + 16);
  v38(v36, v89, v37);
  v39 = v86;
  *(_QWORD *)((char *)a8 + v33[6]) = v86;
  v40 = (char *)a8 + v33[7];
  v82 = v37;
  v38(v40, v88, v37);
  v42 = (int **)((char *)a8 + v33[8]);
  v43 = v90;
  *v42 = v87;
  v42[1] = v43;
  v87 = v33;
  v44 = v33[9];
  v90 = a8;
  *((_BYTE *)a8 + v44) = (_BYTE)v91;
  v45 = *(_QWORD *)(v39 + 16);
  if (v45)
  {
    v46 = v39;
    v47 = v39 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    v48 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD, __n128))(v25 + 72);
    swift_bridgeObjectRetain(v46);
    v49 = (char *)_swiftEmptyArrayStorage;
    v51 = v97;
    v50 = v98;
    v91 = v48;
    do
    {
      sub_100021CC0(v47, (uint64_t)v31, &qword_100822220);
      sub_100045AD4((uint64_t)v31, (uint64_t)v28, &qword_100822220);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v28, 1, v51) == 1)
      {
        sub_10001BE90((uint64_t)v28, &qword_100822220);
      }
      else
      {
        v52 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
        v53 = v96;
        v52(v96, v28, v51);
        v52(v20, v53, v51);
        if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
          v49 = (char *)sub_10014022C(0, *((_QWORD *)v49 + 2) + 1, 1, (unint64_t)v49);
        v55 = *((_QWORD *)v49 + 2);
        v54 = *((_QWORD *)v49 + 3);
        if (v55 >= v54 >> 1)
          v49 = (char *)sub_10014022C(v54 > 1, v55 + 1, 1, (unint64_t)v49);
        *((_QWORD *)v49 + 2) = v55 + 1;
        v51 = v97;
        v50 = v98;
        v52(&v49[((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v98 + 72) * v55], v20, v97);
        v48 = v91;
      }
      v47 += (uint64_t)v48;
      --v45;
    }
    while (v45);
    v41 = swift_bridgeObjectRelease(v86);
  }
  else
  {
    v49 = (char *)_swiftEmptyArrayStorage;
    v51 = v97;
    v50 = v98;
  }
  *(_QWORD *)((char *)v90 + v87[10]) = v49;
  v56 = v49;
  v57 = *((_QWORD *)v49 + 2);
  v59 = v84;
  v58 = v85;
  if (!v57)
  {
    v62 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v50 + 56))(v83, 1, 1, v51, v41);
    v63 = swift_bridgeObjectRetain(v56);
    goto LABEL_17;
  }
  v60 = *(void (**)(_QWORD, __n128))(v50 + 16);
  v96 = (char *)v56 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
  v91 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, __n128))v60;
  v60(v84, v41);
  v97 = (uint64_t)v56;
  v61 = swift_bridgeObjectRetain(v56);
  if (v57 == 1)
  {
LABEL_15:
    v62 = (uint64_t)v83;
    (*(void (**)(char *, char *, uint64_t, __n128))(v50 + 32))(v83, v59, v51, v61);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v62, 0, 1, v51);
    v56 = (_QWORD *)v97;
LABEL_17:
    v64 = v82;
    v65 = *(void (**)(uint64_t, uint64_t, __n128))(v81 + 8);
    v65(v88, v82, v63);
    ((void (*)(uint64_t, uint64_t))v65)(v89, v64);
    swift_bridgeObjectRelease(v56);
    sub_100045AD4(v62, (uint64_t)v90 + v87[11], &qword_100822220);
    return;
  }
  v66 = 1;
  v67 = v95;
  while (v66 < *(_QWORD *)(v97 + 16))
  {
    v68 = v91(v58, &v96[*(_QWORD *)(v50 + 72) * v66], v51, v61);
    v69 = v92;
    v70 = v58;
    v71 = AppleExertionScale.exertionValue.getter(v68);
    v72 = ExertionValue.level.getter(v71);
    v73 = v51;
    v74 = *(uint64_t (**)(char *, uint64_t))(v94 + 8);
    v75 = v74(v69, v67);
    v76 = v93;
    v77 = AppleExertionScale.exertionValue.getter(v75);
    v78 = ExertionValue.level.getter(v77);
    v79 = v76;
    v50 = v98;
    v74(v79, v67);
    v80 = *(void (**)(char *, uint64_t))(v50 + 8);
    if (v72 >= v78)
    {
      v80(v70, v73);
    }
    else
    {
      v80(v59, v73);
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v59, v70, v73);
    }
    v58 = v70;
    v51 = v73;
    if (v57 == ++v66)
      goto LABEL_15;
  }
  __break(1u);
}

uint64_t type metadata accessor for WorkloadListItemStack(uint64_t a1)
{
  uint64_t result;

  result = qword_100828EA0;
  if (!qword_100828EA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkloadListItemStack);
  return result;
}

uint64_t sub_10022983C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, __n128);
  __n128 v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(_QWORD *, uint64_t);
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, __n128);
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v1 = v0;
  v44 = type metadata accessor for ExertionValue(0);
  v49 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v48 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v47 = (char *)&v37 - v4;
  v43 = type metadata accessor for AppleExertionScale(0);
  v50 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v46 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v45 = (char *)&v37 - v7;
  v8 = type metadata accessor for WorkloadListItemStack(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v37 - v12;
  v15 = *(_QWORD *)(*(_QWORD *)(v1 + *(int *)(v14 + 24)) + 16);
  sub_10004F8C8(v1, (uint64_t)&v37 - v12, v16);
  if (!v15)
  {
    sub_100011F54((uint64_t)v13, type metadata accessor for WorkloadListItemStack);
    sub_10004F8C8(v1, (uint64_t)v10, type metadata accessor for WorkloadListItemStack);
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(*(_QWORD *)&v13[*(int *)(v8 + 40)] + 16);
  v18 = *(_QWORD *)(*(_QWORD *)&v13[*(int *)(v8 + 24)] + 16);
  sub_100011F54((uint64_t)v13, type metadata accessor for WorkloadListItemStack);
  sub_10004F8C8(v1, (uint64_t)v10, type metadata accessor for WorkloadListItemStack);
  if (v17 != v18)
  {
LABEL_9:
    v35 = 0;
    goto LABEL_10;
  }
  v19 = *(_QWORD *)&v10[*(int *)(v8 + 40)];
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v39 = v10;
    v21 = v19 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
    v42 = enum case for AppleExertionScale.skipped(_:);
    v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v50 + 16);
    v40 = *(_QWORD *)(v50 + 72);
    v41 = v22;
    v38 = v19;
    v23 = swift_bridgeObjectRetain(v19);
    v24 = v45;
    v25 = v46;
    v26 = v43;
    v28 = v47;
    v27 = v48;
    while (1)
    {
      v41(v24, v21, v26, v23);
      (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v25, v42, v26);
      v29 = sub_1000083D8(&qword_100828F50, (uint64_t (*)(uint64_t))&type metadata accessor for AppleExertionScale, (uint64_t)&protocol conformance descriptor for AppleExertionScale);
      dispatch thunk of RawRepresentable.rawValue.getter(v28, v26, v29);
      dispatch thunk of RawRepresentable.rawValue.getter(v27, v26, v29);
      v30 = sub_1000083D8(&qword_100828F58, (uint64_t (*)(uint64_t))&type metadata accessor for ExertionValue, (uint64_t)&protocol conformance descriptor for ExertionValue);
      v31 = v44;
      v32 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v27, v44, v30);
      v33 = *(void (**)(_QWORD *, uint64_t))(v49 + 8);
      v33(v27, v31);
      v33(v28, v31);
      v34 = *(void (**)(char *, uint64_t))(v50 + 8);
      v34(v25, v26);
      v34(v24, v26);
      if ((v32 & 1) == 0)
        break;
      v21 += v40;
      if (!--v20)
      {
        swift_bridgeObjectRelease(v38);
        v35 = 1;
        v10 = v39;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease(v38);
    v35 = 0;
    v10 = v39;
  }
  else
  {
    v35 = 1;
  }
LABEL_10:
  sub_100011F54((uint64_t)v10, type metadata accessor for WorkloadListItemStack);
  return v35;
}

double sub_100229BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, _QWORD, uint64_t);
  char v8;
  void (*v9)(char *, uint64_t);
  double result;
  char v11;
  uint64_t v12;

  v0 = type metadata accessor for DynamicTypeSize(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - v5;
  type metadata accessor for WorkloadListItemStack(0);
  sub_1003F6E18((uint64_t)v6);
  v7 = *(void (**)(char *, _QWORD, uint64_t))(v1 + 104);
  v7(v3, enum case for DynamicTypeSize.accessibility1(_:), v0);
  sub_1000083D8((unint64_t *)&qword_10081F588, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v8 = dispatch thunk of static Comparable.< infix(_:_:)(v6, v3, v0);
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v9(v6, v0);
  result = 10.0;
  if ((v8 & 1) != 0)
  {
    sub_1003F6E18((uint64_t)v6);
    v7(v3, enum case for DynamicTypeSize.xLarge(_:), v0);
    v11 = dispatch thunk of static Comparable.< infix(_:_:)(v6, v3, v0);
    v9(v3, v0);
    v9(v6, v0);
    result = 15.0;
    if ((v11 & 1) != 0)
      return 11.0;
  }
  return result;
}

uint64_t sub_100229D50@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  _OWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  double v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  _OWORD v81[2];
  uint64_t v82;

  v2 = v1;
  v80 = a1;
  v74 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v74);
  v79 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100828F00);
  __chkstk_darwin(v4);
  v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WorkloadListItemStack(0);
  __chkstk_darwin(v7);
  v75 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v72 - v10;
  v12 = sub_100047110(&qword_100828F08);
  __chkstk_darwin(v12);
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_100828F10);
  __chkstk_darwin(v15);
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100047110(&qword_100828F18);
  __chkstk_darwin(v73);
  v72 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100047110(&qword_100828F20);
  __chkstk_darwin(v76);
  v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100047110(&qword_100828F28);
  __chkstk_darwin(v78);
  v77 = (uint64_t)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10022A304(v2, (uint64_t)v14);
  v23 = static Edge.Set.horizontal.getter(v22);
  v24 = EdgeInsets.init(_all:)(15.0);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_100021CC0((uint64_t)v14, (uint64_t)v17, &qword_100828F08);
  v31 = &v17[*(int *)(v15 + 36)];
  *v31 = v23;
  *((double *)v31 + 1) = v24;
  *((_QWORD *)v31 + 2) = v26;
  *((_QWORD *)v31 + 3) = v28;
  *((_QWORD *)v31 + 4) = v30;
  v31[40] = 0;
  sub_10001BE90((uint64_t)v14, &qword_100828F08);
  v32 = *(int *)(v7 + 40);
  v33 = *(_QWORD *)(*(_QWORD *)&v2[v32] + 16);
  sub_10004F8C8((uint64_t)v2, (uint64_t)v11, type metadata accessor for WorkloadListItemStack);
  if (v33)
  {
    v34 = sub_10022983C();
    v35 = sub_100011F54((uint64_t)v11, type metadata accessor for WorkloadListItemStack);
    if ((v34 & 1) == 0)
    {
      v36 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
      v37 = Color.init(_:)(v36);
      goto LABEL_6;
    }
  }
  else
  {
    v35 = sub_100011F54((uint64_t)v11, type metadata accessor for WorkloadListItemStack);
  }
  v37 = static Color.clear.getter(v35);
LABEL_6:
  v38 = v37;
  v39 = (uint64_t)v72;
  v40 = static Edge.Set.all.getter(v37);
  sub_100021CC0((uint64_t)v17, v39, &qword_100828F10);
  v41 = v39 + *(int *)(v73 + 36);
  *(_QWORD *)v41 = v38;
  *(_BYTE *)(v41 + 8) = v40;
  sub_10001BE90((uint64_t)v17, &qword_100828F10);
  v42 = v79;
  v43 = &v79[*(int *)(v74 + 20)];
  v44 = enum case for RoundedCornerStyle.continuous(_:);
  v45 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v43, v44, v45);
  __asm { FMOV            V0.2D, #14.0 }
  *v42 = _Q0;
  v51 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemBackgroundColor");
  v52 = Color.init(_:)(v51);
  v53 = *(_QWORD *)(*(_QWORD *)&v2[v32] + 16);
  v54 = v75;
  sub_10004F8C8((uint64_t)v2, v75, type metadata accessor for WorkloadListItemStack);
  if (v53)
  {
    v55 = sub_10022983C();
    sub_100011F54(v54, type metadata accessor for WorkloadListItemStack);
    v56 = 0.0;
    if ((v55 & 1) == 0)
      goto LABEL_11;
  }
  else
  {
    sub_100011F54(v54, type metadata accessor for WorkloadListItemStack);
  }
  v56 = 1.0;
LABEL_11:
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v81, 0, 0, _swiftEmptyArrayStorage, v56, 10.0, 0.0);
  sub_10004F8C8((uint64_t)v42, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v57 = &v6[*(int *)(sub_100047110(&qword_100828F30) + 36)];
  v58 = v81[1];
  *(_OWORD *)v57 = v81[0];
  *((_OWORD *)v57 + 1) = v58;
  *((_QWORD *)v57 + 4) = v82;
  v59 = sub_100047110(&qword_100828F38);
  *(_QWORD *)&v6[*(int *)(v59 + 52)] = v52;
  *(_WORD *)&v6[*(int *)(v59 + 56)] = 256;
  v60 = static Alignment.center.getter(v59);
  v62 = v61;
  v63 = (uint64_t *)&v6[*(int *)(sub_100047110(&qword_100828F40) + 36)];
  *v63 = v60;
  v63[1] = v62;
  v64 = sub_100011F54((uint64_t)v42, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v65 = static Alignment.center.getter(v64);
  v67 = v66;
  v68 = (uint64_t)&v20[*(int *)(v76 + 36)];
  sub_100021CC0((uint64_t)v6, v68, &qword_100828F00);
  v69 = (uint64_t *)(v68 + *(int *)(sub_100047110(&qword_100828F48) + 36));
  *v69 = v65;
  v69[1] = v67;
  sub_100021CC0(v39, (uint64_t)v20, &qword_100828F18);
  sub_10001BE90((uint64_t)v6, &qword_100828F00);
  sub_10001BE90(v39, &qword_100828F18);
  v70 = v77;
  sub_100021CC0((uint64_t)v20, v77, &qword_100828F20);
  *(_BYTE *)(v70 + *(int *)(v78 + 36)) = 0;
  sub_10001BE90((uint64_t)v20, &qword_100828F20);
  return sub_100045AD4(v70, v80, &qword_100828F28);
}

uint64_t sub_10022A304@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unsigned __int8 *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v67)(char *, _QWORD, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v75 = a2;
  v76 = sub_100047110(&qword_100828F60);
  __chkstk_darwin(v76);
  v4 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100047110(&qword_100828F68);
  __chkstk_darwin(v73);
  v74 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100828F70);
  __chkstk_darwin(v6);
  v8 = (double *)((char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = sub_100047110(&qword_100828F78);
  __chkstk_darwin(v68);
  v70 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100047110(&qword_100828F80);
  __chkstk_darwin(v72);
  v69 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v71 = (uint64_t)&v67 - v12;
  v13 = type metadata accessor for DynamicTypeSize(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v67 - v18;
  v20 = a1;
  type metadata accessor for WorkloadListItemStack(0);
  sub_1003F6E18((uint64_t)v19);
  v67 = *(void (**)(char *, _QWORD, uint64_t))(v14 + 104);
  v67(v16, enum case for DynamicTypeSize.accessibility1(_:), v13);
  sub_1000083D8((unint64_t *)&qword_10081F588, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  LOBYTE(a1) = dispatch thunk of static Comparable.< infix(_:_:)(v19, v16, v13);
  v21 = *(void (**)(char *, uint64_t))(v14 + 8);
  v21(v16, v13);
  v22 = ((uint64_t (*)(char *, uint64_t))v21)(v19, v13);
  if ((a1 & 1) != 0)
  {
    *(_QWORD *)v4 = static VerticalAlignment.center.getter(v22);
    *((_QWORD *)v4 + 1) = 0x4020000000000000;
    v4[16] = 0;
    v23 = sub_100047110(&qword_100828FB0);
    sub_10022B72C(v20, (uint64_t)&v4[*(int *)(v23 + 44)]);
    v24 = &qword_100828F60;
    v25 = v74;
    sub_100021CC0((uint64_t)v4, v74, &qword_100828F60);
    swift_storeEnumTagMultiPayload(v25, v73, 1);
    v26 = sub_1000F4518(&qword_100828F90, &qword_100828F80, (void (*)(void))sub_10022D8E8);
    v27 = sub_100028384(&qword_100828FA8, &qword_100828F60, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v25, v72, v76, v26, v27);
    v28 = (uint64_t)v4;
  }
  else
  {
    v29 = sub_100229BC4();
    *(_QWORD *)v8 = static HorizontalAlignment.center.getter(v30, v31, v32, v33, v34);
    v8[1] = v29;
    *((_BYTE *)v8 + 16) = 0;
    v35 = sub_100047110(&qword_100828F88);
    v36 = sub_10022A858((char *)v20, (uint64_t)v8 + *(int *)(v35 + 44));
    v37 = static Edge.Set.top.getter(v36);
    v38 = sub_100229BC4();
    v39 = EdgeInsets.init(_all:)(v38);
    v41 = v40;
    v43 = v42;
    v45 = v44;
    v46 = v70;
    sub_100021CC0((uint64_t)v8, v70, &qword_100828F70);
    v47 = v46 + *(int *)(v68 + 36);
    *(_BYTE *)v47 = v37;
    *(double *)(v47 + 8) = v39;
    *(_QWORD *)(v47 + 16) = v41;
    *(_QWORD *)(v47 + 24) = v43;
    *(_QWORD *)(v47 + 32) = v45;
    *(_BYTE *)(v47 + 40) = 0;
    v48 = sub_10001BE90((uint64_t)v8, &qword_100828F70);
    v49 = static Edge.Set.bottom.getter(v48);
    sub_1003F6E18((uint64_t)v19);
    v67(v16, enum case for DynamicTypeSize.xLarge(_:), v13);
    v50 = dispatch thunk of static Comparable.< infix(_:_:)(v19, v16, v13);
    v21(v16, v13);
    v21(v19, v13);
    v51 = 15.0;
    if ((v50 & 1) != 0)
      v51 = 12.0;
    v52 = EdgeInsets.init(_all:)(v51);
    v54 = v53;
    v56 = v55;
    v58 = v57;
    v59 = v69;
    sub_100021CC0(v46, v69, &qword_100828F78);
    v60 = v72;
    v61 = v59 + *(int *)(v72 + 36);
    *(_BYTE *)v61 = v49;
    *(double *)(v61 + 8) = v52;
    *(_QWORD *)(v61 + 16) = v54;
    *(_QWORD *)(v61 + 24) = v56;
    *(_QWORD *)(v61 + 32) = v58;
    *(_BYTE *)(v61 + 40) = 0;
    sub_10001BE90(v46, &qword_100828F78);
    v24 = &qword_100828F80;
    v62 = v71;
    sub_100045AD4(v59, v71, &qword_100828F80);
    v63 = v74;
    sub_100021CC0(v62, v74, &qword_100828F80);
    swift_storeEnumTagMultiPayload(v63, v73, 0);
    v64 = sub_1000F4518(&qword_100828F90, &qword_100828F80, (void (*)(void))sub_10022D8E8);
    v65 = sub_100028384(&qword_100828FA8, &qword_100828F60, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v63, v60, v76, v64, v65);
    v28 = v62;
  }
  return sub_10001BE90(v28, v24);
}

uint64_t sub_10022A858@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = sub_100047110(&qword_100829058);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - v8;
  v10 = sub_100047110(&qword_100829060);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v22 - v14;
  *(_QWORD *)v15 = static VerticalAlignment.center.getter(v16);
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 1;
  v17 = sub_100047110(&qword_100829068);
  v18 = sub_10022AA18((uint64_t)a1, (uint64_t)&v15[*(int *)(v17 + 44)]);
  *(_QWORD *)v9 = static HorizontalAlignment.leading.getter(v18);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v19 = sub_100047110(&qword_100829070);
  sub_10022AFA8(a1, (uint64_t *)&v9[*(int *)(v19 + 44)]);
  sub_100021CC0((uint64_t)v15, (uint64_t)v12, &qword_100829060);
  sub_100021CC0((uint64_t)v9, (uint64_t)v6, &qword_100829058);
  sub_100021CC0((uint64_t)v12, a2, &qword_100829060);
  v20 = sub_100047110(&qword_100829078);
  sub_100021CC0((uint64_t)v6, a2 + *(int *)(v20 + 48), &qword_100829058);
  sub_10001BE90((uint64_t)v9, &qword_100829058);
  sub_10001BE90((uint64_t)v15, &qword_100829060);
  sub_10001BE90((uint64_t)v6, &qword_100829058);
  return sub_10001BE90((uint64_t)v12, &qword_100829060);
}

uint64_t sub_10022AA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  char v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD v91[3];

  v90 = a2;
  v3 = type metadata accessor for WorkloadListItemStack(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v78 - v7;
  v9 = sub_100047110(&qword_100822220);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for EffortMiniGraph(0, v10);
  v83 = *(_QWORD *)(v13 - 8);
  v84 = v13;
  __chkstk_darwin(v13);
  v80 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100047110(&qword_100828FD0);
  __chkstk_darwin(v81);
  v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100047110(&qword_100828FD8);
  __chkstk_darwin(v82);
  v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100047110(&qword_100828FE0);
  __chkstk_darwin(v85);
  v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_100047110(&qword_100828FE8);
  __chkstk_darwin(v87);
  v89 = (uint64_t)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v86 = (uint64_t)&v78 - v23;
  __chkstk_darwin(v24);
  v88 = (uint64_t)&v78 - v25;
  v26 = *(_QWORD *)(*(_QWORD *)(a1 + *(int *)(v3 + 24)) + 16);
  sub_10004F8C8(a1, (uint64_t)v8, type metadata accessor for WorkloadListItemStack);
  if (!v26)
  {
    sub_100011F54((uint64_t)v8, type metadata accessor for WorkloadListItemStack);
    sub_10004F8C8(a1, (uint64_t)v5, type metadata accessor for WorkloadListItemStack);
LABEL_7:
    sub_100011F54((uint64_t)v5, type metadata accessor for WorkloadListItemStack);
    goto LABEL_8;
  }
  v27 = *(_QWORD *)(*(_QWORD *)&v8[*(int *)(v3 + 40)] + 16);
  v79 = v3;
  v28 = *(_QWORD *)&v8[*(int *)(v3 + 24)];
  v29 = (uint64_t)v12;
  v30 = *(_QWORD *)(v28 + 16);
  sub_100011F54((uint64_t)v8, type metadata accessor for WorkloadListItemStack);
  sub_10004F8C8(a1, (uint64_t)v5, type metadata accessor for WorkloadListItemStack);
  v31 = v27 == v30;
  v12 = (char *)v29;
  if (!v31)
    goto LABEL_7;
  v32 = sub_10022983C();
  sub_100011F54((uint64_t)v5, type metadata accessor for WorkloadListItemStack);
  if ((v32 & 1) != 0)
  {
LABEL_8:
    v33 = type metadata accessor for AppleExertionScale(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v12, 1, 1, v33);
    goto LABEL_9;
  }
  sub_100021CC0(a1 + *(int *)(v79 + 44), v29, &qword_100822220);
LABEL_9:
  v34 = v80;
  v35 = EffortMiniGraph.init(effort:)(v12);
  v36 = static Edge.Set.trailing.getter(v35);
  v37 = EdgeInsets.init(_all:)(8.0);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v83;
  v44 = v84;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v16, v34, v84);
  v46 = &v16[*(int *)(v81 + 36)];
  *v46 = v36;
  *((double *)v46 + 1) = v37;
  *((_QWORD *)v46 + 2) = v39;
  *((_QWORD *)v46 + 3) = v41;
  *((_QWORD *)v46 + 4) = v43;
  v46[40] = 0;
  v47 = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v34, v44);
  v48 = static Edge.Set.leading.getter(v47);
  v49 = EdgeInsets.init(_all:)(-8.0);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  sub_100021CC0((uint64_t)v16, (uint64_t)v18, &qword_100828FD0);
  v56 = &v18[*(int *)(v82 + 36)];
  *v56 = v48;
  *((double *)v56 + 1) = v49;
  *((_QWORD *)v56 + 2) = v51;
  *((_QWORD *)v56 + 3) = v53;
  *((_QWORD *)v56 + 4) = v55;
  v56[40] = 0;
  v57 = sub_10001BE90((uint64_t)v16, &qword_100828FD0);
  v58 = static Alignment.center.getter(v57);
  _FrameLayout.init(width:height:alignment:)(v91, 0x4048000000000000, 0, 0x4042800000000000, 0, v58, v59);
  sub_100021CC0((uint64_t)v18, (uint64_t)v20, &qword_100828FD8);
  v60 = &v20[*(int *)(v85 + 36)];
  v61 = v91[1];
  *(_OWORD *)v60 = v91[0];
  *((_OWORD *)v60 + 1) = v61;
  *((_OWORD *)v60 + 2) = v91[2];
  v62 = sub_10001BE90((uint64_t)v18, &qword_100828FD8);
  v63 = static Edge.Set.top.getter(v62);
  v64 = EdgeInsets.init(_all:)(15.0);
  v66 = v65;
  v68 = v67;
  v70 = v69;
  v71 = v86;
  sub_100021CC0((uint64_t)v20, v86, &qword_100828FE0);
  v72 = v71 + *(int *)(v87 + 36);
  *(_BYTE *)v72 = v63;
  *(double *)(v72 + 8) = v64;
  *(_QWORD *)(v72 + 16) = v66;
  *(_QWORD *)(v72 + 24) = v68;
  *(_QWORD *)(v72 + 32) = v70;
  *(_BYTE *)(v72 + 40) = 0;
  sub_10001BE90((uint64_t)v20, &qword_100828FE0);
  v73 = v88;
  sub_100045AD4(v71, v88, &qword_100828FE8);
  v74 = v89;
  sub_100021CC0(v73, v89, &qword_100828FE8);
  v75 = v90;
  sub_100021CC0(v74, v90, &qword_100828FE8);
  v76 = v75 + *(int *)(sub_100047110(&qword_1008290C8) + 48);
  *(_QWORD *)v76 = 0;
  *(_BYTE *)(v76 + 8) = 1;
  sub_10001BE90(v73, &qword_100828FE8);
  return sub_10001BE90(v74, &qword_100828FE8);
}

double sub_10022AFA8@<D0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  int *v21;
  void (*v22)(_BYTE *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  char v49;
  char *v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  double result;
  _BYTE v65[4];
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  _BYTE *v74;
  uint64_t v75;
  _BYTE *v76;

  v73 = a2;
  v3 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v3);
  v5 = &v65[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100047110(&qword_100829080);
  __chkstk_darwin(v6);
  v8 = &v65[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100047110(&qword_100829088);
  __chkstk_darwin(v9);
  v74 = &v65[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v65[-v12];
  __chkstk_darwin(v14);
  v16 = &v65[-v15];
  v17 = type metadata accessor for AttributedString(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = &v65[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = (int *)type metadata accessor for WorkloadListItemStack(0);
  v22 = *(void (**)(_BYTE *, char *, uint64_t))(v18 + 16);
  v22(v20, &a1[v21[5]], v17);
  v23 = Text.init(_:)(v20);
  v71 = v24;
  v72 = v23;
  LODWORD(v70) = v25;
  v75 = v26;
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v23);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v27 = sub_100047110(&qword_100829090);
  v28 = sub_10022B410(a1, &v8[*(int *)(v27 + 44)]);
  v29 = static Alignment.center.getter(v28);
  sub_1003EBD68(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v13, 0.0, 1, 0.0, 1, v29, v30);
  sub_10001BE90((uint64_t)v8, &qword_100829080);
  v76 = v16;
  sub_100045AD4((uint64_t)v13, (uint64_t)v16, &qword_100829088);
  if (*(_QWORD *)(*(_QWORD *)&a1[v21[10]] + 16))
  {
    v22(v20, &a1[v21[7]], v17);
    v31 = Text.init(_:)(v20);
    v33 = v32;
    v35 = v34;
    v36 = (uint64_t)v5;
    v37 = a1;
    v39 = v38 & 1;
    v40 = enum case for Font.Design.rounded(_:);
    v41 = type metadata accessor for Font.Design(0);
    v42 = *(_QWORD *)(v41 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 104))(v36, v40, v41);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v36, 0, 1, v41);
    v43 = Text.fontDesign(_:)(v36, v31, v33, v39, v35);
    v68 = v44;
    v69 = v43;
    v67 = v45;
    v47 = v46 & 1;
    v48 = v39;
    a1 = v37;
    sub_1000E4458(v31, v33, v48);
    swift_bridgeObjectRelease(v35);
    sub_10001BE90(v36, &qword_10081F2F8);
  }
  else
  {
    v68 = 0;
    v69 = 0;
    v47 = 0;
    v67 = 0;
  }
  v49 = v70 & 1;
  v66 = v70 & 1;
  v50 = &a1[v21[8]];
  v51 = *((_QWORD *)v50 + 1);
  v70 = *(_QWORD *)v50;
  v52 = v74;
  sub_100021CC0((uint64_t)v76, (uint64_t)v74, &qword_100829088);
  v54 = v72;
  v53 = v73;
  v55 = v71;
  *v73 = v72;
  v53[1] = v55;
  *((_BYTE *)v53 + 16) = v49;
  v53[3] = v75;
  v56 = (int *)sub_100047110(&qword_100829098);
  sub_100021CC0((uint64_t)v52, (uint64_t)v53 + v56[12], &qword_100829088);
  v57 = (uint64_t *)((char *)v53 + v56[16]);
  v59 = v68;
  v58 = v69;
  *v57 = v69;
  v57[1] = v59;
  v60 = v67;
  v57[2] = v47;
  v57[3] = v60;
  v61 = (char *)v53 + v56[20];
  *(_QWORD *)v61 = 0;
  v61[8] = 1;
  v62 = (uint64_t *)((char *)v53 + v56[24]);
  *v62 = v70;
  v62[1] = v51;
  LOBYTE(v56) = v66;
  sub_1000E439C(v54, v55, v66);
  v63 = v75;
  swift_bridgeObjectRetain(v75);
  sub_100182758(v58, v59, v47, v60);
  swift_bridgeObjectRetain_n(v51, 2);
  sub_10001BE90((uint64_t)v76, &qword_100829088);
  swift_bridgeObjectRelease(v51);
  sub_100182728(v58, v59, v47, v60);
  sub_10001BE90((uint64_t)v52, &qword_100829088);
  sub_1000E4458(v54, v55, (char)v56);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v63).n128_u64[0];
  return result;
}

uint64_t sub_10022B410@<X0>(char *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;

  v42 = a2;
  v3 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WorkoutItemEffortLabelView(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100047110(&qword_1008290A0);
  __chkstk_darwin(v39);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_1008290A8);
  v41 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v40 = (char *)&v39 - v15;
  v16 = (int *)type metadata accessor for WorkloadListItemStack(0);
  v17 = *(_QWORD *)&a1[v16[6]];
  v18 = *a1;
  v19 = *(_QWORD *)&a1[v16[10]];
  sub_100021CC0((uint64_t)&a1[v16[11]], (uint64_t)&v8[*(int *)(v6 + 28)], &qword_100822220);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v19);
  v20 = sub_10022983C();
  *(_QWORD *)v8 = v17;
  v8[8] = v18;
  *((_QWORD *)v8 + 2) = v19;
  v8[*(int *)(v6 + 32)] = v20 & 1;
  v22 = static Font.body.getter(v21);
  static Font.Weight.medium.getter(v22);
  v23 = Font.weight(_:)(v22);
  swift_release(v22);
  KeyPath = swift_getKeyPath(&unk_10062EF28);
  sub_10004F8C8((uint64_t)v8, (uint64_t)v10, type metadata accessor for WorkoutItemEffortLabelView);
  v25 = v39;
  v26 = (uint64_t *)&v10[*(int *)(v39 + 36)];
  *v26 = KeyPath;
  v26[1] = v23;
  sub_100011F54((uint64_t)v8, type metadata accessor for WorkoutItemEffortLabelView);
  v27 = enum case for Font.Design.rounded(_:);
  v28 = type metadata accessor for Font.Design(0);
  v29 = *(_QWORD *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 104))(v5, v27, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v5, 0, 1, v28);
  v30 = sub_10022DB28();
  View.fontDesign(_:)(v5, v25, v30);
  sub_10001BE90((uint64_t)v5, &qword_10081F2F8);
  sub_10001BE90((uint64_t)v10, &qword_1008290A0);
  v32 = v40;
  v31 = v41;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v40, v13, v11);
  v33 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v34 = v31;
  v33(v13, v32, v11);
  v35 = v42;
  v33(v42, v13, v11);
  v36 = &v35[*(int *)(sub_100047110(&qword_1008290C0) + 48)];
  *(_QWORD *)v36 = 0;
  v36[8] = 1;
  v37 = *(void (**)(char *, uint64_t))(v34 + 8);
  v37(v32, v11);
  return ((uint64_t (*)(char *, uint64_t))v37)(v13, v11);
}

uint64_t sub_10022B72C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  __int128 v73;
  uint64_t v74;
  char v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char v107;
  void (*v108)(char *, uint64_t);
  double v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unsigned __int8 *v149;
  _OWORD v150[3];

  v147 = a2;
  v3 = type metadata accessor for DynamicTypeSize(0);
  v144 = *(_QWORD *)(v3 - 8);
  v145 = v3;
  __chkstk_darwin(v3);
  v143 = (char *)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v141 = (uint64_t)&v125 - v6;
  v7 = sub_100047110(&qword_100828FB8);
  __chkstk_darwin(v7);
  v137 = (uint64_t *)((char *)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v136 = sub_100047110(&qword_100828FC0);
  __chkstk_darwin(v136);
  v140 = (uint64_t)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_100047110(&qword_100828FC8);
  __chkstk_darwin(v139);
  v146 = (uint64_t)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v138 = (uint64_t)&v125 - v12;
  __chkstk_darwin(v13);
  v142 = (uint64_t)&v125 - v14;
  v15 = type metadata accessor for WorkloadListItemStack(0);
  __chkstk_darwin(v15);
  v126 = (uint64_t)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v125 - v18;
  v20 = sub_100047110(&qword_100822220);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v125 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for EffortMiniGraph(0, v21);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v25 = (char *)&v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_100047110(&qword_100828FD0);
  __chkstk_darwin(v127);
  v27 = (char *)&v125 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_100047110(&qword_100828FD8);
  __chkstk_darwin(v128);
  v29 = (char *)&v125 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_100047110(&qword_100828FE0);
  __chkstk_darwin(v131);
  v31 = (char *)&v125 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_100047110(&qword_100828FE8);
  __chkstk_darwin(v133);
  v135 = (uint64_t)&v125 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v132 = (uint64_t)&v125 - v34;
  __chkstk_darwin(v35);
  v134 = (uint64_t)&v125 - v36;
  v37 = *(_QWORD *)(*(_QWORD *)&a1[*(int *)(v15 + 24)] + 16);
  sub_10004F8C8((uint64_t)a1, (uint64_t)v19, type metadata accessor for WorkloadListItemStack);
  v148 = v15;
  v149 = a1;
  if (!v37)
  {
    sub_100011F54((uint64_t)v19, type metadata accessor for WorkloadListItemStack);
    v45 = (uint64_t)a1;
    v42 = v126;
    sub_10004F8C8(v45, v126, type metadata accessor for WorkloadListItemStack);
LABEL_7:
    sub_100011F54(v42, type metadata accessor for WorkloadListItemStack);
    goto LABEL_8;
  }
  v38 = (uint64_t)v23;
  v39 = *(_QWORD *)(*(_QWORD *)&v19[*(int *)(v15 + 40)] + 16);
  v40 = *(_QWORD *)(*(_QWORD *)&v19[*(int *)(v15 + 24)] + 16);
  sub_100011F54((uint64_t)v19, type metadata accessor for WorkloadListItemStack);
  v41 = (uint64_t)a1;
  v42 = v126;
  sub_10004F8C8(v41, v126, type metadata accessor for WorkloadListItemStack);
  v43 = v39 == v40;
  v23 = (char *)v38;
  if (!v43)
    goto LABEL_7;
  v44 = sub_10022983C();
  sub_100011F54(v42, type metadata accessor for WorkloadListItemStack);
  if ((v44 & 1) == 0)
  {
    sub_100021CC0((uint64_t)&v149[*(int *)(v148 + 44)], v38, &qword_100822220);
    goto LABEL_9;
  }
LABEL_8:
  v46 = type metadata accessor for AppleExertionScale(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v23, 1, 1, v46);
LABEL_9:
  v47 = EffortMiniGraph.init(effort:)(v23);
  v48 = static Edge.Set.trailing.getter(v47);
  v49 = EdgeInsets.init(_all:)(8.0);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v56 = v129;
  v57 = v130;
  (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v27, v25, v130);
  v58 = &v27[*(int *)(v127 + 36)];
  *v58 = v48;
  *((double *)v58 + 1) = v49;
  *((_QWORD *)v58 + 2) = v51;
  *((_QWORD *)v58 + 3) = v53;
  *((_QWORD *)v58 + 4) = v55;
  v58[40] = 0;
  v59 = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v25, v57);
  v60 = static Edge.Set.leading.getter(v59);
  v61 = EdgeInsets.init(_all:)(-8.0);
  v63 = v62;
  v65 = v64;
  v67 = v66;
  sub_100021CC0((uint64_t)v27, (uint64_t)v29, &qword_100828FD0);
  v68 = &v29[*(int *)(v128 + 36)];
  *v68 = v60;
  *((double *)v68 + 1) = v61;
  *((_QWORD *)v68 + 2) = v63;
  *((_QWORD *)v68 + 3) = v65;
  *((_QWORD *)v68 + 4) = v67;
  v68[40] = 0;
  v69 = sub_10001BE90((uint64_t)v27, &qword_100828FD0);
  v70 = static Alignment.center.getter(v69);
  _FrameLayout.init(width:height:alignment:)(v150, 0x4048000000000000, 0, 0x4042800000000000, 0, v70, v71);
  sub_100021CC0((uint64_t)v29, (uint64_t)v31, &qword_100828FD8);
  v72 = &v31[*(int *)(v131 + 36)];
  v73 = v150[1];
  *(_OWORD *)v72 = v150[0];
  *((_OWORD *)v72 + 1) = v73;
  *((_OWORD *)v72 + 2) = v150[2];
  v74 = sub_10001BE90((uint64_t)v29, &qword_100828FD8);
  v75 = static Edge.Set.vertical.getter(v74);
  v76 = EdgeInsets.init(_all:)(15.0);
  v78 = v77;
  v80 = v79;
  v82 = v81;
  v83 = v132;
  sub_100021CC0((uint64_t)v31, v132, &qword_100828FE0);
  v84 = v83 + *(int *)(v133 + 36);
  *(_BYTE *)v84 = v75;
  *(double *)(v84 + 8) = v76;
  *(_QWORD *)(v84 + 16) = v78;
  *(_QWORD *)(v84 + 24) = v80;
  *(_QWORD *)(v84 + 32) = v82;
  *(_BYTE *)(v84 + 40) = 0;
  sub_10001BE90((uint64_t)v31, &qword_100828FE0);
  v85 = v134;
  v86 = sub_100045AD4(v83, v134, &qword_100828FE8);
  v87 = static HorizontalAlignment.leading.getter(v86);
  v88 = (uint64_t)v137;
  *v137 = v87;
  *(_QWORD *)(v88 + 8) = 0;
  *(_BYTE *)(v88 + 16) = 0;
  v89 = sub_100047110(&qword_100828FF0);
  sub_10022C078(v149, (uint64_t *)(v88 + *(int *)(v89 + 44)));
  LOBYTE(v83) = static Edge.Set.top.getter(v90);
  v91 = sub_100229BC4();
  v92 = EdgeInsets.init(_all:)(v91);
  v94 = v93;
  v96 = v95;
  v98 = v97;
  v99 = v140;
  sub_100021CC0(v88, v140, &qword_100828FB8);
  v100 = v99 + *(int *)(v136 + 36);
  *(_BYTE *)v100 = v83;
  *(double *)(v100 + 8) = v92;
  *(_QWORD *)(v100 + 16) = v94;
  *(_QWORD *)(v100 + 24) = v96;
  *(_QWORD *)(v100 + 32) = v98;
  *(_BYTE *)(v100 + 40) = 0;
  v101 = sub_10001BE90(v88, &qword_100828FB8);
  v102 = static Edge.Set.bottom.getter(v101);
  v103 = v141;
  sub_1003F6E18(v141);
  v105 = v143;
  v104 = v144;
  v106 = v145;
  (*(void (**)(char *, _QWORD, uint64_t))(v144 + 104))(v143, enum case for DynamicTypeSize.xLarge(_:), v145);
  sub_1000083D8((unint64_t *)&qword_10081F588, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v107 = dispatch thunk of static Comparable.< infix(_:_:)(v103, v105, v106);
  v108 = *(void (**)(char *, uint64_t))(v104 + 8);
  v108(v105, v106);
  v108((char *)v103, v106);
  v109 = 12.0;
  if ((v107 & 1) == 0)
    v109 = 15.0;
  v110 = EdgeInsets.init(_all:)(v109);
  v112 = v111;
  v114 = v113;
  v116 = v115;
  v117 = v138;
  sub_100021CC0(v99, v138, &qword_100828FC0);
  v118 = v117 + *(int *)(v139 + 36);
  *(_BYTE *)v118 = v102;
  *(double *)(v118 + 8) = v110;
  *(_QWORD *)(v118 + 16) = v112;
  *(_QWORD *)(v118 + 24) = v114;
  *(_QWORD *)(v118 + 32) = v116;
  *(_BYTE *)(v118 + 40) = 0;
  sub_10001BE90(v99, &qword_100828FC0);
  v119 = v142;
  sub_100045AD4(v117, v142, &qword_100828FC8);
  v120 = v135;
  sub_100021CC0(v85, v135, &qword_100828FE8);
  v121 = v146;
  sub_100021CC0(v119, v146, &qword_100828FC8);
  v122 = v147;
  sub_100021CC0(v120, v147, &qword_100828FE8);
  v123 = sub_100047110(&qword_100828FF8);
  sub_100021CC0(v121, v122 + *(int *)(v123 + 48), &qword_100828FC8);
  sub_10001BE90(v119, &qword_100828FC8);
  sub_10001BE90(v85, &qword_100828FE8);
  sub_10001BE90(v121, &qword_100828FC8);
  return sub_10001BE90(v120, &qword_100828FE8);
}

double sub_10022C078@<D0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (**v38)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t (**v58)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  double result;
  uint64_t v71;
  void (*v72)(char *, unsigned __int8 *, uint64_t, __n128);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t (**v85)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t *v86;

  v86 = a2;
  v79 = sub_100047110(&qword_100829000);
  __chkstk_darwin(v79);
  v85 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))((char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (int *)type metadata accessor for WorkloadListItemStack(0);
  v73 = *((_QWORD *)v4 - 1);
  v5 = *(_QWORD *)(v73 + 64);
  __chkstk_darwin(v4);
  v75 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v74 = (uint64_t)&v71 - v7;
  v77 = type metadata accessor for EffortGoalAndDate(0);
  __chkstk_darwin(v77);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v76 = (uint64_t)&v71 - v11;
  v12 = type metadata accessor for DynamicTypeSize(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v71 - v17;
  v19 = sub_100047110(&qword_100829008);
  __chkstk_darwin(v19);
  v84 = (uint64_t)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v83 = (char *)&v71 - v22;
  v23 = type metadata accessor for AttributedString(0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = &a1[v4[5]];
  v72 = *(void (**)(char *, unsigned __int8 *, uint64_t, __n128))(v28 + 16);
  v72(v26, v27, v23, v24);
  v29 = Text.init(_:)(v26);
  v80 = v30;
  v81 = v29;
  v78 = v31;
  v82 = v32;
  sub_1003F6E18((uint64_t)v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DynamicTypeSize.xLarge(_:), v12);
  sub_1000083D8((unint64_t *)&qword_10081F588, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  LOBYTE(v26) = dispatch thunk of static Comparable.< infix(_:_:)(v18, v15, v12);
  v33 = *(void (**)(char *, uint64_t))(v13 + 8);
  v33(v15, v12);
  v33(v18, v12);
  if ((v26 & 1) != 0)
  {
    v34 = v75;
    sub_10004F8C8((uint64_t)a1, v75, type metadata accessor for WorkloadListItemStack);
    v35 = *(unsigned __int8 *)(v73 + 80);
    v36 = (v35 + 16) & ~v35;
    v37 = swift_allocObject(&unk_10078FF38, v36 + v5, v35 | 7);
    sub_100047C88(v34, v37 + v36, type metadata accessor for WorkloadListItemStack);
    v38 = v85;
    *v85 = sub_10022DAC4;
    v38[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v37;
    swift_storeEnumTagMultiPayload(v38, v79, 1);
    v39 = sub_100047110(&qword_100829010);
    v40 = sub_1000083D8(&qword_100829018, type metadata accessor for EffortGoalAndDate, (uint64_t)&unk_100649B80);
    v41 = sub_100028384(&qword_100829020, &qword_100829010, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    v42 = (uint64_t)v83;
    _ConditionalContent<>.init(storage:)(v38, v77, v39, v40, v41);
  }
  else
  {
    v43 = (int *)v77;
    v44 = *(_QWORD *)&a1[v4[6]];
    LODWORD(v75) = *a1;
    swift_bridgeObjectRetain(v44);
    v45 = sub_10022983C();
    v46 = v4[10];
    v47 = *(_QWORD *)(*(_QWORD *)&a1[v46] + 16);
    v48 = v74;
    sub_10004F8C8((uint64_t)a1, v74, type metadata accessor for WorkloadListItemStack);
    if (v47)
    {
      v49 = sub_10022983C();
      v50 = v48;
      LOBYTE(v47) = v49 ^ 1;
    }
    else
    {
      v50 = v48;
    }
    sub_100011F54(v50, type metadata accessor for WorkloadListItemStack);
    v51 = *(_QWORD *)&a1[v46];
    sub_100021CC0((uint64_t)&a1[v4[11]], (uint64_t)&v9[v43[9]], &qword_100822220);
    ((void (*)(char *, unsigned __int8 *, uint64_t))v72)(&v9[v43[10]], &a1[v4[7]], v23);
    v52 = &a1[v4[8]];
    v53 = *(_QWORD *)v52;
    v54 = *((_QWORD *)v52 + 1);
    LOBYTE(v52) = a1[v4[9]];
    *(_QWORD *)v9 = v44;
    v9[8] = v75;
    v9[9] = v45 & 1;
    v9[10] = v47 & 1;
    *((_QWORD *)v9 + 2) = v51;
    v55 = &v9[v43[11]];
    *(_QWORD *)v55 = v53;
    *((_QWORD *)v55 + 1) = v54;
    v56 = &v9[v43[12]];
    *(_QWORD *)v56 = 0;
    v56[8] = 1;
    v9[v43[13]] = (char)v52;
    v57 = v76;
    sub_100047C88((uint64_t)v9, v76, type metadata accessor for EffortGoalAndDate);
    v58 = v85;
    sub_10004F8C8(v57, (uint64_t)v85, type metadata accessor for EffortGoalAndDate);
    swift_storeEnumTagMultiPayload(v58, v79, 0);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v54);
    v59 = sub_100047110(&qword_100829010);
    v60 = sub_1000083D8(&qword_100829018, type metadata accessor for EffortGoalAndDate, (uint64_t)&unk_100649B80);
    v61 = sub_100028384(&qword_100829020, &qword_100829010, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    v42 = (uint64_t)v83;
    _ConditionalContent<>.init(storage:)(v58, v43, v59, v60, v61);
    sub_100011F54(v57, type metadata accessor for EffortGoalAndDate);
  }
  v62 = v78 & 1;
  v63 = v84;
  sub_100021CC0(v42, v84, &qword_100829008);
  v64 = v86;
  v66 = v80;
  v65 = v81;
  *v86 = v81;
  v64[1] = v66;
  *((_BYTE *)v64 + 16) = v62;
  v67 = v82;
  v64[3] = v82;
  v68 = sub_100047110(&qword_100829028);
  sub_100021CC0(v63, (uint64_t)v64 + *(int *)(v68 + 48), &qword_100829008);
  v69 = (char *)v64 + *(int *)(v68 + 64);
  *(_QWORD *)v69 = 0;
  v69[8] = 0;
  sub_1000E439C(v65, v66, v62);
  swift_bridgeObjectRetain(v67);
  sub_10001BE90(v42, &qword_100829008);
  sub_10001BE90(v63, &qword_100829008);
  sub_1000E4458(v65, v66, v62);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v67).n128_u64[0];
  return result;
}

uint64_t sub_10022C6BC@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;

  v6 = sub_100047110(&qword_100829030);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100829038);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100829040);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static VerticalAlignment.lastTextBaseline.getter(v13);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v16 = sub_100047110(&qword_100829048);
  v17 = sub_10022C8C8(a2, a1, (uint64_t)&v8[*(int *)(v16 + 44)]);
  v18 = static Alignment.center.getter(v17);
  sub_1003EBDC0(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v11, 0.0, 1, INFINITY, 0, v18, v19);
  sub_10001BE90((uint64_t)v8, &qword_100829030);
  KeyPath = swift_getKeyPath(&unk_10062EEC8);
  sub_100021CC0((uint64_t)v11, (uint64_t)v15, &qword_100829038);
  v21 = &v15[*(int *)(v12 + 36)];
  *(_QWORD *)v21 = KeyPath;
  *((_QWORD *)v21 + 1) = 1;
  v21[16] = 0;
  sub_10001BE90((uint64_t)v11, &qword_100829038);
  v22 = swift_getKeyPath(&unk_10062EEF8);
  sub_100021CC0((uint64_t)v15, a3, &qword_100829040);
  v23 = (uint64_t *)(a3 + *(int *)(sub_100047110(&qword_100829050) + 36));
  *v23 = v22;
  v23[1] = 0x3FE8000000000000;
  return sub_10001BE90((uint64_t)v15, &qword_100829040);
}

uint64_t sub_10022C8C8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unsigned __int8 *v15;
  char *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  unsigned __int8 v23;
  char *v24;
  char *v25;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a2;
  v31 = a3;
  v4 = (int *)type metadata accessor for WorkloadListItemStack(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for EffortGoalAndDate(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)&a1[v4[6]];
  v29 = *a1;
  swift_bridgeObjectRetain(v10);
  v28 = sub_10022983C();
  v11 = v4[10];
  v12 = *(_QWORD *)(*(_QWORD *)&a1[v11] + 16);
  sub_10004F8C8((uint64_t)a1, (uint64_t)v6, type metadata accessor for WorkloadListItemStack);
  if (v12)
    v13 = sub_10022983C() ^ 1;
  else
    v13 = 0;
  sub_100011F54((uint64_t)v6, type metadata accessor for WorkloadListItemStack);
  v14 = *(_QWORD *)&a1[v11];
  sub_100021CC0((uint64_t)&a1[v4[11]], (uint64_t)&v9[v7[9]], &qword_100822220);
  v15 = &a1[v4[7]];
  v16 = &v9[v7[10]];
  v17 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, v15, v17);
  v18 = &a1[v4[8]];
  v19 = *(_QWORD *)v18;
  v20 = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v20);
  v22 = GeometryProxy.size.getter(v21);
  v23 = a1[v4[9]];
  *(_QWORD *)v9 = v10;
  v9[8] = v29;
  v9[9] = v28 & 1;
  v9[10] = v13 & 1;
  *((_QWORD *)v9 + 2) = v14;
  v24 = &v9[v7[11]];
  *(_QWORD *)v24 = v19;
  *((_QWORD *)v24 + 1) = v20;
  v25 = &v9[v7[12]];
  *(double *)v25 = v22;
  v25[8] = 0;
  v9[v7[13]] = v23;
  return sub_100047C88((uint64_t)v9, v31, type metadata accessor for EffortGoalAndDate);
}

_QWORD *sub_10022CACC(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t, __n128);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v33);
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for AttributedString(0);
    v11 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v10 - 8) + 16);
    ((void (*)(_BYTE *, char *, uint64_t))v11)(v8, v9, v10);
    v12 = a3[6];
    v13 = a3[7];
    v14 = *(_QWORD *)((char *)a2 + v12);
    *(_QWORD *)((char *)v4 + v12) = v14;
    v15 = (char *)v4 + v13;
    v16 = (char *)a2 + v13;
    v17 = swift_bridgeObjectRetain(v14);
    v11(v15, v16, v10, v17);
    v18 = a3[8];
    v19 = a3[9];
    v20 = (_QWORD *)((char *)v4 + v18);
    v21 = (_QWORD *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    *((_BYTE *)v4 + v19) = *((_BYTE *)a2 + v19);
    v23 = a3[10];
    v24 = a3[11];
    v25 = *(_QWORD *)((char *)a2 + v23);
    *(_QWORD *)((char *)v4 + v23) = v25;
    v26 = (char *)v4 + v24;
    v27 = (char *)a2 + v24;
    v28 = type metadata accessor for AppleExertionScale(0);
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v29 + 48);
    swift_bridgeObjectRetain(v22);
    v31 = swift_bridgeObjectRetain(v25);
    if (v30(v27, 1, v28, v31))
    {
      v32 = sub_100047110(&qword_100822220);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v34 = a3[12];
    v35 = (_QWORD *)((char *)v4 + v34);
    v36 = (_QWORD *)((char *)a2 + v34);
    v37 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(v36, v37) == 1)
    {
      v38 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v35, v36, v38);
      v39 = v35;
      v40 = v37;
      v41 = 1;
    }
    else
    {
      v42 = *v36;
      *v35 = *v36;
      swift_retain(v42);
      v39 = v35;
      v40 = v37;
      v41 = 0;
    }
    swift_storeEnumTagMultiPayload(v39, v40, v41);
  }
  return v4;
}

double sub_10022CCD4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for AttributedString(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6]));
  ((void (*)(uint64_t, uint64_t, __n128))v6)(a1 + a2[7], v5, v7);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10]));
  v8 = a1 + a2[11];
  v9 = type metadata accessor for AppleExertionScale(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = (_QWORD *)(a1 + a2[12]);
  v12 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v11).n128_u64[0];
  }
  return result;
}

_BYTE *sub_10022CDFC(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(_BYTE *, uint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for AttributedString(0);
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = *(_QWORD *)&a2[v11];
  *(_QWORD *)&a1[v11] = v13;
  v14 = &a1[v12];
  v15 = &a2[v12];
  v16 = swift_bridgeObjectRetain(v13);
  ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v10)(v14, v15, v9, v16);
  v17 = a3[8];
  v18 = a3[9];
  v19 = &a1[v17];
  v20 = &a2[v17];
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  a1[v18] = a2[v18];
  v22 = a3[10];
  v23 = a3[11];
  v24 = *(_QWORD *)&a2[v22];
  *(_QWORD *)&a1[v22] = v24;
  v25 = &a1[v23];
  v26 = &a2[v23];
  v27 = type metadata accessor for AppleExertionScale(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v28 + 48);
  swift_bridgeObjectRetain(v21);
  v30 = swift_bridgeObjectRetain(v24);
  if (v29(v26, 1, v27, v30))
  {
    v31 = sub_100047110(&qword_100822220);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v32 = a3[12];
  v33 = (uint64_t *)&a1[v32];
  v34 = (uint64_t *)&a2[v32];
  v35 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
  {
    v36 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v33, v34, v36);
    v37 = 1;
  }
  else
  {
    v38 = *v34;
    *v33 = *v34;
    swift_retain(v38);
    v37 = 0;
  }
  swift_storeEnumTagMultiPayload(v33, v35, v37);
  return a1;
}

_BYTE *sub_10022CFD0(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_BYTE *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for AttributedString(0);
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = *(_QWORD *)&a2[v11];
  v13 = *(_QWORD *)&a1[v11];
  *(_QWORD *)&a1[v11] = v12;
  swift_bridgeObjectRetain(v12);
  v14 = swift_bridgeObjectRelease(v13);
  ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v10)(&a1[a3[7]], &a2[a3[7]], v9, v14);
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *v16 = *v17;
  v18 = v17[1];
  v19 = v16[1];
  v16[1] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  a1[a3[9]] = a2[a3[9]];
  v20 = a3[10];
  v21 = *(_QWORD *)&a2[v20];
  v22 = *(_QWORD *)&a1[v20];
  *(_QWORD *)&a1[v20] = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  v23 = a3[11];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = type metadata accessor for AppleExertionScale(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v27 + 48);
  LODWORD(v10) = v28(v24, 1, v26);
  v29 = v28(v25, 1, v26);
  if ((_DWORD)v10)
  {
    if (!v29)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      if (a1 == a2)
        return a1;
      goto LABEL_8;
    }
LABEL_7:
    v30 = sub_100047110(&qword_100822220);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    if (a1 == a2)
      return a1;
    goto LABEL_8;
  }
  if (v29)
  {
    (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v27 + 24))(v24, v25, v26);
  if (a1 == a2)
    return a1;
LABEL_8:
  v31 = a3[12];
  v32 = (uint64_t *)&a1[v31];
  v33 = (uint64_t *)&a2[v31];
  sub_10001BE90((uint64_t)&a1[v31], &qword_1008325D0);
  v34 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
  {
    v35 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v32, v33, v35);
    v36 = 1;
  }
  else
  {
    v37 = *v33;
    *v32 = *v33;
    swift_retain(v37);
    v36 = 0;
  }
  swift_storeEnumTagMultiPayload(v32, v34, v36);
  return a1;
}

_BYTE *sub_10022D238(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for AttributedString(0);
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v10(&a1[v11], &a2[v11], v9);
  v12 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  a1[v12] = a2[v12];
  v13 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for AppleExertionScale(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_100047110(&qword_100822220);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = a3[12];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload(v20, v22, 1);
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_10022D3E4(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_BYTE *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for AttributedString(0);
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = *(_QWORD *)&a1[v11];
  *(_QWORD *)&a1[v11] = *(_QWORD *)&a2[v11];
  v13 = swift_bridgeObjectRelease(v12);
  ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v10)(&a1[a3[7]], &a2[a3[7]], v9, v13);
  v14 = a3[8];
  v15 = &a1[v14];
  v16 = (uint64_t *)&a2[v14];
  v18 = *v16;
  v17 = v16[1];
  v19 = v15[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease(v19);
  v20 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v21 = *(_QWORD *)&a1[v20];
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];
  swift_bridgeObjectRelease(v21);
  v22 = a3[11];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = type metadata accessor for AppleExertionScale(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v10) = v27(v23, 1, v25);
  v28 = v27(v24, 1, v25);
  if ((_DWORD)v10)
  {
    if (!v28)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      if (a1 == a2)
        return a1;
      goto LABEL_8;
    }
LABEL_7:
    v29 = sub_100047110(&qword_100822220);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    if (a1 == a2)
      return a1;
    goto LABEL_8;
  }
  if (v28)
  {
    (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v26 + 40))(v23, v24, v25);
  if (a1 == a2)
    return a1;
LABEL_8:
  v30 = a3[12];
  v31 = &a1[v30];
  v32 = &a2[v30];
  sub_10001BE90((uint64_t)&a1[v30], &qword_1008325D0);
  v33 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
  {
    v34 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v31, v32, v34);
    swift_storeEnumTagMultiPayload(v31, v33, 1);
  }
  else
  {
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10022D62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10022D638);
}

uint64_t sub_10022D638(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v12 = sub_100047110(&qword_100822220);
    v7 = *(_QWORD *)(v12 - 8);
    if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    {
      v8 = v12;
      v9 = a3[11];
    }
    else
    {
      v8 = sub_100047110(&qword_10081F440);
      v7 = *(_QWORD *)(v8 - 8);
      v9 = a3[12];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[6]);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_10022D708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10022D714);
}

uint64_t sub_10022D714(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = type metadata accessor for AttributedString(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6]) = (a2 - 1);
      return result;
    }
    v12 = sub_100047110(&qword_100822220);
    v9 = *(_QWORD *)(v12 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v12;
      v11 = a4[11];
    }
    else
    {
      v10 = sub_100047110(&qword_10081F440);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = a4[12];
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_10022D7E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v8 = &unk_10062EE48;
  v2 = type metadata accessor for AttributedString(319);
  if (v3 <= 0x3F)
  {
    v9 = *(_QWORD *)(v2 - 8) + 64;
    v10 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v11 = v9;
    v12 = &unk_10062EE60;
    v13 = &unk_10062EE48;
    v14 = (char *)&value witness table for Builtin.BridgeObject + 64;
    sub_1000087BC(319, (unint64_t *)&qword_100828EB0, (uint64_t (*)(uint64_t))&type metadata accessor for AppleExertionScale, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v15 = *(_QWORD *)(v4 - 8) + 64;
      sub_1000087BC(319, (unint64_t *)&qword_10081F4B0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v16 = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 9, &v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_10022D8D8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B08F8, 1);
}

unint64_t sub_10022D8E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100828F98;
  if (!qword_100828F98)
  {
    v1 = sub_100007050(&qword_100828F78);
    sub_100028384(&qword_100828FA0, &qword_100828F70, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100828F98);
  }
  return result;
}

uint64_t sub_10022D96C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (int *)type metadata accessor for WorkloadListItemStack(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4 + v1[5];
  v7 = type metadata accessor for AttributedString(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[6]));
  ((void (*)(uint64_t, uint64_t, __n128))v8)(v0 + v4 + v1[7], v7, v9);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[10]));
  v10 = v0 + v4 + v1[11];
  v11 = type metadata accessor for AppleExertionScale(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v13 = (_QWORD *)(v0 + v4 + v1[12]);
  v14 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10022DAC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkloadListItemStack(0) - 8) + 80);
  return sub_10022C6BC(a1, (unsigned __int8 *)(v2 + ((v5 + 16) & ~v5)), a2);
}

unint64_t sub_10022DB28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008290B0;
  if (!qword_1008290B0)
  {
    v1 = sub_100007050(&qword_1008290A0);
    sub_1000083D8(&qword_1008290B8, type metadata accessor for WorkoutItemEffortLabelView, (uint64_t)&unk_100633E78);
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008290B0);
  }
  return result;
}

unint64_t sub_10022DBC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008290D0;
  if (!qword_1008290D0)
  {
    v1 = sub_100007050(&qword_100828F28);
    sub_10022DC4C();
    sub_100028384(&qword_10081F650, &qword_10081F658, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008290D0);
  }
  return result;
}

unint64_t sub_10022DC4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008290D8;
  if (!qword_1008290D8)
  {
    v1 = sub_100007050(&qword_100828F20);
    sub_10022DCD0();
    sub_100028384(&qword_100829108, &qword_100828F48, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008290D8);
  }
  return result;
}

unint64_t sub_10022DCD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008290E0;
  if (!qword_1008290E0)
  {
    v1 = sub_100007050(&qword_100828F18);
    sub_1000F4518(&qword_1008290E8, &qword_100828F10, (void (*)(void))sub_10022DD6C);
    sub_100028384(&qword_1008237F0, &qword_1008237F8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008290E0);
  }
  return result;
}

unint64_t sub_10022DD6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008290F0;
  if (!qword_1008290F0)
  {
    v1 = sub_100007050(&qword_100828F08);
    sub_10022DDD0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1008290F0);
  }
  return result;
}

unint64_t sub_10022DDD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008290F8;
  if (!qword_1008290F8)
  {
    v1 = sub_100007050(&qword_100829100);
    sub_1000F4518(&qword_100828F90, &qword_100828F80, (void (*)(void))sub_10022D8E8);
    sub_100028384(&qword_100828FA8, &qword_100828F60, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008290F8);
  }
  return result;
}

char *sub_10022DE6C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  objc_super v17;

  v9 = OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_titleLabel;
  sub_10001E724(0, &qword_1008261E0, UILabel_ptr);
  v10 = v4;
  *(_QWORD *)&v4[v9] = sub_1004C2368();
  v11 = OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel90;
  *(_QWORD *)&v10[v11] = sub_1004C2368();
  v12 = OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel365;
  *(_QWORD *)&v10[v12] = sub_1004C2368();

  v17.receiver = v10;
  v17.super_class = (Class)type metadata accessor for TrendDetailRingClosureView();
  v13 = (char *)objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_titleLabel];
  v15 = v13;
  objc_msgSend(v15, "addSubview:", v14);
  objc_msgSend(v15, "addSubview:", *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel90]);
  objc_msgSend(v15, "addSubview:", *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel365]);
  sub_10022DFB8();
  sub_10022E258();

  return v15;
}

void sub_10022DFB8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  Class isa;
  Class v9;
  objc_class *v10;
  char *v11;
  id v12;
  Class v13;
  objc_class *v14;
  char *v15;
  char *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  objc_super v21;
  objc_super v22;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_titleLabel);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "labelColor");
  objc_msgSend(v2, "setTextColor:", v4);

  v5 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v2, "setFont:", v5);

  v6 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel90);
  v7 = (void *)sub_100036218();
  objc_msgSend(v6, "setFont:", v7);

  sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
  isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.0, 0.28631, 1.0).super.isa;
  v9 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.19608, 0.52941, 1.0).super.isa;
  v10 = (objc_class *)type metadata accessor for GradientColors();
  v11 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
  *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v9;
  v22.receiver = v11;
  v22.super_class = v10;
  v12 = objc_msgSendSuper2(&v22, "init");
  v13 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.98039, 0.066667, 0.3098, 1.0).super.isa;
  v14 = (objc_class *)type metadata accessor for MetricColors();
  v15 = (char *)objc_allocWithZone(v14);
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v12;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v13;
  v21.receiver = v15;
  v21.super_class = v14;
  v16 = (char *)objc_msgSendSuper2(&v21, "init");
  v17 = *(id *)&v16[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  objc_msgSend(v6, "setTextColor:", v17);
  v18 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel365);
  v19 = (void *)sub_100036218();
  objc_msgSend(v18, "setFont:", v19);

  v20 = objc_msgSend(v3, "secondaryLabelColor");
  objc_msgSend(v18, "setTextColor:", v20);

}

void sub_10022E258()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  Class isa;
  uint64_t v48;

  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_titleLabel];
  v2 = objc_msgSend(v1, "topAnchor");
  v3 = objc_msgSend(v0, "topAnchor");
  v44 = objc_msgSend(v2, "constraintEqualToAnchor:constant:", v3, 11.0);

  v4 = objc_msgSend(v1, "leadingAnchor");
  v5 = objc_msgSend(v0, "leadingAnchor");
  v42 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v5, 16.0);

  v6 = objc_msgSend(v1, "trailingAnchor");
  v7 = objc_msgSend(v0, "trailingAnchor");
  v41 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, -16.0);

  v8 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel365];
  v9 = objc_msgSend(v8, "topAnchor");
  v10 = objc_msgSend(v1, "bottomAnchor");
  v40 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  v11 = objc_msgSend(v8, "leadingAnchor");
  v12 = objc_msgSend(v1, "leadingAnchor");
  v39 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  v13 = objc_msgSend(v8, "trailingAnchor");
  v14 = objc_msgSend(v1, "trailingAnchor");
  v38 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  v15 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel90];
  v16 = objc_msgSend(v15, "topAnchor");
  v17 = objc_msgSend(v8, "bottomAnchor");
  v37 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  v18 = objc_msgSend(v15, "leadingAnchor");
  v19 = objc_msgSend(v1, "leadingAnchor");
  v36 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  v20 = objc_msgSend(v15, "trailingAnchor");
  v21 = objc_msgSend(v1, "trailingAnchor");
  v46 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  v22 = objc_msgSend(v15, "bottomAnchor");
  v23 = objc_msgSend(v0, "bottomAnchor");
  v34 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v23, 5.0);

  v35 = (id)objc_opt_self(NSLayoutConstraint);
  v24 = sub_100047110((uint64_t *)&unk_100828340);
  v25 = swift_allocObject(v24, 112, 7);
  *(_OWORD *)(v25 + 16) = xmmword_10062EF60;
  *(_QWORD *)(v25 + 32) = v44;
  *(_QWORD *)(v25 + 40) = v42;
  *(_QWORD *)(v25 + 48) = v41;
  *(_QWORD *)(v25 + 56) = v40;
  *(_QWORD *)(v25 + 64) = v39;
  *(_QWORD *)(v25 + 72) = v38;
  *(_QWORD *)(v25 + 80) = v37;
  *(_QWORD *)(v25 + 88) = v36;
  *(_QWORD *)(v25 + 96) = v46;
  *(_QWORD *)(v25 + 104) = v34;
  v48 = v25;
  specialized Array._endMutation()(v25);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  v45 = v44;
  v43 = v42;
  v26 = v41;
  v27 = v40;
  v28 = v39;
  v29 = v38;
  v30 = v37;
  v31 = v36;
  v32 = v46;
  v33 = v34;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v35, "activateConstraints:", isa, swift_bridgeObjectRelease(v48).n128_f64[0]);

}

uint64_t sub_10022E77C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;

  v2 = v1;
  v4 = OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_titleLabel;
  sub_10001E724(0, &qword_1008261E0, UILabel_ptr);
  v5 = v1;
  *(_QWORD *)&v1[v4] = sub_1004C2368();
  v6 = OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel90;
  *(_QWORD *)&v5[v6] = sub_1004C2368();
  v7 = OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel365;
  v8 = sub_1004C2368();

  *(_QWORD *)&v5[v7] = v8;
  v9 = *(void **)&v5[v7];

  v10 = type metadata accessor for TrendDetailRingClosureView();
  swift_deallocPartialClassInstance(v5, v10, 32, 7);
  return 0;
}

id sub_10022E870()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendDetailRingClosureView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrendDetailRingClosureView()
{
  return objc_opt_self(_TtC10FitnessApp26TrendDetailRingClosureView);
}

void sub_10022E908(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  NSString v12;
  void *v13;
  char *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;

  v8 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_titleLabel);
  sub_1004E4B54(a4, a1);
  if (v9)
  {
    v11 = v9;
    v12 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v10 = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v8, "setText:", v12, v10);

  v13 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel90);
  sub_1004E4168(a1);
  v15 = v14;
  v16 = *(id *)&v14[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  objc_msgSend(v13, "setTextColor:", v16);
  v17 = (void *)sub_10055F768(a2, 90);
  objc_msgSend(v13, "setAttributedText:", v17);

  v18 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp26TrendDetailRingClosureView_valueLabel365);
  v19 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v18, "setTextColor:", v19);

  v20 = (id)sub_10055F768(a3, 365);
  objc_msgSend(v18, "setAttributedText:", v20);

}

uint64_t sub_10022EAE4@<X0>(unsigned __int8 a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  CHWorkoutDetailHeartRateTableViewCell *v45;
  double v46;
  char *v47;
  double v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  void (*v50)(uint64_t, uint64_t, uint64_t, void (*)(char *, uint64_t, uint64_t));
  int v51;
  const char *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  CHWorkoutDetailHeartRateTableViewCell *v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  uint64_t v63;
  uint64_t v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t);
  const char *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, _QWORD, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  SEL v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  void (*v112)(char *, uint64_t);
  uint64_t v113;
  unsigned int (*v114)(uint64_t, uint64_t, uint64_t);
  _QWORD *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int (*v120)(uint64_t, uint64_t, uint64_t);
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(char *, uint64_t, uint64_t);
  char *v126;
  uint64_t v127;
  char *v128;
  void (*v129)(char *, uint64_t);
  char *v130;
  char v131;
  double v132;
  char *v133;
  char v134;
  SEL v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  int *v142;
  uint64_t v143;
  _BOOL8 v144;
  char *v145;
  void *v146;
  char *v147;
  id v148;
  _QWORD *v149;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  _QWORD *v161;
  unint64_t v162;
  uint64_t v163;
  _BOOL8 v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  char *v172;
  char *v173;
  char *v174;
  void (*v175)(char *, uint64_t, uint64_t);
  uint64_t v176;

  v168 = a3;
  v5 = a1;
  v163 = type metadata accessor for Calendar.Component(0);
  v169 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v156 = (char *)&v151 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for DateComponents(0);
  v7 = *((_QWORD *)v175 - 1);
  __chkstk_darwin(v175);
  v153 = (char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v159 = (char *)&v151 - v10;
  v11 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v11);
  v152 = (char *)&v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v155 = (char *)&v151 - v14;
  __chkstk_darwin(v15);
  v158 = (char *)&v151 - v16;
  v17 = type metadata accessor for Calendar(0);
  v166 = *(_QWORD *)(v17 - 8);
  v167 = v17;
  __chkstk_darwin(v17);
  v173 = (char *)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = type metadata accessor for Date(0);
  v171 = *(_QWORD **)(v165 - 8);
  __chkstk_darwin(v165);
  v151 = (char *)&v151 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v160 = (char *)&v151 - v21;
  __chkstk_darwin(v22);
  v154 = (char *)&v151 - v23;
  __chkstk_darwin(v24);
  v174 = (char *)&v151 - v25;
  v26 = sub_100047110((uint64_t *)&unk_100827440);
  __chkstk_darwin(v26);
  v28 = (char *)&v151 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for DateInterval(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v151 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100047110(&qword_100821648);
  __chkstk_darwin(v33);
  v157 = (uint64_t)&v151 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v37 = (char *)&v151 - v36;
  *(_QWORD *)&v39 = __chkstk_darwin(v38).n128_u64[0];
  v176 = (uint64_t)&v151 - v40;
  v41 = v5 > 3;
  v42 = 3;
  if (((1 << a1) & 0x28000000) == 0)
    v42 = 1;
  if (((1 << a1) & 0x12000) != 0)
    v42 = 2;
  if (((1 << a1) & 0x1102208040) != 0)
    v42 = 5;
  if (v5 <= 0x24)
    v43 = v42;
  else
    v43 = 1;
  if (FIUIDistanceUnitIsMetric(objc_msgSend(a2, "userDistanceUnitForDistanceType:", v43, v39)))
  {
    sub_10022F5F4(a1);
    v172 = v44;
    v46 = sub_10022FBB4(a1);
  }
  else
  {
    sub_10022F898(a1);
    v172 = v47;
    v46 = sub_10022FBD4(a1);
  }
  v48 = v46;
  v49 = v45;
  v162 = 0x2224471F80uLL >> a1;
  v170 = v7;
  v50 = *(void (**)(uint64_t, uint64_t, uint64_t, void (*)(char *, uint64_t, uint64_t)))(v7 + 56);
  v50(v176, 1, 1, v175);
  sub_10041E110((char *)(v5 > 3), 1, (uint64_t)v28);
  v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29);
  v164 = v5 > 3;
  if (v51 == 1)
  {
    swift_bridgeObjectRelease(v49, v52, v53, v54, v55, v56, v57, v58);
    v59 = sub_10001BE90((uint64_t)v28, (uint64_t *)&unk_100827440);
    v161 = _swiftEmptyArrayStorage;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v32, v28, v29);
    v60 = 1;
    v61 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10041F724((uint64_t)v32, v5 > 3, 1);
    v62 = v61;
    if (*(_QWORD *)v61->cellPadding >= 6uLL)
    {
      (*(void (**)(char *, unint64_t, _QWORD *))(v170 + 16))(v37, (unint64_t)v61+ 4 * *(_QWORD *)(v170 + 72)+ ((*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80)), v175);
      v60 = 0;
    }
    v63 = v176;
    sub_10001BE90(v176, &qword_100821648);
    v50((uint64_t)v37, v60, 1, v175);
    v64 = sub_1000456B4((uint64_t)v37, v63);
    __chkstk_darwin(v64);
    *(&v151 - 2) = v172;
    v161 = sub_10022FE5C(v62, v49, (void (*)(uint64_t, uint64_t, uint64_t))sub_100230558);
    swift_bridgeObjectRelease(v49, v65, v66, v67, v68, v69, v70, v71);
    swift_bridgeObjectRelease(v62, v72, v73, v74, v75, v76, v77, v78);
    v59 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    v41 = v164;
  }
  v79 = Date.init()(v59);
  static Calendar.current.getter(v79);
  v80 = v165;
  v81 = v171;
  v82 = v163;
  v83 = v169;
  if (a1 <= 3u)
  {
    v94 = sub_100047110((uint64_t *)&unk_100828720);
    v95 = *(_QWORD *)(v83 + 72);
    v96 = *(unsigned __int8 *)(v83 + 80);
    v97 = (v96 + 32) & ~v96;
    v98 = swift_allocObject(v94, v97 + 4 * v95, v96 | 7);
    *(_OWORD *)(v98 + 16) = xmmword_100624D00;
    v99 = v98 + v97;
    v100 = *(void (**)(uint64_t, _QWORD, uint64_t))(v83 + 104);
    v100(v99, enum case for Calendar.Component.era(_:), v82);
    v100(v99 + v95, enum case for Calendar.Component.year(_:), v82);
    v100(v99 + 2 * v95, enum case for Calendar.Component.month(_:), v82);
    v100(v99 + 3 * v95, enum case for Calendar.Component.day(_:), v82);
    v101 = (CHWorkoutDetailHeartRateTableViewCell *)sub_1002302F0(v98);
    swift_setDeallocating(v98);
    swift_arrayDestroy(v99, 4, v82);
    v102 = swift_deallocClassInstance(v98, 32, 7);
    v103 = v160;
    Date.init()(v102);
    v104 = v159;
    Calendar.dateComponents(_:from:)(v101, v103);
    swift_bridgeObjectRelease(v101, v105, v106, v107, v108, v109, v110, v111);
    v112 = (void (*)(char *, uint64_t))v81[1];
    v112(v103, v80);
    v113 = (uint64_t)v158;
    Calendar.date(from:)(v104);
    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v170 + 8))(v104, v175);
    v114 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v81[6];
    if (v114(v113, 1, v80) != 1)
    {
      v121 = v154;
      v175 = (void (*)(char *, uint64_t, uint64_t))v81[4];
      v175(v154, v113, v80);
      v122 = v156;
      v100((uint64_t)v156, enum case for Calendar.Component.hour(_:), v82);
      v123 = (uint64_t)v155;
      Calendar.date(byAdding:value:to:wrappingComponents:)(v122, 17, v121, 0);
      (*(void (**)(char *, uint64_t))(v169 + 8))(v122, v82);
      v112(v121, v80);
      v116 = v80;
      if (v114(v123, 1, v80) == 1)
      {
        sub_10001BE90(v123, (uint64_t *)&unk_100828370);
      }
      else
      {
        v133 = v174;
        v112(v174, v80);
        v175(v133, v123, v80);
      }
      v41 = v164;
      v115 = v171;
      if ((v162 & 1) == 0)
        goto LABEL_36;
      goto LABEL_31;
    }
    sub_10001BE90(v113, (uint64_t *)&unk_100828370);
    v41 = v164;
    goto LABEL_23;
  }
  v84 = v157;
  sub_1000456FC(v176, v157);
  v85 = v170;
  v86 = v175;
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v170 + 48))(v84, 1, v175) == 1)
  {
    sub_10001BE90(v84, &qword_100821648);
LABEL_23:
    v115 = v81;
    v116 = v80;
    if ((v162 & 1) == 0)
      goto LABEL_36;
LABEL_31:
    v131 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65676172657661, 0xE700000000000000, 0x6C61746F74, 0xE500000000000000, 0);
    swift_bridgeObjectRelease_n(0xE700000000000000, 2);
    if ((v131 & 1) != 0)
      v132 = v48;
    else
      v132 = 0.0;
    goto LABEL_38;
  }
  v117 = v153;
  (*(void (**)(char *, uint64_t, _QWORD *))(v85 + 32))(v153, v84, v86);
  v118 = (uint64_t)v152;
  Calendar.date(from:)(v117);
  v119 = v118;
  v115 = v81;
  v120 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v81[6];
  v116 = v80;
  if (v120(v118, 1, v80) != 1)
  {
    v124 = v85;
    v125 = (uint64_t (*)(char *, uint64_t, uint64_t))v115[4];
    v126 = v151;
    v127 = v125(v151, v119, v116);
    v128 = v160;
    Date.addingTimeInterval(_:)(v127, 1.0);
    v129 = (void (*)(char *, uint64_t))v115[1];
    v129(v126, v116);
    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v124 + 8))(v117, v86);
    v130 = v174;
    v129(v174, v116);
    v125(v130, (uint64_t)v128, v116);
    if ((v162 & 1) == 0)
      goto LABEL_36;
    goto LABEL_31;
  }
  (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v85 + 8))(v117, v86);
  sub_10001BE90(v118, (uint64_t *)&unk_100828370);
  if ((v162 & 1) != 0)
    goto LABEL_31;
LABEL_36:
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000, v87, v88, v89, v90, v91, v92, v93);
  v134 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C61746F74, 0xE500000000000000, 0x65676172657661, 0xE700000000000000, 0);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE500000000000000, v135, v136, v137, v138, v139, v140, v141);
  v132 = v48;
  if ((v134 & 1) == 0)
    v48 = 0.0;
LABEL_38:
  v142 = (int *)type metadata accessor for MetricDetailViewModel(0);
  v143 = v168;
  sub_10041E110((char *)v41, 1, v168 + v142[9]);
  v144 = v41;
  v145 = v174;
  ((void (*)(uint64_t, char *, uint64_t))v115[2])(v143 + v142[11], v174, v116);
  v146 = (void *)objc_opt_self(HKQuantity);
  v147 = v172;
  *(_QWORD *)v143 = objc_msgSend(v146, "quantityWithUnit:doubleValue:", v172, v132);
  v148 = objc_msgSend(v146, "quantityWithUnit:doubleValue:", v147, v48);

  v149 = v161;
  *(_QWORD *)(v143 + 8) = v148;
  *(_QWORD *)(v143 + 16) = v149;
  *(_QWORD *)(v143 + 24) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v143 + 32) = v144;
  *(_BYTE *)(v143 + 40) = 1;
  *(_BYTE *)(v143 + v142[10]) = 1;
  (*(void (**)(char *, uint64_t))(v166 + 8))(v173, v167);
  ((void (*)(char *, uint64_t))v115[1])(v145, v116);
  return sub_10001BE90(v176, &qword_100821648);
}

void sub_10022F5F4(char a1)
{
  __asm { BR              X10 }
}

id sub_10022F620()
{
  return objc_msgSend((id)objc_opt_self(HKUnit), "meterUnitWithMetricPrefix:", 9);
}

void sub_10022F898(char a1)
{
  __asm { BR              X10 }
}

id sub_10022F8C4()
{
  return objc_msgSend((id)objc_opt_self(HKUnit), "mileUnit");
}

double sub_10022FBB4(char a1)
{
  return dbl_10062EFA0[a1];
}

double sub_10022FBD4(char a1)
{
  return dbl_10062F0D8[a1];
}

uint64_t sub_10022FBF4@<X0>(uint64_t a1@<X0>, double a2@<X1>, char a3@<W2>, void *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v24;
  void (*v25)(char *, char *, uint64_t);
  void *v26;
  id v27;
  id v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  double v32;
  id v33;
  uint64_t v34;

  v32 = a2;
  v33 = a4;
  v34 = a1;
  v7 = type metadata accessor for Calendar(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v31 - v20;
  if ((a3 & 1) != 0)
    goto LABEL_4;
  v31 = a5;
  static Calendar.current.getter(v19);
  Calendar.date(from:)(v34);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10001BE90((uint64_t)v13, (uint64_t *)&unk_100828370);
    a5 = v31;
LABEL_4:
    v22 = type metadata accessor for MetricChartData(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a5, 1, 1, v22);
  }
  v24 = v32;
  v25 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v25(v21, v13, v14);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v21, v14);
  v26 = (void *)objc_opt_self(HKQuantity);
  v27 = v33;
  v28 = objc_msgSend(v26, "quantityWithUnit:doubleValue:", v27, v24);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
  v29 = (char *)v31;
  *v31 = v27;
  v30 = type metadata accessor for MetricChartData(0);
  v25(&v29[*(int *)(v30 + 20)], v17, v14);
  *(_QWORD *)&v29[*(int *)(v30 + 24)] = v28;
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
}

_QWORD *sub_10022FE5C(CHWorkoutDetailHeartRateTableViewCell *a1, CHWorkoutDetailHeartRateTableViewCell *a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  unint64_t v21;
  char *v22;
  unsigned __int8 *heartRateController;
  uint64_t v24;
  __n128 v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, char *, uint64_t);
  _QWORD *result;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t, __n128);
  SEL v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  const char *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  CHWorkoutDetailHeartRateTableViewCell *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v72;
  char *v73;
  CHWorkoutDetailHeartRateTableViewCell *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  void (*v81)(char *, char *, uint64_t, __n128);
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  char *v86;
  char *v87;

  v4 = v3;
  v80 = a3;
  v7 = sub_100047110(&qword_10081F090);
  __chkstk_darwin(v7);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for MetricChartData(0);
  v83 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v75 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v70 = (uint64_t)&v67 - v12;
  v13 = sub_100047110(&qword_100821648);
  __chkstk_darwin(v13);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for DateComponents(0);
  v16 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v87 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100047110(&qword_100829150);
  __chkstk_darwin(v78);
  v77 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)a1->cellPadding;
  swift_bridgeObjectRetain(a1);
  v20 = swift_bridgeObjectRetain(a2);
  v76 = v19;
  if (v19)
  {
    v68 = a1;
    v69 = v4;
    v21 = 0;
    v22 = (char *)a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v72 = *(_QWORD *)(v16 + 72);
    v81 = *(void (**)(char *, char *, uint64_t, __n128))(v16 + 16);
    heartRateController = a2[1].heartRateController;
    v84 = _swiftEmptyArrayStorage;
    v24 = v82;
    v73 = v15;
    v74 = a2;
    v81(v15, v22, v82, v20);
    while (1)
    {
      v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v16 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v71)(v15, 0, 1, v24);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v24) == 1)
      {
        a1 = v68;
        goto LABEL_19;
      }
      v86 = v22;
      v28 = v16;
      v29 = (uint64_t)v9;
      v30 = v28;
      v31 = *(uint64_t (**)(char *, char *, uint64_t))(v28 + 32);
      result = (_QWORD *)v31(v87, v15, v24);
      v33 = *(_QWORD *)a2->cellPadding;
      if (v21 == v33)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v87, v24);
        swift_bridgeObjectRelease(a2, v46, v47, v48, v49, v50, v51, v52);
        a1 = v68;
        goto LABEL_20;
      }
      if (v21 >= v33)
        break;
      v85 = v21;
      v34 = *((_QWORD *)heartRateController - 1);
      v35 = *heartRateController;
      v36 = (uint64_t)v77;
      v37 = v24;
      v38 = &v77[*(int *)(v78 + 48)];
      v31(v77, v87, v37);
      *(_QWORD *)v38 = v34;
      v38[8] = v35;
      v9 = (char *)v29;
      v80(v36, v34, v35);
      sub_10001BE90(v36, &qword_100829150);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v29, 1, v79) == 1)
      {
        sub_10001BE90(v29, &qword_10081F090);
        v15 = v73;
        a2 = v74;
        v24 = v82;
        v16 = v30;
        v27 = v85;
        v26 = v86;
      }
      else
      {
        v39 = v70;
        sub_100230564(v29, v70);
        sub_100230564(v39, v75);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v84);
        v16 = v30;
        v27 = v85;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v84 = (_QWORD *)sub_10013FD58(0, v84[2] + 1, 1, (unint64_t)v84);
        v24 = v82;
        v26 = v86;
        v42 = v84[2];
        v41 = v84[3];
        if (v42 >= v41 >> 1)
          v84 = (_QWORD *)sub_10013FD58(v41 > 1, v42 + 1, 1, (unint64_t)v84);
        v43 = v83;
        v44 = v84;
        v84[2] = v42 + 1;
        sub_100230564(v75, (uint64_t)v44+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v42);
        v15 = v73;
        a2 = v74;
      }
      v21 = v27 + 1;
      v22 = &v26[v72];
      heartRateController += 16;
      if (v76 == v21)
      {
        a1 = v68;
        v71(v15, 1, 1, v82, v25);
        goto LABEL_19;
      }
      v81(v15, v22, v24, v25);
    }
    __break(1u);
  }
  else
  {
    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v16 + 56);
    v84 = _swiftEmptyArrayStorage;
    v45(v15, 1, 1, v82, v20);
LABEL_19:
    sub_10001BE90((uint64_t)v15, &qword_100821648);
    swift_bridgeObjectRelease(a2, v60, v61, v62, v63, v64, v65, v66);
LABEL_20:
    swift_bridgeObjectRelease(a1, v53, v54, v55, v56, v57, v58, v59);
    return v84;
  }
  return result;
}

void sub_1002302D4(uint64_t a1)
{
  sub_1002305C4(a1, &qword_100829190, &qword_100821A68, _HKFitnessFriendWorkout_ptr);
}

void *sub_1002302F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for Calendar.Component(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_100047110(&qword_100829158);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_1000083D8(&qword_100829160, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v6, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_1000083D8(&qword_100829168, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v6, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

uint64_t sub_100230558@<X0>(uint64_t a1@<X0>, double a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  return sub_10022FBF4(a1, a2, a3 & 1, *(void **)(v4 + 16), a4);
}

uint64_t sub_100230564(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MetricChartData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1002305A8(uint64_t a1)
{
  sub_1002305C4(a1, &qword_100822070, (unint64_t *)&qword_100821A60, ASFriend_ptr);
}

void sub_1002305C4(uint64_t a1, uint64_t *a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  id v32;
  Swift::Int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char v40;
  uint64_t v41;
  id v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v50;

  v5 = a1;
  v6 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
    if (v7)
    {
LABEL_3:
      sub_100047110(a2);
      v8 = (_QWORD *)static _SetStorage.allocate(capacity:)(v7);
      if (!v6)
        goto LABEL_4;
LABEL_11:
      if (v5 < 0)
        v11 = v5;
      else
        v11 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v9 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease(v5);
      if (!v9)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
  }
  v8 = &_swiftEmptySetSingleton;
  if (v6)
    goto LABEL_11;
LABEL_4:
  v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    return;
LABEL_15:
  v12 = (char *)(v8 + 7);
  v50 = v9;
  if ((v5 & 0xC000000000000001) != 0)
  {
    v13 = 0;
    v46 = v5;
    while (1)
    {
      v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v5);
      v15 = __OFADD__(v13++, 1);
      if (v15)
      {
        __break(1u);
        goto LABEL_43;
      }
      v16 = v14;
      v17 = NSObject._rawHashValue(seed:)(v8[5]);
      v18 = -1 << *((_BYTE *)v8 + 32);
      v19 = v17 & ~v18;
      v20 = v19 >> 6;
      v21 = *(_QWORD *)&v12[8 * (v19 >> 6)];
      v22 = 1 << v19;
      if (((1 << v19) & v21) != 0)
      {
        sub_10001E724(0, a3, a4);
        v23 = *(id *)(v8[6] + 8 * v19);
        v24 = static NSObject.== infix(_:_:)(v23, v16);

        if ((v24 & 1) != 0)
        {
LABEL_17:
          swift_unknownObjectRelease(v16);
          v5 = v46;
          goto LABEL_18;
        }
        v25 = ~v18;
        while (1)
        {
          v19 = (v19 + 1) & v25;
          v20 = v19 >> 6;
          v21 = *(_QWORD *)&v12[8 * (v19 >> 6)];
          v22 = 1 << v19;
          if ((v21 & (1 << v19)) == 0)
            break;
          v26 = *(id *)(v8[6] + 8 * v19);
          v27 = static NSObject.== infix(_:_:)(v26, v16);

          if ((v27 & 1) != 0)
            goto LABEL_17;
        }
        v5 = v46;
      }
      *(_QWORD *)&v12[8 * v20] = v22 | v21;
      *(_QWORD *)(v8[6] + 8 * v19) = v16;
      v28 = v8[2];
      v15 = __OFADD__(v28, 1);
      v29 = v28 + 1;
      if (v15)
        goto LABEL_44;
      v8[2] = v29;
LABEL_18:
      if (v13 == v50)
        return;
    }
  }
  v30 = 0;
  v47 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v30 != v47)
  {
    v31 = v8[5];
    v32 = *(id *)(v5 + 32 + 8 * v30);
    v33 = NSObject._rawHashValue(seed:)(v31);
    v34 = -1 << *((_BYTE *)v8 + 32);
    v35 = v33 & ~v34;
    v36 = v35 >> 6;
    v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
    v38 = 1 << v35;
    if (((1 << v35) & v37) != 0)
    {
      sub_10001E724(0, a3, a4);
      v39 = *(id *)(v8[6] + 8 * v35);
      v40 = static NSObject.== infix(_:_:)(v39, v32);

      if ((v40 & 1) != 0)
        goto LABEL_30;
      v41 = ~v34;
      v35 = (v35 + 1) & v41;
      v36 = v35 >> 6;
      v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
      v38 = 1 << v35;
      if ((v37 & (1 << v35)) != 0)
      {
        while (1)
        {
          v42 = *(id *)(v8[6] + 8 * v35);
          v43 = static NSObject.== infix(_:_:)(v42, v32);

          if ((v43 & 1) != 0)
            break;
          v35 = (v35 + 1) & v41;
          v36 = v35 >> 6;
          v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
          v38 = 1 << v35;
          if ((v37 & (1 << v35)) == 0)
            goto LABEL_38;
        }
LABEL_30:

        v9 = v50;
        goto LABEL_31;
      }
LABEL_38:
      v9 = v50;
    }
    *(_QWORD *)&v12[8 * v36] = v38 | v37;
    *(_QWORD *)(v8[6] + 8 * v35) = v32;
    v44 = v8[2];
    v15 = __OFADD__(v44, 1);
    v45 = v44 + 1;
    if (v15)
      goto LABEL_45;
    v8[2] = v45;
LABEL_31:
    if (++v30 == v9)
      return;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

void *sub_100230928(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for PresentationDetent(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_100047110(&qword_100829198);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_1000083D8(&qword_1008291A0, (uint64_t (*)(uint64_t))&type metadata accessor for PresentationDetent, (uint64_t)&protocol conformance descriptor for PresentationDetent);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v6, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_1000083D8(&qword_1008291A8, (uint64_t (*)(uint64_t))&type metadata accessor for PresentationDetent, (uint64_t)&protocol conformance descriptor for PresentationDetent);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v6, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

Swift::Int sub_100230B90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100047110(&qword_100822008);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v27 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v27 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      Hasher.init(_seed:)(v28, *(_QWORD *)(v3 + 40));
      swift_bridgeObjectRetain(v7);
      String.hash(into:)(v28, v8, v7);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = v16[1];
        v18 = *v16 == v8 && v17 == v7;
        if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, v7, 0), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease(v7);
          goto LABEL_4;
        }
        v19 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v19;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v20 = (_QWORD *)(v15 + 16 * v11);
          v21 = v20[1];
          if (*v20 != v8 || v21 != v7)
          {
            result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, v7, 0);
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v23 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v23 = v8;
      v23[1] = v7;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v26;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void *sub_100230D30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_100047110(&qword_100822100);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_1000083D8((unint64_t *)&qword_100828330, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v6, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_1000083D8((unint64_t *)&unk_10082E6B0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v6, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

void sub_100230F98(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  SEL v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  SEL v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v7, v8, v9, v10, v11, v12, v13);
    if (v3)
    {
LABEL_3:
      sub_100047110(&qword_100829170);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      v40 = a1;
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v14 = a1;
      else
        v14 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v14);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)a1, v15, v16, v17, v18, v19, v20, v21);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  v40 = a1;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v22 = 0;
  v23 = (char *)(v4 + 7);
  v39 = v5;
  while ((v40 & 0xC000000000000001) != 0)
  {
    v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v40);
    v25 = __OFADD__(v22++, 1);
    if (v25)
      goto LABEL_32;
LABEL_24:
    v41 = v24;
    v43 = v24;
    v26 = v4[5];
    v27 = type metadata accessor for AnyCancellable(0);
    v28 = sub_1000083D8(&qword_100829178, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v29 = dispatch thunk of Hashable._rawHashValue(seed:)(v26, v27, v28);
    v30 = -1 << *((_BYTE *)v4 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)&v23[8 * (v31 >> 6)];
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      v35 = ~v30;
      v36 = sub_1000083D8(&qword_100829180, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v42 = *(_QWORD *)(v4[6] + 8 * v31);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(&v42, &v43, v27, v36) & 1) != 0)
        {
          swift_release(v41);
          v5 = v39;
          goto LABEL_17;
        }
        v31 = (v31 + 1) & v35;
        v32 = v31 >> 6;
        v33 = *(_QWORD *)&v23[8 * (v31 >> 6)];
        v34 = 1 << v31;
      }
      while ((v33 & (1 << v31)) != 0);
      v5 = v39;
    }
    *(_QWORD *)&v23[8 * v32] = v34 | v33;
    *(_QWORD *)(v4[6] + 8 * v31) = v41;
    v37 = v4[2];
    v25 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v25)
      goto LABEL_33;
    v4[2] = v38;
LABEL_17:
    if (v22 == v5)
      return;
  }
  if (v22 >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_34;
  swift_retain(*(_QWORD *)(v40 + 32 + 8 * v22));
  v25 = __OFADD__(v22++, 1);
  if (!v25)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

void sub_10023122C(uint64_t a1)
{
  sub_1002305C4(a1, &qword_100822088, (unint64_t *)&qword_100828970, CNContact_ptr);
}

uint64_t sub_100231248@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 v19;
  __n128 v20;
  uint64_t v21;
  _BYTE v23[16];
  uint64_t v24;
  _OWORD v25[3];

  v3 = sub_100047110(&qword_100829248);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100047110(&qword_100829250);
  __chkstk_darwin(v7);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = swift_allocObject(&unk_100790460, 88, 7);
  v11 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v10 + 64) = v11;
  *(_QWORD *)(v10 + 80) = *(_QWORD *)(v1 + 64);
  v12 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v10 + 32) = v12;
  v24 = v1;
  sub_1002340F4((_QWORD *)v1);
  v13 = sub_100047110(&qword_100829258);
  v14 = sub_100028384(&qword_100829260, &qword_100829258, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  v15 = Button.init(action:label:)(sub_1002340CC, v10, sub_1002340EC, v23, v13, v14);
  v16 = static Alignment.center.getter(v15);
  _FrameLayout.init(width:height:alignment:)(v25, 0, 1, 0x4055400000000000, 0, v16, v17);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v9, v6, v3);
  v18 = &v9[*(int *)(v7 + 36)];
  v19 = v25[1];
  *v18 = v25[0];
  v18[1] = v19;
  v18[2] = v25[2];
  v20.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  v21 = static Color.white.getter(v20);
  sub_100021CC0((uint64_t)v9, a1, &qword_100829250);
  *(_QWORD *)(a1 + *(int *)(sub_100047110(&qword_100829268) + 36)) = v21;
  return sub_10001BE90((uint64_t)v9, &qword_100829250);
}

uint64_t sub_100231438@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  *a2 = static Alignment.center.getter(a1);
  a2[1] = v4;
  v5 = sub_100047110(&qword_100829270);
  return sub_10023147C(a1, (uint64_t)a2 + *(int *)(v5 + 44));
}

uint64_t sub_10023147C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64x2_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t KeyPath;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  char *v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  void (*v87)(char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v95 = a1;
  v115 = a2;
  v2 = type metadata accessor for ControlSize(0);
  v113 = *(_QWORD *)(v2 - 8);
  v114 = v2;
  __chkstk_darwin(v2);
  v112 = (char *)&v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for CircularProgressViewStyle(0);
  v108 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v99 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100047110(&qword_10081EE68);
  v105 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v97 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100047110(&qword_100829278);
  v109 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v98 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_100047110(&qword_100829280);
  __chkstk_darwin(v102);
  v101 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_100047110(&qword_100829288);
  v119 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v106 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v118 = (char *)&v89 - v10;
  v94 = type metadata accessor for Font.Leading(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v12 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for Font.TextStyle(0);
  v13 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v15 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100047110(&qword_100829290);
  v117 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v100 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v120 = (char *)&v89 - v18;
  v19 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v19);
  v21 = (int64x2_t *)((char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = sub_100047110(&qword_100829298);
  __chkstk_darwin(v22);
  v24 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v89 - v26;
  v116 = (uint64_t)&v89 - v26;
  v28 = &v21->i8[*(int *)(v19 + 20)];
  v29 = enum case for RoundedCornerStyle.continuous(_:);
  v30 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(__int8 *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v28, v29, v30);
  *v21 = vdupq_n_s64(0x7FF0000000000000uLL);
  v31 = v95;
  v32 = v95[5];
  sub_100234158((uint64_t)v21, (uint64_t)v24);
  *(_QWORD *)&v24[*(int *)(v22 + 36)] = v32;
  v96 = v24;
  swift_retain(v32);
  sub_1001D2ACC((uint64_t)v21);
  v33 = sub_100045AD4((uint64_t)v24, (uint64_t)v27, &qword_100829298);
  v91 = static VerticalAlignment.center.getter(v33);
  v34 = sub_100231D48(v31, (uint64_t)&v121);
  v35 = v122;
  v90 = v121;
  v36 = v123;
  LOBYTE(v27) = v124;
  v37 = v125;
  v89 = v125;
  v38 = v92;
  v39 = (*(uint64_t (**)(char *, _QWORD, uint64_t, double))(v13 + 104))(v15, enum case for Font.TextStyle.title(_:), v92, v34);
  static Font.Weight.medium.getter(v39);
  v40 = static Font.system(_:weight:)(v15);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v38);
  v41 = v93;
  v42 = v94;
  (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v12, enum case for Font.Leading.tight(_:), v94);
  v43 = Font.leading(_:)(v12, v40);
  v44 = swift_release(v40);
  (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v12, v42, v44);
  KeyPath = swift_getKeyPath(&unk_10062F330);
  v46 = v31;
  v47 = v31[4];
  v121 = v91;
  v122 = 0;
  LOBYTE(v123) = 1;
  v48 = v90;
  v124 = v90;
  v125 = v35;
  v126 = v36;
  v127 = (char)v27;
  v128 = v37;
  v129 = KeyPath;
  v130 = v43;
  v131 = v47;
  v49 = *((unsigned __int8 *)v46 + 48);
  LODWORD(v95) = *((unsigned __int8 *)v46 + 48);
  swift_retain(v47);
  v50 = sub_100047110(&qword_1008292A0);
  v51 = sub_1002341A4(&qword_1008292A8, &qword_1008292A0, (void (*)(void))sub_100234228);
  View.isHidden(_:defaultAccessibilityHidden:)(v49, 0, v50, v51);
  swift_release(v48);
  sub_1000E4458(v35, v36, (char)v27);
  swift_release(v47);
  swift_release(v43);
  swift_release(KeyPath);
  v52 = swift_bridgeObjectRelease(v89);
  v53 = v97;
  ProgressView<>.init<>()(v52);
  v54 = swift_retain(v47);
  v55 = v99;
  CircularProgressViewStyle.init(tint:)(v54);
  v56 = sub_100028384((unint64_t *)&qword_10081EE60, &qword_10081EE68, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
  v57 = sub_1000083D8(&qword_1008292D0, (uint64_t (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle, (uint64_t)&protocol conformance descriptor for CircularProgressViewStyle);
  v58 = v98;
  v59 = v104;
  v60 = v107;
  View.progressViewStyle<A>(_:)(v55, v104, v107, v56, v57);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v55, v60);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v53, v59);
  v62 = v112;
  v61 = v113;
  v63 = v114;
  (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(v112, enum case for ControlSize.large(_:), v114);
  v64 = swift_getKeyPath(&unk_10062F360);
  v65 = v102;
  v66 = (uint64_t)v101;
  v67 = (uint64_t *)&v101[*(int *)(v102 + 36)];
  v68 = sub_100047110(&qword_10081F2F0);
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))((char *)v67 + *(int *)(v68 + 28), v62, v63);
  *v67 = v64;
  v69 = v109;
  v70 = v110;
  (*(void (**)(uint64_t, char *, uint64_t))(v109 + 16))(v66, v58, v110);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v58, v70);
  v71 = v95 ^ 1;
  v72 = sub_1002342CC();
  v73 = v106;
  View.isHidden(_:defaultAccessibilityHidden:)(v71, 0, v65, v72);
  sub_10001BE90(v66, &qword_100829280);
  v75 = v118;
  v74 = v119;
  v76 = v111;
  (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v118, v73, v111);
  v77 = (uint64_t)v96;
  sub_100021CC0(v116, (uint64_t)v96, &qword_100829298);
  v78 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
  v79 = v100;
  v80 = v103;
  v78(v100, v120, v103);
  v81 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  v82 = v75;
  v83 = v76;
  v81(v73, v82, v76);
  v84 = v115;
  sub_100021CC0(v77, v115, &qword_100829298);
  v85 = sub_100047110(&qword_1008292E8);
  v78((char *)(v84 + *(int *)(v85 + 48)), v79, v80);
  v81((char *)(v84 + *(int *)(v85 + 64)), v73, v83);
  v86 = *(void (**)(char *, uint64_t))(v119 + 8);
  v86(v118, v83);
  v87 = *(void (**)(char *, uint64_t))(v117 + 8);
  v87(v120, v80);
  sub_10001BE90(v116, &qword_100829298);
  v86(v73, v83);
  v87(v79, v80);
  return sub_10001BE90(v77, &qword_100829298);
}

double sub_100231D48@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  double result;
  _QWORD v18[2];

  v4 = *a1;
  v5 = a1[1];
  swift_bridgeObjectRetain(v5);
  v6 = Image.init(systemName:)(v4, v5);
  v7 = a1[2];
  v8 = a1[3];
  v18[0] = v7;
  v18[1] = v8;
  v9 = sub_100038CA0();
  swift_bridgeObjectRetain(v8);
  v10 = Text.init<A>(_:)(v18, &type metadata for String, v9);
  v12 = v11;
  v14 = v13;
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v10;
  v16 = v15 & 1;
  *(_QWORD *)(a2 + 16) = v11;
  *(_BYTE *)(a2 + 24) = v15 & 1;
  *(_QWORD *)(a2 + 32) = v13;
  swift_retain(v6);
  sub_1000E439C(v10, v12, v16);
  swift_bridgeObjectRetain(v14);
  sub_1000E4458(v10, v12, v16);
  swift_release(v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
  return result;
}

uint64_t sub_100231E28@<X0>(uint64_t a1@<X8>)
{
  return sub_100231248(a1);
}

uint64_t sub_100231E68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  int v26;
  int v27;
  char *v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  int v32;
  int v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  int v45;
  int v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v56;
  uint64_t v57;

  v2 = v1;
  v57 = a1;
  v3 = sub_100047110(&qword_1008291B0);
  __chkstk_darwin(v3);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_1008291B8);
  __chkstk_darwin(v6);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_1008291C0);
  __chkstk_darwin(v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_1008291C8);
  __chkstk_darwin(v12);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static HorizontalAlignment.center.getter(v15, v16, v17, v18, v19);
  *((_QWORD *)v5 + 1) = 0x4039000000000000;
  v5[16] = 0;
  v20 = sub_100047110(&qword_1008291D0);
  sub_1002321BC(v2, &v5[*(int *)(v20 + 44)]);
  v22 = static Edge.Set.leading.getter(v21);
  v23 = v22;
  v24 = static Edge.Set.trailing.getter(v22);
  v25 = Edge.Set.init(rawValue:)(0);
  v26 = Edge.Set.init(rawValue:)(v25);
  if (Edge.Set.init(rawValue:)(v26 & v23) != v23)
    v25 = Edge.Set.init(rawValue:)(v25 | v23);
  v27 = Edge.Set.init(rawValue:)(v25);
  if (Edge.Set.init(rawValue:)(v27 & v24) != v24)
    LOBYTE(v25) = Edge.Set.init(rawValue:)(v25 | v24);
  sub_100021CC0((uint64_t)v5, (uint64_t)v8, &qword_1008291B0);
  v28 = &v8[*(int *)(v6 + 36)];
  *v28 = v25;
  *(_OWORD *)(v28 + 8) = 0u;
  *(_OWORD *)(v28 + 24) = 0u;
  v28[40] = 1;
  v29 = sub_10001BE90((uint64_t)v5, &qword_1008291B0);
  v30 = static Edge.Set.bottom.getter(v29);
  v31 = Edge.Set.init(rawValue:)(0);
  v32 = v31;
  v33 = Edge.Set.init(rawValue:)(v31);
  if (Edge.Set.init(rawValue:)(v33 & v30) != v30)
    LOBYTE(v32) = Edge.Set.init(rawValue:)(v32 | v30);
  v34 = EdgeInsets.init(_all:)(40.0);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  sub_100021CC0((uint64_t)v8, (uint64_t)v11, &qword_1008291B8);
  v41 = &v11[*(int *)(v9 + 36)];
  *v41 = v32;
  *((double *)v41 + 1) = v34;
  *((_QWORD *)v41 + 2) = v36;
  *((_QWORD *)v41 + 3) = v38;
  *((_QWORD *)v41 + 4) = v40;
  v41[40] = 0;
  v42 = sub_10001BE90((uint64_t)v8, &qword_1008291B8);
  v43 = static Edge.Set.top.getter(v42);
  v44 = Edge.Set.init(rawValue:)(0);
  v45 = v44;
  v46 = Edge.Set.init(rawValue:)(v44);
  if (Edge.Set.init(rawValue:)(v46 & v43) != v43)
    LOBYTE(v45) = Edge.Set.init(rawValue:)(v45 | v43);
  v47 = EdgeInsets.init(_all:)(65.0);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  sub_100021CC0((uint64_t)v11, (uint64_t)v14, &qword_1008291C0);
  v54 = &v14[*(int *)(v12 + 36)];
  *v54 = v45;
  *((double *)v54 + 1) = v47;
  *((_QWORD *)v54 + 2) = v49;
  *((_QWORD *)v54 + 3) = v51;
  *((_QWORD *)v54 + 4) = v53;
  v54[40] = 0;
  sub_10001BE90((uint64_t)v11, &qword_1008291C0);
  return sub_100045AD4((uint64_t)v14, v57, &qword_1008291C8);
}

double sub_1002321BC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;
  uint64_t KeyPath;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD *v71;
  uint64_t v72;
  __n128 v73;
  void (*v74)(char *, char *, uint64_t, __n128);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  __n128 v94;
  double result;
  unint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  __int128 v121;
  __int128 v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t (*v128)();
  _OWORD *v129;
  uint64_t v130;
  _BYTE *(*v131)(_BYTE *);
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  unsigned __int8 v136;
  __int128 v137;

  v111 = a2;
  v113 = sub_100047110(&qword_1008291D8);
  v110 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v119 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v117 = (char *)&v99 - v5;
  v112 = sub_100047110(&qword_1008291E0);
  v116 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v118 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v120 = (char *)&v99 - v8;
  v9 = type metadata accessor for Locale(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0, v10);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x4E4F435F4B434F4CLL, 0xED0000534C4F5254, v14);
  static Locale.current.getter(v17);
  v109 = String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, 0, v12, 0, 0, 256);
  v115 = v18;
  v114 = static Color.white.getter(v19);
  if (qword_10081DCD8 != -1)
    swift_once(&qword_10081DCD8, sub_1003D1FC8);
  v20 = qword_10086A848;
  v21 = *(_QWORD *)(a1 + 24);
  v108 = *(_QWORD *)(a1 + 16);
  v107 = v21;
  swift_retain(qword_10086A848);
  v22 = swift_retain(v21);
  v23 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100691E10, v22);
  static Locale.current.getter(v23);
  v24 = String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, 0, v12, 0, 0, 256);
  v26 = v25;
  v28 = static Color.white.getter(v27);
  v29 = (_OWORD *)swift_allocObject(&unk_1007902B8, 96, 7);
  v30 = *(_OWORD *)(a1 + 48);
  v29[3] = *(_OWORD *)(a1 + 32);
  v29[4] = v30;
  v29[5] = *(_OWORD *)(a1 + 64);
  v31 = *(_OWORD *)(a1 + 16);
  v29[1] = *(_OWORD *)a1;
  v29[2] = v31;
  *(_QWORD *)&v122 = 0xD000000000000011;
  *((_QWORD *)&v122 + 1) = 0x8000000100691DF0;
  v123 = (_QWORD *)v24;
  v124 = v26;
  v125 = v28;
  v126 = v20;
  v106 = v20;
  v127 = 0;
  v128 = sub_100233B04;
  v129 = v29;
  swift_retain(v20);
  sub_100233B50(a1);
  v33 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x8000000100691E30, v32);
  static Locale.current.getter(v33);
  *(_QWORD *)&v137 = String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, 0, v12, 0, 0, 256);
  *((_QWORD *)&v137 + 1) = v34;
  v133 = *(_OWORD *)(a1 + 32);
  v102 = sub_100047110(&qword_100820D80);
  v35 = State.projectedValue.getter(&v134);
  v101 = &v99;
  v36 = v134;
  v37 = v135;
  LODWORD(v100) = v136;
  __chkstk_darwin(v35);
  v38 = sub_100047110(&qword_1008291E8);
  v105 = v38;
  v39 = sub_100233BBC();
  v40 = sub_100038CA0();
  v104 = v40;
  v103 = sub_100028384(&qword_1008291F8, &qword_1008291E8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v97 = v103;
  v98 = &protocol witness table for Text;
  v96 = v40;
  ((void (*)(__int128 *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t (*)@<X0>(uint64_t@<X8>), unint64_t *, uint64_t (*)@<X0>(uint64_t@<X8>), _QWORD, ValueMetadata *, void *, uint64_t, void *, unint64_t))View.confirmationDialog<A, B, C>(_:isPresented:titleVisibility:actions:message:))(&v137, v36, v37, v100, 1, sub_100233BB4, &v96, sub_1002330AC, 0, &type metadata for MirrorExtraControlsButton, &type metadata for String, v38, &type metadata for Text, v39);
  swift_release(v37);
  swift_release(v36);
  swift_bridgeObjectRelease(*((_QWORD *)&v137 + 1));
  v41 = *((_QWORD *)&v122 + 1);
  v42 = v124;
  v43 = v125;
  v44 = v126;
  swift_release(v129);
  swift_release(v44);
  swift_release(v43);
  swift_bridgeObjectRelease(v42);
  v45 = swift_bridgeObjectRelease(v41);
  v46 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100691E50, v45);
  static Locale.current.getter(v46);
  v101 = (uint64_t *)String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, 0, v12, 0, 0, 256);
  v100 = v47;
  v49 = static Color.red.getter(v48);
  v50 = Color.init(rgbHex:)(5248274);
  v137 = *(_OWORD *)(a1 + 64);
  v122 = *(_OWORD *)(a1 + 64);
  v51 = v102;
  State.wrappedValue.getter(&v134, v102);
  LOBYTE(v38) = v134;
  v52 = (_OWORD *)swift_allocObject(&unk_1007902E0, 96, 7);
  v53 = *(_OWORD *)(a1 + 48);
  v52[3] = *(_OWORD *)(a1 + 32);
  v52[4] = v53;
  v52[5] = *(_OWORD *)(a1 + 64);
  v54 = *(_OWORD *)(a1 + 16);
  v52[1] = *(_OWORD *)a1;
  v52[2] = v54;
  v122 = v137;
  sub_100233B50(a1);
  State.wrappedValue.getter(&v134, v51);
  LOBYTE(v44) = v134;
  KeyPath = swift_getKeyPath(&unk_10062F288);
  v56 = swift_allocObject(&unk_100790308, 17, 7);
  *(_BYTE *)(v56 + 16) = v44;
  *(_QWORD *)&v122 = 0x6B72616D78;
  *((_QWORD *)&v122 + 1) = 0xE500000000000000;
  v123 = v101;
  v124 = v100;
  v125 = v49;
  v126 = v50;
  v127 = v38;
  v128 = sub_100233C04;
  v129 = v52;
  v130 = KeyPath;
  v131 = sub_1000F7088;
  v132 = v56;
  v58 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100691E70, v57);
  static Locale.current.getter(v58);
  *(_QWORD *)&v133 = String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, 0, v12, 0, 0, 256);
  *((_QWORD *)&v133 + 1) = v59;
  v121 = *(_OWORD *)(a1 + 48);
  v60 = State.projectedValue.getter(&v134);
  v61 = v134;
  v62 = v135;
  v63 = v136;
  __chkstk_darwin(v60);
  v64 = sub_100047110(&qword_100829200);
  v65 = sub_100233C70();
  v98 = (void *)v103;
  v96 = v65;
  v97 = v104;
  v66 = v117;
  ((void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t@<X8>), unint64_t *, uint64_t, void *, uint64_t))View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:))(&v133, v61, v62, v63, 1, sub_100233C68, &v96, v64, &type metadata for String, v105);
  swift_release(v62);
  swift_release(v61);
  swift_bridgeObjectRelease(*((_QWORD *)&v133 + 1));
  v67 = *((_QWORD *)&v122 + 1);
  v68 = v124;
  v69 = v125;
  v70 = v126;
  v71 = v129;
  v72 = v130;
  swift_release(v132);
  swift_release(v72);
  swift_release(v71);
  swift_release(v70);
  swift_release(v69);
  swift_bridgeObjectRelease(v68);
  v73 = swift_bridgeObjectRelease(v67);
  v74 = *(void (**)(char *, char *, uint64_t, __n128))(v116 + 16);
  v75 = v118;
  v76 = v112;
  v74(v118, v120, v112, v73);
  v77 = v110;
  v78 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
  v79 = v113;
  v78(v119, v66, v113);
  v80 = v111;
  *v111 = 1801678700;
  v80[1] = 0xE400000000000000;
  v81 = v115;
  v80[2] = v109;
  v80[3] = v81;
  v82 = v106;
  v80[4] = v114;
  v80[5] = v82;
  *((_BYTE *)v80 + 48) = 0;
  v83 = v107;
  v80[7] = v108;
  v80[8] = v83;
  v84 = sub_100047110(&qword_100829210);
  ((void (*)(char *, char *, uint64_t))v74)((char *)v80 + *(int *)(v84 + 48), v75, v76);
  v85 = (char *)v80 + *(int *)(v84 + 64);
  v86 = v119;
  v87 = v79;
  v78(v85, v119, v79);
  v88 = *(void (**)(char *, uint64_t))(v77 + 8);
  swift_bridgeObjectRetain_n(0xE400000000000000, 2);
  v89 = v115;
  swift_bridgeObjectRetain_n(v115, 2);
  v90 = v114;
  swift_retain_n(v114, 2);
  v91 = v82;
  swift_retain_n(v82, 2);
  swift_retain_n(v83, 2);
  v92 = v87;
  v88(v117, v87);
  v93 = *(void (**)(char *, uint64_t))(v116 + 8);
  v93(v120, v76);
  swift_release(v83);
  swift_release(v91);
  swift_release(v90);
  swift_bridgeObjectRelease(v89);
  v94 = swift_bridgeObjectRelease(0xE400000000000000);
  ((void (*)(char *, uint64_t, __n128))v88)(v86, v92, v94);
  v93(v118, v76);
  swift_release(v83);
  swift_release(v91);
  swift_release(v90);
  swift_bridgeObjectRelease(v89);
  *(_QWORD *)&result = swift_bridgeObjectRelease(0xE400000000000000).n128_u64[0];
  return result;
}

uint64_t sub_100232BC8@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, uint64_t);
  _OWORD *v28;
  __int128 v29;
  __int128 v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t, double);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a2;
  v3 = sub_100047110(&qword_100829218);
  __chkstk_darwin(v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0, v7);
  __chkstk_darwin(v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100820FE0);
  v44 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v45 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v43 = (char *)&v43 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v43 - v18;
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v43 - v22;
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x8000000100691EF0, v21);
  static Locale.current.getter(v24);
  v47 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, 0, v9, 0, 0, 256);
  v48 = v25;
  static ButtonRole.destructive.getter();
  v26 = type metadata accessor for ButtonRole(0);
  v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v27(v5, 0, 1, v26);
  v28 = (_OWORD *)swift_allocObject(&unk_1007903A8, 96, 7);
  v29 = a1[3];
  v28[3] = a1[2];
  v28[4] = v29;
  v28[5] = a1[4];
  v30 = a1[1];
  v28[1] = *a1;
  v28[2] = v30;
  sub_100233B50((uint64_t)a1);
  sub_100038CA0();
  v31.n128_f64[0] = Button<>.init<A>(_:role:action:)(&v47, v5, sub_100233D98, v28);
  v32 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x8000000100691F10, v31);
  static Locale.current.getter(v32);
  v47 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, 0, v9, 0, 0, 256);
  v48 = v33;
  static ButtonRole.cancel.getter();
  v27(v5, 0, 1, v26);
  v34 = Button<>.init<A>(_:role:action:)(&v47, v5, ASFriendListDisplayMode.id.getter, 0);
  v35 = v43;
  v36 = v44;
  v37 = *(void (**)(char *, char *, uint64_t, double))(v44 + 16);
  v37(v43, v23, v13, v34);
  v38 = v45;
  ((void (*)(char *, char *, uint64_t))v37)(v45, v19, v13);
  v39 = v46;
  ((void (*)(uint64_t, char *, uint64_t))v37)(v46, v35, v13);
  v40 = sub_100047110(&qword_100829220);
  ((void (*)(uint64_t, char *, uint64_t))v37)(v39 + *(int *)(v40 + 48), v38, v13);
  v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  v41(v19, v13);
  v41(v23, v13);
  v41(v38, v13);
  return ((uint64_t (*)(char *, uint64_t))v41)(v35, v13);
}

void sub_100232F60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = type metadata accessor for DataLinkCommand(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, enum case for DataLinkCommand.endMirroring(_:), v2, v4);
    v8 = swift_allocObject(&unk_100790358, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16, v7);
    v9 = v7;
    swift_retain(v8);
    dispatch thunk of DataLinkClient.send(command:acknowledged:)(v6, sub_100233DA0, v8);
    v10 = swift_release(v8);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v6, v2, v10);

    swift_release(v8);
  }
  else
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = type metadata accessor for DataLinkMonitor();
    v13 = sub_1000083D8((unint64_t *)&qword_10081F7B0, (uint64_t (*)(uint64_t))type metadata accessor for DataLinkMonitor, (uint64_t)&unk_100636D30);
    EnvironmentObject.error()(0, v11, v12, v13);
    __break(1u);
  }
}

uint64_t sub_1002330AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD v18[3];

  v2 = type metadata accessor for Locale(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v18[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0, v3);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v18[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100691ED0, v7);
  static Locale.current.getter(v10);
  v18[0] = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v5, 0, 0, 256);
  v18[1] = v11;
  v12 = sub_100038CA0();
  result = Text.init<A>(_:)(v18, &type metadata for String, v12);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v14;
  *(_BYTE *)(a1 + 16) = v15 & 1;
  *(_QWORD *)(a1 + 24) = v16;
  return result;
}

uint64_t sub_1002331B8@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, uint64_t);
  _OWORD *v28;
  __int128 v29;
  __int128 v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t, double);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a2;
  v3 = sub_100047110(&qword_100829218);
  __chkstk_darwin(v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0, v7);
  __chkstk_darwin(v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100820FE0);
  v44 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v45 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v43 = (char *)&v43 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v43 - v18;
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v43 - v22;
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x8000000100691E90, v21);
  static Locale.current.getter(v24);
  v47 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, 0, v9, 0, 0, 256);
  v48 = v25;
  static ButtonRole.destructive.getter();
  v26 = type metadata accessor for ButtonRole(0);
  v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v27(v5, 0, 1, v26);
  v28 = (_OWORD *)swift_allocObject(&unk_100790330, 96, 7);
  v29 = a1[3];
  v28[3] = a1[2];
  v28[4] = v29;
  v28[5] = a1[4];
  v30 = a1[1];
  v28[1] = *a1;
  v28[2] = v30;
  sub_100233B50((uint64_t)a1);
  sub_100038CA0();
  v31.n128_f64[0] = Button<>.init<A>(_:role:action:)(&v47, v5, sub_100233CF8, v28);
  v32 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x8000000100691EB0, v31);
  static Locale.current.getter(v32);
  v47 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, 0, v9, 0, 0, 256);
  v48 = v33;
  static ButtonRole.cancel.getter();
  v27(v5, 0, 1, v26);
  v34 = Button<>.init<A>(_:role:action:)(&v47, v5, ASFriendListDisplayMode.id.getter, 0);
  v35 = v43;
  v36 = v44;
  v37 = *(void (**)(char *, char *, uint64_t, double))(v44 + 16);
  v37(v43, v23, v13, v34);
  v38 = v45;
  ((void (*)(char *, char *, uint64_t))v37)(v45, v19, v13);
  v39 = v46;
  ((void (*)(uint64_t, char *, uint64_t))v37)(v46, v35, v13);
  v40 = sub_100047110(&qword_100829220);
  ((void (*)(uint64_t, char *, uint64_t))v37)(v39 + *(int *)(v40 + 48), v38, v13);
  v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  v41(v19, v13);
  v41(v23, v13);
  v41(v38, v13);
  return ((uint64_t (*)(char *, uint64_t))v41)(v35, v13);
}

void sub_100233550(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;

  v2 = type metadata accessor for DataLinkCommand(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_OWORD *)(a1 + 64);
  v16 = 1;
  v6 = sub_100047110(&qword_100820D80);
  State.wrappedValue.setter(&v16, v6);
  v7 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DataLinkCommand.end(_:), v2);
    v8 = swift_allocObject(&unk_100790358, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16, v7);
    v9 = swift_allocObject(&unk_100790380, 32, 7);
    *(_QWORD *)(v9 + 16) = v8;
    *(_QWORD *)(v9 + 24) = 0;
    v10 = v7;
    swift_retain(v8);
    dispatch thunk of DataLinkClient.send(command:acknowledged:)(v5, sub_100233D48, v9);
    v11 = swift_release(v9);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v11);

    swift_release(v8);
  }
  else
  {
    v12 = *(_QWORD *)(a1 + 8);
    v13 = type metadata accessor for DataLinkMonitor();
    v14 = sub_1000083D8((unint64_t *)&qword_10081F7B0, (uint64_t (*)(uint64_t))type metadata accessor for DataLinkMonitor, (uint64_t)&unk_100636D30);
    EnvironmentObject.error()(0, v12, v13, v14);
    __break(1u);
  }
}

uint64_t sub_1002336F0@<X0>(uint64_t a1@<X8>)
{
  return sub_100231E68(a1);
}

_QWORD *sub_100233730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *result;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v17 = 0;
  State.init(wrappedValue:)(&v18, &v17, &type metadata for Bool);
  v10 = v18;
  v11 = v19;
  v17 = 0;
  State.init(wrappedValue:)(&v18, &v17, &type metadata for Bool);
  v12 = v18;
  v13 = v19;
  v17 = 0;
  result = State.init(wrappedValue:)(&v18, &v17, &type metadata for Bool);
  v15 = v18;
  v16 = v19;
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_BYTE *)(a5 + 32) = v10;
  *(_QWORD *)(a5 + 40) = v11;
  *(_BYTE *)(a5 + 48) = v12;
  *(_QWORD *)(a5 + 56) = v13;
  *(_BYTE *)(a5 + 64) = v15;
  *(_QWORD *)(a5 + 72) = v16;
  return result;
}

uint64_t destroy for MirrorExtraControlsView(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + 24));
  swift_release(*(_QWORD *)(a1 + 40));
  swift_release(*(_QWORD *)(a1 + 56));
  return swift_release(*(_QWORD *)(a1 + 72));
}

uint64_t initializeWithCopy for MirrorExtraControlsView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = v3;
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  return a1;
}

uint64_t assignWithCopy for MirrorExtraControlsView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v8);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  swift_retain(v10);
  swift_release(v9);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v12;
  swift_retain(v12);
  swift_release(v11);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v14;
  swift_retain(v14);
  swift_release(v13);
  return a1;
}

__n128 initializeWithTake for MirrorExtraControlsView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for MirrorExtraControlsView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v6);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v7);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MirrorExtraControlsView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MirrorExtraControlsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MirrorExtraControlsView()
{
  return &type metadata for MirrorExtraControlsView;
}

uint64_t sub_100233AF0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B09A4, 1);
}

uint64_t sub_100233B04()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 48);
  v3 = 1;
  v1 = sub_100047110(&qword_100820D80);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t sub_100233B50(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  swift_retain(*(_QWORD *)(a1 + 72));
  v6 = v2;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t sub_100233BB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100232BC8(*(_OWORD **)(v1 + 16), a1);
}

unint64_t sub_100233BBC()
{
  unint64_t result;

  result = qword_1008291F0;
  if (!qword_1008291F0)
  {
    result = swift_getWitnessTable(&unk_10062F2DC, &type metadata for MirrorExtraControlsButton);
    atomic_store(result, (unint64_t *)&qword_1008291F0);
  }
  return result;
}

uint64_t sub_100233C04()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 64);
  v3 = 1;
  v1 = sub_100047110(&qword_100820D80);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t sub_100233C58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100233C68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002331B8(*(_OWORD **)(v1 + 16), a1);
}

unint64_t sub_100233C70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100829208;
  if (!qword_100829208)
  {
    v1 = sub_100007050(&qword_100829200);
    sub_100233BBC();
    sub_100028384(&qword_10081F7E0, &qword_10081F7E8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100829208);
  }
  return result;
}

void sub_100233CF8()
{
  uint64_t v0;

  sub_100233550(v0 + 16);
}

uint64_t sub_100233D00()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100233D24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100233D48(int a1, uint64_t a2)
{
  uint64_t v2;

  sub_100359FEC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_100233D54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 96, 7);
}

void sub_100233D98()
{
  uint64_t v0;

  sub_100232F60(v0 + 16);
}

uint64_t sub_100233DA0(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100359DB0(a1, a2, v2);
}

uint64_t destroy for MirrorExtraControlsButton(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  return swift_release(a1[8]);
}

uint64_t initializeWithCopy for MirrorExtraControlsButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t assignWithCopy for MirrorExtraControlsButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  swift_retain(v10);
  swift_release(v11);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v13 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v12;
  swift_retain(v12);
  swift_release(v14);
  return a1;
}

uint64_t assignWithTake for MirrorExtraControlsButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v7);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v8);
  return a1;
}

ValueMetadata *type metadata accessor for MirrorExtraControlsButton()
{
  return &type metadata for MirrorExtraControlsButton;
}

uint64_t sub_100233FAC()
{
  return sub_1000F4518(&qword_100829228, &qword_1008291C8, (void (*)(void))sub_100233FD8);
}

uint64_t sub_100233FD8()
{
  return sub_1000F4518(&qword_100829230, &qword_1008291C0, (void (*)(void))sub_100233FF4);
}

unint64_t sub_100233FF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100829238;
  if (!qword_100829238)
  {
    v1 = sub_100007050(&qword_1008291B8);
    sub_100028384(&qword_100829240, &qword_1008291B0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100829238);
  }
  return result;
}

uint64_t sub_100234078(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B09CC, 1);
}

uint64_t sub_100234088()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1002340CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 72))();
}

uint64_t sub_1002340EC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100231438(*(uint64_t **)(v1 + 16), a1);
}

_QWORD *sub_1002340F4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = a1[8];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t sub_100234158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002341A4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100007050(a2);
    a3();
    sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100234228()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008292B0;
  if (!qword_1008292B0)
  {
    v1 = sub_100007050(&qword_1008292B8);
    sub_100028384(&qword_1008292C0, &qword_1008292C8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008292B0);
  }
  return result;
}

unint64_t sub_1002342CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1008292D8;
  if (!qword_1008292D8)
  {
    v1 = sub_100007050(&qword_100829280);
    v2[0] = sub_100007050(&qword_10081EE68);
    v2[1] = type metadata accessor for CircularProgressViewStyle(255);
    v2[2] = sub_100028384((unint64_t *)&qword_10081EE60, &qword_10081EE68, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    v2[3] = sub_1000083D8(&qword_1008292D0, (uint64_t (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle, (uint64_t)&protocol conformance descriptor for CircularProgressViewStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.progressViewStyle<A>(_:)>>, 1);
    sub_100028384(&qword_1008292E0, &qword_10081F2F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008292D8);
  }
  return result;
}

uint64_t sub_1002343D4()
{
  return sub_1002341A4(&qword_1008292F0, &qword_100829268, (void (*)(void))sub_100234400);
}

unint64_t sub_100234400()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008292F8;
  if (!qword_1008292F8)
  {
    v1 = sub_100007050(&qword_100829250);
    sub_100028384(&qword_100829300, &qword_100829248, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1008292F8);
  }
  return result;
}

char *sub_100234484(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  char *v15;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  char *v27;
  id v28;
  Class isa;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id v34;
  char *result;
  char *v36;
  uint64_t v37;
  char *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t ObjCClassFromMetadata;
  NSString v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  NSString v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  char *v73;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  _QWORD aBlock[5];
  uint64_t v82;
  objc_super v83;

  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_dataSource] = 0;
  sub_100149D00(a1, (uint64_t)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackViewModel]);
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fitnessAppContext] = a4;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fiuiFormattingManager] = a3;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_historyDataProvider] = a2;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_healthStore] = a5;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_model] = a6;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_badgeImageFactory] = a7;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_friendListManager] = a8;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_achievementLocalizationProvider] = a9;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_pauseRingsCoordinator] = a10;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_achievementResourceProvider] = a11;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_awardsDataProvider] = a12;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackFormattingManager] = a13;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_workoutFormattingManager] = a14;
  *(_QWORD *)&v15[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_mindfulnessSessionFormattingManager] = a15;
  v83.receiver = v15;
  v83.super_class = (Class)type metadata accessor for StackDetailViewController(0);
  v70 = a4;
  v22 = a3;
  v73 = a2;
  v23 = a5;
  v69 = a6;
  v68 = a7;
  v76 = a8;
  v71 = a9;
  v24 = a10;
  v72 = a11;
  v77 = a12;
  v78 = a13;
  v79 = a14;
  v80 = a15;
  v25 = objc_msgSendSuper2(&v83, "initWithNibName:bundle:", 0, 0);
  v26 = (void *)objc_opt_self(CHListAndDetailViewDateFormatter);
  v27 = (char *)v25;
  v28 = objc_msgSend(v26, "detailViewDateFormatter");
  type metadata accessor for FitnessPlusStackViewModel(0);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v30 = objc_msgSend(v28, "stringFromDate:", isa);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v32 = v31;

  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(v27, "setTitle:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

  v34 = objc_msgSend(v27, "navigationItem");
  objc_msgSend(v34, "setLargeTitleDisplayMode:", 2);

  result = (char *)objc_msgSend(v27, "tableView");
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  v36 = result;
  v67 = v24;
  objc_msgSend(result, "setSeparatorStyle:", 0);

  v37 = swift_allocObject(&unk_1007904D8, 24, 7);
  swift_unknownObjectWeakInit(v37 + 16, v27);
  result = (char *)objc_msgSend(v27, "tableView");
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v38 = result;
  v39 = objc_allocWithZone((Class)UITableViewDiffableDataSource);
  aBlock[4] = sub_100236B08;
  v82 = v37;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002C4250;
  aBlock[3] = &unk_1007904F0;
  v40 = _Block_copy(aBlock);
  v41 = objc_msgSend(v39, "initWithTableView:cellProvider:", v38, v40, swift_retain(v37).n128_f64[0]);

  _Block_release(v40);
  swift_release(v82);
  v42 = *(void **)&v27[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_dataSource];
  *(_QWORD *)&v27[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_dataSource] = v41;

  result = (char *)objc_msgSend(v27, "tableView");
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v43 = result;
  v44 = type metadata accessor for StackDetailHeaderCell(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v44);
  v46 = String._bridgeToObjectiveC()();
  objc_msgSend(v43, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v46);

  result = (char *)objc_msgSend(v27, "tableView");
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v47 = result;
  v48 = type metadata accessor for StackDetailSideBySideItemsCell();
  v49 = swift_getObjCClassFromMetadata(v48);
  v50 = String._bridgeToObjectiveC()();
  objc_msgSend(v47, "registerClass:forCellReuseIdentifier:", v49, v50);

  result = (char *)objc_msgSend(v27, "tableView");
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v51 = result;
  v52 = type metadata accessor for WorkoutsListTableViewCell();
  v53 = swift_getObjCClassFromMetadata(v52);
  v54 = String._bridgeToObjectiveC()();
  objc_msgSend(v51, "registerClass:forCellReuseIdentifier:", v53, v54);

  result = (char *)objc_msgSend(v27, "tableView");
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  v55 = result;
  v56 = type metadata accessor for MindfulnessSessionListTableViewCell();
  v57 = swift_getObjCClassFromMetadata(v56);
  v58 = String._bridgeToObjectiveC()();
  objc_msgSend(v55, "registerClass:forCellReuseIdentifier:", v57, v58);

  sub_100234D74();
  v59 = swift_allocObject(&unk_1007904D8, 24, 7);
  swift_unknownObjectWeakInit(v59 + 16, v27);
  v60 = swift_allocObject(&unk_100790528, 32, 7);
  *(_QWORD *)(v60 + 16) = sub_100236B10;
  *(_QWORD *)(v60 + 24) = v59;
  v61 = &v73[OBJC_IVAR___CHHistoryDataProvider_onChangeHandlers];
  swift_beginAccess(&v73[OBJC_IVAR___CHHistoryDataProvider_onChangeHandlers], aBlock, 33, 0);
  v62 = *(_QWORD **)v61;
  swift_retain_n(v59, 2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v62);
  *(_QWORD *)v61 = v62;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v62 = sub_10004C908(0, v62[2] + 1, 1, v62);
    *(_QWORD *)v61 = v62;
  }
  v65 = v62[2];
  v64 = v62[3];
  if (v65 >= v64 >> 1)
  {
    v62 = sub_10004C908((_QWORD *)(v64 > 1), v65 + 1, 1, v62);
    *(_QWORD *)v61 = v62;
  }
  v62[2] = v65 + 1;
  v66 = &v62[2 * v65];
  v66[4] = sub_10003BD74;
  v66[5] = v60;
  swift_endAccess(aBlock);
  swift_release(v37);

  swift_release(v59);
  sub_100149D44(a1);
  swift_release(v59);
  return v27;
}

void sub_100234C08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100234D74();

  }
  swift_beginAccess(v2, &v8, 0, 0);
  v5 = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "tableView");

    if (v7)
    {
      objc_msgSend(v7, "reloadData");

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100234D74()
{
  uint64_t v0;
  uint64_t ObjectType;
  os_log_type_t v2;
  void *v3;
  os_log_type_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  ObjectType = swift_getObjectType(v0);
  v2 = static os_log_type_t.default.getter(ObjectType);
  v3 = (void *)HKLogActivity;
  v4 = v2;
  if (os_log_type_enabled(HKLogActivity, v2))
  {
    v5 = v3;
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v16 = v7;
    *(_DWORD *)v6 = 136315394;
    v8 = _typeName(_:qualified:)(ObjectType, 0);
    v10 = v9;
    v15 = sub_10003E8EC(v8, v9, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v6 + 4);
    swift_bridgeObjectRelease(v10);
    *(_WORD *)(v6 + 12) = 2080;
    v15 = sub_10003E8EC(0xD000000000000012, 0x800000010068A130, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v6 + 14);
    _os_log_impl((void *)&_mh_execute_header, v5, v4, "%s::%s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  sub_100234F38();
  v12 = v11;
  v13 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_dataSource);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v14, "applySnapshot:animatingDifferences:", v12, 1);

  }
}

void sub_100234F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  __int128 *v9;
  _UNKNOWN **v10;
  Swift::String v11;
  void *object;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  void *v18;
  __n128 v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  Class isa;
  double v28;
  id v29;
  _UNKNOWN **v30;
  _QWORD *v31;
  Class v32;
  uint64_t v33;
  os_log_type_t v34;
  void *v35;
  os_log_type_t v36;
  id v37;
  uint64_t v38;
  _QWORD *v39;
  _UNKNOWN **v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t ObjectType;
  id v49;
  uint64_t v50;
  unint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 *v54;
  os_log_t v55;
  _UNKNOWN **v56;
  unint64_t v57;
  unint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _UNKNOWN **v62;
  _QWORD v63[6];

  ObjectType = swift_getObjectType(v0);
  v1 = type metadata accessor for UUID(0);
  v55 = *(os_log_t *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = objc_msgSend(objc_allocWithZone((Class)NSDiffableDataSourceSnapshot), "init");
  v4 = v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackViewModel;
  v5 = *(_QWORD *)(v4 + *(int *)(type metadata accessor for FitnessPlusStackViewModel(0) + 20));
  v6 = *(_QWORD *)(v5 + 16);
  v52 = v5 + 32;
  v51 = &v58;
  v50 = (uint64_t)&v59 + 8;
  v54 = (__int128 *)v63;
  v53 = v5;
  swift_bridgeObjectRetain(v5);
  v7 = 0;
  v8 = _swiftEmptyArrayStorage;
  if (v6)
    goto LABEL_3;
LABEL_2:
  v60 = 0u;
  v61 = 0u;
  v7 = v6;
  v59 = 0u;
  while (1)
  {
    sub_100236E4C((uint64_t)&v59, (uint64_t)&v62);
    if (!v63[3])
      break;
    v10 = v62;
    sub_10002411C(v54, (uint64_t)&v59);
    v57 = 0;
    v58 = 0xE000000000000000;
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease(v58);
    v57 = 0xD000000000000012;
    v58 = 0x800000010068A0F0;
    v56 = v10;
    v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v11._object;
    String.append(_:)(v11);
    swift_bridgeObjectRelease(object);
    v13._countAndFlagsBits = 45;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    v15 = *((_QWORD *)&v60 + 1);
    v14 = v61;
    sub_100016804(&v59, *((uint64_t *)&v60 + 1));
    (*(void (**)(uint64_t, uint64_t))(v14 + 48))(v15, v14);
    v16 = sub_1000083D8((unint64_t *)&qword_100821498, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v1, v16);
    v18 = v17._object;
    String.append(_:)(v17);
    v19 = swift_bridgeObjectRelease(v18);
    ((void (*)(char *, uint64_t, __n128))v55[1].isa)(v3, v1, v19);
    v20 = v57;
    v21 = v58;
    if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
      v8 = sub_10013F75C(0, v8[2] + 1, 1, v8);
    v23 = v8[2];
    v22 = v8[3];
    if (v23 >= v22 >> 1)
      v8 = sub_10013F75C((_QWORD *)(v22 > 1), v23 + 1, 1, v8);
    v8[2] = v23 + 1;
    v24 = &v8[2 * v23];
    v24[4] = v20;
    v24[5] = v21;
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v59);
    if (v7 == v6)
      goto LABEL_2;
LABEL_3:
    if (v7 >= *(_QWORD *)(v53 + 16))
    {
      __break(1u);
      return;
    }
    v9 = (__int128 *)v51;
    sub_1000252E0(v52 + 40 * v7, (uint64_t)v51);
    *(_QWORD *)&v59 = v7;
    sub_10002411C(v9, v50);
    ++v7;
  }
  swift_bridgeObjectRelease(v53);
  v25 = sub_100047110(&qword_10082CEC0);
  v26 = swift_allocObject(v25, 64, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100622F90;
  *(_QWORD *)(v26 + 56) = &type metadata for String;
  *(_QWORD *)(v26 + 32) = 0xD000000000000011;
  *(_QWORD *)(v26 + 40) = 0x80000001006920E0;
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v28 = swift_bridgeObjectRelease(v26).n128_u64[0];
  v29 = v49;
  objc_msgSend(v49, "appendSectionsWithIdentifiers:", isa, v28);

  v62 = &off_10077EE38;
  sub_10013C294((uint64_t)v8);
  v30 = v62;
  v31 = sub_10013D7A4((uint64_t)v62);
  swift_bridgeObjectRelease(v30);
  v32 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v29, "appendItemsWithIdentifiers:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

  v34 = static os_log_type_t.default.getter(v33);
  v35 = (void *)HKLogActivity;
  v36 = v34;
  if (os_log_type_enabled(HKLogActivity, v34))
  {
    v37 = v29;
    v55 = v35;
    v38 = swift_slowAlloc(32, -1);
    v39 = (_QWORD *)swift_slowAlloc(8, -1);
    v40 = (_UNKNOWN **)swift_slowAlloc(64, -1);
    v62 = v40;
    *(_DWORD *)v38 = 136315650;
    v41 = _typeName(_:qualified:)(ObjectType, 0);
    v43 = v42;
    *(_QWORD *)&v59 = sub_10003E8EC(v41, v42, (uint64_t *)&v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, (char *)&v59 + 8, v38 + 4);
    swift_bridgeObjectRelease(v43);
    *(_WORD *)(v38 + 12) = 2080;
    *(_QWORD *)&v59 = sub_10003E8EC(0x70616E53656B616DLL, 0xEE002928746F6873, (uint64_t *)&v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, (char *)&v59 + 8, v38 + 14);
    *(_WORD *)(v38 + 22) = 2112;
    *(_QWORD *)&v59 = v37;
    v44 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, (char *)&v59 + 8, v38 + 24);
    *v39 = v37;

    v45 = v55;
    _os_log_impl((void *)&_mh_execute_header, v55, v36, "%s::%s snapshot %@", (uint8_t *)v38, 0x20u);
    v46 = sub_100047110(&qword_10081E648);
    swift_arrayDestroy(v39, 1, v46);
    swift_slowDealloc(v39, -1, -1);
    swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v38, -1, -1);

  }
}

_QWORD *sub_10023553C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  Class isa;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  Class v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  _BYTE v27[24];
  __int128 v28[4];

  v7 = type metadata accessor for FitnessPlusStackViewModel(0);
  __chkstk_darwin(v7);
  v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a4 += 16;
  swift_beginAccess(a4, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v11 = (char *)Strong;
    v12 = IndexPath.row.getter(Strong);
    if (v12)
    {
      if (IndexPath.row.getter(v12) != 1)
      {
        v16 = sub_1002359E0(a2);
        goto LABEL_11;
      }
      v13 = (uint64_t)&v11[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackViewModel];
      sub_100149D00((uint64_t)&v11[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackViewModel], (uint64_t)v9);
      sub_100236B3C((uint64_t)v28);
      sub_100149D44((uint64_t)v9);
      v14 = String._bridgeToObjectiveC()();
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v16 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v14, isa);

      v17 = type metadata accessor for StackDetailSideBySideItemsCell();
      if (swift_dynamicCastClass(v16, v17))
      {
        sub_100149D00(v13, (uint64_t)v9);
        v18 = *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackFormattingManager];
        v16 = v16;
        sub_100263ED8((uint64_t)v9, v18, v28);

LABEL_9:
        sub_100149D44((uint64_t)v9);
      }
    }
    else
    {
      v19 = String._bridgeToObjectiveC()();
      v20 = IndexPath._bridgeToObjectiveC()().super.isa;
      v16 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v19, v20);

      v21 = type metadata accessor for StackDetailHeaderCell(0);
      if (swift_dynamicCastClass(v16, v21))
      {
        sub_100149D00((uint64_t)&v11[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackViewModel], (uint64_t)v9);
        v22 = *(void **)&v11[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fitnessAppContext];
        v23 = swift_allocObject(&unk_100790550, 24, 7);
        *(_QWORD *)(v23 + 16) = a1;
        v16 = v16;
        v24 = a1;
        sub_10028C634((uint64_t)v9, v22, (uint64_t)sub_100236E0C, v23);

        swift_release(v23);
        goto LABEL_9;
      }
    }
LABEL_11:

    return v16;
  }
  return 0;
}

uint64_t sub_1002357D4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_100790578, 24, 7);
  *(_QWORD *)(v11 + 16) = a1;
  aBlock[4] = sub_100236E14;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_100790590;
  v12 = _Block_copy(aBlock);
  v13 = v23;
  v14 = a1;
  swift_release(v13);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_100047110(&qword_100828C80);
  v18 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

_QWORD *sub_1002359E0(uint64_t a1)
{
  char *v1;
  void *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *result;
  void *v16;
  NSString v17;
  Class isa;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  unint64_t v32;
  void *v33;
  void *v34;
  NSString v35;
  Class v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  char *v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _OWORD v62[16];
  _QWORD v63[5];
  _OWORD v64[16];

  v3 = v1;
  v5 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v3[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackViewModel];
  v9 = *(_QWORD **)&v8[*(int *)(type metadata accessor for FitnessPlusStackViewModel(0) + 20)];
  swift_bridgeObjectRetain(v9);
  v11 = IndexPath.row.getter(v10);
  v12 = v11 - 2;
  if (__OFSUB__(v11, 2))
  {
    __break(1u);
    goto LABEL_23;
  }
  if ((v12 & 0x8000000000000000) != 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v12 >= v9[2])
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1000252E0((uint64_t)&v9[5 * v12 + 4], (uint64_t)v63);
  swift_bridgeObjectRelease(v9);
  sub_1000252E0((uint64_t)v63, (uint64_t)v64);
  v13 = sub_100047110((uint64_t *)&unk_10082E5B0);
  v14 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  if (swift_dynamicCast(v62, v64, v13, v14, 6))
  {
    v61 = v7;

    result = objc_msgSend(v3, "tableView");
    if (result)
    {
      v16 = result;
      v17 = String._bridgeToObjectiveC()();
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v19 = objc_msgSend(v16, "dequeueReusableCellWithIdentifier:forIndexPath:", v17, isa);

      sub_1000252E0((uint64_t)v63, (uint64_t)v64);
      v9 = v19;
      if ((swift_dynamicCast(v62, v64, v13, v14, 6) & 1) != 0)
      {
        v20 = *(void **)&v62[0];
        v21 = type metadata accessor for WorkoutsListTableViewCell();
        if (swift_dynamicCastClass(v9, v21))
        {
          v22 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fitnessAppContext];
          v23 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_workoutFormattingManager];
          v24 = v9;
          sub_100110A00(v20, v22, v23, 0, 1, 0, 0);

        }
        v25 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_workoutFormattingManager];
        v26 = v20;
        sub_1001641A8(v26, v25, v64);
        *(_QWORD *)&v62[0] = _swiftEmptyArrayStorage;
        sub_100112010(v64);
        v27 = sub_1000083D8((unint64_t *)&qword_10081F608, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
        v28 = sub_100047110((uint64_t *)&unk_10083D740);
        v29 = sub_1000283C4((unint64_t *)&qword_10081F610, (uint64_t *)&unk_10083D740);
        v30 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)(v62, v28, v29, v5, v27);
        v62[12] = v64[12];
        v62[13] = v64[13];
        v62[14] = v64[14];
        v62[15] = v64[15];
        v62[8] = v64[8];
        v62[9] = v64[9];
        v62[10] = v64[10];
        v62[11] = v64[11];
        v62[4] = v64[4];
        v62[5] = v64[5];
        v62[6] = v64[6];
        v62[7] = v64[7];
        v62[0] = v64[0];
        v62[1] = v64[1];
        v62[2] = v64[2];
        v62[3] = v64[3];
        v31 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
        v32 = sub_100112214();
        v33 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v62, v30, &type metadata for WorkoutEntity, v32);
        UIView.annotate(with:)();

        sub_100112258(v64);
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_32;
  }
  result = objc_msgSend(v3, "tableView");
  if (result)
  {
    v34 = result;
    v35 = String._bridgeToObjectiveC()();
    v36 = IndexPath._bridgeToObjectiveC()().super.isa;
    v37 = objc_msgSend(v34, "dequeueReusableCellWithIdentifier:forIndexPath:", v35, v36);

    sub_1000252E0((uint64_t)v63, (uint64_t)v64);
    v38 = type metadata accessor for MindfulnessSessionViewModel(0);
    v9 = v37;
    if ((swift_dynamicCast(v62, v64, v13, v38, 6) & 1) == 0)
    {
LABEL_20:

      goto LABEL_21;
    }
    v2 = *(void **)&v62[0];
    v39 = type metadata accessor for MindfulnessSessionListTableViewCell();
    v40 = swift_dynamicCastClass(v9, v39);
    if (v40)
    {
      v41 = v40;
      v42 = *(char **)&v3[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fitnessAppContext];
      v43 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_mindfulnessSessionFormattingManager];
      v44 = swift_allocObject(&unk_1007905C8, 24, 7);
      swift_unknownObjectWeakInit(v44 + 16, v41);
      v45 = v7;
      v46 = v9;
      swift_retain(v44);
      sub_1004474CC(v2, v42, v43, (uint64_t)sub_10012F3BC, v44);

      v7 = v45;
      v40 = swift_release_n(v44, 2);
    }
    a1 = MindfulnessSessionViewModel.mindfulnessSessions.getter(v40);
    if (!((unint64_t)a1 >> 62))
    {
      result = *(_QWORD **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (result)
        goto LABEL_16;
      goto LABEL_29;
    }
LABEL_25:
    if (a1 < 0)
      v59 = a1;
    else
      v59 = a1 & 0xFFFFFFFFFFFFFF8;
    result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v59);
    if (result)
    {
LABEL_16:
      if ((a1 & 0xC000000000000001) != 0)
      {
        v47 = v7;
        v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
      }
      else
      {
        if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
        v47 = v7;
        v48 = *(id *)(a1 + 32);
      }
      v49 = v48;
      swift_bridgeObjectRelease(a1);
      v50 = v49;
      v51 = (void *)sub_10021F998(v50);
      *(_QWORD *)&v64[0] = _swiftEmptyArrayStorage;
      v52 = sub_1000083D8((unint64_t *)&qword_10081F608, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
      v53 = v51;
      v54 = sub_100047110((uint64_t *)&unk_10083D740);
      v55 = sub_1000283C4((unint64_t *)&qword_10081F610, (uint64_t *)&unk_10083D740);
      dispatch thunk of SetAlgebra.init<A>(_:)(v64, v54, v55, v5, v52);
      *(_QWORD *)&v64[0] = v53;
      v56 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
      v57 = sub_10021F580();
      v58 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v64, v47, &type metadata for MindfulnessSessionEntity, v57);
      UIView.annotate(with:)();

LABEL_21:
      objc_msgSend(v9, "setSelectionStyle:", 0);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v63);
      return v9;
    }
LABEL_29:

    swift_bridgeObjectRelease(a1);
    goto LABEL_21;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1002360B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  uint64_t result;
  id v18;
  _BYTE v19[40];
  _QWORD v20[6];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_stackViewModel;
  v3 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for FitnessPlusStackViewModel(0) + 20));
  swift_bridgeObjectRetain(v3);
  v5 = IndexPath.row.getter(v4);
  v6 = v5 - 2;
  if (__OFSUB__(v5, 2))
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v6 >= *(_QWORD *)(v3 + 16))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000042, 0x8000000100692040, "FitnessApp/StackDetailViewController.swift", 42, 2, 212, 0);
    goto LABEL_18;
  }
  sub_1000252E0(v3 + 40 * v6 + 32, (uint64_t)v20);
  swift_bridgeObjectRelease(v3);
  sub_1000252E0((uint64_t)v20, (uint64_t)v19);
  v7 = sub_100047110((uint64_t *)&unk_10082E5B0);
  v8 = type metadata accessor for MindfulnessSessionViewModel(0);
  if (swift_dynamicCast(&v18, v19, v7, v8, 6))
  {

    sub_1000252E0((uint64_t)v20, (uint64_t)v19);
    if (swift_dynamicCast(&v18, v19, v7, v8, 6))
    {
      v9 = v18;
      v10 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fitnessAppContext);
      v11 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_mindfulnessSessionFormattingManager);
      objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionDetailViewController(0));
      v12 = sub_1002C26F0(v9, v10, v11);
    }
    else
    {
      v12 = (char *)objc_msgSend(objc_allocWithZone((Class)UIViewController), "initWithNibName:bundle:", 0, 0);
    }
    v16 = v12;
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v20);
    return (uint64_t)v16;
  }
  sub_1000252E0((uint64_t)v20, (uint64_t)v19);
  v13 = sub_10001E724(0, (unint64_t *)&qword_100828390, HKWorkout_ptr);
  if (!swift_dynamicCast(&v18, v19, v7, v13, 6))
    goto LABEL_16;
  v14 = v18;
  v15 = (char *)objc_msgSend(objc_allocWithZone((Class)CHWorkoutDetailViewController), "initWithWorkout:workoutActivity:healthStore:model:fitnessAppContext:workoutFormattingManager:workoutDataProvider:badgeImageFactory:friendListManager:achievementLocalizationProvider:pauseRingsCoordinator:achievementResourceProvider:formattingManager:awardsDataProvider:", v18, 0, *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_healthStore), *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_model), *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fitnessAppContext), *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_workoutFormattingManager), *(_QWORD *)(*(_QWORD *)(v1+ OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_historyDataProvider)+ OBJC_IVAR___CHHistoryDataProvider_workoutDataProvider), *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_badgeImageFactory), *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_friendListManager), *(_QWORD *)(v1+ OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_achievementLocalizationProvider), *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_pauseRingsCoordinator), *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_achievementResourceProvider),
                  *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_fiuiFormattingManager),
                  *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp25StackDetailViewController_awardsDataProvider));
  if (v15)
  {
    v16 = v15;
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v20);

    return (uint64_t)v16;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000047, 0x8000000100692090, "FitnessApp/StackDetailViewController.swift", 42, 2, 229, 0);
LABEL_18:
  __break(1u);
  return result;
}

void sub_1002365EC(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Class isa;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectRowAtIndexPath:animated:", isa, 1);

  v12 = IndexPath.row.getter(v11);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  if (v12)
  {
    v14 = IndexPath.row.getter(v13);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v14 != 1)
    {
      v15 = objc_msgSend(v3, "navigationController");
      if (v15)
      {
        v16 = v15;
        v17 = (void *)sub_1002360B4();
        objc_msgSend(v16, "pushViewController:animated:", v17, 1);

      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

id sub_1002368B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StackDetailViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100236A04()
{
  return type metadata accessor for StackDetailViewController(0);
}

uint64_t type metadata accessor for StackDetailViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1008293B0;
  if (!qword_1008293B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StackDetailViewController);
  return result;
}

uint64_t sub_100236A48(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[16];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for FitnessPlusStackViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[13] = *(_QWORD *)(result - 8) + 64;
    v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[15] = "\b";
    return swift_updateClassMetadata2(a1, 256, 16, v4, a1 + 80);
  }
  return result;
}

uint64_t sub_100236AE4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

_QWORD *sub_100236B08(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10023553C(a1, a2, a3, v3);
}

void sub_100236B10(uint64_t a1)
{
  uint64_t v1;

  sub_100234C08(a1, v1);
}

uint64_t sub_100236B18()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100236B3C(uint64_t a1@<X8>)
{
  uint64_t v2;
  _QWORD *inited;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  char v26;
  _BYTE v27[48];

  v2 = sub_100047110(&qword_100822068);
  inited = (_QWORD *)swift_initStackObject(v2, v27);
  *((_OWORD *)inited + 1) = xmmword_100622F90;
  *((double *)inited + 4) = sub_1002F52D8();
  *((_BYTE *)inited + 40) = 0;
  if (sub_1002F5394() > 0.0)
  {
    v4 = sub_1002F5394();
    inited = sub_100140A40((_QWORD *)1, 2, 1, inited);
    inited[2] = 2;
    *((double *)inited + 6) = v4;
    *((_BYTE *)inited + 56) = 1;
  }
  sub_1002F5500();
  if (v5 > 0.0)
  {
    sub_1002F5500();
    v7 = v6;
    v9 = inited[2];
    v8 = inited[3];
    if (v9 >= v8 >> 1)
      inited = sub_100140A40((_QWORD *)(v8 > 1), v9 + 1, 1, inited);
    inited[2] = v9 + 1;
    v10 = &inited[2 * v9];
    v10[4] = v7;
    *((_BYTE *)v10 + 40) = 2;
  }
  sub_1002F56A0();
  if (v11 > 0.0)
  {
    sub_1002F56A0();
    v13 = v12;
    v15 = inited[2];
    v14 = inited[3];
    v16 = v15 + 1;
    if (v15 >= v14 >> 1)
      inited = sub_100140A40((_QWORD *)(v14 > 1), v15 + 1, 1, inited);
    inited[2] = v16;
    v17 = &inited[2 * v15];
    v17[4] = v13;
    *((_BYTE *)v17 + 40) = 3;
LABEL_11:
    switch(v16)
    {
      case 0uLL:
        __break(1u);
        return;
      case 1uLL:
        v18 = inited[4];
        v19 = *((unsigned __int8 *)inited + 40);
        swift_bridgeObjectRelease(inited);
        v20 = 0;
        v21 = 0;
        v22 = 0;
        v23 = 0;
        v24 = 0;
        v25 = 0;
        goto LABEL_17;
      case 2uLL:
        v19 = *((unsigned __int8 *)inited + 40);
        v18 = inited[4];
        v20 = inited[6];
        v21 = *((unsigned __int8 *)inited + 56);
        swift_bridgeObjectRelease(inited);
        v22 = 0;
        v23 = 0;
        v24 = 0;
        v25 = 64;
        goto LABEL_17;
      case 3uLL:
        v18 = inited[4];
        v19 = *((unsigned __int8 *)inited + 40);
        v21 = *((unsigned __int8 *)inited + 56);
        v20 = inited[6];
        v22 = inited[8];
        v23 = *((unsigned __int8 *)inited + 72);
        swift_bridgeObjectRelease(inited);
        v24 = 0;
        v25 = 0x80;
        goto LABEL_17;
      default:
        goto LABEL_14;
    }
  }
  v16 = inited[2];
  if (v16 <= 3)
    goto LABEL_11;
LABEL_14:
  v18 = inited[4];
  v19 = *((unsigned __int8 *)inited + 40);
  v20 = inited[6];
  v21 = *((unsigned __int8 *)inited + 56);
  v23 = *((unsigned __int8 *)inited + 72);
  v22 = inited[8];
  v24 = inited[10];
  v26 = *((_BYTE *)inited + 88);
  swift_bridgeObjectRelease(inited);
  v25 = v26 | 0xC0;
LABEL_17:
  *(_QWORD *)a1 = v18;
  *(_QWORD *)(a1 + 8) = v19;
  *(_QWORD *)(a1 + 16) = v20;
  *(_QWORD *)(a1 + 24) = v21;
  *(_QWORD *)(a1 + 32) = v22;
  *(_QWORD *)(a1 + 40) = v23;
  *(_QWORD *)(a1 + 48) = v24;
  *(_BYTE *)(a1 + 56) = v25;
}

uint64_t sub_100236DE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100236E0C()
{
  uint64_t v0;

  return sub_1002357D4(*(void **)(v0 + 16));
}

id sub_100236E14()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "beginUpdates");
  return objc_msgSend(v1, "endUpdates");
}

uint64_t sub_100236E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_1008293C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100236EA8()
{
  unint64_t result;

  result = qword_1008293C8;
  if (!qword_1008293C8)
  {
    result = swift_getWitnessTable(&unk_10062F4BC, &type metadata for OpenActivityRingIntent);
    atomic_store(result, (unint64_t *)&qword_1008293C8);
  }
  return result;
}

unint64_t sub_100236EF0()
{
  unint64_t result;

  result = qword_1008293D0;
  if (!qword_1008293D0)
  {
    result = swift_getWitnessTable(&unk_10062F4E4, &type metadata for OpenActivityRingIntent);
    atomic_store(result, (unint64_t *)&qword_1008293D0);
  }
  return result;
}

uint64_t sub_100236F34(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B0DE8, 1);
}

uint64_t sub_100236F44(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B0DC0, 1);
}

uint64_t sub_100236F54(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A280, 0xD00000000000001ALL, 0x8000000100692820);
}

uint64_t sub_100236F78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  _QWORD v22[2];

  v22[1] = a1;
  v1 = sub_100047110(&qword_100829930);
  __chkstk_darwin(v1);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100829938);
  __chkstk_darwin(v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100829918);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v22 - v12;
  v14 = sub_10024A7A0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1, &type metadata for OpenActivityRingIntent, v14);
  v15._object = (void *)0x8000000100692800;
  v15._countAndFlagsBits = 0xD000000000000018;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(L" \"");
  v17 = sub_100047110(&qword_100829940);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for OpenActivityRingIntent, v14);
  IntentParameterSummary.init(_:table:)(v3, 0, 0, &type metadata for OpenActivityRingIntent, v14);
  v19 = sub_100028384(&qword_100829920, &qword_100829918, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v10, &type metadata for OpenActivityRingIntent, v7, v19);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v10, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for OpenActivityRingIntent, v7, v19);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v7);
}

uint64_t sub_1002371B0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v0 = sub_100047110(&qword_100829930);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_100829918);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  v10 = sub_10024A7A0();
  ParameterSummaryString.init(stringLiteral:)(0xD000000000000013, 0x80000001006927E0, &type metadata for OpenActivityRingIntent, v10);
  IntentParameterSummary.init(_:table:_:)(v2, 0, 0, sub_10023734C, 0, &type metadata for OpenActivityRingIntent, v10);
  v11 = sub_100028384(&qword_100829920, &qword_100829918, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v6, &type metadata for OpenActivityRingIntent, v3, v11);
  v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v6, v3);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v9, &type metadata for OpenActivityRingIntent, v3, v11);
  return ((uint64_t (*)(char *, uint64_t))v12)(v9, v3);
}

uint64_t sub_10023734C()
{
  uint64_t KeyPath;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;

  KeyPath = swift_getKeyPath(L" \"");
  v1 = sub_10024A7A0();
  v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(KeyPath, v1);
  swift_release(KeyPath);
  v3 = sub_100047110((uint64_t *)&unk_100828340);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100623630;
  *(_QWORD *)(v4 + 32) = v2;
  v8 = v4;
  specialized Array._endMutation()(v4);
  v5 = swift_retain(v2);
  v6 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)(v8, &type metadata for OpenActivityRingIntent, v1, v5);
  swift_bridgeObjectRelease(v8);
  swift_release(v2);
  return v6;
}

uint64_t sub_100237410(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_100047110(&qword_10081E640);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110((uint64_t *)&unk_100828370);
  v2[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v2[9] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[10] = v8;
  v2[11] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002374E0, 0, 0);
}

uint64_t sub_1002374E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  Swift::String v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (qword_10081DEF8 != -1)
    swift_once(&qword_10081DEF8, sub_1004D5394);
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD **)(v0 + 64);
  v4 = (void *)qword_10086AD20;
  IntentParameter.wrappedValue.getter(v3);
  v5 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  v6 = *(_QWORD *)(v0 + 88);
  if (v5 == 1)
  {
    v7 = *(_QWORD *)(v0 + 64);
    Date.init()(v6);
    sub_10001BE90(v7, (uint64_t *)&unk_100828370);
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 32))(v6, *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  }
  v9 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 48);
  v13 = *(_QWORD *)(v0 + 32);
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  v15 = objc_msgSend(v4, "stringFromDate:", isa);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(0xE000000000000000);
  v19._countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v18);
  URL.init(string:)(0xD000000000000016, 0x80000001006927C0);
  v20 = swift_bridgeObjectRelease(0x80000001006927C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v12 + 48))(v13, 1, v11, v20) == 1)
  {
    v21 = sub_10001BE90(*(_QWORD *)(v0 + 32), &qword_10081E640);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 32))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
    if (qword_10081DDA8 != -1)
      swift_once(&qword_10081DDA8, sub_10044A45C);
    v23 = *(_QWORD *)(v0 + 48);
    v22 = *(_QWORD *)(v0 + 56);
    v24 = *(_QWORD *)(v0 + 40);
    sub_10044AD80(v22);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  }
  v25 = *(_QWORD *)(v0 + 88);
  v27 = *(_QWORD *)(v0 + 56);
  v26 = *(_QWORD *)(v0 + 64);
  v28 = *(_QWORD *)(v0 + 32);
  static IntentResult.result<>()(v21);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100237750@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081D868, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A280, (uint64_t)sub_100236F54, a1);
}

uint64_t sub_100237774(uint64_t a1, uint64_t a2)
{
  uint64_t HasValueComparisonOperator;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  HasValueComparisonOperator = type metadata accessor for HasValueComparisonOperator(0);
  v4 = *(_QWORD *)(HasValueComparisonOperator - 8);
  __chkstk_darwin(HasValueComparisonOperator);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(L" \"");
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for HasValueComparisonOperator.hasAnyValue(_:), HasValueComparisonOperator);
  v8 = sub_100047110(&qword_100829918);
  v9 = sub_100028384(&qword_100829920, &qword_100829918, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  v10 = sub_100028384(&qword_100829928, &qword_100829678, (uint64_t)&protocol conformance descriptor for IntentParameter<A>);
  return ParameterSummaryWhenCondition.init<A>(_:_:_:otherwise:)(KeyPath, v6, sub_100236F78, 0, sub_1002371B0, 0, v8, v8, a2, v9, v9, v10);
}

uint64_t sub_100237898(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_100829914);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000EA380;
  return sub_100237410(a1, v4);
}

uint64_t sub_1002378F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10024699C();
  *a1 = result;
  return result;
}

uint64_t sub_100237914(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10024A7A0();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_100237940()
{
  unint64_t result;

  result = qword_1008293E0;
  if (!qword_1008293E0)
  {
    result = swift_getWitnessTable(&unk_10062F590, &type metadata for PauseRingsIntent);
    atomic_store(result, (unint64_t *)&qword_1008293E0);
  }
  return result;
}

unint64_t sub_100237988()
{
  unint64_t result;

  result = qword_1008293E8;
  if (!qword_1008293E8)
  {
    result = swift_getWitnessTable(&unk_10062F5B8, &type metadata for PauseRingsIntent);
    atomic_store(result, (unint64_t *)&qword_1008293E8);
  }
  return result;
}

uint64_t sub_1002379CC(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1006B0D98, 1) + 8);
}

uint64_t sub_1002379F0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B0D70, 1);
}

uint64_t sub_100237A00(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A298, 0xD00000000000001DLL, 0x80000001006927A0);
}

uint64_t sub_100237A24()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_100047110(&qword_1008298F8);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_100829900);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10024A868();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for PauseRingsIntent, v6);
  v7._object = (void *)0x8000000100692780;
  v7._countAndFlagsBits = 0xD000000000000015;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(L"@\"");
  v9 = sub_100047110(&qword_100829908);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0x7379616420;
  v10._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for PauseRingsIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for PauseRingsIntent, v6);
}

uint64_t sub_100237B94()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100237BB4()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_100237BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  v5 = type metadata accessor for IntentDialog(0);
  v4[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[10] = v6;
  v4[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date.FormatStyle.TimeStyle(0);
  v4[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[13] = v8;
  v4[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date.FormatStyle.DateStyle(0);
  v4[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[16] = v10;
  v4[17] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  v4[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Calendar(0);
  v4[19] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[20] = v13;
  v4[21] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Calendar.Component(0);
  v4[22] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v4[23] = v15;
  v4[24] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Date(0);
  v4[25] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v4[26] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[27] = swift_task_alloc(v18);
  v4[28] = swift_task_alloc(v18);
  v19 = type metadata accessor for MainActor(0);
  v4[29] = v19;
  v4[30] = static MainActor.shared.getter(v19);
  v20 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  v4[31] = v20;
  v4[32] = v21;
  return swift_task_switch(sub_100237DAC, v20, v21);
}

uint64_t sub_100237DAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v2 = *(_QWORD *)(v1 + 216);
  v18 = *(_QWORD *)(v1 + 224);
  v19 = *(_QWORD *)(v1 + 208);
  v3 = *(_QWORD *)(v1 + 192);
  v20 = *(_QWORD *)(v1 + 200);
  v5 = *(_QWORD *)(v1 + 176);
  v4 = *(_QWORD *)(v1 + 184);
  v6 = *(_QWORD *)(v1 + 160);
  v7 = *(_QWORD *)(v1 + 168);
  v17 = *(_QWORD *)(v1 + 152);
  v8 = *(_QWORD *)(v1 + 64);
  v21 = *(_OWORD *)(v1 + 48);
  Date.init()(a1);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, enum case for Calendar.Component.day(_:), v5);
  v9 = IntentParameter.wrappedValue.getter((_QWORD *)(v1 + 16));
  v10 = *(_QWORD *)(v1 + 16);
  static Calendar.current.getter(v9);
  Date.byAdding(component:value:calendar:)(v3, v10, v7);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v17);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);
  *(_QWORD *)(v1 + 264) = v11;
  v12 = v11(v2, v20);
  v13 = static MainActor.shared.getter(v12);
  *(_QWORD *)(v1 + 272) = v13;
  v14 = swift_task_alloc(48);
  *(_QWORD *)(v1 + 280) = v14;
  *(_OWORD *)(v14 + 16) = v21;
  *(_QWORD *)(v14 + 32) = v8;
  *(_QWORD *)(v14 + 40) = v18;
  v15 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 288) = v15;
  *v15 = v1;
  v15[1] = sub_100237F6C;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 296, v13, &protocol witness table for MainActor, 0x286D726F66726570, 0xE900000000000029, sub_10024A8AC, v14, &type metadata for Bool);
}

uint64_t sub_100237F6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 280);
  v3 = *(_QWORD *)(*v0 + 272);
  swift_task_dealloc(*(_QWORD *)(*v0 + 288));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100238000, *(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 256));
}

id sub_100238000()
{
  uint64_t v0;
  int v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id result;
  void *v11;
  unsigned __int8 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t (*v27)(void);
  unint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  swift_release(*(_QWORD *)(v0 + 240));
  v1 = *(unsigned __int8 *)(v0 + 296);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 24));
  v2 = *(void **)(v0 + 24);
  *(_QWORD *)(v0 + 32) = 0;
  v3 = objc_msgSend(v2, "activityMoveModeWithError:", v0 + 32);

  v4 = *(void **)(v0 + 32);
  if (!v3)
  {
    v8 = v4;
    _convertNSErrorToError(_:)(v4);

    swift_willThrow(v9);
LABEL_18:
    v32 = *(_QWORD *)(v0 + 216);
    v31 = *(_QWORD *)(v0 + 224);
    v33 = *(_QWORD *)(v0 + 192);
    v34 = *(_QWORD *)(v0 + 168);
    v36 = *(_QWORD *)(v0 + 136);
    v35 = *(_QWORD *)(v0 + 144);
    v37 = *(_QWORD *)(v0 + 112);
    v38 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD))(v0 + 264))(v31, *(_QWORD *)(v0 + 200));
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    v27 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v27();
  }
  v5 = v4;
  if (objc_msgSend(v3, "activityMoveMode") == (id)2)
  {
    if ((v1 & 1) != 0)
    {
      v39 = (void *)0x80000001006926C0;
      v6 = 0xD000000000000017;
      v7 = 24;
LABEL_16:
      v46 = *(void (**)(uint64_t, uint64_t))(v0 + 264);
      v47 = *(_QWORD *)(v0 + 216);
      v48 = *(_QWORD *)(v0 + 192);
      v49 = *(_QWORD *)(v0 + 168);
      v14 = *(_QWORD *)(v0 + 136);
      v15 = *(_QWORD *)(v0 + 144);
      v40 = *(_QWORD *)(v0 + 128);
      v16 = *(_QWORD *)(v0 + 112);
      v41 = *(_QWORD *)(v0 + 120);
      v42 = *(_QWORD *)(v0 + 224);
      v18 = *(_QWORD *)(v0 + 96);
      v17 = *(_QWORD *)(v0 + 104);
      v19 = *(_QWORD *)(v0 + 88);
      v44 = *(_QWORD *)(v0 + 72);
      v45 = *(_QWORD *)(v0 + 200);
      v43 = *(_QWORD *)(v0 + 80);
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(v7, 1);
      v20._countAndFlagsBits = v6;
      v20._object = v39;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
      v21 = static Date.FormatStyle.DateStyle.complete.getter();
      static Date.FormatStyle.TimeStyle.omitted.getter(v21);
      v22 = Date.formatted(date:time:)(v14, v16);
      v24 = v23;
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v14, v41);
      v25._countAndFlagsBits = v22;
      v25._object = v24;
      String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v25);
      swift_bridgeObjectRelease(v24);
      v26._countAndFlagsBits = 46;
      v26._object = (void *)0xE100000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
      IntentDialog.init(stringInterpolation:)(v15);
      static IntentResult.result<>(dialog:)(v19);

      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v19, v44);
      v46(v42, v45);
      swift_task_dealloc(v42);
      swift_task_dealloc(v47);
      swift_task_dealloc(v48);
      swift_task_dealloc(v49);
      swift_task_dealloc(v15);
      swift_task_dealloc(v14);
      swift_task_dealloc(v16);
      swift_task_dealloc(v19);
      v27 = *(uint64_t (**)(void))(v0 + 8);
      return (id)v27();
    }
LABEL_17:
    v28 = sub_10024A2C4();
    v29 = swift_allocError(&type metadata for ActivityRingError, v28, 0, 0);
    *v30 = 2;
    swift_willThrow(v29);

    goto LABEL_18;
  }
  result = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (result)
  {
    v11 = result;
    v12 = objc_msgSend(result, "isStandalonePhoneFitnessMode");

    if (v1)
    {
      v13 = 0x80000001006926C0;
      if ((v12 & 1) != 0)
        v7 = 24;
      else
        v7 = 29;
      if ((v12 & 1) == 0)
        v13 = 0x80000001006926A0;
      v39 = (void *)v13;
      if ((v12 & 1) != 0)
        v6 = 0xD000000000000017;
      else
        v6 = 0xD00000000000001CLL;
      goto LABEL_16;
    }
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void sub_1002383C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  Class isa;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[5];
  uint64_t v12;

  v2 = sub_100047110(&qword_100829730);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  AppDependency.wrappedValue.getter(aBlock);
  v5 = (void *)aBlock[0];
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v7 = *(unsigned __int8 *)(v3 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_100790D78, v8 + v4, v7 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v9 + v8, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_10024A314;
  v12 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000064EC;
  aBlock[3] = &unk_100790D90;
  v10 = _Block_copy(aBlock);
  objc_msgSend(v5, "pauseRingsUntilDate:completionHandler:", isa, v10, swift_release(v12).n128_f64[0]);
  _Block_release(v10);

}

uint64_t sub_10023851C@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081D870, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A298, (uint64_t)sub_100237A00, a1);
}

uint64_t sub_100238540@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = sub_10003CE9C(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

uint64_t sub_1002385B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_1008298F4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000DA0E4;
  return sub_100237BE4(a1, v4, v5, v6);
}

uint64_t sub_100238620@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_100246BCC();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_100238648(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10024A868();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100238670(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A2B0, 0xD000000000000010, 0x8000000100692700);
}

uint64_t sub_100238694()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1002386B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  unint64_t v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;

  v42 = a1;
  v1 = sub_100047110(&qword_100829880);
  v2 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  v41 = v2;
  __chkstk_darwin(v1);
  v38 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v39 = (char *)&v32 - v5;
  v6 = sub_100047110(&qword_100829888);
  v36 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - v10;
  __chkstk_darwin(v12);
  v37 = (char *)&v32 - v13;
  v44 = 1;
  v14 = sub_100047110(&qword_100829890);
  v15 = sub_10024A754();
  v34 = v15;
  v16 = sub_100239530();
  v33 = v16;
  v17 = sub_100028384(&qword_100829898, &qword_100829890, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  v32 = v17;
  ParameterSummaryCaseCondition.init(_:_:)(&v44, sub_100238A2C, 0, &type metadata for PauseYourRingsIntent, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum, v14, v15, v16, v17);
  v18 = sub_100028384(&qword_1008298A0, &qword_100829888, (uint64_t)&protocol conformance descriptor for ParameterSummaryCaseCondition<A, B, C>);
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v11, &type metadata for PauseYourRingsIntent, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum, v6, v18);
  v19 = *(void (**)(char *, uint64_t))(v36 + 8);
  v19(v11, v6);
  v43 = 4;
  v35 = v14;
  v21 = v33;
  v20 = v34;
  ParameterSummaryCaseCondition.init(_:_:)(&v43, sub_100238A60, 0, &type metadata for PauseYourRingsIntent, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum, v14, v34, v33, v17);
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v8, &type metadata for PauseYourRingsIntent, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum, v6, v18);
  v19(v8, v6);
  v22 = v38;
  v23 = v21;
  v24 = v32;
  ParameterSummaryDefaultCaseCondition.init(_:)(sub_100238D18, 0, &type metadata for PauseYourRingsIntent, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum, v14, v20, v21, v32);
  v25 = sub_100028384(&qword_1008298A8, &qword_100829880, (uint64_t)&protocol conformance descriptor for ParameterSummaryDefaultCaseCondition<A, B, C>);
  v27 = v39;
  v26 = v40;
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v22, &type metadata for PauseYourRingsIntent, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum, v40, v25);
  v28 = *(void (**)(char *, uint64_t))(v41 + 8);
  v28(v22, v26);
  v31 = v24;
  v29 = v37;
  static ParameterSummaryCaseBuilder.buildBlock<A, B, C>(_:_:_:)(v37, v11, v27, &type metadata for PauseYourRingsIntent, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum, v6, v6, v35, v23, v18, v18, v31);
  v28(v27, v26);
  v19(v11, v6);
  return ((uint64_t (*)(char *, uint64_t))v19)(v29, v6);
}

uint64_t sub_100238A2C@<X0>(uint64_t a1@<X8>)
{
}

uint64_t sub_100238A40()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100238A60@<X0>(uint64_t a1@<X8>)
{
  return sub_100238A74((uint64_t)&unk_1006304B0, &qword_1008298C8, a1);
}

uint64_t sub_100238A74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  Swift::String v17;
  uint64_t KeyPath;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a2;
  v30 = a3;
  v4 = sub_100047110(&qword_1008298B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_1008298B8);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100829890);
  v29 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v27 - v14;
  v16 = sub_10024A754();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 2, &type metadata for PauseYourRingsIntent, v16);
  v17._object = (void *)0x80000001006926E0;
  v17._countAndFlagsBits = 0xD000000000000011;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v17);
  KeyPath = swift_getKeyPath(&unk_100630488);
  v19 = sub_100047110(&qword_1008298C0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v19);
  swift_release(KeyPath);
  v20._countAndFlagsBits = 32;
  v20._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(a1);
  v22 = sub_100047110(v28);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v21, v7, v22);
  swift_release(v21);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v23);
  ParameterSummaryString.init(stringInterpolation:)(v9, &type metadata for PauseYourRingsIntent, v16);
  IntentParameterSummary.init(_:table:)(v6, 0, 0, &type metadata for PauseYourRingsIntent, v16);
  v24 = sub_100028384(&qword_100829898, &qword_100829890, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v12, &type metadata for PauseYourRingsIntent, v10, v24);
  v25 = *(void (**)(char *, uint64_t))(v29 + 8);
  v25(v12, v10);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v15, &type metadata for PauseYourRingsIntent, v10, v24);
  return ((uint64_t (*)(char *, uint64_t))v25)(v15, v10);
}

uint64_t sub_100238CF8()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100238D18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  _QWORD v22[2];

  v22[1] = a1;
  v1 = sub_100047110(&qword_1008298B0);
  __chkstk_darwin(v1);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_1008298B8);
  __chkstk_darwin(v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100829890);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v22 - v12;
  v14 = sub_10024A754();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1, &type metadata for PauseYourRingsIntent, v14);
  v15._object = (void *)0x80000001006926E0;
  v15._countAndFlagsBits = 0xD000000000000011;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_100630488);
  v17 = sub_100047110(&qword_1008298C0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for PauseYourRingsIntent, v14);
  IntentParameterSummary.init(_:table:)(v3, 0, 0, &type metadata for PauseYourRingsIntent, v14);
  v19 = sub_100028384(&qword_100829898, &qword_100829890, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v10, &type metadata for PauseYourRingsIntent, v7, v19);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v10, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for PauseYourRingsIntent, v7, v19);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v7);
}

uint64_t sub_100238F50(uint64_t a1)
{
  return sub_10023F26C(a1, qword_10086A2C8, 0x646F69726550, 0xE600000000000000);
}

uint64_t sub_100238F6C()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_100238F9C()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

_QWORD *sub_100238FD0@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

void sub_100238FF0(char *a1)
{
  sub_1003904EC(*a1);
}

unint64_t sub_100239000()
{
  unint64_t result;

  result = qword_1008293F8;
  if (!qword_1008293F8)
  {
    result = swift_getWitnessTable(&unk_10062F5D4, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum);
    atomic_store(result, (unint64_t *)&qword_1008293F8);
  }
  return result;
}

void sub_100239044()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_100239090()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x61446D6F74737563, 0xEA00000000007379);
  swift_bridgeObjectRelease(0xEA00000000007379);
  return Hasher._finalize()();
}

void sub_100239130()
{
  __asm { BR              X10 }
}

uint64_t sub_10023916C(uint64_t a1)
{
  String.hash(into:)(a1, 0x61446D6F74737563, 0xEA00000000007379);
  return swift_bridgeObjectRelease(0xEA00000000007379);
}

void sub_1002391F8(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_100239240()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x61446D6F74737563, 0xEA00000000007379);
  swift_bridgeObjectRelease(0xEA00000000007379);
  return Hasher._finalize()();
}

unint64_t sub_1002392E0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100247294(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10023930C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10023933C + 4 * byte_10062F3FF[*v0]))();
}

void sub_10023933C(_QWORD *a1@<X8>)
{
  *a1 = 0x61446D6F74737563;
  a1[1] = 0xEA00000000007379;
}

void sub_100239360(_QWORD *a1@<X8>)
{
  *a1 = 0x656557664F646E65;
  a1[1] = 0xE90000000000006BLL;
}

void sub_100239380(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F4D664F646E65;
  a1[1] = 0xEA00000000006874;
}

void sub_1002393A0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "specificDate");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

unint64_t sub_1002393C8()
{
  unint64_t result;

  result = qword_100829400;
  if (!qword_100829400)
  {
    result = swift_getWitnessTable(&unk_10062F6B4, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum);
    atomic_store(result, (unint64_t *)&qword_100829400);
  }
  return result;
}

unint64_t sub_100239410()
{
  unint64_t result;

  result = qword_100829408;
  if (!qword_100829408)
  {
    result = swift_getWitnessTable(&unk_10062F6EC, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum);
    atomic_store(result, (unint64_t *)&qword_100829408);
  }
  return result;
}

unint64_t sub_100239458()
{
  unint64_t result;

  result = qword_100829410;
  if (!qword_100829410)
  {
    result = swift_getWitnessTable(&unk_10062F63C, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum);
    atomic_store(result, (unint64_t *)&qword_100829410);
  }
  return result;
}

unint64_t sub_1002394A0()
{
  unint64_t result;

  result = qword_100829418;
  if (!qword_100829418)
  {
    result = swift_getWitnessTable(&unk_10062F71C, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum);
    atomic_store(result, (unint64_t *)&qword_100829418);
  }
  return result;
}

unint64_t sub_1002394E8()
{
  unint64_t result;

  result = qword_100829420;
  if (!qword_100829420)
  {
    result = swift_getWitnessTable(&unk_10062F744, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum);
    atomic_store(result, (unint64_t *)&qword_100829420);
  }
  return result;
}

unint64_t sub_100239530()
{
  unint64_t result;

  result = qword_100829428;
  if (!qword_100829428)
  {
    result = swift_getWitnessTable(&unk_10062F76C, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum);
    atomic_store(result, (unint64_t *)&qword_100829428);
  }
  return result;
}

unint64_t sub_100239578()
{
  unint64_t result;

  result = qword_100829430;
  if (!qword_100829430)
  {
    result = swift_getWitnessTable(&unk_10062F7C4, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum);
    atomic_store(result, (unint64_t *)&qword_100829430);
  }
  return result;
}

uint64_t sub_1002395BC@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081D880, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10086A2C8, (uint64_t)sub_100238F50, a1);
}

uint64_t sub_1002395E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10023F804(a1, a2, a3, (uint64_t (*)(void))sub_1002395F4, (uint64_t)&opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>);
}

unint64_t sub_1002395F4()
{
  unint64_t result;

  result = qword_100829438;
  if (!qword_100829438)
  {
    result = swift_getWitnessTable(&unk_10062F674, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum);
    atomic_store(result, (unint64_t *)&qword_100829438);
  }
  return result;
}

uint64_t sub_100239638(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002395F4();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100239674()
{
  unint64_t result;

  result = qword_100829440;
  if (!qword_100829440)
  {
    result = swift_getWitnessTable(&unk_10062F804, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum);
    atomic_store(result, (unint64_t *)&qword_100829440);
  }
  return result;
}

unint64_t sub_1002396BC()
{
  unint64_t result;

  result = qword_100829448;
  if (!qword_100829448)
  {
    result = swift_getWitnessTable(&unk_10062F82C, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum);
    atomic_store(result, (unint64_t *)&qword_100829448);
  }
  return result;
}

unint64_t sub_100239704()
{
  unint64_t result;

  result = qword_100829450;
  if (!qword_100829450)
  {
    result = swift_getWitnessTable(&unk_10062F5FC, &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum);
    atomic_store(result, (unint64_t *)&qword_100829450);
  }
  return result;
}

uint64_t sub_10023974C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100239578();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100239784()
{
  return sub_100028384(&qword_100829458, &qword_100829460, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_1002397B0(_QWORD *a1@<X8>)
{
  *a1 = &off_100781EE8;
}

unint64_t sub_1002397C4()
{
  unint64_t result;

  result = qword_100829468;
  if (!qword_100829468)
  {
    result = swift_getWitnessTable(&unk_10062F8F4, &type metadata for PauseYourRingsIntent);
    atomic_store(result, (unint64_t *)&qword_100829468);
  }
  return result;
}

unint64_t sub_10023980C()
{
  unint64_t result;

  result = qword_100829470;
  if (!qword_100829470)
  {
    result = swift_getWitnessTable(&unk_10062F91C, &type metadata for PauseYourRingsIntent);
    atomic_store(result, (unint64_t *)&qword_100829470);
  }
  return result;
}

uint64_t sub_100239850(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1006B0D38, 1) + 8);
}

uint64_t sub_100239874(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B0D10, 1);
}

uint64_t sub_100239884(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2[8] = a1;
  v2[9] = v1;
  v3 = type metadata accessor for IntentDialog(0);
  v2[10] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[11] = v4;
  v2[12] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date.FormatStyle.TimeStyle(0);
  v2[13] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date.FormatStyle.DateStyle(0);
  v2[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[17] = v8;
  v2[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TimeZone(0);
  v2[20] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[21] = v11;
  v2[22] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PauseRingsPeriod(0);
  v2[23] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[24] = v13;
  v2[25] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100047110(&qword_1008201C8);
  v2[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Calendar(0);
  v2[27] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v2[28] = v16;
  v2[29] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Calendar.Component(0);
  v2[30] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[31] = v18;
  v2[32] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Date(0);
  v2[33] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v2[34] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[35] = swift_task_alloc(v21);
  v2[36] = swift_task_alloc(v21);
  v2[37] = swift_task_alloc(v21);
  v2[38] = swift_task_alloc(v21);
  v2[39] = swift_task_alloc(v21);
  v2[40] = swift_task_alloc(v21);
  v2[41] = swift_task_alloc(v21);
  v2[42] = swift_task_alloc(v21);
  v2[43] = swift_task_alloc(v21);
  v22 = (*(_QWORD *)(*(_QWORD *)(sub_100047110((uint64_t *)&unk_100828370) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[44] = swift_task_alloc(v22);
  v2[45] = swift_task_alloc(v22);
  v2[46] = swift_task_alloc(v22);
  v2[47] = swift_task_alloc(v22);
  v23 = type metadata accessor for MainActor(0);
  v2[48] = v23;
  v2[49] = static MainActor.shared.getter(v23);
  v24 = dispatch thunk of Actor.unownedExecutor.getter(v23, &protocol witness table for MainActor);
  v2[50] = v24;
  v2[51] = v25;
  return swift_task_switch(sub_100239B5C, v24, v25);
}

void sub_100239B5C()
{
  uint64_t v0;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 26));
  __asm { BR              X10 }
}

uint64_t sub_100239BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for PauseRingsPeriod.endOfDay(_:), v3);
  ((void (*)(uint64_t))PauseRingsPeriod.date())(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = *(_QWORD *)(v0 + 352);
  v6 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 272);
  sub_100031D7C(*(_QWORD *)(v0 + 376), v5);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  v9 = *(_QWORD *)(v0 + 352);
  if (v8 == 1)
  {
    v10 = *(_QWORD *)(v0 + 376);
    swift_release(*(_QWORD *)(v0 + 392));
    sub_10001BE90(v9, (uint64_t *)&unk_100828370);
    v11 = sub_10024A2C4();
    v12 = swift_allocError(&type metadata for ActivityRingError, v11, 0, 0);
    *v13 = 1;
    swift_willThrow(v12);
    sub_10001BE90(v10, (uint64_t *)&unk_100828370);
    v20 = *(_QWORD *)(v0 + 368);
    v22 = *(_QWORD *)(v0 + 352);
    v21 = *(_QWORD *)(v0 + 360);
    v24 = *(_QWORD *)(v0 + 336);
    v23 = *(_QWORD *)(v0 + 344);
    v26 = *(_QWORD *)(v0 + 320);
    v25 = *(_QWORD *)(v0 + 328);
    v28 = *(_QWORD *)(v0 + 304);
    v27 = *(_QWORD *)(v0 + 312);
    v30 = *(_QWORD *)(v0 + 296);
    v31 = *(_QWORD *)(v0 + 288);
    v32 = *(_QWORD *)(v0 + 280);
    v33 = *(_QWORD *)(v0 + 256);
    v34 = *(_QWORD *)(v0 + 232);
    v35 = *(_QWORD *)(v0 + 208);
    v36 = *(_QWORD *)(v0 + 200);
    v37 = *(_QWORD *)(v0 + 176);
    v38 = *(_QWORD *)(v0 + 152);
    v39 = *(_QWORD *)(v0 + 144);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 280);
    v15 = *(_QWORD *)(v0 + 72);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 32))(v14, *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 264));
    v16 = sub_10024699C();
    *(_QWORD *)(v0 + 416) = v16;
    v17 = static MainActor.shared.getter(v16);
    *(_QWORD *)(v0 + 424) = v17;
    v18 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 432) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v14;
    v19 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 440) = v19;
    *v19 = v0;
    v19[1] = sub_10023A5A4;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 25, v17, &protocol witness table for MainActor, 0x286D726F66726570, 0xE900000000000029, sub_10024A798, v18, &type metadata for Bool);
  }
}

uint64_t sub_10023A5A4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 432);
  v3 = *(_QWORD *)(*v0 + 424);
  swift_task_dealloc(*(_QWORD *)(*v0 + 440));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10023A638, *(_QWORD *)(v1 + 400), *(_QWORD *)(v1 + 408));
}

id sub_10023A638()
{
  uint64_t v0;
  int v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id result;
  void *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  uint64_t v50;
  void *v51;
  Swift::String v52;
  Swift::String v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  swift_release(*(_QWORD *)(v0 + 392));
  v1 = *(unsigned __int8 *)(v0 + 25);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 40));
  *(_QWORD *)(v0 + 32) = 0;
  v2 = *(void **)(v0 + 40);
  v3 = objc_msgSend(v2, "activityMoveModeWithError:", v0 + 32);

  v4 = *(void **)(v0 + 32);
  if (!v3)
  {
    v6 = *(_QWORD *)(v0 + 416);
    v7 = *(_QWORD *)(v0 + 376);
    v9 = *(_QWORD *)(v0 + 272);
    v8 = *(_QWORD *)(v0 + 280);
    v10 = *(_QWORD *)(v0 + 264);
    v11 = v4;
    _convertNSErrorToError(_:)(v4);

    swift_willThrow(v12);
    swift_release(v6);
    sub_10001BE90(v7, (uint64_t *)&unk_100828370);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_11:
    v35 = *(_QWORD *)(v0 + 368);
    v37 = *(_QWORD *)(v0 + 352);
    v36 = *(_QWORD *)(v0 + 360);
    v39 = *(_QWORD *)(v0 + 336);
    v38 = *(_QWORD *)(v0 + 344);
    v41 = *(_QWORD *)(v0 + 320);
    v40 = *(_QWORD *)(v0 + 328);
    v42 = *(_QWORD *)(v0 + 304);
    v43 = *(_QWORD *)(v0 + 312);
    v64 = *(_QWORD *)(v0 + 296);
    v67 = *(_QWORD *)(v0 + 288);
    v71 = *(_QWORD *)(v0 + 280);
    v75 = *(_QWORD *)(v0 + 256);
    v77 = *(_QWORD *)(v0 + 232);
    v80 = *(_QWORD *)(v0 + 208);
    v83 = *(_QWORD *)(v0 + 200);
    v86 = *(_QWORD *)(v0 + 176);
    v89 = *(_QWORD *)(v0 + 152);
    v92 = *(_QWORD *)(v0 + 144);
    v95 = *(_QWORD *)(v0 + 120);
    v98 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v43);
    swift_task_dealloc(v42);
    swift_task_dealloc(v64);
    swift_task_dealloc(v67);
    swift_task_dealloc(v71);
    swift_task_dealloc(v75);
    swift_task_dealloc(v77);
    swift_task_dealloc(v80);
    swift_task_dealloc(v83);
    swift_task_dealloc(v86);
    swift_task_dealloc(v89);
    swift_task_dealloc(v92);
    swift_task_dealloc(v95);
    swift_task_dealloc(v98);
    v44 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v44();
  }
  v5 = v4;
  if (objc_msgSend(v3, "activityMoveMode") == (id)2)
  {
    if ((v1 & 1) == 0)
      goto LABEL_10;
    goto LABEL_9;
  }
  result = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (result)
  {
    v14 = result;
    v15 = objc_msgSend(result, "isStandalonePhoneFitnessMode");

    if (!v1)
    {
LABEL_10:
      v27 = *(_QWORD *)(v0 + 416);
      v28 = *(_QWORD *)(v0 + 376);
      v30 = *(_QWORD *)(v0 + 272);
      v29 = *(_QWORD *)(v0 + 280);
      v31 = *(_QWORD *)(v0 + 264);
      v32 = sub_10024A2C4();
      v33 = swift_allocError(&type metadata for ActivityRingError, v32, 0, 0);
      *v34 = 2;
      swift_willThrow(v33);

      swift_release(v27);
      sub_10001BE90(v28, (uint64_t *)&unk_100828370);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
      goto LABEL_11;
    }
    if (!v15)
    {
      v85 = v0 + 48;
      v88 = *(_QWORD *)(v0 + 376);
      v91 = *(_QWORD *)(v0 + 272);
      v94 = *(_QWORD *)(v0 + 264);
      v45 = *(_QWORD *)(v0 + 144);
      v16 = *(_QWORD *)(v0 + 152);
      v68 = *(_QWORD *)(v0 + 136);
      v46 = *(_QWORD *)(v0 + 120);
      v72 = *(_QWORD *)(v0 + 128);
      v74 = *(_QWORD *)(v0 + 280);
      v47 = *(_QWORD *)(v0 + 104);
      v48 = *(_QWORD *)(v0 + 112);
      v21 = *(_QWORD *)(v0 + 96);
      v79 = *(_QWORD *)(v0 + 88);
      v82 = *(_QWORD *)(v0 + 80);
      v97 = *(_QWORD *)(v0 + 416);
      *(_QWORD *)(v0 + 48) = v97;
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1);
      v49._countAndFlagsBits = 0xD00000000000001CLL;
      v49._object = (void *)0x80000001006926A0;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v49);
      v50 = static Date.FormatStyle.DateStyle.complete.getter();
      static Date.FormatStyle.TimeStyle.omitted.getter(v50);
      v24 = Date.formatted(date:time:)(v45, v46);
      v26 = v51;
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v45, v72);
      goto LABEL_13;
    }
LABEL_9:
    v85 = v0 + 56;
    v88 = *(_QWORD *)(v0 + 376);
    v91 = *(_QWORD *)(v0 + 272);
    v94 = *(_QWORD *)(v0 + 264);
    v17 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 152);
    v66 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(v0 + 120);
    v70 = *(_QWORD *)(v0 + 128);
    v74 = *(_QWORD *)(v0 + 280);
    v19 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 96);
    v79 = *(_QWORD *)(v0 + 88);
    v82 = *(_QWORD *)(v0 + 80);
    v97 = *(_QWORD *)(v0 + 416);
    *(_QWORD *)(v0 + 56) = v97;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1);
    v22._object = (void *)0x80000001006926C0;
    v22._countAndFlagsBits = 0xD000000000000017;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
    v23 = static Date.FormatStyle.DateStyle.complete.getter();
    static Date.FormatStyle.TimeStyle.omitted.getter(v23);
    v24 = Date.formatted(date:time:)(v17, v18);
    v26 = v25;
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v17, v70);
LABEL_13:
    v52._countAndFlagsBits = v24;
    v52._object = v26;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v52);
    swift_bridgeObjectRelease(v26);
    v53._countAndFlagsBits = 46;
    v53._object = (void *)0xE100000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v53);
    IntentDialog.init(stringInterpolation:)(v16);
    v54 = sub_10024A7A0();
    static IntentResult.result<A>(opensIntent:dialog:)(v85, v21, &type metadata for OpenActivityRingIntent, v54);

    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v21, v82);
    sub_10001BE90(v88, (uint64_t *)&unk_100828370);
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v74, v94);
    swift_release(v97);
    v55 = *(_QWORD *)(v0 + 368);
    v57 = *(_QWORD *)(v0 + 352);
    v56 = *(_QWORD *)(v0 + 360);
    v59 = *(_QWORD *)(v0 + 336);
    v58 = *(_QWORD *)(v0 + 344);
    v61 = *(_QWORD *)(v0 + 320);
    v60 = *(_QWORD *)(v0 + 328);
    v62 = *(_QWORD *)(v0 + 304);
    v63 = *(_QWORD *)(v0 + 312);
    v65 = *(_QWORD *)(v0 + 296);
    v69 = *(_QWORD *)(v0 + 288);
    v73 = *(_QWORD *)(v0 + 280);
    v76 = *(_QWORD *)(v0 + 256);
    v78 = *(_QWORD *)(v0 + 232);
    v81 = *(_QWORD *)(v0 + 208);
    v84 = *(_QWORD *)(v0 + 200);
    v87 = *(_QWORD *)(v0 + 176);
    v90 = *(_QWORD *)(v0 + 152);
    v93 = *(_QWORD *)(v0 + 144);
    v96 = *(_QWORD *)(v0 + 120);
    v99 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v63);
    swift_task_dealloc(v62);
    swift_task_dealloc(v65);
    swift_task_dealloc(v69);
    swift_task_dealloc(v73);
    swift_task_dealloc(v76);
    swift_task_dealloc(v78);
    swift_task_dealloc(v81);
    swift_task_dealloc(v84);
    swift_task_dealloc(v87);
    swift_task_dealloc(v90);
    swift_task_dealloc(v93);
    swift_task_dealloc(v96);
    swift_task_dealloc(v99);
    v44 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v44();
  }
  __break(1u);
  return result;
}

void sub_10023AC90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  Class isa;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[5];
  uint64_t v12;

  v2 = sub_100047110(&qword_100829730);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  AppDependency.wrappedValue.getter(aBlock);
  v5 = (void *)aBlock[0];
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v7 = *(unsigned __int8 *)(v3 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_100790D28, v8 + v4, v7 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v9 + v8, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_10024A314;
  v12 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000064EC;
  aBlock[3] = &unk_100790D40;
  v10 = _Block_copy(aBlock);
  objc_msgSend(v5, "pauseRingsUntilDate:completionHandler:", isa, v10, swift_release(v12).n128_f64[0]);
  _Block_release(v10);

}

uint64_t sub_10023ADEC@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081D878, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A2B0, (uint64_t)sub_100238670, a1);
}

uint64_t sub_10023AE10(uint64_t a1, uint64_t a2)
{
  return sub_100245F28(a1, a2, (uint64_t)&unk_100630488, &qword_100829870, &qword_100829878, (uint64_t)sub_1002386B4);
}

uint64_t sub_10023AE34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_100829864);
  *(_QWORD *)(v2 + 56) = v5;
  *v5 = v2;
  v5[1] = sub_10023AEA4;
  return sub_100239884(a1);
}

uint64_t sub_10023AEA4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

double sub_10023AEEC@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  _OWORD v4[2];
  uint64_t v5;

  sub_1002472DC((uint64_t *)v4);
  result = *(double *)v4;
  v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_10023AF2C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10024A754();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10023AF58()
{
  unint64_t result;

  result = qword_100829480;
  if (!qword_100829480)
  {
    result = swift_getWitnessTable(&unk_10062F9C8, &type metadata for ResumeRingsIntent);
    atomic_store(result, (unint64_t *)&qword_100829480);
  }
  return result;
}

unint64_t sub_10023AFA0()
{
  unint64_t result;

  result = qword_100829488;
  if (!qword_100829488)
  {
    result = swift_getWitnessTable(&unk_10062F9F0, &type metadata for ResumeRingsIntent);
    atomic_store(result, (unint64_t *)&qword_100829488);
  }
  return result;
}

uint64_t sub_10023AFE4(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1006B0CE8, 1) + 8);
}

uint64_t sub_10023B008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10023F804(a1, a2, a3, (uint64_t (*)(void))sub_10023B01C, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

unint64_t sub_10023B01C()
{
  unint64_t result;

  result = qword_100829490;
  if (!qword_100829490)
  {
    result = swift_getWitnessTable(&unk_10062F938, &type metadata for ResumeRingsIntent);
    atomic_store(result, (unint64_t *)&qword_100829490);
  }
  return result;
}

uint64_t sub_10023B060(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A2E0, 0xD000000000000011, 0x8000000100692650);
}

uint64_t sub_10023B084(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[3] = a1;
  v2[4] = a2;
  v3 = type metadata accessor for IntentDialog(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v2[8] = v5;
  v2[9] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v2[10] = v6;
  v2[11] = v7;
  return swift_task_switch(sub_10023B11C, v6, v7);
}

uint64_t sub_10023B11C()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(void **)(v0 + 16);
  v2 = objc_msgSend(v1, "isPaused");

  if (v2)
  {
    v4 = static MainActor.shared.getter(v3);
    *(_QWORD *)(v0 + 96) = v4;
    v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 104) = v5;
    *v5 = v0;
    v5[1] = sub_10023B260;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 112, v4, &protocol witness table for MainActor, 0x286D726F66726570, 0xE900000000000029, sub_10024A740, *(_QWORD *)(v0 + 32), &type metadata for Bool);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 72));
    v8 = *(_QWORD *)(v0 + 48);
    v7 = *(_QWORD *)(v0 + 56);
    v9 = *(_QWORD *)(v0 + 40);
    IntentDialog.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100692610);
    static IntentResult.result<>(dialog:)(v7);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10023B260()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));
  swift_release(v2);
  return swift_task_switch(sub_10023B2B4, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_10023B2B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE *v6;

  swift_release(*(_QWORD *)(v0 + 72));
  v1 = *(_QWORD *)(v0 + 56);
  if ((*(_BYTE *)(v0 + 112) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    IntentDialog.init(stringLiteral:)(0xD000000000000017, 0x8000000100692630);
    static IntentResult.result<>(dialog:)(v1);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  else
  {
    v4 = sub_10024A2C4();
    v5 = swift_allocError(&type metadata for ActivityRingError, v4, 0, 0);
    *v6 = 3;
    swift_willThrow(v5);
  }
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10023B394(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[5];
  uint64_t v11;

  v2 = sub_100047110(&qword_100829730);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  AppDependency.wrappedValue.getter(aBlock);
  v5 = (void *)aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v6 = *(unsigned __int8 *)(v3 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_100790CD8, v7 + v4, v6 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_10024A314;
  v11 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000064EC;
  aBlock[3] = &unk_100790CF0;
  v9 = _Block_copy(aBlock);
  objc_msgSend(v5, "unpauseRingsWithCompletionHandler:", v9, swift_release(v11).n128_f64[0]);
  _Block_release(v9);

}

uint64_t sub_10023B4D4@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081D888, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A2E0, (uint64_t)sub_10023B060, a1);
}

uint64_t sub_10023B4F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_100829854);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000EA380;
  return sub_10023B084(a1, v4);
}

uint64_t sub_10023B550@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _OWORD v5[2];
  uint64_t v6;

  sub_100047110(&qword_100829660);
  v2 = type metadata accessor for AppDependencyManager(0);
  memset(v5, 0, sizeof(v5));
  v6 = 0;
  v3 = static AppDependencyManager.shared.getter(v2);
  result = AppDependency.__allocating_init(key:manager:)(v5, v3);
  *a1 = result;
  return result;
}

uint64_t sub_10023B5BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10023B01C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10023B5E8()
{
  unint64_t result;

  result = qword_1008294A0;
  if (!qword_1008294A0)
  {
    result = swift_getWitnessTable(&unk_10062FA34, &type metadata for AdjustMoveGoalIntent);
    atomic_store(result, (unint64_t *)&qword_1008294A0);
  }
  return result;
}

unint64_t sub_10023B630()
{
  unint64_t result;

  result = qword_1008294A8;
  if (!qword_1008294A8)
  {
    result = swift_getWitnessTable(&unk_10062FAC4, &type metadata for AdjustMoveGoalIntent);
    atomic_store(result, (unint64_t *)&qword_1008294A8);
  }
  return result;
}

unint64_t sub_10023B678()
{
  unint64_t result;

  result = qword_1008294B0;
  if (!qword_1008294B0)
  {
    result = swift_getWitnessTable(&unk_10062FAEC, &type metadata for AdjustMoveGoalIntent);
    atomic_store(result, (unint64_t *)&qword_1008294B0);
  }
  return result;
}

uint64_t sub_10023B6BC(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1006B0CB4, 1) + 8);
}

uint64_t sub_10023B6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10023F804(a1, a2, a3, (uint64_t (*)(void))sub_10023B5E8, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_10023B6F4(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A2F8, 0x65766F4D20746553, 0xED00006C616F4720);
}

uint64_t sub_10023B720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  v4 = type metadata accessor for Date(0);
  v3[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[8] = v5;
  v3[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100047110((uint64_t *)&unk_100828370) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[10] = swift_task_alloc(v6);
  v3[11] = swift_task_alloc(v6);
  return swift_task_switch(sub_10023B7B8, 0, 0);
}

uint64_t sub_10023B7B8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(void **)(v0 + 16);
  v2 = objc_msgSend(objc_allocWithZone((Class)FIActivitySettingsController), "initWithHealthStore:", v1);
  *(_QWORD *)(v0 + 96) = v2;

  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 48);
    v10 = *(_OWORD *)(v0 + 32);
    objc_msgSend(v2, "populateExistingCharacteristics");
    *(_QWORD *)(v0 + 104) = objc_msgSend(v2, "wheelchairUse");
    v4 = swift_task_alloc(48);
    *(_QWORD *)(v0 + 112) = v4;
    *(_OWORD *)(v4 + 16) = v10;
    *(_QWORD *)(v4 + 32) = v3;
    v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 120) = v5;
    v6 = sub_100047110(&qword_100829840);
    *v5 = v0;
    v5[1] = sub_10023B910;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 24, 0, 0, 0xD000000000000012, 0x80000001006925C0, sub_10024A6D8, v4, v6);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 72);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
}

uint64_t sub_10023B910()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 120));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10023B96C, 0, 0);
}

uint64_t sub_10023B96C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;

  v1 = *(void **)(v0 + 24);
  v2 = *(void **)(v0 + 96);
  if (v1)
  {
    v3 = (uint64_t)objc_msgSend(*(id *)(v0 + 24), "activityMoveMode");

    goto LABEL_10;
  }
  v4 = objc_msgSend(*(id *)(v0 + 96), "dateOfBirth");
  v5 = *(_QWORD *)(v0 + 88);
  if (!v4)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 56))(*(_QWORD *)(v0 + 88), 1, 1, *(_QWORD *)(v0 + 56));
    goto LABEL_8;
  }
  v6 = v4;
  v8 = *(_QWORD **)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 56);
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v4);

  v10 = (void (*)(uint64_t, uint64_t, uint64_t))v8[4];
  v10(v5, v7, v9);
  v11 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8[7];
  v11(v5, 0, 1, v9);
  v12 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v8[6];
  if (v12(v5, 1, v9) == 1)
  {
LABEL_8:
    v15 = *(_QWORD *)(v0 + 88);

    sub_10001BE90(v15, (uint64_t *)&unk_100828370);
    goto LABEL_9;
  }
  v13 = *(_QWORD *)(v0 + 104);
  sub_10001BE90(*(_QWORD *)(v0 + 88), (uint64_t *)&unk_100828370);
  v14 = *(void **)(v0 + 96);
  if (v13 == 2)
  {

LABEL_9:
    v3 = 1;
    goto LABEL_10;
  }
  v19 = objc_msgSend(v14, "dateOfBirth");
  v20 = *(_QWORD *)(v0 + 80);
  if (v19)
  {
    v21 = v19;
    v22 = *(_QWORD *)(v0 + 72);
    v23 = *(_QWORD *)(v0 + 56);
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v19);

    v10(v20, v22, v23);
    v11(v20, 0, 1, v23);
    if (v12(v20, 1, v23) == 1)
    {
      isa = 0;
    }
    else
    {
      v25 = *(_QWORD *)(v0 + 80);
      v26 = *(_QWORD *)(v0 + 56);
      v27 = *(_QWORD *)(v0 + 64);
      isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
  }
  else
  {
    v11(*(_QWORD *)(v0 + 80), 1, 1, *(_QWORD *)(v0 + 56));
    isa = 0;
  }
  v28 = *(void **)(v0 + 96);
  v29 = FIAgeInYearsForDateOfBirth(isa);

  v3 = FIDefaultActivityMoveModeWithAge(v29);
LABEL_10:
  v16 = *(_QWORD *)(v0 + 80);
  v17 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

void sub_10023BBB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[5];
  uint64_t v11;

  v2 = sub_100047110(&qword_100829848);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  AppDependency.wrappedValue.getter(aBlock);
  v5 = (void *)aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v6 = *(unsigned __int8 *)(v3 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_100790C88, v7 + v4, v6 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_10024A6F0;
  v11 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001ABA78;
  aBlock[3] = &unk_100790CA0;
  v9 = _Block_copy(aBlock);
  objc_msgSend(v5, "_activityMoveModeObjectWithCompletion:", v9, swift_release(v11).n128_f64[0]);
  _Block_release(v9);

}

uint64_t sub_10023BCF0(void *a1)
{
  id v1;
  uint64_t v2;
  void *v4;

  v4 = a1;
  v1 = a1;
  v2 = sub_100047110(&qword_100829848);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

uint64_t sub_10023BD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t);

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v6 = type metadata accessor for LocalizedStringResource(0);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v4[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[18] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[19] = swift_task_alloc(v9);
  v4[20] = swift_task_alloc(v9);
  v10 = sub_100047110(&qword_1008201C8);
  v4[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v4[22] = v11;
  v4[23] = static MainActor.shared.getter(v11);
  v14 = (uint64_t (*)(uint64_t))((char *)&dword_100829820 + dword_100829820);
  v12 = (_QWORD *)swift_task_alloc(unk_100829824);
  v4[24] = v12;
  *v12 = v4;
  v12[1] = sub_10023BE34;
  return v14(a2);
}

uint64_t sub_10023BE34(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 192);
  *(_QWORD *)(*v2 + 200) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 176);
  if (v1)
  {
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_10023C094;
    v11 = v7;
    v12 = v9;
  }
  else
  {
    *(_BYTE *)(v4 + 313) = a1 & 1;
    v13 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v12 = v14;
    *(_QWORD *)(v4 + 208) = v13;
    *(_QWORD *)(v4 + 216) = v14;
    v10 = sub_10023BEE4;
    v11 = v13;
  }
  return swift_task_switch(v10, v11, v12);
}

uint64_t sub_10023BEE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v13;
  __int128 v14;

  if ((*(_BYTE *)(v0 + 313) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 168);
    v3 = *(_QWORD *)(v0 + 120);
    v2 = *(_QWORD *)(v0 + 128);
    v14 = *(_OWORD *)(v0 + 104);
    swift_release(*(_QWORD *)(v0 + 184));
    *(_OWORD *)(v0 + 16) = v14;
    *(_QWORD *)(v0 + 32) = v3;
    LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x8000000100692310);
    IntentDialog.init(_:)(v2);
    v4 = type metadata accessor for IntentDialog(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 0, 1, v4);
    v5 = type metadata accessor for AppIntentError(0);
    v6 = sub_1000083D8((unint64_t *)&qword_1008296C8, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v5, v6, 0, 0);
    v7 = sub_10024A688();
    ForegroundContinuableIntent.needsToContinueInForegroundError(_:requestConfirmation:continuation:)(v1, 0, &unk_100829830, 0, &type metadata for AdjustMoveGoalIntent, v7);
    v8 = sub_10001BE90(v1, &qword_1008201C8);
    swift_willThrow(v8);
    v9 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 152);
    v11 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v13 = (_QWORD *)swift_task_alloc(dword_10082982C);
    *(_QWORD *)(v0 + 224) = v13;
    *v13 = v0;
    v13[1] = sub_10023C0F8;
    return sub_10023B720(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  }
}

uint64_t sub_10023C094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 184));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023C0F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 224);
  *(_QWORD *)(*v1 + 232) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10023C150, *(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216));
}

void sub_10023C150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  long double v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  const char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  long double v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  Class isa;
  Class v46;
  id v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  __int128 v54;

  v1 = *(_QWORD *)(v0 + 232);
  if (v1 != 2)
  {
    if (v1 == 1)
    {
      v2 = sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
      v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "calorieGoal");
      if (v3)
      {
        v4 = v3;
        AppDependency.wrappedValue.getter((_QWORD *)(v0 + 72));
        v5 = *(void **)(v0 + 72);
        v6 = objc_msgSend(v5, "unitManager");

        if (v6)
        {
          v7 = objc_msgSend(v6, "userActiveEnergyBurnedUnit");

          if (FIUIHKUnitIsCalorieUnit(v7))
          {
            IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 88));
            v8 = 10.0;
            if ((unint64_t)(*(_QWORD *)(v0 + 88) - 10000) <= 0xFFFFFFFFFFFFD8F9)
            {
              v9 = *(_QWORD *)(v0 + 168);
              v10 = swift_release(*(_QWORD *)(v0 + 184));
              v11 = IntentParameter.projectedValue.getter(v10);
              v12 = 0xD00000000000002CLL;
              v13 = "Active Calories must be between 10 and 9999.";
LABEL_16:
              IntentDialog.init(stringLiteral:)(v12, (unint64_t)(v13 - 32) | 0x8000000000000000);
              v26 = type metadata accessor for IntentDialog(0);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 0, 1, v26);
              v27 = type metadata accessor for AppIntentError(0);
              v28 = sub_1000083D8((unint64_t *)&qword_1008296C8, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
              swift_allocError(v27, v28, 0, 0);
              IntentParameter.needsValueError(_:)(v9);
              swift_release(v11);
              v29 = sub_10001BE90(v9, &qword_1008201C8);
              swift_willThrow(v29);

              goto LABEL_17;
            }
          }
          else
          {
            IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 80));
            v8 = 20.0;
            if ((unint64_t)(*(_QWORD *)(v0 + 80) - 40000) <= 0xFFFFFFFFFFFF63D3)
            {
              v9 = *(_QWORD *)(v0 + 168);
              v25 = swift_release(*(_QWORD *)(v0 + 184));
              v11 = IntentParameter.projectedValue.getter(v25);
              v12 = 0xD00000000000002FLL;
              v13 = "Active Kilojoules must be between 20 and 39999.";
              goto LABEL_16;
            }
          }
          goto LABEL_18;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_21;
    }
    swift_release(*(_QWORD *)(v0 + 184));
    v21 = sub_10024A2C4();
    v20 = swift_allocError(&type metadata for ActivityRingError, v21, 0, 0);
    *v22 = 5;
LABEL_11:
    swift_willThrow(v20);
LABEL_17:
    v30 = *(_QWORD *)(v0 + 160);
    v31 = *(_QWORD *)(v0 + 152);
    v32 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 64));
  if ((unint64_t)(*(_QWORD *)(v0 + 64) - 1001) < 0xFFFFFFFFFFFFFC21)
  {
    v14 = *(_QWORD *)(v0 + 168);
    v15 = swift_release(*(_QWORD *)(v0 + 184));
    v16 = IntentParameter.projectedValue.getter(v15);
    IntentDialog.init(stringLiteral:)(0xD000000000000029, 0x8000000100692530);
    v17 = type metadata accessor for IntentDialog(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v14, 0, 1, v17);
    v18 = type metadata accessor for AppIntentError(0);
    v19 = sub_1000083D8((unint64_t *)&qword_1008296C8, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v18, v19, 0, 0);
    IntentParameter.needsValueError(_:)(v14);
    swift_release(v16);
    v20 = sub_10001BE90(v14, &qword_1008201C8);
    goto LABEL_11;
  }
  v23 = sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
  v24 = objc_msgSend((id)swift_getObjCClassFromMetadata(v23), "moveMinuteGoal");
  if (v24)
  {
    v4 = v24;
    v7 = objc_msgSend((id)objc_opt_self(HKUnit), "minuteUnit");
    v8 = 10.0;
LABEL_18:
    *(long double *)(v0 + 256) = v8;
    *(_QWORD *)(v0 + 240) = v7;
    *(_QWORD *)(v0 + 248) = v4;
    v34 = *(_QWORD *)(v0 + 152);
    v33 = *(_QWORD *)(v0 + 160);
    v35 = *(_QWORD *)(v0 + 136);
    v53 = *(_QWORD *)(v0 + 144);
    v36 = *(_QWORD *)(v0 + 120);
    v54 = *(_OWORD *)(v0 + 104);
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 40));
    v37 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 264) = v37;
    v38 = (double)v37;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 48));
    v39 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 272) = v39;
    v40 = v38 - fmod((double)v39, v8);
    v41 = (void *)objc_opt_self(HKQuantity);
    v42 = v4;
    v43 = objc_msgSend(v41, "quantityWithUnit:doubleValue:", v7, (double)v40);
    v44 = Date.init()(v43);
    Date.init()(v44);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v46 = Date._bridgeToObjectiveC()().super.isa;
    v47 = objc_msgSend((id)objc_opt_self(HKQuantitySample), "quantitySampleWithType:quantity:startDate:endDate:", v42, v43, isa, v46);
    *(_QWORD *)(v0 + 280) = v47;

    v48 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    v48(v34, v35);
    v49 = ((uint64_t (*)(uint64_t, uint64_t))v48)(v33, v35);
    v50 = static MainActor.shared.getter(v49);
    *(_QWORD *)(v0 + 288) = v50;
    v51 = swift_task_alloc(48);
    *(_QWORD *)(v0 + 296) = v51;
    *(_OWORD *)(v51 + 16) = v54;
    *(_QWORD *)(v51 + 32) = v36;
    *(_QWORD *)(v51 + 40) = v47;
    v52 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 304) = v52;
    *v52 = v0;
    v52[1] = sub_10023C748;
    withCheckedContinuation<A>(isolation:function:_:)(v0 + 312, v50, &protocol witness table for MainActor, 0x286D726F66726570, 0xE900000000000029, sub_10024A67C, v51, &type metadata for Bool);
    return;
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_10023C748()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 296);
  v3 = *(_QWORD *)(*v0 + 288);
  swift_task_dealloc(*(_QWORD *)(*v0 + 304));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10023C7B0, *(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 216));
}

void sub_10023C7B0()
{
  uint64_t v0;
  double v1;
  long double v2;
  double v3;
  double v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(void);
  void *v14;
  void *v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_release(*(_QWORD *)(v0 + 184));
  if (*(_BYTE *)(v0 + 312) != 1)
  {
    v14 = *(void **)(v0 + 280);
    v16 = *(void **)(v0 + 240);
    v15 = *(void **)(v0 + 248);
    v17 = sub_10024A2C4();
    v18 = swift_allocError(&type metadata for ActivityRingError, v17, 0, 0);
    *v19 = 4;
    swift_willThrow(v18);

    v20 = *(_QWORD *)(v0 + 160);
    v21 = *(_QWORD *)(v0 + 152);
    v22 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    v13 = *(void (**)(void))(v0 + 8);
    goto LABEL_7;
  }
  v1 = (double)*(uint64_t *)(v0 + 264);
  v2 = v1 - fmod((double)*(uint64_t *)(v0 + 272), *(long double *)(v0 + 256));
  FIUISetNeedsActivityRingExplanation(1);
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  v3 = (double)*(uint64_t *)(v0 + 264);
  v4 = v3 - fmod((double)*(uint64_t *)(v0 + 272), *(long double *)(v0 + 256));
  if (v4 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v4 < 9.22337204e18)
  {
    v5 = *(void **)(v0 + 280);
    v7 = *(void **)(v0 + 240);
    v6 = *(void **)(v0 + 248);
    v8 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 168);
    v10 = *(_QWORD *)(v0 + 152);
    v11 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 56) = (uint64_t)v4;
    v12 = sub_10024A564();
    static IntentResult.result<A>(value:)(v0 + 56, &type metadata for Int, v12);

    swift_task_dealloc(v9);
    swift_task_dealloc(v8);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    v13 = *(void (**)(void))(v0 + 8);
LABEL_7:
    v13();
    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t sub_10023C970()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100047110(&qword_10081E640);
  v0[2] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for URL(0);
  v0[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v0[4] = v3;
  v0[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v0[6] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_10023CA24, v5, v6);
}

uint64_t sub_10023CA24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));
  URL.init(string:)(0xD000000000000020, 0x8000000100692480);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 16), &qword_10081E640);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 32))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
    if (qword_10081DDA8 != -1)
      swift_once(&qword_10081DDA8, sub_10044A45C);
    v5 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 24);
    sub_10044AD80(v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  v7 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10023CB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[5];
  uint64_t v16;

  v7 = sub_100047110(&qword_100829730);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  AppDependency.wrappedValue.getter(aBlock);
  v10 = (void *)aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_100790C38, v12 + v9, v11 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  aBlock[4] = sub_10024A314;
  v16 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000064EC;
  aBlock[3] = &unk_100790C50;
  v14 = _Block_copy(aBlock);
  objc_msgSend(v10, "saveObject:withCompletion:", a5, v14, swift_release(v16).n128_f64[0]);
  _Block_release(v14);

}

uint64_t sub_10023CC74@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081D890, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A2F8, (uint64_t)sub_10023B6F4, a1);
}

uint64_t sub_10023CC98(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_10082981C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_10023BD34(a1, v4, v5, v6);
}

uint64_t sub_10023CD04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_100247E10();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_10023CD2C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10023B5E8();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10023CD58()
{
  unint64_t result;

  result = qword_1008294C0;
  if (!qword_1008294C0)
  {
    result = swift_getWitnessTable(&unk_10062FB30, &type metadata for AdjustExerciseGoalIntent);
    atomic_store(result, (unint64_t *)&qword_1008294C0);
  }
  return result;
}

unint64_t sub_10023CDA0()
{
  unint64_t result;

  result = qword_1008294C8;
  if (!qword_1008294C8)
  {
    result = swift_getWitnessTable(&unk_10062FBC0, &type metadata for AdjustExerciseGoalIntent);
    atomic_store(result, (unint64_t *)&qword_1008294C8);
  }
  return result;
}

unint64_t sub_10023CDE8()
{
  unint64_t result;

  result = qword_1008294D0;
  if (!qword_1008294D0)
  {
    result = swift_getWitnessTable(&unk_10062FBE8, &type metadata for AdjustExerciseGoalIntent);
    atomic_store(result, (unint64_t *)&qword_1008294D0);
  }
  return result;
}

uint64_t sub_10023CE2C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1006B0C80, 1) + 8);
}

uint64_t sub_10023CE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10023F804(a1, a2, a3, (uint64_t (*)(void))sub_10023CD58, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_10023CE64(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A310, 0xD000000000000011, 0x8000000100692510);
}

uint64_t sub_10023CE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t);

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v5 = type metadata accessor for LocalizedStringResource(0);
  v3[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_1008201C8);
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100821E40);
  v3[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[12] = v8;
  v3[13] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v3[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[15] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[16] = swift_task_alloc(v11);
  v3[17] = swift_task_alloc(v11);
  v12 = type metadata accessor for MainActor(0);
  v3[18] = v12;
  v3[19] = static MainActor.shared.getter(v12);
  v15 = (uint64_t (*)(uint64_t))((char *)&dword_1008297F8 + dword_1008297F8);
  v13 = (_QWORD *)swift_task_alloc(unk_1008297FC);
  v3[20] = v13;
  *v13 = v3;
  v13[1] = sub_10023CFB4;
  return v15(a2);
}

uint64_t sub_10023CFB4(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 160);
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 144);
  if (v1)
  {
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_10023D414;
    v11 = v7;
    v12 = v9;
  }
  else
  {
    *(_BYTE *)(v4 + 241) = a1 & 1;
    v13 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v12 = v14;
    *(_QWORD *)(v4 + 176) = v13;
    *(_QWORD *)(v4 + 184) = v14;
    v10 = sub_10023D064;
    v11 = v13;
  }
  return swift_task_switch(v10, v11, v12);
}

id sub_10023D064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  long double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  Class isa;
  Class v27;
  id v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 v34;
  __int128 v35;

  if ((*(_BYTE *)(v0 + 241) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 72);
    v1 = *(_QWORD *)(v0 + 80);
    v35 = *(_OWORD *)(v0 + 56);
    swift_release(*(_QWORD *)(v0 + 152));
    *(_OWORD *)(v0 + 16) = v35;
    LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x8000000100692310);
    IntentDialog.init(_:)(v2);
    v3 = type metadata accessor for IntentDialog(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 0, 1, v3);
    v4 = type metadata accessor for AppIntentError(0);
    v5 = sub_1000083D8((unint64_t *)&qword_1008296C8, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v4, v5, 0, 0);
    v6 = sub_10024A62C();
    ForegroundContinuableIntent.needsToContinueInForegroundError(_:requestConfirmation:continuation:)(v1, 0, &unk_100829808, 0, &type metadata for AdjustExerciseGoalIntent, v6);
    v7 = sub_10001BE90(v1, &qword_1008201C8);
    swift_willThrow(v7);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 104);
    v11 = *(_QWORD *)(v0 + 72);
    v10 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 32));
    v13 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 192) = v13;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 40));
    v14 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 200) = v14;
    v15 = sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
    result = objc_msgSend((id)swift_getObjCClassFromMetadata(v15), "exerciseGoal");
    if (result)
    {
      v16 = result;
      v17 = (double)v13 - fmod((double)v14, 5.0);
      v18 = *(_QWORD *)(v0 + 136);
      v19 = *(_QWORD *)(v0 + 120);
      v20 = *(_QWORD *)(v0 + 128);
      v21 = *(_QWORD *)(v0 + 112);
      v34 = *(_OWORD *)(v0 + 56);
      v22 = objc_msgSend((id)objc_opt_self(HKUnit), "minuteUnit");
      v23 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v22, (double)v17);

      v25 = Date.init()(v24);
      Date.init()(v25);
      isa = Date._bridgeToObjectiveC()().super.isa;
      v27 = Date._bridgeToObjectiveC()().super.isa;
      v28 = objc_msgSend((id)objc_opt_self(HKQuantitySample), "quantitySampleWithType:quantity:startDate:endDate:", v16, v23, isa, v27);
      *(_QWORD *)(v0 + 208) = v28;

      v29 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v29(v20, v21);
      v30 = ((uint64_t (*)(uint64_t, uint64_t))v29)(v18, v21);
      v31 = static MainActor.shared.getter(v30);
      *(_QWORD *)(v0 + 216) = v31;
      v32 = swift_task_alloc(48);
      *(_QWORD *)(v0 + 224) = v32;
      *(_OWORD *)(v32 + 16) = v34;
      *(_QWORD *)(v32 + 32) = v28;
      v33 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
      *(_QWORD *)(v0 + 232) = v33;
      *v33 = v0;
      v33[1] = sub_10023D488;
      return (id)withCheckedContinuation<A>(isolation:function:_:)(v0 + 240, v31, &protocol witness table for MainActor, 0x286D726F66726570, 0xE900000000000029, sub_10024A5F8, v32, &type metadata for Bool);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10023D414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release(*(_QWORD *)(v0 + 152));
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023D488()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 224);
  v3 = *(_QWORD *)(*v0 + 216);
  swift_task_dealloc(*(_QWORD *)(*v0 + 232));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10023D4F0, *(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 184));
}

uint64_t sub_10023D4F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  swift_release(*(_QWORD *)(v0 + 152));
  v1 = *(void **)(v0 + 208);
  if (*(_BYTE *)(v0 + 240) == 1)
  {
    v2 = *(_QWORD *)(v0 + 128);
    v3 = *(_QWORD *)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 88);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 72);
    v7 = (double)*(uint64_t *)(v0 + 192);
    v8 = v7 - fmod((double)*(uint64_t *)(v0 + 200), 5.0);
    FIUISetNeedsActivityRingExplanation(1);
    v9 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "minutes");
    v10 = sub_10001E724(0, &qword_100821E88, NSUnitDuration_ptr);
    Measurement.init(value:unit:)(v9, v10, v8);
    v11 = sub_100028384(&qword_100829800, &qword_100821E40, (uint64_t)&protocol conformance descriptor for Measurement<A>);
    static IntentResult.result<A>(value:)(v5, v6, v11);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
    swift_task_dealloc(v3);
    swift_task_dealloc(v2);
    swift_task_dealloc(v5);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
  }
  else
  {
    v12 = sub_10024A2C4();
    v13 = swift_allocError(&type metadata for ActivityRingError, v12, 0, 0);
    *v14 = 4;
    swift_willThrow(v13);

    v15 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023D6BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100047110(&qword_10081E640);
  v0[2] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for URL(0);
  v0[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v0[4] = v3;
  v0[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v0[6] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_10023D770, v5, v6);
}

uint64_t sub_10023D770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));
  URL.init(string:)(0xD000000000000024, 0x8000000100692450);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 16), &qword_10081E640);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 32))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
    if (qword_10081DDA8 != -1)
      swift_once(&qword_10081DDA8, sub_10044A45C);
    v5 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 24);
    sub_10044AD80(v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  v7 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023D878@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081D898, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A310, (uint64_t)sub_10023CE64, a1);
}

uint64_t sub_10023D89C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1008297F4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1000EA380;
  return sub_10023CE88(a1, v5, v4);
}

uint64_t sub_10023D900@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100248540();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10023D924(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10023CD58();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10023D950()
{
  unint64_t result;

  result = qword_1008294E0;
  if (!qword_1008294E0)
  {
    result = swift_getWitnessTable(&unk_10062FC2C, &type metadata for AdjustStandGoalIntent);
    atomic_store(result, (unint64_t *)&qword_1008294E0);
  }
  return result;
}

unint64_t sub_10023D998()
{
  unint64_t result;

  result = qword_1008294E8;
  if (!qword_1008294E8)
  {
    result = swift_getWitnessTable(&unk_10062FCBC, &type metadata for AdjustStandGoalIntent);
    atomic_store(result, (unint64_t *)&qword_1008294E8);
  }
  return result;
}

unint64_t sub_10023D9E0()
{
  unint64_t result;

  result = qword_1008294F0;
  if (!qword_1008294F0)
  {
    result = swift_getWitnessTable(&unk_10062FCE4, &type metadata for AdjustStandGoalIntent);
    atomic_store(result, (unint64_t *)&qword_1008294F0);
  }
  return result;
}

uint64_t sub_10023DA24(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1006B0C4C, 1) + 8);
}

uint64_t sub_10023DA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10023F804(a1, a2, a3, (uint64_t (*)(void))sub_10023D950, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_10023DA5C(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A328, 0x6E61745320746553, 0xEE006C616F472064);
}

uint64_t sub_10023DA88()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_10023DAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t);

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v5 = type metadata accessor for LocalizedStringResource(0);
  v3[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_1008201C8);
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v3[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[12] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[13] = swift_task_alloc(v9);
  v3[14] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v3[15] = v10;
  v3[16] = static MainActor.shared.getter(v10);
  v13 = (uint64_t (*)(uint64_t))((char *)&dword_1008297D0 + dword_1008297D0);
  v11 = (_QWORD *)swift_task_alloc(unk_1008297D4);
  v3[17] = v11;
  *v11 = v3;
  v11[1] = sub_10023DBB8;
  return v13(a2);
}

uint64_t sub_10023DBB8(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 136);
  *(_QWORD *)(*v2 + 144) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 120);
  if (v1)
  {
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_10023DFE8;
    v11 = v7;
    v12 = v9;
  }
  else
  {
    *(_BYTE *)(v4 + 201) = a1 & 1;
    v13 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v12 = v14;
    *(_QWORD *)(v4 + 152) = v13;
    *(_QWORD *)(v4 + 160) = v14;
    v10 = sub_10023DC68;
    v11 = v13;
  }
  return swift_task_switch(v10, v11, v12);
}

id sub_10023DC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  Class v23;
  id v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;

  if ((*(_BYTE *)(v0 + 201) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 72);
    v1 = *(_QWORD *)(v0 + 80);
    v32 = *(_OWORD *)(v0 + 56);
    swift_release(*(_QWORD *)(v0 + 128));
    *(_OWORD *)(v0 + 16) = v32;
    LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x8000000100692310);
    IntentDialog.init(_:)(v2);
    v3 = type metadata accessor for IntentDialog(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 0, 1, v3);
    v4 = type metadata accessor for AppIntentError(0);
    v5 = sub_1000083D8((unint64_t *)&qword_1008296C8, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v4, v5, 0, 0);
    v6 = sub_10024A5A8();
    ForegroundContinuableIntent.needsToContinueInForegroundError(_:requestConfirmation:continuation:)(v1, 0, &unk_1008297E0, 0, &type metadata for AdjustStandGoalIntent, v6);
    v7 = sub_10001BE90(v1, &qword_1008201C8);
    swift_willThrow(v7);
    v8 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
    result = objc_msgSend((id)swift_getObjCClassFromMetadata(v12), "standGoal");
    if (result)
    {
      v13 = result;
      v14 = *(_QWORD *)(v0 + 112);
      v15 = *(_QWORD *)(v0 + 104);
      v30 = *(_QWORD *)(v0 + 96);
      v16 = *(_QWORD *)(v0 + 88);
      v17 = *(_QWORD *)(v0 + 64);
      v31 = *(_QWORD *)(v0 + 56);
      v18 = objc_msgSend((id)objc_opt_self(HKUnit), "countUnit");
      IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 32));
      v19 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v18, (double)*(uint64_t *)(v0 + 32));

      v21 = Date.init()(v20);
      Date.init()(v21);
      isa = Date._bridgeToObjectiveC()().super.isa;
      v23 = Date._bridgeToObjectiveC()().super.isa;
      v24 = objc_msgSend((id)objc_opt_self(HKQuantitySample), "quantitySampleWithType:quantity:startDate:endDate:", v13, v19, isa, v23);
      *(_QWORD *)(v0 + 168) = v24;

      v25 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v25(v15, v16);
      v26 = ((uint64_t (*)(uint64_t, uint64_t))v25)(v14, v16);
      v27 = static MainActor.shared.getter(v26);
      *(_QWORD *)(v0 + 176) = v27;
      v28 = (_QWORD *)swift_task_alloc(48);
      *(_QWORD *)(v0 + 184) = v28;
      v28[2] = v31;
      v28[3] = v17;
      v28[4] = v24;
      v29 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
      *(_QWORD *)(v0 + 192) = v29;
      *v29 = v0;
      v29[1] = sub_10023E048;
      return (id)withCheckedContinuation<A>(isolation:function:_:)(v0 + 200, v27, &protocol witness table for MainActor, 0x286D726F66726570, 0xE900000000000029, sub_10024A530, v28, &type metadata for Bool);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10023DFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 128));
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023E048()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 184);
  v3 = *(_QWORD *)(*v0 + 176);
  swift_task_dealloc(*(_QWORD *)(*v0 + 192));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10023E0B0, *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160));
}

uint64_t sub_10023E0B0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_release(*(_QWORD *)(v0 + 128));
  if (*(_BYTE *)(v0 + 200) == 1)
  {
    v1 = *(void **)(v0 + 168);
    v3 = *(_QWORD *)(v0 + 104);
    v2 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 80);
    FIUISetNeedsActivityRingExplanation(1);
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 40));
    v6 = sub_10024A564();
    static IntentResult.result<A>(value:)(v0 + 40, &type metadata for Int, v6);

    swift_task_dealloc(v2);
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
  }
  else
  {
    v7 = *(void **)(v0 + 168);
    v8 = sub_10024A2C4();
    v9 = swift_allocError(&type metadata for ActivityRingError, v8, 0, 0);
    *v10 = 4;
    swift_willThrow(v9);

    v11 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v12 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023E1DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100047110(&qword_10081E640);
  v0[2] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for URL(0);
  v0[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v0[4] = v3;
  v0[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v0[6] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_10023E290, v5, v6);
}

uint64_t sub_10023E290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));
  URL.init(string:)(0xD000000000000021, 0x8000000100692420);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 16), &qword_10081E640);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 32))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
    if (qword_10081DDA8 != -1)
      swift_once(&qword_10081DDA8, sub_10044A45C);
    v5 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 24);
    sub_10044AD80(v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  v7 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10023E398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v12 = sub_100047110(&qword_100829730);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  AppDependency.wrappedValue.getter(aBlock);
  v15 = (void *)aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v16 = *(unsigned __int8 *)(v13 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(a5, v17 + v14, v16 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v18 + v17, (char *)aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  aBlock[4] = a6;
  v21 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000064EC;
  aBlock[3] = a7;
  v19 = _Block_copy(aBlock);
  objc_msgSend(v15, "saveObject:withCompletion:", a4, v19, swift_release(v21).n128_f64[0]);
  _Block_release(v19);

}

uint64_t sub_10023E4E0@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081D8A0, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A328, (uint64_t)sub_10023DA5C, a1);
}

uint64_t sub_10023E504(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1008297CC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1000EA380;
  return sub_10023DAB8(a1, v5, v4);
}

uint64_t sub_10023E568@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100248C34();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10023E58C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10023D950();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_10023E5B4(uint64_t a1)
{
  return sub_1001B167C(a1, qword_10086A340, 0xD000000000000010, 0x80000001006924B0);
}

uint64_t sub_10023E5D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  unint64_t v26;
  char *v27;
  unint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  void (*v78)(char *, uint64_t);
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;

  v70 = a1;
  v76 = sub_100047110(&qword_100829760);
  v69 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v67 = (char *)&v62 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v68 = (char *)&v62 - v3;
  v4 = sub_100047110(&qword_100829768);
  v78 = *(void (**)(char *, uint64_t))(v4 - 8);
  __chkstk_darwin(v4);
  v66 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v75 = (char *)&v62 - v7;
  __chkstk_darwin(v8);
  v74 = (char *)&v62 - v9;
  __chkstk_darwin(v10);
  v72 = (char *)&v62 - v11;
  __chkstk_darwin(v12);
  v73 = (char *)&v62 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v62 - v15;
  __chkstk_darwin(v17);
  v65 = (char *)&v62 - v18;
  v84 = 1;
  v19 = sub_100047110(&qword_100829770);
  v20 = sub_100240094();
  v21 = sub_10023F740();
  v77 = v21;
  v22 = sub_100028384(&qword_100829778, &qword_100829770, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  ParameterSummaryCaseCondition.init(_:_:)(&v84, sub_10023EC14, 0, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v19, v20, v21, v22);
  v23 = sub_100028384(&qword_100829780, &qword_100829768, (uint64_t)&protocol conformance descriptor for ParameterSummaryCaseCondition<A, B, C>);
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v16, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v4, v23);
  v24 = (void (*)(char *, uint64_t))*((_QWORD *)v78 + 1);
  v64 = v16;
  v24(v16, v4);
  v78 = v24;
  v83 = 2;
  v25 = v73;
  v71 = v19;
  v26 = v77;
  ParameterSummaryCaseCondition.init(_:_:)(&v83, sub_10023EC2C, 0, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v19, v20, v77, v22);
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v25, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v4, v23);
  v24(v25, v4);
  v82 = 3;
  v27 = v72;
  v28 = v20;
  ParameterSummaryCaseCondition.init(_:_:)(&v82, sub_10023EE78, 0, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v19, v20, v26, v22);
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v27, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v4, v23);
  v78(v27, v4);
  v81 = 4;
  v29 = v74;
  ParameterSummaryCaseCondition.init(_:_:)(&v81, sub_10023EEB0, 0, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v71, v20, v26, v22);
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v29, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v4, v23);
  v30 = v78;
  v78(v29, v4);
  v80 = 5;
  v63 = v22;
  v31 = v75;
  v32 = v71;
  ParameterSummaryCaseCondition.init(_:_:)(&v80, sub_10023EEE8, 0, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v71, v20, v77, v22);
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v31, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v4, v23);
  v30(v31, v4);
  v79 = 6;
  v33 = v66;
  v34 = v77;
  ParameterSummaryCaseCondition.init(_:_:)(&v79, sub_10023EF20, 0, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v32, v28, v77, v22);
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v33, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v4, v23);
  v30(v33, v4);
  v35 = v67;
  v36 = v28;
  v37 = v34;
  v38 = v63;
  ParameterSummaryDefaultCaseCondition.init(_:)(sub_10023F014, 0, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v32, v36, v34, v63);
  v39 = sub_100028384(&qword_100829788, &qword_100829760, (uint64_t)&protocol conformance descriptor for ParameterSummaryDefaultCaseCondition<A, B, C>);
  v40 = v68;
  v41 = v35;
  v42 = v35;
  v43 = v76;
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v41, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v76, v39);
  v44 = *(void (**)(char *, uint64_t))(v69 + 8);
  v44(v42, v43);
  v60 = v23;
  v61 = v38;
  v58 = v23;
  v59 = v23;
  v56 = v23;
  v57 = v23;
  v54 = v37;
  v55 = v23;
  v53 = v32;
  v45 = v64;
  v46 = v65;
  v48 = v72;
  v47 = v73;
  v49 = v74;
  v50 = v75;
  static ParameterSummaryCaseBuilder.buildBlock<A, B, C, D, E, F, G>(_:_:_:_:_:_:_:)(v65, v64, v73, v72, v74, v75, v40, &type metadata for SetFitnessGoalIntent, &type metadata for SetFitnessGoalIntent.ActivityRingEnum, v4, v4, v4, v4, v4, v4, v53, v54, v55, v56,
    v57,
    v58,
    v59,
    v60,
    v61);
  v44(v40, v76);
  v51 = v78;
  v78(v50, v4);
  v51(v49, v4);
  v51(v48, v4);
  v51(v47, v4);
  v51(v45, v4);
  return ((uint64_t (*)(char *, uint64_t))v51)(v46, v4);
}

uint64_t sub_10023EC14@<X0>(uint64_t a1@<X8>)
{
  return sub_10023EC38((uint64_t)sub_10023EC20, a1);
}

uint64_t sub_10023EC20()
{
  return sub_10023EF38((uint64_t)&unk_100630460);
}

uint64_t sub_10023EC2C@<X0>(uint64_t a1@<X8>)
{
  return sub_10023EC38((uint64_t)sub_10023EE6C, a1);
}

uint64_t sub_10023EC38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  Swift::String v16;
  uint64_t KeyPath;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  _QWORD v23[2];

  v23[0] = a1;
  v23[1] = a2;
  v2 = sub_100047110(&qword_100829790);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100829798);
  __chkstk_darwin(v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100829770);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v23 - v13;
  v15 = sub_100240094();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(4, 1, &type metadata for SetFitnessGoalIntent, v15);
  v16._countAndFlagsBits = 544499027;
  v16._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v16);
  KeyPath = swift_getKeyPath(&unk_100630370);
  v18 = sub_100047110(&qword_1008297A0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v5, v18);
  swift_release(KeyPath);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v19);
  ParameterSummaryString.init(stringInterpolation:)(v7, &type metadata for SetFitnessGoalIntent, v15);
  IntentParameterSummary.init(_:table:_:)(v4, 0, 0, v23[0], 0, &type metadata for SetFitnessGoalIntent, v15);
  v20 = sub_100028384(&qword_100829778, &qword_100829770, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v11, &type metadata for SetFitnessGoalIntent, v8, v20);
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v11, v8);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v14, &type metadata for SetFitnessGoalIntent, v8, v20);
  return ((uint64_t (*)(char *, uint64_t))v21)(v14, v8);
}

uint64_t sub_10023EE6C()
{
  return sub_10023EF38((uint64_t)&unk_100630438);
}

uint64_t sub_10023EE78@<X0>(uint64_t a1@<X8>)
{
  return sub_10023EC38((uint64_t)sub_10023EE84, a1);
}

uint64_t sub_10023EE84()
{
  return sub_10023EF38((uint64_t)&unk_100630410);
}

uint64_t sub_10023EE90()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10023EEB0@<X0>(uint64_t a1@<X8>)
{
  return sub_10023EC38((uint64_t)sub_10023EEBC, a1);
}

uint64_t sub_10023EEBC()
{
  return sub_10023EF38((uint64_t)&unk_1006303E8);
}

uint64_t sub_10023EEC8()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10023EEE8@<X0>(uint64_t a1@<X8>)
{
  return sub_10023EC38((uint64_t)sub_10023EEF4, a1);
}

uint64_t sub_10023EEF4()
{
  return sub_10023EF38((uint64_t)&unk_1006303C0);
}

uint64_t sub_10023EF00()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10023EF20@<X0>(uint64_t a1@<X8>)
{
  return sub_10023EC38((uint64_t)sub_10023EF2C, a1);
}

uint64_t sub_10023EF2C()
{
  return sub_10023EF38((uint64_t)&unk_100630398);
}

uint64_t sub_10023EF38(uint64_t a1)
{
  uint64_t KeyPath;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v9;

  KeyPath = swift_getKeyPath(a1);
  v2 = sub_100240094();
  v3 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(KeyPath, v2);
  swift_release(KeyPath);
  v4 = sub_100047110((uint64_t *)&unk_100828340);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100623630;
  *(_QWORD *)(v5 + 32) = v3;
  v9 = v5;
  specialized Array._endMutation()(v5);
  v6 = swift_retain(v3);
  v7 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)(v9, &type metadata for SetFitnessGoalIntent, v2, v6);
  swift_release(v3);
  swift_bridgeObjectRelease(v9);
  return v7;
}

uint64_t sub_10023EFF4()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10023F014@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  _QWORD v22[2];

  v22[1] = a1;
  v1 = sub_100047110(&qword_100829790);
  __chkstk_darwin(v1);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100829798);
  __chkstk_darwin(v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_100829770);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v22 - v12;
  v14 = sub_100240094();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(4, 1, &type metadata for SetFitnessGoalIntent, v14);
  v15._countAndFlagsBits = 544499027;
  v15._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_100630370);
  v17 = sub_100047110(&qword_1008297A0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for SetFitnessGoalIntent, v14);
  IntentParameterSummary.init(_:table:)(v3, 0, 0, &type metadata for SetFitnessGoalIntent, v14);
  v19 = sub_100028384(&qword_100829778, &qword_100829770, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v10, &type metadata for SetFitnessGoalIntent, v7, v19);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v10, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for SetFitnessGoalIntent, v7, v19);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v7);
}

uint64_t sub_10023F240(uint64_t a1)
{
  return sub_10023F26C(a1, qword_10086A358, 0x7974697669746341, 0xED0000676E695220);
}

uint64_t sub_10023F26C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v7 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_100008398(v14, a2);
  sub_10003CE9C(v14, (uint64_t)a2);
  LocalizedStringResource.init(stringLiteral:)(a3, a4);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v13, v9);
}

void sub_10023F378(char *a1)
{
  sub_1003912DC(*a1);
}

unint64_t sub_10023F388()
{
  unint64_t result;

  result = qword_100829500;
  if (!qword_100829500)
  {
    result = swift_getWitnessTable(&unk_10062FD00, &type metadata for SetFitnessGoalIntent.ActivityRingEnum);
    atomic_store(result, (unint64_t *)&qword_100829500);
  }
  return result;
}

void sub_10023F3CC()
{
  char *v0;

  sub_100391C64(0, *v0);
}

void sub_10023F3D8()
{
  __asm { BR              X10 }
}

uint64_t sub_10023F40C(uint64_t a1)
{
  String.hash(into:)(a1, 0x6F6C614365766F6DLL, 0xEC00000073656972);
  return swift_bridgeObjectRelease(0xEC00000073656972);
}

void sub_10023F4C0(uint64_t a1)
{
  char *v1;

  sub_100391C64(a1, *v1);
}

unint64_t sub_10023F4C8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1002497B8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10023F4F4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10023F51C + 4 * byte_10062F410[*v0]))();
}

void sub_10023F51C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "moveCalories");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_10023F540(char *a1@<X8>)
{
  strcpy(a1, "moveKilojoules");
  a1[15] = -18;
}

void sub_10023F568(_QWORD *a1@<X8>)
{
  *a1 = 0x756E694D65766F6DLL;
  a1[1] = 0xEB00000000736574;
}

void sub_10023F58C(_QWORD *a1@<X8>)
{
  *a1 = 0x6573696372657865;
  a1[1] = 0xE800000000000000;
}

void sub_10023F5A8(_QWORD *a1@<X8>)
{
  *a1 = 0x646E617473;
  a1[1] = 0xE500000000000000;
}

void sub_10023F5C0(_QWORD *a1@<X8>)
{
  *a1 = 1819045746;
  a1[1] = 0xE400000000000000;
}

unint64_t sub_10023F5D8()
{
  unint64_t result;

  result = qword_100829508;
  if (!qword_100829508)
  {
    result = swift_getWitnessTable(&unk_10062FDE0, &type metadata for SetFitnessGoalIntent.ActivityRingEnum);
    atomic_store(result, (unint64_t *)&qword_100829508);
  }
  return result;
}

unint64_t sub_10023F620()
{
  unint64_t result;

  result = qword_100829510;
  if (!qword_100829510)
  {
    result = swift_getWitnessTable(&unk_10062FE18, &type metadata for SetFitnessGoalIntent.ActivityRingEnum);
    atomic_store(result, (unint64_t *)&qword_100829510);
  }
  return result;
}

unint64_t sub_10023F668()
{
  unint64_t result;

  result = qword_100829518;
  if (!qword_100829518)
  {
    result = swift_getWitnessTable(&unk_10062FD68, &type metadata for SetFitnessGoalIntent.ActivityRingEnum);
    atomic_store(result, (unint64_t *)&qword_100829518);
  }
  return result;
}

unint64_t sub_10023F6B0()
{
  unint64_t result;

  result = qword_100829520;
  if (!qword_100829520)
  {
    result = swift_getWitnessTable(&unk_10062FE48, &type metadata for SetFitnessGoalIntent.ActivityRingEnum);
    atomic_store(result, (unint64_t *)&qword_100829520);
  }
  return result;
}

unint64_t sub_10023F6F8()
{
  unint64_t result;

  result = qword_100829528;
  if (!qword_100829528)
  {
    result = swift_getWitnessTable(&unk_10062FE70, &type metadata for SetFitnessGoalIntent.ActivityRingEnum);
    atomic_store(result, (unint64_t *)&qword_100829528);
  }
  return result;
}

unint64_t sub_10023F740()
{
  unint64_t result;

  result = qword_100829530;
  if (!qword_100829530)
  {
    result = swift_getWitnessTable(&unk_10062FE98, &type metadata for SetFitnessGoalIntent.ActivityRingEnum);
    atomic_store(result, (unint64_t *)&qword_100829530);
  }
  return result;
}

unint64_t sub_10023F788()
{
  unint64_t result;

  result = qword_100829538;
  if (!qword_100829538)
  {
    result = swift_getWitnessTable(&unk_10062FEF0, &type metadata for SetFitnessGoalIntent.ActivityRingEnum);
    atomic_store(result, (unint64_t *)&qword_100829538);
  }
  return result;
}

uint64_t sub_10023F7CC@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081D8B0, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_10086A358, (uint64_t)sub_10023F240, a1);
}

uint64_t sub_10023F7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10023F804(a1, a2, a3, (uint64_t (*)(void))sub_10023F844, (uint64_t)&opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>);
}

uint64_t sub_10023F804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  _QWORD v7[2];

  v7[0] = a2;
  v7[1] = a4();
  return swift_getOpaqueTypeConformance2(v7, a5, 1);
}

unint64_t sub_10023F844()
{
  unint64_t result;

  result = qword_100829540;
  if (!qword_100829540)
  {
    result = swift_getWitnessTable(&unk_10062FDA0, &type metadata for SetFitnessGoalIntent.ActivityRingEnum);
    atomic_store(result, (unint64_t *)&qword_100829540);
  }
  return result;
}

uint64_t sub_10023F888(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10023F844();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10023F8C4()
{
  unint64_t result;

  result = qword_100829548;
  if (!qword_100829548)
  {
    result = swift_getWitnessTable(&unk_10062FF30, &type metadata for SetFitnessGoalIntent.ActivityRingEnum);
    atomic_store(result, (unint64_t *)&qword_100829548);
  }
  return result;
}

unint64_t sub_10023F90C()
{
  unint64_t result;

  result = qword_100829550;
  if (!qword_100829550)
  {
    result = swift_getWitnessTable(&unk_10062FF58, &type metadata for SetFitnessGoalIntent.ActivityRingEnum);
    atomic_store(result, (unint64_t *)&qword_100829550);
  }
  return result;
}

unint64_t sub_10023F954()
{
  unint64_t result;

  result = qword_100829558;
  if (!qword_100829558)
  {
    result = swift_getWitnessTable(&unk_10062FD28, &type metadata for SetFitnessGoalIntent.ActivityRingEnum);
    atomic_store(result, (unint64_t *)&qword_100829558);
  }
  return result;
}

uint64_t sub_10023F99C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10023F788();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10023F9D4()
{
  return sub_100028384(&qword_100829560, &qword_100829568, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_10023FA00(_QWORD *a1@<X8>)
{
  *a1 = &off_100782000;
}

unint64_t sub_10023FA14()
{
  unint64_t result;

  result = qword_100829570;
  if (!qword_100829570)
  {
    result = swift_getWitnessTable(&unk_10062FFF0, &type metadata for SetFitnessGoalIntent.ActivityRingOptionsProvider);
    atomic_store(result, (unint64_t *)&qword_100829570);
  }
  return result;
}

unint64_t sub_10023FA5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100829578[0];
  if (!qword_100829578[0])
  {
    v1 = sub_100007050(&qword_100829568);
    sub_10023F740();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, qword_100829578);
  }
  return result;
}

uint64_t sub_10023FAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch(sub_10023FB24, 0, 0);
}

void sub_10023FB24()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  unsigned int v10;
  void *v11;
  id v12;
  id v13;
  int IsCalorieUnit;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(void **)(v0 + 16);
  *(_QWORD *)(v0 + 16) = 0;
  v2 = objc_msgSend(v1, "activityMoveModeWithError:", v0 + 16);

  v3 = *(void **)(v0 + 16);
  if (!v2)
  {
    v6 = v3;
    _convertNSErrorToError(_:)(v3);

    swift_willThrow(v7);
    goto LABEL_5;
  }
  v4 = v3;
  if (objc_msgSend(v2, "activityMoveMode") == (id)2)
  {
    v5 = &off_100782028;
LABEL_30:

    (*(void (**)(_QWORD *))(v0 + 8))(v5);
    return;
  }
  v8 = objc_msgSend((id)objc_opt_self(_HKBehavior), "sharedBehavior");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "isStandalonePhoneFitnessMode");

    if (v10)
      v5 = _swiftEmptyArrayStorage;
    else
      v5 = &off_100782050;
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 16));
    v11 = *(void **)(v0 + 16);
    v12 = objc_msgSend(v11, "unitManager");

    if (v12)
    {
      v13 = objc_msgSend(v12, "userActiveEnergyBurnedUnit");

      IsCalorieUnit = FIUIHKUnitIsCalorieUnit(v13);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
      if (IsCalorieUnit)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          if (v10)
            v32 = _swiftEmptyArrayStorage;
          else
            v32 = &off_100782050;
          v5 = sub_100140A4C(0, v32[2] + 1, 1, v5);
        }
        v17 = v5[2];
        v16 = v5[3];
        v18 = v17 + 1;
        v19 = 1;
        if (v17 >= v16 >> 1)
          v5 = sub_100140A4C((_QWORD *)(v16 > 1), v17 + 1, 1, v5);
      }
      else
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          if (v10)
            v33 = _swiftEmptyArrayStorage;
          else
            v33 = &off_100782050;
          v5 = sub_100140A4C(0, v33[2] + 1, 1, v5);
        }
        v17 = v5[2];
        v20 = v5[3];
        v18 = v17 + 1;
        if (v17 >= v20 >> 1)
          v5 = sub_100140A4C((_QWORD *)(v20 > 1), v17 + 1, 1, v5);
        v19 = 2;
      }
      v5[2] = v18;
      *((_BYTE *)v5 + v17 + 32) = v19;
      if ((v10 & 1) != 0)
        goto LABEL_29;
      v21 = v5[3];
      if (v18 >= v21 >> 1)
        v5 = sub_100140A4C((_QWORD *)(v21 > 1), v18 + 1, 1, v5);
      v5[2] = v18 + 1;
      *((_BYTE *)v5 + v18 + 32) = 4;
      AppDependency.wrappedValue.getter((_QWORD *)(v0 + 16));
      v22 = *(void **)(v0 + 16);
      *(_QWORD *)(v0 + 16) = 0;
      v23 = objc_msgSend(v22, "wheelchairUseWithError:", v0 + 16);

      v24 = *(void **)(v0 + 16);
      if (v23)
      {
        v25 = v24;
        v26 = objc_msgSend(v23, "wheelchairUse");
        v28 = v5[2];
        v27 = v5[3];
        if (v26 == (id)2)
          v29 = 6;
        else
          v29 = 5;
        if (v28 >= v27 >> 1)
          v5 = sub_100140A4C((_QWORD *)(v27 > 1), v28 + 1, 1, v5);
        v5[2] = v28 + 1;
        *((_BYTE *)v5 + v28 + 32) = v29;

        v2 = v23;
LABEL_29:

        goto LABEL_30;
      }
      v30 = v24;
      swift_bridgeObjectRelease(v5);
      _convertNSErrorToError(_:)(v24);

      swift_willThrow(v31);
LABEL_5:
      (*(void (**)(void))(v0 + 8))();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10023FF28()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_10023FF5C()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_10023FF90()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_10023FFC4()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_10023FFF8()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_10024002C(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_task_alloc(dword_1008297AC);
  *(_QWORD *)(v2 + 24) = v3;
  *(_QWORD *)v3 = v2;
  *(_QWORD *)(v3 + 8) = sub_100100D3C;
  *(_OWORD *)(v3 + 24) = *v1;
  return swift_task_switch(sub_10023FB24, 0, 0);
}

unint64_t sub_100240094()
{
  unint64_t result;

  result = qword_100829590;
  if (!qword_100829590)
  {
    result = swift_getWitnessTable(&unk_100630034, &type metadata for SetFitnessGoalIntent);
    atomic_store(result, (unint64_t *)&qword_100829590);
  }
  return result;
}

unint64_t sub_1002400DC()
{
  unint64_t result;

  result = qword_100829598;
  if (!qword_100829598)
  {
    result = swift_getWitnessTable(&unk_1006300C4, &type metadata for SetFitnessGoalIntent);
    atomic_store(result, (unint64_t *)&qword_100829598);
  }
  return result;
}

unint64_t sub_100240124()
{
  unint64_t result;

  result = qword_1008295A0;
  if (!qword_1008295A0)
  {
    result = swift_getWitnessTable(&unk_1006300EC, &type metadata for SetFitnessGoalIntent);
    atomic_store(result, (unint64_t *)&qword_1008295A0);
  }
  return result;
}

uint64_t sub_100240168(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1006B0C08, 1) + 8);
}

uint64_t sub_10024018C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B0BE0, 1);
}

uint64_t sub_10024019C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2[46] = a1;
  v2[47] = v1;
  v3 = type metadata accessor for LocalizedStringResource(0);
  v2[48] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_1008201C8);
  v2[49] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100821E40);
  v2[50] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[51] = v6;
  v2[52] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100047110(&qword_100822C50) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[53] = swift_task_alloc(v7);
  v2[54] = swift_task_alloc(v7);
  v2[55] = swift_task_alloc(v7);
  v2[56] = swift_task_alloc(v7);
  v8 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  v2[57] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_1008296A8);
  v2[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_1008296B0);
  v2[59] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_1008296B8);
  v2[60] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_100047110(&qword_100821E28) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[61] = swift_task_alloc(v12);
  v2[62] = swift_task_alloc(v12);
  v13 = sub_100047110(&qword_100821E30);
  v2[63] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[64] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[65] = swift_task_alloc(v15);
  v2[66] = swift_task_alloc(v15);
  v16 = type metadata accessor for IntentDialog(0);
  v2[67] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v2[68] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[69] = swift_task_alloc(v18);
  v2[70] = swift_task_alloc(v18);
  v19 = type metadata accessor for MainActor(0);
  v2[71] = static MainActor.shared.getter(v19);
  v20 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  v2[72] = v20;
  v2[73] = v21;
  return swift_task_switch(sub_1002403FC, v20, v21);
}

void sub_1002403FC()
{
  uint64_t v0;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 704));
  __asm { BR              X10 }
}

uint64_t sub_100240464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 536);
  v4 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 376);
  swift_release(*(_QWORD *)(v0 + 568));
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v5;
  v6 = *(_OWORD *)(v5 + 16);
  v7 = *(_OWORD *)(v5 + 32);
  v8 = *(_OWORD *)(v5 + 48);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v5 + 64);
  *(_OWORD *)(v0 + 48) = v7;
  *(_OWORD *)(v0 + 64) = v8;
  *(_OWORD *)(v0 + 32) = v6;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x8000000100692310);
  IntentDialog.init(_:)(v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v3, 0, 1, v2);
  v9 = type metadata accessor for AppIntentError(0);
  v10 = sub_1000083D8((unint64_t *)&qword_1008296C8, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
  swift_allocError(v9, v10, 0, 0);
  v11 = sub_10024A1C8();
  ForegroundContinuableIntent.needsToContinueInForegroundError(_:requestConfirmation:continuation:)(v3, 0, &unk_1008296C0, 0, &type metadata for SetFitnessGoalIntent, v11);
  v12 = sub_10001BE90(v3, &qword_1008201C8);
  swift_willThrow(v12);
  v13 = *(_QWORD *)(v0 + 552);
  v14 = *(_QWORD *)(v0 + 528);
  v15 = *(_QWORD *)(v0 + 520);
  v17 = *(_QWORD *)(v0 + 488);
  v16 = *(_QWORD *)(v0 + 496);
  v19 = *(_QWORD *)(v0 + 472);
  v18 = *(_QWORD *)(v0 + 480);
  v21 = *(_QWORD *)(v0 + 456);
  v20 = *(_QWORD *)(v0 + 464);
  v23 = *(_QWORD *)(v0 + 448);
  v24 = *(_QWORD *)(v0 + 440);
  v25 = *(_QWORD *)(v0 + 432);
  v26 = *(_QWORD *)(v0 + 424);
  v27 = *(_QWORD *)(v0 + 416);
  v28 = *(_QWORD *)(v0 + 392);
  v29 = *(_QWORD *)(v0 + 384);
  swift_task_dealloc(*(_QWORD *)(v0 + 560));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100240664()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;

  v2 = objc_msgSend((id)objc_opt_self(NSUnitEnergy), "kilocalories");
  *(_QWORD *)(v1 + 592) = v2;
  v3 = (_QWORD *)swift_task_alloc(dword_100829704);
  *(_QWORD *)(v1 + 600) = v3;
  *v3 = v1;
  v3[1] = sub_100240884;
  return sub_100242AE8(v0, (uint64_t)v2);
}

uint64_t sub_100240738()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1008296FC);
  *(_QWORD *)(v0 + 640) = v2;
  *v2 = v0;
  v2[1] = sub_10024125C;
  return sub_100243630(v1);
}

uint64_t sub_100240784()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1008296F4);
  *(_QWORD *)(v0 + 656) = v2;
  *v2 = v0;
  v2[1] = sub_1002416C0;
  return sub_100243D14(v1);
}

uint64_t sub_1002407D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1008296EC);
  *(_QWORD *)(v0 + 672) = v2;
  *v2 = v0;
  v2[1] = sub_100241B24;
  return sub_100244404(v1);
}

uint64_t sub_10024081C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1008296DC);
  *(_QWORD *)(v0 + 688) = v2;
  *v2 = v0;
  v2[1] = sub_100241F88;
  return sub_100244AF4(v1);
}

uint64_t sub_100240884()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 600);
  *(_QWORD *)(*v1 + 608) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 584);
    v5 = *(_QWORD *)(v2 + 576);
    v6 = sub_1002423E8;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 584);
    v5 = *(_QWORD *)(v2 + 576);
    v6 = sub_1002408F8;
  }
  return swift_task_switch(v6, v5, v4);
}

id sub_1002408F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  void *v10;
  uint64_t v11;
  id v12;
  id result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v3 = *(_QWORD **)(v0 + 496);
  swift_release(*(_QWORD *)(v0 + 568));
  v4 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 272);
  v8 = *(_QWORD *)(v0 + 280);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  EntityProperty.wrappedValue.getter(v3);
  swift_release(v8);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  v9 = swift_release(v4);
  v49 = v5;
  v50 = v4;
  v47 = v7;
  v48 = v6;
  v46 = v8;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v9) == 1)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 496), &qword_100821E28);
    v10 = (void *)0x8000000100692340;
    v11 = 0xD000000000000014;
LABEL_5:
    v20 = *(_QWORD *)(v0 + 560);
    v21 = *(_QWORD *)(v0 + 552);
    v33 = *(_QWORD *)(v0 + 544);
    v34 = *(_QWORD *)(v0 + 536);
    v35 = *(_QWORD *)(v0 + 528);
    v36 = *(_QWORD *)(v0 + 520);
    v37 = *(_QWORD *)(v0 + 496);
    v38 = *(_QWORD *)(v0 + 488);
    v22 = *(_QWORD *)(v0 + 472);
    v51 = *(_QWORD *)(v0 + 480);
    v23 = *(_QWORD *)(v0 + 456);
    v24 = *(_QWORD *)(v0 + 464);
    v39 = *(_QWORD *)(v0 + 448);
    v40 = *(_QWORD *)(v0 + 440);
    v41 = *(_QWORD *)(v0 + 432);
    v42 = *(_QWORD *)(v0 + 424);
    v43 = *(_QWORD *)(v0 + 416);
    v44 = *(_QWORD *)(v0 + 392);
    v45 = *(_QWORD *)(v0 + 384);
    v25 = type metadata accessor for _GeneratedContentOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1);
    v26._countAndFlagsBits = 0xD00000000000001BLL;
    v26._object = (void *)0x80000001006923C0;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
    v27._countAndFlagsBits = v11;
    v27._object = v10;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v27);
    swift_bridgeObjectRelease(v10);
    v28._countAndFlagsBits = 46;
    v28._object = (void *)0xE100000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v28);
    IntentDialog.init(stringInterpolation:)(v23);
    _GeneratedContentFallback.init(_:localeIdentifier:)(v21, 0, 0);
    v29 = type metadata accessor for _GeneratedContentFallback(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v24, 0, 1, v29);
    v30 = sub_100240094();
    v31 = sub_10024A20C();
    IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_100243538, 0, v22, v24, &type metadata for SetFitnessGoalIntent, &type metadata for ActivityRingGoals, v30, v31);
    IntentDialog.init<A, B>(from:)(v51, &type metadata for SetFitnessGoalIntent, &type metadata for ActivityRingGoals, v30, v31);
    *(_QWORD *)(v0 + 288) = v50;
    *(_QWORD *)(v0 + 296) = v49;
    *(_QWORD *)(v0 + 304) = v48;
    *(_QWORD *)(v0 + 312) = v47;
    *(_QWORD *)(v0 + 320) = v46;
    static IntentResult.result<A>(value:dialog:)(v0 + 288, v20, &type metadata for ActivityRingGoals, v31);
    swift_release(v46);
    swift_release(v47);
    swift_release(v48);
    swift_release(v49);
    v32 = swift_release(v50);
    (*(void (**)(uint64_t, uint64_t, __n128))(v33 + 8))(v20, v34, v32);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v51);
    swift_task_dealloc(v22);
    swift_task_dealloc(v24);
    swift_task_dealloc(v23);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 512) + 32))(*(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 504));
  v12 = objc_msgSend(objc_allocWithZone((Class)NSEnergyFormatter), "init");
  objc_msgSend(v12, "setForFoodEnergyUse:", 1);
  result = objc_msgSend(v12, "numberFormatter");
  if (result)
  {
    v14 = result;
    v15 = *(_QWORD *)(v0 + 528);
    v16 = *(_QWORD *)(v0 + 504);
    v17 = *(_QWORD *)(v0 + 512);
    objc_msgSend(result, "setFormattingContext:", 1);

    v18 = objc_msgSend(v12, "stringFromValue:unit:", 1794, Measurement.value.getter(v16));
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v10 = v19;

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100240D70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 624);
  *(_QWORD *)(*v1 + 632) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 584);
    v5 = *(_QWORD *)(v2 + 576);
    v6 = sub_100242518;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 584);
    v5 = *(_QWORD *)(v2 + 576);
    v6 = sub_100240DE4;
  }
  return swift_task_switch(v6, v5, v4);
}

id sub_100240DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  void *v10;
  uint64_t v11;
  id v12;
  id result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v3 = *(_QWORD **)(v0 + 488);
  swift_release(*(_QWORD *)(v0 + 568));
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 240);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  EntityProperty.wrappedValue.getter(v3);
  swift_release(v8);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  v9 = swift_release(v4);
  v49 = v5;
  v50 = v4;
  v47 = v7;
  v48 = v6;
  v46 = v8;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v9) == 1)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 488), &qword_100821E28);
    v10 = (void *)0x8000000100692340;
    v11 = 0xD000000000000014;
LABEL_5:
    v20 = *(_QWORD *)(v0 + 560);
    v21 = *(_QWORD *)(v0 + 552);
    v33 = *(_QWORD *)(v0 + 544);
    v34 = *(_QWORD *)(v0 + 536);
    v35 = *(_QWORD *)(v0 + 528);
    v36 = *(_QWORD *)(v0 + 520);
    v37 = *(_QWORD *)(v0 + 496);
    v38 = *(_QWORD *)(v0 + 488);
    v22 = *(_QWORD *)(v0 + 472);
    v51 = *(_QWORD *)(v0 + 480);
    v23 = *(_QWORD *)(v0 + 456);
    v24 = *(_QWORD *)(v0 + 464);
    v39 = *(_QWORD *)(v0 + 448);
    v40 = *(_QWORD *)(v0 + 440);
    v41 = *(_QWORD *)(v0 + 432);
    v42 = *(_QWORD *)(v0 + 424);
    v43 = *(_QWORD *)(v0 + 416);
    v44 = *(_QWORD *)(v0 + 392);
    v45 = *(_QWORD *)(v0 + 384);
    v25 = type metadata accessor for _GeneratedContentOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1);
    v26._countAndFlagsBits = 0xD00000000000001BLL;
    v26._object = (void *)0x80000001006923C0;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
    v27._countAndFlagsBits = v11;
    v27._object = v10;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v27);
    swift_bridgeObjectRelease(v10);
    v28._countAndFlagsBits = 46;
    v28._object = (void *)0xE100000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v28);
    IntentDialog.init(stringInterpolation:)(v23);
    _GeneratedContentFallback.init(_:localeIdentifier:)(v21, 0, 0);
    v29 = type metadata accessor for _GeneratedContentFallback(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v24, 0, 1, v29);
    v30 = sub_100240094();
    v31 = sub_10024A20C();
    IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_100243538, 0, v22, v24, &type metadata for SetFitnessGoalIntent, &type metadata for ActivityRingGoals, v30, v31);
    IntentDialog.init<A, B>(from:)(v51, &type metadata for SetFitnessGoalIntent, &type metadata for ActivityRingGoals, v30, v31);
    *(_QWORD *)(v0 + 288) = v50;
    *(_QWORD *)(v0 + 296) = v49;
    *(_QWORD *)(v0 + 304) = v48;
    *(_QWORD *)(v0 + 312) = v47;
    *(_QWORD *)(v0 + 320) = v46;
    static IntentResult.result<A>(value:dialog:)(v0 + 288, v20, &type metadata for ActivityRingGoals, v31);
    swift_release(v46);
    swift_release(v47);
    swift_release(v48);
    swift_release(v49);
    v32 = swift_release(v50);
    (*(void (**)(uint64_t, uint64_t, __n128))(v33 + 8))(v20, v34, v32);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v51);
    swift_task_dealloc(v22);
    swift_task_dealloc(v24);
    swift_task_dealloc(v23);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 512) + 32))(*(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 504));
  v12 = objc_msgSend(objc_allocWithZone((Class)NSEnergyFormatter), "init");
  objc_msgSend(v12, "setForFoodEnergyUse:", 0);
  result = objc_msgSend(v12, "numberFormatter");
  if (result)
  {
    v14 = result;
    v15 = *(_QWORD *)(v0 + 520);
    v16 = *(_QWORD *)(v0 + 504);
    v17 = *(_QWORD *)(v0 + 512);
    objc_msgSend(result, "setFormattingContext:", 1);

    v18 = objc_msgSend(v12, "stringFromValue:unit:", 14, Measurement.value.getter(v16));
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v10 = v19;

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_10024125C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 640);
  *(_QWORD *)(*v1 + 648) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100242648;
  else
    v4 = sub_1002412C0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 576), *(_QWORD *)(v2 + 584));
}

uint64_t sub_1002412C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  int v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v1 = *(_QWORD **)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 408);
  swift_release(*(_QWORD *)(v0 + 568));
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 200);
  swift_retain(v5);
  swift_retain(v4);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  EntityProperty.wrappedValue.getter(v1);
  v46 = v8;
  swift_release(v8);
  v47 = v7;
  swift_release(v7);
  v48 = v6;
  swift_release(v6);
  v38 = v4;
  swift_release(v4);
  v49 = v5;
  v9 = swift_release(v5);
  v10 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, __n128))(v3 + 48))(v1, 1, v2, v9);
  v11 = *(_QWORD *)(v0 + 448);
  if (v10)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 448), &qword_100822C50);
    v12 = (void *)0x8000000100692340;
    v13 = 0xD000000000000014;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 408);
    v14 = *(_QWORD *)(v0 + 416);
    v16 = *(_QWORD *)(v0 + 400);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v14, *(_QWORD *)(v0 + 448), v16);
    sub_10001BE90(v11, &qword_100822C50);
    v13 = Measurement<>.formatted()(v16);
    v12 = v17;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v18 = *(_QWORD *)(v0 + 560);
  v19 = *(_QWORD *)(v0 + 552);
  v32 = *(_QWORD *)(v0 + 544);
  v33 = *(_QWORD *)(v0 + 536);
  v34 = *(_QWORD *)(v0 + 528);
  v35 = *(_QWORD *)(v0 + 520);
  v36 = *(_QWORD *)(v0 + 496);
  v37 = *(_QWORD *)(v0 + 488);
  v20 = *(_QWORD *)(v0 + 472);
  v50 = *(_QWORD *)(v0 + 480);
  v21 = *(_QWORD *)(v0 + 456);
  v22 = *(_QWORD *)(v0 + 464);
  v39 = *(_QWORD *)(v0 + 448);
  v40 = *(_QWORD *)(v0 + 440);
  v41 = *(_QWORD *)(v0 + 432);
  v42 = *(_QWORD *)(v0 + 424);
  v43 = *(_QWORD *)(v0 + 416);
  v44 = *(_QWORD *)(v0 + 392);
  v45 = *(_QWORD *)(v0 + 384);
  v23 = type metadata accessor for _GeneratedContentOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 1, 1, v23);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1);
  v24._countAndFlagsBits = 0xD00000000000001BLL;
  v24._object = (void *)0x80000001006923C0;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
  v25._countAndFlagsBits = v13;
  v25._object = v12;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v25);
  swift_bridgeObjectRelease(v12);
  v26._countAndFlagsBits = 46;
  v26._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
  IntentDialog.init(stringInterpolation:)(v21);
  _GeneratedContentFallback.init(_:localeIdentifier:)(v19, 0, 0);
  v27 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v22, 0, 1, v27);
  v28 = sub_100240094();
  v29 = sub_10024A20C();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_100243D08, 0, v20, v22, &type metadata for SetFitnessGoalIntent, &type metadata for ActivityRingGoals, v28, v29);
  IntentDialog.init<A, B>(from:)(v50, &type metadata for SetFitnessGoalIntent, &type metadata for ActivityRingGoals, v28, v29);
  *(_QWORD *)(v0 + 288) = v49;
  *(_QWORD *)(v0 + 296) = v38;
  *(_QWORD *)(v0 + 304) = v48;
  *(_QWORD *)(v0 + 312) = v47;
  *(_QWORD *)(v0 + 320) = v46;
  static IntentResult.result<A>(value:dialog:)(v0 + 288, v18, &type metadata for ActivityRingGoals, v29);
  swift_release(v46);
  swift_release(v47);
  swift_release(v48);
  swift_release(v38);
  v30 = swift_release(v49);
  (*(void (**)(uint64_t, uint64_t, __n128))(v32 + 8))(v18, v33, v30);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v50);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v21);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002416C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 656);
  *(_QWORD *)(*v1 + 664) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100242770;
  else
    v4 = sub_100241724;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 576), *(_QWORD *)(v2 + 584));
}

uint64_t sub_100241724()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  int v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = *(_QWORD **)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 408);
  swift_release(*(_QWORD *)(v0 + 568));
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 160);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  EntityProperty.wrappedValue.getter(v1);
  swift_release(v8);
  v46 = v7;
  swift_release(v7);
  v34 = v6;
  swift_release(v6);
  v47 = v5;
  swift_release(v5);
  v48 = v4;
  v9 = swift_release(v4);
  v10 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, __n128))(v3 + 48))(v1, 1, v2, v9);
  v11 = *(_QWORD *)(v0 + 440);
  if (v10)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 440), &qword_100822C50);
    v12 = (void *)0x8000000100692340;
    v13 = 0xD000000000000014;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 408);
    v14 = *(_QWORD *)(v0 + 416);
    v16 = *(_QWORD *)(v0 + 400);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v14, *(_QWORD *)(v0 + 440), v16);
    sub_10001BE90(v11, &qword_100822C50);
    v13 = Measurement<>.formatted()(v16);
    v12 = v17;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v18 = *(_QWORD *)(v0 + 560);
  v19 = *(_QWORD *)(v0 + 552);
  v32 = *(_QWORD *)(v0 + 544);
  v33 = *(_QWORD *)(v0 + 536);
  v35 = *(_QWORD *)(v0 + 528);
  v36 = *(_QWORD *)(v0 + 520);
  v37 = *(_QWORD *)(v0 + 496);
  v38 = *(_QWORD *)(v0 + 488);
  v20 = *(_QWORD *)(v0 + 472);
  v49 = *(_QWORD *)(v0 + 480);
  v21 = *(_QWORD *)(v0 + 456);
  v22 = *(_QWORD *)(v0 + 464);
  v39 = *(_QWORD *)(v0 + 448);
  v40 = *(_QWORD *)(v0 + 440);
  v41 = *(_QWORD *)(v0 + 432);
  v42 = *(_QWORD *)(v0 + 424);
  v43 = *(_QWORD *)(v0 + 416);
  v44 = *(_QWORD *)(v0 + 392);
  v45 = *(_QWORD *)(v0 + 384);
  v23 = type metadata accessor for _GeneratedContentOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 1, 1, v23);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 1);
  v24._countAndFlagsBits = 0xD00000000000001FLL;
  v24._object = (void *)0x80000001006923A0;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
  v25._countAndFlagsBits = v13;
  v25._object = v12;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v25);
  swift_bridgeObjectRelease(v12);
  v26._countAndFlagsBits = 46;
  v26._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
  IntentDialog.init(stringInterpolation:)(v21);
  _GeneratedContentFallback.init(_:localeIdentifier:)(v19, 0, 0);
  v27 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v22, 0, 1, v27);
  v28 = sub_100240094();
  v29 = sub_10024A20C();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_1002443F8, 0, v20, v22, &type metadata for SetFitnessGoalIntent, &type metadata for ActivityRingGoals, v28, v29);
  IntentDialog.init<A, B>(from:)(v49, &type metadata for SetFitnessGoalIntent, &type metadata for ActivityRingGoals, v28, v29);
  *(_QWORD *)(v0 + 288) = v48;
  *(_QWORD *)(v0 + 296) = v47;
  *(_QWORD *)(v0 + 304) = v34;
  *(_QWORD *)(v0 + 312) = v46;
  *(_QWORD *)(v0 + 320) = v8;
  static IntentResult.result<A>(value:dialog:)(v0 + 288, v18, &type metadata for ActivityRingGoals, v29);
  swift_release(v8);
  swift_release(v46);
  swift_release(v34);
  swift_release(v47);
  v30 = swift_release(v48);
  (*(void (**)(uint64_t, uint64_t, __n128))(v32 + 8))(v18, v33, v30);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v49);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v21);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100241B24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 672);
  *(_QWORD *)(*v1 + 680) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100242898;
  else
    v4 = sub_100241B88;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 576), *(_QWORD *)(v2 + 584));
}

uint64_t sub_100241B88()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  int v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = *(_QWORD **)(v0 + 432);
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 408);
  swift_release(*(_QWORD *)(v0 + 568));
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 120);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v7);
  swift_retain(v6);
  swift_retain(v8);
  EntityProperty.wrappedValue.getter(v1);
  swift_release(v8);
  v34 = v6;
  swift_release(v6);
  v46 = v7;
  swift_release(v7);
  v47 = v5;
  swift_release(v5);
  v48 = v4;
  v9 = swift_release(v4);
  v10 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, __n128))(v3 + 48))(v1, 1, v2, v9);
  v11 = *(_QWORD *)(v0 + 432);
  if (v10)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 432), &qword_100822C50);
    v12 = (void *)0x8000000100692340;
    v13 = 0xD000000000000014;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 408);
    v14 = *(_QWORD *)(v0 + 416);
    v16 = *(_QWORD *)(v0 + 400);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v14, *(_QWORD *)(v0 + 432), v16);
    sub_10001BE90(v11, &qword_100822C50);
    v13 = Measurement<>.formatted()(v16);
    v12 = v17;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v18 = *(_QWORD *)(v0 + 560);
  v19 = *(_QWORD *)(v0 + 552);
  v32 = *(_QWORD *)(v0 + 544);
  v33 = *(_QWORD *)(v0 + 536);
  v35 = *(_QWORD *)(v0 + 528);
  v36 = *(_QWORD *)(v0 + 520);
  v37 = *(_QWORD *)(v0 + 496);
  v38 = *(_QWORD *)(v0 + 488);
  v20 = *(_QWORD *)(v0 + 472);
  v49 = *(_QWORD *)(v0 + 480);
  v21 = *(_QWORD *)(v0 + 456);
  v22 = *(_QWORD *)(v0 + 464);
  v39 = *(_QWORD *)(v0 + 448);
  v40 = *(_QWORD *)(v0 + 440);
  v41 = *(_QWORD *)(v0 + 432);
  v42 = *(_QWORD *)(v0 + 424);
  v43 = *(_QWORD *)(v0 + 416);
  v44 = *(_QWORD *)(v0 + 392);
  v45 = *(_QWORD *)(v0 + 384);
  v23 = type metadata accessor for _GeneratedContentOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 1, 1, v23);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1);
  v24._countAndFlagsBits = 0xD00000000000001CLL;
  v24._object = (void *)0x8000000100692380;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
  v25._countAndFlagsBits = v13;
  v25._object = v12;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v25);
  swift_bridgeObjectRelease(v12);
  v26._countAndFlagsBits = 46;
  v26._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
  IntentDialog.init(stringInterpolation:)(v21);
  _GeneratedContentFallback.init(_:localeIdentifier:)(v19, 0, 0);
  v27 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v22, 0, 1, v27);
  v28 = sub_100240094();
  v29 = sub_10024A20C();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_100244AE8, 0, v20, v22, &type metadata for SetFitnessGoalIntent, &type metadata for ActivityRingGoals, v28, v29);
  IntentDialog.init<A, B>(from:)(v49, &type metadata for SetFitnessGoalIntent, &type metadata for ActivityRingGoals, v28, v29);
  *(_QWORD *)(v0 + 288) = v48;
  *(_QWORD *)(v0 + 296) = v47;
  *(_QWORD *)(v0 + 304) = v46;
  *(_QWORD *)(v0 + 312) = v34;
  *(_QWORD *)(v0 + 320) = v8;
  static IntentResult.result<A>(value:dialog:)(v0 + 288, v18, &type metadata for ActivityRingGoals, v29);
  swift_release(v8);
  swift_release(v34);
  swift_release(v46);
  swift_release(v47);
  v30 = swift_release(v48);
  (*(void (**)(uint64_t, uint64_t, __n128))(v32 + 8))(v18, v33, v30);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v49);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v21);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100241F88()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 688);
  *(_QWORD *)(*v1 + 696) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1002429C0;
  else
    v4 = sub_100241FEC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 576), *(_QWORD *)(v2 + 584));
}

uint64_t sub_100241FEC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  int v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = *(_QWORD **)(v0 + 424);
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 408);
  swift_release(*(_QWORD *)(v0 + 568));
  v4 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 336);
  v7 = *(_QWORD *)(v0 + 344);
  v6 = *(_QWORD *)(v0 + 352);
  v8 = *(_QWORD *)(v0 + 360);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v7);
  swift_retain(v6);
  swift_retain(v8);
  EntityProperty.wrappedValue.getter(v1);
  v45 = v8;
  swift_release(v8);
  swift_release(v6);
  v46 = v7;
  swift_release(v7);
  v47 = v5;
  swift_release(v5);
  v48 = v4;
  v9 = swift_release(v4);
  v10 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, __n128))(v3 + 48))(v1, 1, v2, v9);
  v11 = *(_QWORD *)(v0 + 424);
  if (v10)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 424), &qword_100822C50);
    v12 = (void *)0x8000000100692340;
    v13 = 0xD000000000000014;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 408);
    v14 = *(_QWORD *)(v0 + 416);
    v16 = *(_QWORD *)(v0 + 400);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v14, *(_QWORD *)(v0 + 424), v16);
    sub_10001BE90(v11, &qword_100822C50);
    v13 = Measurement<>.formatted()(v16);
    v12 = v17;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v18 = *(_QWORD *)(v0 + 560);
  v19 = *(_QWORD *)(v0 + 552);
  v32 = *(_QWORD *)(v0 + 544);
  v33 = *(_QWORD *)(v0 + 536);
  v34 = *(_QWORD *)(v0 + 528);
  v35 = *(_QWORD *)(v0 + 520);
  v36 = *(_QWORD *)(v0 + 496);
  v37 = *(_QWORD *)(v0 + 488);
  v20 = *(_QWORD *)(v0 + 472);
  v49 = *(_QWORD *)(v0 + 480);
  v21 = *(_QWORD *)(v0 + 456);
  v22 = *(_QWORD *)(v0 + 464);
  v38 = *(_QWORD *)(v0 + 448);
  v39 = *(_QWORD *)(v0 + 440);
  v40 = *(_QWORD *)(v0 + 432);
  v41 = *(_QWORD *)(v0 + 424);
  v42 = *(_QWORD *)(v0 + 416);
  v43 = *(_QWORD *)(v0 + 392);
  v44 = *(_QWORD *)(v0 + 384);
  v23 = type metadata accessor for _GeneratedContentOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 1, 1, v23);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1);
  v24._countAndFlagsBits = 0xD00000000000001BLL;
  v24._object = (void *)0x8000000100692360;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
  v25._countAndFlagsBits = v13;
  v25._object = v12;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v25);
  swift_bridgeObjectRelease(v12);
  v26._countAndFlagsBits = 46;
  v26._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
  IntentDialog.init(stringInterpolation:)(v21);
  _GeneratedContentFallback.init(_:localeIdentifier:)(v19, 0, 0);
  v27 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v22, 0, 1, v27);
  v28 = sub_100240094();
  v29 = sub_10024A20C();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_1002451D4, 0, v20, v22, &type metadata for SetFitnessGoalIntent, &type metadata for ActivityRingGoals, v28, v29);
  IntentDialog.init<A, B>(from:)(v49, &type metadata for SetFitnessGoalIntent, &type metadata for ActivityRingGoals, v28, v29);
  *(_QWORD *)(v0 + 288) = v48;
  *(_QWORD *)(v0 + 296) = v47;
  *(_QWORD *)(v0 + 304) = v46;
  *(_QWORD *)(v0 + 312) = v6;
  *(_QWORD *)(v0 + 320) = v45;
  static IntentResult.result<A>(value:dialog:)(v0 + 288, v18, &type metadata for ActivityRingGoals, v29);
  swift_release(v45);
  swift_release(v6);
  swift_release(v46);
  swift_release(v47);
  v30 = swift_release(v48);
  (*(void (**)(uint64_t, uint64_t, __n128))(v32 + 8))(v18, v33, v30);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v49);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v21);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002423E8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(void **)(v0 + 592);
  swift_release(*(_QWORD *)(v0 + 568));

  v2 = *(_QWORD *)(v0 + 552);
  v3 = *(_QWORD *)(v0 + 528);
  v4 = *(_QWORD *)(v0 + 520);
  v6 = *(_QWORD *)(v0 + 488);
  v5 = *(_QWORD *)(v0 + 496);
  v8 = *(_QWORD *)(v0 + 472);
  v7 = *(_QWORD *)(v0 + 480);
  v10 = *(_QWORD *)(v0 + 456);
  v9 = *(_QWORD *)(v0 + 464);
  v12 = *(_QWORD *)(v0 + 448);
  v13 = *(_QWORD *)(v0 + 440);
  v14 = *(_QWORD *)(v0 + 432);
  v15 = *(_QWORD *)(v0 + 424);
  v16 = *(_QWORD *)(v0 + 416);
  v17 = *(_QWORD *)(v0 + 392);
  v18 = *(_QWORD *)(v0 + 384);
  swift_task_dealloc(*(_QWORD *)(v0 + 560));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100242518()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(void **)(v0 + 616);
  swift_release(*(_QWORD *)(v0 + 568));

  v2 = *(_QWORD *)(v0 + 552);
  v3 = *(_QWORD *)(v0 + 528);
  v4 = *(_QWORD *)(v0 + 520);
  v6 = *(_QWORD *)(v0 + 488);
  v5 = *(_QWORD *)(v0 + 496);
  v8 = *(_QWORD *)(v0 + 472);
  v7 = *(_QWORD *)(v0 + 480);
  v10 = *(_QWORD *)(v0 + 456);
  v9 = *(_QWORD *)(v0 + 464);
  v12 = *(_QWORD *)(v0 + 448);
  v13 = *(_QWORD *)(v0 + 440);
  v14 = *(_QWORD *)(v0 + 432);
  v15 = *(_QWORD *)(v0 + 424);
  v16 = *(_QWORD *)(v0 + 416);
  v17 = *(_QWORD *)(v0 + 392);
  v18 = *(_QWORD *)(v0 + 384);
  swift_task_dealloc(*(_QWORD *)(v0 + 560));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100242648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_release(*(_QWORD *)(v0 + 568));
  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 520);
  v5 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 496);
  v7 = *(_QWORD *)(v0 + 472);
  v6 = *(_QWORD *)(v0 + 480);
  v9 = *(_QWORD *)(v0 + 456);
  v8 = *(_QWORD *)(v0 + 464);
  v11 = *(_QWORD *)(v0 + 448);
  v12 = *(_QWORD *)(v0 + 440);
  v13 = *(_QWORD *)(v0 + 432);
  v14 = *(_QWORD *)(v0 + 424);
  v15 = *(_QWORD *)(v0 + 416);
  v16 = *(_QWORD *)(v0 + 392);
  v17 = *(_QWORD *)(v0 + 384);
  swift_task_dealloc(*(_QWORD *)(v0 + 560));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100242770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_release(*(_QWORD *)(v0 + 568));
  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 520);
  v5 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 496);
  v7 = *(_QWORD *)(v0 + 472);
  v6 = *(_QWORD *)(v0 + 480);
  v9 = *(_QWORD *)(v0 + 456);
  v8 = *(_QWORD *)(v0 + 464);
  v11 = *(_QWORD *)(v0 + 448);
  v12 = *(_QWORD *)(v0 + 440);
  v13 = *(_QWORD *)(v0 + 432);
  v14 = *(_QWORD *)(v0 + 424);
  v15 = *(_QWORD *)(v0 + 416);
  v16 = *(_QWORD *)(v0 + 392);
  v17 = *(_QWORD *)(v0 + 384);
  swift_task_dealloc(*(_QWORD *)(v0 + 560));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100242898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_release(*(_QWORD *)(v0 + 568));
  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 520);
  v5 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 496);
  v7 = *(_QWORD *)(v0 + 472);
  v6 = *(_QWORD *)(v0 + 480);
  v9 = *(_QWORD *)(v0 + 456);
  v8 = *(_QWORD *)(v0 + 464);
  v11 = *(_QWORD *)(v0 + 448);
  v12 = *(_QWORD *)(v0 + 440);
  v13 = *(_QWORD *)(v0 + 432);
  v14 = *(_QWORD *)(v0 + 424);
  v15 = *(_QWORD *)(v0 + 416);
  v16 = *(_QWORD *)(v0 + 392);
  v17 = *(_QWORD *)(v0 + 384);
  swift_task_dealloc(*(_QWORD *)(v0 + 560));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002429C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_release(*(_QWORD *)(v0 + 568));
  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 520);
  v5 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 496);
  v7 = *(_QWORD *)(v0 + 472);
  v6 = *(_QWORD *)(v0 + 480);
  v9 = *(_QWORD *)(v0 + 456);
  v8 = *(_QWORD *)(v0 + 464);
  v11 = *(_QWORD *)(v0 + 448);
  v12 = *(_QWORD *)(v0 + 440);
  v13 = *(_QWORD *)(v0 + 432);
  v14 = *(_QWORD *)(v0 + 424);
  v15 = *(_QWORD *)(v0 + 416);
  v16 = *(_QWORD *)(v0 + 392);
  v17 = *(_QWORD *)(v0 + 384);
  swift_task_dealloc(*(_QWORD *)(v0 + 560));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100242AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100047110(&qword_100822C50) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[14] = swift_task_alloc(v4);
  v3[15] = swift_task_alloc(v4);
  v3[16] = swift_task_alloc(v4);
  v3[17] = swift_task_alloc(v4);
  v5 = sub_100047110(&qword_100821E28);
  v3[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v3[19] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[20] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[21] = swift_task_alloc(v8);
  v3[22] = swift_task_alloc(v8);
  return swift_task_switch(sub_100242BCC, 0, 0);
}

uint64_t sub_100242BCC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 184) = sub_10001E724(0, &qword_100821ED0, NSUnitEnergy_ptr);
  v2 = objc_msgSend((id)objc_opt_self(NSUnitEnergy), "kilojoules");
  LOBYTE(v1) = static NSObject.== infix(_:_:)(v1, v2);

  if ((v1 & 1) != 0)
  {
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 72));
    v3 = *(_QWORD *)(v0 + 72);
    v4 = *(_BYTE *)(v0 + 80);
    v5 = (_QWORD *)swift_task_alloc(dword_100829724);
    *(_QWORD *)(v0 + 192) = v5;
    *v5 = v0;
    v5[1] = sub_100242CF0;
    v6 = v3;
    v7 = v4;
    v8 = 20;
  }
  else
  {
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 56));
    v9 = *(_QWORD *)(v0 + 56);
    v10 = *(_BYTE *)(v0 + 64);
    v11 = (_QWORD *)swift_task_alloc(dword_100829724);
    *(_QWORD *)(v0 + 208) = v11;
    *v11 = v0;
    v11[1] = sub_100242FD4;
    v6 = v9;
    v7 = v10;
    v8 = 10;
  }
  return sub_10024539C(v6, v7, v8, 0);
}

uint64_t sub_100242CF0(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 192);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
  {
    v8 = *(_QWORD *)(v4 + 168);
    v7 = *(_QWORD *)(v4 + 176);
    v10 = *(_QWORD *)(v4 + 136);
    v9 = *(_QWORD *)(v4 + 144);
    v12 = *(_QWORD *)(v4 + 120);
    v11 = *(_QWORD *)(v4 + 128);
    v13 = *(_QWORD *)(v4 + 112);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v6 + 8))();
  }
  else
  {
    *(double *)(v4 + 200) = a1;
    return swift_task_switch(sub_100242DC8, 0, 0);
  }
}

id sub_100242DC8()
{
  double *v0;
  double v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  Class isa;
  Class v15;
  id v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  double **v19;
  uint64_t v20;

  v1 = v0[25];
  v2 = objc_msgSend((id)objc_opt_self(HKUnit), "jouleUnitWithMetricPrefix:", 9);
  v3 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v2, v1);
  v0[28] = v0[25];
  v4 = v3;
  *((_QWORD *)v0 + 29) = v4;

  v5 = sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(v5), "calorieGoal");
  if (result)
  {
    v7 = result;
    v9 = *((_QWORD *)v0 + 21);
    v8 = *((_QWORD *)v0 + 22);
    v11 = *((_QWORD *)v0 + 19);
    v10 = *((_QWORD *)v0 + 20);
    v20 = *((_QWORD *)v0 + 13);
    v12 = v4;
    v13 = Date.init()(v12);
    Date.init()(v13);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v15 = Date._bridgeToObjectiveC()().super.isa;
    v16 = objc_msgSend((id)objc_opt_self(HKQuantitySample), "quantitySampleWithType:quantity:startDate:endDate:", v7, v12, isa, v15);
    *((_QWORD *)v0 + 30) = v16;

    v17 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v17(v9, v11);
    v17(v8, v11);
    v18 = swift_task_alloc(32);
    *((_QWORD *)v0 + 31) = v18;
    *(_QWORD *)(v18 + 16) = v20;
    *(_QWORD *)(v18 + 24) = v16;
    v19 = (double **)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *((_QWORD *)v0 + 32) = v19;
    *v19 = v0;
    v19[1] = (double *)sub_1002432B4;
    return (id)withCheckedContinuation<A>(isolation:function:_:)((char *)v0 + 65, 0, 0, 0xD000000000000010, 0x80000001006923E0, sub_10024A2BC, v18, &type metadata for Bool);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100242FD4(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 208);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
  {
    v8 = *(_QWORD *)(v4 + 168);
    v7 = *(_QWORD *)(v4 + 176);
    v10 = *(_QWORD *)(v4 + 136);
    v9 = *(_QWORD *)(v4 + 144);
    v12 = *(_QWORD *)(v4 + 120);
    v11 = *(_QWORD *)(v4 + 128);
    v13 = *(_QWORD *)(v4 + 112);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v6 + 8))();
  }
  else
  {
    *(double *)(v4 + 216) = a1;
    return swift_task_switch(sub_1002430AC, 0, 0);
  }
}

id sub_1002430AC()
{
  double *v0;
  double v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  Class isa;
  Class v15;
  id v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  double **v19;
  uint64_t v20;

  v1 = v0[27];
  v2 = objc_msgSend((id)objc_opt_self(HKUnit), "kilocalorieUnit");
  v3 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v2, v1);
  v0[28] = v0[27];
  v4 = v3;
  *((_QWORD *)v0 + 29) = v4;

  v5 = sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(v5), "calorieGoal");
  if (result)
  {
    v7 = result;
    v9 = *((_QWORD *)v0 + 21);
    v8 = *((_QWORD *)v0 + 22);
    v11 = *((_QWORD *)v0 + 19);
    v10 = *((_QWORD *)v0 + 20);
    v20 = *((_QWORD *)v0 + 13);
    v12 = v4;
    v13 = Date.init()(v12);
    Date.init()(v13);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v15 = Date._bridgeToObjectiveC()().super.isa;
    v16 = objc_msgSend((id)objc_opt_self(HKQuantitySample), "quantitySampleWithType:quantity:startDate:endDate:", v7, v12, isa, v15);
    *((_QWORD *)v0 + 30) = v16;

    v17 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v17(v9, v11);
    v17(v8, v11);
    v18 = swift_task_alloc(32);
    *((_QWORD *)v0 + 31) = v18;
    *(_QWORD *)(v18 + 16) = v20;
    *(_QWORD *)(v18 + 24) = v16;
    v19 = (double **)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *((_QWORD *)v0 + 32) = v19;
    *v19 = v0;
    v19[1] = (double *)sub_1002432B4;
    return (id)withCheckedContinuation<A>(isolation:function:_:)((char *)v0 + 65, 0, 0, 0xD000000000000010, 0x80000001006923E0, sub_10024A2BC, v18, &type metadata for Bool);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002432B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 248);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 256));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100243310, 0, 0);
}

uint64_t sub_100243310()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v12;
  __int128 v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *(void **)(v0 + 232);
  v1 = *(void **)(v0 + 240);
  if (*(_BYTE *)(v0 + 65) == 1)
  {
    v26 = *(_QWORD *)(v0 + 176);
    v27 = *(_QWORD *)(v0 + 168);
    v24 = *(void **)(v0 + 232);
    v25 = *(void **)(v0 + 240);
    v3 = *(_QWORD *)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 88);
    Measurement.init(value:unit:)(*(id *)(v0 + 96), *(_QWORD *)(v0 + 184), *(double *)(v0 + 224));
    v9 = sub_100047110(&qword_100821E30);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    v10 = sub_100047110(&qword_100821E40);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v11(v3, 1, 1, v10);
    v11(v6, 1, 1, v10);
    v11(v5, 1, 1, v10);
    v11(v7, 1, 1, v10);
    sub_1004D87BC(v4, v3, v6, v5, v7, (uint64_t *)(v0 + 16));

    v12 = *(_OWORD *)(v0 + 16);
    v13 = *(_OWORD *)(v0 + 32);
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v0 + 48);
    *(_OWORD *)v8 = v12;
    *(_OWORD *)(v8 + 16) = v13;
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v4);
    swift_task_dealloc(v3);
    swift_task_dealloc(v6);
    swift_task_dealloc(v5);
    swift_task_dealloc(v7);
  }
  else
  {
    v14 = sub_10024A2C4();
    v15 = swift_allocError(&type metadata for ActivityRingError, v14, 0, 0);
    *v16 = 4;
    swift_willThrow(v15);

    v17 = *(_QWORD *)(v0 + 168);
    v19 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(v0 + 144);
    v21 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 128);
    v22 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 176));
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100243538()
{
  return sub_100243544((uint64_t)&unk_100630278);
}

uint64_t sub_100243544(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t KeyPath;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = sub_100047110(&qword_100829708);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(a1);
  v7 = sub_10024A278();
  static _DialogBuilderEntity.buildExpression<A>(_:)(KeyPath, v7);
  swift_release(KeyPath);
  v8 = sub_10024A20C();
  v9 = sub_100028384(&qword_100829718, &qword_100829708, (uint64_t)&protocol conformance descriptor for _NLGRepresentationEntity<A>);
  static _DialogBuilderEntity.buildBlock<A>(_:)(v5, &type metadata for ActivityRingGoals, v2, v8, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100243630(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2[9] = a1;
  v2[10] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_100047110(&qword_100822C50) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v3);
  v2[12] = swift_task_alloc(v3);
  v2[13] = swift_task_alloc(v3);
  v2[14] = swift_task_alloc(v3);
  v4 = sub_100047110(&qword_100821E28);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v2[16] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[17] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v7);
  v2[19] = swift_task_alloc(v7);
  return swift_task_switch(sub_100243710, 0, 0);
}

uint64_t sub_100243710()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_BYTE *)(v0 + 64);
  v3 = (_QWORD *)swift_task_alloc(dword_100829724);
  *(_QWORD *)(v0 + 160) = v3;
  *v3 = v0;
  v3[1] = sub_100243788;
  return sub_10024539C(v1, v2, 10, 1);
}

uint64_t sub_100243788(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(*v2 + 160);
  v4 = *v2;
  *(double *)(v4 + 168) = a1;
  swift_task_dealloc(v3);
  if (!v1)
    return swift_task_switch(sub_10024385C, 0, 0);
  v5 = *(_QWORD *)(v4 + 144);
  v7 = *(_QWORD *)(v4 + 112);
  v6 = *(_QWORD *)(v4 + 120);
  v9 = *(_QWORD *)(v4 + 96);
  v8 = *(_QWORD *)(v4 + 104);
  v10 = *(_QWORD *)(v4 + 88);
  swift_task_dealloc(*(_QWORD *)(v4 + 152));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

id sub_10024385C()
{
  double *v0;
  uint64_t v1;
  id result;
  void *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  Class v14;
  id v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  double **v18;
  uint64_t v19;

  v1 = sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(v1), "moveMinuteGoal");
  if (result)
  {
    v3 = result;
    v4 = v0[21];
    v6 = *((_QWORD *)v0 + 18);
    v5 = *((_QWORD *)v0 + 19);
    v8 = *((_QWORD *)v0 + 16);
    v7 = *((_QWORD *)v0 + 17);
    v19 = *((_QWORD *)v0 + 10);
    v9 = objc_msgSend((id)objc_opt_self(HKUnit), "minuteUnit");
    v10 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v9, v4);

    v12 = Date.init()(v11);
    Date.init()(v12);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v14 = Date._bridgeToObjectiveC()().super.isa;
    v15 = objc_msgSend((id)objc_opt_self(HKQuantitySample), "quantitySampleWithType:quantity:startDate:endDate:", v3, v10, isa, v14);
    *((_QWORD *)v0 + 22) = v15;

    v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v16(v6, v8);
    v16(v5, v8);
    v17 = swift_task_alloc(32);
    *((_QWORD *)v0 + 23) = v17;
    *(_QWORD *)(v17 + 16) = v19;
    *(_QWORD *)(v17 + 24) = v15;
    v18 = (double **)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *((_QWORD *)v0 + 24) = v18;
    *v18 = v0;
    v18[1] = (double *)sub_100243A54;
    return (id)withCheckedContinuation<A>(isolation:function:_:)((char *)v0 + 65, 0, 0, 0xD000000000000010, 0x80000001006923E0, sub_10024A9C4, v17, &type metadata for Bool);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100243A54()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 192));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100243AB0, 0, 0);
}

uint64_t sub_100243AB0()
{
  uint64_t v0;
  void *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(void **)(v0 + 176);
  if (*(_BYTE *)(v0 + 65) == 1)
  {
    v2 = *(double *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 152);
    v28 = *(_QWORD *)(v0 + 144);
    v3 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 120);
    v26 = *(void **)(v0 + 176);
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 72);
    v9 = sub_100047110(&qword_100821E30);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
    v10 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "minutes");
    v11 = sub_10001E724(0, &qword_100821E88, NSUnitDuration_ptr);
    Measurement.init(value:unit:)(v10, v11, v2);
    v12 = sub_100047110(&qword_100821E40);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v13(v3, 0, 1, v12);
    v13(v6, 1, 1, v12);
    v13(v5, 1, 1, v12);
    v13(v7, 1, 1, v12);
    sub_1004D87BC(v4, v3, v6, v5, v7, (uint64_t *)(v0 + 16));

    v14 = *(_OWORD *)(v0 + 16);
    v15 = *(_OWORD *)(v0 + 32);
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v0 + 48);
    *(_OWORD *)v8 = v14;
    *(_OWORD *)(v8 + 16) = v15;
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v4);
    swift_task_dealloc(v3);
    swift_task_dealloc(v6);
    swift_task_dealloc(v5);
    swift_task_dealloc(v7);
  }
  else
  {
    v16 = sub_10024A2C4();
    v17 = swift_allocError(&type metadata for ActivityRingError, v16, 0, 0);
    *v18 = 4;
    swift_willThrow(v17);

    v19 = *(_QWORD *)(v0 + 144);
    v21 = *(_QWORD *)(v0 + 112);
    v20 = *(_QWORD *)(v0 + 120);
    v23 = *(_QWORD *)(v0 + 96);
    v22 = *(_QWORD *)(v0 + 104);
    v24 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100243D08()
{
  return sub_100243544((uint64_t)&unk_1006302D0);
}

uint64_t sub_100243D14(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2[9] = a1;
  v2[10] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_100047110(&qword_100822C50) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v3);
  v2[12] = swift_task_alloc(v3);
  v2[13] = swift_task_alloc(v3);
  v2[14] = swift_task_alloc(v3);
  v4 = sub_100047110(&qword_100821E28);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v2[16] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[17] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v7);
  v2[19] = swift_task_alloc(v7);
  return swift_task_switch(sub_100243DF4, 0, 0);
}

uint64_t sub_100243DF4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_BYTE *)(v0 + 64);
  v3 = (_QWORD *)swift_task_alloc(dword_100829724);
  *(_QWORD *)(v0 + 160) = v3;
  *v3 = v0;
  v3[1] = sub_100243E6C;
  return sub_10024539C(v1, v2, 5, 2);
}

uint64_t sub_100243E6C(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(*v2 + 160);
  v4 = *v2;
  *(double *)(v4 + 168) = a1;
  swift_task_dealloc(v3);
  if (!v1)
    return swift_task_switch(sub_100243F40, 0, 0);
  v5 = *(_QWORD *)(v4 + 144);
  v7 = *(_QWORD *)(v4 + 112);
  v6 = *(_QWORD *)(v4 + 120);
  v9 = *(_QWORD *)(v4 + 96);
  v8 = *(_QWORD *)(v4 + 104);
  v10 = *(_QWORD *)(v4 + 88);
  swift_task_dealloc(*(_QWORD *)(v4 + 152));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

id sub_100243F40()
{
  double *v0;
  uint64_t v1;
  id result;
  void *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  Class v14;
  id v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  double **v18;
  uint64_t v19;

  v1 = sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(v1), "exerciseGoal");
  if (result)
  {
    v3 = result;
    v4 = v0[21];
    v6 = *((_QWORD *)v0 + 18);
    v5 = *((_QWORD *)v0 + 19);
    v8 = *((_QWORD *)v0 + 16);
    v7 = *((_QWORD *)v0 + 17);
    v19 = *((_QWORD *)v0 + 10);
    v9 = objc_msgSend((id)objc_opt_self(HKUnit), "minuteUnit");
    v10 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v9, v4);

    v12 = Date.init()(v11);
    Date.init()(v12);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v14 = Date._bridgeToObjectiveC()().super.isa;
    v15 = objc_msgSend((id)objc_opt_self(HKQuantitySample), "quantitySampleWithType:quantity:startDate:endDate:", v3, v10, isa, v14);
    *((_QWORD *)v0 + 22) = v15;

    v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v16(v6, v8);
    v16(v5, v8);
    v17 = swift_task_alloc(32);
    *((_QWORD *)v0 + 23) = v17;
    *(_QWORD *)(v17 + 16) = v19;
    *(_QWORD *)(v17 + 24) = v15;
    v18 = (double **)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *((_QWORD *)v0 + 24) = v18;
    *v18 = v0;
    v18[1] = (double *)sub_100244138;
    return (id)withCheckedContinuation<A>(isolation:function:_:)((char *)v0 + 65, 0, 0, 0xD000000000000010, 0x80000001006923E0, sub_10024A9C4, v17, &type metadata for Bool);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100244138()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 192));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100244194, 0, 0);
}

uint64_t sub_100244194()
{
  uint64_t v0;
  void *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(void **)(v0 + 176);
  if (*(_BYTE *)(v0 + 65) == 1)
  {
    v2 = *(double *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 152);
    v28 = *(_QWORD *)(v0 + 144);
    v3 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 104);
    v25 = *(_QWORD *)(v0 + 96);
    v26 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 72);
    v7 = sub_100047110(&qword_100821E30);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
    v8 = sub_100047110(&qword_100821E40);
    v24 = v1;
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
    v9(v3, 1, 1, v8);
    v10 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "minutes");
    v11 = sub_10001E724(0, &qword_100821E88, NSUnitDuration_ptr);
    Measurement.init(value:unit:)(v10, v11, v2);
    v9(v5, 0, 1, v8);
    v9(v25, 1, 1, v8);
    v9(v26, 1, 1, v8);
    sub_1004D87BC(v4, v3, v5, v25, v26, (uint64_t *)(v0 + 16));

    v12 = *(_OWORD *)(v0 + 16);
    v13 = *(_OWORD *)(v0 + 32);
    *(_QWORD *)(v6 + 32) = *(_QWORD *)(v0 + 48);
    *(_OWORD *)v6 = v12;
    *(_OWORD *)(v6 + 16) = v13;
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v4);
    swift_task_dealloc(v3);
    swift_task_dealloc(v5);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
  }
  else
  {
    v14 = sub_10024A2C4();
    v15 = swift_allocError(&type metadata for ActivityRingError, v14, 0, 0);
    *v16 = 4;
    swift_willThrow(v15);

    v17 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v21 = *(_QWORD *)(v0 + 96);
    v20 = *(_QWORD *)(v0 + 104);
    v22 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002443F8()
{
  return sub_100243544((uint64_t)&unk_1006302F8);
}

uint64_t sub_100244404(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2[9] = a1;
  v2[10] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_100047110(&qword_100822C50) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v3);
  v2[12] = swift_task_alloc(v3);
  v2[13] = swift_task_alloc(v3);
  v2[14] = swift_task_alloc(v3);
  v4 = sub_100047110(&qword_100821E28);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v2[16] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[17] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v7);
  v2[19] = swift_task_alloc(v7);
  return swift_task_switch(sub_1002444E4, 0, 0);
}

uint64_t sub_1002444E4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_BYTE *)(v0 + 64);
  v3 = (_QWORD *)swift_task_alloc(dword_100829724);
  *(_QWORD *)(v0 + 160) = v3;
  *v3 = v0;
  v3[1] = sub_10024455C;
  return sub_10024539C(v1, v2, 1, 3);
}

uint64_t sub_10024455C(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(*v2 + 160);
  v4 = *v2;
  *(double *)(v4 + 168) = a1;
  swift_task_dealloc(v3);
  if (!v1)
    return swift_task_switch(sub_100244630, 0, 0);
  v5 = *(_QWORD *)(v4 + 144);
  v7 = *(_QWORD *)(v4 + 112);
  v6 = *(_QWORD *)(v4 + 120);
  v9 = *(_QWORD *)(v4 + 96);
  v8 = *(_QWORD *)(v4 + 104);
  v10 = *(_QWORD *)(v4 + 88);
  swift_task_dealloc(*(_QWORD *)(v4 + 152));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

id sub_100244630()
{
  double *v0;
  uint64_t v1;
  id result;
  void *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  Class v14;
  id v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  double **v18;
  uint64_t v19;

  v1 = sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(v1), "standGoal");
  if (result)
  {
    v3 = result;
    v4 = v0[21];
    v6 = *((_QWORD *)v0 + 18);
    v5 = *((_QWORD *)v0 + 19);
    v8 = *((_QWORD *)v0 + 16);
    v7 = *((_QWORD *)v0 + 17);
    v19 = *((_QWORD *)v0 + 10);
    v9 = objc_msgSend((id)objc_opt_self(HKUnit), "countUnit");
    v10 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v9, v4);

    v12 = Date.init()(v11);
    Date.init()(v12);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v14 = Date._bridgeToObjectiveC()().super.isa;
    v15 = objc_msgSend((id)objc_opt_self(HKQuantitySample), "quantitySampleWithType:quantity:startDate:endDate:", v3, v10, isa, v14);
    *((_QWORD *)v0 + 22) = v15;

    v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v16(v6, v8);
    v16(v5, v8);
    v17 = swift_task_alloc(32);
    *((_QWORD *)v0 + 23) = v17;
    *(_QWORD *)(v17 + 16) = v19;
    *(_QWORD *)(v17 + 24) = v15;
    v18 = (double **)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *((_QWORD *)v0 + 24) = v18;
    *v18 = v0;
    v18[1] = (double *)sub_100244828;
    return (id)withCheckedContinuation<A>(isolation:function:_:)((char *)v0 + 65, 0, 0, 0xD000000000000010, 0x80000001006923E0, sub_10024A9C4, v17, &type metadata for Bool);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100244828()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 192));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100244884, 0, 0);
}

uint64_t sub_100244884()
{
  uint64_t v0;
  void *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(void **)(v0 + 176);
  if (*(_BYTE *)(v0 + 65) == 1)
  {
    v2 = *(double *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 152);
    v28 = *(_QWORD *)(v0 + 144);
    v3 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 104);
    v26 = *(void **)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 96);
    v25 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 72);
    v8 = sub_100047110(&qword_100821E30);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
    v9 = sub_100047110(&qword_100821E40);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    v10(v3, 1, 1, v9);
    v10(v5, 1, 1, v9);
    v11 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "hours");
    v12 = sub_10001E724(0, &qword_100821E88, NSUnitDuration_ptr);
    Measurement.init(value:unit:)(v11, v12, v2);
    v10(v6, 0, 1, v9);
    v10(v25, 1, 1, v9);
    sub_1004D87BC(v4, v3, v5, v6, v25, (uint64_t *)(v0 + 16));

    v13 = *(_OWORD *)(v0 + 16);
    v14 = *(_OWORD *)(v0 + 32);
    *(_QWORD *)(v7 + 32) = *(_QWORD *)(v0 + 48);
    *(_OWORD *)v7 = v13;
    *(_OWORD *)(v7 + 16) = v14;
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v4);
    swift_task_dealloc(v3);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v25);
  }
  else
  {
    v15 = sub_10024A2C4();
    v16 = swift_allocError(&type metadata for ActivityRingError, v15, 0, 0);
    *v17 = 4;
    swift_willThrow(v16);

    v18 = *(_QWORD *)(v0 + 144);
    v20 = *(_QWORD *)(v0 + 112);
    v19 = *(_QWORD *)(v0 + 120);
    v22 = *(_QWORD *)(v0 + 96);
    v21 = *(_QWORD *)(v0 + 104);
    v23 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100244AE8()
{
  return sub_100243544((uint64_t)&unk_100630320);
}

uint64_t sub_100244AF4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2[9] = a1;
  v2[10] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_100047110(&qword_100822C50) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v3);
  v2[12] = swift_task_alloc(v3);
  v2[13] = swift_task_alloc(v3);
  v2[14] = swift_task_alloc(v3);
  v4 = sub_100047110(&qword_100821E28);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v2[16] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[17] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v7);
  v2[19] = swift_task_alloc(v7);
  return swift_task_switch(sub_100244BD4, 0, 0);
}

uint64_t sub_100244BD4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_BYTE *)(v0 + 64);
  v3 = (_QWORD *)swift_task_alloc(dword_100829724);
  *(_QWORD *)(v0 + 160) = v3;
  *v3 = v0;
  v3[1] = sub_100244C4C;
  return sub_10024539C(v1, v2, 1, 3);
}

uint64_t sub_100244C4C(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(*v2 + 160);
  v4 = *v2;
  *(double *)(v4 + 168) = a1;
  swift_task_dealloc(v3);
  if (!v1)
    return swift_task_switch(sub_100244D20, 0, 0);
  v5 = *(_QWORD *)(v4 + 144);
  v7 = *(_QWORD *)(v4 + 112);
  v6 = *(_QWORD *)(v4 + 120);
  v9 = *(_QWORD *)(v4 + 96);
  v8 = *(_QWORD *)(v4 + 104);
  v10 = *(_QWORD *)(v4 + 88);
  swift_task_dealloc(*(_QWORD *)(v4 + 152));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

id sub_100244D20()
{
  double *v0;
  uint64_t v1;
  id result;
  void *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  Class v14;
  id v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  double **v18;
  uint64_t v19;

  v1 = sub_10001E724(0, &qword_100821E90, HKQuantityType_ptr);
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(v1), "standGoal");
  if (result)
  {
    v3 = result;
    v4 = v0[21];
    v6 = *((_QWORD *)v0 + 18);
    v5 = *((_QWORD *)v0 + 19);
    v8 = *((_QWORD *)v0 + 16);
    v7 = *((_QWORD *)v0 + 17);
    v19 = *((_QWORD *)v0 + 10);
    v9 = objc_msgSend((id)objc_opt_self(HKUnit), "countUnit");
    v10 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v9, v4);

    v12 = Date.init()(v11);
    Date.init()(v12);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v14 = Date._bridgeToObjectiveC()().super.isa;
    v15 = objc_msgSend((id)objc_opt_self(HKQuantitySample), "quantitySampleWithType:quantity:startDate:endDate:", v3, v10, isa, v14);
    *((_QWORD *)v0 + 22) = v15;

    v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v16(v6, v8);
    v16(v5, v8);
    v17 = swift_task_alloc(32);
    *((_QWORD *)v0 + 23) = v17;
    *(_QWORD *)(v17 + 16) = v19;
    *(_QWORD *)(v17 + 24) = v15;
    v18 = (double **)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *((_QWORD *)v0 + 24) = v18;
    *v18 = v0;
    v18[1] = (double *)sub_100244F18;
    return (id)withCheckedContinuation<A>(isolation:function:_:)((char *)v0 + 65, 0, 0, 0xD000000000000010, 0x80000001006923E0, sub_10024A9C4, v17, &type metadata for Bool);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100244F18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 192));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100244F74, 0, 0);
}

uint64_t sub_100244F74()
{
  uint64_t v0;
  void *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(void **)(v0 + 176);
  if (*(_BYTE *)(v0 + 65) == 1)
  {
    v2 = *(double *)(v0 + 168);
    v28 = *(_QWORD *)(v0 + 152);
    v29 = *(_QWORD *)(v0 + 144);
    v3 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 104);
    v26 = v6;
    v7 = *(_QWORD *)(v0 + 88);
    v27 = *(void **)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 72);
    v9 = sub_100047110(&qword_100821E30);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
    v10 = sub_100047110(&qword_100821E40);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v11(v3, 1, 1, v10);
    v11(v6, 1, 1, v10);
    v11(v5, 1, 1, v10);
    v12 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "hours");
    v13 = sub_10001E724(0, &qword_100821E88, NSUnitDuration_ptr);
    Measurement.init(value:unit:)(v12, v13, v2);
    v11(v7, 0, 1, v10);
    sub_1004D87BC(v4, v3, v26, v5, v7, (uint64_t *)(v0 + 16));

    v14 = *(_OWORD *)(v0 + 16);
    v15 = *(_OWORD *)(v0 + 32);
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v0 + 48);
    *(_OWORD *)v8 = v14;
    *(_OWORD *)(v8 + 16) = v15;
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v4);
    swift_task_dealloc(v3);
    swift_task_dealloc(v26);
    swift_task_dealloc(v5);
    swift_task_dealloc(v7);
  }
  else
  {
    v16 = sub_10024A2C4();
    v17 = swift_allocError(&type metadata for ActivityRingError, v16, 0, 0);
    *v18 = 4;
    swift_willThrow(v17);

    v19 = *(_QWORD *)(v0 + 144);
    v21 = *(_QWORD *)(v0 + 112);
    v20 = *(_QWORD *)(v0 + 120);
    v23 = *(_QWORD *)(v0 + 96);
    v22 = *(_QWORD *)(v0 + 104);
    v24 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002451D4()
{
  return sub_100243544((uint64_t)&unk_100630348);
}

uint64_t sub_1002451E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100047110(&qword_10081E640);
  v0[2] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for URL(0);
  v0[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v0[4] = v3;
  v0[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v0[6] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_100245294, v5, v6);
}

uint64_t sub_100245294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));
  URL.init(string:)(0xD00000000000001BLL, 0x8000000100692400);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 16), &qword_10081E640);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 32))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
    if (qword_10081DDA8 != -1)
      swift_once(&qword_10081DDA8, sub_10044A45C);
    v5 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 24);
    sub_10044AD80(v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  v7 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024539C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  *(_QWORD *)(v5 + 104) = a4;
  *(_QWORD *)(v5 + 112) = v4;
  *(_BYTE *)(v5 + 144) = a2;
  *(_QWORD *)(v5 + 88) = a1;
  *(_QWORD *)(v5 + 96) = a3;
  v7 = type metadata accessor for LocalizedStringResource(0);
  *(_QWORD *)(v5 + 120) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_1008201C8);
  *(_QWORD *)(v5 + 128) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)swift_task_alloc(dword_10082973C);
  *(_QWORD *)(v5 + 136) = v9;
  *v9 = v5;
  v9[1] = sub_100245438;
  return sub_100245690(a4);
}

uint64_t sub_100245438(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 136);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
  {
    v7 = *(_QWORD *)(v4 + 120);
    swift_task_dealloc(*(_QWORD *)(v4 + 128));
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v6 + 8))();
  }
  else
  {
    *(_BYTE *)(v4 + 145) = a1 & 1;
    return swift_task_switch(sub_1002454C8, 0, 0);
  }
}

uint64_t sub_1002454C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  long double v3;
  long double v4;
  uint64_t (*v5)(__n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((*(_BYTE *)(v0 + 144) & 1) != 0 || (*(_BYTE *)(v0 + 145) & 1) != 0)
  {
    v8 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 104);
    v9 = *(_QWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)v9;
    v12 = *(_OWORD *)(v9 + 32);
    v11 = *(_OWORD *)(v9 + 48);
    v13 = *(_OWORD *)(v9 + 16);
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(v9 + 64);
    *(_OWORD *)(v0 + 48) = v12;
    *(_OWORD *)(v0 + 64) = v11;
    *(_OWORD *)(v0 + 32) = v13;
    LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x8000000100692310);
    IntentDialog.init(_:)(v8);
    v14 = type metadata accessor for IntentDialog(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
    v15 = swift_allocObject(&unk_100790B70, 24, 7);
    *(_QWORD *)(v15 + 16) = v10;
    v16 = type metadata accessor for AppIntentError(0);
    v17 = sub_1000083D8((unint64_t *)&qword_1008296C8, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v16, v17, 0, 0);
    v18 = sub_10024A1C8();
    ForegroundContinuableIntent.needsToContinueInForegroundError(_:requestConfirmation:continuation:)(v7, 0, &unk_100829748, v15, &type metadata for SetFitnessGoalIntent, v18);
    swift_release(v15);
    v19 = sub_10001BE90(v7, &qword_1008201C8);
    swift_willThrow(v19);
    v20 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v20);
    v5 = *(uint64_t (**)(__n128))(v0 + 8);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 120);
    v2 = *(_QWORD *)(v0 + 128);
    v3 = (double)*(uint64_t *)(v0 + 88);
    v4 = v3 - fmod(v3, (double)*(uint64_t *)(v0 + 96));
    swift_task_dealloc(v2);
    swift_task_dealloc(v1);
    v5 = *(uint64_t (**)(__n128))(v0 + 8);
    v6.n128_f64[0] = v4;
  }
  return v5(v6);
}

uint64_t sub_100245690(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_100047110(&qword_100823CA8);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100823CB0);
  v2[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[9] = v6;
  v2[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100245720, 0, 0);
}

id sub_100245720()
{
  _QWORD *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  _QWORD *v16;

  result = objc_msgSend((id)objc_opt_self(HKObjectType), "activityGoalScheduleType");
  if (result)
  {
    v2 = result;
    v4 = v0[9];
    v3 = v0[10];
    v5 = v0[8];
    v6 = sub_10001E724(0, &qword_100823568, HKSample_ptr);
    static HKSamplePredicate.sample(type:predicate:)(v2, 0, v6);

    v7 = sub_100047110(&qword_100823CC0);
    v8 = *(unsigned __int8 *)(v4 + 80);
    v9 = (v8 + 32) & ~v8;
    v10 = swift_allocObject(v7, v9 + *(_QWORD *)(v4 + 72), v8 | 7);
    *(_OWORD *)(v10 + 16) = xmmword_100622F90;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v10 + v9, v3, v5);
    v11 = sub_100047110(&qword_100823CC8);
    v12 = sub_100047110(&qword_100823CB8);
    v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) | 7);
    *(_OWORD *)(v13 + 16) = xmmword_100622F90;
    KeyPath = swift_getKeyPath(&unk_1006302A8);
    SortDescriptor.init<A>(_:order:)(KeyPath, 1);
    HKSampleQueryDescriptor.init(predicates:sortDescriptors:limit:)(v10, v13, 0, 0, v6);
    AppDependency.wrappedValue.getter(v0 + 2);
    v15 = v0[2];
    v0[11] = v15;
    v16 = (_QWORD *)swift_task_alloc(async function pointer to HKSampleQueryDescriptor.result(for:)[1]);
    v0[12] = v16;
    *v16 = v0;
    v16[1] = sub_1002458EC;
    return (id)HKSampleQueryDescriptor.result(for:)(v15, v0[5]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002458EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)();

  v4 = *v2;
  v6 = *(void **)(*v2 + 88);
  v5 = *(_QWORD *)(*v2 + 96);
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc(v5);

  if (v1)
  {
    v7 = sub_100245AF8;
  }
  else
  {
    *(_QWORD *)(v4 + 112) = a1;
    v7 = sub_100245964;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100245964()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  _BOOL8 v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = (uint64_t)sub_1003470A4(v1);
  v3 = swift_bridgeObjectRelease(v1);
  if (v2)
  {
    v4 = v2 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v2 >> 62)
      goto LABEL_17;
    v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v17))
    {
      v6 = 0;
      while (1)
      {
        v7 = (v2 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v2)
           : *(id *)(v2 + 8 * v6 + 32);
        v8 = v7;
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          break;
        v10 = *(id *)(v0 + 24);
        v11 = objc_msgSend(v7, "goalType");

        v12 = v11 == v10;
        ++v6;
        if (v11 == v10 || v9 == v5)
          goto LABEL_22;
      }
      __break(1u);
LABEL_17:
      if (v2 >= 0)
        v17 = v4;
      else
        v17 = v2;
      swift_bridgeObjectRetain(v2);
    }
    v12 = 0;
LABEL_22:
    v19 = *(_QWORD *)(v0 + 72);
    v18 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 56);
    v20 = *(_QWORD *)(v0 + 64);
    v22 = *(_QWORD *)(v0 + 40);
    v23 = *(_QWORD *)(v0 + 48);
    v24 = swift_bridgeObjectRelease(v2);
    (*(void (**)(uint64_t, uint64_t, __n128))(v23 + 8))(v21, v22, v24);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 80);
    v16 = *(_QWORD *)(v0 + 64);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40), v3);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    v12 = 0;
  }
  v25 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v12);
}

uint64_t sub_100245AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(v4, *(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_100245B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[5];
  uint64_t v14;

  v5 = sub_100047110(&qword_100829730);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  AppDependency.wrappedValue.getter(aBlock);
  v8 = (void *)aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = swift_allocObject(&unk_100790B20, v10 + v7, v9 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_10024A314;
  v14 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000064EC;
  aBlock[3] = &unk_100790B38;
  v12 = _Block_copy(aBlock);
  objc_msgSend(v8, "saveObject:withCompletion:", a3, v12, swift_release(v14).n128_f64[0]);
  _Block_release(v12);

}

uint64_t sub_100245CB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[2] = a1;
  v2 = sub_100047110(&qword_10081E640);
  v1[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v1[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[5] = v4;
  v1[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v1[7] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100245D6C, v6, v7);
}

uint64_t sub_100245D6C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 56));
  v2 = 0x8000000100692420;
  v3 = 0xD00000000000001BLL;
  v4 = 0x8000000100692400;
  if (v1 == 2)
  {
    v3 = 0xD000000000000024;
    v4 = 0x8000000100692450;
  }
  if (v1 == 3)
    v3 = 0xD000000000000021;
  else
    v2 = v4;
  if (v1 >= 2)
    v5 = v3;
  else
    v5 = 0xD000000000000020;
  if (v1 >= 2)
    v6 = v2;
  else
    v6 = 0x8000000100692480;
  v7 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 24);
  URL.init(string:)(v5, v6);
  v10 = swift_bridgeObjectRelease(v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v9, 1, v7, v10) == 1)
  {
    sub_10001BE90(*(_QWORD *)(v0 + 24), &qword_10081E640);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 32))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    if (qword_10081DDA8 != -1)
      swift_once(&qword_10081DDA8, sub_10044A45C);
    v12 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 32);
    sub_10044AD80(v11);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  v14 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100245EE0@<X0>(uint64_t a1@<X8>)
{
  return sub_100238540(&qword_10081D8A8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_10086A340, (uint64_t)sub_10023E5B4, a1);
}

uint64_t sub_100245F04(uint64_t a1, uint64_t a2)
{
  return sub_100245F28(a1, a2, (uint64_t)&unk_100630370, &qword_100829750, &qword_100829758, (uint64_t)sub_10023E5D8);
}

uint64_t sub_100245F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t a6)
{
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;

  KeyPath = swift_getKeyPath(a3);
  v11 = sub_100047110(a4);
  v12 = sub_100028384(a5, a4, (uint64_t)&protocol conformance descriptor for ParameterSummaryTupleCaseCondition<A, B, C>);
  return ParameterSummarySwitchCondition.init(_:_:)(KeyPath, a6, 0, v11, a2, v12);
}

uint64_t sub_100245FB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  _QWORD *v6;

  v4 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v1 + 64);
  v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v5;
  v6 = (_QWORD *)swift_task_alloc(dword_1008296A4);
  *(_QWORD *)(v2 + 88) = v6;
  *v6 = v2;
  v6[1] = sub_10024602C;
  return sub_10024019C(a1);
}

uint64_t sub_10024602C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

__n128 sub_100246074@<Q0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __n128 result;
  _OWORD v4[4];
  uint64_t v5;

  sub_100249800((uint64_t *)v4);
  v2 = v4[3];
  *(_OWORD *)(a1 + 32) = v4[2];
  *(_OWORD *)(a1 + 48) = v2;
  *(_QWORD *)(a1 + 64) = v5;
  result = (__n128)v4[1];
  *(_OWORD *)a1 = v4[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1002460C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100240094();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for SetFitnessGoalIntent.ActivityRingOptionsProvider()
{
  return &type metadata for SetFitnessGoalIntent.ActivityRingOptionsProvider;
}

uint64_t destroy for SetFitnessGoalIntent(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  swift_release(a1[6]);
  swift_release(a1[7]);
  return swift_release(a1[8]);
}

uint64_t *initializeWithCopy for SetFitnessGoalIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v7 = a2[4];
  v8 = a2[5];
  a1[4] = v7;
  a1[5] = v8;
  v9 = a2[6];
  v10 = a2[7];
  a1[6] = v9;
  a1[7] = v10;
  v11 = a2[8];
  a1[8] = v11;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v11);
  return a1;
}

uint64_t *assignWithCopy for SetFitnessGoalIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[4];
  v13 = a1[4];
  a1[4] = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = a2[5];
  v15 = a1[5];
  a1[5] = v14;
  swift_retain(v14);
  swift_release(v15);
  v16 = a2[6];
  v17 = a1[6];
  a1[6] = v16;
  swift_retain(v16);
  swift_release(v17);
  v18 = a2[7];
  v19 = a1[7];
  a1[7] = v18;
  swift_retain(v18);
  swift_release(v19);
  v20 = a2[8];
  v21 = a1[8];
  a1[8] = v20;
  swift_retain(v20);
  swift_release(v21);
  return a1;
}

_QWORD *assignWithTake for SetFitnessGoalIntent(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  swift_release(a1[4]);
  v6 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  swift_release(v6);
  swift_release(a1[6]);
  v7 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  swift_release(v7);
  v8 = a1[8];
  a1[8] = *(_QWORD *)(a2 + 64);
  swift_release(v8);
  return a1;
}

ValueMetadata *type metadata accessor for SetFitnessGoalIntent()
{
  return &type metadata for SetFitnessGoalIntent;
}

uint64_t storeEnumTagSinglePayload for SetFitnessGoalIntent.ActivityRingEnum(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_100246408 + 4 * byte_10062F41C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_10024643C + 4 * byte_10062F417[v4]))();
}

uint64_t sub_10024643C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100246444(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10024644CLL);
  return result;
}

uint64_t sub_100246458(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100246460);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100246464(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10024646C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SetFitnessGoalIntent.ActivityRingEnum()
{
  return &type metadata for SetFitnessGoalIntent.ActivityRingEnum;
}

ValueMetadata *type metadata accessor for AdjustStandGoalIntent()
{
  return &type metadata for AdjustStandGoalIntent;
}

ValueMetadata *type metadata accessor for AdjustExerciseGoalIntent()
{
  return &type metadata for AdjustExerciseGoalIntent;
}

ValueMetadata *type metadata accessor for AdjustMoveGoalIntent()
{
  return &type metadata for AdjustMoveGoalIntent;
}

ValueMetadata *type metadata accessor for ResumeRingsIntent()
{
  return &type metadata for ResumeRingsIntent;
}

uint64_t destroy for PauseYourRingsIntent(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  return swift_release(a1[4]);
}

uint64_t *initializeWithCopy for PauseYourRingsIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v7 = a2[4];
  a1[4] = v7;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t *assignWithCopy for PauseYourRingsIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[4];
  v13 = a1[4];
  a1[4] = v12;
  swift_retain(v12);
  swift_release(v13);
  return a1;
}

_QWORD *assignWithTake for PauseYourRingsIntent(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = a1[4];
  a1[4] = *(_QWORD *)(a2 + 32);
  swift_release(v6);
  return a1;
}

ValueMetadata *type metadata accessor for PauseYourRingsIntent()
{
  return &type metadata for PauseYourRingsIntent;
}

uint64_t storeEnumTagSinglePayload for PauseYourRingsIntent.PauseRingsPeriodEnum(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1002466EC + 4 * byte_10062F426[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100246720 + 4 * byte_10062F421[v4]))();
}

uint64_t sub_100246720(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100246728(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100246730);
  return result;
}

uint64_t sub_10024673C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100246744);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100246748(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100246750(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PauseYourRingsIntent.PauseRingsPeriodEnum()
{
  return &type metadata for PauseYourRingsIntent.PauseRingsPeriodEnum;
}

ValueMetadata *type metadata accessor for PauseRingsIntent()
{
  return &type metadata for PauseRingsIntent;
}

ValueMetadata *type metadata accessor for OpenActivityRingIntent()
{
  return &type metadata for OpenActivityRingIntent;
}

uint64_t sub_10024678C()
{
  return sub_100028384(&qword_1008295B0, &qword_1008295B8, (uint64_t)&protocol conformance descriptor for ParameterSummarySwitchCondition<A, B, C>);
}

uint64_t sub_1002467B8()
{
  return sub_100028384(&qword_1008295C0, &qword_1008295C8, (uint64_t)&protocol conformance descriptor for <> IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1002467E4()
{
  return sub_100028384(&qword_1008295D0, &qword_1008295C8, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100246810()
{
  return sub_100028384(&qword_1008295D8, &qword_1008295E0, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_10024683C()
{
  return sub_100028384(&qword_1008295E8, &qword_1008295F0, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100246868()
{
  return sub_100028384(&qword_1008295F8, &qword_100829600, (uint64_t)&protocol conformance descriptor for <> IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100246894()
{
  return sub_100028384(&qword_100829608, &qword_100829610, (uint64_t)&protocol conformance descriptor for ParameterSummarySwitchCondition<A, B, C>);
}

uint64_t sub_1002468C0()
{
  return sub_100028384(&qword_100829618, &qword_100829620, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1002468EC()
{
  return sub_100028384(&qword_100829628, &qword_100829620, (uint64_t)&protocol conformance descriptor for <> IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100246918()
{
  return sub_100028384(&qword_100829630, &qword_100829638, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100246944()
{
  return sub_100028384(&qword_100829640, &qword_100829648, (uint64_t)&protocol conformance descriptor for ParameterSummaryWhenCondition<A, B, C>);
}

uint64_t sub_100246970()
{
  return sub_100028384((unint64_t *)&qword_100821350, &qword_100821358, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_10024699C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v19 = *(_QWORD *)(v0 - 8);
  v20 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100829650);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_100829678);
  LocalizedStringResource.init(stringLiteral:)(1702125892, 0xE400000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000022, 0x80000001006922E0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for IntentParameter.DateKind.date<A>(_:), v6);
  v17 = type metadata accessor for IntentDialog(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 1, 1, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v20);
  return IntentParameter<>.init(title:description:kind:requestValueDialog:inputConnectionBehavior:)(v16, v12, v9, v5, v2);
}

uint64_t sub_100246BCC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v26 = *(_QWORD *)(v0 - 8);
  v27 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_100829680);
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_1008201E0);
  v16 = type metadata accessor for AppDependencyManager(0);
  v28 = 0u;
  v29 = 0u;
  v30 = 0;
  v17 = static AppDependencyManager.shared.getter(v16);
  v23 = AppDependency.__allocating_init(key:manager:)(&v28, v17);
  v18 = sub_100047110(&qword_100829660);
  v30 = 0;
  v28 = 0u;
  v29 = 0u;
  v19 = static AppDependencyManager.shared.getter(v18);
  AppDependency.__allocating_init(key:manager:)(&v28, v19);
  sub_100047110(&qword_100829688);
  LocalizedStringResource.init(stringLiteral:)(0x6F207265626D754ELL, 0xEE00737961442066);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100692170);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  *(_QWORD *)&v28 = 1;
  BYTE8(v28) = 0;
  v20 = type metadata accessor for IntentDialog(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v5, enum case for IntentParameter.IntControlStyle.stepper<A>(_:), v25);
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v27);
  IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)(v15, v11, &v28, v5, 1, 90, 0, v8, v2);
  return v23;
}

unint64_t sub_100246EB4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  _BYTE *v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v30[2];
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);

  v0 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v0);
  v2 = (char *)v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v3);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_1008298D8);
  v11 = sub_100047110(&qword_1008298E0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = v11;
  v14 = *(_QWORD *)(v12 + 72);
  v15 = *(unsigned __int8 *)(v12 + 80);
  v16 = (v15 + 32) & ~v15;
  v34 = 4 * v14;
  v17 = swift_allocObject(v10, v16 + 5 * v14, v15 | 7);
  v35 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_100624EB0;
  v18 = (_BYTE *)(v17 + v16);
  v32 = &v18[*(int *)(v13 + 48)];
  v33 = v18;
  *v18 = 0;
  LocalizedStringResource.init(stringLiteral:)(0x61646F5420726F46, 0xE900000000000079);
  v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v36(v5, 1, 1, v6);
  v19 = type metadata accessor for DisplayRepresentation.Image(0);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v2, 1, 1, v19);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v30[1] = v13;
  v31 = v14;
  v18[v14] = 1;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000012, 0x8000000100692720);
  v21 = v36;
  v36(v5, 1, 1, v6);
  v20(v2, 1, 1, v19);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v22 = 2 * v14;
  v23 = v33;
  v33[v22] = 2;
  LocalizedStringResource.init(stringLiteral:)(0x654E206C69746E55, 0xEF6B656557207478);
  v21(v5, 1, 1, v6);
  v24 = v20;
  v20(v2, 1, 1, v19);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v25 = v23;
  v23[v22 + v31] = 3;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000010, 0x8000000100692740);
  v26 = v6;
  v27 = v6;
  v28 = v36;
  v36(v5, 1, 1, v27);
  v24(v2, 1, 1, v19);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  v25[v34] = 4;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x8000000100692760);
  v28(v5, 1, 1, v26);
  v24(v2, 1, 1, v19);
  DisplayRepresentation.init(title:subtitle:image:)(v9, v5, v2);
  return sub_1004362C8(v35);
}

unint64_t sub_100247294(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100781E50, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

uint64_t sub_1002472DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *);
  uint64_t v47;
  char *v48;
  uint64_t result;
  uint64_t *v50;
  uint64_t v51;
  void (*v52)(char *);
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;

  v69 = a1;
  v1 = sub_100047110(&qword_100829650);
  v67 = *(_QWORD *)(v1 - 8);
  v68 = v1;
  __chkstk_darwin(v1);
  v66 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_100829658);
  v64 = *(_QWORD *)(v3 - 8);
  v65 = v3;
  __chkstk_darwin(v3);
  v63 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for InputConnectionBehavior(0);
  v60 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v71 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v6);
  v59 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v58 = (char *)&v52 - v9;
  v10 = sub_100047110(&qword_1008201D0);
  v11 = __chkstk_darwin(v10);
  v57 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for LocalizedStringResource.BundleDescription(0, v11);
  v13 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Locale(0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for String.LocalizationValue(0, v17);
  __chkstk_darwin(v20);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for LocalizedStringResource(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_1008201E0);
  v27 = type metadata accessor for AppDependencyManager(0);
  v73 = 0u;
  v74 = 0u;
  v75 = 0;
  v28 = static AppDependencyManager.shared.getter(v27);
  v62 = AppDependency.__allocating_init(key:manager:)(&v73, v28);
  v29 = sub_100047110(&qword_100829660);
  v75 = 0;
  v73 = 0u;
  v74 = 0u;
  v30 = static AppDependencyManager.shared.getter(v29);
  v61 = AppDependency.__allocating_init(key:manager:)(&v73, v30);
  v56 = sub_100047110(&qword_100829668);
  v32 = String.LocalizationValue.init(stringLiteral:)(0x646F69726550, 0xE600000000000000, v31);
  static Locale.current.getter(v32);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for LocalizedStringResource.BundleDescription.main(_:), v70);
  v33 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0, 0, v19, v15, "Duration presets used in the Pause Rings AppIntent", 50, 2);
  v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  v34 = v57;
  v53 = v23;
  v54(v57, 1, 1, v23);
  LOBYTE(v73) = 0;
  v35 = type metadata accessor for IntentDialog(0);
  v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v37 = v58;
  v36(v58, 1, 1, v35);
  v38 = v59;
  v36(v59, 1, 1, v35);
  v55 = v36;
  LODWORD(v70) = enum case for InputConnectionBehavior.default(_:);
  v52 = *(void (**)(char *))(v60 + 104);
  v40 = v71;
  v39 = v72;
  v52(v71);
  v41 = sub_1002395F4();
  v60 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v33, v34, &v73, v37, v38, v40, &off_100781F10, v41);
  v59 = (char *)sub_100047110(&qword_100829670);
  LocalizedStringResource.init(stringLiteral:)(0x6F207265626D754ELL, 0xEE00737961442066);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100692170);
  v42 = v54;
  v54(v34, 0, 1, v23);
  *(_QWORD *)&v73 = 0;
  BYTE8(v73) = 1;
  v36(v37, 1, 1, v35);
  v43 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v63, enum case for IntentParameter.IntControlStyle.stepper<A>(_:), v65);
  v44 = v71;
  v45 = v39;
  v46 = v52;
  ((void (*)(char *, _QWORD, uint64_t))v52)(v71, v70, v45);
  v47 = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)(v33, v34, &v73, v43, 1, 90, 0, v37, v44);
  sub_100047110(&qword_100829678);
  LocalizedStringResource.init(stringLiteral:)(1702125892, 0xE400000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000041, 0x80000001006921A0);
  v42(v34, 0, 1, v53);
  v48 = v66;
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v66, enum case for IntentParameter.DateKind.date<A>(_:), v68);
  v55(v37, 1, 1, v35);
  ((void (*)(char *, _QWORD, uint64_t))v46)(v44, v70, v72);
  result = IntentParameter<>.init(title:description:kind:requestValueDialog:inputConnectionBehavior:)(v33, v34, v48, v37, v44);
  v50 = v69;
  v51 = v61;
  *v69 = v62;
  v50[1] = v51;
  v50[2] = v60;
  v50[3] = v47;
  v50[4] = result;
  return result;
}

uint64_t sub_10024792C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[3] = a1;
  v2 = sub_100047110(&qword_100823CA8);
  v1[4] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[5] = v3;
  v1[6] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100823CB0);
  v1[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[8] = v5;
  v1[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002479BC, 0, 0);
}

id sub_1002479BC()
{
  _QWORD *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  _QWORD *v16;

  result = objc_msgSend((id)objc_opt_self(HKObjectType), "activityGoalScheduleType");
  if (result)
  {
    v2 = result;
    v4 = v0[8];
    v3 = v0[9];
    v5 = v0[7];
    v6 = sub_10001E724(0, &qword_100823568, HKSample_ptr);
    static HKSamplePredicate.sample(type:predicate:)(v2, 0, v6);

    v7 = sub_100047110(&qword_100823CC0);
    v8 = *(unsigned __int8 *)(v4 + 80);
    v9 = (v8 + 32) & ~v8;
    v10 = swift_allocObject(v7, v9 + *(_QWORD *)(v4 + 72), v8 | 7);
    *(_OWORD *)(v10 + 16) = xmmword_100622F90;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v10 + v9, v3, v5);
    v11 = sub_100047110(&qword_100823CC8);
    v12 = sub_100047110(&qword_100823CB8);
    v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) | 7);
    *(_OWORD *)(v13 + 16) = xmmword_100622F90;
    KeyPath = swift_getKeyPath(&unk_1006302A8);
    SortDescriptor.init<A>(_:order:)(KeyPath, 1);
    HKSampleQueryDescriptor.init(predicates:sortDescriptors:limit:)(v10, v13, 0, 0, v6);
    AppDependency.wrappedValue.getter(v0 + 2);
    v15 = v0[2];
    v0[10] = v15;
    v16 = (_QWORD *)swift_task_alloc(async function pointer to HKSampleQueryDescriptor.result(for:)[1]);
    v0[11] = v16;
    *v16 = v0;
    v16[1] = sub_100247B84;
    return (id)HKSampleQueryDescriptor.result(for:)(v15, v0[4]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100247B84(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)();

  v4 = *v2;
  v6 = *(void **)(*v2 + 80);
  v5 = *(_QWORD *)(*v2 + 88);
  *(_QWORD *)(*v2 + 96) = v1;
  swift_task_dealloc(v5);

  if (v1)
  {
    v7 = sub_100247DA0;
  }
  else
  {
    *(_QWORD *)(v4 + 104) = a1;
    v7 = sub_100247BFC;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100247BFC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  _BOOL8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = (uint64_t)sub_1003470A4(v1);
  v3 = swift_bridgeObjectRelease(v1);
  if (v2)
  {
    v4 = v2 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v2 >> 62)
      goto LABEL_16;
    v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v15))
    {
      v6 = 0;
      while (1)
      {
        v7 = (v2 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v2)
           : *(id *)(v2 + 8 * v6 + 32);
        v8 = v7;
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          break;
        if (objc_msgSend(v7, "goalType") == (id)1)
        {

          v11 = 1;
          goto LABEL_21;
        }
        v10 = objc_msgSend(v8, "goalType");

        v11 = v10 == 0;
        if (v10)
        {
          ++v6;
          if (v9 != v5)
            continue;
        }
        goto LABEL_21;
      }
      __break(1u);
LABEL_16:
      if (v2 >= 0)
        v15 = v4;
      else
        v15 = v2;
      swift_bridgeObjectRetain(v2);
    }
    v11 = 0;
LABEL_21:
    v16 = swift_bridgeObjectRelease(v2);
    v18 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 72);
    v19 = *(_QWORD *)(v0 + 56);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32), v16);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 56);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32), v3);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    v11 = 0;
  }
  v20 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v11);
}

uint64_t sub_100247DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(v4, *(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100247E10()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v26 = *(_QWORD *)(v0 - 8);
  v27 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_100829680);
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_1008201E0);
  v16 = type metadata accessor for AppDependencyManager(0);
  v28 = 0u;
  v29 = 0u;
  v30 = 0;
  v17 = static AppDependencyManager.shared.getter(v16);
  v23 = AppDependency.__allocating_init(key:manager:)(&v28, v17);
  v18 = sub_100047110(&qword_1008201E8);
  v30 = 0;
  v28 = 0u;
  v29 = 0u;
  v19 = static AppDependencyManager.shared.getter(v18);
  AppDependency.__allocating_init(key:manager:)(&v28, v19);
  sub_100047110(&qword_100829688);
  LocalizedStringResource.init(stringLiteral:)(0x65756C6156, 0xE500000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x8000000100692210);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  *(_QWORD *)&v28 = 0;
  BYTE8(v28) = 1;
  v20 = type metadata accessor for IntentDialog(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v5, enum case for IntentParameter.IntControlStyle.stepper<A>(_:), v25);
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v27);
  IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)(v15, v11, &v28, v5, 10, 39999, 0, v8, v2);
  return v23;
}

uint64_t sub_1002480E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[3] = a1;
  v2 = sub_100047110(&qword_100823CA8);
  v1[4] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[5] = v3;
  v1[6] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100823CB0);
  v1[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[8] = v5;
  v1[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100248178, 0, 0);
}

id sub_100248178()
{
  _QWORD *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  _QWORD *v16;

  result = objc_msgSend((id)objc_opt_self(HKObjectType), "activityGoalScheduleType");
  if (result)
  {
    v2 = result;
    v4 = v0[8];
    v3 = v0[9];
    v5 = v0[7];
    v6 = sub_10001E724(0, &qword_100823568, HKSample_ptr);
    static HKSamplePredicate.sample(type:predicate:)(v2, 0, v6);

    v7 = sub_100047110(&qword_100823CC0);
    v8 = *(unsigned __int8 *)(v4 + 80);
    v9 = (v8 + 32) & ~v8;
    v10 = swift_allocObject(v7, v9 + *(_QWORD *)(v4 + 72), v8 | 7);
    *(_OWORD *)(v10 + 16) = xmmword_100622F90;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v10 + v9, v3, v5);
    v11 = sub_100047110(&qword_100823CC8);
    v12 = sub_100047110(&qword_100823CB8);
    v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) | 7);
    *(_OWORD *)(v13 + 16) = xmmword_100622F90;
    KeyPath = swift_getKeyPath(&unk_1006302A8);
    SortDescriptor.init<A>(_:order:)(KeyPath, 1);
    HKSampleQueryDescriptor.init(predicates:sortDescriptors:limit:)(v10, v13, 0, 0, v6);
    AppDependency.wrappedValue.getter(v0 + 2);
    v15 = v0[2];
    v0[10] = v15;
    v16 = (_QWORD *)swift_task_alloc(async function pointer to HKSampleQueryDescriptor.result(for:)[1]);
    v0[11] = v16;
    *v16 = v0;
    v16[1] = sub_100248340;
    return (id)HKSampleQueryDescriptor.result(for:)(v15, v0[4]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100248340(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)();

  v4 = *v2;
  v6 = *(void **)(*v2 + 80);
  v5 = *(_QWORD *)(*v2 + 88);
  *(_QWORD *)(*v2 + 96) = v1;
  swift_task_dealloc(v5);

  if (v1)
  {
    v7 = sub_10024A980;
  }
  else
  {
    *(_QWORD *)(v4 + 104) = a1;
    v7 = sub_1002483B8;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1002483B8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  _BOOL8 v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = (uint64_t)sub_1003470A4(v1);
  v3 = swift_bridgeObjectRelease(v1);
  if (v2)
  {
    v4 = v2 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v2 >> 62)
      goto LABEL_17;
    v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v16))
    {
      v6 = 0;
      while (1)
      {
        v7 = (v2 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v2)
           : *(id *)(v2 + 8 * v6 + 32);
        v8 = v7;
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          break;
        v10 = objc_msgSend(v7, "goalType");

        v11 = v10 == (id)2;
        ++v6;
        if (v10 == (id)2 || v9 == v5)
          goto LABEL_22;
      }
      __break(1u);
LABEL_17:
      if (v2 >= 0)
        v16 = v4;
      else
        v16 = v2;
      swift_bridgeObjectRetain(v2);
    }
    v11 = 0;
LABEL_22:
    v18 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 48);
    v19 = *(_QWORD *)(v0 + 56);
    v21 = *(_QWORD *)(v0 + 32);
    v22 = *(_QWORD *)(v0 + 40);
    v23 = swift_bridgeObjectRelease(v2);
    (*(void (**)(uint64_t, uint64_t, __n128))(v22 + 8))(v20, v21, v23);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 64);
    v13 = *(_QWORD *)(v0 + 72);
    v15 = *(_QWORD *)(v0 + 56);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32), v3);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    v11 = 0;
  }
  v24 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v11);
}

uint64_t sub_100248540()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v23 = *(_QWORD *)(v0 - 8);
  v24 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100047110(&qword_100829680);
  v3 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_1008201E0);
  v16 = type metadata accessor for AppDependencyManager(0);
  memset(v25, 0, sizeof(v25));
  v26 = 0;
  v17 = static AppDependencyManager.shared.getter(v16);
  v18 = AppDependency.__allocating_init(key:manager:)(v25, v17);
  sub_100047110(&qword_100829688);
  LocalizedStringResource.init(stringLiteral:)(0x736574756E694DLL, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001006922C0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  *(_QWORD *)&v25[0] = 0;
  BYTE8(v25[0]) = 1;
  v19 = type metadata accessor for IntentDialog(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for IntentParameter.IntControlStyle.stepper<A>(_:), v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v24);
  IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)(v15, v11, v25, v5, 5, 90, 0, v8, v2);
  return v18;
}

uint64_t sub_1002487DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[3] = a1;
  v2 = sub_100047110(&qword_100823CA8);
  v1[4] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[5] = v3;
  v1[6] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100823CB0);
  v1[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[8] = v5;
  v1[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10024886C, 0, 0);
}

id sub_10024886C()
{
  _QWORD *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  _QWORD *v16;

  result = objc_msgSend((id)objc_opt_self(HKObjectType), "activityGoalScheduleType");
  if (result)
  {
    v2 = result;
    v4 = v0[8];
    v3 = v0[9];
    v5 = v0[7];
    v6 = sub_10001E724(0, &qword_100823568, HKSample_ptr);
    static HKSamplePredicate.sample(type:predicate:)(v2, 0, v6);

    v7 = sub_100047110(&qword_100823CC0);
    v8 = *(unsigned __int8 *)(v4 + 80);
    v9 = (v8 + 32) & ~v8;
    v10 = swift_allocObject(v7, v9 + *(_QWORD *)(v4 + 72), v8 | 7);
    *(_OWORD *)(v10 + 16) = xmmword_100622F90;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v10 + v9, v3, v5);
    v11 = sub_100047110(&qword_100823CC8);
    v12 = sub_100047110(&qword_100823CB8);
    v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) | 7);
    *(_OWORD *)(v13 + 16) = xmmword_100622F90;
    KeyPath = swift_getKeyPath(&unk_1006302A8);
    SortDescriptor.init<A>(_:order:)(KeyPath, 1);
    HKSampleQueryDescriptor.init(predicates:sortDescriptors:limit:)(v10, v13, 0, 0, v6);
    AppDependency.wrappedValue.getter(v0 + 2);
    v15 = v0[2];
    v0[10] = v15;
    v16 = (_QWORD *)swift_task_alloc(async function pointer to HKSampleQueryDescriptor.result(for:)[1]);
    v0[11] = v16;
    *v16 = v0;
    v16[1] = sub_100248A34;
    return (id)HKSampleQueryDescriptor.result(for:)(v15, v0[4]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100248A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)();

  v4 = *v2;
  v6 = *(void **)(*v2 + 80);
  v5 = *(_QWORD *)(*v2 + 88);
  *(_QWORD *)(*v2 + 96) = v1;
  swift_task_dealloc(v5);

  if (v1)
  {
    v7 = sub_10024A980;
  }
  else
  {
    *(_QWORD *)(v4 + 104) = a1;
    v7 = sub_100248AAC;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100248AAC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  _BOOL8 v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = (uint64_t)sub_1003470A4(v1);
  v3 = swift_bridgeObjectRelease(v1);
  if (v2)
  {
    v4 = v2 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v2 >> 62)
      goto LABEL_17;
    v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v16))
    {
      v6 = 0;
      while (1)
      {
        v7 = (v2 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v2)
           : *(id *)(v2 + 8 * v6 + 32);
        v8 = v7;
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          break;
        v10 = objc_msgSend(v7, "goalType");

        v11 = v10 == (id)3;
        ++v6;
        if (v10 == (id)3 || v9 == v5)
          goto LABEL_22;
      }
      __break(1u);
LABEL_17:
      if (v2 >= 0)
        v16 = v4;
      else
        v16 = v2;
      swift_bridgeObjectRetain(v2);
    }
    v11 = 0;
LABEL_22:
    v18 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 48);
    v19 = *(_QWORD *)(v0 + 56);
    v21 = *(_QWORD *)(v0 + 32);
    v22 = *(_QWORD *)(v0 + 40);
    v23 = swift_bridgeObjectRelease(v2);
    (*(void (**)(uint64_t, uint64_t, __n128))(v22 + 8))(v20, v21, v23);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 64);
    v13 = *(_QWORD *)(v0 + 72);
    v15 = *(_QWORD *)(v0 + 56);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32), v3);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    v11 = 0;
  }
  v24 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v11);
}

uint64_t sub_100248C34()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v23 = *(_QWORD *)(v0 - 8);
  v24 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100047110(&qword_100829680);
  v3 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_1008201E0);
  v16 = type metadata accessor for AppDependencyManager(0);
  memset(v25, 0, sizeof(v25));
  v26 = 0;
  v17 = static AppDependencyManager.shared.getter(v16);
  v18 = AppDependency.__allocating_init(key:manager:)(v25, v17);
  sub_100047110(&qword_100829688);
  LocalizedStringResource.init(stringLiteral:)(0x7372756F48, 0xE500000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x80000001006922A0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  *(_QWORD *)&v25[0] = 0;
  BYTE8(v25[0]) = 1;
  v19 = type metadata accessor for IntentDialog(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for IntentParameter.IntControlStyle.stepper<A>(_:), v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v24);
  IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)(v15, v11, v25, v5, 6, 16, 0, v8, v2);
  return v18;
}

unint64_t sub_100248ECC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double (*v18)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v19;
  double (*v20)(char *, uint64_t, uint64_t, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  double (*v42)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  _BYTE *v58;
  double (*v59)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  char *v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v78;
  char *v79;
  char *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  double (*v85)(char *, uint64_t, uint64_t, uint64_t);
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v0 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v0);
  v2 = (char *)&v78 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  v90 = v6;
  __chkstk_darwin(v6);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_1008297B0);
  v11 = sub_100047110(&qword_1008297B8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = v11;
  v91 = v11;
  v94 = *(_QWORD *)(v12 + 72);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(v10, v15 - v94 + 8 * v94, v14 | 7);
  v83 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_10062F3E0;
  v17 = v16 + v15;
  v87 = v16 + v15 + *(int *)(v13 + 48);
  *(_BYTE *)(v16 + v15) = 0;
  v92 = v16 + v15;
  LocalizedStringResource.init(stringLiteral:)(0x676E6952206C6C41, 0xE900000000000073);
  v18 = *(double (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v19.n128_f64[0] = v18(v5, 1, 1, v6);
  v20 = v18;
  v85 = v18;
  v21 = v2;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000015, 0x80000001006924D0, 0, 0, v19);
  v93 = sub_100047110(&qword_1008297C0);
  v22 = *(_QWORD *)(v7 + 72);
  v23 = *(unsigned __int8 *)(v7 + 80);
  v24 = 2 * v22;
  *(_QWORD *)&v89 = v22;
  v25 = (v23 + 32) & ~v23;
  v95 = v23 | 7;
  v26 = swift_allocObject(v93, v25 + 3 * v22, v23 | 7);
  *(_OWORD *)(v26 + 16) = xmmword_100624A40;
  LocalizedStringResource.init(stringLiteral:)(0x7974697669746341, 0xEE0073676E695220);
  LocalizedStringResource.init(stringLiteral:)(0x6952206565726854, 0xEB0000000073676ELL);
  LocalizedStringResource.init(stringLiteral:)(0x207373656E746946, 0xED000073676E6952);
  v84 = v9;
  v80 = v5;
  v27 = v21;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v9, v5, v21, v26);
  v28 = (_BYTE *)(v17 + v94);
  v29 = v94;
  v30 = v91;
  v82 = (uint64_t)&v28[*(int *)(v91 + 48)];
  *v28 = 1;
  LocalizedStringResource.init(stringLiteral:)(0x6E69522065766F4DLL, 0xE900000000000067);
  v31 = v90;
  v32.n128_f64[0] = v20(v5, 1, 1, v90);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x7974697669746361, 0xED000065766F6D2ELL, 0, 0, v32);
  v33 = v25 + v24;
  v87 = v25 + v24;
  v88 = v25;
  v34 = v93;
  v35 = v95;
  v36 = swift_allocObject(v93, v33, v95);
  v86 = xmmword_100620BC0;
  *(_OWORD *)(v36 + 16) = xmmword_100620BC0;
  LocalizedStringResource.init(stringLiteral:)(0x206569726F6C6143, 0xEC000000676E6952);
  LocalizedStringResource.init(stringLiteral:)(0x676E695220646552, 0xE800000000000000);
  v37 = v84;
  v38 = v80;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v84, v80, v27, v36);
  v39 = 2 * v29;
  v82 = 2 * v29;
  v40 = v92;
  v41 = (_BYTE *)(v92 + v39);
  v81 = &v41[*(int *)(v30 + 48)];
  *v41 = 2;
  LocalizedStringResource.init(stringLiteral:)(0x6E69522065766F4DLL, 0xE900000000000067);
  v42 = v85;
  v43.n128_f64[0] = v85(v38, 1, 1, v31);
  v79 = v27;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x7974697669746361, 0xED000065766F6D2ELL, 0, 0, v43);
  v44 = swift_allocObject(v34, v87, v35);
  *(_OWORD *)(v44 + 16) = v86;
  LocalizedStringResource.init(stringLiteral:)(0x6C756F6A6F6C694BLL, 0xEE00676E69522065);
  LocalizedStringResource.init(stringLiteral:)(0x676E695220646552, 0xE800000000000000);
  v45 = v38;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v37, v38, v27, v44);
  v46 = v94;
  v47 = (_BYTE *)(v40 + v82 + v94);
  v48 = v91;
  v82 = (uint64_t)&v47[*(int *)(v91 + 48)];
  *v47 = 3;
  LocalizedStringResource.init(stringLiteral:)(0x6E69522065766F4DLL, 0xE900000000000067);
  v49 = v90;
  v50.n128_f64[0] = v42(v45, 1, 1, v90);
  v51 = v79;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x7974697669746361, 0xED000065766F6D2ELL, 0, 0, v50);
  v52 = swift_allocObject(v93, v87, v95);
  *(_OWORD *)(v52 + 16) = v86;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000010, 0x80000001006924F0);
  LocalizedStringResource.init(stringLiteral:)(0x676E695220646552, 0xE800000000000000);
  v53 = v37;
  v54 = v37;
  v55 = v45;
  v56 = v51;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v54, v45, v51, v52);
  v57 = 4 * v46;
  v58 = (_BYTE *)(v92 + 4 * v46);
  *(_QWORD *)&v86 = &v58[*(int *)(v48 + 48)];
  *v58 = 4;
  LocalizedStringResource.init(stringLiteral:)(0x6573696372657845, 0xED0000676E695220);
  v59 = v85;
  v60.n128_f64[0] = v85(v55, 1, 1, v49);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000011, 0x800000010068A730, 0, 0, v60);
  v87 = v88 + v89;
  v61 = v93;
  v62 = v95;
  v63 = swift_allocObject(v93, v88 + v89, v95);
  v89 = xmmword_100622F90;
  *(_OWORD *)(v63 + 16) = xmmword_100622F90;
  LocalizedStringResource.init(stringLiteral:)(0x6952206E65657247, 0xEA0000000000676ELL);
  v64 = v56;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v53, v55, v56, v63);
  v65 = v57 + v94;
  v66 = v92;
  v67 = (_BYTE *)(v92 + v65);
  *(_QWORD *)&v86 = &v67[*(int *)(v91 + 48)];
  *v67 = 5;
  LocalizedStringResource.init(stringLiteral:)(0x695220646E617453, 0xEA0000000000676ELL);
  v68 = v55;
  v69 = v90;
  v70.n128_f64[0] = v59(v55, 1, 1, v90);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x7974697669746361, 0xEE00646E6174732ELL, 0, 0, v70);
  v71 = v61;
  v72 = v87;
  v73 = swift_allocObject(v71, v87, v62);
  *(_OWORD *)(v73 + 16) = v89;
  LocalizedStringResource.init(stringLiteral:)(0x6E69522065756C42, 0xE900000000000067);
  v74 = v84;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v84, v68, v64, v73);
  *(_BYTE *)(v66 + 6 * v94) = 6;
  LocalizedStringResource.init(stringLiteral:)(0x6E6952206C6C6F52, 0xE900000000000067);
  v75.n128_f64[0] = v59(v68, 1, 1, v69);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x7974697669746361, 0xED00006C6C6F722ELL, 0, 0, v75);
  v76 = swift_allocObject(v93, v72, v95);
  *(_OWORD *)(v76 + 16) = v89;
  LocalizedStringResource.init(stringLiteral:)(0x6E69522065756C42, 0xE900000000000067);
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v74, v68, v64, v76);
  return sub_10043647C(v83);
}

unint64_t sub_1002497B8(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100781F38, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7)
    return 7;
  else
    return v3;
}

uint64_t sub_100249800@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  void (*v57)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  void (*v62)(char *, _QWORD, uint64_t);
  char *v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  void (*v69)(char *, _QWORD, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t result;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  char *v98;
  unsigned int v99;
  void (*v100)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;

  v91 = a1;
  v103 = sub_100047110(&qword_100829658);
  v93 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v86 = (char *)&v81 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for InputConnectionBehavior(0);
  v104 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v105 = (char *)&v81 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v3);
  v5 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v81 - v7;
  v9 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v101 = v12;
  __chkstk_darwin(v12);
  v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_1008201E0);
  v16 = type metadata accessor for AppDependencyManager(0);
  v107 = 0u;
  v108 = 0u;
  v109 = 0;
  v17 = static AppDependencyManager.shared.getter(v16);
  v90 = AppDependency.__allocating_init(key:manager:)(&v107, v17);
  v18 = sub_100047110(&qword_1008201E8);
  v109 = 0;
  v107 = 0u;
  v108 = 0u;
  v19 = static AppDependencyManager.shared.getter(v18);
  v89 = AppDependency.__allocating_init(key:manager:)(&v107, v19);
  v97 = sub_100047110(&qword_100829690);
  LocalizedStringResource.init(stringLiteral:)(0x7974697669746341, 0xED0000676E695220);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x80000001006921F0);
  v100 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56);
  v100(v11, 0, 1, v12);
  v106 = 7;
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v96 = v21;
  v21(v8, 1, 1, v20);
  v94 = v20;
  v22 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v21)(v5, 1, 1, v20);
  v109 = 0;
  v107 = 0u;
  v108 = 0u;
  v23 = static AppDependencyManager.shared.getter(v22);
  v24 = AppDependency.__allocating_init(key:manager:)(&v107, v23);
  v109 = 0;
  v107 = 0u;
  v108 = 0u;
  v25 = static AppDependencyManager.shared.getter(v24);
  v26 = AppDependency.__allocating_init(key:manager:)(&v107, v25);
  *(_QWORD *)&v107 = v24;
  *((_QWORD *)&v107 + 1) = v26;
  v99 = enum case for InputConnectionBehavior.default(_:);
  v27 = v105;
  v104 = *(_QWORD *)(v104 + 104);
  v28 = v102;
  ((void (*)(char *))v104)(v105);
  v29 = sub_10024A184();
  v30 = sub_10023F844();
  v88 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:optionsProvider:)(v15, v11, &v106, v8, v5, v27, &off_100782000, &v107, &type metadata for SetFitnessGoalIntent.ActivityRingOptionsProvider, v29, v30);
  v95 = sub_100047110(&qword_100829670);
  v31 = v15;
  LocalizedStringResource.init(stringLiteral:)(0x736569726F6C6143, 0xE800000000000000);
  v92 = 0x8000000100692210;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x8000000100692210);
  v32 = v101;
  v100(v11, 0, 1, v101);
  *(_QWORD *)&v107 = 0;
  BYTE8(v107) = 1;
  v33 = v96;
  v96(v8, 1, 1, v20);
  LODWORD(v97) = enum case for IntentParameter.IntControlStyle.stepper<A>(_:);
  v93 = *(_QWORD *)(v93 + 104);
  v34 = v86;
  v35 = v103;
  ((void (*)(char *))v93)(v86);
  v36 = v27;
  v37 = v27;
  v38 = v99;
  ((void (*)(char *, _QWORD, uint64_t))v104)(v37, v99, v28);
  v79 = v36;
  v98 = v31;
  v39 = v8;
  v81 = v8;
  v87 = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)(v31, v11, &v107, v34, 10, 9999, 0, v8, v79);
  LocalizedStringResource.init(stringLiteral:)(0x6C756F6A6F6C694BLL, 0xEA00000000007365);
  v82 = v11;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, v92);
  v40 = v100;
  v100(v11, 0, 1, v32);
  *(_QWORD *)&v107 = 0;
  BYTE8(v107) = 1;
  v41 = v39;
  v42 = v94;
  v33(v41, 1, 1, v94);
  v43 = v34;
  v44 = v97;
  v45 = (void (*)(char *, uint64_t, uint64_t))v93;
  ((void (*)(char *, _QWORD, uint64_t))v93)(v34, v97, v35);
  v46 = v105;
  v47 = v102;
  ((void (*)(char *, uint64_t, uint64_t))v104)(v105, v38, v102);
  v80 = v46;
  v48 = v82;
  v49 = v81;
  v85 = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)(v98, v82, &v107, v34, 20, 39999, 0, v81, v80);
  LocalizedStringResource.init(stringLiteral:)(0x736574756E694DLL, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, v92);
  v40(v48, 0, 1, v101);
  *(_QWORD *)&v107 = 0;
  BYTE8(v107) = 1;
  v50 = v96;
  v96(v49, 1, 1, v42);
  v51 = v103;
  v45(v43, v44, v103);
  v52 = v105;
  ((void (*)(char *, _QWORD, uint64_t))v104)(v105, v99, v47);
  v53 = v48;
  v54 = v48;
  v55 = v43;
  v56 = v49;
  v92 = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)(v98, v53, &v107, v43, 10, 1000, 0, v49, v52);
  LocalizedStringResource.init(stringLiteral:)(0x736574756E694DLL, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000023, 0x8000000100692230);
  v57 = v100;
  v58 = v101;
  v100(v54, 0, 1, v101);
  *(_QWORD *)&v107 = 0;
  BYTE8(v107) = 1;
  v59 = v56;
  v60 = v94;
  v50(v56, 1, 1, v94);
  v61 = v55;
  v62 = (void (*)(char *, _QWORD, uint64_t))v93;
  ((void (*)(char *, _QWORD, uint64_t))v93)(v55, v97, v51);
  v63 = v105;
  v64 = v99;
  ((void (*)(char *, _QWORD, uint64_t))v104)(v105, v99, v102);
  v84 = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)(v98, v54, &v107, v61, 5, 90, 0, v59, v63);
  LocalizedStringResource.init(stringLiteral:)(0x7372756F48, 0xE500000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100692260);
  v57(v54, 0, 1, v58);
  *(_QWORD *)&v107 = 0;
  BYTE8(v107) = 1;
  v65 = v59;
  v66 = v96;
  v96(v59, 1, 1, v60);
  v67 = v97;
  v62(v61, v97, v103);
  v69 = (void (*)(char *, _QWORD, uint64_t))v104;
  v68 = v105;
  v70 = v64;
  v71 = v102;
  ((void (*)(char *, uint64_t, uint64_t))v104)(v105, v70, v102);
  v72 = v98;
  v83 = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)(v98, v54, &v107, v61, 6, 16, 0, v65, v68);
  LocalizedStringResource.init(stringLiteral:)(0x7372756F48, 0xE500000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100692280);
  v100(v54, 0, 1, v101);
  *(_QWORD *)&v107 = 0;
  BYTE8(v107) = 1;
  v66(v65, 1, 1, v94);
  ((void (*)(char *, uint64_t, uint64_t))v93)(v61, v67, v103);
  v69(v68, v99, v71);
  result = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)(v72, v54, &v107, v61, 6, 16, 0, v65, v68);
  v74 = v91;
  v75 = v89;
  *v91 = v90;
  v74[1] = v75;
  v76 = v87;
  v74[2] = v88;
  v74[3] = v76;
  v77 = v92;
  v74[4] = v85;
  v74[5] = v77;
  v78 = v83;
  v74[6] = v84;
  v74[7] = v78;
  v74[8] = result;
  return result;
}

unint64_t sub_10024A184()
{
  unint64_t result;

  result = qword_100829698;
  if (!qword_100829698)
  {
    result = swift_getWitnessTable(&unk_10062FF90, &type metadata for SetFitnessGoalIntent.ActivityRingOptionsProvider);
    atomic_store(result, &qword_100829698);
  }
  return result;
}

unint64_t sub_10024A1C8()
{
  unint64_t result;

  result = qword_1008296D0;
  if (!qword_1008296D0)
  {
    result = swift_getWitnessTable(&unk_10063000C, &type metadata for SetFitnessGoalIntent);
    atomic_store(result, &qword_1008296D0);
  }
  return result;
}

unint64_t sub_10024A20C()
{
  unint64_t result;

  result = qword_1008296E0;
  if (!qword_1008296E0)
  {
    result = swift_getWitnessTable(&unk_1006417C0, &type metadata for ActivityRingGoals);
    atomic_store(result, &qword_1008296E0);
  }
  return result;
}

uint64_t sub_10024A250@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_10024A278()
{
  unint64_t result;

  result = qword_100829710;
  if (!qword_100829710)
  {
    result = swift_getWitnessTable(&unk_100641678, &type metadata for ActivityRingGoals);
    atomic_store(result, (unint64_t *)&qword_100829710);
  }
  return result;
}

void sub_10024A2BC(uint64_t a1)
{
  uint64_t v1;

  sub_100245B68(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_10024A2C4()
{
  unint64_t result;

  result = qword_100829728;
  if (!qword_100829728)
  {
    result = swift_getWitnessTable(&unk_10063A8F4, &type metadata for ActivityRingError);
    atomic_store(result, (unint64_t *)&qword_100829728);
  }
  return result;
}

uint64_t sub_10024A308()
{
  return sub_1001667E4(&qword_100829730);
}

uint64_t sub_10024A318()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10024A328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_100829744);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1000DA0E4;
  return sub_100245CB4(v2);
}

uint64_t sub_10024A378@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024A3A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024A3C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024A3F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024A418@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024A440@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024A468@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024A490@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024A4B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024A4E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024A508@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

void sub_10024A530(uint64_t a1)
{
  uint64_t *v1;

  sub_10023E398(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_100790B98, (uint64_t)sub_10024A314, (uint64_t)&unk_100790BB0);
}

unint64_t sub_10024A564()
{
  unint64_t result;

  result = qword_1008297D8;
  if (!qword_1008297D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1008297D8);
  }
  return result;
}

unint64_t sub_10024A5A8()
{
  unint64_t result;

  result = qword_1008297E8;
  if (!qword_1008297E8)
  {
    result = swift_getWitnessTable(&unk_10062FC04, &type metadata for AdjustStandGoalIntent);
    atomic_store(result, &qword_1008297E8);
  }
  return result;
}

uint64_t sub_10024A5EC()
{
  return sub_1001667E4(&qword_100829730);
}

void sub_10024A5F8(uint64_t a1)
{
  uint64_t *v1;

  sub_10023E398(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_100790BE8, (uint64_t)sub_10024A314, (uint64_t)&unk_100790C00);
}

unint64_t sub_10024A62C()
{
  unint64_t result;

  result = qword_100829810;
  if (!qword_100829810)
  {
    result = swift_getWitnessTable(&unk_10062FB08, &type metadata for AdjustExerciseGoalIntent);
    atomic_store(result, &qword_100829810);
  }
  return result;
}

uint64_t sub_10024A670()
{
  return sub_1001667E4(&qword_100829730);
}

void sub_10024A67C(uint64_t a1)
{
  uint64_t *v1;

  sub_10023CB2C(a1, v1[2], v1[3], v1[4], v1[5]);
}

unint64_t sub_10024A688()
{
  unint64_t result;

  result = qword_100829838;
  if (!qword_100829838)
  {
    result = swift_getWitnessTable(&unk_10062FA0C, &type metadata for AdjustMoveGoalIntent);
    atomic_store(result, (unint64_t *)&qword_100829838);
  }
  return result;
}

uint64_t sub_10024A6CC()
{
  return sub_1001667E4(&qword_100829730);
}

void sub_10024A6D8(uint64_t a1)
{
  sub_10023BBB0(a1);
}

uint64_t sub_10024A6E4()
{
  return sub_1001667E4(&qword_100829848);
}

uint64_t sub_10024A6F0(void *a1)
{
  sub_100047110(&qword_100829848);
  return sub_10023BCF0(a1);
}

void sub_10024A740(uint64_t a1)
{
  sub_10023B394(a1);
}

uint64_t sub_10024A748()
{
  return sub_1001667E4(&qword_100829730);
}

unint64_t sub_10024A754()
{
  unint64_t result;

  result = qword_100829858;
  if (!qword_100829858)
  {
    result = swift_getWitnessTable(&unk_10062F864, &type metadata for PauseYourRingsIntent);
    atomic_store(result, &qword_100829858);
  }
  return result;
}

void sub_10024A798(uint64_t a1)
{
  sub_10023AC90(a1);
}

unint64_t sub_10024A7A0()
{
  unint64_t result;

  result = qword_100829868;
  if (!qword_100829868)
  {
    result = swift_getWitnessTable(&unk_10062F42C, &type metadata for OpenActivityRingIntent);
    atomic_store(result, (unint64_t *)&qword_100829868);
  }
  return result;
}

uint64_t sub_10024A7E4()
{
  return sub_1001667E4(&qword_100829730);
}

uint64_t sub_10024A7F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024A818@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024A840@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_10024A868()
{
  unint64_t result;

  result = qword_1008298E8;
  if (!qword_1008298E8)
  {
    result = swift_getWitnessTable(&unk_10062F500, &type metadata for PauseRingsIntent);
    atomic_store(result, &qword_1008298E8);
  }
  return result;
}

void sub_10024A8AC(uint64_t a1)
{
  sub_1002383C4(a1);
}

uint64_t sub_10024A8B8()
{
  return sub_1001667E4(&qword_100829730);
}

uint64_t sub_10024A8C4(char a1)
{
  uint64_t v2;
  char v4;

  sub_100047110(&qword_100829730);
  v4 = a1;
  v2 = sub_100047110(&qword_100829730);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

uint64_t sub_10024A92C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10024A954@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t destroy for PauseRingsCustomDateView(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + 24));
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t initializeWithCopy for PauseRingsCustomDateView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = v3;
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for PauseRingsCustomDateView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v8);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  swift_retain(v10);
  swift_release(v9);
  return a1;
}

uint64_t assignWithTake for PauseRingsCustomDateView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_release(v6);
  return a1;
}

ValueMetadata *type metadata accessor for PauseRingsCustomDateView()
{
  return &type metadata for PauseRingsCustomDateView;
}

uint64_t sub_10024AB50(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B0E2C, 1);
}

void sub_10024AB60()
{
  id v0;
  NSString v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setLocalizedDateFormatFromTemplate:", v1);

  qword_100829948 = (uint64_t)v0;
}

uint64_t sub_10024ABCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t OpaqueTypeConformance2;
  char *v29;
  __n128 v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45[16];
  uint64_t v46;
  char v47[16];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v44 = a2;
  v3 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  __chkstk_darwin(v3);
  v41 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100829968);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_100829960);
  v38 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_100829958);
  v13 = *(_QWORD *)(v12 - 8);
  v39 = v12;
  v40 = v13;
  __chkstk_darwin(v12);
  v37 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = a1;
  v16 = static Axis.Set.vertical.getter(v15);
  v17 = sub_100047110(&qword_100829988);
  v18 = sub_100028384(&qword_100829990, &qword_100829988, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  ScrollView.init(_:showsIndicators:content:)(v16, 1, sub_10024C830, v47, v17, v18);
  v46 = a1;
  v19 = sub_100047110(&qword_100829970);
  v20 = sub_100028384(&qword_100829978, &qword_100829968, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  v21 = sub_100028384(&qword_100829980, &qword_100829970, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
  View.toolbar<A>(content:)(sub_10024C838, v45, v5, v19, v20, v21);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v22 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000021, 0x8000000100692840);
  v24 = v23;
  LOBYTE(v6) = v25;
  v27 = v26;
  v49 = v5;
  v50 = v19;
  v51 = v20;
  v52 = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v49, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v29 = v37;
  View.navigationTitle(_:)(v22, v24, v6 & 1, v27, v9, OpaqueTypeConformance2);
  swift_bridgeObjectRelease(v27);
  v30 = swift_bridgeObjectRelease(v24);
  (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v11, v9, v30);
  v31 = v41;
  v32 = v42;
  v33 = v43;
  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v41, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v43);
  v49 = v9;
  v50 = OpaqueTypeConformance2;
  v34 = swift_getOpaqueTypeConformance2(&v49, &opaque type descriptor for <<opaque return type of View.navigationTitle(_:)>>, 1);
  v35 = v39;
  View.navigationBarTitleDisplayMode(_:)(v31, v39, v34);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v29, v35);
}

uint64_t sub_10024AF08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (**v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  unint64_t v70;
  id v71;
  NSString v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  Class isa;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  double v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  double v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t KeyPath;
  double v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  double v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  double v142;
  uint64_t v143;
  __n128 v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  __n128 v152;
  double v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  uint64_t v160;
  __n128 v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  double v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  void (*v202)(char *, uint64_t);
  char *v203;
  void (**v204)(char *, uint64_t);
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char v209;
  _BYTE v210[7];
  _BYTE v211[7];
  char v212;
  char v213;
  _BYTE v214[168];
  _BYTE v215[140];
  __int128 v216;
  char v217;
  _BYTE v218[7];
  uint64_t v219;
  uint64_t v220;
  char v221;
  _BYTE v222[7];
  char v223;
  _BYTE v224[7];
  double v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char v229;
  _BYTE v230[7];
  char v231;
  _BYTE v232[7];
  double v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char v237;
  __int128 v238;
  _OWORD v239[10];

  v205 = a2;
  v3 = type metadata accessor for Calendar.Component(0);
  v199 = *(_QWORD *)(v3 - 8);
  v200 = v3;
  __chkstk_darwin(v3);
  v198 = (char *)&v184 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Calendar(0);
  v201 = *(_QWORD *)(v5 - 8);
  v202 = (void (*)(char *, uint64_t))v5;
  __chkstk_darwin(v5);
  v195 = (char *)&v184 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v7);
  v197 = (char *)&v184 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = type metadata accessor for Date(0);
  v196 = *(_QWORD *)(v206 - 8);
  __chkstk_darwin(v206);
  v194 = (char *)&v184 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v203 = (char *)&v184 - v12;
  v191 = type metadata accessor for WheelPickerStyle(0, v11);
  v204 = *(void (***)(char *, uint64_t))(v191 - 8);
  __chkstk_darwin(v191);
  v14 = (char *)&v184 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = sub_100047110(&qword_1008299B0);
  v188 = *(_QWORD *)(v186 - 8);
  __chkstk_darwin(v186);
  v16 = (char *)&v184 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = sub_100047110(&qword_1008299B8);
  v189 = *(_QWORD *)(v192 - 8);
  __chkstk_darwin(v192);
  v185 = (char *)&v184 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = sub_100047110(&qword_1008299C0);
  __chkstk_darwin(v187);
  v19 = (char *)&v184 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = sub_100047110(&qword_1008299C8);
  __chkstk_darwin(v193);
  v21 = (void (**)(char *, uint64_t))((char *)&v184 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  v208 = (uint64_t)&v184 - v23;
  v24 = LocalizedStringKey.init(stringLiteral:)(0x6E6F697461727544, 0xE800000000000000);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v238 = *(_OWORD *)(a1 + 32);
  v207 = a1;
  v216 = *(_OWORD *)(a1 + 32);
  v190 = sub_100047110(&qword_10081F1D8);
  State.projectedValue.getter(v239);
  v31 = sub_100047110(&qword_1008299D0);
  v32 = sub_10024C9DC();
  v33 = Picker<>.init(_:selection:content:)(v24, v26, v28 & 1, v30, v239, sub_10024BB9C, 0, &type metadata for Int, v31, &protocol witness table for Int, v32);
  WheelPickerStyle.init()(v33);
  v34 = sub_100028384(&qword_1008299E0, &qword_1008299B0, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  v36 = v185;
  v35 = v186;
  v37 = v191;
  View.pickerStyle<A>(_:)(v14, v186, v191, v34, &protocol witness table for WheelPickerStyle);
  v204[1](v14, v37);
  v38 = (*(uint64_t (**)(char *, uint64_t))(v188 + 8))(v16, v35);
  LOBYTE(v31) = static Edge.Set.horizontal.getter(v38);
  v39 = EdgeInsets.init(_all:)(24.0);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v46 = v189;
  v47 = v192;
  (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v19, v36, v192);
  v48 = &v19[*(int *)(v187 + 36)];
  *v48 = v31;
  *((double *)v48 + 1) = v39;
  *((_QWORD *)v48 + 2) = v41;
  *((_QWORD *)v48 + 3) = v43;
  *((_QWORD *)v48 + 4) = v45;
  v48[40] = 0;
  v49 = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v36, v47);
  LOBYTE(v31) = static Edge.Set.bottom.getter(v49);
  v50 = EdgeInsets.init(_all:)(10.0);
  v52 = v51;
  v54 = v53;
  v56 = v55;
  sub_100021CC0((uint64_t)v19, (uint64_t)v21, &qword_1008299C0);
  v57 = (char *)v21 + *(int *)(v193 + 36);
  *v57 = v31;
  *((double *)v57 + 1) = v50;
  *((_QWORD *)v57 + 2) = v52;
  *((_QWORD *)v57 + 3) = v54;
  *((_QWORD *)v57 + 4) = v56;
  v57[40] = 0;
  sub_10001BE90((uint64_t)v19, &qword_1008299C0);
  v204 = v21;
  v58 = sub_100045AD4((uint64_t)v21, v208, &qword_1008299C8);
  v59 = v195;
  static Calendar.current.getter(v58);
  v61 = v198;
  v60 = v199;
  v62 = v200;
  (*(void (**)(char *, _QWORD, uint64_t))(v199 + 104))(v198, enum case for Calendar.Component.day(_:), v200);
  v239[0] = v238;
  v63 = State.wrappedValue.getter(&v216, v190);
  v64 = v216;
  v65 = v194;
  Date.init()(v63);
  v66 = (uint64_t)v197;
  Calendar.date(byAdding:value:to:wrappingComponents:)(v61, v64, v65, 0);
  v67 = v206;
  v68 = v196;
  v69 = *(void (**)(char *, uint64_t))(v196 + 8);
  v69(v65, v206);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
  (*(void (**)(char *, _QWORD))(v201 + 8))(v59, v202);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67) == 1)
  {
    sub_10001BE90(v66, (uint64_t *)&unk_100828370);
    sub_10024CA38(&v216);
  }
  else
  {
    v202 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v203, v66, v67);
    if ((*(_BYTE *)(v207 + 8) & 1) != 0)
      v70 = 0x80000001006928E0;
    else
      v70 = 0x80000001006928B0;
    v71 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v72 = String._bridgeToObjectiveC()();
    v73 = objc_msgSend(v71, "localizedStringForKey:value:table:", v72, 0, 0);

    v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
    v76 = v75;

    swift_bridgeObjectRelease(v70);
    v77 = sub_100047110((uint64_t *)&unk_100827460);
    v78 = swift_allocObject(v77, 72, 7);
    *(_OWORD *)(v78 + 16) = xmmword_100622F90;
    if (qword_10081D8B8 != -1)
      swift_once(&qword_10081D8B8, sub_10024AB60);
    v79 = (void *)qword_100829948;
    isa = Date._bridgeToObjectiveC()().super.isa;
    v81 = objc_msgSend(v79, "stringFromDate:", isa);

    v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
    v84 = v83;

    *(_QWORD *)(v78 + 56) = &type metadata for String;
    *(_QWORD *)(v78 + 64) = sub_100038CF8();
    *(_QWORD *)(v78 + 32) = v82;
    *(_QWORD *)(v78 + 40) = v84;
    v86 = String.init(format:_:)(v74, v76, v78, v85);
    v88 = v87;
    swift_bridgeObjectRelease(v76);
    *(_QWORD *)&v239[0] = v86;
    *((_QWORD *)&v239[0] + 1) = v88;
    v89 = sub_100038CA0();
    v90 = Text.init<A>(_:)(v239, &type metadata for String, v89);
    v92 = v91;
    v94 = v93;
    v96 = v95 & 1;
    v98 = static Font.body.getter(v97);
    v100 = Text.font(_:)(v98, v90, v92, v96, v94, v99);
    v102 = v101;
    v104 = v103;
    v106 = v105;
    swift_release(v98);
    LOBYTE(v98) = v104 & 1;
    sub_1000E4458(v90, v92, v96);
    v107 = swift_bridgeObjectRelease(v94);
    v108 = static Font.Weight.regular.getter(v107);
    v109 = Text.fontWeight(_:)(*(_QWORD *)&v108, 0, v100, v102, v104 & 1, v106);
    v111 = v110;
    v113 = v112;
    v115 = v114;
    sub_1000E4458(v100, v102, v98);
    swift_bridgeObjectRelease(v106);
    KeyPath = swift_getKeyPath(&unk_1006305E0);
    LOBYTE(v98) = static Edge.Set.horizontal.getter(KeyPath);
    v117 = EdgeInsets.init(_all:)(24.0);
    v119 = v118;
    v121 = v120;
    v123 = v122;
    LOBYTE(v100) = static Edge.Set.bottom.getter(v124);
    v125 = EdgeInsets.init(_all:)(26.0);
    v127 = v126;
    v129 = v128;
    v131 = v130;
    v213 = v113 & 1;
    v212 = 0;
    v209 = 0;
    v202(v203, v206);
    *(_DWORD *)v218 = v239[0];
    *(_DWORD *)&v218[3] = *(_DWORD *)((char *)v239 + 3);
    *(_DWORD *)v222 = *(_DWORD *)v215;
    *(_DWORD *)&v222[3] = *(_DWORD *)&v215[3];
    *(_DWORD *)v224 = *(_DWORD *)v214;
    *(_DWORD *)&v224[3] = *(_DWORD *)&v214[3];
    *(_DWORD *)&v230[3] = *(_DWORD *)&v211[3];
    *(_DWORD *)v230 = *(_DWORD *)v211;
    *(_DWORD *)&v232[3] = *(_DWORD *)&v210[3];
    *(_DWORD *)v232 = *(_DWORD *)v210;
    *(_QWORD *)&v216 = v109;
    *((_QWORD *)&v216 + 1) = v111;
    v217 = v213;
    v219 = v115;
    v220 = KeyPath;
    v221 = 1;
    v223 = v98;
    v225 = v117;
    v226 = v119;
    v227 = v121;
    v228 = v123;
    v229 = v212;
    v231 = v100;
    v233 = v125;
    v234 = v127;
    v235 = v129;
    v236 = v131;
    v237 = v209;
    ASFriendListDisplayMode.id.getter(&v216);
  }
  sub_100045AD4((uint64_t)&v216, (uint64_t)v239, &qword_1008299E8);
  if ((*(_BYTE *)(v207 + 8) & 1) != 0)
  {
    v133 = 0x8000000100692890;
    v132 = 0xD00000000000001BLL;
  }
  else
  {
    v132 = 0xD00000000000001FLL;
    v133 = 0x8000000100692870;
  }
  v134 = LocalizedStringKey.init(stringLiteral:)(v132, v133);
  v135 = Text.init(_:tableName:bundle:comment:)(v134);
  v137 = v136;
  v139 = v138;
  v141 = v140 & 1;
  v143 = static Font.body.getter(v142);
  v145 = Text.font(_:)(v143, v135, v137, v141, v139, v144);
  v147 = v146;
  v149 = v148;
  v151 = v150;
  swift_release(v143);
  LOBYTE(v143) = v149 & 1;
  sub_1000E4458(v135, v137, v141);
  v152 = swift_bridgeObjectRelease(v139);
  v153 = static Font.Weight.regular.getter(v152);
  v154 = Text.fontWeight(_:)(*(_QWORD *)&v153, 0, v145, v147, v149 & 1, v151);
  v156 = v155;
  v158 = v157;
  v160 = v159 & 1;
  sub_1000E4458(v145, v147, v143);
  v161 = swift_bridgeObjectRelease(v151);
  v162 = static Color.secondary.getter(v161);
  *(_QWORD *)&v216 = v162;
  v206 = Text.foregroundStyle<A>(_:)(&v216, v154, v156, v160, v158, &type metadata for Color, &protocol witness table for Color);
  v207 = v163;
  v165 = v164;
  LOBYTE(v141) = v166 & 1;
  sub_1000E4458(v154, v156, v160);
  swift_release(v162);
  swift_bridgeObjectRelease(v158);
  v167 = swift_getKeyPath(&unk_1006305E0);
  LODWORD(v203) = static Edge.Set.horizontal.getter(v167);
  v168 = EdgeInsets.init(_all:)(24.0);
  v170 = v169;
  v172 = v171;
  v174 = v173;
  v175 = v208;
  v176 = (uint64_t)v204;
  sub_100021CC0(v208, (uint64_t)v204, &qword_1008299C8);
  sub_100045AD4((uint64_t)v239, (uint64_t)v214, &qword_1008299E8);
  v177 = v205;
  sub_100021CC0(v176, v205, &qword_1008299C8);
  v178 = sub_100047110(&qword_1008299F0);
  v179 = v177 + *(int *)(v178 + 48);
  sub_100045AD4((uint64_t)v214, (uint64_t)v215, &qword_1008299E8);
  sub_100045AD4((uint64_t)v215, v179, &qword_1008299E8);
  v180 = v177 + *(int *)(v178 + 64);
  v182 = v206;
  v181 = v207;
  *(_QWORD *)v180 = v206;
  *(_QWORD *)(v180 + 8) = v165;
  *(_BYTE *)(v180 + 16) = v141;
  *(_QWORD *)(v180 + 24) = v181;
  *(_QWORD *)(v180 + 32) = v167;
  *(_BYTE *)(v180 + 40) = 1;
  *(_BYTE *)(v180 + 48) = (_BYTE)v203;
  *(double *)(v180 + 56) = v168;
  *(_QWORD *)(v180 + 64) = v170;
  *(_QWORD *)(v180 + 72) = v172;
  *(_QWORD *)(v180 + 80) = v174;
  *(_BYTE *)(v180 + 88) = 0;
  sub_10024CA5C((uint64_t)v215, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1001E063C);
  sub_1000E439C(v182, v165, v141);
  swift_bridgeObjectRetain(v181);
  swift_retain(v167);
  sub_10001BE90(v175, &qword_1008299C8);
  sub_1000E4458(v182, v165, v141);
  swift_release(v167);
  swift_bridgeObjectRelease(v181);
  sub_100045AD4((uint64_t)v214, (uint64_t)&v216, &qword_1008299E8);
  sub_10024CA5C((uint64_t)&v216, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1001E0678);
  return sub_10001BE90(v176, &qword_1008299C8);
}

uint64_t sub_10024BB9C()
{
  uint64_t KeyPath;
  uint64_t v1;
  unint64_t v2;
  __int128 v4;

  v4 = xmmword_100630550;
  KeyPath = swift_getKeyPath(&unk_100630618);
  v1 = sub_100047110(&qword_1008299F8);
  v2 = sub_10024CAC0();
  return ForEach<>.init(_:id:content:)(&v4, KeyPath, sub_10024BC38, 0, v1, &type metadata for Text, v2, &protocol witness table for Int, &protocol witness table for Text);
}

uint64_t sub_10024BC38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD v20[2];

  v3 = *a1;
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, 0, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = sub_100047110((uint64_t *)&unk_100827460);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100622F90;
  *(_QWORD *)(v11 + 56) = &type metadata for Int;
  *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v11 + 32) = v3;
  v12 = String.init(format:_:)(v7, v9, v11, (__n128)xmmword_100622F90);
  v14 = v13;
  swift_bridgeObjectRelease(v9);
  v20[0] = v12;
  v20[1] = v14;
  v15 = sub_100038CA0();
  result = Text.init<A>(_:)(v20, &type metadata for String, v15);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v17;
  *(_BYTE *)(a2 + 16) = v18 & 1;
  *(_QWORD *)(a2 + 24) = v19;
  return result;
}

uint64_t sub_10024BD80@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char v42[16];
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v41 = a2;
  v38 = sub_100047110(&qword_100829998);
  __chkstk_darwin(v38);
  v37 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_1008299A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - v8;
  v10 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_100820FD8);
  v39 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v36 - v18;
  static ToolbarItemPlacement.topBarTrailing.getter(v17);
  v43 = a1;
  v20 = sub_100047110(&qword_100820FE0);
  v21 = sub_100028384(&qword_100820FE8, &qword_100820FE0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v40 = v19;
  v22 = ToolbarItem<>.init(placement:content:)(v12, sub_10024C840, v42, v20, v21);
  if ((a1[9] & 1) != 0)
  {
    v27 = static ToolbarItemPlacement.topBarLeading.getter(v22);
    v36 = v9;
    __chkstk_darwin(v27);
    *(&v36 - 2) = a1;
    ToolbarItem<>.init(placement:content:)(v12, sub_10024C874, &v36 - 4, v20, v21);
    v9 = v36;
    v28 = sub_100028384(&qword_100820FF0, &qword_100820FD8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
    static ToolbarContentBuilder.buildBlock<A>(_:)(v15, v13, v28);
    v29 = sub_100047110(&qword_1008299A8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v6, 0, 1, v29);
    v44 = v13;
    v45 = v28;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    static ToolbarContentBuilder.buildIf<A>(_:)(v6, v29, OpaqueTypeConformance2);
    sub_10001BE90((uint64_t)v6, &qword_1008299A0);
    v26 = v39;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v13);
  }
  else
  {
    v23 = sub_100047110(&qword_1008299A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 1, 1, v23);
    v24 = sub_100028384(&qword_100820FF0, &qword_100820FD8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
    v44 = v13;
    v45 = v24;
    v25 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    static ToolbarContentBuilder.buildIf<A>(_:)(v6, v23, v25);
    sub_10001BE90((uint64_t)v6, &qword_1008299A0);
    v26 = v39;
  }
  v32 = v37;
  v31 = v38;
  v33 = (uint64_t)&v37[*(int *)(v38 + 48)];
  v34 = v40;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v37, v40, v13);
  sub_100021CC0((uint64_t)v9, v33, &qword_1008299A0);
  TupleToolbarContent.init(_:)(v32, v31);
  sub_10001BE90((uint64_t)v9, &qword_1008299A0);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v34, v13);
}

uint64_t sub_10024C150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  __n128 v32;
  _OWORD *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  void *v40;
  char *v41;
  id v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t);
  uint64_t v61;
  __int128 aBlock;
  uint64_t (*v63)(uint64_t);
  void *v64;
  uint64_t (*v65)();
  char *v66;
  uint64_t v67;
  __int128 v68;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v57 = *(_QWORD *)(v1 - 8);
  v58 = v1;
  __chkstk_darwin(v1);
  v56 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v54 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  __chkstk_darwin(v3);
  v53 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Calendar.Component(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Calendar(0);
  v59 = *(_QWORD *)(v9 - 8);
  v60 = (uint64_t (*)(char *, uint64_t))v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v12);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v52 = (char *)&v52 - v20;
  static Calendar.current.getter(v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Calendar.Component.day(_:), v5);
  v68 = *(_OWORD *)(v0 + 32);
  v61 = v0;
  aBlock = *(_OWORD *)(v0 + 32);
  v22 = sub_100047110(&qword_10081F1D8);
  v23 = State.wrappedValue.getter(&v67, v22);
  v24 = v67;
  Date.init()(v23);
  Calendar.date(byAdding:value:to:wrappingComponents:)(v8, v24, v18, 0);
  v25 = *(void (**)(char *, uint64_t))(v16 + 8);
  v25(v18, v15);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v26 = v11;
  v27 = v15;
  (*(void (**)(char *, uint64_t (*)(char *, uint64_t)))(v59 + 8))(v26, v60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v28 = sub_10001BE90((uint64_t)v14, (uint64_t *)&unk_100828370);
    return (*(uint64_t (**)(uint64_t))(v61 + 16))(v28);
  }
  else
  {
    v30 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v31 = v52;
    v30(v52, v14, v15);
    sub_10002FB54();
    v60 = (uint64_t (*)(char *, uint64_t))v25;
    v59 = static OS_dispatch_queue.main.getter(v32);
    v33 = (_OWORD *)v61;
    v34 = *(void **)v61;
    v35 = *(_QWORD *)(v61 + 24);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v31, v27);
    v36 = *(unsigned __int8 *)(v16 + 80);
    v37 = (v36 + 64) & ~v36;
    v38 = (char *)swift_allocObject(&unk_100791118, v37 + v17, v36 | 7);
    v39 = v33[1];
    *((_OWORD *)v38 + 1) = *v33;
    *((_OWORD *)v38 + 2) = v39;
    *((_OWORD *)v38 + 3) = v33[2];
    v30(&v38[v37], v18, v27);
    v65 = sub_10024C9AC;
    v66 = v38;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v63 = sub_10002D0F8;
    v64 = &unk_100791130;
    v40 = _Block_copy(&aBlock);
    v41 = v66;
    v42 = v34;
    swift_retain(v35);
    sub_10004D65C((uint64_t)&v68);
    swift_release(v41);
    v43 = v53;
    static DispatchQoS.unspecified.getter(v44);
    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
    v45 = sub_10002FAC0();
    v46 = sub_100047110(&qword_100828C80);
    v47 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
    v48 = v56;
    v49 = v46;
    v50 = v58;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v49, v47, v58, v45);
    v51 = (void *)v59;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v43, v48, v40);
    _Block_release(v40);

    (*(void (**)(char *, uint64_t))(v57 + 8))(v48, v50);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v43, v55);
    return v60(v31, v27);
  }
}

uint64_t sub_10024C5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  id v19;
  __int128 v21;

  v8 = LocalizedStringKey.init(stringLiteral:)(a2, a3);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = *(void **)a1;
  v16 = *(_QWORD *)(a1 + 24);
  v21 = *(_OWORD *)(a1 + 32);
  v17 = (_OWORD *)swift_allocObject(a4, 64, 7);
  v18 = *(_OWORD *)(a1 + 16);
  v17[1] = *(_OWORD *)a1;
  v17[2] = v18;
  v17[3] = *(_OWORD *)(a1 + 32);
  v19 = v15;
  swift_retain(v16);
  sub_10004D65C((uint64_t)&v21);
  return Button<>.init(_:action:)(v8, v10, v12 & 1, v14, a5, v17);
}

uint64_t sub_10024C688(uint64_t a1)
{
  void *v2;
  Class isa;

  v2 = *(void **)a1;
  isa = Date._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "pauseRingsUntilDate:completionHandler:", isa, 0);

  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_10024C6E0()
{
  _OWORD *v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[3];

  v1 = v0[1];
  v14[0] = *v0;
  v14[1] = v1;
  v14[2] = v0[2];
  v9[2] = v14;
  v2 = sub_100047110(&qword_100829950);
  v3 = sub_100007050(&qword_100829958);
  v4 = sub_100007050(&qword_100829960);
  v10 = sub_100007050(&qword_100829968);
  v11 = sub_100007050(&qword_100829970);
  v12 = sub_100028384(&qword_100829978, &qword_100829968, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  v13 = sub_100028384(&qword_100829980, &qword_100829970, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v10 = v4;
  v11 = OpaqueTypeConformance2;
  v6 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.navigationTitle(_:)>>, 1);
  v10 = v3;
  v11 = v6;
  v7 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  return NavigationStack.init<>(root:)(sub_10024C828, v9, v2, v7);
}

uint64_t sub_10024C828@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10024ABCC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10024C830@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10024AF08(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10024C838@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10024BD80(*(char **)(v1 + 16), a1);
}

uint64_t sub_10024C840()
{
  uint64_t v0;

  return sub_10024C5B4(*(_QWORD *)(v0 + 16), 5522771, 0xE300000000000000, (uint64_t)&unk_1007910F0, (uint64_t)sub_10024C908);
}

uint64_t sub_10024C874()
{
  uint64_t v0;

  return sub_10024C5B4(*(_QWORD *)(v0 + 16), 0x4C45434E4143, 0xE600000000000000, (uint64_t)&unk_1007910C8, (uint64_t)sub_10024C8B0);
}

uint64_t sub_10024C8B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_10024C8D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10024C908()
{
  return sub_10024C150();
}

uint64_t sub_10024C928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10024C9AC()
{
  uint64_t v0;

  type metadata accessor for Date(0);
  return sub_10024C688(v0 + 16);
}

unint64_t sub_10024C9DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1008299D8;
  if (!qword_1008299D8)
  {
    v1 = sub_100007050(&qword_1008299D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1008299D8);
  }
  return result;
}

double sub_10024CA38(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 121) = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_10024CA5C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 136);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), v4);
  return a1;
}

unint64_t sub_10024CAC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100829A00;
  if (!qword_100829A00)
  {
    v1 = sub_100007050(&qword_1008299F8);
    sub_10011DC98();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ClosedRange<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100829A00);
  }
  return result;
}

uint64_t sub_10024CB2C()
{
  return sub_100028384(&qword_100829A08, &qword_100829A10, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
}

uint64_t *sub_10024CB58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t, __n128);
  __n128 v35;
  uint64_t v36;
  uint64_t v38;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = *(int *)(a3 + 20);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    *(_WORD *)v15 = *(_WORD *)((char *)a2 + v14);
    v17 = *(uint64_t *)((char *)a2 + v14 + 16);
    *((_QWORD *)v15 + 1) = *(uint64_t *)((char *)a2 + v14 + 8);
    *((_QWORD *)v15 + 2) = v17;
    v18 = type metadata accessor for TrendListMetric(0);
    v19 = *(int *)(v18 + 28);
    v20 = &v15[v19];
    v21 = &v16[v19];
    v22 = type metadata accessor for AttributedString(0);
    v38 = a3;
    v23 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v22 - 8) + 16);
    v24 = swift_bridgeObjectRetain(v17);
    v23(v20, v21, v22, v24);
    v25 = *(int *)(v18 + 32);
    v26 = &v15[v25];
    v27 = &v16[v25];
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = *(int *)(v38 + 24);
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = *(_OWORD *)((char *)a2 + v29 + 24);
    *(_OWORD *)((char *)a1 + v29 + 24) = v32;
    v33 = v32;
    v34 = **(void (***)(char *, char *, uint64_t, __n128))(v32 - 8);
    v35 = swift_bridgeObjectRetain(v28);
    v34(v30, v31, v33, v35);
    v36 = *(int *)(v38 + 28);
    v12 = *(uint64_t *)((char *)a2 + v36);
    *(uint64_t *)((char *)a1 + v36) = v12;
  }
  swift_retain(v12);
  return a1;
}

double sub_10024CD00(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double result;

  v4 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (char *)a1 + a2[5];
  swift_bridgeObjectRelease(*((_QWORD *)v6 + 2));
  v7 = type metadata accessor for TrendListMetric(0);
  v8 = &v6[*(int *)(v7 + 28)];
  v9 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease(*(_QWORD *)&v6[*(int *)(v7 + 32) + 8]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)((char *)a1 + a2[6]));
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[7])).n128_u64[0];
  return result;
}

_QWORD *sub_10024CDDC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v38;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *(_WORD *)v13 = *(_WORD *)((char *)a2 + v12);
  v15 = *(_QWORD *)((char *)a2 + v12 + 16);
  *((_QWORD *)v13 + 1) = *(_QWORD *)((char *)a2 + v12 + 8);
  *((_QWORD *)v13 + 2) = v15;
  v16 = type metadata accessor for TrendListMetric(0);
  v17 = *(int *)(v16 + 28);
  v18 = &v13[v17];
  v19 = &v14[v17];
  v20 = type metadata accessor for AttributedString(0);
  v38 = a2;
  v21 = a3;
  v22 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v20 - 8) + 16);
  v23 = swift_bridgeObjectRetain(v15);
  v22(v18, v19, v20, v23);
  v24 = *(int *)(v16 + 32);
  v25 = &v13[v24];
  v26 = &v14[v24];
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = v27;
  v28 = *(int *)(v21 + 24);
  v29 = (char *)a1 + v28;
  v30 = (char *)v38 + v28;
  v31 = *(_OWORD *)((char *)v38 + v28 + 24);
  *(_OWORD *)((char *)a1 + v28 + 24) = v31;
  v32 = v31;
  v33 = **(void (***)(char *, char *, uint64_t, __n128))(v31 - 8);
  v34 = swift_bridgeObjectRetain(v27);
  v33(v29, v30, v32, v34);
  v35 = *(int *)(v21 + 28);
  v36 = *(_QWORD *)((char *)v38 + v35);
  *(_QWORD *)((char *)a1 + v35) = v36;
  swift_retain(v36);
  return a1;
}

_QWORD *sub_10024CF60(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *v13 = *((_BYTE *)a2 + v12);
  v13[1] = *((_BYTE *)a2 + v12 + 1);
  *((_QWORD *)v13 + 1) = *(_QWORD *)((char *)a2 + v12 + 8);
  v15 = *(_QWORD *)((char *)a2 + v12 + 16);
  v16 = *(_QWORD *)((char *)a1 + v12 + 16);
  *((_QWORD *)v13 + 2) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = type metadata accessor for TrendListMetric(0);
  v18 = *(int *)(v17 + 28);
  v19 = &v13[v18];
  v20 = &v14[v18];
  v21 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  v22 = *(int *)(v17 + 32);
  v23 = &v13[v22];
  v24 = &v14[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v25 = *((_QWORD *)v24 + 1);
  v26 = *((_QWORD *)v23 + 1);
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  sub_1000F1A58((_QWORD *)((char *)a1 + a3[6]), (_QWORD *)((char *)a2 + a3[6]));
  v27 = a3[7];
  v28 = *(_QWORD *)((char *)a1 + v27);
  v29 = *(_QWORD *)((char *)a2 + v27);
  *(_QWORD *)((char *)a1 + v27) = v29;
  swift_retain(v29);
  swift_release(v28);
  return a1;
}

char *sub_10024D0F4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_WORD *)v9 = *(_WORD *)&a2[v8];
  *(_OWORD *)(v9 + 8) = *(_OWORD *)&a2[v8 + 8];
  v11 = type metadata accessor for TrendListMetric(0);
  v12 = *(int *)(v11 + 28);
  v13 = &v9[v12];
  v14 = &v10[v12];
  v15 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  *(_OWORD *)&v9[*(int *)(v11 + 32)] = *(_OWORD *)&v10[*(int *)(v11 + 32)];
  v16 = a3[6];
  v17 = a3[7];
  v18 = &a1[v16];
  v19 = &a2[v16];
  *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];
  return a1;
}

char *sub_10024D224(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_WORD *)v9 = *(_WORD *)&a2[v8];
  v11 = *(_QWORD *)&a2[v8 + 16];
  v12 = *(_QWORD *)&a1[v8 + 16];
  *((_QWORD *)v9 + 1) = *(_QWORD *)&a2[v8 + 8];
  *((_QWORD *)v9 + 2) = v11;
  swift_bridgeObjectRelease(v12);
  v13 = type metadata accessor for TrendListMetric(0);
  v14 = *(int *)(v13 + 28);
  v15 = &v9[v14];
  v16 = &v10[v14];
  v17 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = *(int *)(v13 + 32);
  v19 = &v9[v18];
  v20 = &v10[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  v23 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease(v23);
  v24 = a3[6];
  v25 = &a1[v24];
  v26 = &a2[v24];
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&a1[v24]);
  v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
  v28 = a3[7];
  v29 = *(_QWORD *)&a1[v28];
  *(_QWORD *)&a1[v28] = *(_QWORD *)&a2[v28];
  swift_release(v29);
  return a1;
}

uint64_t sub_10024D398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10024D3A4);
}

uint64_t sub_10024D3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_100047110(&qword_10081F440);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for TrendListMetric(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_10024D454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10024D460);
}

uint64_t sub_10024D460(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_100047110(&qword_10081F440);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for TrendListMetric(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for VerticalLayoutTrendView(uint64_t a1)
{
  uint64_t result;

  result = qword_100829A70;
  if (!qword_100829A70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for VerticalLayoutTrendView);
  return result;
}

void sub_10024D548(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_1000F2378(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for TrendListMetric(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "(";
      v6[3] = &unk_100630670;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

uint64_t sub_10024D5E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B0E7C, 1);
}

uint64_t sub_10024D5F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  double v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char *v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  double v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  char v121;
  char v122;
  double v123;
  __n128 v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  void *v158;
  uint64_t KeyPath;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  char v183;
  char v184;
  char v185;
  _OWORD v186[14];
  uint64_t v187;
  _BYTE v188[280];
  _BYTE v189[280];
  _OWORD v190[14];
  uint64_t v191;
  _QWORD v192[35];
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  uint64_t v207;
  _OWORD v208[14];
  uint64_t v209;
  _OWORD v210[3];
  uint64_t v211;
  unsigned __int8 v212;
  uint64_t v213;
  unsigned __int8 v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char v225;
  char v226;
  double v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char v231;
  char v232;
  unint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char v237;
  uint64_t v238;
  uint64_t v239;
  char v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char v246;
  char v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char v252;

  v176 = a2;
  v3 = type metadata accessor for AttributedString(0);
  v168 = *(_QWORD *)(v3 - 8);
  v169 = v3;
  __chkstk_darwin(v3);
  v167 = (char *)&KeyPath - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  v177 = v5;
  v178 = v6;
  __chkstk_darwin(v5);
  v166 = (uint64_t)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = type metadata accessor for TrendArrowIndicatorViewRepresentable(0);
  __chkstk_darwin(v173);
  v9 = (char *)&KeyPath - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = sub_100047110(&qword_100829AB8);
  __chkstk_darwin(v174);
  v11 = (char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_100047110(&qword_100829AC0);
  __chkstk_darwin(v175);
  v180 = (uint64_t)&KeyPath - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v181 = (uint64_t)&KeyPath - v14;
  v15 = (int *)type metadata accessor for VerticalLayoutTrendView(0);
  v16 = a1 + v15[5];
  v17 = (_QWORD *)(a1 + v15[6]);
  v18 = v17[3];
  v19 = v17[4];
  sub_100016804(v17, v18);
  LOBYTE(v18) = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19) & 1;
  v20 = *(_QWORD *)(a1 + v15[7]);
  v179 = a1;
  sub_10004F8C8(v16, (uint64_t)v9, type metadata accessor for TrendListMetric);
  v21 = v173;
  v9[*(int *)(v173 + 20)] = v18;
  *(_QWORD *)&v9[*(int *)(v21 + 24)] = v20;
  swift_retain(v20);
  v23 = static Alignment.center.getter(v22);
  _FrameLayout.init(width:height:alignment:)(v210, 0x404C000000000000, 0, 0x404C000000000000, 0, v23, v24);
  sub_10004F8C8((uint64_t)v9, (uint64_t)v11, type metadata accessor for TrendArrowIndicatorViewRepresentable);
  v25 = &v11[*(int *)(v174 + 36)];
  v26 = v210[1];
  *(_OWORD *)v25 = v210[0];
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v210[2];
  v27 = sub_10024E170((uint64_t)v9);
  LOBYTE(v20) = static Edge.Set.top.getter(v27);
  v28 = EdgeInsets.init(_all:)(2.0);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v35 = v180;
  sub_100021CC0((uint64_t)v11, v180, &qword_100829AB8);
  v36 = v35 + *(int *)(v175 + 36);
  *(_BYTE *)v36 = v20;
  *(double *)(v36 + 8) = v28;
  *(_QWORD *)(v36 + 16) = v30;
  *(_QWORD *)(v36 + 24) = v32;
  *(_QWORD *)(v36 + 32) = v34;
  *(_BYTE *)(v36 + 40) = 0;
  sub_10001BE90((uint64_t)v11, &qword_100829AB8);
  sub_10024E1AC(v35, v181);
  v37 = v17[3];
  v38 = v17[4];
  sub_100016804(v17, v37);
  v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
  v41 = v40;
  LOBYTE(v15) = v42;
  v43 = v166;
  sub_1003F6E18(v166);
  LOBYTE(v20) = sub_10054FD90(v43, v39, v41, v15);
  v44 = v20;
  sub_1000EB41C(v39, v41, (char)v15);
  v45 = v177;
  v178 = *(_QWORD *)(v178 + 8);
  v46 = ((uint64_t (*)(uint64_t, uint64_t))v178)(v43, v177);
  if ((v20 & 0xFE) != 0)
    v47 = 0x402E000000000000;
  else
    v47 = 0;
  v48 = static Alignment.center.getter(v46);
  _FrameLayout.init(width:height:alignment:)(&v211, 0, 1, v47, v44 < 2, v48, v49);
  v175 = v211;
  LODWORD(v174) = v212;
  v173 = v213;
  v172 = v214;
  v170 = v216;
  v171 = v215;
  v165 = (char *)v16;
  v50 = *(_QWORD *)(v16 + 16);
  v192[0] = *(_QWORD *)(v16 + 8);
  v192[1] = v50;
  v51 = sub_100038CA0();
  swift_bridgeObjectRetain(v50);
  v52 = Text.init<A>(_:)(v192, &type metadata for String, v51);
  v161 = v53;
  v162 = v52;
  v163 = v54;
  v56 = v55 & 1;
  KeyPath = swift_getKeyPath(&unk_1006306D8);
  v57 = swift_getKeyPath(&unk_100630708);
  v58 = static Edge.Set.trailing.getter(v57);
  v164 = v17;
  v60 = v17[3];
  v59 = v17[4];
  sub_100016804(v17, v60);
  v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 16))(v60, v59);
  v63 = v62;
  v65 = v64;
  sub_1003F6E18(v43);
  LOBYTE(v50) = sub_10054FD90(v43, v61, v63, v65);
  sub_1000EB41C(v61, v63, v65);
  ((void (*)(uint64_t, uint64_t))v178)(v43, v45);
  if ((_BYTE)v50)
    v66 = -5.0;
  else
    v66 = 0.0;
  v67.n128_f64[0] = EdgeInsets.init(_all:)(v66);
  v69 = v161;
  v68 = v162;
  v238 = v162;
  v239 = v161;
  v70 = v56;
  v240 = v56;
  v71 = v163;
  v241 = v163;
  v72 = KeyPath;
  v242 = KeyPath;
  v243 = 0x3FE8000000000000;
  v244 = v57;
  v245 = 1;
  v246 = 0;
  v247 = v58;
  v248 = v67.n128_u64[0];
  v249 = v73;
  v250 = v74;
  v251 = v75;
  v252 = 0;
  v76 = static Alignment.leading.getter(v67);
  sub_1003EBE18(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v208, 0.0, 1, 0.0, 1, v76, v77);
  sub_1000E4458(v68, v69, v70);
  swift_release(v57);
  swift_release(v72);
  swift_bridgeObjectRelease(v71);
  v205 = v208[12];
  v206 = v208[13];
  v207 = v209;
  v201 = v208[8];
  v202 = v208[9];
  v204 = v208[11];
  v203 = v208[10];
  v197 = v208[4];
  v198 = v208[5];
  v200 = v208[7];
  v199 = v208[6];
  v193 = v208[0];
  v194 = v208[1];
  v196 = v208[3];
  v195 = v208[2];
  v78 = type metadata accessor for TrendListMetric(0);
  v79 = v165;
  v80 = v167;
  (*(void (**)(char *, char *, uint64_t))(v168 + 16))(v167, &v165[*(int *)(v78 + 28)], v169);
  v81 = Text.init(_:)(v80);
  v83 = v82;
  v85 = v84;
  v87 = v86 & 1;
  sub_1004E4168(*v79);
  v89 = v88;
  v90 = *(id *)&v88[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

  v91 = Color.init(uiColor:)(v90);
  v192[0] = v91;
  v92 = Text.foregroundStyle<A>(_:)(v192, v81, v83, v87, v85, &type metadata for Color, &protocol witness table for Color);
  v167 = v93;
  v168 = v92;
  v169 = v94;
  LODWORD(v165) = v95 & 1;
  sub_1000E4458(v81, v83, v87);
  swift_release(v91);
  swift_bridgeObjectRelease(v85);
  v163 = swift_getKeyPath(&unk_1006306D8);
  v162 = swift_getKeyPath(&unk_100630708);
  LODWORD(v161) = static Edge.Set.bottom.getter(v162);
  v96 = v164;
  v97 = v164[3];
  v98 = v164[4];
  sub_100016804(v164, v97);
  v99 = (*(uint64_t (**)(uint64_t, uint64_t))(v98 + 16))(v97, v98);
  v101 = v100;
  LOBYTE(v89) = v102;
  sub_1003F6E18(v43);
  LOBYTE(v81) = sub_10054FD90(v43, v99, v101, v89);
  sub_1000EB41C(v99, v101, (char)v89);
  v103 = v177;
  v104 = (void (*)(uint64_t, uint64_t))v178;
  ((void (*)(uint64_t, uint64_t))v178)(v43, v177);
  v105 = -4.0;
  if (!(_BYTE)v81)
    v105 = 0.0;
  v106 = EdgeInsets.init(_all:)(v105);
  v108 = v107;
  v110 = v109;
  v112 = v111;
  v114 = static Edge.Set.trailing.getter(v113);
  v115 = v96[3];
  v116 = v96[4];
  sub_100016804(v96, v115);
  v117 = (*(uint64_t (**)(uint64_t, uint64_t))(v116 + 16))(v115, v116);
  v119 = v118;
  v121 = v120;
  sub_1003F6E18(v43);
  v122 = sub_10054FD90(v43, v117, v119, v121);
  sub_1000EB41C(v117, v119, v121);
  v104(v43, v103);
  if (v122)
    v123 = -5.0;
  else
    v123 = 0.0;
  v124.n128_f64[0] = EdgeInsets.init(_all:)(v123);
  v125 = (char)v165;
  v185 = (char)v165;
  v184 = 0;
  v183 = 0;
  v182 = 0;
  v127 = (uint64_t)v167;
  v126 = v168;
  v217 = v168;
  v218 = v167;
  v219 = (char)v165;
  v128 = v169;
  v220 = v169;
  v130 = v162;
  v129 = v163;
  v221 = v163;
  v222 = 0x3FE8000000000000;
  v223 = v162;
  v224 = 1;
  v225 = 0;
  v226 = v161;
  v227 = v106;
  v228 = v108;
  v229 = v110;
  v230 = v112;
  v231 = 0;
  v232 = v114;
  v233 = v124.n128_u64[0];
  v234 = v131;
  v235 = v132;
  v236 = v133;
  v237 = 0;
  v134 = static Alignment.leading.getter(v124);
  sub_1003EBFE4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v192, 0.0, 1, 0.0, 1, v134, v135);
  sub_1000E4458(v126, v127, v125);
  swift_release(v130);
  swift_release(v129);
  swift_bridgeObjectRelease(v128);
  v136 = v180;
  v137 = v181;
  sub_100021CC0(v181, v180, &qword_100829AC0);
  v138 = v176;
  sub_100021CC0(v136, v176, &qword_100829AC0);
  v139 = (int *)sub_100047110(&qword_100829AC8);
  v140 = v138 + v139[12];
  *(_QWORD *)v140 = 0;
  *(_BYTE *)(v140 + 8) = 0;
  *(_QWORD *)(v140 + 16) = v175;
  *(_BYTE *)(v140 + 24) = v174;
  *(_QWORD *)(v140 + 32) = v173;
  *(_BYTE *)(v140 + 40) = v172;
  v141 = v170;
  *(_QWORD *)(v140 + 48) = v171;
  *(_QWORD *)(v140 + 56) = v141;
  v142 = v139[16];
  v143 = v193;
  v144 = v194;
  v186[0] = v193;
  v186[1] = v194;
  v145 = v206;
  v186[12] = v205;
  v186[13] = v206;
  v146 = v201;
  v147 = v202;
  v186[8] = v201;
  v186[9] = v202;
  v148 = v204;
  v149 = v203;
  v186[10] = v203;
  v186[11] = v204;
  v150 = v197;
  v151 = v198;
  v186[4] = v197;
  v186[5] = v198;
  v152 = v200;
  v153 = v199;
  v186[6] = v199;
  v186[7] = v200;
  v154 = v138 + v142;
  *(_OWORD *)(v154 + 192) = v205;
  *(_OWORD *)(v154 + 208) = v145;
  *(_OWORD *)(v154 + 128) = v146;
  *(_OWORD *)(v154 + 144) = v147;
  *(_OWORD *)(v154 + 160) = v149;
  *(_OWORD *)(v154 + 176) = v148;
  *(_OWORD *)(v154 + 64) = v150;
  *(_OWORD *)(v154 + 80) = v151;
  *(_OWORD *)(v154 + 96) = v153;
  *(_OWORD *)(v154 + 112) = v152;
  v155 = v196;
  v156 = v196;
  *(_OWORD *)v154 = v143;
  *(_OWORD *)(v154 + 16) = v144;
  v157 = v195;
  *(_OWORD *)(v154 + 32) = v195;
  *(_OWORD *)(v154 + 48) = v156;
  v187 = v207;
  *(_QWORD *)(v154 + 224) = v207;
  v158 = (void *)(v138 + v139[20]);
  v186[2] = v157;
  v186[3] = v155;
  memcpy(v188, v192, sizeof(v188));
  memcpy(v158, v192, 0x118uLL);
  sub_10024E204((uint64_t)v186);
  sub_10024E204((uint64_t)v188);
  sub_10001BE90(v137, &qword_100829AC0);
  memcpy(v189, v192, sizeof(v189));
  sub_10024E25C((uint64_t)v189);
  v190[12] = v205;
  v190[13] = v206;
  v191 = v207;
  v190[8] = v201;
  v190[9] = v202;
  v190[11] = v204;
  v190[10] = v203;
  v190[4] = v197;
  v190[5] = v198;
  v190[7] = v200;
  v190[6] = v199;
  v190[0] = v193;
  v190[1] = v194;
  v190[3] = v196;
  v190[2] = v195;
  sub_10024E25C((uint64_t)v190);
  return sub_10001BE90(v136, &qword_100829AC0);
}

uint64_t sub_10024E12C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = sub_100047110(&qword_100829AB0);
  return sub_10024D5F0(v2, a2 + *(int *)(v4 + 44));
}

uint64_t sub_10024E170(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TrendArrowIndicatorViewRepresentable(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10024E1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100829AC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10024E204(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  sub_1000E439C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t sub_10024E25C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  sub_1000E4458(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

unint64_t sub_10024E2B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100829AD0;
  if (!qword_100829AD0)
  {
    v1 = sub_100007050(&qword_100829AD8);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100829AD0);
  }
  return result;
}

id sub_10024E304(uint64_t a1)
{
  return sub_100006964(a1, &UIFontTextStyleHeadline, &qword_100829AF0);
}

id sub_10024E318(uint64_t a1)
{
  return sub_100006964(a1, &UIFontTextStyleBody, &qword_100829AF8);
}

id sub_10024E32C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  objc_super v10;
  _QWORD v11[3];
  uint64_t v12;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_observers];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (void *)objc_opt_self(NSNotificationCenter);
    v4 = v1 + 32;
    swift_bridgeObjectRetain_n(v1, 2);
    do
    {
      sub_10003E9BC(v4, (uint64_t)v11);
      v5 = objc_msgSend(v3, "defaultCenter");
      v6 = v12;
      v7 = sub_100016804(v11, v12);
      v8 = _bridgeAnythingToObjectiveC<A>(_:)(v7, v6);
      objc_msgSend(v5, "removeObserver:", v8);

      swift_unknownObjectRelease(v8);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v11);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n(v1, 2);
  }
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for TrendsOnBoardingActivityTile();
  return objc_msgSendSuper2(&v10, "dealloc");
}

double sub_10024E4CC()
{
  id v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  Class isa;
  uint64_t v46;
  uint64_t v47;
  double result;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v6 = v5;

  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setText:", v7);
  swift_bridgeObjectRelease(v6);

  v8 = (void *)objc_opt_self(UIColor);
  v9 = objc_msgSend(v8, "labelColor");
  v10 = (void *)UILabel.withTextColor(_:)();

  objc_msgSend(v10, "setLineBreakMode:", 0);
  objc_msgSend(v10, "setNumberOfLines:", 0);
  if (qword_10081D8D0 != -1)
    swift_once(&qword_10081D8D0, sub_10024E304);
  objc_msgSend(v10, "setFont:", qword_100829AF0);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v11 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v12 = objc_msgSend(v1, "mainBundle");
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setText:", v17);
  swift_bridgeObjectRelease(v16);

  v18 = objc_msgSend(v8, "secondaryLabelColor");
  v19 = (void *)UILabel.withTextColor(_:)();

  objc_msgSend(v19, "setLineBreakMode:", 0);
  objc_msgSend(v19, "setNumberOfLines:", 0);
  if (qword_10081D8D8 != -1)
    swift_once(&qword_10081D8D8, sub_10024E318);
  objc_msgSend(v19, "setFont:", qword_100829AF8);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v20 = *(void **)(v51 + OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_insetContentView);
  objc_msgSend(v20, "addSubview:", v10);
  objc_msgSend(v20, "addSubview:", v19);
  v50 = (id)objc_opt_self(NSLayoutConstraint);
  v49 = sub_100047110((uint64_t *)&unk_100828340);
  v21 = swift_allocObject(v49, 88, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100626C00;
  v22 = objc_msgSend(v10, "topAnchor");
  v23 = objc_msgSend(v20, "topAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v23, 16.0);

  *(_QWORD *)(v21 + 32) = v24;
  v25 = objc_msgSend(v10, "leadingAnchor");
  v26 = objc_msgSend(v20, "leadingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:constant:", v26, 16.0);

  *(_QWORD *)(v21 + 40) = v27;
  v28 = objc_msgSend(v10, "trailingAnchor");
  v29 = objc_msgSend(v20, "trailingAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, -16.0);

  *(_QWORD *)(v21 + 48) = v30;
  v31 = objc_msgSend(v19, "topAnchor");
  v32 = objc_msgSend(v10, "bottomAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v32, 4.0);

  *(_QWORD *)(v21 + 56) = v33;
  v34 = objc_msgSend(v19, "leadingAnchor");
  v35 = objc_msgSend(v20, "leadingAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v35, 16.0);

  *(_QWORD *)(v21 + 64) = v36;
  v37 = objc_msgSend(v19, "trailingAnchor");
  v38 = objc_msgSend(v20, "trailingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, -16.0);

  *(_QWORD *)(v21 + 72) = v39;
  v40 = objc_msgSend(v19, "bottomAnchor");
  v41 = objc_msgSend(v20, "bottomAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:constant:", v41, -16.0);

  *(_QWORD *)(v21 + 80) = v42;
  specialized Array._endMutation()(v43);
  v44 = v21;
  sub_100039898();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v50, "activateConstraints:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);

  v46 = swift_allocObject(v49, 48, 7);
  *(_OWORD *)(v46 + 16) = xmmword_100629280;
  *(_QWORD *)(v46 + 32) = v10;
  *(_QWORD *)(v46 + 40) = v19;
  v52 = v46;
  specialized Array._endMutation()(v46);
  v47 = *(_QWORD *)(v51 + OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_activeViews);
  *(_QWORD *)(v51 + OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_activeViews) = v52;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v47).n128_u64[0];
  return result;
}

void sub_10024EC34()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for TrendsOnBoardingActivityTile();
  objc_msgSendSuper2(&v9, "prepareForReuse");
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_activeViews];
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_activeViews], 2);
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v1, 2);
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_videoView], "teardownPlayer");
    v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_configuration];
    v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_configuration + 8];
    *(_OWORD *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_configuration] = xmmword_100623580;
    sub_1000297A8(v7, v8);
    return;
  }
  if (v1 < 0)
    v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_activeViews];
  else
    v6 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_activeViews], 2);
  v2 = _CocoaArrayWrapper.endIndex.getter(v6);
  if (!v2)
    goto LABEL_13;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
      else
        v4 = *(id *)(v1 + 8 * i + 32);
      v5 = v4;
      objc_msgSend(v4, "removeFromSuperview");

    }
    goto LABEL_13;
  }
  __break(1u);
}

_QWORD *destroy for TrendsOnBoardingActivityTile.Configuration(_QWORD *result)
{
  if (*result >= 0xFFFFFFFFuLL)
    return (_QWORD *)swift_release(result[1]);
  return result;
}

uint64_t *_s10FitnessApp28TrendsOnBoardingActivityTileC13ConfigurationOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  LODWORD(v3) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v3 = *a2;
  if ((v3 + 1) <= 1 && (_DWORD)v3 == -1)
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain(v4);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

uint64_t *assignWithCopy for TrendsOnBoardingActivityTile.Configuration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v4) = -1;
  v5 = v4 + 1;
  v6 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    LODWORD(v7) = -1;
  else
    v7 = *a2;
  v8 = v7 + 1;
  if (v5 > 1)
  {
    if (v8 <= 1 && (_DWORD)v7 == -1)
      goto LABEL_13;
LABEL_18:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v8 > 1)
  {
    if (v5)
      goto LABEL_18;
LABEL_17:
    swift_release(a1[1]);
    goto LABEL_18;
  }
  if (!v5)
  {
    if ((_DWORD)v7 == -1)
    {
      v11 = a2[1];
      v12 = a1[1];
      *a1 = v6;
      a1[1] = v11;
      swift_retain(v11);
      swift_release(v12);
      return a1;
    }
    goto LABEL_17;
  }
  if ((_DWORD)v7 != -1)
    goto LABEL_18;
LABEL_13:
  v9 = a2[1];
  *a1 = v6;
  a1[1] = v9;
  swift_retain(v9);
  return a1;
}

uint64_t *assignWithTake for TrendsOnBoardingActivityTile.Configuration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v4) = -1;
  v5 = v4 + 1;
  v6 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    LODWORD(v7) = -1;
  else
    v7 = *a2;
  v8 = v7 + 1;
  if (v5 > 1)
  {
    if (v8 <= 1 && (_DWORD)v7 == -1)
      goto LABEL_13;
LABEL_18:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v8 > 1)
  {
    if (v5)
      goto LABEL_18;
LABEL_17:
    swift_release(a1[1]);
    goto LABEL_18;
  }
  if (!v5)
  {
    if ((_DWORD)v7 == -1)
    {
      v11 = a2[1];
      v12 = a1[1];
      *a1 = v6;
      a1[1] = v11;
      swift_release(v12);
      return a1;
    }
    goto LABEL_17;
  }
  if ((_DWORD)v7 != -1)
    goto LABEL_18;
LABEL_13:
  v9 = a2[1];
  *a1 = v6;
  a1[1] = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for TrendsOnBoardingActivityTile.Configuration(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 3)
    return (v3 - 2);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TrendsOnBoardingActivityTile.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_10024F068(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_10024F088(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    result[1] = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendsOnBoardingActivityTile.Configuration()
{
  return &type metadata for TrendsOnBoardingActivityTile.Configuration;
}

uint64_t sub_10024F0C8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10024F0EC(uint64_t a1)
{
  uint64_t v1;

  sub_1000399A4(a1, v1, (uint64_t)"TrendsOnBoardingActivityTile did receive ActivityTileViewControllerPauseVideos", 78, (SEL *)&selRef_pause);
}

void sub_10024F118()
{
  char *v0;
  uint64_t v1;
  id v2;

  *(_OWORD *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_configuration] = xmmword_100623580;
  v1 = OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_insetContentView;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_activeViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_videoView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp28TrendsOnBoardingActivityTile_observers] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/TrendsOnBoardingActivityTile.swift", 45, 2, 187, 0);
  __break(1u);
}

unint64_t sub_10024F210()
{
  unint64_t result;

  result = qword_100829B50;
  if (!qword_100829B50)
  {
    result = swift_getWitnessTable(&unk_100630820, &type metadata for OpenSummaryCardIntent);
    atomic_store(result, (unint64_t *)&qword_100829B50);
  }
  return result;
}

unint64_t sub_10024F258()
{
  unint64_t result;

  result = qword_100829B58;
  if (!qword_100829B58)
  {
    result = swift_getWitnessTable(&unk_10063C3FC, &type metadata for SummaryCardEntity);
    atomic_store(result, (unint64_t *)&qword_100829B58);
  }
  return result;
}

uint64_t sub_10024F29C()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_100008398(v0, qword_10086A370);
  sub_10003CE9C(v0, (uint64_t)qword_10086A370);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x8000000100692AF0);
}

uint64_t sub_10024F2FC()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

_QWORD *sub_10024F32C@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10024F364(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

unint64_t sub_10024F39C()
{
  unint64_t result;

  result = qword_100829B60;
  if (!qword_100829B60)
  {
    result = swift_getWitnessTable(&unk_100630848, &type metadata for OpenSummaryCardIntent);
    atomic_store(result, (unint64_t *)&qword_100829B60);
  }
  return result;
}

uint64_t sub_10024F3E0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_10024F8E8();
  v5 = sub_10024F970();
  return static URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

unint64_t sub_10024F438()
{
  unint64_t result;

  result = qword_100829B68;
  if (!qword_100829B68)
  {
    result = swift_getWitnessTable(&unk_1006308D8, &type metadata for OpenSummaryCardIntent);
    atomic_store(result, (unint64_t *)&qword_100829B68);
  }
  return result;
}

unint64_t sub_10024F480()
{
  unint64_t result;

  result = qword_100829B70;
  if (!qword_100829B70)
  {
    result = swift_getWitnessTable(&unk_100630900, &type metadata for OpenSummaryCardIntent);
    atomic_store(result, (unint64_t *)&qword_100829B70);
  }
  return result;
}

uint64_t sub_10024F4C4(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10024F39C();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_10024F504@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10081D8E0 != -1)
    swift_once(&qword_10081D8E0, sub_10024F29C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10003CE9C(v2, (uint64_t)qword_10086A370);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_10024F574(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10024F8E8();
  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_10024F59C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = (_QWORD *)swift_task_alloc(async function pointer to URLRepresentableIntent<>.perform()[1]);
  *(_QWORD *)(v2 + 16) = v4;
  v5 = sub_10024F8E8();
  v6 = sub_10024F92C();
  v7 = sub_10024F970();
  *v4 = v2;
  v4[1] = sub_10010123C;
  return URLRepresentableIntent<>.perform()(a2, v5, v6, v7);
}

uint64_t sub_10024F620@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10024F67C();
  *a1 = result;
  return result;
}

uint64_t sub_10024F644(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10024F39C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenSummaryCardIntent()
{
  return &type metadata for OpenSummaryCardIntent;
}

uint64_t sub_10024F67C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t, uint64_t);
  unint64_t v19;
  _BYTE v21[15];
  char v22;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v21[-v8];
  v10 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v10);
  v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047110(&qword_100829B80);
  LocalizedStringResource.init(stringLiteral:)(0x6E6F6974636553, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000017, 0x8000000100692AD0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v22 = 18;
  v17 = type metadata accessor for IntentDialog(0);
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v9, 1, 1, v17);
  v18(v6, 1, 1, v17);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  v19 = sub_10024F8A4();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v16, v12, &v22, v9, v6, v3, v19);
}

unint64_t sub_10024F8A4()
{
  unint64_t result;

  result = qword_100829B88;
  if (!qword_100829B88)
  {
    result = swift_getWitnessTable(&unk_10063C36C, &type metadata for SummaryCardEntity);
    atomic_store(result, (unint64_t *)&qword_100829B88);
  }
  return result;
}

unint64_t sub_10024F8E8()
{
  unint64_t result;

  result = qword_100829B90;
  if (!qword_100829B90)
  {
    result = swift_getWitnessTable(&unk_1006307A0, &type metadata for OpenSummaryCardIntent);
    atomic_store(result, (unint64_t *)&qword_100829B90);
  }
  return result;
}

unint64_t sub_10024F92C()
{
  unint64_t result;

  result = qword_100829B98;
  if (!qword_100829B98)
  {
    result = swift_getWitnessTable(&unk_1006307F0, &type metadata for OpenSummaryCardIntent);
    atomic_store(result, (unint64_t *)&qword_100829B98);
  }
  return result;
}

unint64_t sub_10024F970()
{
  unint64_t result;

  result = qword_100829BA0;
  if (!qword_100829BA0)
  {
    result = swift_getWitnessTable(&unk_10063C3C4, &type metadata for SummaryCardEntity);
    atomic_store(result, (unint64_t *)&qword_100829BA0);
  }
  return result;
}

uint64_t sub_10024F9B4()
{
  uint64_t result;
  uint64_t v1;

  result = static NotificationRequestConstants.moveModeNotificationCategory.getter();
  qword_10086A388 = result;
  unk_10086A390 = v1;
  return result;
}

uint64_t sub_10024F9F4()
{
  uint64_t result;
  uint64_t v1;

  result = static NotificationRequestConstants.moveModeChangeModeNotificationCategory.getter();
  qword_10086A398 = result;
  unk_10086A3A0 = v1;
  return result;
}

uint64_t sub_10024FA34()
{
  uint64_t result;
  uint64_t v1;

  result = static NotificationRequestConstants.moveModeChangeGoalsNotificationCategory.getter();
  qword_10086A3A8 = result;
  unk_10086A3B0 = v1;
  return result;
}

id sub_10024FA74(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v7;
  NSString v8;

  if (*a3 != -1)
    swift_once(a3, a6);
  v7 = *a5;
  swift_bridgeObjectRetain(v7);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  return v8;
}

id sub_10024FB18()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FitnessCoachingNotificationRequestConstantsBridging();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FitnessCoachingNotificationRequestConstantsBridging()
{
  return objc_opt_self(FCNotificationRequestConstants);
}

unint64_t sub_10024FB70()
{
  unint64_t result;

  result = qword_100829BD0;
  if (!qword_100829BD0)
  {
    result = swift_getWitnessTable(&unk_1006309D0, &type metadata for WorkoutStat);
    atomic_store(result, (unint64_t *)&qword_100829BD0);
  }
  return result;
}

uint64_t sub_10024FBB4()
{
  Swift::String *v0;
  Swift::String *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t countAndFlagsBits;
  void *object;
  __n128 v24;
  uint64_t v26;

  v1 = v0;
  v2 = sub_100047110(&qword_100820D18);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v26 - v16;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*v1);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
  LocalizedStringResource.init(stringInterpolation:)(v17);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v1[1]);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
  LocalizedStringResource.init(stringInterpolation:)(v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  countAndFlagsBits = v1[2]._countAndFlagsBits;
  object = v1[2]._object;
  v24 = swift_bridgeObjectRetain(object);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(countAndFlagsBits, object, 0, 0, v24);
  return DisplayRepresentation.init(title:subtitle:image:)(v11, v7, v4);
}

uint64_t sub_10024FDBC()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_10024FDDC()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_10024FDFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v0 = type metadata accessor for WorkoutActivityEntity(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_100829C48);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  EntityProperty.wrappedValue.getter(v6);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0))
  {
    sub_10001BE90((uint64_t)v6, &qword_100829C48);
  }
  else
  {
    sub_10020B570((uint64_t)v6, (uint64_t)v3);
    sub_10001BE90((uint64_t)v6, &qword_100829C48);
    v8 = *(_QWORD *)&v3[*(int *)(v0 + 32)];
    swift_retain(v8);
    v9 = sub_10020B5B4((uint64_t)v3);
    if (v8)
    {
      v7 = WorkoutStep.displayString.getter(v9);
      swift_release(v8);
      return v7;
    }
  }
  EntityProperty.wrappedValue.getter(&v12);
  return Int.localizedString.getter(v12);
}

uint64_t sub_10024FF48()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void (*v14)(char *, uint64_t);
  double v15;
  id v16;
  void (*v17)(char *, uint64_t);
  double v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v0 = sub_100047110(&qword_100821E40);
  v22 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - v4;
  v6 = sub_100047110(&qword_100821E10);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - v11;
  EntityProperty.wrappedValue.getter(v9);
  v13 = objc_msgSend((id)objc_opt_self(NSUnitLength), "meters");
  Measurement<>.converted(to:)();

  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  v15 = Measurement.value.getter(v6);
  v14(v12, v6);
  EntityProperty.wrappedValue.getter(v2);
  v16 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "seconds");
  Measurement<>.converted(to:)();

  v17 = *(void (**)(char *, uint64_t))(v22 + 8);
  v17(v2, v0);
  v18 = Measurement.value.getter(v0);
  v17(v5, v0);
  v19 = type metadata accessor for WorkoutDurationMetrics();
  swift_allocObject(v19, 160, 7);
  return sub_1003546AC(v15, v18);
}

__n128 sub_100250150@<Q0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  _OWORD v5[7];

  sub_1002509F8(v5);
  v2 = v5[5];
  *(_OWORD *)(a1 + 64) = v5[4];
  *(_OWORD *)(a1 + 80) = v2;
  *(_OWORD *)(a1 + 96) = v5[6];
  v3 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)v5[3];
  *(_OWORD *)(a1 + 32) = v5[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

unint64_t sub_1002501A0()
{
  unint64_t result;

  result = qword_100829BD8;
  if (!qword_100829BD8)
  {
    result = swift_getWitnessTable(&unk_100630A28, &type metadata for WorkoutStat);
    atomic_store(result, (unint64_t *)&qword_100829BD8);
  }
  return result;
}

unint64_t sub_1002501E8()
{
  unint64_t result;

  result = qword_100829BE0;
  if (!qword_100829BE0)
  {
    result = swift_getWitnessTable(&unk_100630A60, &type metadata for WorkoutStat);
    atomic_store(result, (unint64_t *)&qword_100829BE0);
  }
  return result;
}

unint64_t sub_100250230()
{
  unint64_t result;

  result = qword_100829BE8;
  if (!qword_100829BE8)
  {
    result = swift_getWitnessTable(&unk_100630A90, &type metadata for WorkoutStat);
    atomic_store(result, (unint64_t *)&qword_100829BE8);
  }
  return result;
}

uint64_t sub_100250274()
{
  return sub_100028384(&qword_100829BF0, &qword_100829BF8, (uint64_t)&protocol conformance descriptor for _TransientAppEntityQuery<A>);
}

uint64_t sub_1002502A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100253B80();
  return static TransientAppEntity.defaultQuery.getter(a1, v2);
}

unint64_t sub_1002502DC()
{
  unint64_t result;

  result = qword_100829C00;
  if (!qword_100829C00)
  {
    result = swift_getWitnessTable(&unk_100630AC8, &type metadata for WorkoutStat);
    atomic_store(result, (unint64_t *)&qword_100829C00);
  }
  return result;
}

unint64_t sub_100250324()
{
  unint64_t result;

  result = qword_100829C08;
  if (!qword_100829C08)
  {
    result = swift_getWitnessTable(&unk_100630AF0, &type metadata for WorkoutStat);
    atomic_store(result, (unint64_t *)&qword_100829C08);
  }
  return result;
}

unint64_t sub_10025036C()
{
  unint64_t result;

  result = qword_100829C10;
  if (!qword_100829C10)
  {
    result = swift_getWitnessTable(&unk_100630B18, &type metadata for WorkoutStat);
    atomic_store(result, (unint64_t *)&qword_100829C10);
  }
  return result;
}

unint64_t sub_1002503B4()
{
  unint64_t result;

  result = qword_100829C18;
  if (!qword_100829C18)
  {
    result = swift_getWitnessTable(&unk_100630B70, &type metadata for WorkoutStat);
    atomic_store(result, (unint64_t *)&qword_100829C18);
  }
  return result;
}

uint64_t sub_1002503F8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100253B80();
  return TransientAppEntity.id.getter(a1, v2);
}

uint64_t sub_100250430()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v0 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringResource.init(stringLiteral:)(0x2074756F6B726F57, 0xEC00000074617453);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v6, v2);
}

uint64_t sub_10025051C()
{
  return sub_100028384(&qword_100829C20, &qword_100829C28, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_100250548(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10024FB70();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100250584()
{
  unint64_t result;

  result = qword_100829C30;
  if (!qword_100829C30)
  {
    result = swift_getWitnessTable(&unk_100630BA0, &type metadata for WorkoutStat);
    atomic_store(result, (unint64_t *)&qword_100829C30);
  }
  return result;
}

uint64_t sub_1002505CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002503B4();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t destroy for WorkoutStat(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_release(a1[6]);
  swift_release(a1[7]);
  swift_release(a1[8]);
  swift_release(a1[10]);
  swift_release(a1[11]);
  swift_release(a1[12]);
  return swift_release(a1[13]);
}

_QWORD *initializeWithCopy for WorkoutStat(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[6];
  v7 = a2[7];
  a1[6] = v6;
  a1[7] = v7;
  v9 = a2[8];
  v8 = a2[9];
  a1[8] = v9;
  a1[9] = v8;
  v10 = a2[10];
  v11 = a2[11];
  a1[10] = v10;
  a1[11] = v11;
  v12 = a2[12];
  v13 = a2[13];
  a1[12] = v12;
  a1[13] = v13;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v12);
  swift_retain(v13);
  return a1;
}

_QWORD *assignWithCopy for WorkoutStat(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a2[6];
  v11 = a1[6];
  a1[6] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[7];
  v13 = a1[7];
  a1[7] = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = a2[8];
  v15 = a1[8];
  a1[8] = v14;
  swift_retain(v14);
  swift_release(v15);
  a1[9] = a2[9];
  v16 = a2[10];
  v17 = a1[10];
  a1[10] = v16;
  swift_retain(v16);
  swift_release(v17);
  v18 = a2[11];
  v19 = a1[11];
  a1[11] = v18;
  swift_retain(v18);
  swift_release(v19);
  v20 = a2[12];
  v21 = a1[12];
  a1[12] = v20;
  swift_retain(v20);
  swift_release(v21);
  v22 = a2[13];
  v23 = a1[13];
  a1[13] = v22;
  swift_retain(v22);
  swift_release(v23);
  return a1;
}

__n128 initializeWithTake for WorkoutStat(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

_QWORD *assignWithTake for WorkoutStat(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = a1[3];
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  a1[4] = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(a1[5]);
  v8 = a1[6];
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);
  swift_release(v8);
  swift_release(a1[7]);
  v9 = a1[8];
  *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 56);
  swift_release(v9);
  a1[9] = *(_QWORD *)(a2 + 72);
  swift_release(a1[10]);
  v10 = a1[11];
  *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
  swift_release(v10);
  swift_release(a1[12]);
  v11 = a1[13];
  *((_OWORD *)a1 + 6) = *(_OWORD *)(a2 + 96);
  swift_release(v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutStat(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutStat(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutStat()
{
  return &type metadata for WorkoutStat;
}

void sub_1002509F8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;

  v83 = a1;
  v1 = sub_100047110(&qword_100821E40);
  v81 = *(_QWORD *)(v1 - 8);
  v82 = v1;
  __chkstk_darwin(v1);
  v80 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v79 = (char *)&v69 - v4;
  v5 = sub_100047110(&qword_100821E10);
  v77 = *(_QWORD *)(v5 - 8);
  v78 = v5;
  __chkstk_darwin(v5);
  v76 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v75 = (char *)&v69 - v8;
  v9 = sub_100047110(&qword_100821EB0);
  v73 = *(_QWORD *)(v9 - 8);
  v74 = v9;
  __chkstk_darwin(v9);
  v72 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v71 = (char *)&v69 - v12;
  v13 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_100829C50);
  LocalizedStringResource.init(stringLiteral:)(0x2065676172657641, 0xED00006465657053);
  v16 = EntityProperty<>.init(title:)(v15);
  sub_100047110(&qword_100821E48);
  swift_retain(v16);
  LocalizedStringResource.init(stringLiteral:)(0x7865646E49, 0xE500000000000000);
  v17 = EntityProperty<>.init(title:)(v15);
  sub_100047110(&qword_100829C58);
  v84 = v17;
  swift_retain(v17);
  LocalizedStringResource.init(stringLiteral:)(0x65636E6174736944, 0xE800000000000000);
  v18 = EntityProperty<>.init(title:)(v15);
  sub_100047110(&qword_100821E50);
  swift_retain(v18);
  LocalizedStringResource.init(stringLiteral:)(0x6E6F697461727544, 0xE800000000000000);
  v19 = EntityProperty<>.init(title:)(v15);
  sub_100047110(&qword_100829C60);
  swift_retain(v19);
  LocalizedStringResource.init(stringLiteral:)(0x6C61767265746E49, 0xE800000000000000);
  v20 = sub_1000083D8(&qword_100821C10, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625F30);
  v21 = EntityProperty<>.init(title:)(v15, v20);
  sub_100047110(&qword_100829C68);
  swift_retain(v21);
  LocalizedStringResource.init(stringLiteral:)(0x746E656D676553, 0xE700000000000000);
  v22 = sub_100253888();
  v23 = EntityProperty<>.init(title:)(v15, v22);
  sub_100047110(&qword_100829C78);
  swift_retain(v23);
  LocalizedStringResource.init(stringLiteral:)(0x74696C7053, 0xE500000000000000);
  v24 = sub_10020920C();
  v25 = EntityProperty<>.init(title:)(v15, v24);
  v69 = v25;
  v26 = (void *)objc_opt_self(NSUnitSpeed);
  swift_retain_n(v25, 2);
  swift_bridgeObjectRetain(0xEC00000074617453);
  swift_bridgeObjectRetain(0xE000000000000000);
  v85 = 0x8000000100692BB0;
  swift_bridgeObjectRetain(0x8000000100692BB0);
  swift_retain(v16);
  swift_retain(v17);
  swift_retain(v18);
  v27 = v19;
  swift_retain(v19);
  swift_retain(v21);
  v28 = objc_msgSend(v26, "metersPerSecond", swift_retain(v23).n128_f64[0]);
  v29 = sub_10001E724(0, &qword_100821EA8, NSUnitSpeed_ptr);
  v30 = v71;
  Measurement.init(value:unit:)(v28, v29, 0.0);
  v32 = v72;
  v31 = v73;
  v33 = v74;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v72, v30, v74);
  v34 = v16;
  EntityProperty.wrappedValue.setter(v32);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v33);
  v35 = v69;
  swift_release(v69);
  swift_release(v23);
  swift_release(v21);
  swift_release(v27);
  swift_release(v18);
  v36 = v84;
  swift_release(v84);
  swift_release(v34);
  v37 = v85;
  swift_bridgeObjectRelease(v85);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_bridgeObjectRelease(0xEC00000074617453);
  v38 = (void *)objc_opt_self(NSUnitLength);
  swift_bridgeObjectRetain(0xEC00000074617453);
  swift_bridgeObjectRetain(0xE000000000000000);
  swift_bridgeObjectRetain(v37);
  swift_retain(v34);
  swift_retain(v36);
  swift_retain(v18);
  swift_retain(v27);
  v39 = v21;
  swift_retain(v21);
  swift_retain(v23);
  v40 = v35;
  v41 = objc_msgSend(v38, "meters", swift_retain(v35).n128_f64[0]);
  v42 = sub_10001E724(0, &qword_100821EC8, NSUnitLength_ptr);
  v43 = v75;
  Measurement.init(value:unit:)(v41, v42, 0.0);
  v44 = v76;
  v45 = v77;
  v46 = v78;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v76, v43, v78);
  EntityProperty.wrappedValue.setter(v44);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v46);
  v47 = v40;
  swift_release(v40);
  v48 = v23;
  swift_release(v23);
  v49 = v39;
  swift_release(v39);
  v50 = v27;
  swift_release(v27);
  swift_release(v18);
  v51 = v84;
  swift_release(v84);
  v70 = v34;
  swift_release(v34);
  v52 = v85;
  swift_bridgeObjectRelease(v85);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_bridgeObjectRelease(0xEC00000074617453);
  v53 = (void *)objc_opt_self(NSUnitDuration);
  swift_bridgeObjectRetain(0xEC00000074617453);
  swift_bridgeObjectRetain(0xE000000000000000);
  swift_bridgeObjectRetain(v52);
  swift_retain(v34);
  swift_retain(v51);
  v54 = v18;
  swift_retain(v18);
  v55 = v50;
  swift_retain(v50);
  v56 = v49;
  swift_retain(v49);
  swift_retain(v48);
  v57 = v47;
  v58 = objc_msgSend(v53, "seconds", swift_retain(v47).n128_f64[0]);
  v59 = sub_10001E724(0, &qword_100821E88, NSUnitDuration_ptr);
  v60 = v79;
  Measurement.init(value:unit:)(v58, v59, 0.0);
  v61 = v80;
  v62 = v81;
  v63 = v82;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v80, v60, v82);
  EntityProperty.wrappedValue.setter(v61);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v63);
  swift_release(v57);
  v64 = v48;
  swift_release(v48);
  swift_release(v56);
  swift_release(v55);
  swift_release(v54);
  v65 = v84;
  swift_release(v84);
  v66 = v70;
  swift_release(v70);
  v67 = v85;
  swift_bridgeObjectRelease(v85);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_bridgeObjectRelease(0xEC00000074617453);
  v86 = 0;
  swift_bridgeObjectRetain(0xEC00000074617453);
  swift_bridgeObjectRetain(0xE000000000000000);
  swift_bridgeObjectRetain(v67);
  swift_retain(v66);
  swift_retain(v65);
  swift_retain(v54);
  swift_retain(v55);
  swift_retain(v56);
  swift_retain(v64);
  swift_retain(v57);
  EntityProperty.wrappedValue.setter(&v86);
  swift_release(v57);
  swift_release(v64);
  swift_release(v56);
  swift_release(v55);
  swift_release(v54);
  swift_release(v65);
  swift_release(v66);
  swift_bridgeObjectRelease(v67);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_bridgeObjectRelease(0xEC00000074617453);
  swift_release(v57);
  swift_release(v64);
  swift_release(v56);
  swift_release(v55);
  swift_release(v54);
  swift_release(v65);
  swift_release(v66);
  swift_bridgeObjectRelease(v67);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_bridgeObjectRelease(0xEC00000074617453);
  swift_bridgeObjectRetain(0xEC00000074617453);
  swift_bridgeObjectRetain(0xE000000000000000);
  swift_bridgeObjectRetain(v67);
  v68 = v83;
  *v83 = 0x2074756F6B726F57;
  v68[1] = 0xEC00000074617453;
  v68[2] = 0;
  v68[3] = 0xE000000000000000;
  v68[4] = 0xD000000000000011;
  v68[5] = v67;
  v68[6] = v66;
  v68[7] = v65;
  v68[8] = v54;
  v68[9] = 0;
  v68[10] = v55;
  v68[11] = v56;
  v68[12] = v64;
  v68[13] = v57;
}

void sub_100251344(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  CHWorkoutDetailHeartRateTableViewCell *v85;
  uint64_t v86;
  int v87;
  _QWORD *v88;
  uint64_t v89;
  CHWorkoutDetailHeartRateTableViewCell *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  Swift::String v95;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  uint64_t v104;
  CHWorkoutDetailHeartRateTableViewCell *v105;
  uint64_t v106;
  CHWorkoutDetailHeartRateTableViewCell *v107;
  CHWorkoutDetailHeartRateTableViewCell *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  SEL v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  SEL v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  SEL v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  _QWORD *v138;
  uint64_t v139;
  void (*v140)(char *, char *, uint64_t);
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  CHWorkoutDetailHeartRateTableViewCell *v147;
  CHWorkoutDetailHeartRateTableViewCell *v148;
  uint64_t v149;
  CHWorkoutDetailHeartRateTableViewCell *v150;
  CHWorkoutDetailHeartRateTableViewCell *v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  SEL v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  SEL v169;
  id v170;
  id v171;
  id v172;
  id v173;
  id v174;
  id v175;
  CHWorkoutDetailHeartRateTableViewCell *v176;
  SEL v177;
  id v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  _QWORD *v184;
  uint64_t v185;
  void (*v186)(char *, char *, uint64_t);
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  SEL v196;
  id v197;
  id v198;
  id v199;
  id v200;
  id v201;
  id v202;
  CHWorkoutDetailHeartRateTableViewCell *v203;
  SEL v204;
  id v205;
  id v206;
  id v207;
  id v208;
  id v209;
  id v210;
  CHWorkoutDetailHeartRateTableViewCell *v211;
  SEL v212;
  id v213;
  id v214;
  id v215;
  id v216;
  id v217;
  id v218;
  CHWorkoutDetailHeartRateTableViewCell *v219;
  uint64_t v220;
  _QWORD *v221;
  uint64_t v222;
  void (*v223)(char *, char *, uint64_t);
  char *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  SEL v233;
  id v234;
  id v235;
  id v236;
  id v237;
  id v238;
  id v239;
  CHWorkoutDetailHeartRateTableViewCell *v240;
  SEL v241;
  id v242;
  id v243;
  id v244;
  id v245;
  id v246;
  id v247;
  SEL v248;
  id v249;
  id v250;
  id v251;
  id v252;
  id v253;
  id v254;
  uint64_t v255;
  _QWORD *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  CHWorkoutDetailHeartRateTableViewCell *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  SEL v270;
  id v271;
  id v272;
  id v273;
  id v274;
  id v275;
  id v276;
  CHWorkoutDetailHeartRateTableViewCell *v277;
  uint64_t v278;
  SEL v279;
  id v280;
  id v281;
  id v282;
  id v283;
  id v284;
  id v285;
  uint64_t v286;
  uint64_t v287;
  SEL v288;
  id v289;
  id v290;
  id v291;
  id v292;
  id v293;
  id v294;
  SEL v295;
  id v296;
  id v297;
  id v298;
  id v299;
  id v300;
  id v301;
  SEL v302;
  id v303;
  id v304;
  id v305;
  id v306;
  id v307;
  id v308;
  uint64_t v309;
  char *v310;
  uint64_t v311;
  uint64_t v312;
  _QWORD *v313;
  Swift::String v314;
  CHWorkoutDetailHeartRateTableViewCell *v315;
  SEL v316;
  id v317;
  id v318;
  id v319;
  id v320;
  id v321;
  id v322;
  CHWorkoutDetailHeartRateTableViewCell *v323;
  CHWorkoutDetailHeartRateTableViewCell *v324;
  CHWorkoutDetailHeartRateTableViewCell *v325;
  CHWorkoutDetailHeartRateTableViewCell *v326;
  _QWORD *v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  SEL v336;
  id v337;
  id v338;
  id v339;
  id v340;
  id v341;
  id v342;
  CHWorkoutDetailHeartRateTableViewCell *v343;
  SEL v344;
  id v345;
  id v346;
  id v347;
  id v348;
  id v349;
  id v350;
  SEL v351;
  id v352;
  id v353;
  id v354;
  id v355;
  id v356;
  id v357;
  CHWorkoutDetailHeartRateTableViewCell *v358;
  uint64_t v359;
  _QWORD *v360;
  uint64_t v361;
  void (*v362)(char *, char *, uint64_t);
  char *v363;
  uint64_t v364;
  char *v365;
  char *v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  SEL v375;
  id v376;
  id v377;
  id v378;
  id v379;
  id v380;
  id v381;
  CHWorkoutDetailHeartRateTableViewCell *v382;
  SEL v383;
  id v384;
  id v385;
  id v386;
  id v387;
  id v388;
  id v389;
  CHWorkoutDetailHeartRateTableViewCell *v390;
  SEL v391;
  id v392;
  id v393;
  id v394;
  id v395;
  id v396;
  id v397;
  uint64_t v398;
  _QWORD *v399;
  uint64_t v400;
  void (*v401)(char *, char *, uint64_t);
  char *v402;
  uint64_t v403;
  uint64_t v404;
  char *v405;
  char *v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  SEL v412;
  id v413;
  id v414;
  id v415;
  id v416;
  id v417;
  id v418;
  CHWorkoutDetailHeartRateTableViewCell *v419;
  SEL v420;
  id v421;
  id v422;
  id v423;
  id v424;
  id v425;
  id v426;
  SEL v427;
  id v428;
  id v429;
  id v430;
  id v431;
  id v432;
  id v433;
  _QWORD *v434;
  uint64_t v435;
  char *v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  void (*v441)(_QWORD *, uint64_t);
  _QWORD *v442;
  uint64_t v443;
  uint64_t v444;
  CHWorkoutDetailHeartRateTableViewCell *v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  SEL v449;
  id v450;
  id v451;
  id v452;
  id v453;
  id v454;
  id v455;
  SEL v456;
  id v457;
  id v458;
  id v459;
  id v460;
  id v461;
  id v462;
  uint64_t v463;
  uint64_t v464;
  _QWORD *v465;
  uint64_t v466;
  SEL v467;
  id v468;
  id v469;
  id v470;
  id v471;
  id v472;
  id v473;
  SEL v474;
  id v475;
  id v476;
  id v477;
  id v478;
  id v479;
  id v480;
  SEL v481;
  id v482;
  id v483;
  id v484;
  id v485;
  id v486;
  id v487;
  char *v488;
  uint64_t v489;
  void (*v490)(char *, char *, uint64_t);
  uint64_t v491;
  char *v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  SEL v503;
  id v504;
  id v505;
  id v506;
  id v507;
  id v508;
  id v509;
  SEL v510;
  id v511;
  id v512;
  id v513;
  id v514;
  id v515;
  id v516;
  SEL v517;
  id v518;
  id v519;
  id v520;
  id v521;
  id v522;
  id v523;
  void (*v524)(char *, char *, uint64_t);
  char *v525;
  uint64_t v526;
  char *v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  SEL v540;
  id v541;
  id v542;
  id v543;
  id v544;
  id v545;
  id v546;
  SEL v547;
  id v548;
  id v549;
  id v550;
  id v551;
  id v552;
  id v553;
  SEL v554;
  id v555;
  id v556;
  id v557;
  id v558;
  id v559;
  id v560;
  void *v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  id v565;
  uint64_t v566;
  _QWORD *v567;
  id v568;
  uint64_t v569;
  uint64_t v570;
  char *v571;
  uint64_t v572;
  void (*v573)(_QWORD *, uint64_t);
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  SEL v579;
  id v580;
  id v581;
  id v582;
  id v583;
  id v584;
  id v585;
  SEL v586;
  id v587;
  id v588;
  id v589;
  id v590;
  id v591;
  id v592;
  SEL v593;
  id v594;
  id v595;
  id v596;
  id v597;
  id v598;
  id v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  SEL v605;
  id v606;
  id v607;
  id v608;
  id v609;
  id v610;
  id v611;
  SEL v612;
  id v613;
  id v614;
  id v615;
  id v616;
  id v617;
  id v618;
  SEL v619;
  id v620;
  id v621;
  id v622;
  id v623;
  id v624;
  id v625;
  char *v626;
  char *v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  SEL v634;
  id v635;
  id v636;
  id v637;
  id v638;
  id v639;
  id v640;
  SEL v641;
  id v642;
  id v643;
  id v644;
  id v645;
  id v646;
  id v647;
  CHWorkoutDetailHeartRateTableViewCell *v648;
  SEL v649;
  id v650;
  id v651;
  id v652;
  id v653;
  id v654;
  id v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  _QWORD *v659;
  uint64_t v660;
  void (*v661)(char *, char *, uint64_t);
  char *v662;
  uint64_t v663;
  char *v664;
  char *v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  CHWorkoutDetailHeartRateTableViewCell *v670;
  SEL v671;
  id v672;
  id v673;
  id v674;
  id v675;
  id v676;
  id v677;
  CHWorkoutDetailHeartRateTableViewCell *v678;
  SEL v679;
  id v680;
  id v681;
  id v682;
  id v683;
  id v684;
  id v685;
  CHWorkoutDetailHeartRateTableViewCell *v686;
  SEL v687;
  id v688;
  id v689;
  id v690;
  id v691;
  id v692;
  id v693;
  _QWORD *v694;
  char *v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  SEL v703;
  id v704;
  id v705;
  id v706;
  id v707;
  id v708;
  id v709;
  CHWorkoutDetailHeartRateTableViewCell *v710;
  CHWorkoutDetailHeartRateTableViewCell *v711;
  CHWorkoutDetailHeartRateTableViewCell *v712;
  uint64_t v713;
  _QWORD *v714;
  SEL v715;
  id v716;
  id v717;
  id v718;
  id v719;
  id v720;
  id v721;
  SEL v722;
  id v723;
  id v724;
  id v725;
  id v726;
  id v727;
  id v728;
  SEL v729;
  id v730;
  id v731;
  id v732;
  id v733;
  id v734;
  id v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t *v741;
  CHWorkoutDetailHeartRateTableViewCell *v742;
  CHWorkoutDetailHeartRateTableViewCell *v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  char *v747;
  char *v748;
  char *v749;
  char *v750;
  _QWORD *v751;
  _QWORD *v752;
  char *v753;
  char *v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  char *v762;
  char *v763;
  _QWORD *v764;
  _QWORD *v765;
  char *v766;
  char *v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  char *v773;
  _QWORD *v774;
  _QWORD *v775;
  char *v776;
  char *v777;
  uint64_t v778;
  _QWORD *v779;
  uint64_t v780;
  uint64_t *v781;
  char *v782;
  uint64_t v783;
  char *v784;
  char *v785;
  _QWORD *v786;
  uint64_t v787;
  char *v788;
  uint64_t v789;
  _QWORD *v790;
  _QWORD *v791;
  uint64_t v792;
  char *v793;
  uint64_t v794;
  char *v795;
  uint64_t v796;
  uint64_t v797;
  __int128 v798;
  uint64_t v799;
  __int128 v800;
  uint64_t v801;
  CHWorkoutDetailHeartRateTableViewCell *v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  CHWorkoutDetailHeartRateTableViewCell *v807;
  uint64_t v808;
  uint64_t v809;
  unint64_t v810;
  uint64_t v811;
  _QWORD v812[9];
  _QWORD v813[9];
  _OWORD v814[3];
  __int128 v815;
  CHWorkoutDetailHeartRateTableViewCell *v816;
  _BYTE v817[48];
  __int128 v818;
  CHWorkoutDetailHeartRateTableViewCell *v819;
  __int128 v820;
  __int128 v821;
  __int128 v822;
  __int128 v823;
  CHWorkoutDetailHeartRateTableViewCell *v824;

  v797 = a1;
  v781 = a4;
  v791 = a2;
  sub_100045AD4((uint64_t)a2, (uint64_t)v813, &qword_100829C38);
  v768 = v813[0];
  v769 = v813[1];
  v770 = v813[2];
  v778 = v813[3];
  v779 = (_QWORD *)v813[4];
  v780 = v813[5];
  v802 = (CHWorkoutDetailHeartRateTableViewCell *)v813[8];
  v790 = a3;
  sub_100045AD4((uint64_t)a3, (uint64_t)v812, &qword_100829C40);
  v755 = v812[0];
  v756 = v812[1];
  v757 = v812[2];
  v758 = v812[3];
  v759 = v812[4];
  v760 = v812[6];
  v761 = v812[8];
  v787 = sub_100047110(&qword_100821E40);
  v792 = *(_QWORD *)(v787 - 8);
  __chkstk_darwin(v787);
  v785 = (char *)&v746 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v786 = (uint64_t *)((char *)&v746 - v7);
  v8 = sub_100047110(&qword_100821E38);
  __chkstk_darwin(v8);
  v752 = (uint64_t *)((char *)&v746 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v765 = (uint64_t *)((char *)&v746 - v11);
  __chkstk_darwin(v12);
  v775 = (uint64_t *)((char *)&v746 - v13);
  v14 = sub_100047110(&qword_100821E18);
  __chkstk_darwin(v14);
  v751 = (uint64_t *)((char *)&v746 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v764 = (uint64_t *)((char *)&v746 - v17);
  __chkstk_darwin(v18);
  v774 = (uint64_t *)((char *)&v746 - v19);
  v20 = sub_100047110(&qword_100829C48);
  __chkstk_darwin(v20);
  v772 = (uint64_t)&v746 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v771 = (uint64_t)&v746 - v23;
  __chkstk_darwin(v24);
  v807 = (CHWorkoutDetailHeartRateTableViewCell *)((char *)&v746 - v25);
  *(_QWORD *)&v800 = type metadata accessor for WorkoutActivityEntity(0);
  v26 = *(_QWORD *)(v800 - 8);
  __chkstk_darwin(v800);
  *(_QWORD *)&v798 = (char *)&v746 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v794 = sub_100047110(&qword_100821EB0);
  v783 = *(_QWORD *)(v794 - 8);
  __chkstk_darwin(v794);
  v749 = (char *)&v746 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v753 = (char *)&v746 - v30;
  __chkstk_darwin(v31);
  v747 = (char *)&v746 - v32;
  __chkstk_darwin(v33);
  v762 = (char *)&v746 - v34;
  __chkstk_darwin(v35);
  v766 = (char *)&v746 - v36;
  __chkstk_darwin(v37);
  v782 = (char *)&v746 - v38;
  __chkstk_darwin(v39);
  v788 = (char *)&v746 - v40;
  __chkstk_darwin(v41);
  v776 = (char *)&v746 - v42;
  __chkstk_darwin(v43);
  v45 = (char *)&v746 - v44;
  v796 = sub_100047110(&qword_100821E10);
  v789 = *(_QWORD *)(v796 - 8);
  __chkstk_darwin(v796);
  v750 = (char *)&v746 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  v754 = (char *)&v746 - v48;
  __chkstk_darwin(v49);
  v748 = (char *)&v746 - v50;
  __chkstk_darwin(v51);
  v763 = (char *)&v746 - v52;
  __chkstk_darwin(v53);
  v767 = (char *)&v746 - v54;
  __chkstk_darwin(v55);
  v784 = (char *)&v746 - v56;
  __chkstk_darwin(v57);
  v773 = (char *)&v746 - v58;
  __chkstk_darwin(v59);
  v777 = (char *)&v746 - v60;
  __chkstk_darwin(v61);
  v63 = (char *)&v746 - v62;
  v64 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v64);
  v66 = (char *)&v746 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_100829C50);
  LocalizedStringResource.init(stringLiteral:)(0x2065676172657641, 0xED00006465657053);
  v67 = EntityProperty<>.init(title:)(v66);
  sub_100047110(&qword_100821E48);
  v803 = v67;
  swift_retain(v67);
  LocalizedStringResource.init(stringLiteral:)(0x7865646E49, 0xE500000000000000);
  v68 = EntityProperty<>.init(title:)(v66);
  sub_100047110(&qword_100829C58);
  swift_retain(v68);
  LocalizedStringResource.init(stringLiteral:)(0x65636E6174736944, 0xE800000000000000);
  v69 = EntityProperty<>.init(title:)(v66);
  sub_100047110(&qword_100821E50);
  swift_retain(v69);
  LocalizedStringResource.init(stringLiteral:)(0x6E6F697461727544, 0xE800000000000000);
  v70 = EntityProperty<>.init(title:)(v66);
  sub_100047110(&qword_100829C60);
  v804 = v70;
  swift_retain(v70);
  LocalizedStringResource.init(stringLiteral:)(0x6C61767265746E49, 0xE800000000000000);
  v71 = sub_1000083D8(&qword_100821C10, type metadata accessor for WorkoutActivityEntity, (uint64_t)&unk_100625F30);
  v72 = EntityProperty<>.init(title:)(v66, v71);
  sub_100047110(&qword_100829C68);
  swift_retain(v72);
  LocalizedStringResource.init(stringLiteral:)(0x746E656D676553, 0xE700000000000000);
  v73 = sub_100253888();
  v74 = EntityProperty<>.init(title:)(v66, v73);
  sub_100047110(&qword_100829C78);
  v801 = v74;
  swift_retain(v74);
  LocalizedStringResource.init(stringLiteral:)(0x74696C7053, 0xE500000000000000);
  v75 = sub_10020920C();
  v76 = EntityProperty<>.init(title:)(v66, v75);
  v77 = (void *)objc_opt_self(NSUnitLength);
  v799 = v76;
  v78 = objc_msgSend(v77, "meters", swift_retain(v76).n128_f64[0]);
  v79 = sub_10001E724(0, &qword_100821EC8, NSUnitLength_ptr);
  v795 = v63;
  v80 = v800;
  Measurement.init(value:unit:)(v78, v79, 0.0);
  v81 = objc_msgSend((id)objc_opt_self(NSUnitSpeed), "metersPerSecond");
  v82 = sub_10001E724(0, &qword_100821EA8, NSUnitSpeed_ptr);
  v793 = v45;
  v83 = v797;
  Measurement.init(value:unit:)(v81, v82, 0.0);
  v84 = v83;
  v85 = v807;
  sub_1002538CC(v84, (uint64_t)v807);
  v86 = v26;
  v87 = (*(uint64_t (**)(CHWorkoutDetailHeartRateTableViewCell *, uint64_t, uint64_t))(v26 + 48))(v85, 1, v80);
  v808 = v68;
  v805 = v72;
  v806 = v69;
  if (v87 != 1)
  {
    v144 = v68;
    v145 = v798;
    sub_100253B3C((uint64_t)v85, v798);
    v779 = sub_10013601C();
    v146 = v80;
    v148 = v147;
    v807 = v147;
    swift_bridgeObjectRetain(v147);
    v778 = (uint64_t)sub_100136164();
    v149 = v69;
    v151 = v150;
    v152 = objc_msgSend(*(id *)(v145 + *(int *)(v80 + 20)), "fiui_activityType", swift_bridgeObjectRetain(v150).n128_f64[0]);
    v780 = FIUIDistanceTypeForActivityType(v152);

    v153 = v771;
    sub_10020B570(v145, v771);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56))(v153, 0, 1, v146);
    v154 = v772;
    sub_1002538CC(v153, v772);
    swift_bridgeObjectRetain(v148);
    swift_bridgeObjectRetain(v151);
    swift_bridgeObjectRetain(0xEE006472616F6270);
    swift_retain(v803);
    v155 = v144;
    swift_retain(v144);
    swift_retain(v149);
    v156 = v804;
    swift_retain(v804);
    v157 = v805;
    swift_retain(v805);
    v158 = v801;
    swift_retain(v801);
    v159 = v799;
    swift_retain(v799);
    EntityProperty.wrappedValue.setter(v154);
    sub_10001BE90(v153, &qword_100829C48);
    swift_release(v159);
    swift_release(v158);
    swift_release(v157);
    swift_release(v156);
    v160 = v806;
    swift_release(v806);
    swift_release(v155);
    v161 = v803;
    swift_release(v803);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xEE006472616F6270, v162, v163, v164, v165, v166, v167, v168);
    swift_bridgeObjectRelease(v151, v169, v170, v171, v172, v173, v174, v175);
    v176 = v807;
    swift_bridgeObjectRelease(v807, v177, v178, v179, v180, v181, v182, v183);
    swift_bridgeObjectRetain(v176);
    v802 = v151;
    swift_bridgeObjectRetain(v151);
    swift_bridgeObjectRetain(0xEE006472616F6270);
    swift_retain(v161);
    swift_retain(v155);
    swift_retain(v160);
    swift_retain(v804);
    swift_retain(v805);
    swift_retain(v158);
    swift_retain(v159);
    v184 = v774;
    EntityProperty.wrappedValue.getter(v774);
    v185 = v783;
    v186 = *(void (**)(char *, char *, uint64_t))(v783 + 16);
    v187 = v794;
    v186(v788, v793, v794);
    v188 = v158;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v185 + 48))(v184, 1, v187) == 1)
    {
      v189 = v776;
      (*(void (**)(char *, char *, uint64_t))(v185 + 32))(v776, v788, v187);
      sub_10001BE90((uint64_t)v184, &qword_100821E18);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v185 + 8))(v788, v187);
      v189 = v776;
      (*(void (**)(char *, _QWORD *, uint64_t))(v185 + 32))(v776, v184, v187);
    }
    v190 = v782;
    v186(v782, v189, v187);
    v191 = v803;
    EntityProperty.wrappedValue.setter(v190);
    v788 = *(char **)(v185 + 8);
    ((void (*)(char *, uint64_t))v788)(v189, v187);
    swift_release(v159);
    swift_release(v158);
    v192 = v805;
    swift_release(v805);
    v193 = v804;
    swift_release(v804);
    v194 = v806;
    swift_release(v806);
    v195 = v808;
    swift_release(v808);
    swift_release(v191);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xEE006472616F6270, v196, v197, v198, v199, v200, v201, v202);
    v203 = v802;
    swift_bridgeObjectRelease(v802, v204, v205, v206, v207, v208, v209, v210);
    v211 = v807;
    swift_bridgeObjectRelease(v807, v212, v213, v214, v215, v216, v217, v218);
    v783 = *(_QWORD *)(v798 + *(int *)(v800 + 52));
    v219 = v211;
    v220 = v194;
    swift_bridgeObjectRetain(v219);
    swift_bridgeObjectRetain(v203);
    swift_bridgeObjectRetain(0xEE006472616F6270);
    swift_retain(v191);
    swift_retain(v195);
    swift_retain(v194);
    swift_retain(v193);
    swift_retain(v192);
    swift_retain(v188);
    swift_retain(v159);
    v221 = v775;
    EntityProperty.wrappedValue.getter(v775);
    v222 = v789;
    v223 = *(void (**)(char *, char *, uint64_t))(v789 + 16);
    v224 = v773;
    v225 = v796;
    v223(v773, v795, v796);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v222 + 48))(v221, 1, v225) == 1)
    {
      v226 = v224;
      v227 = v777;
      (*(void (**)(char *, char *, uint64_t))(v222 + 32))(v777, v226, v225);
      sub_10001BE90((uint64_t)v221, &qword_100821E38);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v222 + 8))(v224, v225);
      v227 = v777;
      (*(void (**)(char *, _QWORD *, uint64_t))(v222 + 32))(v777, v221, v225);
    }
    v228 = v784;
    v223(v784, v227, v225);
    EntityProperty.wrappedValue.setter(v228);
    v789 = *(_QWORD *)(v222 + 8);
    ((void (*)(char *, uint64_t))v789)(v227, v225);
    swift_release(v799);
    swift_release(v801);
    v229 = v192;
    swift_release(v192);
    v230 = v804;
    swift_release(v804);
    swift_release(v220);
    v231 = v808;
    swift_release(v808);
    v232 = v803;
    swift_release(v803);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xEE006472616F6270, v233, v234, v235, v236, v237, v238, v239);
    v240 = v802;
    swift_bridgeObjectRelease(v802, v241, v242, v243, v244, v245, v246, v247);
    swift_bridgeObjectRelease(v807, v248, v249, v250, v251, v252, v253, v254);
    v255 = v220;
    v256 = v786;
    EntityProperty.wrappedValue.getter(v786);
    v257 = v785;
    v258 = v230;
    v259 = v787;
    (*(void (**)(char *, _QWORD *, uint64_t))(v792 + 16))(v785, v256, v787);
    swift_bridgeObjectRetain(v807);
    swift_bridgeObjectRetain(v240);
    swift_bridgeObjectRetain(0xEE006472616F6270);
    swift_retain(v232);
    swift_retain(v231);
    swift_retain(v255);
    swift_retain(v258);
    swift_retain(v229);
    v260 = v801;
    swift_retain(v801);
    v261 = v799;
    swift_retain(v799);
    v262 = v257;
    v263 = v229;
    EntityProperty.wrappedValue.setter(v262);
    v264 = v259;
    v265 = v258;
    v266 = v807;
    (*(void (**)(_QWORD *, uint64_t))(v792 + 8))(v256, v264);
    swift_release(v261);
    v267 = v260;
    swift_release(v260);
    swift_release(v263);
    swift_release(v265);
    v268 = v806;
    swift_release(v806);
    v269 = v808;
    swift_release(v808);
    swift_release(v232);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xEE006472616F6270, v270, v271, v272, v273, v274, v275, v276);
    v277 = v240;
    v278 = v232;
    swift_bridgeObjectRelease(v277, v279, v280, v281, v282, v283, v284, v285);
    swift_bridgeObjectRetain(v266);
    swift_bridgeObjectRetain(0xEE006472616F6270);
    swift_retain(v232);
    v286 = v267;
    swift_retain(v269);
    swift_retain(v268);
    swift_retain(v265);
    swift_retain(v263);
    swift_retain(v267);
    swift_retain(v261);
    swift_bridgeObjectRelease_n(v266, 2);
    EntityProperty.wrappedValue.getter(&v820);
    if (__OFADD__((_QWORD)v820, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    *(_QWORD *)&v820 = v820 + 1;
    v287 = v808;
    EntityProperty.wrappedValue.setter(&v820);
    sub_100253A7C(v790, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10025398C);
    sub_100253A7C(v791, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100253AC4);
    swift_release(v261);
    swift_release(v286);
    swift_release(v263);
    swift_release(v265);
    swift_release(v806);
    swift_release(v287);
    swift_release(v278);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xEE006472616F6270, v288, v289, v290, v291, v292, v293, v294);
    swift_bridgeObjectRelease(v802, v295, v296, v297, v298, v299, v300, v301);
    swift_bridgeObjectRelease(v266, v302, v303, v304, v305, v306, v307, v308);
    sub_10001BE90(v797, &qword_100829C48);
    sub_10020B5B4(v798);
    v309 = v265;
    *(_QWORD *)&v798 = 0x696C632E7473696CLL;
    v310 = v793;
    v312 = v778;
    v311 = (uint64_t)v779;
    *(_QWORD *)&v800 = 0xEE006472616F6270;
LABEL_34:
    ((void (*)(char *, uint64_t))v788)(v310, v794);
    ((void (*)(char *, uint64_t))v789)(v795, v796);
    swift_release(v261);
    v736 = v261;
    v737 = v286;
    swift_release(v286);
    v738 = v805;
    swift_release(v805);
    swift_release(v309);
    v739 = v806;
    swift_release(v806);
    v740 = v808;
    swift_release(v808);
    swift_release(v278);
    v741 = v781;
    v742 = v807;
    *v781 = v311;
    v741[1] = (uint64_t)v742;
    v743 = v802;
    v741[2] = v312;
    v741[3] = (uint64_t)v743;
    v744 = v800;
    v741[4] = v798;
    v741[5] = v744;
    v741[6] = v278;
    v741[7] = v740;
    v745 = v780;
    v741[8] = v739;
    v741[9] = v745;
    v741[10] = v309;
    v741[11] = v738;
    v741[12] = v737;
    v741[13] = v736;
    return;
  }
  sub_10001BE90((uint64_t)v85, &qword_100829C48);
  v88 = v791;
  sub_100045AD4((uint64_t)v791, (uint64_t)v817, &qword_100829C38);
  v89 = *(_QWORD *)v817;
  if (*(_QWORD *)v817)
  {
    v822 = *(_OWORD *)&v817[32];
    v823 = v818;
    v90 = v819;
    v824 = v819;
    v820 = *(_OWORD *)v817;
    v821 = *(_OWORD *)&v817[16];
    v800 = *(_OWORD *)&v817[8];
    v798 = *(_OWORD *)&v817[24];
    v91 = *(_QWORD *)&v817[40];
    v92 = v818;
    v93 = BYTE8(v818);
    *(_QWORD *)&v814[0] = 0x20746E656D676553;
    *((_QWORD *)&v814[0] + 1) = 0xE800000000000000;
    v94 = *(char **)&v817[8];
    swift_retain(v768);
    swift_retain(v769);
    swift_retain(v770);
    swift_retain(v778);
    swift_retain(v779);
    swift_retain(v780);
    swift_retain(v802);
    EntityProperty.wrappedValue.getter(&v809);
    if (!__OFADD__(v809, 1))
    {
      v777 = v94;
      ++v809;
      v95._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = (CHWorkoutDetailHeartRateTableViewCell *)v95._object;
      String.append(_:)(v95);
      swift_bridgeObjectRelease(object, v97, v98, v99, v100, v101, v102, v103);
      v779 = *(_QWORD **)&v814[0];
      v104 = v91;
      v105 = (CHWorkoutDetailHeartRateTableViewCell *)*((_QWORD *)&v814[0] + 1);
      swift_bridgeObjectRetain(*((_QWORD *)&v814[0] + 1));
      v778 = sub_1003882C4();
      v106 = v92;
      v108 = v107;
      v109 = v823;
      if (BYTE8(v823))
        v109 = 0;
      v780 = v109;
      *(_OWORD *)((char *)v814 + 8) = v800;
      *(_OWORD *)((char *)&v814[1] + 8) = v798;
      *(_QWORD *)&v814[0] = v89;
      *((_QWORD *)&v814[2] + 1) = v104;
      *(_QWORD *)&v815 = v106;
      *((_QWORD *)&v815 + 1) = v93;
      v816 = v90;
      sub_100253A7C(v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100253A04);
      swift_bridgeObjectRetain_n(v108, 2);
      swift_bridgeObjectRetain(v105);
      swift_bridgeObjectRetain(0xE800000000000000);
      swift_retain(v803);
      v110 = v808;
      swift_retain(v808);
      v111 = v806;
      swift_retain(v806);
      v112 = v804;
      swift_retain(v804);
      v113 = v805;
      swift_retain(v805);
      v114 = v801;
      swift_retain(v801);
      v115 = v799;
      swift_retain(v799);
      EntityProperty.wrappedValue.setter(v814);
      swift_release(v115);
      swift_release(v114);
      swift_release(v113);
      swift_release(v112);
      swift_release(v111);
      swift_release(v110);
      v116 = v803;
      swift_release(v803);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE800000000000000, v117, v118, v119, v120, v121, v122, v123);
      swift_bridgeObjectRelease(v108, v124, v125, v126, v127, v128, v129, v130);
      swift_bridgeObjectRelease(v105, v131, v132, v133, v134, v135, v136, v137);
      v807 = v105;
      swift_bridgeObjectRetain(v105);
      v802 = v108;
      swift_bridgeObjectRetain(v108);
      swift_bridgeObjectRetain(0xE800000000000000);
      swift_retain(v116);
      swift_retain(v110);
      swift_retain(v111);
      swift_retain(v112);
      swift_retain(v805);
      swift_retain(v114);
      swift_retain(v115);
      v138 = v764;
      EntityProperty.wrappedValue.getter(v764);
      v139 = v783;
      v140 = *(void (**)(char *, char *, uint64_t))(v783 + 16);
      v141 = v762;
      v142 = v794;
      v140(v762, v793, v794);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v139 + 48))(v138, 1, v142) == 1)
      {
        v143 = v766;
        (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v766, v141, v142);
        sub_10001BE90((uint64_t)v138, &qword_100821E18);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v139 + 8))(v141, v142);
        v143 = v766;
        (*(void (**)(char *, _QWORD *, uint64_t))(v139 + 32))(v766, v138, v142);
      }
      v366 = v782;
      v140(v782, v143, v142);
      v367 = v366;
      v368 = v803;
      EntityProperty.wrappedValue.setter(v367);
      v788 = *(char **)(v139 + 8);
      ((void (*)(char *, uint64_t))v788)(v143, v142);
      v369 = v799;
      swift_release(v799);
      v370 = v801;
      swift_release(v801);
      v371 = v805;
      swift_release(v805);
      v372 = v804;
      swift_release(v804);
      v373 = v806;
      swift_release(v806);
      v374 = v808;
      swift_release(v808);
      swift_release(v368);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE800000000000000, v375, v376, v377, v378, v379, v380, v381);
      v382 = v802;
      swift_bridgeObjectRelease(v802, v383, v384, v385, v386, v387, v388, v389);
      v390 = v807;
      swift_bridgeObjectRelease(v807, v391, v392, v393, v394, v395, v396, v397);
      *(_QWORD *)&v800 = v822;
      swift_bridgeObjectRetain(v390);
      swift_bridgeObjectRetain(v382);
      swift_bridgeObjectRetain(0xE800000000000000);
      swift_retain(v368);
      swift_retain(v374);
      swift_retain(v373);
      swift_retain(v372);
      swift_retain(v371);
      swift_retain(v370);
      v398 = v369;
      swift_retain(v369);
      v399 = v765;
      EntityProperty.wrappedValue.getter(v765);
      v400 = v789;
      v401 = *(void (**)(char *, char *, uint64_t))(v789 + 16);
      v402 = v763;
      v403 = v796;
      v401(v763, v795, v796);
      v404 = v371;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v400 + 48))(v399, 1, v403) == 1)
      {
        v405 = v767;
        (*(void (**)(char *, char *, uint64_t))(v400 + 32))(v767, v402, v403);
        sub_10001BE90((uint64_t)v399, &qword_100821E38);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v400 + 8))(v402, v403);
        v405 = v767;
        (*(void (**)(char *, _QWORD *, uint64_t))(v400 + 32))(v767, v399, v403);
      }
      v406 = v784;
      v401(v784, v405, v403);
      v407 = v806;
      EntityProperty.wrappedValue.setter(v406);
      v789 = *(_QWORD *)(v400 + 8);
      ((void (*)(char *, uint64_t))v789)(v405, v403);
      swift_release(v398);
      swift_release(v801);
      v408 = v404;
      swift_release(v404);
      swift_release(v804);
      v409 = v407;
      swift_release(v407);
      v410 = v808;
      swift_release(v808);
      v411 = v803;
      swift_release(v803);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE800000000000000, v412, v413, v414, v415, v416, v417, v418);
      v419 = v802;
      swift_bridgeObjectRelease(v802, v420, v421, v422, v423, v424, v425, v426);
      swift_bridgeObjectRelease(v807, v427, v428, v429, v430, v431, v432, v433);
      v434 = v786;
      EntityProperty.wrappedValue.getter(v786);
      v435 = v792;
      v436 = v785;
      v437 = v787;
      (*(void (**)(char *, _QWORD *, uint64_t))(v792 + 16))(v785, v434, v787);
      swift_bridgeObjectRetain(v807);
      swift_bridgeObjectRetain(v419);
      swift_bridgeObjectRetain(0xE800000000000000);
      swift_retain(v411);
      swift_retain(v410);
      v438 = v409;
      swift_retain(v409);
      swift_retain(v804);
      swift_retain(v408);
      v439 = v801;
      swift_retain(v801);
      v440 = v799;
      swift_retain(v799);
      EntityProperty.wrappedValue.setter(v436);
      v441 = *(void (**)(_QWORD *, uint64_t))(v435 + 8);
      v442 = v434;
      v443 = v437;
      v309 = v804;
      v444 = v438;
      v445 = v807;
      v441(v442, v443);
      v446 = v440;
      swift_release(v440);
      swift_release(v439);
      v447 = v805;
      swift_release(v805);
      swift_release(v309);
      swift_release(v444);
      v448 = v808;
      swift_release(v808);
      swift_release(v411);
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE800000000000000, v449, v450, v451, v452, v453, v454, v455);
      swift_bridgeObjectRelease(v419, v456, v457, v458, v459, v460, v461, v462);
      swift_bridgeObjectRetain(v445);
      swift_bridgeObjectRetain(0xE800000000000000);
      swift_retain(v411);
      swift_retain(v448);
      swift_retain(v444);
      swift_retain(v309);
      swift_retain(v447);
      swift_retain(v439);
      v463 = v446;
      swift_retain(v446);
      swift_bridgeObjectRelease_n(v445, 2);
      EntityProperty.wrappedValue.getter(v814);
      if (!__OFADD__(*(_QWORD *)&v814[0], 1))
      {
        ++*(_QWORD *)&v814[0];
        EntityProperty.wrappedValue.setter(v814);
        sub_100253A7C(v790, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10025398C);
        v464 = v439;
        v465 = v791;
        sub_100253A7C(v791, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100253AC4);
        swift_release(v446);
        swift_release(v464);
        swift_release(v805);
        swift_release(v309);
        swift_release(v444);
        swift_release(v448);
        v466 = v803;
        swift_release(v803);
        *(_QWORD *)&v800 = 0xE800000000000000;
        swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE800000000000000, v467, v468, v469, v470, v471, v472, v473);
        swift_bridgeObjectRelease(v802, v474, v475, v476, v477, v478, v479, v480);
        swift_bridgeObjectRelease(v445, v481, v482, v483, v484, v485, v486, v487);
        sub_100253A7C(v465, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100253AC4);
        sub_10001BE90(v797, &qword_100829C48);
        v286 = v464;
        v261 = v463;
        *(_QWORD *)&v798 = 0x656C637269632E31;
LABEL_33:
        v278 = v466;
        v310 = v793;
        v312 = v778;
        v311 = (uint64_t)v779;
        goto LABEL_34;
      }
      goto LABEL_37;
    }
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  sub_100045AD4((uint64_t)v790, (uint64_t)v814, &qword_100829C40);
  if (!*(_QWORD *)&v814[0])
  {
    v488 = v782;
    v489 = v783;
    v490 = *(void (**)(char *, char *, uint64_t))(v783 + 16);
    v491 = v794;
    v490(v782, v793, v794);
    v492 = v747;
    v490(v747, v488, v491);
    swift_bridgeObjectRetain(0xEC00000074617453);
    swift_bridgeObjectRetain(0xE000000000000000);
    *(_QWORD *)&v800 = 0x8000000100692BB0;
    swift_bridgeObjectRetain(0x8000000100692BB0);
    v493 = v803;
    swift_retain(v803);
    v494 = v808;
    swift_retain(v808);
    swift_retain(v806);
    swift_retain(v804);
    v495 = v805;
    swift_retain(v805);
    v496 = v801;
    swift_retain(v801);
    v497 = v799;
    swift_retain(v799);
    EntityProperty.wrappedValue.setter(v492);
    v788 = *(char **)(v489 + 8);
    ((void (*)(char *, uint64_t))v788)(v488, v491);
    swift_release(v497);
    swift_release(v496);
    swift_release(v495);
    v498 = v804;
    swift_release(v804);
    v499 = v806;
    swift_release(v806);
    v500 = v494;
    swift_release(v494);
    v501 = v493;
    swift_release(v493);
    v502 = v800;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v800, v503, v504, v505, v506, v507, v508, v509);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000, v510, v511, v512, v513, v514, v515, v516);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xEC00000074617453, v517, v518, v519, v520, v521, v522, v523);
    v524 = *(void (**)(char *, char *, uint64_t))(v789 + 16);
    v525 = v784;
    v526 = v796;
    v524(v784, v795, v796);
    v527 = v748;
    v524(v748, v525, v526);
    swift_bridgeObjectRetain(0xEC00000074617453);
    swift_bridgeObjectRetain(0xE000000000000000);
    swift_bridgeObjectRetain(v502);
    swift_retain(v501);
    swift_retain(v500);
    v528 = v499;
    swift_retain(v499);
    v529 = v498;
    swift_retain(v498);
    v530 = v805;
    swift_retain(v805);
    v531 = v801;
    swift_retain(v801);
    v532 = v799;
    swift_retain(v799);
    EntityProperty.wrappedValue.setter(v527);
    v789 = *(_QWORD *)(v789 + 8);
    ((void (*)(char *, uint64_t))v789)(v525, v526);
    v533 = v532;
    swift_release(v532);
    v534 = v531;
    swift_release(v531);
    v535 = v530;
    swift_release(v530);
    v536 = v529;
    swift_release(v529);
    swift_release(v528);
    v537 = v808;
    swift_release(v808);
    v538 = v803;
    swift_release(v803);
    v539 = v800;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v800, v540, v541, v542, v543, v544, v545, v546);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000, v547, v548, v549, v550, v551, v552, v553);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xEC00000074617453, v554, v555, v556, v557, v558, v559, v560);
    v561 = (void *)objc_opt_self(NSUnitDuration);
    swift_bridgeObjectRetain(0xEC00000074617453);
    swift_bridgeObjectRetain(0xE000000000000000);
    swift_bridgeObjectRetain(v539);
    swift_retain(v538);
    swift_retain(v537);
    swift_retain(v528);
    swift_retain(v536);
    v562 = v535;
    swift_retain(v535);
    v563 = v534;
    swift_retain(v534);
    v564 = v533;
    v565 = objc_msgSend(v561, "seconds", swift_retain(v533).n128_f64[0]);
    v566 = sub_10001E724(0, &qword_100821E88, NSUnitDuration_ptr);
    v567 = v786;
    v568 = v565;
    v807 = (CHWorkoutDetailHeartRateTableViewCell *)0xEC00000074617453;
    v569 = v538;
    Measurement.init(value:unit:)(v568, v566, 0.0);
    v570 = v792;
    v571 = v785;
    v572 = v787;
    (*(void (**)(char *, _QWORD *, uint64_t))(v792 + 16))(v785, v567, v787);
    EntityProperty.wrappedValue.setter(v571);
    v573 = *(void (**)(_QWORD *, uint64_t))(v570 + 8);
    v802 = (CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000;
    v574 = v572;
    v310 = v793;
    v573(v567, v574);
    swift_release(v564);
    swift_release(v563);
    v575 = v562;
    swift_release(v562);
    swift_release(v536);
    v576 = v806;
    swift_release(v806);
    v577 = v808;
    swift_release(v808);
    swift_release(v569);
    v578 = v800;
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v800, v579, v580, v581, v582, v583, v584, v585);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000, v586, v587, v588, v589, v590, v591, v592);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xEC00000074617453, v593, v594, v595, v596, v597, v598, v599);
    *(_QWORD *)&v820 = 0;
    swift_bridgeObjectRetain(0xEC00000074617453);
    swift_bridgeObjectRetain(0xE000000000000000);
    swift_bridgeObjectRetain(v578);
    swift_retain(v569);
    swift_retain(v577);
    v600 = v576;
    swift_retain(v576);
    swift_retain(v536);
    v601 = v575;
    swift_retain(v575);
    swift_retain(v563);
    v602 = v799;
    swift_retain(v799);
    v603 = v577;
    EntityProperty.wrappedValue.setter(&v820);
    v604 = v602;
    swift_release(v602);
    v286 = v563;
    swift_release(v563);
    swift_release(v601);
    v309 = v536;
    swift_release(v536);
    v261 = v604;
    swift_release(v600);
    swift_release(v603);
    v278 = v569;
    swift_release(v569);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v800, v605, v606, v607, v608, v609, v610, v611);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE000000000000000, v612, v613, v614, v615, v616, v617, v618);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xEC00000074617453, v619, v620, v621, v622, v623, v624, v625);
    sub_10001BE90(v797, &qword_100829C48);
    v312 = 0;
    v780 = 0;
    *(_QWORD *)&v798 = 0xD000000000000011;
    v311 = 0x2074756F6B726F57;
    goto LABEL_34;
  }
  v820 = v814[0];
  v821 = v814[1];
  v822 = v814[2];
  v823 = v815;
  v824 = v816;
  v809 = 0x2074696C7053;
  v810 = 0xE600000000000000;
  v313 = (_QWORD *)*((_QWORD *)&v814[0] + 1);
  swift_retain(v755);
  swift_retain(v756);
  swift_retain(v757);
  swift_retain(v758);
  swift_retain(v759);
  swift_retain(v760);
  swift_bridgeObjectRetain(v761);
  v791 = v313;
  EntityProperty.wrappedValue.getter(&v811);
  if (__OFADD__(v811, 1))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  ++v811;
  v314._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v315 = (CHWorkoutDetailHeartRateTableViewCell *)v314._object;
  String.append(_:)(v314);
  swift_bridgeObjectRelease(v315, v316, v317, v318, v319, v320, v321, v322);
  v779 = (_QWORD *)v809;
  v323 = (CHWorkoutDetailHeartRateTableViewCell *)v810;
  swift_bridgeObjectRetain(v810);
  v778 = (uint64_t)sub_100206AB4();
  v325 = v324;
  v802 = v324;
  v326 = v824;
  *(_QWORD *)&v798 = *((_QWORD *)&v823 + 1);
  v780 = *((_QWORD *)&v822 + 1);
  v327 = v790;
  sub_100045AD4((uint64_t)v790, (uint64_t)&v809, &qword_100829C40);
  swift_bridgeObjectRetain(v326);
  sub_100253A7C(v327, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100253914);
  swift_bridgeObjectRetain_n(v326, 2);
  swift_bridgeObjectRetain_n(v325, 2);
  swift_bridgeObjectRetain(v323);
  v328 = v803;
  swift_retain(v803);
  v329 = v808;
  swift_retain(v808);
  v330 = v806;
  swift_retain(v806);
  v331 = v804;
  swift_retain(v804);
  v332 = v805;
  swift_retain(v805);
  v333 = v801;
  swift_retain(v801);
  v334 = v799;
  swift_retain(v799);
  EntityProperty.wrappedValue.setter(&v809);
  swift_release(v334);
  swift_release(v333);
  swift_release(v332);
  swift_release(v331);
  swift_release(v330);
  swift_release(v329);
  v335 = v328;
  swift_release(v328);
  swift_bridgeObjectRelease(v326, v336, v337, v338, v339, v340, v341, v342);
  v343 = v802;
  swift_bridgeObjectRelease(v802, v344, v345, v346, v347, v348, v349, v350);
  swift_bridgeObjectRelease(v323, v351, v352, v353, v354, v355, v356, v357);
  v788 = (char *)v822;
  v807 = v323;
  swift_bridgeObjectRetain(v323);
  v358 = v343;
  swift_bridgeObjectRetain(v343);
  *(_QWORD *)&v800 = v326;
  swift_bridgeObjectRetain(v326);
  swift_retain(v335);
  v359 = v333;
  swift_retain(v808);
  swift_retain(v330);
  swift_retain(v331);
  swift_retain(v332);
  swift_retain(v333);
  swift_retain(v334);
  v360 = v751;
  EntityProperty.wrappedValue.getter(v751);
  v361 = v783;
  v362 = *(void (**)(char *, char *, uint64_t))(v783 + 16);
  v363 = v749;
  v364 = v794;
  v362(v749, v793, v794);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v361 + 48))(v360, 1, v364) == 1)
  {
    v365 = v753;
    (*(void (**)(char *, char *, uint64_t))(v361 + 32))(v753, v363, v364);
    sub_10001BE90((uint64_t)v360, &qword_100821E18);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v361 + 8))(v363, v364);
    v365 = v753;
    (*(void (**)(char *, _QWORD *, uint64_t))(v361 + 32))(v753, v360, v364);
  }
  v626 = v782;
  v362(v782, v365, v364);
  v627 = v626;
  v628 = v803;
  EntityProperty.wrappedValue.setter(v627);
  v788 = *(char **)(v361 + 8);
  ((void (*)(char *, uint64_t))v788)(v365, v364);
  v629 = v799;
  swift_release(v799);
  swift_release(v359);
  swift_release(v332);
  v630 = v804;
  swift_release(v804);
  v631 = v806;
  swift_release(v806);
  v632 = v808;
  swift_release(v808);
  swift_release(v628);
  v633 = v800;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v800, v634, v635, v636, v637, v638, v639, v640);
  swift_bridgeObjectRelease(v358, v641, v642, v643, v644, v645, v646, v647);
  v648 = v807;
  swift_bridgeObjectRelease(v807, v649, v650, v651, v652, v653, v654, v655);
  swift_bridgeObjectRetain(v648);
  swift_bridgeObjectRetain(v358);
  swift_bridgeObjectRetain(v633);
  swift_retain(v628);
  v656 = v629;
  v657 = v801;
  v658 = v805;
  swift_retain(v632);
  swift_retain(v631);
  swift_retain(v630);
  swift_retain(v658);
  swift_retain(v657);
  swift_retain(v629);
  v659 = v752;
  EntityProperty.wrappedValue.getter(v752);
  v660 = v789;
  v661 = *(void (**)(char *, char *, uint64_t))(v789 + 16);
  v662 = v750;
  v663 = v796;
  v661(v750, v795, v796);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v660 + 48))(v659, 1, v663) == 1)
  {
    v664 = v754;
    (*(void (**)(char *, char *, uint64_t))(v660 + 32))(v754, v662, v663);
    sub_10001BE90((uint64_t)v659, &qword_100821E38);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v660 + 8))(v662, v663);
    v664 = v754;
    (*(void (**)(char *, _QWORD *, uint64_t))(v660 + 32))(v754, v659, v663);
  }
  v665 = v784;
  v661(v784, v664, v663);
  v666 = v806;
  EntityProperty.wrappedValue.setter(v665);
  v789 = *(_QWORD *)(v660 + 8);
  ((void (*)(char *, uint64_t))v789)(v664, v663);
  swift_release(v656);
  swift_release(v657);
  swift_release(v658);
  v667 = v804;
  swift_release(v804);
  swift_release(v666);
  v668 = v808;
  swift_release(v808);
  v669 = v803;
  swift_release(v803);
  v670 = (CHWorkoutDetailHeartRateTableViewCell *)v800;
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v800, v671, v672, v673, v674, v675, v676, v677);
  v678 = v802;
  swift_bridgeObjectRelease(v802, v679, v680, v681, v682, v683, v684, v685);
  v686 = v807;
  swift_bridgeObjectRelease(v807, v687, v688, v689, v690, v691, v692, v693);
  v694 = v786;
  EntityProperty.wrappedValue.getter(v786);
  v695 = v785;
  v696 = v787;
  (*(void (**)(char *, _QWORD *, uint64_t))(v792 + 16))(v785, v694, v787);
  swift_bridgeObjectRetain(v686);
  swift_bridgeObjectRetain(v678);
  swift_bridgeObjectRetain(v670);
  swift_retain(v669);
  swift_retain(v668);
  swift_retain(v806);
  swift_retain(v667);
  v697 = v805;
  swift_retain(v805);
  v698 = v801;
  swift_retain(v801);
  v699 = v799;
  swift_retain(v799);
  EntityProperty.wrappedValue.setter(v695);
  (*(void (**)(_QWORD *, uint64_t))(v792 + 8))(v694, v696);
  v700 = v699;
  swift_release(v699);
  swift_release(v698);
  swift_release(v697);
  swift_release(v667);
  v701 = v806;
  swift_release(v806);
  v702 = v808;
  swift_release(v808);
  swift_release(v669);
  swift_bridgeObjectRelease(v670, v703, v704, v705, v706, v707, v708, v709);
  v710 = v807;
  swift_bridgeObjectRetain(v807);
  v711 = v802;
  swift_bridgeObjectRetain(v802);
  swift_retain(v669);
  swift_retain(v702);
  swift_retain(v701);
  v309 = v667;
  swift_retain(v667);
  swift_retain(v697);
  v286 = v698;
  swift_retain(v698);
  v261 = v700;
  swift_retain(v700);
  swift_bridgeObjectRelease_n(v710, 2);
  v712 = v711;
  swift_bridgeObjectRelease_n(v711, 2);
  EntityProperty.wrappedValue.getter(&v809);
  if (!__OFADD__(v809, 1))
  {
    ++v809;
    v713 = v808;
    EntityProperty.wrappedValue.setter(&v809);
    v714 = v790;
    sub_100253A7C(v790, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10025398C);
    swift_release(v700);
    swift_release(v698);
    swift_release(v805);
    swift_release(v309);
    swift_release(v806);
    swift_release(v713);
    v466 = v803;
    swift_release(v803);
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v800, v715, v716, v717, v718, v719, v720, v721);
    swift_bridgeObjectRelease(v712, v722, v723, v724, v725, v726, v727, v728);
    swift_bridgeObjectRelease(v710, v729, v730, v731, v732, v733, v734, v735);
    sub_100253A7C(v714, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10025398C);
    sub_10001BE90(v797, &qword_100829C48);
    goto LABEL_33;
  }
LABEL_39:
  __break(1u);
}

unint64_t sub_100253888()
{
  unint64_t result;

  result = qword_100829C70;
  if (!qword_100829C70)
  {
    result = swift_getWitnessTable(&unk_100638B34, &type metadata for WorkoutSegmentEntity);
    atomic_store(result, (unint64_t *)&qword_100829C70);
  }
  return result;
}

uint64_t sub_1002538CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100829C48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100253914(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (result)
  {
    swift_retain(result);
    swift_retain(a2);
    swift_retain(a3);
    swift_retain(a4);
    swift_retain(a5);
    swift_retain(a7);
    return swift_bridgeObjectRetain(a9);
  }
  return result;
}

uint64_t sub_10025398C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (result)
  {
    swift_release(result);
    swift_release(a2);
    swift_release(a3);
    swift_release(a4);
    swift_release(a5);
    swift_release(a7);
    return swift_bridgeObjectRelease(a9);
  }
  return result;
}

uint64_t sub_100253A04(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (result)
  {
    swift_retain(result);
    swift_retain(a2);
    swift_retain(a3);
    swift_retain(a4);
    swift_retain(a5);
    swift_retain(a6);
    return swift_retain(a9);
  }
  return result;
}

_QWORD *sub_100253A7C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8]);
  return a1;
}

uint64_t sub_100253AC4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (result)
  {
    swift_release(result);
    swift_release(a2);
    swift_release(a3);
    swift_release(a4);
    swift_release(a5);
    swift_release(a6);
    return swift_release(a9);
  }
  return result;
}

uint64_t sub_100253B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutActivityEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100253B80()
{
  unint64_t result;

  result = qword_100829C80;
  if (!qword_100829C80)
  {
    result = swift_getWitnessTable(&unk_1006309A0, &type metadata for WorkoutStat);
    atomic_store(result, (unint64_t *)&qword_100829C80);
  }
  return result;
}

void sub_100253BC4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  NSString v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  NSString v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  NSString v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  NSString v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  NSString v49;
  void *v50;
  id v51;
  NSString v52;
  id v53;
  void *v54;
  NSString v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  id v62;
  uint64_t v64;

  v5 = v4;
  if (qword_10081D678 != -1)
    swift_once(&qword_10081D678, sub_1001A5270);
  v6 = (void *)UILabel.withFont(_:)(qword_100869FE8);
  v7 = (void *)objc_opt_self(UIColor);
  v8 = objc_msgSend(v7, "secondaryLabelColor");
  v9 = (void *)UILabel.withTextColor(_:)(v8);

  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setText:", v10);

  v11 = (void *)UILabel.withFont(_:)(qword_100869FE8);
  v12 = objc_msgSend(v7, "secondaryLabelColor");
  v13 = (void *)UILabel.withTextColor(_:)(v12);

  v14 = (void *)objc_opt_self(NSBundle);
  v15 = objc_msgSend(v14, "mainBundle");
  v16 = String._bridgeToObjectiveC()();
  v17 = v5;
  v18 = objc_msgSend(v15, "localizedStringForKey:value:table:", v16, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v20 = v19;

  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setText:", v21);

  swift_bridgeObjectRelease(v20);
  FIUIPaceFormatForWorkoutActivityType(a2);
  if (objc_msgSend(a4, "supportsDistanceForWorkout:workoutActivity:", a1, 0))
  {
    v22 = (void *)UILabel.withFont(_:)(qword_100869FE8);
    v23 = objc_msgSend(v7, "secondaryLabelColor");
    v24 = (void *)UILabel.withTextColor(_:)(v23);

    v25 = objc_msgSend(v14, "mainBundle");
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v29 = v28;

    v30 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setText:", v30);

    swift_bridgeObjectRelease(v29);
    LODWORD(v30) = objc_msgSend(a4, "supportsPaceForWorkout:workoutActivity:", a1, 0);
    v31 = v17;
    v32 = (void *)UILabel.withFont(_:)(qword_100869FE8);
    v33 = objc_msgSend(v7, "secondaryLabelColor");
    v34 = (void *)UILabel.withTextColor(_:)(v33);

    if ((_DWORD)v30)
    {
      v35 = objc_msgSend(v14, "mainBundle");
      v55 = String._bridgeToObjectiveC()();
      v56 = objc_msgSend(v35, "localizedStringForKey:value:table:", v55, 0, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
      v58 = v57;

      v59 = String._bridgeToObjectiveC()();
      objc_msgSend(v34, "setText:", v59);

      swift_bridgeObjectRelease(v58);
    }
    else
    {
      v59 = String._bridgeToObjectiveC()();
      objc_msgSend(v34, "setText:", v59);

    }
    v17 = v31;
    goto LABEL_13;
  }
  v36 = (void *)UILabel.withFont(_:)(qword_100869FE8);
  v37 = objc_msgSend(v7, "secondaryLabelColor");
  v38 = (void *)UILabel.withTextColor(_:)(v37);

  if (a3 != 1)
  {
    v52 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "setText:", v52);

    v50 = (void *)UILabel.withFont(_:)(qword_100869FE8);
    v51 = objc_msgSend(v7, "secondaryLabelColor");
    goto LABEL_11;
  }
  v62 = v7;
  v64 = v17;
  v39 = objc_msgSend(a4, "fitnessUIFormattingManager");
  v40 = String._bridgeToObjectiveC()();
  v41 = objc_msgSend(v39, "localizationKeyForEnergyBaseKey:", v40);

  if (v41)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v43 = v42;

    v44 = objc_msgSend(v14, "mainBundle");
    v45 = String._bridgeToObjectiveC()();
    v46 = objc_msgSend(v44, "localizedStringForKey:value:table:", v45, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v48 = v47;
    swift_bridgeObjectRelease(v43);

    v49 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "setText:", v49);

    swift_bridgeObjectRelease(v48);
    v17 = v64;
    v50 = (void *)UILabel.withFont(_:)(qword_100869FE8);
    v51 = objc_msgSend(v62, "secondaryLabelColor");
LABEL_11:
    v53 = v51;
    v54 = (void *)UILabel.withTextColor(_:)(v53);

    v59 = String._bridgeToObjectiveC()();
    objc_msgSend(v54, "setText:", v59);

LABEL_13:
    objc_msgSend(*(id *)(v17 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView), "setHidden:", 1);
    sub_1001BB604();
    return;
  }
  __break(1u);
}

void sub_10025438C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, void *a8)
{
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  NSString v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  NSString v41;
  void (*v42)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v43;
  void *v44;
  id v45;
  void *v46;
  void (*v47)(char *, char *, uint64_t);
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  id v49;
  void *v50;
  char *v51;
  char *v52;
  id v53;
  void *v54;
  unint64_t v55;
  _QWORD *v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  double v67;
  id v68;
  id v69;
  uint64_t v70;
  void *v71;
  id v72;
  double v73;
  double v74;
  id v75;
  void *v76;
  id v77;
  double v78;
  double v79;
  void *v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  NSString v85;
  id v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  void *v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  double v103;
  uint64_t v104;
  id v105;
  id v106;
  double v107;
  double v108;
  void *v109;
  void *v110;
  void *v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  id v120;
  void (*v121)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  v121 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))a6;
  v122 = (void *)a3;
  v116 = a4;
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v18);
  v118 = (char *)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v113 - v21;
  v23 = type metadata accessor for DateInterval(0);
  __chkstk_darwin(v23);
  v117 = (char *)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    sub_100253BC4((uint64_t)v122, a5, (uint64_t)v121, a8);
    return;
  }
  v119 = a5;
  v113 = v25;
  v114 = v24;
  v27 = a1;
  v120 = a8;
  v123 = objc_msgSend(a8, "fitnessUIFormattingManager");
  sub_100255018(a7 & 1);
  v28 = (void *)objc_opt_self(NSNumberFormatter);
  v29 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a2);
  v30 = objc_msgSend(v28, "localizedStringFromNumber:numberStyle:", v29, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v32 = v31;

  v33 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel);
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "setText:", v34);
  swift_bridgeObjectRelease(v32);

  v35 = v27;
  v36 = objc_msgSend(v27, "formattedDurationValueWithFormattingManager:", v123);
  v115 = v8;
  if (v36)
  {
    v37 = v36;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v39 = v38;

    v40 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel);
    v41 = String._bridgeToObjectiveC()();
  }
  else
  {
    v41 = 0;
    v39 = 0;
    v40 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel);
  }
  objc_msgSend(v40, "setText:", v41);
  swift_bridgeObjectRelease(v39);

  v42 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))FIUIDistanceTypeForActivityType(v119);
  v43 = v120;
  v44 = v122;
  if (!objc_msgSend(v120, "supportsDistanceForWorkout:workoutActivity:", v122, 0))
  {
    if (v121 == (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))1)
    {
      v57 = objc_msgSend(v123, "unitManager");
      if (!v57)
      {
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      v58 = v57;
      v59 = objc_msgSend(v57, "userActiveEnergyBurnedUnit");

      v60 = objc_msgSend(v35, "formattedActiveEnergyValueForUnit:", v59);
      v61 = v115;
      if (v60)
      {
        v62 = v60;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
        v64 = v63;

      }
      else
      {
        v64 = 0;
      }
      v80 = *(void **)(v61 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel);
      v81 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "energyColors");
      if (!v81)
        goto LABEL_52;
      v82 = v81;
      v83 = objc_msgSend(v81, "nonGradientTextColor");

      objc_msgSend(v80, "setTextColor:", v83);
      v84 = v80;

      if (v64)
        v85 = String._bridgeToObjectiveC()();
      else
        v85 = 0;
      objc_msgSend(v84, "setText:", v85);

      swift_bridgeObjectRelease(v64);
    }

    return;
  }
  v121 = v42;
  v45 = objc_msgSend(v35, "startDate");
  if (!v45)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v22, 1, 1, v14);
    goto LABEL_48;
  }
  v46 = v45;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v45);

  v47 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v47(v22, v17, v14);
  v42 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v15 + 56);
  v42(v22, 0, 1, v14);
  v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v48(v22, 1, v14) == 1)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v49 = objc_msgSend(v35, "endDate");
  if (!v49)
  {
LABEL_49:
    v42(v118, 1, 1, v14);
    goto LABEL_50;
  }
  v50 = v49;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v49);

  v51 = v118;
  v47(v118, v17, v14);
  v42(v51, 0, 1, v14);
  if (v48(v51, 1, v14) == 1)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v52 = v117;
  DateInterval.init(start:end:)(v22, v51);
  v53 = objc_msgSend(v44, "workoutEvents");
  if (v53)
  {
    v54 = v53;
    v55 = sub_1000DCD38();
    v56 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v55);

  }
  else
  {
    v56 = _swiftEmptyArrayStorage;
  }
  v65 = v116;
  __chkstk_darwin(v53);
  *(&v113 - 2) = (uint64_t)v52;
  v66 = sub_1004C6590(sub_10025548C, (uint64_t)(&v113 - 4), (uint64_t)v56);
  *(_QWORD *)&v67 = swift_bridgeObjectRelease(v56).n128_u64[0];
  if ((v66 & 1) != 0)
  {
    v68 = objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "defaultPrecisionForDistanceUnit:", v65);
    v69 = objc_msgSend(v35, "distance");
    v70 = (uint64_t)v121;
    if (v69)
    {
      v71 = v69;
      v72 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
      objc_msgSend(v71, "doubleValueForUnit:", v72);
      v74 = v73;

    }
    else
    {
      v74 = 0.0;
    }
    v86 = objc_msgSend(v123, "localizedStringWithDistanceInMeters:distanceUnit:unitStyle:decimalPrecision:roundingMode:decimalTrimmingMode:", v65, 0, v68, 2, 1, v74);
    if (!v86)
      goto LABEL_40;
    v87 = v86;
    v43 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v86);
    v89 = v88;

    v90 = objc_msgSend(v123, "localizedShortUnitStringForDistanceUnit:", v65);
    if (v90)
    {
LABEL_37:
      v94 = v90;
      v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
      v97 = v96;

      v124 = v95;
      v125 = v97;
      v98 = sub_100038CA0();
      v99 = StringProtocol.localizedUppercase.getter(&type metadata for String, v98);
      v101 = v100;
      swift_bridgeObjectRelease(v97);
      if (qword_10081D688 != -1)
        swift_once(&qword_10081D688, sub_1001A536C);
      v102 = sub_1000387C4((uint64_t)v43, v89, v99, v101, (void *)qword_100869FF8);
      swift_bridgeObjectRelease(v101);
      *(_QWORD *)&v103 = swift_bridgeObjectRelease(v89).n128_u64[0];
      objc_msgSend(*(id *)(v115 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel), "setAttributedText:", v102, v103);

      v43 = v120;
      v44 = v122;
      goto LABEL_40;
    }
    __break(1u);
  }
  else
  {
    v126 = 1;
    v75 = objc_msgSend(v35, "distance", v67);
    v70 = (uint64_t)v121;
    if (v75)
    {
      v76 = v75;
      v77 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
      objc_msgSend(v76, "doubleValueForUnit:", v77);
      v79 = v78;

      goto LABEL_35;
    }
  }
  v79 = 0.0;
LABEL_35:
  v91 = objc_msgSend(v123, "localizedNaturalScaleStringWithDistanceInMeters:distanceType:unitStyle:usedUnit:", v70, 0, &v126, v79);
  if (v91)
  {
    v92 = v91;
    v43 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v91);
    v89 = v93;

    v90 = objc_msgSend(v123, "localizedShortUnitStringForDistanceUnit:", v126);
    if (v90)
      goto LABEL_37;
LABEL_53:
    __break(1u);
    return;
  }
LABEL_40:
  if (objc_msgSend(v43, "supportsPaceForWorkout:workoutActivity:", v44, 0))
  {
    v104 = FIUIPaceFormatForWorkoutActivityType(v119);
    v105 = objc_msgSend(v35, "distance");
    if (!v105)
    {
      v106 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
      v105 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v106, 0.0);

    }
    objc_msgSend(v35, "elapsedTime");
    v108 = v107;
    if (qword_10081D688 != -1)
      swift_once(&qword_10081D688, sub_1001A536C);
    sub_1005E47FC(v105, v104, v70, (void *)qword_100869FF8, v108);
    v110 = v109;

    v111 = *(void **)(v115 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel);
    v112 = v110;
    objc_msgSend(v111, "setAttributedText:", v112);

    v35 = v112;
  }

  (*(void (**)(char *, uint64_t))(v113 + 8))(v52, v114);
}

uint64_t sub_100254E20(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = type metadata accessor for DateInterval(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v17 - v9;
  v11 = *a1;
  v12 = objc_msgSend(v11, "type");
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v4);
  if (v12 == (id)3)
  {
    v13 = objc_msgSend(v11, "dateInterval");
    static DateInterval._unconditionallyBridgeFromObjectiveC(_:)();

    v14 = DateInterval.intersects(_:)(v10);
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
  }
  else
  {
    v14 = 0;
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  }
  v15(v10, v4);
  return v14 & 1;
}

id sub_100255018(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  NSString v7;
  void *v8;
  void *v9;
  id result;
  void *v11;
  id v12;
  NSString v13;
  void *v14;
  void *v15;
  id v16;
  NSString v17;
  void *v18;
  void *v19;
  id v20;
  NSString v21;
  void *v22;

  v2 = v1;
  if (qword_10081D680 != -1)
    swift_once(&qword_10081D680, sub_1001A5284);
  v4 = (void *)UILabel.withFont(_:)(qword_100869FF0);
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v6 = (void *)UILabel.withTextColor(_:)(v5);

  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setText:", v7);

  if (qword_10081D688 != -1)
    swift_once(&qword_10081D688, sub_1001A536C);
  v8 = (void *)UILabel.withFont(_:)(qword_100869FF8);
  v9 = (void *)objc_opt_self(ARUIMetricColors);
  result = objc_msgSend(v9, "distanceColors");
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  v11 = result;
  v12 = objc_msgSend(result, "nonGradientTextColor");

  objc_msgSend(v8, "setTextColor:", v12);
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setText:", v13);

  v14 = (void *)UILabel.withFont(_:)(qword_100869FF8);
  result = objc_msgSend(v9, "elapsedTimeColors");
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v15 = result;
  v16 = objc_msgSend(result, "nonGradientTextColor");

  objc_msgSend(v14, "setTextColor:", v16);
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setText:", v17);

  v18 = (void *)UILabel.withFont(_:)(qword_100869FF8);
  result = objc_msgSend(v9, "paceColors");
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v19 = result;
  v20 = objc_msgSend(result, "nonGradientTextColor");

  objc_msgSend(v18, "setTextColor:", v20);
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setText:", v21);

  result = objc_msgSend(*(id *)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView), "setHidden:", a1 & 1);
  if ((a1 & 1) != 0)
  {
    v22 = *(void **)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorStandard);
    if (v22)
      objc_msgSend(v22, "setActive:", 0);
    result = *(id *)(v2 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorViewBottomAnchorLastRow);
    if (result)
      return objc_msgSend(result, "setActive:", 1);
  }
  return result;
}

id sub_10025543C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailFourColumnSegmentTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailFourColumnSegmentTableViewCell()
{
  return objc_opt_self(CHWorkoutDetailFourColumnSegmentTableViewCell);
}

uint64_t sub_10025548C(void **a1)
{
  uint64_t v1;

  return sub_100254E20(a1, *(_QWORD *)(v1 + 16)) & 1;
}

id sub_100255544(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  objc_super v25;
  _QWORD v26[2];

  v3 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  v4 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "initWithActivityIndicatorStyle:", 100);
  v6 = type metadata accessor for WorkoutDetailSwimmingSetDataSource(0);
  v7 = sub_1000083D8((unint64_t *)&qword_100825518, type metadata accessor for WorkoutDetailSwimmingSetDataSource, (uint64_t)&unk_10062B584);
  v8 = a1;
  v9 = ObservedObject.init(wrappedValue:)(v8, v6, v7);
  v11 = v10;
  v26[0] = v9;
  v26[1] = v10;
  v12 = sub_100257A64();
  v13 = v11;
  v26[0] = AnyView.init<A>(_:)(v26, &type metadata for WorkoutDetailSwimmingSetView, v12);
  v14 = objc_allocWithZone((Class)sub_100047110(&qword_100829CF8));
  *(_QWORD *)&v5[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)(v26);

  v25.receiver = v5;
  v25.super_class = (Class)type metadata accessor for WorkoutDetailedBasicViewController();
  v15 = objc_msgSendSuper2(&v25, "initWithNibName:bundle:", 0, 0);
  v16 = (void *)objc_opt_self(NSBundle);
  v17 = v15;
  v18 = objc_msgSend(v16, "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v22 = v21;

  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setTitle:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  return v17;
}

id sub_10025577C(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  objc_super v25;
  _QWORD v26[2];

  v3 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  v4 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "initWithActivityIndicatorStyle:", 100);
  v6 = type metadata accessor for WorkoutDetailSwimmingSplitDataSource(0);
  v7 = sub_1000083D8((unint64_t *)&qword_100828038, type metadata accessor for WorkoutDetailSwimmingSplitDataSource, (uint64_t)&unk_10063E2D4);
  v8 = a1;
  v9 = ObservedObject.init(wrappedValue:)(v8, v6, v7);
  v11 = v10;
  v26[0] = v9;
  v26[1] = v10;
  v12 = sub_100257A20();
  v13 = v11;
  v26[0] = AnyView.init<A>(_:)(v26, &type metadata for WorkoutDetailSwimmingView, v12);
  v14 = objc_allocWithZone((Class)sub_100047110(&qword_100829CF8));
  *(_QWORD *)&v5[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)(v26);

  v25.receiver = v5;
  v25.super_class = (Class)type metadata accessor for WorkoutDetailedBasicViewController();
  v15 = objc_msgSendSuper2(&v25, "initWithNibName:bundle:", 0, 0);
  v16 = (void *)objc_opt_self(NSBundle);
  v17 = v15;
  v18 = objc_msgSend(v16, "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v22 = v21;

  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setTitle:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  return v17;
}

void sub_100255ABC()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  objc_super v21;

  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for WorkoutDetailedBasicViewController();
  objc_msgSendSuper2(&v21, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  v2 = v1;
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "systemBackgroundColor");
  objc_msgSend(v2, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v0, "navigationItem");
  v6 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 24, v0, "close");
  objc_msgSend(v5, "setRightBarButtonItem:", v6);

  v7 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator];
  objc_msgSend(v7, "sizeToFit");
  v8 = objc_msgSend(v3, "whiteColor");
  objc_msgSend(v7, "setColor:", v8);

  objc_msgSend(v7, "setHidesWhenStopped:", 1);
  v9 = objc_msgSend(v0, "navigationItem");
  v10 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v7);
  objc_msgSend(v9, "setLeftBarButtonItem:", v10);

  v11 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController];
  v12 = objc_msgSend(v11, "view");
  if (!v12)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v13 = v12;
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v14 = objc_msgSend(v11, "view");
  if (!v14)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v15 = v14;
  v16 = objc_msgSend(v3, "clearColor");
  objc_msgSend(v15, "setBackgroundColor:", v16);

  v17 = objc_msgSend(v0, "view");
  if (!v17)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v18 = v17;
  v19 = objc_msgSend(v11, "view");
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v18, "addSubview:", v19);

    objc_msgSend(v0, "addChildViewController:", v11);
    objc_msgSend(v11, "didMoveToParentViewController:", v0);
    sub_100255FC4();
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_100255DE0(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  objc_super v14;

  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for WorkoutDetailedBasicViewController();
  objc_msgSendSuper2(&v14, "viewWillAppear:", a1 & 1);
  v3 = objc_msgSend(objc_allocWithZone((Class)UINavigationBarAppearance), "init");
  objc_msgSend(v3, "configureWithOpaqueBackground");
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v3;
  v6 = objc_msgSend(v4, "systemBackgroundColor");
  objc_msgSend(v5, "setBackgroundColor:", v6);

  v7 = v5;
  v8 = objc_msgSend(v4, "systemBackgroundColor");
  objc_msgSend(v7, "setShadowColor:", v8);

  v9 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v9, "setScrollEdgeAppearance:", v7);

  v10 = objc_msgSend(v1, "tabBarController");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, "tabBar");

    v13 = objc_msgSend(objc_allocWithZone((Class)UITabBarAppearance), "init");
    objc_msgSend(v12, "setScrollEdgeAppearance:", v13);

  }
}

void sub_100255FC4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  Class isa;

  v1 = sub_100047110((uint64_t *)&unk_100828340);
  v2 = swift_allocObject(v1, 64, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100623750;
  v3 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController];
  v4 = objc_msgSend(v3, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, "topAnchor");

  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "safeAreaLayoutGuide");

  v10 = objc_msgSend(v9, "topAnchor");
  v11 = objc_msgSend(v6, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v2 + 32) = v11;
  v12 = objc_msgSend(v3, "view");
  if (!v12)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, "leadingAnchor");

  v15 = objc_msgSend(v0, "view");
  if (!v15)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "safeAreaLayoutGuide");

  v18 = objc_msgSend(v17, "leadingAnchor");
  v19 = objc_msgSend(v14, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v2 + 40) = v19;
  v20 = objc_msgSend(v3, "view");
  if (!v20)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "trailingAnchor");

  v23 = objc_msgSend(v0, "view");
  if (!v23)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, "safeAreaLayoutGuide");

  v26 = objc_msgSend(v25, "trailingAnchor");
  v27 = objc_msgSend(v22, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v2 + 48) = v27;
  v28 = objc_msgSend(v3, "view");
  if (!v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v29 = v28;
  v30 = objc_msgSend(v28, "bottomAnchor");

  v31 = objc_msgSend(v0, "view");
  if (v31)
  {
    v32 = v31;
    v33 = (void *)objc_opt_self(NSLayoutConstraint);
    v34 = objc_msgSend(v32, "bottomAnchor");

    v35 = objc_msgSend(v30, "constraintEqualToAnchor:", v34);
    *(_QWORD *)(v2 + 56) = v35;
    specialized Array._endMutation()(v36);
    sub_100039898();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v33, "activateConstraints:", isa, swift_bridgeObjectRelease(v2).n128_f64[0]);

    return;
  }
LABEL_17:
  __break(1u);
}

id sub_1002563A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailedBasicViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutDetailedBasicViewController()
{
  return objc_opt_self(CHWorkoutDetailedBasicViewController);
}

id sub_100256430(void *a1)
{
  char *v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  objc_class *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v40;
  objc_super v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;

  v3 = (int *)sub_100047110(&qword_100829D68);
  __chkstk_darwin(v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v40 - v7);
  v9 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  v10 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v11 = v1;
  *(_QWORD *)&v1[v9] = objc_msgSend(v10, "initWithActivityIndicatorStyle:", 100);
  *v8 = swift_getKeyPath(&unk_100630CF8);
  v12 = sub_100047110(&qword_100828058);
  swift_storeEnumTagMultiPayload(v8, v12, 0);
  v13 = (_QWORD *)((char *)v8 + v3[9]);
  v14 = type metadata accessor for WorkoutDetailSegmentDataSource(0);
  v15 = sub_1000083D8(&qword_100829D70, type metadata accessor for WorkoutDetailSegmentDataSource, (uint64_t)&unk_100632470);
  v16 = a1;
  *v13 = ObservedObject.init(wrappedValue:)(v16, v14, v15);
  v13[1] = v17;
  *(_QWORD *)((char *)v8 + v3[10]) = 0x4040000000000000;
  *(_QWORD *)((char *)v8 + v3[11]) = 0x4010000000000000;
  *(_QWORD *)((char *)v8 + v3[12]) = 0x4020000000000000;
  v18 = (char *)v8 + v3[13];
  v42 = 0;
  GestureState.init(wrappedValue:)(&v43, &v42, &type metadata for Double);
  v19 = v44;
  v20 = v45;
  *(_QWORD *)v18 = v43;
  *((_QWORD *)v18 + 1) = v19;
  *((_OWORD *)v18 + 1) = v20;
  v21 = (_QWORD *)((char *)v8 + v3[14]);
  v42 = 0;
  State.init(wrappedValue:)(&v43, &v42, &type metadata for Double);
  v22 = v44;
  *v21 = v43;
  v21[1] = v22;
  sub_100021CC0((uint64_t)v8, (uint64_t)v5, &qword_100829D68);
  v23 = sub_100257AB0(&qword_100829D78, &qword_100829D68);
  v43 = AnyView.init<A>(_:)(v5, v3, v23);
  v24 = objc_allocWithZone((Class)sub_100047110(&qword_100829CF8));
  *(_QWORD *)&v11[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)(&v43);

  v25 = (objc_class *)type metadata accessor for WorkoutDetailedBasicViewController();
  v41.receiver = v11;
  v41.super_class = v25;
  v26 = objc_msgSendSuper2(&v41, "initWithNibName:bundle:", 0, 0);
  v27 = (void *)objc_opt_self(NSBundle);
  v28 = v26;
  v29 = objc_msgSend(v27, "mainBundle");
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v29, "localizedStringForKey:value:table:", v30, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v33 = v32;

  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v28, "setTitle:", v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

  v35 = (_QWORD *)((char *)v16 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate);
  v36 = *(_QWORD *)((char *)v16 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate);
  *v35 = v28;
  v35[1] = &off_100791670;
  v37 = v28;
  v38 = swift_unknownObjectRelease(v36);
  (*(void (**)(uint64_t))((swift_isaMask & *v16) + 0x158))(v38);

  sub_10001BE90((uint64_t)v8, &qword_100829D68);
  return v37;
}

id sub_1002567C4(void *a1)
{
  char *v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  objc_class *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  char *v35;
  uint64_t v36;
  id v37;
  uint64_t v39;
  objc_super v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;

  v3 = (int *)sub_100047110(&qword_100829D50);
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v39 - v7);
  v9 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  v10 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v11 = v1;
  *(_QWORD *)&v1[v9] = objc_msgSend(v10, "initWithActivityIndicatorStyle:", 100);
  *v8 = swift_getKeyPath(&unk_100630CF8);
  v12 = sub_100047110(&qword_100828058);
  swift_storeEnumTagMultiPayload(v8, v12, 0);
  v13 = (_QWORD *)((char *)v8 + v3[9]);
  v14 = type metadata accessor for WorkoutDetailSplitDataSource(0);
  v15 = sub_1000083D8(&qword_100829D58, type metadata accessor for WorkoutDetailSplitDataSource, (uint64_t)&unk_10063FF58);
  v16 = a1;
  *v13 = ObservedObject.init(wrappedValue:)(v16, v14, v15);
  v13[1] = v17;
  *(_QWORD *)((char *)v8 + v3[10]) = 0x4040000000000000;
  *(_QWORD *)((char *)v8 + v3[11]) = 0x4010000000000000;
  *(_QWORD *)((char *)v8 + v3[12]) = 0x4020000000000000;
  v18 = (char *)v8 + v3[13];
  v41 = 0;
  GestureState.init(wrappedValue:)(&v42, &v41, &type metadata for Double);
  v19 = v43;
  v20 = v44;
  *(_QWORD *)v18 = v42;
  *((_QWORD *)v18 + 1) = v19;
  *((_OWORD *)v18 + 1) = v20;
  v21 = (_QWORD *)((char *)v8 + v3[14]);
  v41 = 0;
  State.init(wrappedValue:)(&v42, &v41, &type metadata for Double);
  v22 = v43;
  *v21 = v42;
  v21[1] = v22;
  sub_100021CC0((uint64_t)v8, (uint64_t)v5, &qword_100829D50);
  v23 = sub_100257AB0(&qword_100829D60, &qword_100829D50);
  v42 = AnyView.init<A>(_:)(v5, v3, v23);
  v24 = objc_allocWithZone((Class)sub_100047110(&qword_100829CF8));
  *(_QWORD *)&v11[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)(&v42);

  v25 = (objc_class *)type metadata accessor for WorkoutDetailedBasicViewController();
  v40.receiver = v11;
  v40.super_class = v25;
  v26 = objc_msgSendSuper2(&v40, "initWithNibName:bundle:", 0, 0);
  v27 = (void *)objc_opt_self(NSBundle);
  v28 = v26;
  v29 = objc_msgSend(v27, "mainBundle");
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v29, "localizedStringForKey:value:table:", v30, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v33 = v32;

  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v28, "setTitle:", v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

  v35 = &v16[OBJC_IVAR___CHWorkoutDetailSplitDataSource_delegate];
  v36 = *(_QWORD *)&v16[OBJC_IVAR___CHWorkoutDetailSplitDataSource_delegate];
  *(_QWORD *)v35 = v28;
  *((_QWORD *)v35 + 1) = &off_100791670;
  v37 = v28;
  swift_unknownObjectRelease(v36);
  sub_1004A26CC();

  sub_10001BE90((uint64_t)v8, &qword_100829D50);
  return v37;
}

id sub_100256B40(void *a1)
{
  char *v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  void ***v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  objc_class *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  char *v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  char *v43;
  uint64_t v45;
  void **aBlock;
  uint64_t v47;
  __int128 v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  objc_super v51;
  uint64_t v52;

  v3 = (int *)sub_100047110(&qword_100829D38);
  __chkstk_darwin(v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v45 - v7);
  v9 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  v10 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v11 = v1;
  *(_QWORD *)&v1[v9] = objc_msgSend(v10, "initWithActivityIndicatorStyle:", 100);
  *v8 = swift_getKeyPath(&unk_100630CF8);
  v12 = sub_100047110(&qword_100828058);
  swift_storeEnumTagMultiPayload(v8, v12, 0);
  v13 = (_QWORD *)((char *)v8 + v3[9]);
  v14 = type metadata accessor for WorkoutDetailIntervalDataSource(0);
  v15 = sub_1000083D8(&qword_100829D40, type metadata accessor for WorkoutDetailIntervalDataSource, (uint64_t)&unk_100632470);
  v16 = a1;
  *v13 = ObservedObject.init(wrappedValue:)(v16, v14, v15);
  v13[1] = v17;
  *(_QWORD *)((char *)v8 + v3[10]) = 0x4040000000000000;
  *(_QWORD *)((char *)v8 + v3[11]) = 0x4010000000000000;
  *(_QWORD *)((char *)v8 + v3[12]) = 0x4020000000000000;
  v18 = (char *)v8 + v3[13];
  v52 = 0;
  GestureState.init(wrappedValue:)(&aBlock, &v52, &type metadata for Double);
  v19 = v47;
  v20 = v48;
  *(_QWORD *)v18 = aBlock;
  *((_QWORD *)v18 + 1) = v19;
  *((_OWORD *)v18 + 1) = v20;
  v21 = (void ***)((char *)v8 + v3[14]);
  v52 = 0;
  State.init(wrappedValue:)(&aBlock, &v52, &type metadata for Double);
  v22 = v47;
  *v21 = aBlock;
  v21[1] = (void **)v22;
  sub_100021CC0((uint64_t)v8, (uint64_t)v5, &qword_100829D38);
  v23 = sub_100257AB0(&qword_100829D48, &qword_100829D38);
  aBlock = (void **)AnyView.init<A>(_:)(v5, v3, v23);
  v24 = objc_allocWithZone((Class)sub_100047110(&qword_100829CF8));
  *(_QWORD *)&v11[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)(&aBlock);

  v25 = (objc_class *)type metadata accessor for WorkoutDetailedBasicViewController();
  v51.receiver = v11;
  v51.super_class = v25;
  v26 = objc_msgSendSuper2(&v51, "initWithNibName:bundle:", 0, 0);
  v27 = (void *)objc_opt_self(NSBundle);
  v28 = v26;
  v29 = objc_msgSend(v27, "mainBundle");
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v29, "localizedStringForKey:value:table:", v30, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v33 = v32;

  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v28, "setTitle:", v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

  v35 = &v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate];
  v36 = *(_QWORD *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate];
  *(_QWORD *)v35 = v28;
  *((_QWORD *)v35 + 1) = &off_100791670;
  v37 = v28;
  swift_unknownObjectRelease(v36);
  if (*(_QWORD *)v35)
    objc_msgSend(*(id *)(*(_QWORD *)v35 + OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator), "startAnimating");
  v38 = *(void **)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator];
  v39 = *(_QWORD *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout];
  v40 = swift_allocObject(&unk_1007916E8, 24, 7);
  *(_QWORD *)(v40 + 16) = v16;
  v49 = sub_100257AA8;
  v50 = v40;
  aBlock = _NSConcreteStackBlock;
  v47 = 1107296256;
  *(_QWORD *)&v48 = sub_10030BE34;
  *((_QWORD *)&v48 + 1) = &unk_100791700;
  v41 = _Block_copy(&aBlock);
  v42 = v50;
  v43 = v16;
  objc_msgSend(v38, "intervalsForWorkout:completion:", v39, v41, swift_release(v42).n128_f64[0]);
  _Block_release(v41);

  sub_10001BE90((uint64_t)v8, &qword_100829D38);
  return v37;
}

id sub_100256F80(void *a1)
{
  char *v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  void ***v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  objc_class *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  char *v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  char *v43;
  uint64_t v45;
  void **aBlock;
  uint64_t v47;
  __int128 v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  objc_super v51;
  uint64_t v52;

  v3 = (int *)sub_100047110(&qword_100829D10);
  __chkstk_darwin(v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v45 - v7);
  v9 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  v10 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v11 = v1;
  *(_QWORD *)&v1[v9] = objc_msgSend(v10, "initWithActivityIndicatorStyle:", 100);
  *v8 = swift_getKeyPath(&unk_100630CF8);
  v12 = sub_100047110(&qword_100828058);
  swift_storeEnumTagMultiPayload(v8, v12, 0);
  v13 = (_QWORD *)((char *)v8 + v3[9]);
  v14 = type metadata accessor for WorkoutDetailTrackLapDataSource(0);
  v15 = sub_1000083D8(&qword_100829D18, type metadata accessor for WorkoutDetailTrackLapDataSource, (uint64_t)&unk_100632470);
  v16 = a1;
  *v13 = ObservedObject.init(wrappedValue:)(v16, v14, v15);
  v13[1] = v17;
  *(_QWORD *)((char *)v8 + v3[10]) = 0x4040000000000000;
  *(_QWORD *)((char *)v8 + v3[11]) = 0x4010000000000000;
  *(_QWORD *)((char *)v8 + v3[12]) = 0x4020000000000000;
  v18 = (char *)v8 + v3[13];
  v52 = 0;
  GestureState.init(wrappedValue:)(&aBlock, &v52, &type metadata for Double);
  v19 = v47;
  v20 = v48;
  *(_QWORD *)v18 = aBlock;
  *((_QWORD *)v18 + 1) = v19;
  *((_OWORD *)v18 + 1) = v20;
  v21 = (void ***)((char *)v8 + v3[14]);
  v52 = 0;
  State.init(wrappedValue:)(&aBlock, &v52, &type metadata for Double);
  v22 = v47;
  *v21 = aBlock;
  v21[1] = (void **)v22;
  sub_100021CC0((uint64_t)v8, (uint64_t)v5, &qword_100829D10);
  v23 = sub_100257AB0(&qword_100829D20, &qword_100829D10);
  aBlock = (void **)AnyView.init<A>(_:)(v5, v3, v23);
  v24 = objc_allocWithZone((Class)sub_100047110(&qword_100829CF8));
  *(_QWORD *)&v11[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)(&aBlock);

  v25 = (objc_class *)type metadata accessor for WorkoutDetailedBasicViewController();
  v51.receiver = v11;
  v51.super_class = v25;
  v26 = objc_msgSendSuper2(&v51, "initWithNibName:bundle:", 0, 0);
  v27 = (void *)objc_opt_self(NSBundle);
  v28 = v26;
  v29 = objc_msgSend(v27, "mainBundle");
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v29, "localizedStringForKey:value:table:", v30, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v33 = v32;

  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v28, "setTitle:", v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

  v35 = &v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate];
  v36 = *(_QWORD *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate];
  *(_QWORD *)v35 = v28;
  *((_QWORD *)v35 + 1) = &off_100791670;
  v37 = v28;
  swift_unknownObjectRelease(v36);
  if (*(_QWORD *)v35)
    objc_msgSend(*(id *)(*(_QWORD *)v35 + OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator), "startAnimating");
  v38 = *(void **)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator];
  v39 = *(_QWORD *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout];
  v40 = swift_allocObject(&unk_100791698, 24, 7);
  *(_QWORD *)(v40 + 16) = v16;
  v49 = sub_100257A18;
  v50 = v40;
  aBlock = _NSConcreteStackBlock;
  v47 = 1107296256;
  *(_QWORD *)&v48 = sub_100583FE8;
  *((_QWORD *)&v48 + 1) = &unk_1007916B0;
  v41 = _Block_copy(&aBlock);
  v42 = v50;
  v43 = v16;
  objc_msgSend(v38, "trackLapsForWorkout:completion:", v39, v41, swift_release(v42).n128_f64[0]);
  _Block_release(v41);

  sub_10001BE90((uint64_t)v8, &qword_100829D10);
  return v37;
}

id sub_1002573C0(void *a1)
{
  char *v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  objc_class *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  uint64_t v35;
  objc_super v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;

  v3 = (int *)sub_100047110(&qword_100829D00);
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v35 - v7);
  v9 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  v10 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v11 = v1;
  *(_QWORD *)&v1[v9] = objc_msgSend(v10, "initWithActivityIndicatorStyle:", 100);
  *v8 = swift_getKeyPath(&unk_100630CF8);
  v12 = sub_100047110(&qword_100828058);
  swift_storeEnumTagMultiPayload(v8, v12, 0);
  v13 = (_QWORD *)((char *)v8 + v3[9]);
  v14 = type metadata accessor for WorkoutDetailDownhillRunDataSource(0);
  v15 = sub_1000083D8(&qword_100826818, type metadata accessor for WorkoutDetailDownhillRunDataSource, (uint64_t)&unk_10062C290);
  *v13 = ObservedObject.init(wrappedValue:)(a1, v14, v15);
  v13[1] = v16;
  *(_QWORD *)((char *)v8 + v3[10]) = 0x4040000000000000;
  *(_QWORD *)((char *)v8 + v3[11]) = 0x4010000000000000;
  *(_QWORD *)((char *)v8 + v3[12]) = 0x4020000000000000;
  v17 = (char *)v8 + v3[13];
  v37 = 0;
  GestureState.init(wrappedValue:)(&v38, &v37, &type metadata for Double);
  v18 = v39;
  v19 = v40;
  *(_QWORD *)v17 = v38;
  *((_QWORD *)v17 + 1) = v18;
  *((_OWORD *)v17 + 1) = v19;
  v20 = (_QWORD *)((char *)v8 + v3[14]);
  v37 = 0;
  State.init(wrappedValue:)(&v38, &v37, &type metadata for Double);
  v21 = v39;
  *v20 = v38;
  v20[1] = v21;
  sub_100021CC0((uint64_t)v8, (uint64_t)v5, &qword_100829D00);
  v22 = sub_100257AB0(&qword_100829D08, &qword_100829D00);
  v38 = AnyView.init<A>(_:)(v5, v3, v22);
  v23 = objc_allocWithZone((Class)sub_100047110(&qword_100829CF8));
  *(_QWORD *)&v11[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)(&v38);

  v24 = (objc_class *)type metadata accessor for WorkoutDetailedBasicViewController();
  v36.receiver = v11;
  v36.super_class = v24;
  v25 = objc_msgSendSuper2(&v36, "initWithNibName:bundle:", 0, 0);
  v26 = (void *)objc_opt_self(NSBundle);
  v27 = v25;
  v28 = objc_msgSend(v26, "mainBundle");
  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend(v28, "localizedStringForKey:value:table:", v29, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v32 = v31;

  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(v27, "setTitle:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

  sub_10001BE90((uint64_t)v8, &qword_100829D00);
  return v27;
}

id sub_100257700(void *a1, CLLocationDegrees a2, CLLocationDegrees a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  objc_class *v25;
  id v26;
  uint64_t v28;
  objc_super v29;
  uint64_t v30;

  v7 = type metadata accessor for WorkoutReportTrackIssueView(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - v11;
  v13 = OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator;
  v14 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v15 = v3;
  *(_QWORD *)&v3[v13] = objc_msgSend(v14, "initWithActivityIndicatorStyle:", 100);
  *v9 = swift_getKeyPath(&unk_100630CC8);
  v16 = sub_100047110((uint64_t *)&unk_100832400);
  swift_storeEnumTagMultiPayload(v9, v16, 0);
  v17 = type metadata accessor for TrackIssue(0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v18 = a1;
  v19 = sub_1000DAE10((uint64_t)a1, a2, a3);
  v20 = (_QWORD *)((char *)v9 + *(int *)(v7 + 20));
  v21 = sub_1000083D8(&qword_100829CE8, type metadata accessor for TrackIssue, (uint64_t)&unk_1006228A4);
  *v20 = ObservedObject.init(wrappedValue:)(v19, v17, v21);
  v20[1] = v22;
  sub_100257928((uint64_t)v9, (uint64_t)v12);
  sub_10025796C((uint64_t)v12, (uint64_t)v9);
  v23 = sub_1000083D8(&qword_100829CF0, type metadata accessor for WorkoutReportTrackIssueView, (uint64_t)&unk_1006355F8);
  v30 = AnyView.init<A>(_:)(v9, v7, v23);
  v24 = objc_allocWithZone((Class)sub_100047110(&qword_100829CF8));
  *(_QWORD *)&v15[OBJC_IVAR___CHWorkoutDetailedBasicViewController_metricController] = UIHostingController.init(rootView:)(&v30);

  v25 = (objc_class *)type metadata accessor for WorkoutDetailedBasicViewController();
  v29.receiver = v15;
  v29.super_class = v25;
  v26 = objc_msgSendSuper2(&v29, "initWithNibName:bundle:", 0, 0);
  sub_1002579B0((uint64_t)v12);
  return v26;
}

uint64_t sub_100257928(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutReportTrackIssueView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025796C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutReportTrackIssueView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002579B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutReportTrackIssueView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002579F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100257A18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1005834A4(a1, a2, *(void **)(v2 + 16));
}

unint64_t sub_100257A20()
{
  unint64_t result;

  result = qword_100829D28;
  if (!qword_100829D28)
  {
    result = swift_getWitnessTable(&unk_10062E27C, &type metadata for WorkoutDetailSwimmingView);
    atomic_store(result, (unint64_t *)&qword_100829D28);
  }
  return result;
}

unint64_t sub_100257A64()
{
  unint64_t result;

  result = qword_100829D30;
  if (!qword_100829D30)
  {
    result = swift_getWitnessTable(&unk_100649290, &type metadata for WorkoutDetailSwimmingSetView);
    atomic_store(result, (unint64_t *)&qword_100829D30);
  }
  return result;
}

void sub_100257AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10030B250(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100257AB0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100007050(a2);
    result = swift_getWitnessTable(&unk_1006420A8, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100257AFC@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, unsigned __int8 a16, uint64_t a17)
{
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  char v54;
  __int128 v55;
  char v56;
  uint64_t v57;

  v43 = a7;
  v52 = a17;
  v50 = a16;
  v49 = a15;
  v48 = a14;
  v47 = a13;
  v45 = a8;
  v46 = a12;
  v44 = a11;
  v51 = sub_100047110(&qword_10081F430);
  __chkstk_darwin(v51);
  v25 = (char *)&v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a9 = swift_getKeyPath(&unk_100630D50);
  v26 = sub_100047110(&qword_1008325D0);
  swift_storeEnumTagMultiPayload(a9, v26, 0);
  v27 = (int *)type metadata accessor for LargeAwardsCardView(0);
  sub_10002411C(a1, (uint64_t)a9 + v27[5]);
  *(_QWORD *)((char *)a9 + v27[6]) = a2;
  *(_QWORD *)((char *)a9 + v27[7]) = a3;
  v28 = (_QWORD *)((char *)a9 + v27[8]);
  *v28 = a4;
  v28[1] = a5;
  v29 = (_QWORD *)((char *)a9 + v27[9]);
  v30 = v43;
  *v29 = a6;
  v29[1] = v30;
  *(_QWORD *)((char *)a9 + v27[10]) = v45;
  sub_100045AD4(a10, (uint64_t)a9 + v27[11], &qword_10081F600);
  sub_100045AD4(v44, (uint64_t)a9 + v27[12], &qword_10081F550);
  v31 = (char *)a9 + v27[13];
  v53[0] = v46;
  v53[1] = v47;
  v54 = v48 & 1;
  v32 = sub_100047110(&qword_100823070);
  State.init(wrappedValue:)(&v55, v53, v32);
  v33 = v56;
  v34 = v57;
  *(_OWORD *)v31 = v55;
  v31[16] = v33;
  *((_QWORD *)v31 + 3) = v34;
  v35 = v27[14];
  v53[0] = v49;
  v36 = sub_100047110(&qword_100823078);
  State.init(wrappedValue:)(&v55, v53, v36);
  *(_OWORD *)((char *)a9 + v35) = v55;
  v37 = (char *)a9 + v27[15];
  LOBYTE(v53[0]) = v50;
  State.init(wrappedValue:)(&v55, v53, &type metadata for Bool);
  v38 = *((_QWORD *)&v55 + 1);
  *v37 = v55;
  *((_QWORD *)v37 + 1) = v38;
  v39 = (_QWORD *)((char *)a9 + v27[16]);
  v40 = v52;
  sub_100021CC0(v52, (uint64_t)v25, &qword_10081F430);
  State.init(wrappedValue:)(v39, v25, v51);
  return sub_10001BE90(v40, &qword_10081F430);
}

uint64_t sub_100257D78(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v6;

  v2 = *(_QWORD *)(a1 + 32);
  v6 = a2;
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 64) + 40);
  v4 = a2;
  sub_100045AD4((uint64_t)&v6, v3, &qword_100827568);
  return swift_continuation_resume(v2);
}

uint64_t type metadata accessor for LargeAwardsCardView(uint64_t a1)
{
  uint64_t result;

  result = qword_100829E18;
  if (!qword_100829E18)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LargeAwardsCardView);
  return result;
}

uint64_t *sub_100257E0C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_OWORD *)((char *)a1 + v14 + 24) = v15;
    (**(void (***)(void))(v15 - 8))();
    v16 = a3[6];
    v17 = a3[7];
    v18 = *(void **)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + v16) = (uint64_t)v18;
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
    v19 = a3[8];
    v20 = a3[9];
    v21 = (uint64_t *)((char *)a1 + v19);
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = (uint64_t *)((char *)a1 + v20);
    v25 = (uint64_t *)((char *)a2 + v20);
    v26 = *v25;
    v27 = v25[1];
    v28 = a3[10];
    v29 = a3[11];
    v30 = *(void **)((char *)a2 + v28);
    *v24 = v26;
    v24[1] = v27;
    *(uint64_t *)((char *)a1 + v28) = (uint64_t)v30;
    v31 = (char *)a1 + v29;
    v32 = (char *)a2 + v29;
    v33 = *(uint64_t *)((char *)a2 + v29 + 24);
    v34 = v18;
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v27);
    v35 = v30;
    if (v33)
    {
      v36 = *((_QWORD *)v32 + 4);
      *((_QWORD *)v31 + 3) = v33;
      *((_QWORD *)v31 + 4) = v36;
      (**(void (***)(char *, char *, uint64_t))(v33 - 8))(v31, v32, v33);
    }
    else
    {
      v37 = *((_OWORD *)v32 + 1);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v37;
      *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
    }
    v38 = a3[12];
    v39 = (uint64_t *)((char *)a1 + v38);
    v40 = (char *)a2 + v38;
    v41 = *(uint64_t *)((char *)a2 + v38);
    v42 = *(uint64_t *)((char *)a2 + v38 + 8);
    *v39 = v41;
    v39[1] = v42;
    swift_retain(v41);
    swift_retain(v42);
    v43 = *(int *)(sub_100047110(&qword_10081F550) + 32);
    v44 = (char *)v39 + v43;
    v45 = &v40[v43];
    v46 = type metadata accessor for GeometryProxy(0);
    v47 = *(_QWORD *)(v46 - 8);
    v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    if (v48(v45, 1, v46))
    {
      v49 = sub_100047110(&qword_10081F430);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v50 = a3[13];
    v51 = a3[14];
    v52 = (char *)a1 + v50;
    v53 = (char *)a2 + v50;
    *(_OWORD *)v52 = *(_OWORD *)v53;
    v52[16] = v53[16];
    v54 = *((_QWORD *)v53 + 3);
    *((_QWORD *)v52 + 3) = v54;
    v55 = (uint64_t *)((char *)a1 + v51);
    v56 = (uint64_t *)((char *)a2 + v51);
    v57 = *v56;
    v58 = v56[1];
    *v55 = *v56;
    v55[1] = v58;
    v59 = a3[15];
    v60 = a3[16];
    v61 = (char *)a1 + v59;
    v62 = (char *)a2 + v59;
    *v61 = *v62;
    v63 = *((_QWORD *)v62 + 1);
    *((_QWORD *)v61 + 1) = v63;
    v64 = (char *)a1 + v60;
    v65 = (char *)a2 + v60;
    swift_retain(v54);
    swift_retain(v57);
    swift_retain(v58);
    v66 = swift_retain(v63);
    if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v48)(v65, 1, v46, v66))
    {
      v67 = sub_100047110(&qword_10081F430);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v64, v65, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v64, 0, 1, v46);
    }
    v68 = *(int *)(sub_100047110(&qword_10081F438) + 28);
    v12 = *(_QWORD *)&v65[v68];
    *(_QWORD *)&v64[v68] = v12;
  }
  swift_retain(v12);
  return a1;
}

double sub_100258154(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  _QWORD *v12;
  __n128 v13;
  char *v14;
  uint64_t v15;
  double result;

  v4 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)((char *)a1 + a2[5]));

  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[9] + 8));

  v6 = (_QWORD *)((char *)a1 + a2[11]);
  if (v6[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v6);
  v7 = (_QWORD *)((char *)a1 + a2[12]);
  swift_release(*v7);
  swift_release(v7[1]);
  v8 = (char *)v7 + *(int *)(sub_100047110(&qword_10081F550) + 32);
  v9 = type metadata accessor for GeometryProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9))
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  swift_release(*(_QWORD *)((char *)a1 + a2[13] + 24));
  v12 = (_QWORD *)((char *)a1 + a2[14]);
  swift_release(*v12);
  swift_release(v12[1]);
  v13 = swift_release(*(_QWORD *)((char *)a1 + a2[15] + 8));
  v14 = (char *)a1 + a2[16];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v11)(v14, 1, v9, v13))
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  v15 = *(_QWORD *)&v14[*(int *)(sub_100047110(&qword_10081F438) + 28)];
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t *sub_100258300(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = *(_OWORD *)((char *)a2 + v12 + 24);
  *(_OWORD *)((char *)a1 + v12 + 24) = v13;
  (**(void (***)(void))(v13 - 8))();
  v14 = a3[6];
  v15 = a3[7];
  v16 = *(void **)((char *)a2 + v14);
  *(uint64_t *)((char *)a1 + v14) = (uint64_t)v16;
  *(uint64_t *)((char *)a1 + v15) = *(uint64_t *)((char *)a2 + v15);
  v17 = a3[8];
  v18 = a3[9];
  v19 = (uint64_t *)((char *)a1 + v17);
  v20 = (uint64_t *)((char *)a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (uint64_t *)((char *)a1 + v18);
  v23 = (uint64_t *)((char *)a2 + v18);
  v24 = *v23;
  v25 = v23[1];
  v26 = a3[10];
  v27 = a3[11];
  v28 = *(void **)((char *)a2 + v26);
  *v22 = v24;
  v22[1] = v25;
  *(uint64_t *)((char *)a1 + v26) = (uint64_t)v28;
  v29 = (char *)a1 + v27;
  v30 = (char *)a2 + v27;
  v31 = *(uint64_t *)((char *)a2 + v27 + 24);
  v32 = v16;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v25);
  v33 = v28;
  if (v31)
  {
    v34 = *((_QWORD *)v30 + 4);
    *((_QWORD *)v29 + 3) = v31;
    *((_QWORD *)v29 + 4) = v34;
    (**(void (***)(char *, char *, uint64_t))(v31 - 8))(v29, v30, v31);
  }
  else
  {
    v35 = *((_OWORD *)v30 + 1);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v35;
    *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
  }
  v36 = a3[12];
  v37 = (uint64_t *)((char *)a1 + v36);
  v38 = (char *)a2 + v36;
  v39 = *(uint64_t *)((char *)a2 + v36);
  v40 = *(uint64_t *)((char *)a2 + v36 + 8);
  *v37 = v39;
  v37[1] = v40;
  swift_retain(v39);
  swift_retain(v40);
  v41 = *(int *)(sub_100047110(&qword_10081F550) + 32);
  v42 = (char *)v37 + v41;
  v43 = &v38[v41];
  v44 = type metadata accessor for GeometryProxy(0);
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  if (v46(v43, 1, v44))
  {
    v47 = sub_100047110(&qword_10081F430);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  v48 = a3[13];
  v49 = a3[14];
  v50 = (char *)a1 + v48;
  v51 = (char *)a2 + v48;
  *(_OWORD *)v50 = *(_OWORD *)v51;
  v50[16] = v51[16];
  v52 = *((_QWORD *)v51 + 3);
  *((_QWORD *)v50 + 3) = v52;
  v53 = (uint64_t *)((char *)a1 + v49);
  v54 = (uint64_t *)((char *)a2 + v49);
  v55 = *v54;
  v56 = v54[1];
  *v53 = *v54;
  v53[1] = v56;
  v57 = a3[15];
  v58 = a3[16];
  v59 = (char *)a1 + v57;
  v60 = (char *)a2 + v57;
  *v59 = *v60;
  v61 = *((_QWORD *)v60 + 1);
  *((_QWORD *)v59 + 1) = v61;
  v62 = (char *)a1 + v58;
  v63 = (char *)a2 + v58;
  swift_retain(v52);
  swift_retain(v55);
  swift_retain(v56);
  v64 = swift_retain(v61);
  if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v46)(v63, 1, v44, v64))
  {
    v65 = sub_100047110(&qword_10081F430);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v62, v63, v44);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v62, 0, 1, v44);
  }
  v66 = *(int *)(sub_100047110(&qword_10081F438) + 28);
  v67 = *(_QWORD *)&v63[v66];
  *(_QWORD *)&v62[v66] = v67;
  swift_retain(v67);
  return a1;
}

uint64_t *sub_100258620(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  char *v72;
  char *v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  sub_1000F1A58((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]));
  v12 = a3[6];
  v13 = *(void **)((char *)a1 + v12);
  v14 = *(void **)((char *)a2 + v12);
  *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
  v15 = v14;

  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  v16 = a3[8];
  v17 = (uint64_t *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  *v17 = *v18;
  v19 = v18[1];
  v20 = v17[1];
  v17[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = a3[9];
  v22 = (uint64_t *)((char *)a1 + v21);
  v23 = (uint64_t *)((char *)a2 + v21);
  *v22 = *v23;
  v24 = v23[1];
  v25 = v22[1];
  v22[1] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  v26 = a3[10];
  v27 = *(void **)((char *)a1 + v26);
  v28 = *(void **)((char *)a2 + v26);
  *(uint64_t *)((char *)a1 + v26) = (uint64_t)v28;
  v29 = v28;

  v30 = a3[11];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = *(uint64_t *)((char *)a2 + v30 + 24);
  if (*(uint64_t *)((char *)a1 + v30 + 24))
  {
    if (v33)
    {
      sub_1000F1A58(v31, v32);
      goto LABEL_13;
    }
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v31);
  }
  else if (v33)
  {
    *((_QWORD *)v31 + 3) = v33;
    *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
    (**(void (***)(char *, char *))(v33 - 8))(v31, v32);
    goto LABEL_13;
  }
  v34 = *(_OWORD *)v32;
  v35 = *((_OWORD *)v32 + 1);
  *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
  *(_OWORD *)v31 = v34;
  *((_OWORD *)v31 + 1) = v35;
LABEL_13:
  v36 = a3[12];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = *(uint64_t *)((char *)a1 + v36);
  v40 = *(uint64_t *)((char *)a2 + v36);
  *(uint64_t *)((char *)a1 + v36) = v40;
  swift_retain(v40);
  swift_release(v39);
  v41 = *((_QWORD *)v38 + 1);
  v42 = *((_QWORD *)v37 + 1);
  *((_QWORD *)v37 + 1) = v41;
  swift_retain(v41);
  swift_release(v42);
  v43 = *(int *)(sub_100047110(&qword_10081F550) + 32);
  v44 = &v37[v43];
  v45 = &v38[v43];
  v46 = type metadata accessor for GeometryProxy(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v49 = v48(v44, 1, v46);
  v50 = v48(v45, 1, v46);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v46);
LABEL_18:
    v51 = sub_100047110(&qword_10081F430);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v44, v45, v46);
LABEL_19:
  v52 = a3[13];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  v55 = *(_OWORD *)v54;
  v53[16] = v54[16];
  *(_OWORD *)v53 = v55;
  v56 = *((_QWORD *)v53 + 3);
  v57 = *((_QWORD *)v54 + 3);
  *((_QWORD *)v53 + 3) = v57;
  swift_retain(v57);
  swift_release(v56);
  v58 = a3[14];
  v59 = (char *)a1 + v58;
  v60 = (char *)a2 + v58;
  v61 = *(uint64_t *)((char *)a1 + v58);
  v62 = *(uint64_t *)((char *)a2 + v58);
  *(uint64_t *)((char *)a1 + v58) = v62;
  swift_retain(v62);
  swift_release(v61);
  v63 = *((_QWORD *)v59 + 1);
  v64 = *((_QWORD *)v60 + 1);
  *((_QWORD *)v59 + 1) = v64;
  swift_retain(v64);
  swift_release(v63);
  v65 = a3[15];
  v66 = (char *)a1 + v65;
  v67 = (char *)a2 + v65;
  *v66 = *v67;
  v68 = *((_QWORD *)v66 + 1);
  v69 = *((_QWORD *)v67 + 1);
  *((_QWORD *)v66 + 1) = v69;
  swift_retain(v69);
  v70 = swift_release(v68);
  v71 = a3[16];
  v72 = (char *)a1 + v71;
  v73 = (char *)a2 + v71;
  LODWORD(v68) = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v48)((char *)a1 + v71, 1, v46, v70);
  v74 = v48(v73, 1, v46);
  if (!(_DWORD)v68)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v72, v73, v46);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v72, v46);
    goto LABEL_24;
  }
  if (v74)
  {
LABEL_24:
    v75 = sub_100047110(&qword_10081F430);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v72, v73, v46);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v72, 0, 1, v46);
LABEL_25:
  v76 = *(int *)(sub_100047110(&qword_10081F438) + 28);
  v77 = *(_QWORD *)&v72[v76];
  v78 = *(_QWORD *)&v73[v76];
  *(_QWORD *)&v72[v76] = v78;
  swift_retain(v78);
  swift_release(v77);
  return a1;
}

char *sub_100258A88(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v6 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v13 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  v14 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  v15 = a3[11];
  v16 = a3[12];
  v17 = &a1[v15];
  v18 = &a2[v15];
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
  v20 = &a1[v16];
  v21 = &a2[v16];
  v22 = *(_QWORD *)&a2[v16];
  v23 = *(_QWORD *)&a2[v16 + 8];
  *(_QWORD *)v20 = v22;
  *((_QWORD *)v20 + 1) = v23;
  v24 = *(int *)(sub_100047110(&qword_10081F550) + 32);
  v25 = &v20[v24];
  v26 = &v21[v24];
  v27 = type metadata accessor for GeometryProxy(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v29(v26, 1, v27))
  {
    v30 = sub_100047110(&qword_10081F430);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v31 = a3[13];
  v32 = a3[14];
  v33 = *(_OWORD *)&a2[v31];
  v34 = *(_OWORD *)&a2[v31 + 16];
  v35 = &a1[v31];
  *(_OWORD *)v35 = v33;
  *((_OWORD *)v35 + 1) = v34;
  *(_OWORD *)&a1[v32] = *(_OWORD *)&a2[v32];
  v36 = a3[16];
  *(_OWORD *)&a1[a3[15]] = *(_OWORD *)&a2[a3[15]];
  v37 = &a1[v36];
  v38 = &a2[v36];
  if (v29(v38, 1, v27))
  {
    v39 = sub_100047110(&qword_10081F430);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v37, v38, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v37, 0, 1, v27);
  }
  v40 = sub_100047110(&qword_10081F438);
  *(_QWORD *)&v37[*(int *)(v40 + 28)] = *(_QWORD *)&v38[*(int *)(v40 + 28)];
  return a1;
}

char *sub_100258CE8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  if (a1 != a2)
  {
    sub_10001BE90((uint64_t)a1, &qword_1008325D0);
    v6 = sub_100047110(&qword_1008325D0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  _s10FitnessApp24HistoryViewActionContextVwxx_0(&a1[v8]);
  v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
  v12 = a3[6];
  v13 = *(void **)&a1[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];

  v14 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v18 = *(_QWORD *)v16;
  v17 = *((_QWORD *)v16 + 1);
  v19 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v15 = v18;
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRelease(v19);
  v20 = a3[9];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  v25 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease(v25);
  v26 = a3[10];
  v27 = *(void **)&a1[v26];
  *(_QWORD *)&a1[v26] = *(_QWORD *)&a2[v26];

  v28 = a3[11];
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (*(_QWORD *)&a1[v28 + 24])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v29);
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
  v32 = a3[12];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = *(_QWORD *)&a1[v32];
  *(_QWORD *)&a1[v32] = *(_QWORD *)&a2[v32];
  swift_release(v35);
  v36 = *((_QWORD *)v33 + 1);
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  swift_release(v36);
  v37 = *(int *)(sub_100047110(&qword_10081F550) + 32);
  v38 = &v33[v37];
  v39 = &v34[v37];
  v40 = type metadata accessor for GeometryProxy(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42(v39, 1, v40);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v40);
LABEL_12:
    v45 = sub_100047110(&qword_10081F430);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 40))(v38, v39, v40);
LABEL_13:
  v46 = a3[13];
  v47 = &a1[v46];
  v48 = &a2[v46];
  *(_OWORD *)v47 = *(_OWORD *)v48;
  v47[16] = v48[16];
  v49 = *((_QWORD *)v47 + 3);
  *((_QWORD *)v47 + 3) = *((_QWORD *)v48 + 3);
  swift_release(v49);
  v50 = a3[14];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = *(_QWORD *)&a1[v50];
  *(_QWORD *)&a1[v50] = *(_QWORD *)&a2[v50];
  swift_release(v53);
  v54 = *((_QWORD *)v51 + 1);
  *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
  swift_release(v54);
  v55 = a3[15];
  v56 = &a1[v55];
  v57 = &a2[v55];
  *v56 = *v57;
  v58 = *((_QWORD *)v56 + 1);
  *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
  v59 = swift_release(v58);
  v60 = a3[16];
  v61 = &a1[v60];
  v62 = &a2[v60];
  LODWORD(v51) = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v42)(&a1[v60], 1, v40, v59);
  v63 = v42(v62, 1, v40);
  if (!(_DWORD)v51)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 40))(v61, v62, v40);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v61, v40);
    goto LABEL_18;
  }
  if (v63)
  {
LABEL_18:
    v64 = sub_100047110(&qword_10081F430);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v61, v62, v40);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v61, 0, 1, v40);
LABEL_19:
  v65 = *(int *)(sub_100047110(&qword_10081F438) + 28);
  v66 = *(_QWORD *)&v61[v65];
  *(_QWORD *)&v61[v65] = *(_QWORD *)&v62[v65];
  swift_release(v66);
  return a1;
}

uint64_t sub_1002590BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002590C8);
}

uint64_t sub_1002590C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_100047110(&qword_10081F440);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_100047110(&qword_10081F550);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[12];
    }
    else
    {
      v8 = sub_100047110(&qword_10081F438);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[16];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 24);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1002591A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002591B0);
}

uint64_t sub_1002591B0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_100047110(&qword_10081F440);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 24) = (a2 - 1);
      return result;
    }
    v13 = sub_100047110(&qword_10081F550);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[12];
    }
    else
    {
      v10 = sub_100047110(&qword_10081F438);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[16];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100259288(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[13];

  sub_1000F2378(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = "(";
    v8[2] = &unk_100630DC0;
    v8[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v8[4] = &unk_100630DD8;
    v8[5] = &unk_100630DD8;
    v8[6] = &unk_100630DC0;
    v8[7] = &unk_100630DF0;
    sub_10016EF00(319, (unint64_t *)&qword_1008230E8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
    if (v5 <= 0x3F)
    {
      v8[8] = *(_QWORD *)(v4 - 8) + 64;
      v8[9] = &unk_100630E08;
      v8[10] = &unk_100630E20;
      v8[11] = &unk_100630E20;
      sub_10016EF00(319, (unint64_t *)&qword_10081F4B8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
      if (v7 <= 0x3F)
      {
        v8[12] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 13, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_100259394(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B1120, 1);
}

double sub_1002593A4()
{
  double result;

  result = 15.0;
  xmmword_100829D80 = xmmword_100630D30;
  *(_OWORD *)&qword_100829D90 = xmmword_100630D30;
  return result;
}

void sub_1002593BC()
{
  xmmword_100829DA0 = 0x402E000000000000uLL;
  qword_100829DB0 = 0;
  unk_100829DB8 = 0x402E000000000000;
}

uint64_t sub_1002593D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  unsigned int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v2 = v1;
  v71 = a1;
  v3 = type metadata accessor for TaskPriority(0);
  v69 = *(_QWORD *)(v3 - 8);
  v70 = v3;
  __chkstk_darwin(v3);
  v68 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LargeAwardsCardView(0);
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v6;
  __chkstk_darwin(v5);
  v61 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DynamicTypeSize(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v58 - v13;
  v15 = type metadata accessor for AdaptiveStackType(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100047110(&qword_100829E80);
  v66 = *(_QWORD *)(v19 - 8);
  v67 = v19;
  __chkstk_darwin(v19);
  v59 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100047110(&qword_100829E88);
  __chkstk_darwin(v21);
  v60 = (uint64_t)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100047110(&qword_100829E90);
  __chkstk_darwin(v65);
  v64 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v1;
  sub_1003F6E18((uint64_t)v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DynamicTypeSize.xxLarge(_:), v8);
  sub_1000083D8((unint64_t *)&qword_10081F588, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v24 = dispatch thunk of static Comparable.< infix(_:_:)(v11, v14, v8);
  v25 = *(void (**)(char *, uint64_t))(v9 + 8);
  v25(v11, v8);
  v25(v14, v8);
  v26 = (unsigned int *)&enum case for AdaptiveStackType.horizontal(_:);
  if ((v24 & 1) == 0)
    v26 = (unsigned int *)&enum case for AdaptiveStackType.vertical(_:);
  v27 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, *v26, v15);
  v28 = static VerticalAlignment.top.getter(v27);
  v33 = static HorizontalAlignment.center.getter(v28, v29, v30, v31, v32);
  v34 = v2;
  v35 = v61;
  sub_10025B810(v34, v61);
  v36 = *(unsigned __int8 *)(v62 + 80);
  v37 = (v36 + 16) & ~v36;
  v38 = v37 + v63;
  v39 = v36 | 7;
  v40 = swift_allocObject(&unk_100791750, v37 + v63, v36 | 7);
  sub_10025B858(v35, v40 + v37);
  v41 = sub_100047110(&qword_100829E98);
  v42 = sub_100028384(&qword_100829EA0, &qword_100829E98, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v43 = v59;
  v44 = AdaptiveStack.init(type:verticalAlignment:horizontalAlignment:spacing:content:)(v18, v28, v33, 0, 0, sub_10025B89C, v40, v41, v42);
  v45 = static Alignment.center.getter(v44);
  v46 = v60;
  v48 = sub_1003EC1BC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v60, 0.0, 1, 0.0, 1, v45, v47);
  (*(void (**)(char *, uint64_t, double))(v66 + 8))(v43, v67, v48);
  sub_10025B810(v58, v35);
  v49 = swift_allocObject(&unk_100791778, v38, v39);
  v50 = sub_10025B858(v35, v49 + v37);
  v51 = v68;
  static TaskPriority.userInitiated.getter(v50);
  v52 = (uint64_t)v64;
  v53 = &v64[*(int *)(v65 + 36)];
  v54 = type metadata accessor for _TaskModifier(0);
  v56 = v69;
  v55 = v70;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(&v53[*(int *)(v54 + 20)], v51, v70);
  *(_QWORD *)v53 = &unk_100829EB0;
  *((_QWORD *)v53 + 1) = v49;
  sub_100021CC0(v46, v52, &qword_100829E88);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v51, v55);
  sub_10001BE90(v46, &qword_100829E88);
  return sub_100045AD4(v52, v71, &qword_100829E90);
}

uint64_t sub_100259870@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  char v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  char *v96;
  void (*v97)(char *, uint64_t);
  __int128 v99;
  char *KeyPath;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  void (*v113)(char *, uint64_t, uint64_t);
  unsigned int v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  _OWORD v119[11];
  __int128 v120;
  __int128 v121;
  __int128 v122;
  char v123;
  __int128 v124;
  _BYTE v125[161];
  _BYTE v126[7];
  char v127;
  _BYTE v128[7];
  double v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  _BYTE v134[7];
  uint64_t v135;
  char v136;
  unsigned __int8 v137;
  _BYTE v138[7];
  _BYTE v139[7];
  _BYTE v140[7];
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  _OWORD v151[10];
  char v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  _OWORD v163[8];
  _OWORD v164[3];

  v105 = a2;
  v3 = type metadata accessor for LargeAwardsCardView(0);
  v104 = *(void (**)(uint64_t, uint64_t))(v3 - 8);
  __chkstk_darwin(v3);
  v106 = v4;
  v107 = (uint64_t)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DynamicTypeSize(0);
  v112 = *(char **)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v99 - v9;
  v11 = sub_100047110(&qword_10081F550);
  __chkstk_darwin(v11);
  v13 = (_QWORD *)((char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_100047110(&qword_100829EC0);
  __chkstk_darwin(v14);
  v16 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v99 - v18;
  v103 = sub_100047110(&qword_100829EC8);
  __chkstk_darwin(v103);
  v101 = (uint64_t)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100047110(&qword_100829ED0);
  v108 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v109 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v102 = (char *)&v99 - v23;
  __chkstk_darwin(v24);
  v115 = (char *)&v99 - v25;
  sub_100047110(&qword_10081F438);
  State.projectedValue.getter(v13);
  sub_100021CC0((uint64_t)v13, (uint64_t)v16, &qword_10081F550);
  sub_10025A2E8(a1, (uint64_t)&v124);
  sub_10001BE90((uint64_t)v13, &qword_10081F550);
  v26 = &v16[*(int *)(v14 + 36)];
  v27 = v125[48];
  v28 = *(_OWORD *)v125;
  v29 = *(_OWORD *)&v125[16];
  *(_OWORD *)v26 = v124;
  *((_OWORD *)v26 + 1) = v28;
  v30 = *(_OWORD *)&v125[32];
  *((_OWORD *)v26 + 2) = v29;
  *((_OWORD *)v26 + 3) = v30;
  v26[64] = v27;
  KeyPath = v19;
  sub_100045AD4((uint64_t)v16, (uint64_t)v19, &qword_100829EC0);
  v117 = a1;
  sub_1003F6E18((uint64_t)v10);
  v31 = (uint64_t)v112;
  v32 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v112 + 13);
  v114 = enum case for DynamicTypeSize.xxLarge(_:);
  v113 = v32;
  ((void (*)(char *))v32)(v7);
  v116 = sub_1000083D8((unint64_t *)&qword_10081F588, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  LOBYTE(v3) = dispatch thunk of static Comparable.< infix(_:_:)(v7, v10, v5);
  v33 = *(void (**)(char *, uint64_t))(v31 + 8);
  v111 = v7;
  v33(v7, v5);
  v112 = v10;
  v34 = ((uint64_t (*)(char *, uint64_t))v33)(v10, v5);
  if ((v3 & 1) != 0)
  {
    if (qword_10081D908 != -1)
      v34 = swift_once(&qword_10081D908, sub_1002593BC);
    v35 = &xmmword_100829DA0;
  }
  else
  {
    if (qword_10081D900 != -1)
      v34 = swift_once(&qword_10081D900, sub_1002593A4);
    v35 = &xmmword_100829D80;
  }
  v37 = *((_QWORD *)v35 + 2);
  v36 = *((_QWORD *)v35 + 3);
  v99 = *v35;
  v38 = static Edge.Set.all.getter(v34);
  v39 = (uint64_t)KeyPath;
  v40 = v101;
  sub_100021CC0((uint64_t)KeyPath, v101, &qword_100829EC0);
  v41 = v103;
  v42 = v40 + *(int *)(v103 + 36);
  *(_BYTE *)v42 = v38;
  *(_OWORD *)(v42 + 8) = v99;
  *(_QWORD *)(v42 + 24) = v37;
  *(_QWORD *)(v42 + 32) = v36;
  *(_BYTE *)(v42 + 40) = 0;
  sub_10001BE90(v39, &qword_100829EC0);
  v43 = v107;
  sub_10025B810(v117, v107);
  v44 = *((unsigned __int8 *)v104 + 80);
  v45 = (v44 + 16) & ~v44;
  v46 = swift_allocObject(&unk_1007917B8, v45 + v106, v44 | 7);
  sub_10025B858(v43, v46 + v45);
  v47 = sub_10025B97C();
  v48 = v102;
  View.onTapGesture(count:perform:)(1, sub_10025B944, v46, v41, v47);
  swift_release(v46);
  sub_10001BE90(v40, &qword_100829EC8);
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v115, v48, v110);
  v49 = (uint64_t)v112;
  sub_1003F6E18((uint64_t)v112);
  v50 = v111;
  v113(v111, v114, v5);
  LOBYTE(v45) = dispatch thunk of static Comparable.< infix(_:_:)(v50, v49, v5);
  v33(v50, v5);
  v51 = ((uint64_t (*)(uint64_t, uint64_t))v33)(v49, v5);
  if ((v45 & 1) != 0)
    v56 = static HorizontalAlignment.leading.getter(v51);
  else
    v56 = static HorizontalAlignment.center.getter(v51, v52, v53, v54, v55);
  v102 = (char *)v56;
  sub_10025A78C(v117, (uint64_t)v163);
  LODWORD(v103) = static Edge.Set.top.getter(v57);
  v58 = (uint64_t)v112;
  sub_1003F6E18((uint64_t)v112);
  v59 = v111;
  v113(v111, v114, v5);
  v60 = dispatch thunk of static Comparable.< infix(_:_:)(v59, v58, v5);
  v33(v59, v5);
  v104 = (void (*)(uint64_t, uint64_t))v33;
  v33((char *)v58, v5);
  v61 = 0.0;
  if ((v60 & 1) != 0)
  {
    if (qword_10081D900 != -1)
      swift_once(&qword_10081D900, sub_1002593A4);
    v61 = *(double *)&xmmword_100829D80;
  }
  v152 = 0;
  *(_OWORD *)((char *)&v151[7] + 7) = v163[7];
  *(_OWORD *)((char *)&v151[6] + 7) = v163[6];
  *(_OWORD *)((char *)&v151[3] + 7) = v163[3];
  *(_OWORD *)((char *)&v151[2] + 7) = v163[2];
  *(_OWORD *)((char *)&v151[8] + 7) = v164[0];
  v151[9] = *(_OWORD *)((char *)v164 + 9);
  *(_OWORD *)((char *)&v151[4] + 7) = v163[4];
  *(_OWORD *)((char *)&v151[5] + 7) = v163[5];
  *(_OWORD *)((char *)v151 + 7) = v163[0];
  *(_OWORD *)((char *)&v151[1] + 7) = v163[1];
  LODWORD(v101) = 0;
  v159 = v151[6];
  v160 = v151[7];
  v161 = v151[8];
  v162 = *(_OWORD *)((char *)v164 + 9);
  v155 = v151[2];
  v156 = v151[3];
  v157 = v151[4];
  v158 = v151[5];
  v153 = v151[0];
  v154 = v151[1];
  v62 = EdgeInsets.init(_all:)(v61);
  v64 = v63;
  v66 = v65;
  v68 = v67;
  v69 = (uint64_t)v112;
  sub_1003F6E18((uint64_t)v112);
  v70 = v111;
  v71 = v114;
  v72 = v113;
  v113(v111, v114, v5);
  v73 = dispatch thunk of static Comparable.< infix(_:_:)(v70, v69, v5);
  v74 = v104;
  v104((uint64_t)v70, v5);
  v74(v69, v5);
  v147 = v159;
  v148 = v160;
  v149 = v161;
  v150 = v162;
  v143 = v155;
  v144 = v156;
  v145 = v157;
  v146 = v158;
  v141 = v153;
  LODWORD(v106) = (v73 & 1) == 0;
  v142 = v154;
  v137 = 0;
  KeyPath = (char *)swift_getKeyPath(&unk_100630E88);
  LODWORD(v107) = v137;
  sub_1003F6E18(v69);
  v72(v70, v71, v5);
  LODWORD(v117) = dispatch thunk of static Comparable.< infix(_:_:)(v70, v69, v5);
  v74((uint64_t)v70, v5);
  v74(v69, v5);
  v75 = v108;
  v76 = v109;
  v77 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
  v78 = v110;
  v77(v109, v115, v110);
  v79 = v105;
  v77(v105, v76, v78);
  v80 = sub_100047110(&qword_100829EE8);
  v81 = &v79[*(int *)(v80 + 48)];
  v82 = v102;
  v118 = (unint64_t)v102;
  LOBYTE(v76) = v101;
  LOBYTE(v119[0]) = v101;
  *(_OWORD *)((char *)&v119[6] + 1) = v147;
  *(_OWORD *)((char *)&v119[7] + 1) = v148;
  *(_OWORD *)((char *)&v119[8] + 1) = v149;
  *(_OWORD *)((char *)&v119[9] + 1) = v150;
  *(_OWORD *)((char *)&v119[2] + 1) = v143;
  *(_OWORD *)((char *)&v119[3] + 1) = v144;
  *(_OWORD *)((char *)&v119[4] + 1) = v145;
  *(_OWORD *)((char *)&v119[5] + 1) = v146;
  *(_OWORD *)((char *)&v119[1] + 1) = v142;
  *(_OWORD *)((char *)v119 + 1) = v141;
  *(_DWORD *)((char *)&v119[10] + 1) = *(_DWORD *)v140;
  DWORD1(v119[10]) = *(_DWORD *)&v140[3];
  LOBYTE(v71) = v103;
  BYTE8(v119[10]) = v103;
  HIDWORD(v119[10]) = *(_DWORD *)&v139[3];
  *(_DWORD *)((char *)&v119[10] + 9) = *(_DWORD *)v139;
  *(double *)&v120 = v62;
  *((_QWORD *)&v120 + 1) = v64;
  *(_QWORD *)&v121 = v66;
  *((_QWORD *)&v121 + 1) = v68;
  LOBYTE(v122) = v107;
  DWORD1(v122) = *(_DWORD *)&v138[3];
  *(_DWORD *)((char *)&v122 + 1) = *(_DWORD *)v138;
  v83 = (uint64_t)KeyPath;
  *((_QWORD *)&v122 + 1) = KeyPath;
  v123 = v106;
  v84 = v120;
  v85 = v121;
  v86 = v122;
  v81[240] = v106;
  *((_OWORD *)v81 + 13) = v85;
  *((_OWORD *)v81 + 14) = v86;
  *((_OWORD *)v81 + 12) = v84;
  v87 = v118;
  v88 = v119[0];
  v89 = v119[2];
  *((_OWORD *)v81 + 2) = v119[1];
  *((_OWORD *)v81 + 3) = v89;
  *(_OWORD *)v81 = v87;
  *((_OWORD *)v81 + 1) = v88;
  v90 = v119[3];
  v91 = v119[4];
  v92 = v119[6];
  *((_OWORD *)v81 + 6) = v119[5];
  *((_OWORD *)v81 + 7) = v92;
  *((_OWORD *)v81 + 4) = v90;
  *((_OWORD *)v81 + 5) = v91;
  v93 = v119[7];
  v94 = v119[8];
  v95 = v119[10];
  *((_OWORD *)v81 + 10) = v119[9];
  *((_OWORD *)v81 + 11) = v95;
  *((_OWORD *)v81 + 8) = v93;
  *((_OWORD *)v81 + 9) = v94;
  v96 = &v79[*(int *)(v80 + 64)];
  *(_QWORD *)v96 = 0;
  v96[8] = 0;
  v96[9] = (v117 & 1) == 0;
  sub_10025BA08((uint64_t)&v118);
  v97 = *(void (**)(char *, uint64_t))(v75 + 8);
  v97(v115, v78);
  v124 = (unint64_t)v82;
  v125[0] = (_BYTE)v76;
  *(_OWORD *)&v125[97] = v147;
  *(_OWORD *)&v125[113] = v148;
  *(_OWORD *)&v125[129] = v149;
  *(_OWORD *)&v125[145] = v150;
  *(_OWORD *)&v125[33] = v143;
  *(_OWORD *)&v125[49] = v144;
  *(_OWORD *)&v125[65] = v145;
  *(_OWORD *)&v125[81] = v146;
  *(_OWORD *)&v125[1] = v141;
  *(_OWORD *)&v125[17] = v142;
  *(_DWORD *)v126 = *(_DWORD *)v140;
  *(_DWORD *)&v126[3] = *(_DWORD *)&v140[3];
  v127 = v71;
  *(_DWORD *)v128 = *(_DWORD *)v139;
  *(_DWORD *)&v128[3] = *(_DWORD *)&v139[3];
  v129 = v62;
  v130 = v64;
  v131 = v66;
  v132 = v68;
  v133 = v107;
  *(_DWORD *)v134 = *(_DWORD *)v138;
  *(_DWORD *)&v134[3] = *(_DWORD *)&v138[3];
  v135 = v83;
  v136 = v106;
  sub_10025BA8C((uint64_t)&v124);
  return ((uint64_t (*)(char *, uint64_t))v97)(v109, v78);
}

double sub_10025A2E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unsigned __int8 v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  double result;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char v35;
  __int128 v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  char v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  char v47;
  double v48;
  unsigned __int8 v49;
  uint64_t v50;
  unsigned __int8 v51;
  __int128 v52;

  v4 = type metadata accessor for LargeAwardsCardView(0);
  v43 = *(_OWORD *)(a1 + *(int *)(v4 + 56));
  v5 = sub_100047110(&qword_100823188);
  v6 = State.wrappedValue.getter(&v36, v5);
  v7 = v36;
  if ((_QWORD)v36)
  {
    v8 = static Edge.Set.all.getter(v6);
    v9 = EdgeInsets.init(_all:)(0.0);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v16 = (char *)(a1 + *(int *)(v4 + 60));
    v17 = *v16;
    v18 = *((_QWORD *)v16 + 1);
    LOBYTE(v43) = v17;
    *((_QWORD *)&v43 + 1) = v18;
    swift_retain(v7);
    v19 = sub_100047110(&qword_100820D80);
    State.wrappedValue.getter(&v36, v19);
    v20 = 0x3FF0000000000000;
    if (!(_BYTE)v36)
      v20 = 0;
    *(_QWORD *)&v36 = v7;
    *((_QWORD *)&v36 + 1) = v8;
    v37 = v9;
    v38 = v11;
    v39 = v13;
    v40 = v15;
    *(_QWORD *)&v41 = 0;
    *((_QWORD *)&v41 + 1) = v20;
    v42 = 0;
    v21 = sub_100047110(&qword_1008231E8);
    v22 = sub_100047110(&qword_1008231E0);
    v23 = sub_10016F060();
    v24 = sub_10016F0EC((unint64_t *)&qword_100823208, &qword_1008231E0);
    _ConditionalContent<>.init(storage:)(&v36, v21, v22, v23, v24);
    swift_release(v7);
  }
  else
  {
    v25 = static Alignment.center.getter(v6);
    _FrameLayout.init(width:height:alignment:)(&v48, 0, 1, 0x4054000000000000, 0, v25, v26);
    v36 = xmmword_100630D40;
    v37 = v48;
    v38 = v49;
    v39 = v50;
    v40 = v51;
    v41 = v52;
    v42 = 1;
    v27 = sub_100047110(&qword_1008231E8);
    v28 = sub_100047110(&qword_1008231E0);
    v29 = sub_10016F060();
    v30 = sub_10016F0EC((unint64_t *)&qword_100823208, &qword_1008231E0);
    _ConditionalContent<>.init(storage:)(&v36, v27, v28, v29, v30);
  }
  result = *(double *)&v43;
  v32 = v44;
  v33 = v45;
  v34 = v46;
  v35 = v47;
  *(_OWORD *)a2 = v43;
  *(_OWORD *)(a2 + 16) = v32;
  *(_OWORD *)(a2 + 32) = v33;
  *(_OWORD *)(a2 + 48) = v34;
  *(_BYTE *)(a2 + 64) = v35;
  return result;
}

void sub_10025A53C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *v22;
  double *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  id v29;
  _QWORD v31[4];
  _QWORD v32[3];
  uint64_t v33;

  v1 = type metadata accessor for LargeAwardsCardView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin(v1);
  v4 = (char *)&v31[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v0 + *(int *)(v5 + 24));
  if (v6)
  {
    v7 = v6;
    v8 = sub_10025AEA8();
    v10 = v9;
    v12 = v11;
    v14 = v13;
    sub_10025B810(v0, (uint64_t)&v31[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
    v15 = *(unsigned __int8 *)(v2 + 80);
    v16 = (v15 + 16) & ~v15;
    v17 = v16 + v3;
    v18 = v15 | 7;
    v19 = swift_allocObject(&unk_1007917E0, v16 + v3, v15 | 7);
    sub_10025B858((uint64_t)v4, v19 + v16);
    sub_10025B810(v0, (uint64_t)v4);
    v20 = swift_allocObject(&unk_100791808, v17, v18);
    sub_10025B858((uint64_t)v4, v20 + v16);
    sub_100021CC0(v0 + *(int *)(v1 + 44), (uint64_t)v32, &qword_10081F600);
    if (v33)
    {
      v21 = sub_100016804(v32, v33);
      v22 = (_QWORD *)(v0 + *(int *)(v1 + 20));
      v31[3] = &type metadata for AwardViewActionContext;
      v23 = (double *)swift_allocObject(&unk_100791830, 88, 7);
      v31[0] = v23;
      v23[2] = v8;
      *((_QWORD *)v23 + 3) = v10;
      *((_QWORD *)v23 + 4) = v12;
      *((_QWORD *)v23 + 5) = v14;
      *((_QWORD *)v23 + 6) = v7;
      *((_QWORD *)v23 + 7) = sub_10025BB14;
      *((_QWORD *)v23 + 8) = v19;
      *((_QWORD *)v23 + 9) = sub_10025BD14;
      *((_QWORD *)v23 + 10) = v20;
      v24 = *v21;
      v25 = v22[3];
      v26 = v22[4];
      v27 = sub_100016804(v22, v25);
      v28 = v7;
      swift_retain_n(v19, 2);
      swift_retain_n(v20, 2);
      v29 = v28;
      sub_100561D50((uint64_t)v27, (uint64_t)v31, v24, v25, v26);
      swift_release_n(v20, 2);
      swift_release_n(v19, 2);

      sub_10001BE90((uint64_t)v31, (uint64_t *)&unk_100828420);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v32);
    }
    else
    {
      swift_release(v20);
      swift_release(v19);

      sub_10001BE90((uint64_t)v32, &qword_10081F600);
    }
  }
}

void sub_10025A78C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  double v61;
  char v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double (*v73)(char *, uint64_t, __n128);
  void (*v74)(char *);
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  _BYTE v88[7];
  _BYTE v89[7];
  char v90;
  _BYTE v91[7];
  char v92;
  _BYTE v93[7];
  char v94;

  v78 = a1;
  v4 = type metadata accessor for Font.Leading(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for LargeAwardsCardView(0);
  v8 = (uint64_t *)(a1 + *(int *)(v77 + 32));
  v9 = v8[1];
  v85 = *v8;
  v86 = v9;
  v10 = sub_100038CA0();
  v76 = v10;
  swift_bridgeObjectRetain(v9);
  v11 = Text.init<A>(_:)(&v85, &type metadata for String, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  v18 = static Font.caption2.getter(v11);
  v75 = enum case for Font.Leading.tight(_:);
  v74 = *(void (**)(char *))(v5 + 104);
  v74(v7);
  v19 = Font.leading(_:)(v7, v18);
  v20 = swift_release(v18);
  v73 = *(double (**)(char *, uint64_t, __n128))(v5 + 8);
  v21.n128_f64[0] = v73(v7, v4, v20);
  v22 = Text.font(_:)(v19, v11, v13, v17, v15, v21);
  v81 = v23;
  v82 = v22;
  LOBYTE(v18) = v24;
  v83 = v25;
  swift_release(v19);
  v79 = v18 & 1;
  sub_1000E4458(v11, v13, v17);
  swift_bridgeObjectRelease(v15);
  v80 = static Edge.Set.all.getter(v26);
  v27 = EdgeInsets.init(_all:)(0.0);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v34 = (uint64_t *)(v78 + *(int *)(v77 + 36));
  v35 = v34[1];
  v85 = *v34;
  v86 = v35;
  swift_bridgeObjectRetain(v35);
  v36 = Text.init<A>(_:)(&v85, &type metadata for String, v76);
  v38 = v37;
  v40 = v39;
  v42 = v41 & 1;
  v43 = static Font.caption2.getter(v36);
  ((void (*)(char *, _QWORD, uint64_t))v74)(v7, v75, v4);
  v44 = Font.leading(_:)(v7, v43);
  v45 = swift_release(v43);
  v46.n128_f64[0] = v73(v7, v4, v45);
  v47 = Text.font(_:)(v44, v36, v38, v42, v40, v46);
  v49 = v48;
  LOBYTE(v7) = v50;
  v52 = v51;
  swift_release(v44);
  LOBYTE(v44) = v7 & 1;
  sub_1000E4458(v36, v38, v42);
  v53 = swift_bridgeObjectRelease(v40);
  LODWORD(v85) = static HierarchicalShapeStyle.secondary.getter(v53);
  v54 = Text.foregroundStyle<A>(_:)(&v85, v47, v49, v7 & 1, v52, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v56 = v55;
  v58 = v57;
  LOBYTE(v36) = v59 & 1;
  sub_1000E4458(v47, v49, v44);
  swift_bridgeObjectRelease(v52);
  LOBYTE(v44) = static Edge.Set.all.getter(v60);
  v61 = EdgeInsets.init(_all:)(0.0);
  v62 = v79;
  v84 = v79;
  v94 = v79;
  v92 = 0;
  v90 = v36;
  v87 = 0;
  *(_DWORD *)(a2 + 17) = v85;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v85 + 3);
  *(_DWORD *)(a2 + 33) = *(_DWORD *)v93;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v93[3];
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v91;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v91[3];
  v63 = *(_DWORD *)v89;
  *(_DWORD *)(a2 + 100) = *(_DWORD *)&v89[3];
  *(_DWORD *)(a2 + 97) = v63;
  v64 = *(_DWORD *)v88;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v88[3];
  *(_DWORD *)(a2 + 113) = v64;
  LOBYTE(v64) = v87;
  v66 = v81;
  v65 = v82;
  *(_QWORD *)a2 = v82;
  *(_QWORD *)(a2 + 8) = v66;
  *(_BYTE *)(a2 + 16) = v62;
  v67 = v83;
  *(_QWORD *)(a2 + 24) = v83;
  *(_BYTE *)(a2 + 32) = v80;
  *(double *)(a2 + 40) = v27;
  *(_QWORD *)(a2 + 48) = v29;
  *(_QWORD *)(a2 + 56) = v31;
  *(_QWORD *)(a2 + 64) = v33;
  *(_BYTE *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = v54;
  *(_QWORD *)(a2 + 88) = v56;
  *(_BYTE *)(a2 + 96) = v36;
  *(_QWORD *)(a2 + 104) = v58;
  *(_BYTE *)(a2 + 112) = v44;
  *(double *)(a2 + 120) = v61;
  *(_QWORD *)(a2 + 128) = v68;
  *(_QWORD *)(a2 + 136) = v69;
  *(_QWORD *)(a2 + 144) = v70;
  *(_BYTE *)(a2 + 152) = v64;
  v71 = v65;
  v72 = v66;
  sub_1000E439C(v65, v66, v62);
  swift_bridgeObjectRetain(v67);
  sub_1000E439C(v54, v56, v36);
  swift_bridgeObjectRetain(v58);
  sub_1000E4458(v54, v56, v36);
  swift_bridgeObjectRelease(v58);
  sub_1000E4458(v71, v72, v84);
  swift_bridgeObjectRelease(v67);
}

uint64_t sub_10025AB9C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_100829EBC);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_10016D0B4;
  return sub_10025AC00();
}

uint64_t sub_10025AC00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[18] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[19] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[20] = v3;
  v1[21] = v4;
  return swift_task_switch(sub_10025AC6C, v3, v4);
}

uint64_t sub_10025AC6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __n128 v9;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for LargeAwardsCardView(0);
  *(_QWORD *)(v0 + 176) = v2;
  v3 = *(void **)(v1 + *(int *)(v2 + 24));
  *(_QWORD *)(v0 + 184) = v3;
  if (v3 && (v4 = *(void **)(v1 + *(int *)(v2 + 40))) != 0)
  {
    v5 = v0 + 16;
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_10025AD6C;
    v6 = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v7 = (_QWORD *)(v0 + 80);
    v7[1] = 0x40000000;
    v7[2] = sub_100257D78;
    v7[3] = &unk_100791790;
    v7[4] = v6;
    objc_msgSend(v4, "thumbnailImageForAchievement:size:completion:", v3, v7, 90.0, 90.0);
    return swift_continuation_await(v5);
  }
  else
  {
    v9 = swift_release(*(_QWORD *)(v0 + 152));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v9);
  }
}

uint64_t sub_10025AD6C()
{
  uint64_t v0;

  return swift_task_switch(sub_10025ADB0, *(_QWORD *)(*(_QWORD *)v0 + 160), *(_QWORD *)(*(_QWORD *)v0 + 168));
}

uint64_t sub_10025ADB0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 152));
  v2 = *(void **)(v0 + 120);

  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 176);
    v3 = *(void **)(v0 + 184);
    v5 = *(_QWORD *)(v0 + 144);
    objc_msgSend(v2, "size");
    v6 = v5 + *(int *)(v4 + 52);
    v7 = *(_BYTE *)(v6 + 16);
    v8 = *(_QWORD *)(v6 + 24);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)v6;
    *(_BYTE *)(v0 + 96) = v7;
    *(_QWORD *)(v0 + 104) = v8;
    *(_QWORD *)(v0 + 120) = v9;
    *(_QWORD *)(v0 + 128) = v10;
    *(_BYTE *)(v0 + 136) = 0;
    v11 = sub_100047110(&qword_100823180);
    State.wrappedValue.setter(v0 + 120, v11);
    v12 = v2;
    v13 = Image.init(uiImage:)(v12);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v5 + *(int *)(v4 + 56));
    *(_QWORD *)(v0 + 120) = v13;
    v14 = sub_100047110(&qword_100823188);
    State.wrappedValue.setter(v0 + 120, v14);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10025AEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int v39;
  char *v40;
  double v41;
  uint64_t v42;
  char *v43;
  int v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  double v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  uint64_t v56;
  uint64_t v57;
  __int128 *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  double v72;
  CGFloat v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  CGFloat v84;
  double v85;
  CGFloat v86;
  double v87;
  CGFloat v88;
  double v89;
  CGFloat v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t (*v111)(char *, uint64_t, uint64_t);
  __int128 v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;

  v100 = type metadata accessor for GlobalCoordinateSpace(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = (char *)&v96 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DynamicTypeSize(0);
  v107 = *(char **)(v2 - 8);
  __chkstk_darwin(v2);
  v106 = (char *)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v96 - v5;
  v7 = type metadata accessor for LocalCoordinateSpace(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for GeometryProxy(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100047110(&qword_10081F430);
  __chkstk_darwin(v15);
  v102 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v103 = (char *)&v96 - v18;
  __chkstk_darwin(v19);
  v101 = (char *)&v96 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v96 - v22;
  v110 = type metadata accessor for LargeAwardsCardView(0);
  v108 = v0;
  v24 = sub_100047110(&qword_10081F550);
  Binding.wrappedValue.getter(v24);
  v111 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v25 = v111(v23, 1, v11);
  v105 = v12;
  v109 = v14;
  v104 = v7;
  v97 = v8;
  if (v25)
  {
    sub_10001BE90((uint64_t)v23, &qword_10081F430);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v23, v11);
    v26 = sub_10001BE90((uint64_t)v23, &qword_10081F430);
    static CoordinateSpaceProtocol<>.local.getter(v26);
    v27 = GeometryProxy.frame<A>(in:)(v10, v7, &protocol witness table for LocalCoordinateSpace);
    (*(void (**)(char *, uint64_t, double))(v8 + 8))(v10, v7, v27);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  v28 = v11;
  v29 = v10;
  v30 = v108;
  sub_1003F6E18((uint64_t)v6);
  v32 = v106;
  v31 = v107;
  (*((void (**)(char *, _QWORD, uint64_t))v107 + 13))(v106, enum case for DynamicTypeSize.xxLarge(_:), v2);
  sub_1000083D8((unint64_t *)&qword_10081F588, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v33 = dispatch thunk of static Comparable.< infix(_:_:)(v32, v6, v2);
  v34 = (void (*)(char *, uint64_t))*((_QWORD *)v31 + 1);
  v34(v32, v2);
  v34(v6, v2);
  v35 = v110;
  v36 = sub_100047110(&qword_10081F438);
  v37 = v36;
  if ((v33 & 1) != 0)
  {
    v107 = v29;
    v38 = v101;
    State.wrappedValue.getter(v101, v36);
    v39 = v111(v38, 1, v28);
    v40 = v109;
    if (v39)
    {
      sub_10001BE90((uint64_t)v38, &qword_10081F430);
      v41 = -15.0;
      v42 = v105;
    }
    else
    {
      v42 = v105;
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v109, v38, v28);
      v46 = sub_10001BE90((uint64_t)v38, &qword_10081F430);
      v47 = v98;
      static CoordinateSpaceProtocol<>.global.getter(v46);
      v48 = v100;
      v49 = GeometryProxy.frame<A>(in:)(v47, v100, &protocol witness table for GlobalCoordinateSpace);
      v51 = v50;
      v53 = v52;
      v55 = v54;
      v56 = v48;
      v35 = v110;
      (*(void (**)(char *, uint64_t))(v99 + 8))(v47, v56);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v28);
      v116.origin.x = v49;
      v116.origin.y = v51;
      v116.size.width = v53;
      v116.size.height = v55;
      v41 = CGRectGetMinX(v116) + -20.0 + 5.0;
    }
    v57 = v104;
    v58 = (__int128 *)(v30 + *(int *)(v35 + 52));
    v59 = *((_BYTE *)v58 + 16);
    v60 = *((_QWORD *)v58 + 3);
    v112 = *v58;
    v113 = v59;
    v114 = v60;
    v61 = sub_100047110(&qword_100823180);
    State.wrappedValue.getter(&v115, v61);
    v62 = v103;
    State.wrappedValue.getter(v103, v37);
    if (v111(v62, 1, v28))
    {
      sub_10001BE90((uint64_t)v62, &qword_10081F430);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v40, v62, v28);
      v82 = sub_10001BE90((uint64_t)v62, &qword_10081F430);
      v83 = v107;
      static CoordinateSpaceProtocol<>.local.getter(v82);
      v84 = GeometryProxy.frame<A>(in:)(v83, v57, &protocol witness table for LocalCoordinateSpace);
      v86 = v85;
      v88 = v87;
      v90 = v89;
      (*(void (**)(char *, uint64_t))(v97 + 8))(v83, v57);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v28);
      v118.origin.x = v84;
      v118.origin.y = v86;
      v118.size.width = v88;
      v118.size.height = v90;
      CGRectGetMinY(v118);
    }
    if (qword_10081D900 != -1)
      swift_once(&qword_10081D900, sub_1002593A4);
    v91 = *(_QWORD *)v58;
    v92 = *((_QWORD *)v58 + 1);
    v93 = *((_BYTE *)v58 + 16);
    v94 = *((_QWORD *)v58 + 3);
    *(_QWORD *)&v112 = v91;
    *((_QWORD *)&v112 + 1) = v92;
    v113 = v93;
    v114 = v94;
    State.wrappedValue.getter(&v115, v61);
    *(_QWORD *)&v112 = v91;
    *((_QWORD *)&v112 + 1) = v92;
    v113 = v93;
    v114 = v94;
    v81 = v61;
  }
  else
  {
    v43 = v102;
    State.wrappedValue.getter(v102, v36);
    v44 = v111(v43, 1, v28);
    v45 = v109;
    if (v44)
    {
      sub_10001BE90((uint64_t)v43, &qword_10081F430);
      v41 = -15.0;
    }
    else
    {
      v63 = v105;
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v109, v43, v28);
      v64 = sub_10001BE90((uint64_t)v43, &qword_10081F430);
      v65 = v98;
      static CoordinateSpaceProtocol<>.global.getter(v64);
      v66 = v100;
      v67 = GeometryProxy.frame<A>(in:)(v65, v100, &protocol witness table for GlobalCoordinateSpace);
      v69 = v68;
      v71 = v70;
      v73 = v72;
      (*(void (**)(char *, uint64_t))(v99 + 8))(v65, v66);
      v74 = *(void (**)(char *, uint64_t))(v63 + 8);
      v35 = v110;
      v74(v45, v28);
      v117.origin.x = v67;
      v117.origin.y = v69;
      v117.size.width = v71;
      v117.size.height = v73;
      v41 = CGRectGetMinX(v117) + -20.0 + 5.0;
    }
    if (qword_10081D900 != -1)
      swift_once(&qword_10081D900, sub_1002593A4);
    v75 = v30 + *(int *)(v35 + 52);
    v77 = *(_QWORD *)(v75 + 8);
    v78 = *(_BYTE *)(v75 + 16);
    v79 = *(_QWORD *)(v75 + 24);
    *(_QWORD *)&v112 = *(_QWORD *)v75;
    v76 = v112;
    *((_QWORD *)&v112 + 1) = v77;
    v113 = v78;
    v114 = v79;
    v80 = sub_100047110(&qword_100823180);
    State.wrappedValue.getter(&v115, v80);
    *(_QWORD *)&v112 = v76;
    *((_QWORD *)&v112 + 1) = v77;
    v113 = v78;
    v114 = v79;
    v81 = v80;
  }
  State.wrappedValue.getter(&v115, v81);
  return v41;
}

uint64_t sub_10025B740(uint64_t a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[9];
  uint64_t v7;

  v1 = (char *)(a1 + *(int *)(type metadata accessor for LargeAwardsCardView(0) + 60));
  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 0;
  v4 = sub_100047110(&qword_100820D80);
  return State.wrappedValue.setter(v6, v4);
}

uint64_t sub_10025B7A4(uint64_t a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[9];
  uint64_t v7;

  v1 = (char *)(a1 + *(int *)(type metadata accessor for LargeAwardsCardView(0) + 60));
  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 1;
  v4 = sub_100047110(&qword_100820D80);
  return State.wrappedValue.setter(v6, v4);
}

uint64_t sub_10025B810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LargeAwardsCardView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025B858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LargeAwardsCardView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025B89C@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LargeAwardsCardView(0) - 8) + 80);
  return sub_100259870(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_10025B8DC()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for LargeAwardsCardView(0);
  v1 = (_QWORD *)swift_task_alloc(dword_100829EAC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000DA0E4;
  return sub_10025AB9C();
}

void sub_10025B944()
{
  type metadata accessor for LargeAwardsCardView(0);
  sub_10025A53C();
}

unint64_t sub_10025B97C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100829ED8;
  if (!qword_100829ED8)
  {
    v1 = sub_100007050(&qword_100829EC8);
    sub_100028384(&qword_100829EE0, &qword_100829EC0, (uint64_t)&unk_100632248);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100829ED8);
  }
  return result;
}

uint64_t sub_10025BA08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_BYTE *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  v7 = *(_QWORD *)(a1 + 232);
  sub_1000E439C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  sub_1000E439C(v3, v4, v5);
  swift_bridgeObjectRetain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_10025BA8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_BYTE *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  v7 = *(_QWORD *)(a1 + 232);
  sub_1000E4458(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease(v2);
  sub_1000E4458(v3, v4, v5);
  swift_release(v7);
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t sub_10025BB14()
{
  return sub_10025BD20(sub_10025B740);
}

uint64_t sub_10025BB24()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  _QWORD *v15;
  __n128 v16;
  char *v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for LargeAwardsCardView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100047110(&qword_1008325D0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)((char *)v6 + v1[5]));

  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[9] + 8));

  v9 = (_QWORD *)((char *)v6 + v1[11]);
  if (v9[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v9);
  v10 = (_QWORD *)((char *)v6 + v1[12]);
  swift_release(*v10);
  swift_release(v10[1]);
  v11 = (char *)v10 + *(int *)(sub_100047110(&qword_10081F550) + 32);
  v12 = type metadata accessor for GeometryProxy(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (!v14(v11, 1, v12))
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
  swift_release(*(_QWORD *)((char *)v6 + v1[13] + 24));
  v15 = (_QWORD *)((char *)v6 + v1[14]);
  swift_release(*v15);
  swift_release(v15[1]);
  v16 = swift_release(*(_QWORD *)((char *)v6 + v1[15] + 8));
  v17 = (char *)v6 + v1[16];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v14)(v17, 1, v12, v16))
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  v18 = sub_100047110(&qword_10081F438);
  swift_release(*(_QWORD *)&v17[*(int *)(v18 + 28)]);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10025BD14()
{
  return sub_10025BD20(sub_10025B7A4);
}

uint64_t sub_10025BD20(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LargeAwardsCardView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_10025BD5C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

unint64_t sub_10025BD94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100829EF0;
  if (!qword_100829EF0)
  {
    v1 = sub_100007050(&qword_100829E90);
    sub_10025BE18();
    sub_1000083D8((unint64_t *)&qword_100823278, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100829EF0);
  }
  return result;
}

unint64_t sub_10025BE18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100829EF8;
  if (!qword_100829EF8)
  {
    v1 = sub_100007050(&qword_100829E88);
    sub_100028384(&qword_100829F00, &qword_100829E80, (uint64_t)&protocol conformance descriptor for AdaptiveStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100829EF8);
  }
  return result;
}

uint64_t *sub_10025BE9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v9 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v9;
  }
  swift_retain(v9);
  return a1;
}

uint64_t sub_10025BF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

uint64_t sub_10025BF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_retain(v8);
  return a1;
}

uint64_t sub_10025BFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

uint64_t sub_10025C050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_10025C0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release(v8);
  return a1;
}

uint64_t sub_10025C120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10025C12C);
}

uint64_t sub_10025C12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10025C1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10025C1B4);
}

uint64_t sub_10025C1B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SleepingSampleSingleMetricChartPoint(uint64_t a1)
{
  uint64_t result;

  result = qword_100829F60;
  if (!qword_100829F60)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SleepingSampleSingleMetricChartPoint);
  return result;
}

uint64_t sub_10025C268(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10025C2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static Date.== infix(_:_:)() & 1) != 0
    && *(double *)(a1 + *(int *)(a3 + 20)) == *(double *)(a2 + *(int *)(a3 + 20)))
  {
    return static Color.== infix(_:_:)(*(_QWORD *)(a1 + *(int *)(a3 + 24)), *(_QWORD *)(a2 + *(int *)(a3 + 24)));
  }
  else
  {
    return 0;
  }
}

unint64_t sub_10025C354()
{
  unint64_t result;

  result = sub_100436498((uint64_t)&off_10077FA00);
  qword_10086A3B8 = result;
  return result;
}

uint64_t sub_10025C37C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for LegacyDeviceModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for LegacyDeviceModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for LegacyDeviceModel()
{
  return &type metadata for LegacyDeviceModel;
}

BOOL sub_10025C450(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v53;
  _BOOL4 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v55 = type metadata accessor for TrendListMetric(0);
  v60 = *(_QWORD *)(v55 - 8);
  v4 = __chkstk_darwin(v55);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v53 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v53 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v53 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v53 - v17;
  v19 = __chkstk_darwin(v16);
  v59 = (uint64_t)&v53 - v20;
  v21 = __chkstk_darwin(v19);
  v23 = (unsigned __int8 *)&v53 - v22;
  v24 = __chkstk_darwin(v21);
  v26 = (unsigned __int8 *)&v53 - v25;
  __chkstk_darwin(v24);
  v58 = (uint64_t)&v53 - v27;
  v57 = sub_100047110(&qword_10082A150);
  __chkstk_darwin(v57);
  v56 = (uint64_t)&v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = a2;
  v63 = a1;
  v29 = *(_QWORD *)(a1 + 16);
  v61 = *(_QWORD *)(a2 + 16);
  if (v61 != v29)
    return 0;
  v53 = v18;
  swift_bridgeObjectRetain(v62);
  swift_bridgeObjectRetain(v63);
  v30 = 0;
  do
  {
    v54 = v61 == v30;
    if (v61 == v30)
      break;
    v37 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
    v38 = *(_QWORD *)(v60 + 72);
    v64 = v30;
    v39 = v38 * v30;
    v40 = v58;
    sub_10025D818(v62 + v37 + v38 * v30, v58);
    v41 = v63 + v37 + v39;
    v42 = v56;
    v43 = v56 + *(int *)(v57 + 48);
    sub_1001F6320(v40, v56);
    sub_10025D818(v41, v43);
    sub_1001F6320(v42, (uint64_t)v26);
    sub_1001F6320(v43, (uint64_t)v23);
    LODWORD(v41) = *v26;
    LODWORD(v43) = *v23;
    v44 = v59;
    sub_10025D818((uint64_t)v26, v59);
    v45 = (uint64_t)v53;
    sub_10025D818((uint64_t)v23, (uint64_t)v53);
    if ((_DWORD)v41 != (_DWORD)v43)
    {
      sub_1001F6364(v45);
      sub_1001F6364(v44);
      sub_10025D818((uint64_t)v26, (uint64_t)v15);
      sub_10025D818((uint64_t)v23, (uint64_t)v12);
LABEL_13:
      sub_1001F6364((uint64_t)v15);
      sub_1001F6364((uint64_t)v12);
      sub_10025D818((uint64_t)v26, (uint64_t)v9);
      sub_10025D818((uint64_t)v23, (uint64_t)v6);
LABEL_14:
      sub_1001F6364((uint64_t)v6);
      sub_1001F6364((uint64_t)v9);
      sub_1001F6364((uint64_t)v23);
      sub_1001F6364((uint64_t)v26);
      break;
    }
    v46 = *(unsigned __int8 *)(v44 + 1);
    sub_1001F6364(v44);
    v47 = *(unsigned __int8 *)(v45 + 1);
    sub_1001F6364(v45);
    sub_10025D818((uint64_t)v26, (uint64_t)v15);
    sub_10025D818((uint64_t)v23, (uint64_t)v12);
    if (v46 != v47)
      goto LABEL_13;
    v48 = *((_QWORD *)v15 + 1);
    v49 = *((_QWORD *)v15 + 2);
    v50 = *((_QWORD *)v12 + 1);
    v51 = *((_QWORD *)v12 + 2);
    if (v48 == v50 && v49 == v51)
    {
      sub_1001F6364((uint64_t)v15);
      sub_1001F6364((uint64_t)v12);
      sub_10025D818((uint64_t)v26, (uint64_t)v9);
      sub_10025D818((uint64_t)v23, (uint64_t)v6);
    }
    else
    {
      v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v49, v50, v51, 0);
      sub_1001F6364((uint64_t)v15);
      sub_1001F6364((uint64_t)v12);
      sub_10025D818((uint64_t)v26, (uint64_t)v9);
      sub_10025D818((uint64_t)v23, (uint64_t)v6);
      if ((v31 & 1) == 0)
        goto LABEL_14;
    }
    v32 = *(int *)(v55 + 28);
    v33 = &v9[v32];
    v34 = &v6[v32];
    v35 = type metadata accessor for AttributedString(0);
    v36 = sub_1000083D8(&qword_10082A158, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
    LOBYTE(v35) = dispatch thunk of static Equatable.== infix(_:_:)(v33, v34, v35, v36);
    sub_1001F6364((uint64_t)v6);
    sub_1001F6364((uint64_t)v9);
    sub_1001F6364((uint64_t)v23);
    sub_1001F6364((uint64_t)v26);
    v30 = v64 + 1;
  }
  while ((v35 & 1) != 0);
  swift_bridgeObjectRelease(v63);
  swift_bridgeObjectRelease(v62);
  return v54;
}

void sub_10025C8AC(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_10025C8EC@<X0>(uint64_t a1@<X8>)
{
  Swift::String v1;
  void *object;
  Swift::String v3;
  _QWORD v5[6];

  v1._countAndFlagsBits = sub_10025C9B8(a1);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3._countAndFlagsBits = 32;
  strcpy((char *)v5, "splash screen");
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(0xE100000000000000);
  return v5[0];
}

uint64_t sub_10025C9B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;

  v2 = type metadata accessor for TrendListMetric(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
    return 10536;
  v27 = _swiftEmptyArrayStorage;
  sub_1001214C4(0, v6, 0);
  v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v8 = *(_QWORD *)(v3 + 72);
  do
  {
    sub_10025D818(v7, (uint64_t)v5);
    v9 = *((_QWORD *)v5 + 2);
    v25 = (_QWORD *)*((_QWORD *)v5 + 1);
    v26 = v9;
    swift_bridgeObjectRetain(v9);
    v10._countAndFlagsBits = 2108704;
    v10._object = (void *)0xE300000000000000;
    String.append(_:)(v10);
    if (v5[1])
    {
      if (v5[1] == 1)
        v11 = 1952541798;
      else
        v11 = 1853321060;
      v12 = 0xE400000000000000;
    }
    else
    {
      v12 = 0xE200000000000000;
      v11 = 28789;
    }
    v13 = v12;
    String.append(_:)(*(Swift::String *)&v11);
    swift_bridgeObjectRelease(v12);
    v14 = v25;
    v15 = v26;
    sub_1001F6364((uint64_t)v5);
    v16 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
    {
      sub_1001214C4(0, v16[2] + 1, 1);
      v16 = v27;
    }
    v18 = v16[2];
    v17 = v16[3];
    if (v18 >= v17 >> 1)
    {
      sub_1001214C4(v17 > 1, v18 + 1, 1);
      v16 = v27;
    }
    v16[2] = v18 + 1;
    v19 = &v16[2 * v18];
    v19[4] = v14;
    v19[5] = v15;
    v7 += v8;
    --v6;
  }
  while (v6);
  v25 = v16;
  v20 = sub_100047110((uint64_t *)&unk_10081E160);
  v21 = sub_100028384((unint64_t *)&qword_10082BC00, (uint64_t *)&unk_10081E160, (uint64_t)&protocol conformance descriptor for [A]);
  v22 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v20, v21);
  swift_release(v16);
  return v22;
}

uint64_t sub_10025CBCC(uint64_t a1)
{
  return sub_10025D85C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void sub_10025CBE4()
{
  uint64_t v0;

  sub_10025C8AC(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_10025CBF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = v1;
  if (v2 == 1)
  {
    if (qword_10081E0B0 != -1)
      swift_once(&qword_10081E0B0, sub_10004F61C);
    v4 = byte_10083D1A0;
    v5 = static os_log_type_t.info.getter();
    v6 = HKLogActivity;
    os_log(_:dso:log:_:_:)(v5, &_mh_execute_header, v6, "TrendsActivityTileDataModel fetch user first name", 49, 2, _swiftEmptyArrayStorage);

    if ((v4 & 1) != 0)
    {
      v7 = 0xE600000000000000;
      v3 = 0x736978656C41;
    }
    else
    {
      v8 = (id)FIUICopyUserFirstNameFromAddressBook();
      if (v8)
      {
        v9 = v8;
        v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
        v7 = v10;

      }
      else
      {
        v3 = 0;
        v7 = 0;
      }
    }
    v11 = *(_QWORD *)(v0 + 48);
    v12 = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 48) = v3;
    *(_QWORD *)(v0 + 56) = v7;
    swift_bridgeObjectRetain(v7);
    sub_10025DCA8(v11, v12);
  }
  sub_10025DCBC(v1, v2);
  return v3;
}

uint64_t sub_10025CD28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;

  v1 = v0;
  sub_100221460(v0);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (void *)objc_opt_self(NSNotificationCenter);
    v5 = v2 + 32;
    swift_bridgeObjectRetain_n(v2, 2);
    do
    {
      sub_10003E9BC(v5, (uint64_t)v11);
      v6 = objc_msgSend(v4, "defaultCenter");
      v7 = v12;
      v8 = sub_100016804(v11, v12);
      v9 = _bridgeAnythingToObjectiveC<A>(_:)(v8, v7);
      objc_msgSend(v6, "removeObserver:", v9);

      swift_unknownObjectRelease(v9);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v11);
      v5 += 32;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease_n(v2, 2);
  }

  sub_10025DCA8(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 88));
  sub_100022BA4(*(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 120));
  return v1;
}

uint64_t sub_10025CE64()
{
  uint64_t v0;

  sub_10025CD28();
  return swift_deallocClassInstance(v0, 128, 7);
}

void sub_10025CE84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  id v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  _QWORD v16[5];
  __int128 v17;
  __int128 v18;

  v3 = Notification.userInfo.getter();
  if (v3)
  {
    v4 = v3;
    v15[0] = 0xD000000000000010;
    v15[1] = 0x8000000100688AB0;
    AnyHashable.init<A>(_:)(v16, v15, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v4 + 16) && (v5 = sub_10004C814((uint64_t)v16), (v6 & 1) != 0))
    {
      sub_10003E9BC(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v17);
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
    swift_bridgeObjectRelease(v4);
    sub_10004CC10((uint64_t)v16);
    if (*((_QWORD *)&v18 + 1))
    {
      v7 = swift_dynamicCast(v15, &v17, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
      if ((v7 & 1) != 0)
      {
        v8 = a2 + 16;
        v9 = v15[0];
        v10 = static os_log_type_t.default.getter(v7);
        v11 = HKLogActivity;
        os_log(_:dso:log:_:_:)(v10, &_mh_execute_header, v11, "TrendsActivityTileDataModel did receive WheelchairUseDidChange notification", 75, 2, _swiftEmptyArrayStorage);

        swift_beginAccess(v8, v16, 0, 0);
        Strong = swift_weakLoadStrong(v8);
        if (Strong)
        {
          *(_BYTE *)(Strong + 40) = v9;
          swift_release(Strong);
        }
        swift_beginAccess(v8, &v17, 0, 0);
        v13 = swift_weakLoadStrong(v8);
        if (v13)
        {
          v14 = v13;
          sub_10003A4B8();
          swift_release(v14);
        }
      }
    }
    else
    {
      sub_10001BE90((uint64_t)&v17, (uint64_t *)&unk_100828420);
    }
  }
}

_QWORD *sub_10025D028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  unsigned __int8 v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t *v15;
  uint64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _BYTE v52[32];

  v1 = v0;
  v2 = type metadata accessor for TrendListMetric(0);
  v48 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v44 - v6;
  v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v9 = objc_msgSend(v8, "BOOLForKey:", CFSTR("ActivityDidDisplayTrendsOnboarding"));

  if ((v9 & 1) != 0)
  {
    v10 = 1;
  }
  else
  {
    if (qword_10081E0B0 != -1)
      swift_once(&qword_10081E0B0, sub_10004F61C);
    v10 = byte_10083D1A0;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC10FitnessApp25TrendsAvailabilityManager_trendsAvailability);
  v12 = sub_100047110(&qword_10082A160);
  if (v11 <= 1)
    result = 0;
  else
    result = _swiftEmptyArrayStorage;
  if (v11 >= 2 && v10 != 0)
  {
    if (v11 == 2)
    {
      return _swiftEmptyArrayStorage;
    }
    else
    {
      v45 = v5;
      if (v11 == 3)
      {
        v47 = *(_QWORD *)(v1 + 24);
        v15 = (uint64_t *)(v47 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends);
        swift_beginAccess(v47 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidUpTrends, v52, 0, 0);
        v16 = *v15;
        v17 = *(_QWORD *)(*v15 + 16);
        v18 = _swiftEmptyArrayStorage;
        if (v17)
        {
          v50 = _swiftEmptyArrayStorage;
          swift_retain(v1);
          swift_bridgeObjectRetain(v16);
          sub_100121658(0, v17, 0);
          v19 = 0;
          v18 = v50;
          v46 = *(_QWORD *)(v1 + 32);
          do
          {
            v20 = *(unsigned __int8 *)(v16 + v19 + 32);
            v21 = sub_10025CBF0();
            v23 = v22;
            sub_1002C94B0(v20, v47, v46, v21, v22, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(unsigned __int8 *)(v1 + 80), v7, *(_BYTE *)(v1 + 40), 2u);
            swift_bridgeObjectRelease(v23);
            v50 = v18;
            v25 = v18[2];
            v24 = v18[3];
            if (v25 >= v24 >> 1)
            {
              sub_100121658(v24 > 1, v25 + 1, 1);
              v18 = v50;
            }
            ++v19;
            v18[2] = v25 + 1;
            sub_1001F6320((uint64_t)v7, (uint64_t)v18+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v25);
          }
          while (v17 != v19);
          swift_bridgeObjectRelease(v16);
          swift_release(v1);
        }
        v26 = (uint64_t *)(v47 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidDownTrends);
        swift_beginAccess(v47 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedValidDownTrends, &v50, 0, 0);
        v27 = *v26;
        v28 = *(_QWORD *)(*v26 + 16);
        v29 = _swiftEmptyArrayStorage;
        if (v28)
        {
          v49 = _swiftEmptyArrayStorage;
          swift_retain(v1);
          swift_bridgeObjectRetain(v27);
          sub_100121658(0, v28, 0);
          v30 = 0;
          v29 = v49;
          v46 = *(_QWORD *)(v1 + 32);
          v31 = v45;
          do
          {
            v32 = v27;
            v33 = *(unsigned __int8 *)(v27 + v30 + 32);
            v34 = sub_10025CBF0();
            v36 = v35;
            sub_1002C94B0(v33, v47, v46, v34, v35, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(unsigned __int8 *)(v1 + 80), v31, *(_BYTE *)(v1 + 40), 2u);
            swift_bridgeObjectRelease(v36);
            v49 = v29;
            v38 = v29[2];
            v37 = v29[3];
            if (v38 >= v37 >> 1)
            {
              sub_100121658(v37 > 1, v38 + 1, 1);
              v29 = v49;
            }
            ++v30;
            v29[2] = v38 + 1;
            v39 = (uint64_t)v29
                + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))
                + *(_QWORD *)(v48 + 72) * v38;
            v31 = v45;
            sub_1001F6320((uint64_t)v45, v39);
            v27 = v32;
          }
          while (v28 != v30);
          swift_bridgeObjectRelease(v32);
          swift_release(v1);
        }
        v40 = (uint64_t *)(v47 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedInvalidTrends);
        swift_beginAccess(v47 + OBJC_IVAR____TtC10FitnessApp18TrendsDataProvider_orderedInvalidTrends, &v49, 0, 0);
        v41 = *v40;
        swift_retain(v1);
        swift_bridgeObjectRetain(v41);
        v43 = sub_10025D8C4(v42, v1);
        swift_bridgeObjectRelease(v41);
        swift_release(v1);
        v51 = v18;
        sub_10013C678((uint64_t)v29);
        sub_10013C678((uint64_t)v43);
        return v51;
      }
      else
      {
        result = (_QWORD *)_diagnoseUnexpectedEnumCase<A>(type:)(v12, v12);
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TrendsType(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t *assignWithCopy for TrendsType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t *assignWithTake for TrendsType(uint64_t *a1, uint64_t *a2)
{
  char v3;
  uint64_t v4;

  v3 = *((_BYTE *)a2 + 8);
  v4 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrendsType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TrendsType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_10025D7D8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_10025D7F0(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TrendsType()
{
  return &type metadata for TrendsType;
}

uint64_t sub_10025D818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TrendListMetric(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025D85C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_10025D87C + 4 * byte_100630F98[a2]))();
}

BOOL sub_10025D87C@<W0>(uint64_t a1@<X2>, char a2@<W3>, uint64_t a3@<X8>)
{
  return !a2 && sub_10025C450(a1, a3);
}

BOOL sub_10025D8A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (a4 & 0xF) == 3;
}

_QWORD *sub_10025D8C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  int64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;

  v5 = sub_100047110((uint64_t *)&unk_10082EDF0);
  __chkstk_darwin(v5);
  v53 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AttributedString(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v49 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TrendListMetric(0);
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = _swiftEmptyArrayStorage;
  if (v13)
  {
    v50 = v8;
    v51 = v7;
    v59 = _swiftEmptyArrayStorage;
    sub_100121658(0, v13, 0);
    v14 = v59;
    v15 = (char *)(a1 + 32);
    v52 = *(_QWORD *)(a2 + 32);
    v16 = v2;
    v46 = a2;
    while (1)
    {
      v56 = v13;
      v58 = v14;
      v19 = *v15;
      v17 = v15 + 1;
      v18 = v19;
      v20 = *(unsigned __int8 *)(a2 + 40);
      sub_1004E3DDC(v20, v19);
      v22 = v21;
      v57 = v23;
      v24 = v53;
      sub_10055F008(v19, 2u, v53);
      v14 = v16;
      if (v16)
        break;
      v55 = v17;
      v25 = (uint64_t)v12;
      v27 = v50;
      v26 = v51;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v24, 0, 1, v51);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v24, 1, v26) == 1)
        goto LABEL_11;
      v54 = 0;
      v28 = v24;
      v29 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 32);
      v30 = v49;
      v29(v49, v28, v26);
      sub_1004E5034(v20, v18);
      v32 = v31;
      v34 = v33;
      v35 = v48;
      v36 = v30;
      v12 = (char *)v25;
      v29((char *)(v25 + *(int *)(v48 + 28)), (uint64_t)v36, v26);
      *(_BYTE *)v25 = v18;
      *(_BYTE *)(v25 + 1) = 1;
      v37 = v57;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v37;
      v38 = (_QWORD *)(v25 + *(int *)(v35 + 32));
      *v38 = v32;
      v38[1] = v34;
      v14 = v58;
      v59 = v58;
      v40 = v58[2];
      v39 = v58[3];
      if (v40 >= v39 >> 1)
      {
        sub_100121658(v39 > 1, v40 + 1, 1);
        v14 = v59;
      }
      v14[2] = v40 + 1;
      sub_1001F6320(v25, (uint64_t)v14+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v40);
      v15 = v55;
      v13 = v56 - 1;
      v16 = v54;
      a2 = v46;
      if (v56 == 1)
        return v14;
    }
    swift_errorRelease(v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v24, 1, 1, v51);
LABEL_11:
    swift_bridgeObjectRelease(v57);
    sub_10001BE90(v24, (uint64_t *)&unk_10082EDF0);
    v41 = sub_10025DBE8();
    v42 = swift_allocError(&type metadata for TrendsFormattingManager.TextError, v41, 0, 0);
    *v43 = 0;
    swift_willThrow(v42);
    swift_release(v58);
  }
  return v14;
}

unint64_t sub_10025DBE8()
{
  unint64_t result;

  result = qword_10082A168;
  if (!qword_10082A168)
  {
    result = swift_getWitnessTable(&unk_10064657C, &type metadata for TrendsFormattingManager.TextError);
    atomic_store(result, (unint64_t *)&qword_10082A168);
  }
  return result;
}

uint64_t sub_10025DC2C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10025DC50()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_10025DC7C(uint64_t a1)
{
  uint64_t v1;

  return sub_100039CF8(a1, v1, "TrendsActivityTileDataModel did receive trendsAvailabilityDidChangeNotification notification", 92);
}

void sub_10025DCA0(uint64_t a1)
{
  uint64_t v1;

  sub_10025CE84(a1, v1);
}

uint64_t sub_10025DCA8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t sub_10025DCBC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_10025DCD0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10025DCFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10025DD20()
{
  unint64_t result;

  result = qword_10082A170;
  if (!qword_10082A170)
  {
    result = swift_getWitnessTable(&unk_1006361EC, &type metadata for CharacteristicError);
    atomic_store(result, (unint64_t *)&qword_10082A170);
  }
  return result;
}

uint64_t sub_10025DD78(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  void *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v9 = a3[7];
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = *(void **)((char *)a2 + v9);
    *(_QWORD *)(a1 + v9) = v12;
    v13 = type metadata accessor for MetricFormattingHelper(0);
    v14 = *(int *)(v13 + 20);
    v54 = v11 + v14;
    v56 = v10 + v14;
    v15 = type metadata accessor for AttributedString(0);
    v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v8);
    v16 = v12;
    v52(v56, v54, v15);
    v17 = *(int *)(v13 + 24);
    v18 = *(void **)(v11 + v17);
    *(_QWORD *)(v10 + v17) = v18;
    v19 = a3[8];
    v20 = a3[9];
    v21 = *(void **)((char *)a2 + v19);
    *(_QWORD *)(v7 + v19) = v21;
    v22 = *(void **)((char *)a2 + v20);
    *(_QWORD *)(v7 + v20) = v22;
    v23 = a3[10];
    v24 = a3[11];
    v25 = *(void **)((char *)a2 + v23);
    *(_QWORD *)(v7 + v23) = v25;
    v51 = *(uint64_t *)((char *)a2 + v24);
    *(_QWORD *)(v7 + v24) = v51;
    v26 = a3[12];
    v27 = a3[13];
    v53 = *(void **)((char *)a2 + v26);
    *(_QWORD *)(v7 + v26) = v53;
    v57 = *(void **)((char *)a2 + v27);
    *(_QWORD *)(v7 + v27) = v57;
    v28 = a3[14];
    v29 = a3[15];
    v55 = *(void **)((char *)a2 + v28);
    *(_QWORD *)(v7 + v28) = v55;
    *(_BYTE *)(v7 + v29) = *((_BYTE *)a2 + v29);
    v30 = a3[17];
    *(_BYTE *)(v7 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    *(_QWORD *)(v7 + v30) = *(uint64_t *)((char *)a2 + v30);
    v31 = a3[18];
    v32 = a3[19];
    v33 = (uint64_t *)(v7 + v31);
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = *v34;
    v36 = v34[1];
    *v33 = *v34;
    v33[1] = v36;
    v37 = v7 + v32;
    v38 = (uint64_t)a2 + v32;
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
    v39 = *(_QWORD *)(v38 + 16);
    *(_QWORD *)(v37 + 16) = v39;
    v40 = a3[20];
    v41 = (_QWORD *)(v7 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    v4 = v42[1];
    *v41 = *v42;
    v41[1] = v4;
    v43 = v18;
    v44 = v21;
    v45 = v22;
    v46 = v25;
    swift_retain(v51);
    v47 = v53;
    v48 = v57;
    v49 = v55;
    swift_bridgeObjectRetain(v35);
    swift_retain(v36);
    swift_retain(v39);
  }
  swift_retain(v4);
  return v7;
}

double sub_10025DF84(_QWORD *a1, int *a2)
{
  id *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  double result;

  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  v4 = (id *)((char *)a1 + a2[7]);

  v5 = type metadata accessor for MetricFormattingHelper(0);
  v6 = (char *)v4 + *(int *)(v5 + 20);
  v7 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

  swift_release(*(_QWORD *)((char *)a1 + a2[11]));
  v8 = (_QWORD *)((char *)a1 + a2[18]);
  swift_bridgeObjectRelease(*v8);
  swift_release(v8[1]);
  swift_release(*(_QWORD *)((char *)a1 + a2[19] + 16));
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[20] + 8)).n128_u64[0];
  return result;
}

uint64_t sub_10025E098(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  void *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;

  v6 = *a2;
  v7 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = *(void **)((char *)a2 + v8);
  *(_QWORD *)(a1 + v8) = v11;
  v12 = type metadata accessor for MetricFormattingHelper(0);
  v13 = *(int *)(v12 + 20);
  v54 = v10 + v13;
  v56 = v9 + v13;
  v14 = type metadata accessor for AttributedString(0);
  v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  v15 = v11;
  v52(v56, v54, v14);
  v16 = *(int *)(v12 + 24);
  v17 = *(void **)(v10 + v16);
  *(_QWORD *)(v9 + v16) = v17;
  v18 = a3[8];
  v19 = a3[9];
  v20 = *(void **)((char *)a2 + v18);
  *(_QWORD *)(a1 + v18) = v20;
  v21 = *(void **)((char *)a2 + v19);
  *(_QWORD *)(a1 + v19) = v21;
  v22 = a3[10];
  v23 = a3[11];
  v24 = *(void **)((char *)a2 + v22);
  *(_QWORD *)(a1 + v22) = v24;
  v25 = *(uint64_t *)((char *)a2 + v23);
  *(_QWORD *)(a1 + v23) = v25;
  v26 = a3[12];
  v27 = a3[13];
  v53 = *(void **)((char *)a2 + v26);
  *(_QWORD *)(a1 + v26) = v53;
  v57 = *(void **)((char *)a2 + v27);
  *(_QWORD *)(a1 + v27) = v57;
  v28 = a3[14];
  v29 = a3[15];
  v55 = *(void **)((char *)a2 + v28);
  *(_QWORD *)(a1 + v28) = v55;
  *(_BYTE *)(a1 + v29) = *((_BYTE *)a2 + v29);
  v30 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  *(_QWORD *)(a1 + v30) = *(uint64_t *)((char *)a2 + v30);
  v31 = a3[18];
  v32 = a3[19];
  v33 = (uint64_t *)(a1 + v31);
  v34 = (uint64_t *)((char *)a2 + v31);
  v35 = *v34;
  v36 = v34[1];
  *v33 = *v34;
  v33[1] = v36;
  v37 = a1 + v32;
  v38 = (uint64_t)a2 + v32;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  v39 = *(_QWORD *)(v38 + 16);
  *(_QWORD *)(v37 + 16) = v39;
  v40 = a3[20];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (uint64_t *)((char *)a2 + v40);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  v44 = v17;
  v45 = v20;
  v46 = v21;
  v47 = v24;
  swift_retain(v25);
  v48 = v53;
  v49 = v57;
  v50 = v55;
  swift_bridgeObjectRetain(v35);
  swift_retain(v36);
  swift_retain(v39);
  swift_retain(v43);
  return a1;
}

uint64_t *sub_10025E278(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[1];
  v9 = a1[1];
  a1[1] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v10 = a3[7];
  v11 = (void **)((char *)a1 + v10);
  v12 = (uint64_t)a2 + v10;
  v13 = *(void **)((char *)a2 + v10);
  v14 = *v11;
  *v11 = v13;
  v15 = v13;

  v16 = type metadata accessor for MetricFormattingHelper(0);
  v17 = *(int *)(v16 + 20);
  v18 = (char *)v11 + v17;
  v19 = v12 + v17;
  v20 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = *(int *)(v16 + 24);
  v22 = *(void **)(v12 + v21);
  v23 = *(void **)((char *)v11 + v21);
  *(void **)((char *)v11 + v21) = v22;
  v24 = v22;

  v25 = a3[8];
  v26 = *(void **)((char *)a2 + v25);
  v27 = *(void **)((char *)a1 + v25);
  *(uint64_t *)((char *)a1 + v25) = (uint64_t)v26;
  v28 = v26;

  v29 = a3[9];
  v30 = *(void **)((char *)a2 + v29);
  v31 = *(void **)((char *)a1 + v29);
  *(uint64_t *)((char *)a1 + v29) = (uint64_t)v30;
  v32 = v30;

  v33 = a3[10];
  v34 = *(void **)((char *)a2 + v33);
  v35 = *(void **)((char *)a1 + v33);
  *(uint64_t *)((char *)a1 + v33) = (uint64_t)v34;
  v36 = v34;

  v37 = a3[11];
  v38 = *(uint64_t *)((char *)a2 + v37);
  v39 = *(uint64_t *)((char *)a1 + v37);
  *(uint64_t *)((char *)a1 + v37) = v38;
  swift_retain(v38);
  swift_release(v39);
  v40 = a3[12];
  v41 = *(void **)((char *)a2 + v40);
  v42 = *(void **)((char *)a1 + v40);
  *(uint64_t *)((char *)a1 + v40) = (uint64_t)v41;
  v43 = v41;

  v44 = a3[13];
  v45 = *(void **)((char *)a2 + v44);
  v46 = *(void **)((char *)a1 + v44);
  *(uint64_t *)((char *)a1 + v44) = (uint64_t)v45;
  v47 = v45;

  v48 = a3[14];
  v49 = *(void **)((char *)a2 + v48);
  v50 = *(void **)((char *)a1 + v48);
  *(uint64_t *)((char *)a1 + v48) = (uint64_t)v49;
  v51 = v49;

  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  *(uint64_t *)((char *)a1 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
  v52 = a3[18];
  v53 = (uint64_t)a1 + v52;
  v54 = (uint64_t)a2 + v52;
  v55 = *(uint64_t *)((char *)a2 + v52);
  v56 = *(uint64_t *)((char *)a1 + v52);
  *(uint64_t *)((char *)a1 + v52) = v55;
  swift_bridgeObjectRetain(v55);
  swift_bridgeObjectRelease(v56);
  v57 = *(_QWORD *)(v53 + 8);
  v58 = *(_QWORD *)(v54 + 8);
  *(_QWORD *)(v53 + 8) = v58;
  swift_retain(v58);
  swift_release(v57);
  v59 = a3[19];
  v60 = (uint64_t)a1 + v59;
  v61 = (uint64_t *)((char *)a2 + v59);
  v62 = *v61;
  *(_BYTE *)(v60 + 8) = *((_BYTE *)v61 + 8);
  *(_QWORD *)v60 = v62;
  v63 = *(_QWORD *)(v60 + 16);
  v64 = v61[2];
  *(_QWORD *)(v60 + 16) = v64;
  swift_retain(v64);
  swift_release(v63);
  v65 = a3[20];
  v66 = (uint64_t *)((char *)a1 + v65);
  v67 = (uint64_t *)((char *)a2 + v65);
  *v66 = *v67;
  v68 = v66[1];
  v69 = v67[1];
  v66[1] = v69;
  swift_retain(v69);
  swift_release(v68);
  return a1;
}

uint64_t sub_10025E4CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);
  v9 = type metadata accessor for MetricFormattingHelper(0);
  v10 = *(int *)(v9 + 20);
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_QWORD *)(v7 + *(int *)(v9 + 24)) = *(_QWORD *)(v8 + *(int *)(v9 + 24));
  v14 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v19 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  return a1;
}

uint64_t *sub_10025E608(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v8 = a3[7];
  v9 = (uint64_t)a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = *(void **)((char *)a1 + v8);
  *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);

  v12 = type metadata accessor for MetricFormattingHelper(0);
  v13 = *(int *)(v12 + 20);
  v14 = v9 + v13;
  v15 = v10 + v13;
  v16 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = *(int *)(v12 + 24);
  v18 = *(void **)(v9 + v17);
  *(_QWORD *)(v9 + v17) = *(_QWORD *)(v10 + v17);

  v19 = a3[8];
  v20 = *(void **)((char *)a1 + v19);
  *(uint64_t *)((char *)a1 + v19) = *(uint64_t *)((char *)a2 + v19);

  v21 = a3[9];
  v22 = *(void **)((char *)a1 + v21);
  *(uint64_t *)((char *)a1 + v21) = *(uint64_t *)((char *)a2 + v21);

  v23 = a3[10];
  v24 = *(void **)((char *)a1 + v23);
  *(uint64_t *)((char *)a1 + v23) = *(uint64_t *)((char *)a2 + v23);

  v25 = a3[11];
  v26 = *(uint64_t *)((char *)a1 + v25);
  *(uint64_t *)((char *)a1 + v25) = *(uint64_t *)((char *)a2 + v25);
  swift_release(v26);
  v27 = a3[12];
  v28 = *(void **)((char *)a1 + v27);
  *(uint64_t *)((char *)a1 + v27) = *(uint64_t *)((char *)a2 + v27);

  v29 = a3[13];
  v30 = *(void **)((char *)a1 + v29);
  *(uint64_t *)((char *)a1 + v29) = *(uint64_t *)((char *)a2 + v29);

  v31 = a3[14];
  v32 = *(void **)((char *)a1 + v31);
  *(uint64_t *)((char *)a1 + v31) = *(uint64_t *)((char *)a2 + v31);

  v33 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + v33) = *((_BYTE *)a2 + v33);
  v34 = a3[18];
  *(uint64_t *)((char *)a1 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
  v35 = (uint64_t)a1 + v34;
  v36 = (uint64_t)a2 + v34;
  v37 = *(uint64_t *)((char *)a1 + v34);
  *(uint64_t *)((char *)a1 + v34) = *(uint64_t *)((char *)a2 + v34);
  swift_bridgeObjectRelease(v37);
  v38 = *(_QWORD *)(v35 + 8);
  *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
  swift_release(v38);
  v39 = a3[19];
  v40 = (uint64_t)a1 + v39;
  v41 = (uint64_t)a2 + v39;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
  v42 = *(_QWORD *)(v40 + 16);
  *(_QWORD *)(v40 + 16) = *(_QWORD *)(v41 + 16);
  swift_release(v42);
  v43 = a3[20];
  v44 = (uint64_t *)((char *)a1 + v43);
  v45 = (uint64_t *)((char *)a2 + v43);
  v46 = v44[1];
  v48 = *v45;
  v47 = v45[1];
  *v44 = v48;
  v44[1] = v47;
  swift_release(v46);
  return a1;
}

uint64_t sub_10025E7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10025E800);
}

uint64_t sub_10025E800(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for MetricFormattingHelper(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_10025E87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10025E888);
}

char *sub_10025E888(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for MetricFormattingHelper(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MetricFamilyRoomView(uint64_t a1)
{
  uint64_t result;

  result = qword_10082A1D0;
  if (!qword_10082A1D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetricFamilyRoomView);
  return result;
}

uint64_t sub_10025E938(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[17];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = &unk_1006310B8;
  result = type metadata accessor for MetricFormattingHelper(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[11] = &unk_1006310D0;
    v4[12] = &unk_1006310D0;
    v4[13] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[14] = &unk_1006310E8;
    v4[15] = &unk_100631100;
    v4[16] = &unk_100631118;
    swift_initStructMetadata(a1, 256, 17, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10025EA18(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B12DC, 1);
}

double sub_10025EA28()
{
  double result;

  result = 10.0;
  xmmword_10086A3C0 = xmmword_100622F50;
  *(_OWORD *)&qword_10086A3D0 = xmmword_100622F50;
  return result;
}

uint64_t sub_10025EA40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (**v59)(unsigned __int8 *);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char v75[16];
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char v81;

  v72 = a1;
  v2 = type metadata accessor for TaskPriority(0);
  v70 = *(_QWORD *)(v2 - 8);
  v71 = v2;
  __chkstk_darwin(v2);
  v69 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for MetricFamilyRoomView(0);
  v64 = *(_QWORD *)(v74 - 8);
  v4 = *(_QWORD *)(v64 + 64);
  __chkstk_darwin(v74);
  v63 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_10082A248);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10082A250);
  __chkstk_darwin(v9);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110(&qword_10082A258);
  v67 = *(_QWORD *)(v12 - 8);
  v68 = v12;
  __chkstk_darwin(v12);
  v73 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100047110(&qword_10082A260);
  __chkstk_darwin(v66);
  v65 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = v1;
  v16 = static Axis.Set.vertical.getter(v15);
  v17 = sub_100047110(&qword_10082A268);
  v18 = sub_100261404();
  v19 = ScrollView.init(_:showsIndicators:content:)(v16, 1, sub_1002613FC, v75, v17, v18);
  LOBYTE(v17) = static Edge.Set.horizontal.getter(v19);
  v20 = EdgeInsets.init(_all:)(20.0);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v5);
  v27 = &v11[*(int *)(v9 + 36)];
  *v27 = v17;
  *((double *)v27 + 1) = v20;
  *((_QWORD *)v27 + 2) = v22;
  *((_QWORD *)v27 + 3) = v24;
  *((_QWORD *)v27 + 4) = v26;
  v27[40] = 0;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v28 = v1;
  v29 = v1 + *(int *)(v74 + 76);
  v30 = *(_QWORD *)v29;
  v31 = *(_BYTE *)(v29 + 8);
  v32 = *(_QWORD *)(v29 + 16);
  v77 = v30;
  v78 = v31;
  v79 = v32;
  v33 = sub_100047110(&qword_10081F1C0);
  State.wrappedValue.getter(&v80, v33);
  v77 = v80;
  v78 = v81;
  v62 = v1;
  v34 = v63;
  sub_10004F8C8(v1, v63, type metadata accessor for MetricFamilyRoomView);
  v35 = *(unsigned __int8 *)(v64 + 80);
  v36 = (v35 + 16) & ~v35;
  v37 = v36 + v4;
  v38 = v35 | 7;
  v64 = v35 | 7;
  v39 = swift_allocObject(&unk_100791B90, v37, v35 | 7);
  sub_100047C88(v34, v39 + v36, type metadata accessor for MetricFamilyRoomView);
  v40 = sub_1002614CC();
  v41 = sub_1000E9714();
  View.onChange<A>(of:initial:_:)(&v77, 0, sub_10026148C, v39, v9, &type metadata for MetricDataProviderTimeScale, v40, v41);
  swift_release(v39);
  sub_10001BE90((uint64_t)v11, &qword_10082A250);
  v42 = v28;
  v43 = v34;
  sub_10004F8C8(v42, v34, type metadata accessor for MetricFamilyRoomView);
  v44 = swift_allocObject(&unk_100791BB8, v37, v38);
  v45 = sub_100047C88(v34, v44 + v36, type metadata accessor for MetricFamilyRoomView);
  v46 = v69;
  static TaskPriority.userInitiated.getter(v45);
  v47 = (uint64_t)v65;
  v48 = &v65[*(int *)(v66 + 36)];
  v49 = type metadata accessor for _TaskModifier(0);
  v50 = v70;
  v51 = v71;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(&v48[*(int *)(v49 + 20)], v46, v71);
  *(_QWORD *)v48 = &unk_10082A2A0;
  *((_QWORD *)v48 + 1) = v44;
  v53 = v67;
  v52 = v68;
  v54 = v73;
  (*(void (**)(uint64_t, char *, uint64_t))(v67 + 16))(v47, v73, v68);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v51);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v52);
  v55 = *(_QWORD *)(*(_QWORD *)(v62 + *(int *)(v74 + 32))
                  + OBJC_IVAR____TtC10FitnessApp19MetricsDataProvider_metricCategoryUpdates);
  sub_10004F8C8(v62, v43, type metadata accessor for MetricFamilyRoomView);
  v56 = swift_allocObject(&unk_100791BE0, v37, v64);
  sub_100047C88(v43, v56 + v36, type metadata accessor for MetricFamilyRoomView);
  v57 = v72;
  sub_100021CC0(v47, v72, &qword_10082A260);
  v58 = sub_100047110(&qword_10082A2A8);
  *(_QWORD *)(v57 + *(int *)(v58 + 52)) = v55;
  v59 = (void (**)(unsigned __int8 *))(v57 + *(int *)(v58 + 56));
  *v59 = sub_1002615BC;
  v59[1] = (void (*)(unsigned __int8 *))v56;
  swift_retain(v55);
  return sub_10001BE90(v47, &qword_10082A260);
}

uint64_t sub_10025EF64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = sub_100047110(&qword_10082A280);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v7);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v8 = sub_100047110(&qword_10082A2D8);
  sub_10025F064(a1, (uint64_t *)&v6[*(int *)(v8 + 44)]);
  LOBYTE(a1) = static Edge.Set.bottom.getter(v9);
  v10 = EdgeInsets.init(_all:)(30.0);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_100021CC0((uint64_t)v6, a2, &qword_10082A280);
  v17 = a2 + *(int *)(sub_100047110(&qword_10082A268) + 36);
  *(_BYTE *)v17 = a1;
  *(double *)(v17 + 8) = v10;
  *(_QWORD *)(v17 + 16) = v12;
  *(_QWORD *)(v17 + 24) = v14;
  *(_QWORD *)(v17 + 32) = v16;
  *(_BYTE *)(v17 + 40) = 0;
  return sub_10001BE90((uint64_t)v6, &qword_10082A280);
}

void sub_10025F064(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  double v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  _QWORD *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t KeyPath;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char v140;
  double v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  int v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  int *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t *v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  __int128 v233;
  char v234;
  double v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char v239;

  v217 = a2;
  v187 = type metadata accessor for Divider(0);
  v186 = *(_QWORD *)(v187 - 8);
  __chkstk_darwin(v187);
  v185 = (char *)&v183 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = sub_100047110(&qword_100821170);
  v215 = *(_QWORD *)(v188 - 8);
  __chkstk_darwin(v188);
  v184 = (char *)&v183 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100821178);
  __chkstk_darwin(v5);
  v222 = (uint64_t)&v183 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v218 = (uint64_t)&v183 - v8;
  v195 = type metadata accessor for MetricFamilyRoomView(0);
  v208 = *(_QWORD *)(v195 - 8);
  __chkstk_darwin(v195);
  v211 = (uint64_t)&v183 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = v9;
  __chkstk_darwin(v10);
  v219 = (uint64_t)&v183 - v11;
  v12 = sub_100047110(&qword_10082A2E0);
  __chkstk_darwin(v12);
  v220 = (uint64_t)&v183 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v221 = (uint64_t)&v183 - v15;
  __chkstk_darwin(v16);
  v216 = (uint64_t *)((char *)&v183 - v17);
  __chkstk_darwin(v18);
  v210 = (uint64_t *)((char *)&v183 - v19);
  __chkstk_darwin(v20);
  v225 = (uint64_t)&v183 - v21;
  v204 = type metadata accessor for Date(0);
  v203 = *(_QWORD *)(v204 - 8);
  __chkstk_darwin(v204);
  v201 = (char *)&v183 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = type metadata accessor for Calendar.Component(0);
  v198 = *(_QWORD *)(v199 - 8);
  __chkstk_darwin(v199);
  v197 = (char *)&v183 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = type metadata accessor for Calendar(0);
  v200 = *(_QWORD *)(v202 - 8);
  __chkstk_darwin(v202);
  v194 = (char *)&v183 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = type metadata accessor for AccessibilityTraits(0);
  v205 = *(_QWORD *)(v206 - 8);
  __chkstk_darwin(v206);
  v196 = (char *)&v183 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = type metadata accessor for Font.Leading(0);
  v191 = *(_QWORD *)(v193 - 8);
  __chkstk_darwin(v193);
  v190 = (char *)&v183 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100047110(&qword_10082A2E8);
  __chkstk_darwin(v27);
  v224 = (uint64_t)&v183 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v223 = (uint64_t)&v183 - v30;
  v31 = *(_BYTE *)(a1 + 16);
  v192 = a1;
  v229 = sub_10011E644(v31);
  v230 = v32;
  v189 = sub_100038CA0();
  v33 = Text.init<A>(_:)(&v229, &type metadata for String, v189);
  v35 = v34;
  v37 = v36;
  v39 = v38 & 1;
  v40 = static Font.largeTitle.getter();
  v42 = Text.font(_:)(v40, v33, v35, v39, v37, v41);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  swift_release(v40);
  v49 = v46 & 1;
  sub_1000E4458(v33, v35, v39);
  v50 = swift_bridgeObjectRelease(v37);
  v51 = static Font.Weight.bold.getter(v50);
  v213 = Text.fontWeight(_:)(*(_QWORD *)&v51, 0, v42, v44, v49, v48);
  v212 = v52;
  v207 = v53;
  v214 = v54;
  sub_1000E4458(v42, v44, v49);
  swift_bridgeObjectRelease(v48);
  v55 = a1 + *(int *)(v195 + 76);
  v56 = *(_BYTE *)(v55 + 8);
  v57 = *(char **)(v55 + 16);
  v229 = *(_QWORD *)v55;
  LOBYTE(v230) = v56;
  v231 = v57;
  v195 = sub_100047110(&qword_10081F1C0);
  State.wrappedValue.getter(&v226, v195);
  v229 = sub_10041FBD8();
  v230 = v58;
  v59 = Text.init<A>(_:)(&v229, &type metadata for String, v189);
  v61 = v60;
  v63 = v62;
  v65 = v64 & 1;
  v67 = static Font.body.getter(v66);
  v68 = v191;
  v69 = v190;
  v70 = v193;
  (*(void (**)(char *, _QWORD, uint64_t))(v191 + 104))(v190, enum case for Font.Leading.tight(_:), v193);
  v71 = Font.leading(_:)(v69, v67);
  v72 = swift_release(v67);
  v73.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v68 + 8))(v69, v70, v72);
  v74 = Text.font(_:)(v71, v59, v61, v65, v63, v73);
  v76 = v75;
  LOBYTE(v68) = v77;
  v79 = v78;
  swift_release(v71);
  sub_1000E4458(v59, v61, v65);
  swift_bridgeObjectRelease(v63);
  v81 = static Font.Weight.semibold.getter(v80);
  v82 = Text.fontWeight(_:)(*(_QWORD *)&v81, 0, v74, v76, v68 & 1, v79);
  v84 = v83;
  v86 = v85;
  v88 = v87 & 1;
  sub_1000E4458(v74, v76, v68 & 1);
  v89 = swift_bridgeObjectRelease(v79);
  LODWORD(v229) = static HierarchicalShapeStyle.secondary.getter(v89);
  v90 = Text.foregroundStyle<A>(_:)(&v229, v82, v84, v88, v86, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v92 = v91;
  LOBYTE(v76) = v93;
  v95 = v94;
  sub_1000E4458(v82, v84, v88);
  swift_bridgeObjectRelease(v86);
  LOBYTE(v82) = static Edge.Set.bottom.getter(v96);
  v97 = EdgeInsets.init(_all:)(-4.0);
  v229 = v90;
  v230 = v92;
  LOBYTE(v231) = v76 & 1;
  v232 = v95;
  v233 = xmmword_100631080;
  v234 = v82;
  v235 = v97;
  v236 = v98;
  v237 = v99;
  v238 = v100;
  v239 = 0;
  v101 = v196;
  static AccessibilityTraits.isHeader.getter();
  v102 = sub_100047110(&qword_10082A2F0);
  v103 = sub_100261938();
  v104 = v224;
  View.accessibilityAddTraits(_:)(v101, v102, v103);
  (*(void (**)(char *, uint64_t))(v205 + 8))(v101, v206);
  v105 = v232;
  sub_1000E4458(v229, v230, (char)v231);
  v106 = v192;
  swift_bridgeObjectRelease(v105);
  sub_100045AD4(v104, v223, &qword_10082A2E8);
  v107 = *(_BYTE *)(v55 + 8);
  v108 = *(_QWORD *)(v55 + 16);
  v226 = *(_QWORD *)v55;
  v227 = v107;
  v228 = v108;
  v109 = State.projectedValue.getter(&v229);
  v206 = v229;
  v205 = v230;
  v196 = v231;
  LODWORD(v195) = v232;
  LODWORD(v191) = *(unsigned __int8 *)(v106 + 16);
  v110 = v194;
  static Calendar.current.getter(v109);
  v111 = v198;
  v112 = v197;
  v113 = v199;
  v114 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v198 + 104))(v197, enum case for Calendar.Component.year(_:), v199);
  v115 = v201;
  Date.init()(v114);
  v193 = Calendar.component(_:from:)(v112, v115);
  (*(void (**)(char *, uint64_t))(v203 + 8))(v115, v204);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v112, v113);
  v116 = (*(uint64_t (**)(char *, uint64_t))(v200 + 8))(v110, v202);
  if (qword_10081D918 != -1)
    v116 = swift_once(&qword_10081D918, sub_10025EA28);
  v203 = *((_QWORD *)&xmmword_10086A3C0 + 1);
  v204 = xmmword_10086A3C0;
  v202 = qword_10086A3D0;
  v201 = (char *)unk_10086A3D8;
  v117 = static Edge.Set.all.getter(v116);
  LODWORD(v200) = v117;
  v122 = static HorizontalAlignment.center.getter(v117, v118, v119, v120, v121);
  v123 = (uint64_t)v210;
  *v210 = v122;
  *(_QWORD *)(v123 + 8) = 0x4024000000000000;
  *(_BYTE *)(v123 + 16) = 0;
  v190 = (char *)sub_100047110(&qword_10082A310);
  v229 = *(_QWORD *)v106;
  v124 = v229;
  KeyPath = swift_getKeyPath(L" \"");
  v126 = v219;
  sub_10004F8C8(v106, v219, type metadata accessor for MetricFamilyRoomView);
  v127 = *(unsigned __int8 *)(v208 + 80);
  v128 = (v127 + 16) & ~v127;
  v209 += v128;
  v208 = v127 | 7;
  v129 = swift_allocObject(&unk_100791CA8, v209, v127 | 7);
  sub_100047C88(v126, v129 + v128, type metadata accessor for MetricFamilyRoomView);
  swift_bridgeObjectRetain(v124);
  v130 = sub_100047110(&qword_10082A318);
  v131 = type metadata accessor for MetricFamilyChartView(0);
  v132 = sub_100028384(&qword_10082A320, &qword_10082A318, (uint64_t)&protocol conformance descriptor for [A]);
  v194 = (char *)sub_100261A38();
  v199 = v130;
  v198 = v131;
  v197 = (char *)v132;
  ForEach<>.init(_:id:content:)(&v229, KeyPath, sub_100261A34, v129, v130, v131, v132, &protocol witness table for String, v194);
  sub_100045AD4(v123, v225, &qword_10082A2E0);
  v133 = *(_QWORD *)(*(_QWORD *)(v106 + 8) + 16);
  v134 = v106;
  v135 = v211;
  sub_10004F8C8(v106, v211, type metadata accessor for MetricFamilyRoomView);
  if (!v133)
  {
    sub_100011F54(v135, type metadata accessor for MetricFamilyRoomView);
    goto LABEL_7;
  }
  v136 = *(_QWORD *)(*(_QWORD *)v135 + 16);
  v137 = sub_100011F54(v135, type metadata accessor for MetricFamilyRoomView);
  if (!v136)
  {
LABEL_7:
    v154 = 1;
    v153 = v218;
    v151 = v188;
    goto LABEL_8;
  }
  v138 = v185;
  v139 = Divider.init()(v137);
  v140 = static Edge.Set.vertical.getter(v139);
  v141 = EdgeInsets.init(_all:)(15.0);
  v143 = v142;
  v145 = v144;
  v147 = v146;
  v148 = v186;
  v149 = (uint64_t)v184;
  v150 = v187;
  (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v184, v138, v187);
  v151 = v188;
  v152 = v149 + *(int *)(v188 + 36);
  *(_BYTE *)v152 = v140;
  *(double *)(v152 + 8) = v141;
  *(_QWORD *)(v152 + 16) = v143;
  *(_QWORD *)(v152 + 24) = v145;
  *(_QWORD *)(v152 + 32) = v147;
  *(_BYTE *)(v152 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v148 + 8))(v138, v150);
  v153 = v218;
  sub_100045AD4(v149, v218, &qword_100821170);
  v154 = 0;
LABEL_8:
  v155 = v191;
  v156 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v215 + 56))(v153, v154, 1, v151);
  v157 = v207 & 1;
  v215 = (v155 - 3) < 0xFFFFFFFE;
  v162 = static HorizontalAlignment.center.getter(v156, v158, v159, v160, v161);
  v163 = (uint64_t)v216;
  *v216 = v162;
  *(_QWORD *)(v163 + 8) = 0x4024000000000000;
  *(_BYTE *)(v163 + 16) = 0;
  v229 = *(_QWORD *)(v134 + 8);
  v164 = v229;
  v165 = swift_getKeyPath(L" \"");
  v166 = v219;
  sub_10004F8C8(v134, v219, type metadata accessor for MetricFamilyRoomView);
  v167 = swift_allocObject(&unk_100791CD0, v209, v208);
  sub_100047C88(v166, v167 + v128, type metadata accessor for MetricFamilyRoomView);
  swift_bridgeObjectRetain(v164);
  ForEach<>.init(_:id:content:)(&v229, v165, sub_100261A34, v167, v199, v198, v197, &protocol witness table for String, v194);
  v168 = v157;
  LODWORD(v211) = v157;
  LOBYTE(v229) = v157;
  v169 = v224;
  sub_100021CC0(v223, v224, &qword_10082A2E8);
  v170 = v221;
  sub_100021CC0(v225, v221, &qword_10082A2E0);
  v171 = v222;
  sub_100021CC0(v153, v222, &qword_100821178);
  sub_100021CC0(v163, v220, &qword_10082A2E0);
  v172 = v217;
  v173 = v213;
  v174 = v212;
  *v217 = v213;
  v172[1] = v174;
  *((_BYTE *)v172 + 16) = v168;
  v175 = v214;
  v172[3] = v214;
  v176 = (int *)sub_100047110(&qword_10082A330);
  sub_100021CC0(v169, (uint64_t)v172 + v176[12], &qword_10082A2E8);
  v177 = (char *)v172 + v176[16];
  v178 = v206;
  v179 = v205;
  *(_QWORD *)v177 = v206;
  *((_QWORD *)v177 + 1) = v179;
  *((_QWORD *)v177 + 2) = v196;
  v177[24] = v195;
  *((_QWORD *)v177 + 4) = v215;
  v177[40] = 1;
  *((_QWORD *)v177 + 6) = v193;
  v177[56] = v200;
  v180 = v203;
  *((_QWORD *)v177 + 8) = v204;
  *((_QWORD *)v177 + 9) = v180;
  v181 = v201;
  *((_QWORD *)v177 + 10) = v202;
  *((_QWORD *)v177 + 11) = v181;
  v177[96] = 0;
  sub_100021CC0(v170, (uint64_t)v172 + v176[20], &qword_10082A2E0);
  sub_100021CC0(v171, (uint64_t)v172 + v176[24], &qword_100821178);
  v182 = v220;
  sub_100021CC0(v220, (uint64_t)v172 + v176[28], &qword_10082A2E0);
  LOBYTE(v170) = v211;
  sub_1000E439C(v173, v174, v211);
  swift_retain(v178);
  swift_retain(v179);
  swift_bridgeObjectRetain(v175);
  sub_1000E439C(v173, v174, v170);
  swift_bridgeObjectRetain(v175);
  swift_retain(v178);
  swift_retain(v179);
  sub_10001BE90(v163, &qword_10082A2E0);
  sub_10001BE90(v218, &qword_100821178);
  sub_10001BE90(v225, &qword_10082A2E0);
  swift_release(v179);
  swift_release(v178);
  sub_10001BE90(v223, &qword_10082A2E8);
  sub_1000E4458(v173, v174, v170);
  swift_bridgeObjectRelease(v175);
  sub_10001BE90(v182, &qword_10082A2E0);
  sub_10001BE90(v222, &qword_100821178);
  sub_10001BE90(v221, &qword_10082A2E0);
  swift_release(v179);
  swift_release(v178);
  sub_10001BE90(v224, &qword_10082A2E8);
  sub_1000E4458(v173, v174, v229);
  swift_bridgeObjectRelease(v175);
}

void sub_1002600B0(uint64_t a1@<X0>, char *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v8 = a3 & 1;
  v9 = sub_100047110(&qword_10081F218);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t *)(v4 + *(int *)(type metadata accessor for MetricFamilyRoomView(0) + 72));
  v14 = *v12;
  v13 = v12[1];
  v35 = v14;
  v36 = v13;
  v15 = sub_100047110(&qword_10082A2C0);
  State.wrappedValue.getter(&v37, v15);
  v16 = v37;
  if (*(_QWORD *)(v37 + 16) && (v17 = sub_100439058((Swift::UInt)a2, v8), (v18 & 1) != 0))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRelease(v16);
    if (*(_QWORD *)(v19 + 16) && (v20 = sub_100049DE0(a1), (v21 & 1) != 0))
    {
      v22 = *(_QWORD *)(v19 + 56);
      v33 = v20;
      v34 = v22;
      v23 = type metadata accessor for MetricDetailViewModel(0);
      v24 = *(_QWORD *)(v23 - 8);
      sub_10004F8C8(v34 + *(_QWORD *)(v24 + 72) * v33, (uint64_t)v11, type metadata accessor for MetricDetailViewModel);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v11, 0, 1, v23);
    }
    else
    {
      v23 = type metadata accessor for MetricDetailViewModel(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v11, 1, 1, v23);
    }
    swift_bridgeObjectRelease(v19);
    type metadata accessor for MetricDetailViewModel(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v11, 1, v23) != 1)
    {
      sub_100047C88((uint64_t)v11, a4, type metadata accessor for MetricDetailViewModel);
      return;
    }
    sub_10001BE90((uint64_t)v11, &qword_10081F218);
  }
  else
  {
    swift_bridgeObjectRelease(v16);
  }
  sub_1004437C4(a1);
  v26 = v25;
  v27 = (void *)objc_opt_self(HKQuantity);
  v28 = objc_msgSend(v27, "quantityWithUnit:doubleValue:", v26, 0.0);
  v29 = objc_msgSend(v27, "quantityWithUnit:doubleValue:", v26, 0.0);
  v30 = type metadata accessor for MetricDetailViewModel(0);
  v31 = sub_10041E110(a2, v8, a4 + *(int *)(v30 + 36));
  Date.init()(v31);

  *(_QWORD *)a4 = v28;
  *(_QWORD *)(a4 + 8) = v29;
  *(_QWORD *)(a4 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a4 + 24) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a4 + 32) = a2;
  *(_BYTE *)(a4 + 40) = v8 != 0;
  *(_BYTE *)(a4 + *(int *)(v30 + 40)) = 0;
}

id sub_100260348@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int *v9;
  char *v10;
  char v11;
  void *v12;
  _BYTE *v13;
  uint64_t v15;
  char v16;
  char *v17;
  char v18;

  v16 = *(_BYTE *)(a2 + 16);
  v5 = *a1;
  v15 = type metadata accessor for MetricFamilyRoomView(0);
  v6 = sub_100047110(&qword_10081F1C0);
  State.wrappedValue.getter(&v17, v6);
  v7 = v17;
  v8 = v18;
  v9 = (int *)type metadata accessor for MetricFamilyChartView(0);
  sub_1002600B0(v5, v7, v8, (uint64_t)&a3[v9[6]]);
  State.wrappedValue.getter(&v17, v6);
  v10 = v17;
  v11 = v18;
  sub_10004F8C8(a2 + *(int *)(v15 + 28), (uint64_t)&a3[v9[8]], type metadata accessor for MetricFormattingHelper);
  v12 = *(void **)(a2 + *(int *)(v15 + 56));
  *a3 = v5;
  a3[1] = v16;
  v13 = &a3[v9[7]];
  *(_QWORD *)v13 = v10;
  v13[8] = v11;
  *(_QWORD *)&a3[v9[9]] = v12;
  return v12;
}

uint64_t sub_100260484()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  char v4;

  type metadata accessor for MetricFamilyRoomView(0);
  v0 = sub_100047110(&qword_10081F1C0);
  State.wrappedValue.getter(&v3, v0);
  if ((v4 & 1) != 0)
  {
    State.wrappedValue.getter(&v3, v0);
    return v3;
  }
  else
  {
    v2 = sub_100047110(&qword_10081F1D8);
    State.wrappedValue.getter(&v3, v2);
    return sub_100421550(v3);
  }
}

double sub_100260568(char *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double result;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _BOOL4 v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  char *v63;
  uint64_t v64;
  _QWORD v65[5];
  uint64_t v66;

  v3 = (uint64_t)v2;
  v56 = a1;
  v5 = type metadata accessor for MetricFamilyRoomView(0);
  v55 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v53 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v6;
  v7 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MetricDetailViewModel(0);
  __chkstk_darwin(v10);
  v63 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2[1];
  v66 = *v2;
  swift_bridgeObjectRetain(v66);
  swift_bridgeObjectRetain(v12);
  sub_10013CAB8(v13);
  v61 = *(_QWORD *)(v66 + 16);
  if (v61)
  {
    v62 = a2 & 1;
    v59 = *(int *)(v5 + 32);
    swift_bridgeObjectRetain(v66);
    v15 = 0;
    v64 = 0;
    v58 = (char *)&type metadata for () + 8;
    v16 = v56;
    v17 = (uint64_t)v63;
    v51 = v2;
    v52 = v9;
    v50 = v10;
    v60 = v14;
    do
    {
      v20 = v62 != 0;
      v21 = *(_BYTE *)(v14 + v15 + 32);
      v22 = sub_100347FA8(v21, v16, v62, v17);
      v23 = static Animation.easeInOut.getter(v22);
      __chkstk_darwin(v23);
      *(&v50 - 4) = v3;
      *(&v50 - 3) = (uint64_t)v16;
      *((_BYTE *)&v50 - 16) = v20;
      *((_BYTE *)&v50 - 15) = v21;
      *(&v50 - 1) = v17;
      v24 = v64;
      withAnimation<A>(_:_:)(v25, sub_1002616E0, &v50 - 6, v58);
      v64 = v24;
      v17 = (uint64_t)v63;
      swift_release(v23);
      if ((*(_BYTE *)(v17 + *(int *)(v10 + 40)) & 1) == 0)
      {
        v57 = v62 != 0;
        v26 = type metadata accessor for TaskPriority(0);
        v27 = *(_QWORD *)(v26 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v9, 1, 1, v26);
        v28 = v53;
        sub_10004F8C8(v3, v53, type metadata accessor for MetricFamilyRoomView);
        v29 = type metadata accessor for MainActor(0);
        v30 = static MainActor.shared.getter(v29);
        v31 = *(unsigned __int8 *)(v55 + 80);
        v32 = (v31 + 32) & ~v31;
        v33 = v32 + v54;
        v34 = (v32 + v54) & 0xFFFFFFFFFFFFFFF8;
        v35 = swift_allocObject(&unk_100791C58, v34 + 17, v31 | 7);
        v36 = v34 + v35;
        *(_QWORD *)(v35 + 16) = v30;
        *(_QWORD *)(v35 + 24) = &protocol witness table for MainActor;
        v37 = v35 + v32;
        v16 = v56;
        v38 = v28;
        v9 = v52;
        sub_100047C88(v38, v37, type metadata accessor for MetricFamilyRoomView);
        *(_BYTE *)(v35 + v33) = v21;
        *(_QWORD *)(v36 + 8) = v16;
        *(_BYTE *)(v36 + 16) = v57;
        v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v9, 1, v26);
        if ((_DWORD)v39 == 1)
        {
          sub_10001BE90((uint64_t)v9, &qword_10081E650);
          v40 = 0;
        }
        else
        {
          v41 = TaskPriority.rawValue.getter(v39);
          (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v26);
          v40 = v41;
        }
        v17 = (uint64_t)v63;
        v42 = *(_QWORD *)(v35 + 16);
        if (v42)
        {
          v43 = *(_QWORD *)(v35 + 24);
          ObjectType = swift_getObjectType(*(_QWORD *)(v35 + 16));
          swift_unknownObjectRetain(v42);
          v45 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v43);
          v47 = v46;
          swift_unknownObjectRelease(v42);
        }
        else
        {
          v45 = 0;
          v47 = 0;
        }
        v10 = v50;
        v3 = (uint64_t)v51;
        v48 = swift_allocObject(&unk_100791C80, 32, 7);
        *(_QWORD *)(v48 + 16) = &unk_10082A2C8;
        *(_QWORD *)(v48 + 24) = v35;
        if (v47 | v45)
        {
          v65[0] = 0;
          v65[1] = 0;
          v18 = v65;
          v65[2] = v45;
          v65[3] = v47;
        }
        else
        {
          v18 = 0;
        }
        v19 = swift_task_create(v40 | 0x1C00, v18, (char *)&type metadata for () + 8, &unk_10082A2D0, v48);
        swift_release(v19);
      }
      ++v15;
      sub_100011F54(v17, type metadata accessor for MetricDetailViewModel);
      v14 = v60;
    }
    while (v61 != v15);
    swift_bridgeObjectRelease_n(v60, 2);
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v66).n128_u64[0];
  }
  return result;
}

uint64_t sub_100260998(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100260A04, v3, v4);
}

uint64_t sub_100260A04()
{
  uint64_t v0;
  char *v1;
  char v2;
  double v3;

  swift_release(*(_QWORD *)(v0 + 24));
  v1 = (char *)sub_100260484();
  v3 = sub_100260568(v1, v2 & 1);
  return (*(uint64_t (**)(double))(v0 + 8))(v3);
}

void sub_100260A40(int a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  Swift::String v48;
  void *object;
  Swift::String v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  unsigned int v63;
  _QWORD v64[4];
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;

  v2 = (uint64_t)v1;
  v4 = type metadata accessor for MetricFamilyRoomView(0);
  v60 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v58 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v5;
  v6 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1[1];
  *(_QWORD *)&v65 = *v1;
  swift_bridgeObjectRetain(v65);
  swift_bridgeObjectRetain(v9);
  sub_10013CAB8(v10);
  v11 = v65;
  v12 = *(_QWORD *)(v65 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease(v65);
    return;
  }
  v54 = v8;
  swift_bridgeObjectRetain(v65);
  v13 = 0;
  v51 = (char *)&type metadata for () + 8;
  v52 = v12;
  v56 = a1;
  v55 = v4;
  v53 = v11;
  v57 = v2;
  while (1)
  {
    v16 = *(unsigned __int8 *)(v11 + v13 + 32);
    if (v16 - 4 < 0x22)
    {
      if (a1 == 1)
        goto LABEL_8;
      goto LABEL_5;
    }
    if (v16 >= 4)
      break;
    if (!(_BYTE)a1)
      goto LABEL_8;
LABEL_5:
    if (v12 == ++v13)
    {
      swift_bridgeObjectRelease_n(v11, 2);
      return;
    }
  }
  if (a1 != 2)
    goto LABEL_5;
LABEL_8:
  v17 = v2 + *(int *)(v4 + 76);
  v18 = *(_QWORD *)v17;
  v19 = *(_BYTE *)(v17 + 8);
  v20 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)&v65 = *(_QWORD *)v17;
  BYTE8(v65) = v19;
  v66 = v20;
  v21 = sub_100047110(&qword_10081F1C0);
  State.wrappedValue.getter(&v67, v21);
  v63 = v16;
  if ((v68 & 1) != 0)
  {
    *(_QWORD *)&v65 = v18;
    BYTE8(v65) = v19;
    v66 = v20;
    State.wrappedValue.getter(&v67, v21);
    v61 = v67;
    v22 = v68;
    goto LABEL_12;
  }
  v65 = *(_OWORD *)(v2 + *(int *)(v4 + 80));
  v23 = sub_100047110(&qword_10081F1D8);
  State.wrappedValue.getter(&v67, v23);
  v24 = v67;
  v61 = v67;
  if ((unint64_t)v67 < 3)
  {
    v22 = 1;
LABEL_12:
    v62 = v22;
LABEL_18:
    v25 = type metadata accessor for TaskPriority(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v54, 1, 1, v25);
    v28 = v58;
    sub_10004F8C8(v2, v58, type metadata accessor for MetricFamilyRoomView);
    v29 = type metadata accessor for MainActor(0);
    v30 = static MainActor.shared.getter(v29);
    v31 = *(unsigned __int8 *)(v60 + 80);
    v32 = (v31 + 32) & ~v31;
    v33 = v32 + v59;
    v34 = (v32 + v59) & 0xFFFFFFFFFFFFFFF8;
    v35 = swift_allocObject(&unk_100791C08, v34 + 17, v31 | 7);
    v36 = v34 + v35;
    *(_QWORD *)(v35 + 16) = v30;
    *(_QWORD *)(v35 + 24) = &protocol witness table for MainActor;
    sub_100047C88(v28, v35 + v32, type metadata accessor for MetricFamilyRoomView);
    *(_BYTE *)(v35 + v33) = v63;
    *(_QWORD *)(v36 + 8) = v61;
    *(_BYTE *)(v36 + 16) = v62;
    v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v25);
    if ((_DWORD)v37 == 1)
    {
      sub_10001BE90(v27, &qword_10081E650);
      v38 = 0;
    }
    else
    {
      v39 = TaskPriority.rawValue.getter(v37);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v25);
      v38 = v39;
    }
    v40 = *(_QWORD *)(v35 + 16);
    v2 = v57;
    LOBYTE(a1) = v56;
    v4 = v55;
    if (v40)
    {
      v41 = *(_QWORD *)(v35 + 24);
      ObjectType = swift_getObjectType(*(_QWORD *)(v35 + 16));
      swift_unknownObjectRetain(v40);
      v43 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v41);
      v45 = v44;
      swift_unknownObjectRelease(v40);
    }
    else
    {
      v43 = 0;
      v45 = 0;
    }
    v46 = swift_allocObject(&unk_100791C30, 32, 7);
    *(_QWORD *)(v46 + 16) = &unk_10082A2B8;
    *(_QWORD *)(v46 + 24) = v35;
    if (v45 | v43)
    {
      v64[0] = 0;
      v64[1] = 0;
      v14 = v64;
      v64[2] = v43;
      v64[3] = v45;
    }
    else
    {
      v14 = 0;
    }
    v12 = v52;
    v11 = v53;
    v15 = swift_task_create(v38 | 0x1C00, v14, v51, &unk_1008282A0, v46);
    swift_release(v15);
    goto LABEL_5;
  }
  if (v67 > 2)
  {
    v62 = 0;
    goto LABEL_18;
  }
  *(_QWORD *)&v65 = 0;
  *((_QWORD *)&v65 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(77);
  v47._countAndFlagsBits = 0xD000000000000038;
  v47._object = (void *)0x8000000100693120;
  String.append(_:)(v47);
  v67 = v24;
  v48._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v48._object;
  String.append(_:)(v48);
  swift_bridgeObjectRelease(object);
  v50._object = (void *)0x8000000100693160;
  v50._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v50);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v65, *((_QWORD *)&v65 + 1), "FitnessApp/MetricDataProviderTimeScale.swift", 44, 2, 28, 0);
  __break(1u);
}

uint64_t sub_100260F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v7 + 105) = a7;
  *(_BYTE *)(v7 + 104) = a5;
  *(_QWORD *)(v7 + 16) = a4;
  *(_QWORD *)(v7 + 24) = a6;
  v8 = type metadata accessor for MetricDetailViewModel(0);
  *(_QWORD *)(v7 + 32) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 40) = v9;
  *(_QWORD *)(v7 + 48) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(_QWORD *)(*(_QWORD *)(sub_100047110(&qword_10081F218) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 56) = swift_task_alloc(v10);
  *(_QWORD *)(v7 + 64) = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 72) = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  *(_QWORD *)(v7 + 80) = v12;
  *(_QWORD *)(v7 + 88) = v13;
  return swift_task_switch(sub_100260FF8, v12, v13);
}

uint64_t sub_100260FF8()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;

  v1 = *(_BYTE *)(v0 + 105);
  type metadata accessor for MetricFamilyRoomView(0);
  v2 = (_QWORD *)swift_task_alloc(dword_10082F2EC);
  *(_QWORD *)(v0 + 96) = v2;
  *v2 = v0;
  v2[1] = sub_100261068;
  return sub_100348B28(*(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 104), *(_QWORD *)(v0 + 24), v1 & 1);
}

uint64_t sub_100261068()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));
  return swift_task_switch(sub_1002610B4, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_1002610B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = (uint64_t *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 72));
  sub_100021CC0(v1, v3, &qword_10081F218);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10001BE90(*v2, &qword_10081F218);
    v2 = (uint64_t *)(v0 + 56);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 48);
    v7 = *(_BYTE *)(v0 + 105);
    v8 = *(_BYTE *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 16);
    v9 = *(_QWORD *)(v0 + 24);
    v11 = sub_100047C88(*(_QWORD *)(v0 + 56), v6, type metadata accessor for MetricDetailViewModel);
    v12 = static Animation.easeInOut.getter(v11);
    v13 = swift_task_alloc(48);
    *(_QWORD *)(v13 + 16) = v10;
    *(_QWORD *)(v13 + 24) = v9;
    *(_BYTE *)(v13 + 32) = v7 & 1;
    *(_BYTE *)(v13 + 33) = v8;
    *(_QWORD *)(v13 + 40) = v6;
    withAnimation<A>(_:_:)(v12, sub_1002616E0, v13, (char *)&type metadata for () + 8);
    swift_release(v12);
    swift_task_dealloc(v13);
    sub_100011F54(v6, type metadata accessor for MetricDetailViewModel);
  }
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 48);
  sub_10001BE90(*v2, &qword_10081F218);
  swift_task_dealloc(v15);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100261218(uint64_t a1, Swift::UInt a2, char a3, int a4, uint64_t a5)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;

  HIDWORD(v26) = a4;
  v8 = a3 & 1;
  v9 = sub_100047110(&qword_10081F218);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (unint64_t *)(a1 + *(int *)(type metadata accessor for MetricFamilyRoomView(0) + 72));
  v13 = *v12;
  v14 = v12[1];
  v29 = *v12;
  v30 = v14;
  v15 = sub_100047110(&qword_10082A2C0);
  State.wrappedValue.getter(&v31, v15);
  v16 = v31;
  if (*(_QWORD *)(v31 + 16) && (v17 = sub_100439058(a2, v8), (v18 & 1) != 0))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
    swift_bridgeObjectRetain(v19);
  }
  else
  {
    v19 = sub_10043DD6C((uint64_t)_swiftEmptyArrayStorage);
  }
  swift_bridgeObjectRelease(v16);
  v31 = v19;
  sub_10004F8C8(a5, (uint64_t)v11, type metadata accessor for MetricDetailViewModel);
  v20 = type metadata accessor for MetricDetailViewModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 0, 1, v20);
  sub_1004C5E00((uint64_t)v11, HIDWORD(v26));
  v21 = v31;
  v29 = v13;
  v30 = v14;
  swift_retain(v14);
  swift_bridgeObjectRetain(v13);
  State.wrappedValue.getter(&v28, v15);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v28);
  v23 = v28;
  v28 = 0x8000000000000000;
  v29 = v23;
  sub_1003FF368(v21, a2, v8, isUniquelyReferenced_nonNull_native);
  v24 = v28;
  v28 = v29;
  swift_bridgeObjectRelease(v24);
  v29 = v13;
  v30 = v14;
  v27 = v28;
  State.wrappedValue.setter(&v27, v15);
  swift_release(v14);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  return result;
}

uint64_t sub_1002613FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10025EF64(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100261404()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082A270;
  if (!qword_10082A270)
  {
    v1 = sub_100007050(&qword_10082A268);
    sub_100028384(&qword_10082A278, &qword_10082A280, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082A270);
  }
  return result;
}

double sub_10026148C()
{
  char *v0;
  char v1;

  type metadata accessor for MetricFamilyRoomView(0);
  v0 = (char *)sub_100260484();
  return sub_100260568(v0, v1 & 1);
}

unint64_t sub_1002614CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082A288;
  if (!qword_10082A288)
  {
    v1 = sub_100007050(&qword_10082A250);
    sub_100028384(&qword_10082A290, &qword_10082A248, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082A288);
  }
  return result;
}

uint64_t sub_100261554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MetricFamilyRoomView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_10082A29C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1000EA380;
  return sub_100260998(v3);
}

void sub_1002615BC(unsigned __int8 *a1)
{
  type metadata accessor for MetricFamilyRoomView(0);
  sub_100260A40(*a1);
}

uint64_t sub_100261600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for MetricFamilyRoomView(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + v1;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = *(_QWORD *)(v7 + 8);
  v12 = *(_BYTE *)(v7 + 16);
  v13 = *(_BYTE *)(v1 + v6);
  v14 = (_QWORD *)swift_task_alloc(dword_10082A2B4);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1000EA380;
  return sub_100260F28(a1, v8, v9, v10, v13, v11, v12);
}

uint64_t sub_1002616BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1002616E0()
{
  return sub_1002616F4();
}

double sub_1002616F4()
{
  uint64_t v0;

  return sub_100261218(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(unsigned __int8 *)(v0 + 33), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10026171C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = (int *)type metadata accessor for MetricFamilyRoomView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = ((v4 + *(_QWORD *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 17;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  v8 = (id *)(v0 + v4 + v1[7]);

  v9 = type metadata accessor for MetricFormattingHelper(0);
  v10 = (char *)v8 + *(int *)(v9 + 20);
  v11 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);

  swift_release(*(_QWORD *)(v7 + v1[11]));
  v12 = (_QWORD *)(v7 + v1[18]);
  swift_bridgeObjectRelease(*v12);
  swift_release(v12[1]);
  swift_release(*(_QWORD *)(v7 + v1[19] + 16));
  swift_release(*(_QWORD *)(v7 + v1[20] + 8));
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10026187C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for MetricFamilyRoomView(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + v1;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = *(_QWORD *)(v7 + 8);
  v12 = *(_BYTE *)(v7 + 16);
  v13 = *(_BYTE *)(v1 + v6);
  v14 = (_QWORD *)swift_task_alloc(dword_10082A2B4);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1000DA0E4;
  return sub_100260F28(a1, v8, v9, v10, v13, v11, v12);
}

unint64_t sub_100261938()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082A2F8;
  if (!qword_10082A2F8)
  {
    v1 = sub_100007050(&qword_10082A2F0);
    sub_1002619A4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082A2F8);
  }
  return result;
}

unint64_t sub_1002619A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082A300;
  if (!qword_10082A300)
  {
    v1 = sub_100007050(&qword_10082A308);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082A300);
  }
  return result;
}

uint64_t sub_100261A08@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = sub_1005F0860(*a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_100261A38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082A328;
  if (!qword_10082A328)
  {
    v1 = type metadata accessor for MetricFamilyChartView(255);
    result = swift_getWitnessTable(&unk_100632800, v1);
    atomic_store(result, (unint64_t *)&qword_10082A328);
  }
  return result;
}

uint64_t sub_100261A84()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = (int *)type metadata accessor for MetricFamilyRoomView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 8));
  v8 = (id *)(v7 + v1[7]);

  v9 = type metadata accessor for MetricFormattingHelper(0);
  v10 = (char *)v8 + *(int *)(v9 + 20);
  v11 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);

  swift_release(*(_QWORD *)(v7 + v1[11]));
  v12 = (_QWORD *)(v7 + v1[18]);
  swift_bridgeObjectRelease(*v12);
  swift_release(v12[1]);
  swift_release(*(_QWORD *)(v7 + v1[19] + 16));
  swift_release(*(_QWORD *)(v7 + v1[20] + 8));
  return swift_deallocObject(v0, v5, v6);
}

id sub_100261BD4@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MetricFamilyRoomView(0) - 8) + 80);
  return sub_100260348(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_100261C24()
{
  return sub_100028384(&qword_10082A338, &qword_10082A2A8, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
}

id sub_100261C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  NSString v6;
  id v7;
  id v8;
  id v9;
  id v10;
  objc_super v12;

  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp43RecentWorkoutAppRecommendationTableViewCell_workoutAppRecommendationCollectionViewController] = 0;
  if (a3)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v6 = 0;
  }
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for RecentWorkoutAppRecommendationTableViewCell();
  v7 = objc_msgSendSuper2(&v12, "initWithStyle:reuseIdentifier:", a1, v6);

  v8 = v7;
  v9 = objc_msgSend(v8, "contentView");
  v10 = sub_100032490();
  objc_msgSend(v9, "setBackgroundColor:", v10);

  return v8;
}

id sub_100261DEC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecentWorkoutAppRecommendationTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RecentWorkoutAppRecommendationTableViewCell()
{
  return objc_opt_self(_TtC10FitnessApp43RecentWorkoutAppRecommendationTableViewCell);
}

id sub_1002620D0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  id result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  objc_super v23;
  _QWORD *v24;

  v2 = v1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    v20 = v2;
    v4 = _CocoaArrayWrapper.endIndex.getter(v19);
    if (!v4)
      goto LABEL_15;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = v1;
    if (!v4)
    {
LABEL_15:
      swift_bridgeObjectRelease(a1);
      v21 = type metadata accessor for DownhillRunsStats(0);
      swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
      *(_QWORD *)&v2[OBJC_IVAR___CHWorkoutDownhillRunsStats_downhillRunsStats] = DownhillRunsStats.init(downhillRuns:)(v22);

      v23.receiver = v2;
      v23.super_class = (Class)type metadata accessor for DownhillRunsStatsBridge();
      return objc_msgSendSuper2(&v23, "init");
    }
  }
  v24 = _swiftEmptyArrayStorage;
  result = (id)specialized ContiguousArray.reserveCapacity(_:)(v4);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v7 = 0;
      do
      {
        v8 = v7 + 1;
        v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
        v10 = *(id *)(v9 + OBJC_IVAR___CHWorkoutDownhillRun_downhillRun);
        v11 = swift_unknownObjectRelease(v9);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v12 = v24[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
        v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
        specialized ContiguousArray._endMutation()(v13);
        v7 = v8;
      }
      while (v4 != v8);
    }
    else
    {
      v14 = (uint64_t *)(a1 + 32);
      do
      {
        v15 = *v14++;
        v16 = *(id *)(v15 + OBJC_IVAR___CHWorkoutDownhillRun_downhillRun);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
        v17 = v24[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
        v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v16);
        specialized ContiguousArray._endMutation()(v18);
        --v4;
      }
      while (v4);
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

id sub_100262314()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownhillRunsStatsBridge();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DownhillRunsStatsBridge()
{
  return objc_opt_self(CHWorkoutDownhillRunsStats);
}

uint64_t destroy for TrendsSplashScreen(_QWORD *a1)
{
  if (a1[3])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 5);
}

uint64_t initializeWithCopy for TrendsSplashScreen(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for TrendsSplashScreen(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)a1);
    goto LABEL_7;
  }
  sub_1000F1A58((_QWORD *)a1, a2);
LABEL_8:
  sub_1000F1A58((_QWORD *)(a1 + 40), (_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
  return a1;
}

uint64_t assignWithTake for TrendsSplashScreen(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24))
    _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrendsSplashScreen(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrendsSplashScreen(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendsSplashScreen()
{
  return &type metadata for TrendsSplashScreen;
}

uint64_t sub_1002625D4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B1410, 1);
}

void sub_1002625E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, __n128);
  __n128 v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char v76[16];
  uint64_t v77;
  _OWORD v78[5];
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;

  v65 = a1;
  v75 = sub_100047110(&qword_100820FE0);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v73 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v72 = (char *)&v58 - v6;
  v64 = type metadata accessor for Font.PrivateDesign(0);
  v63 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v62 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for Font.TextStyle(0);
  v60 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v59 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 80);
  v11 = static Alignment.center.getter(v10);
  _FrameLayout.init(width:height:alignment:)(&v80, 0, 1, 0x4060400000000000, 0, v11, v12);
  v71 = v80;
  v70 = v81;
  v69 = v82;
  v68 = v83;
  v67 = v84;
  v66 = v85;
  v13 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000023, 0x800000010068B860);
  v14 = Text.init(_:tableName:bundle:comment:)(v13);
  v16 = v15;
  v18 = v17;
  v20 = v19 & 1;
  v21 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v22 = Color.init(uiColor:)(v21);
  *(_QWORD *)&v78[0] = v22;
  v23 = Text.foregroundStyle<A>(_:)(v78, v14, v16, v20, v18, &type metadata for Color, &protocol witness table for Color);
  v25 = v24;
  v27 = v26;
  v29 = v28 & 1;
  sub_1000E4458(v14, v16, v20);
  swift_release(v22);
  v30 = swift_bridgeObjectRelease(v18);
  v31 = v60;
  v32 = v59;
  v33 = v61;
  v34 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v60 + 104))(v59, enum case for Font.TextStyle.body(_:), v61, v30);
  v35 = v62;
  static Font.PrivateDesign.compactRounded.getter(v34);
  v36 = v35;
  v37 = static Font.system(_:design:weight:)(v32, v35, 0, 1);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v36, v64);
  v38.n128_f64[0] = (*(double (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  v39 = Text.font(_:)(v37, v23, v25, v29, v27, v38);
  v41 = v40;
  LOBYTE(v32) = v42;
  v44 = v43;
  swift_release(v37);
  LOBYTE(v32) = v32 & 1;
  sub_1000E4458(v23, v25, v29);
  swift_bridgeObjectRelease(v27);
  v45 = v65;
  sub_100262F10(v65, (uint64_t)v78);
  v46 = swift_allocObject(&unk_100791DB8, 104, 7);
  v47 = v78[3];
  *(_OWORD *)(v46 + 48) = v78[2];
  *(_OWORD *)(v46 + 64) = v47;
  *(_OWORD *)(v46 + 80) = v78[4];
  *(_QWORD *)(v46 + 96) = v79;
  v48 = v78[1];
  *(_OWORD *)(v46 + 16) = v78[0];
  *(_OWORD *)(v46 + 32) = v48;
  v77 = v45;
  v49 = v72;
  Button.init(action:label:)(sub_100262F78, v46, sub_100262F80, v76, &type metadata for Text, &protocol witness table for Text);
  v50 = v74;
  v51 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  v52 = v73;
  v53 = v75;
  v51(v73, v49, v75);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v71;
  *(_BYTE *)(a2 + 16) = v70;
  *(_QWORD *)(a2 + 24) = v69;
  *(_BYTE *)(a2 + 32) = v68;
  v54 = v66;
  *(_QWORD *)(a2 + 40) = v67;
  *(_QWORD *)(a2 + 48) = v54;
  *(_QWORD *)(a2 + 56) = v39;
  *(_QWORD *)(a2 + 64) = v41;
  *(_BYTE *)(a2 + 72) = (_BYTE)v32;
  *(_QWORD *)(a2 + 80) = v44;
  v55 = sub_100047110(&qword_10082A3A8);
  v51((char *)(a2 + *(int *)(v55 + 64)), v52, v53);
  sub_1000E439C(v39, v41, (char)v32);
  v56 = *(void (**)(char *, uint64_t, __n128))(v50 + 8);
  v57 = swift_bridgeObjectRetain(v44);
  v56(v49, v53, v57);
  ((void (*)(char *, uint64_t))v56)(v52, v53);
  sub_1000E4458(v39, v41, (char)v32);
  swift_bridgeObjectRelease(v44);
}

uint64_t sub_100262AE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD v16[4];
  _QWORD v17[3];
  uint64_t v18;

  v2 = type metadata accessor for TrendsActionContext(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TrendListMetric(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &v4[*(int *)(v2 + 20)];
  *(_QWORD *)v6 = _swiftEmptyArrayStorage;
  v6[8] = 0;
  sub_100262F88(a1, (uint64_t)v17);
  if (v18)
  {
    v7 = sub_100016804(v17, v18);
    v8 = (_QWORD *)(a1 + 40);
    v16[3] = v2;
    v9 = sub_10004C480(v16);
    sub_10026300C((uint64_t)v4, (uint64_t)v9);
    v10 = *v7;
    v12 = *(_QWORD *)(a1 + 64);
    v11 = *(_QWORD *)(a1 + 72);
    v13 = sub_100016804(v8, v12);
    sub_100561D50((uint64_t)v13, (uint64_t)v16, v10, v12, v11);
    sub_100262FD0((uint64_t)v4);
    sub_10001BE90((uint64_t)v16, (uint64_t *)&unk_100828420);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v17);
  }
  else
  {
    sub_100262FD0((uint64_t)v4);
    return sub_10001BE90((uint64_t)v17, &qword_10081F600);
  }
}

void sub_100262C2C(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;

  v2 = type metadata accessor for Font.PrivateDesign(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Font.TextStyle(0);
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001DLL, 0x80000001006929E0);
  v10 = Text.init(_:tableName:bundle:comment:)(v9);
  v12 = v11;
  v14 = v13;
  v47 = v15;
  v16 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "keyColors");
  v51 = v2;
  v52 = a1;
  v50 = v3;
  v46 = v5;
  if (!v16)
  {
    v20 = static Color.white.getter(v17);
    goto LABEL_5;
  }
  v18 = v16;
  v19 = objc_msgSend(v16, "nonGradientTextColor");

  if (v19)
  {
    v20 = Color.init(uiColor:)(v19);
LABEL_5:
    v21 = v20;
    v22 = v14 & 1;
    v53 = v20;
    v23 = v47;
    v24 = Text.foregroundStyle<A>(_:)(&v53, v10, v12, v14 & 1, v47, &type metadata for Color, &protocol witness table for Color);
    v26 = v25;
    v28 = v27;
    v30 = v29 & 1;
    sub_1000E4458(v10, v12, v22);
    swift_release(v21);
    v31 = swift_bridgeObjectRelease(v23);
    v33 = v48;
    v32 = v49;
    v34 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v48 + 104))(v8, enum case for Font.TextStyle.body(_:), v49, v31);
    v35 = v46;
    static Font.PrivateDesign.compactRounded.getter(v34);
    v36 = static Font.system(_:design:weight:)(v8, v35, 0, 1);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v51);
    v37.n128_f64[0] = (*(double (**)(char *, uint64_t))(v33 + 8))(v8, v32);
    v38 = Text.font(_:)(v36, v24, v26, v30, v28, v37);
    v40 = v39;
    LOBYTE(v32) = v41;
    v43 = v42;
    swift_release(v36);
    sub_1000E4458(v24, v26, v30);
    swift_bridgeObjectRelease(v28);
    v44 = v52;
    *v52 = v38;
    v44[1] = v40;
    *((_BYTE *)v44 + 16) = v32 & 1;
    v44[3] = v43;
    return;
  }
  __break(1u);
}

void sub_100262EC8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_100047110(&qword_10082A3A0);
  sub_1002625E4(v2, a2 + *(int *)(v4 + 44));
}

uint64_t sub_100262F10(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TrendsSplashScreen(a2, a1);
  return a2;
}

uint64_t sub_100262F44()
{
  _QWORD *v0;

  if (v0[5])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 2);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 7);
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100262F78()
{
  uint64_t v0;

  return sub_100262AE4(v0 + 16);
}

void sub_100262F80(uint64_t *a1@<X8>)
{
  sub_100262C2C(a1);
}

uint64_t sub_100262F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10081F600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100262FD0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TrendsActionContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10026300C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TrendsActionContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100263054()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082A3B0;
  if (!qword_10082A3B0)
  {
    v1 = sub_100007050(&qword_10082A3B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10082A3B0);
  }
  return result;
}

char *sub_1002630A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  objc_class *v7;
  id v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  NSString v17;
  id v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  objc_super v26;

  v6 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView;
  v7 = (objc_class *)type metadata accessor for StackDetailItemView();
  v8 = objc_allocWithZone(v7);
  v9 = v3;
  v10 = objc_msgSend(v8, "init");
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v6] = v10;
  v11 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView;
  v12 = objc_msgSend(objc_allocWithZone(v7), "init");
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v9[v11] = v12;
  v13 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView;
  v14 = objc_msgSend(objc_allocWithZone(v7), "init");
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v9[v13] = v14;
  v15 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView;
  v16 = objc_msgSend(objc_allocWithZone(v7), "init");
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v9[v15] = v16;

  if (a3)
  {
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v17 = 0;
  }
  v26.receiver = v9;
  v26.super_class = (Class)type metadata accessor for StackDetailSideBySideItemsCell();
  v18 = objc_msgSendSuper2(&v26, "initWithStyle:reuseIdentifier:", a1, v17);

  v19 = (char *)v18;
  v20 = objc_msgSend(v19, "contentView");
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView]);

  v21 = objc_msgSend(v19, "contentView");
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView]);

  v22 = objc_msgSend(v19, "contentView");
  objc_msgSend(v22, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView]);

  v23 = objc_msgSend(v19, "contentView");
  v24 = *(id *)&v19[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView];
  objc_msgSend(v23, "addSubview:", v24);

  return v19;
}

void sub_100263338(__int128 *a1)
{
  char *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  uint64_t v98;
  void *v99;
  Class isa;
  uint64_t v101[7];
  unsigned __int8 v102;
  uint64_t v103;

  sub_1002643FC(a1, v101);
  v2 = v102 >> 6;
  if ((v2 - 2) >= 2)
  {
    v102 &= 0x3Fu;
    if (!v2)
      sub_100264580(v101, (uint64_t)&v103);
    v64 = sub_100047110((uint64_t *)&unk_100828340);
    v63 = swift_allocObject(v64, 96, 7);
    *(_OWORD *)(v63 + 16) = xmmword_100624C80;
    v65 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView;
    v66 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView], "topAnchor");
    v67 = objc_msgSend(v1, "contentView");
    v68 = objc_msgSend(v67, "topAnchor");

    v69 = objc_msgSend(v66, "constraintEqualToAnchor:", v68);
    *(_QWORD *)(v63 + 32) = v69;
    v70 = objc_msgSend(*(id *)&v1[v65], "leadingAnchor");
    v71 = objc_msgSend(v1, "contentView");
    v72 = objc_msgSend(v71, "leadingAnchor");

    v73 = objc_msgSend(v70, "constraintEqualToAnchor:constant:", v72, 16.0);
    *(_QWORD *)(v63 + 40) = v73;
    v74 = objc_msgSend(*(id *)&v1[v65], "trailingAnchor");
    v75 = objc_msgSend(v1, "contentView");
    v76 = objc_msgSend(v75, "leadingAnchor");

    v77 = objc_msgSend(v74, "constraintEqualToAnchor:constant:", v76, sub_10005F150());
    *(_QWORD *)(v63 + 48) = v77;
    v78 = objc_msgSend(*(id *)&v1[v65], "bottomAnchor");
    v79 = objc_msgSend(v1, "contentView");
    v80 = objc_msgSend(v79, "bottomAnchor");

    v81 = objc_msgSend(v78, "constraintLessThanOrEqualToAnchor:constant:", v80, -27.0);
    *(_QWORD *)(v63 + 56) = v81;
    v82 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView;
    v83 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView], "topAnchor");
    v84 = objc_msgSend(*(id *)&v1[v65], "topAnchor");
    v85 = objc_msgSend(v83, "constraintEqualToAnchor:", v84);

    *(_QWORD *)(v63 + 64) = v85;
    v86 = objc_msgSend(*(id *)&v1[v82], "leadingAnchor");
    v87 = objc_msgSend(v1, "contentView");
    v88 = objc_msgSend(v87, "leadingAnchor");

    v89 = objc_msgSend(v86, "constraintEqualToAnchor:constant:", v88, sub_10005F150());
    *(_QWORD *)(v63 + 72) = v89;
    v90 = objc_msgSend(*(id *)&v1[v82], "trailingAnchor");
    v91 = objc_msgSend(v1, "contentView");
    v92 = objc_msgSend(v91, "trailingAnchor");

    v93 = objc_msgSend(v90, "constraintEqualToAnchor:constant:", v92, -16.0);
    *(_QWORD *)(v63 + 80) = v93;
    v94 = objc_msgSend(*(id *)&v1[v65], "bottomAnchor");
    v95 = objc_msgSend(v1, "contentView");
    v96 = objc_msgSend(v95, "bottomAnchor");

    v97 = objc_msgSend(v94, "constraintLessThanOrEqualToAnchor:constant:", v96, -27.0);
    *(_QWORD *)(v63 + 88) = v97;
    specialized Array._endMutation()(v98);
  }
  else
  {
    v102 &= 0x3Fu;
    v3 = sub_100047110((uint64_t *)&unk_100828340);
    v4 = swift_allocObject(v3, 144, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100626C20;
    v5 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView;
    v6 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView], "topAnchor");
    v7 = objc_msgSend(v1, "contentView");
    v8 = objc_msgSend(v7, "topAnchor");

    v9 = objc_msgSend(v6, "constraintEqualToAnchor:", v8);
    *(_QWORD *)(v4 + 32) = v9;
    v10 = objc_msgSend(*(id *)&v1[v5], "leadingAnchor");
    v11 = objc_msgSend(v1, "contentView");
    v12 = objc_msgSend(v11, "leadingAnchor");

    v13 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v12, 16.0);
    *(_QWORD *)(v4 + 40) = v13;
    v14 = objc_msgSend(*(id *)&v1[v5], "trailingAnchor");
    v15 = objc_msgSend(v1, "contentView");
    v16 = objc_msgSend(v15, "leadingAnchor");

    v17 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v16, sub_10005F150());
    *(_QWORD *)(v4 + 48) = v17;
    v18 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView;
    v19 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView], "topAnchor");
    v20 = objc_msgSend(*(id *)&v1[v5], "topAnchor");
    v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

    *(_QWORD *)(v4 + 56) = v21;
    v22 = objc_msgSend(*(id *)&v1[v18], "leadingAnchor");
    v23 = objc_msgSend(v1, "contentView");
    v24 = objc_msgSend(v23, "leadingAnchor");

    v25 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v24, sub_10005F150());
    *(_QWORD *)(v4 + 64) = v25;
    v26 = objc_msgSend(*(id *)&v1[v18], "trailingAnchor");
    v27 = objc_msgSend(v1, "contentView");
    v28 = objc_msgSend(v27, "trailingAnchor");

    v29 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v28, -16.0);
    *(_QWORD *)(v4 + 72) = v29;
    v30 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView;
    v31 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView], "topAnchor");
    v32 = objc_msgSend(*(id *)&v1[v5], "bottomAnchor");
    v33 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v32, 16.0);

    *(_QWORD *)(v4 + 80) = v33;
    v34 = objc_msgSend(*(id *)&v1[v30], "leadingAnchor");
    v35 = objc_msgSend(v1, "contentView");
    v36 = objc_msgSend(v35, "leadingAnchor");

    v37 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v36, 16.0);
    *(_QWORD *)(v4 + 88) = v37;
    v38 = objc_msgSend(*(id *)&v1[v30], "trailingAnchor");
    v39 = objc_msgSend(v1, "contentView");
    v40 = objc_msgSend(v39, "leadingAnchor");

    v41 = objc_msgSend(v38, "constraintEqualToAnchor:constant:", v40, sub_10005F150());
    *(_QWORD *)(v4 + 96) = v41;
    v42 = objc_msgSend(*(id *)&v1[v30], "bottomAnchor");
    v43 = objc_msgSend(v1, "contentView");
    v44 = objc_msgSend(v43, "bottomAnchor");

    v45 = objc_msgSend(v42, "constraintLessThanOrEqualToAnchor:constant:", v44, -27.0);
    *(_QWORD *)(v4 + 104) = v45;
    v46 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView;
    v47 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView], "topAnchor");
    v48 = objc_msgSend(*(id *)&v1[v30], "topAnchor");
    v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

    *(_QWORD *)(v4 + 112) = v49;
    v50 = objc_msgSend(*(id *)&v1[v46], "leadingAnchor");
    v51 = objc_msgSend(v1, "contentView");
    v52 = objc_msgSend(v51, "leadingAnchor");

    v53 = objc_msgSend(v50, "constraintEqualToAnchor:constant:", v52, sub_10005F150());
    *(_QWORD *)(v4 + 120) = v53;
    v54 = objc_msgSend(*(id *)&v1[v46], "trailingAnchor");
    v55 = objc_msgSend(v1, "contentView");
    v56 = objc_msgSend(v55, "trailingAnchor");

    v57 = objc_msgSend(v54, "constraintEqualToAnchor:constant:", v56, -16.0);
    *(_QWORD *)(v4 + 128) = v57;
    v58 = objc_msgSend(*(id *)&v1[v46], "bottomAnchor");
    v59 = objc_msgSend(v1, "contentView");
    v60 = objc_msgSend(v59, "bottomAnchor");

    v61 = objc_msgSend(v58, "constraintLessThanOrEqualToAnchor:constant:", v60, -27.0);
    *(_QWORD *)(v4 + 136) = v61;
    v103 = v4;
    specialized Array._endMutation()(v62);
    v63 = v103;
  }
  v99 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100039898();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v99, "activateConstraints:", isa, swift_bridgeObjectRelease(v63).n128_f64[0]);

}

void sub_100263ED8(uint64_t a1, uint64_t a2, __int128 *a3)
{
  _OWORD v3[3];

  sub_1002643FC(a3, v3);
  __asm { BR              X11 }
}

void sub_100263F2C()
{
  __int128 *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  char v4;

  v2 = *(id *)(v1 + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView);
  sub_10026441C((uint64_t)v2, v3, v4);

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView), "removeFromSuperview");
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView), "removeFromSuperview");
  sub_100263338(v0);
}

void sub_10026418C()
{
  char *v0;
  char *v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  char *v6;
  char *v7;
  void *v8;
  char *v9;
  char *v10;
  void *v11;
  char *v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for StackDetailSideBySideItemsCell();
  objc_msgSendSuper2(&v13, "prepareForReuse");
  v1 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView];
  v2 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_titleLabel];
  v3 = v1;
  objc_msgSend(v2, "setText:", 0);
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_subtitleLabel], "setAttributedText:", 0);

  v4 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView];
  v5 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_titleLabel];
  v6 = v4;
  objc_msgSend(v5, "setText:", 0);
  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_subtitleLabel], "setAttributedText:", 0);

  v7 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView];
  v8 = *(void **)&v7[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_titleLabel];
  v9 = v7;
  objc_msgSend(v8, "setText:", 0);
  objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_subtitleLabel], "setAttributedText:", 0);

  v10 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView];
  v11 = *(void **)&v10[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_titleLabel];
  v12 = v10;
  objc_msgSend(v11, "setText:", 0);
  objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC10FitnessApp19StackDetailItemView_subtitleLabel], "setAttributedText:", 0);

}

id sub_100264354()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StackDetailSideBySideItemsCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StackDetailSideBySideItemsCell()
{
  return objc_opt_self(_TtC10FitnessApp30StackDetailSideBySideItemsCell);
}

_OWORD *sub_1002643FC(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_OWORD *)((char *)a2 + 41) = *(__int128 *)((char *)a1 + 41);
  a2[1] = v3;
  a2[2] = v4;
  *a2 = v2;
  return a2;
}

void sub_10026441C(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

void sub_10026445C(uint64_t a1, uint64_t a2)
{
  sub_10031CD94(*(double *)&a2);
}

uint64_t sub_100264580(uint64_t *a1, uint64_t a2)
{
  initializeWithTake for ActivitySharingHighlight.HighlightType(a2, a1);
  return a2;
}

void sub_1002645BC()
{
  char *v0;
  uint64_t v1;
  objc_class *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;

  v1 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topLeadingDetailItemView;
  v2 = (objc_class *)type metadata accessor for StackDetailItemView();
  v3 = objc_msgSend(objc_allocWithZone(v2), "init");
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v1] = v3;
  v4 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_topTrailingDetailItemView;
  v5 = objc_msgSend(objc_allocWithZone(v2), "init");
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v4] = v5;
  v6 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomLeadingDetailItemView;
  v7 = objc_msgSend(objc_allocWithZone(v2), "init");
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v6] = v7;
  v8 = OBJC_IVAR____TtC10FitnessApp30StackDetailSideBySideItemsCell_bottomTrailingDetailItemView;
  v9 = objc_msgSend(objc_allocWithZone(v2), "init");
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v8] = v9;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/StackDetailSideBySideItemsCell.swift", 47, 2, 120, 0);
  __break(1u);
}

__n128 initializeWithCopy for StackDetailSideBySideItemsCell.Configuration(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for StackDetailSideBySideItemsCell.Configuration(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8) >> 2;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for StackDetailSideBySideItemsCell.Configuration(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 56) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 4 * -a2;
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 41) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1002647B0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 56) >> 6;
}

uint64_t sub_1002647BC(uint64_t result)
{
  *(_BYTE *)(result + 56) &= 0x3Fu;
  return result;
}

uint64_t sub_1002647CC(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(result + 24) & 3;
  v3 = *(_QWORD *)(result + 40) & 3;
  v4 = *(_BYTE *)(result + 56) & 3 | (a2 << 6);
  *(_QWORD *)(result + 8) &= 3uLL;
  *(_QWORD *)(result + 24) = v2;
  *(_QWORD *)(result + 40) = v3;
  *(_BYTE *)(result + 56) = v4;
  return result;
}

ValueMetadata *type metadata accessor for StackDetailSideBySideItemsCell.Configuration()
{
  return &type metadata for StackDetailSideBySideItemsCell.Configuration;
}

BOOL sub_100264814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  void *v12;
  CHWorkoutDetailHeartRateTableViewCell *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  CHWorkoutDetailHeartRateTableViewCell *v20;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  char v28;
  SEL v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  CHWorkoutDetailHeartRateTableViewCell *v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  uint64_t v45;
  CHWorkoutDetailHeartRateTableViewCell *v46;
  SEL v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  Swift::String v54;
  Swift::Int v55;
  SEL v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  SEL v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  uint64_t v74;
  SEL v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;

  v4 = type metadata accessor for Feature(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = URL.host.getter(v8);
  v11 = v10;
  v12 = (void *)static NavigationConstants.host.getter();
  v20 = v13;
  if (!v11)
  {
    swift_bridgeObjectRelease(v13, (SEL)v13, v14, v15, v16, v17, v18, v19);
    goto LABEL_9;
  }
  if ((void *)v9 == v12 && v11 == v13)
  {
    swift_bridgeObjectRelease(v11, (SEL)v13, v12, v15, v16, v17, v18, v19);
    swift_bridgeObjectRelease(v20, v21, v22, v23, v24, v25, v26, v27);
    goto LABEL_7;
  }
  v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v12, v13, 0);
  swift_bridgeObjectRelease(v11, v29, v30, v31, v32, v33, v34, v35);
  swift_bridgeObjectRelease(v20, v36, v37, v38, v39, v40, v41, v42);
  if ((v28 & 1) == 0)
  {
LABEL_9:
    v63 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(a1, v63);
    return 1;
  }
LABEL_7:
  v43 = (CHWorkoutDetailHeartRateTableViewCell *)URL.pathComponents.getter();
  v44 = v43;
  if (*(_QWORD *)v43->cellPadding != 2)
  {
    v64 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(a1, v64);
    swift_bridgeObjectRelease(v44, v65, v66, v67, v68, v69, v70, v71);
    return 1;
  }
  v45 = *(_QWORD *)v43[1].cellPadding;
  v46 = *(CHWorkoutDetailHeartRateTableViewCell **)v43[1].cellInset;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRelease(v44, v47, v48, v49, v50, v51, v52, v53);
  v54._countAndFlagsBits = v45;
  v54._object = v46;
  v55 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100782078, v54);
  swift_bridgeObjectRelease(v46, v56, v57, v58, v59, v60, v61, v62);
  if (v55)
    goto LABEL_9;
  v73 = (CHWorkoutDetailHeartRateTableViewCell *)Platform.supportedFeatures.getter(a2);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Feature.trainerTipsObfuscation(_:), v4);
  v74 = sub_1002D42E8((uint64_t)v7, (uint64_t)v73);
  swift_bridgeObjectRelease(v73, v75, v76, v77, v78, v79, v80, v81);
  v82 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 8))(a1, v82);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (v74 & 1) == 0;
}

uint64_t sub_100264A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  CHWorkoutDetailHeartRateTableViewCell *v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  Swift::String v12;
  Swift::Int v13;
  SEL v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  char v24;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;

  v4 = type metadata accessor for Feature(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = URL.host.getter(v8);
  if (v10
    && (v11 = v10,
        v12._countAndFlagsBits = v9,
        v12._object = v11,
        v13 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1007820B0, v12),
        swift_bridgeObjectRelease(v11, v14, v15, v16, v17, v18, v19, v20),
        !v13))
  {
    v23 = (CHWorkoutDetailHeartRateTableViewCell *)Platform.supportedFeatures.getter(a2);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Feature.trainerTipsObfuscation(_:), v4);
    v24 = sub_1002D42E8((uint64_t)v7, (uint64_t)v23);
    swift_bridgeObjectRelease(v23, v25, v26, v27, v28, v29, v30, v31);
    v32 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(a1, v32);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if ((v24 & 1) != 0)
      return 0;
  }
  else
  {
    v21 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a1, v21);
  }
  return 1;
}

BOOL sub_100264B4C(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  CHWorkoutDetailHeartRateTableViewCell *v24;
  void *v25;
  char *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  char v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  SEL v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void (*v50)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  CHWorkoutDetailHeartRateTableViewCell *v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  void *v55;
  CHWorkoutDetailHeartRateTableViewCell *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  CHWorkoutDetailHeartRateTableViewCell *v62;
  SEL v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  void (*v71)(_BYTE *, uint64_t);
  SEL v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  SEL v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  SEL v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  CHWorkoutDetailHeartRateTableViewCell *v96;
  CHWorkoutDetailHeartRateTableViewCell *v97;
  void *v98;
  CHWorkoutDetailHeartRateTableViewCell *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  CHWorkoutDetailHeartRateTableViewCell *v105;
  uint64_t v106;
  SEL v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  SEL v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  char v124;
  SEL v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  char v133;
  SEL v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  SEL v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  uint64_t v148;
  _BYTE v149[12];
  int v150;
  uint64_t v151;
  uint64_t v152;
  unsigned int v153;
  _BYTE *v154;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v154 = &v149[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100047110(&qword_10082E5E0);
  __chkstk_darwin(v7);
  v9 = &v149[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for URLComponents(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v149[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v149[-v15];
  v18 = __chkstk_darwin(v17);
  v20 = &v149[-v19];
  URLComponents.init(url:resolvingAgainstBaseURL:)(a1, 0, v18);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    sub_100112A1C((uint64_t)v9);
    return 1;
  }
  v153 = a2;
  v151 = v4;
  v21 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v20, v9, v10);
  v22 = URLComponents.scheme.getter(v21);
  v24 = v23;
  v25 = (void *)static NavigationConstants.sharingURLScheme.getter();
  v33 = (CHWorkoutDetailHeartRateTableViewCell *)v26;
  v152 = a1;
  if (v24)
  {
    if ((void *)v22 == v25 && v24 == (CHWorkoutDetailHeartRateTableViewCell *)v26)
    {
      swift_bridgeObjectRelease(v24, v26, v25, v28, v29, v30, v31, v32);
      swift_bridgeObjectRelease(v33, v81, v82, v83, v84, v85, v86, v87);
      v50 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16);
      v50(v16, v20, v10);
LABEL_19:
      v71 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
      v71(v16, v10);
LABEL_26:
      v50(v13, v20, v10);
      v80 = v153;
LABEL_27:
      v71(v13, v10);
      v106 = v152;
LABEL_28:
      v121 = (uint64_t)v154;
      v122 = v151;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v154, v106, v151);
      v123 = sub_100264814(v121, v80);
      goto LABEL_29;
    }
    v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v25, v26, 0);
    swift_bridgeObjectRelease(v24, v36, v37, v38, v39, v40, v41, v42);
    swift_bridgeObjectRelease(v33, v43, v44, v45, v46, v47, v48, v49);
    v50 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16);
    v51 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v50)(v16, v20, v10);
    if ((v35 & 1) != 0)
      goto LABEL_19;
  }
  else
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v26, v26, v27, v28, v29, v30, v31, v32);
    v50 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16);
    v51 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v50)(v16, v20, v10);
  }
  v52 = URLComponents.scheme.getter(v51);
  v54 = v53;
  v55 = (void *)static NavigationConstants.secureSharingURLScheme.getter();
  v62 = v56;
  if (v54)
  {
    if ((void *)v52 == v55 && v54 == v56)
    {
      swift_bridgeObjectRelease(v56, (SEL)v56, v55, v57, v58, v59, v60, v61);
      v71 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
      v71(v16, v10);
      swift_bridgeObjectRelease(v54, v114, v115, v116, v117, v118, v119, v120);
      goto LABEL_26;
    }
    v150 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v54, v55, v56, 0);
    swift_bridgeObjectRelease(v62, v64, v65, v66, v67, v68, v69, v70);
    v71 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
    v71(v16, v10);
    swift_bridgeObjectRelease(v54, v72, v73, v74, v75, v76, v77, v78);
    v79 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v50)(v13, v20, v10);
    v80 = v153;
    if ((v150 & 1) != 0)
      goto LABEL_27;
  }
  else
  {
    v71 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
    v71(v16, v10);
    swift_bridgeObjectRelease(v62, v88, v89, v90, v91, v92, v93, v94);
    v79 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v50)(v13, v20, v10);
  }
  v95 = URLComponents.host.getter(v79);
  v97 = v96;
  v98 = (void *)static NavigationConstants.host.getter();
  v105 = v99;
  v106 = v152;
  if (v97)
  {
    if ((void *)v95 == v98 && v97 == v99)
    {
      swift_bridgeObjectRelease(v99, (SEL)v99, v98, v100, v101, v102, v103, v104);
      v71(v13, v10);
      swift_bridgeObjectRelease(v97, v107, v108, v109, v110, v111, v112, v113);
LABEL_35:
      v80 = v153;
      goto LABEL_28;
    }
    v133 = _stringCompareWithSmolCheck(_:_:expecting:)(v95, v97, v98, v99, 0);
    swift_bridgeObjectRelease(v105, v134, v135, v136, v137, v138, v139, v140);
    v71(v13, v10);
    swift_bridgeObjectRelease(v97, v141, v142, v143, v144, v145, v146, v147);
    if ((v133 & 1) != 0)
      goto LABEL_35;
  }
  else
  {
    v71(v13, v10);
    swift_bridgeObjectRelease(v105, v126, v127, v128, v129, v130, v131, v132);
  }
  v148 = (uint64_t)v154;
  v122 = v151;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v154, v106, v151);
  v123 = sub_100264A0C(v148, v153);
LABEL_29:
  v124 = v123;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v106, v122);
  v71(v20, v10);
  return (v124 & 1) != 0;
}

id sub_100264FC4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC10FitnessApp26AddToYourRingTableViewCell____lazy_storage___heightConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp26AddToYourRingTableViewCell____lazy_storage___heightConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC10FitnessApp26AddToYourRingTableViewCell____lazy_storage___heightConstraint];
  }
  else
  {
    v4 = objc_msgSend(v0, "contentView");
    v5 = objc_msgSend(v4, "heightAnchor");

    v6 = objc_msgSend(v5, "constraintEqualToConstant:", 0.0);
    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_100265078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  NSString v6;
  id v7;
  id v8;
  id v9;
  id v10;
  objc_super v12;

  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC10FitnessApp26AddToYourRingTableViewCell_addToYourRingCollectionViewController], 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp26AddToYourRingTableViewCell____lazy_storage___heightConstraint] = 0;
  if (a3)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v6 = 0;
  }
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for AddToYourRingTableViewCell();
  v7 = objc_msgSendSuper2(&v12, "initWithStyle:reuseIdentifier:", a1, v6);

  v8 = v7;
  v9 = objc_msgSend(v8, "contentView");
  v10 = sub_100032490();
  objc_msgSend(v9, "setBackgroundColor:", v10);

  return v8;
}

void sub_1002651B4()
{
  char *v0;
  void *Strong;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  Class isa;
  SEL v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC10FitnessApp26AddToYourRingTableViewCell_addToYourRingCollectionViewController]);
  if (Strong)
  {
    v32 = Strong;
    v2 = objc_msgSend(Strong, "view");
    if (v2)
    {
      v3 = v2;
      v4 = (void *)objc_opt_self(NSLayoutConstraint);
      v5 = sub_100047110((uint64_t *)&unk_100828340);
      v6 = swift_allocObject(v5, 72, 7);
      *(_OWORD *)(v6 + 16) = xmmword_10062ED40;
      v7 = objc_msgSend(v3, "topAnchor");
      v8 = objc_msgSend(v0, "contentView");
      v9 = objc_msgSend(v8, "topAnchor");

      v10 = objc_msgSend(v7, "constraintEqualToAnchor:", v9);
      *(_QWORD *)(v6 + 32) = v10;
      v11 = objc_msgSend(v3, "bottomAnchor");
      v12 = objc_msgSend(v0, "contentView");
      v13 = objc_msgSend(v12, "bottomAnchor");

      v14 = objc_msgSend(v11, "constraintEqualToAnchor:", v13);
      *(_QWORD *)(v6 + 40) = v14;
      v15 = objc_msgSend(v3, "trailingAnchor");
      v16 = objc_msgSend(v0, "contentView");
      v17 = objc_msgSend(v16, "trailingAnchor");

      v18 = objc_msgSend(v15, "constraintEqualToAnchor:", v17);
      *(_QWORD *)(v6 + 48) = v18;
      v19 = objc_msgSend(v3, "leadingAnchor");
      v20 = objc_msgSend(v0, "contentView");
      v21 = objc_msgSend(v20, "leadingAnchor");

      v22 = objc_msgSend(v19, "constraintEqualToAnchor:", v21);
      *(_QWORD *)(v6 + 56) = v22;
      v23 = sub_100264FC4();
      *(_QWORD *)(v6 + 64) = v23;
      specialized Array._endMutation()(v23);
      sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v6, v25, v26, v27, v28, v29, v30, v31);
      objc_msgSend(v4, "activateConstraints:", isa);

    }
    else
    {

    }
  }
}

void sub_1002654CC(void *a1)
{
  char *v1;
  void *v2;
  char *v4;
  void *Strong;
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC10FitnessApp26AddToYourRingTableViewCell_addToYourRingCollectionViewController];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);

  swift_unknownObjectWeakAssign(v4, a1);
  v6 = objc_msgSend(a1, "view");
  if (!v6)
    return;
  v27 = v6;
  v7 = objc_msgSend(v2, "contentView");
  objc_msgSend(v7, "frame");
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;

  objc_msgSend(v27, "setFrame:", v9, v11, v13, v15);
  v16 = objc_msgSend(v2, "contentView");
  v17 = objc_msgSend(v16, "subviews");

  v18 = sub_10001E724(0, (unint64_t *)&qword_100821308, UIView_ptr);
  v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0)
      v24 = v19;
    else
      v24 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v19);
    v20 = _CocoaArrayWrapper.endIndex.getter(v24);
    if (v20)
      goto LABEL_4;
  }
  else
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v19);
    if (v20)
    {
LABEL_4:
      if (v20 < 1)
      {
        __break(1u);
        return;
      }
      for (i = 0; i != v20; ++i)
      {
        if ((v19 & 0xC000000000000001) != 0)
          v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v19);
        else
          v22 = *(id *)(v19 + 8 * i + 32);
        v23 = v22;
        objc_msgSend(v22, "removeFromSuperview");

      }
    }
  }
  swift_bridgeObjectRelease_n(v19, 2);
  v25 = objc_msgSend(v2, "contentView");
  objc_msgSend(v25, "addSubview:", v27);

  v26 = sub_100264FC4();
  sub_1005C5EC8();
  objc_msgSend(v26, "setConstant:");

  if (!Strong)
    sub_1002651B4();

}

id sub_1002657E4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AddToYourRingTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AddToYourRingTableViewCell()
{
  return objc_opt_self(_TtC10FitnessApp26AddToYourRingTableViewCell);
}

void sub_10026586C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = swift_allocObject(&unk_100791F38, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v0);
  v6[4] = sub_10016ADF0;
  v7 = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_10002D0F8;
  v6[3] = &unk_100791F50;
  v3 = _Block_copy(v6);
  v4 = objc_msgSend(v1, "beginBackgroundTaskWithExpirationHandler:", v3, swift_release(v7).n128_f64[0]);
  _Block_release(v3);

  v5 = v0 + OBJC_IVAR___CHBackgroundTaskAssertion_identifier;
  *(_QWORD *)v5 = v4;
  *(_BYTE *)(v5 + 8) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR___CHBackgroundTaskAssertion_state) = 1;
}

void sub_100265970(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  _BYTE *Strong;
  _BYTE v5[24];

  v1 = a1 + 16;
  v2 = static os_log_type_t.error.getter(a1);
  v3 = HKLogActivity;
  os_log(_:dso:log:_:_:)(v2, &_mh_execute_header, v3, "Background task expired", 23, 2, _swiftEmptyArrayStorage);

  swift_beginAccess(v1, v5, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    Strong[OBJC_IVAR___CHBackgroundTaskAssertion_state] = 2;

  }
}

id sub_100265A84()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackgroundTaskAssertion();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t storeEnumTagSinglePayload for BackgroundTaskAssertion.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100265B00 + 4 * byte_100631325[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100265B34 + 4 * asc_100631320[v4]))();
}

uint64_t sub_100265B34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100265B3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100265B44);
  return result;
}

uint64_t sub_100265B50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100265B58);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100265B5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100265B64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BackgroundTaskAssertion.State()
{
  return &type metadata for BackgroundTaskAssertion.State;
}

unint64_t sub_100265B84()
{
  unint64_t result;

  result = qword_10082A478;
  if (!qword_10082A478)
  {
    result = swift_getWitnessTable(&unk_1006313A0, &type metadata for BackgroundTaskAssertion.State);
    atomic_store(result, (unint64_t *)&qword_10082A478);
  }
  return result;
}

uint64_t sub_100265BC8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100265BEC(double a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;

  v2 = sub_100047110(&qword_100823FC8);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110((uint64_t *)&unk_100827450);
  result = __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = round(a1);
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v9 < 9.22337204e18)
  {
    v10 = (uint64_t)v9;
    v11 = type metadata accessor for Calendar(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v12 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
    v23 = 1;
    v22 = 1;
    v21 = 1;
    v20 = 1;
    v19 = 1;
    v18 = 1;
    v17 = 1;
    v16 = 1;
    v15 = 1;
    v14 = 1;
    v13 = 1;
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v8, v4, 0, 1, 0, 1, 0, 1, 0, v13, 0, v14, 0, v15, 0, v16, 0, v17, 0,
      v18,
      0,
      v19,
      0,
      v20,
      0,
      v21,
      0,
      v22,
      0,
      v23);
    DateComponents.minute.setter(v10 / 60, 0);
    return DateComponents.second.setter(v10 % 60, 0);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100265DE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  void *v23;
  Class isa;
  id v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  NSString v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[24];
  uint64_t v60;

  v2 = v1;
  v4 = type metadata accessor for Locale(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_100821648);
  __chkstk_darwin(v8);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DateComponents(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002666C4(a1, (uint64_t)v59);
  if (!v60)
  {
    sub_10001BE90((uint64_t)v59, (uint64_t *)&unk_100828420);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_12;
  }
  v15 = swift_dynamicCast(v10, v59, (char *)&type metadata for Any + 8, v11, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, v15 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_12:
    sub_10001BE90((uint64_t)v10, &qword_100821648);
    return 0;
  }
  v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC10FitnessApp13PaceFormatter_isLocaleAware) == 1)
  {
    v17 = static Locale.current.getter(v16);
    v18 = Locale.identifier.getter(v17);
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v18 == 0x53555F6E65 && v20 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease(0xE500000000000000);
    }
    else
    {
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, 0x53555F6E65, 0xE500000000000000, 0);
      swift_bridgeObjectRelease(v20);
      if ((v22 & 1) == 0)
      {
        v23 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp13PaceFormatter_componentsFormatter);
        isa = DateComponents._bridgeToObjectiveC()().super.isa;
        v25 = objc_msgSend(v23, "stringFromDateComponents:", isa);

        if (v25)
        {
          v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);

        }
        else
        {
          v26 = 0;
        }
        goto LABEL_20;
      }
    }
  }
  v27 = DateComponents.minute.getter(v16);
  if ((v29 & 1) != 0)
    goto LABEL_22;
  v30 = v27;
  v31 = DateComponents.second.getter();
  if ((v32 & 1) != 0)
    goto LABEL_22;
  v33 = v31;
  v34 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp13PaceFormatter_minutesFormatter);
  v35 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v30);
  v36 = objc_msgSend(v34, "stringFromNumber:", v35);

  if (!v36)
    goto LABEL_22;
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v39 = v38;

  v40 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp13PaceFormatter_secondsFormatter);
  v41 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v33);
  v42 = objc_msgSend(v40, "stringFromNumber:", v41);

  if (!v42)
  {
    v28 = swift_bridgeObjectRelease(v39);
LABEL_22:
    (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v28);
    return 0;
  }
  v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
  v44 = v43;

  v45 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v46 = String._bridgeToObjectiveC()();
  v47 = objc_msgSend(v45, "localizedStringForKey:value:table:", v46, 0, 0);

  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
  v49 = v37;
  v51 = v50;

  v52 = sub_100047110((uint64_t *)&unk_100827460);
  v53 = swift_allocObject(v52, 112, 7);
  *(_OWORD *)(v53 + 16) = xmmword_100620BC0;
  *(_QWORD *)(v53 + 56) = &type metadata for String;
  v54 = sub_100038CF8();
  *(_QWORD *)(v53 + 32) = v49;
  *(_QWORD *)(v53 + 40) = v39;
  *(_QWORD *)(v53 + 96) = &type metadata for String;
  *(_QWORD *)(v53 + 104) = v54;
  v55 = v58;
  *(_QWORD *)(v53 + 64) = v54;
  *(_QWORD *)(v53 + 72) = v55;
  *(_QWORD *)(v53 + 80) = v44;
  v26 = static String.localizedStringWithFormat(_:_:)(v48, v51, v53);
  swift_bridgeObjectRelease(v51);
  swift_bridgeObjectRelease(v53);
LABEL_20:
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v26;
}

id sub_100266350()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v1 = OBJC_IVAR____TtC10FitnessApp13PaceFormatter_componentsFormatter;
  v2 = objc_allocWithZone((Class)NSDateComponentsFormatter);
  v3 = v0;
  v4 = objc_msgSend(v2, "init");
  objc_msgSend(v4, "setUnitsStyle:", 0);
  *(_QWORD *)&v0[v1] = v4;
  v5 = OBJC_IVAR____TtC10FitnessApp13PaceFormatter_secondsFormatter;
  v6 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v6, "setMinimumIntegerDigits:", 2);
  objc_msgSend(v6, "setMaximumFractionDigits:", 0);
  objc_msgSend(v6, "setRoundingMode:", 4);
  *(_QWORD *)&v3[v5] = v6;
  v7 = OBJC_IVAR____TtC10FitnessApp13PaceFormatter_minutesFormatter;
  v8 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v8, "setMaximumFractionDigits:", 0);
  objc_msgSend(v8, "setRoundingMode:", 4);
  *(_QWORD *)&v3[v7] = v8;
  v3[OBJC_IVAR____TtC10FitnessApp13PaceFormatter_isLocaleAware] = 1;

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for PaceFormatter();
  return objc_msgSendSuper2(&v10, "init");
}

id sub_1002664B0(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  objc_super v13;

  v3 = OBJC_IVAR____TtC10FitnessApp13PaceFormatter_componentsFormatter;
  v4 = objc_allocWithZone((Class)NSDateComponentsFormatter);
  v5 = v1;
  v6 = objc_msgSend(v4, "init");
  objc_msgSend(v6, "setUnitsStyle:", 0);
  *(_QWORD *)&v1[v3] = v6;
  v7 = OBJC_IVAR____TtC10FitnessApp13PaceFormatter_secondsFormatter;
  v8 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v8, "setMinimumIntegerDigits:", 2);
  objc_msgSend(v8, "setMaximumFractionDigits:", 0);
  objc_msgSend(v8, "setRoundingMode:", 4);
  *(_QWORD *)&v5[v7] = v8;
  v9 = OBJC_IVAR____TtC10FitnessApp13PaceFormatter_minutesFormatter;
  v10 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v10, "setMaximumFractionDigits:", 0);
  objc_msgSend(v10, "setRoundingMode:", 4);
  *(_QWORD *)&v5[v9] = v10;
  v5[OBJC_IVAR____TtC10FitnessApp13PaceFormatter_isLocaleAware] = 1;

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for PaceFormatter();
  v11 = objc_msgSendSuper2(&v13, "initWithCoder:", a1);

  return v11;
}

id sub_10026662C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PaceFormatter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PaceFormatter()
{
  return objc_opt_self(_TtC10FitnessApp13PaceFormatter);
}

uint64_t sub_1002666C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110((uint64_t *)&unk_100828420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

CHWorkoutDetailHeartRateTableViewCell *sub_10026670C(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10012197C(0, v1, 0);
    v3 = *(_QWORD *)(type metadata accessor for SleepingSampleDataType(0) - 8);
    v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    do
    {
      v6 = SleepingSampleDataType.rawValue.getter();
      v8 = *(_QWORD *)_swiftEmptyArrayStorage.cellPadding;
      v7 = *(_QWORD *)_swiftEmptyArrayStorage.cellInset;
      if (v8 >= v7 >> 1)
        sub_10012197C(v7 > 1, v8 + 1, 1);
      *(_QWORD *)_swiftEmptyArrayStorage.cellPadding = v8 + 1;
      *((_QWORD *)&_swiftEmptyArrayStorage + v8 + 4) = v6;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return &_swiftEmptyArrayStorage;
}

id sub_1002667FC()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  qword_10086A3E0 = (uint64_t)result;
  return result;
}

uint64_t sub_100266834@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SleepingSampleDataType.rawValue.getter();
  *a1 = result;
  return result;
}

CHWorkoutDetailHeartRateTableViewCell *sub_10026685C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, _QWORD, uint64_t);
  id v23;
  NSString v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  CHWorkoutDetailHeartRateTableViewCell *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  CHWorkoutDetailHeartRateTableViewCell *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  uint64_t v50;
  unint64_t v51;
  CHWorkoutDetailHeartRateTableViewCell *v52;
  SEL v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  SEL v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  const char *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  CHWorkoutDetailHeartRateTableViewCell *v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  CHWorkoutDetailHeartRateTableViewCell *v79;
  const char *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void (*v87)(char *, char *, uint64_t);
  char *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  CHWorkoutDetailHeartRateTableViewCell *v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  CHWorkoutDetailHeartRateTableViewCell *v99;
  __n128 v100;
  uint64_t v101;
  const char *v102;
  CHWorkoutDetailHeartRateTableViewCell *v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  SEL v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  CHWorkoutDetailHeartRateTableViewCell *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  _QWORD v128[3];
  char v129[16];
  CHWorkoutDetailHeartRateTableViewCell *v130;

  v0 = type metadata accessor for Logger(0);
  v122 = *(_QWORD *)(v0 - 8);
  v123 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v117 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v117 - v4;
  __chkstk_darwin(v6);
  v120 = (char *)&v117 - v7;
  v8 = sub_100047110(&qword_10082A4C8);
  __chkstk_darwin(v8);
  v10 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SleepingSampleDataType(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v126 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v125 = (char *)&v117 - v15;
  v16 = sub_100047110(&qword_1008216D8);
  v17 = *(_QWORD *)(v12 + 72);
  v18 = *(unsigned __int8 *)(v12 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject(v16, v19 + 5 * v17, v18 | 7);
  *(_OWORD *)(v20 + 16) = xmmword_100624EB0;
  v121 = (CHWorkoutDetailHeartRateTableViewCell *)v20;
  v124 = v19;
  v21 = v20 + v19;
  v22 = *(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104);
  v22(v21, enum case for SleepingSampleDataType.heartRate(_:), v11);
  v22(v21 + v17, enum case for SleepingSampleDataType.respiratoryRate(_:), v11);
  v22(v21 + 2 * v17, enum case for SleepingSampleDataType.wristTemperature(_:), v11);
  v22(v21 + 3 * v17, enum case for SleepingSampleDataType.bloodOxygen(_:), v11);
  v22(v21 + 4 * v17, enum case for SleepingSampleDataType.timeAsleep(_:), v11);
  if (qword_10081D920 != -1)
    swift_once(&qword_10081D920, sub_1002667FC);
  v23 = (id)qword_10086A3E0;
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v23, "arrayForKey:", v24);

  if (!v25)
  {
    v37 = static WOLog.trainingLoad.getter(v26);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.default.getter(v38);
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "OvernightMetrics not present in user defaults. Will use system defaults.", v40, 2u);
      swift_slowDealloc(v40, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v122 + 8))(v5, v123);
    return v121;
  }
  v27 = (void *)objc_opt_self(NSPropertyListSerialization);
  v130 = 0;
  v28 = objc_msgSend(v27, "dataWithPropertyList:format:options:error:", v25, 100, 0, &v130);

  v29 = v130;
  if (!v28)
  {
    v41 = v29;
    v42 = _convertNSErrorToError(_:)(v29);

    v44 = swift_willThrow(v43);
    static WOLog.trainingLoad.getter(v44);
    swift_errorRetain(v42);
    v45 = swift_errorRetain(v42);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.error.getter(v46);
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc(12, -1);
      v49 = (CHWorkoutDetailHeartRateTableViewCell *)swift_slowAlloc(32, -1);
      v130 = v49;
      *(_DWORD *)v48 = 136315138;
      swift_getErrorValue(v42, v129, v128);
      v50 = Error.errorDescription.getter(v128[1], v128[2]);
      v52 = (CHWorkoutDetailHeartRateTableViewCell *)v51;
      v127 = sub_10003E8EC(v50, v51, (uint64_t *)&v130);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, v128, v48 + 4);
      swift_bridgeObjectRelease(v52, v53, v54, v55, v56, v57, v58, v59);
      swift_errorRelease(v42);
      swift_errorRelease(v42);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Failed to decode and save OvernightMetrics error=%s", v48, 0xCu);
      swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);

      swift_errorRelease(v42);
    }
    else
    {
      swift_errorRelease(v42);
      swift_errorRelease(v42);
      swift_errorRelease(v42);

    }
    (*(void (**)(char *, uint64_t))(v122 + 8))(v2, v123);
    return v121;
  }
  v30 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v32 = v31;

  v33 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  v34 = PropertyListDecoder.init()();
  v35 = sub_100047110(&qword_1008282B0);
  v36 = sub_100267770(&qword_10082A4D0, (uint64_t)&protocol witness table for Int, (uint64_t)&protocol conformance descriptor for <A> [A]);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(&v130, v35, v30, v32, v35, v36);
  v118 = v30;
  v119 = v32;
  swift_release(v34);
  swift_bridgeObjectRelease(v121, v61, v62, v63, v64, v65, v66, v67);
  v75 = v130;
  v76 = *(_QWORD *)v130->cellPadding;
  if (v76)
  {
    v77 = swift_bridgeObjectRetain(v130);
    v78 = 0;
    v79 = &_swiftEmptyArrayStorage;
    do
    {
      SleepingSampleDataType.init(rawValue:)(*((_QWORD *)&v75[1].super.super.super.super.isa + v78), v77);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      {
        sub_1002670EC((uint64_t)v10);
      }
      else
      {
        v87 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v88 = v125;
        v87(v125, v10, v11);
        v87(v126, v88, v11);
        if ((swift_isUniquelyReferenced_nonNull_native(v79) & 1) == 0)
          v79 = (CHWorkoutDetailHeartRateTableViewCell *)sub_10013FEB8(0, *(_QWORD *)v79->cellPadding + 1, 1, (unint64_t)v79);
        v90 = *(_QWORD *)v79->cellPadding;
        v89 = *(_QWORD *)v79->cellInset;
        v91 = (uint64_t)v79;
        if (v90 >= v89 >> 1)
          v91 = sub_10013FEB8(v89 > 1, v90 + 1, 1, (unint64_t)v79);
        *(_QWORD *)(v91 + 16) = v90 + 1;
        v79 = (CHWorkoutDetailHeartRateTableViewCell *)v91;
        v87((char *)(v91 + v124 + v90 * v17), v126, v11);
      }
      ++v78;
    }
    while (v76 != v78);
    swift_bridgeObjectRelease(v75, v80, v81, v82, v83, v84, v85, v86);
  }
  else
  {
    v79 = &_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v75, v68, v69, v70, v71, v72, v73, v74);
  v92 = v120;
  static WOLog.trainingLoad.getter(v93);
  swift_bridgeObjectRetain_n(v79, 2);
  v94 = v79;
  v96 = Logger.logObject.getter(v95);
  v97 = static os_log_type_t.default.getter(v96);
  if (os_log_type_enabled(v96, v97))
  {
    v98 = (uint8_t *)swift_slowAlloc(12, -1);
    v99 = (CHWorkoutDetailHeartRateTableViewCell *)swift_slowAlloc(32, -1);
    v130 = v99;
    *(_DWORD *)v98 = 136315138;
    v100 = swift_bridgeObjectRetain(v94);
    v101 = Array.description.getter(v100);
    v103 = (CHWorkoutDetailHeartRateTableViewCell *)v102;
    swift_bridgeObjectRelease(v94, v102, v104, v105, v106, v107, v108, v109);
    v127 = sub_10003E8EC(v101, (unint64_t)v103, (uint64_t *)&v130);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, v128, v98 + 4);
    swift_bridgeObjectRelease_n(v94, 2);
    swift_bridgeObjectRelease(v103, v110, v111, v112, v113, v114, v115, v116);
    _os_log_impl((void *)&_mh_execute_header, v96, v97, "Successfully read user overnightMetrics=%s", v98, 0xCu);
    swift_arrayDestroy(v99, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v99, -1, -1);
    swift_slowDealloc(v98, -1, -1);
    sub_10004D9E4(v118, v119);

    (*(void (**)(char *, uint64_t))(v122 + 8))(v120, v123);
  }
  else
  {
    swift_bridgeObjectRelease_n(v79, 2);
    sub_10004D9E4(v118, v119);

    (*(void (**)(char *, uint64_t))(v122 + 8))(v92, v123);
  }
  return v94;
}

uint64_t sub_1002670EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_10082A4C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10026712C(CHWorkoutDetailHeartRateTableViewCell *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  CHWorkoutDetailHeartRateTableViewCell *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  CHWorkoutDetailHeartRateTableViewCell *v21;
  SEL v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  SEL v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  Class isa;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  id v47;
  uint64_t v48;
  NSString v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  uint64_t v54;
  NSString v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  void *v60;
  __n128 v61;
  uint64_t v62;
  const char *v63;
  CHWorkoutDetailHeartRateTableViewCell *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  SEL v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint8_t *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD v88[3];
  _BYTE v89[8];
  uint64_t v90[3];
  uint64_t v91;
  id v92;
  uint64_t v93;

  v2 = type metadata accessor for Logger(0);
  v86 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v82 - v7;
  v9 = type metadata accessor for PropertyListEncoder(0, v6);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v10 = PropertyListEncoder.init()();
  v11 = sub_10026670C((uint64_t)a1);
  v90[0] = (uint64_t)v11;
  v12 = sub_100047110(&qword_1008282B0);
  v13 = sub_100267770(&qword_10082A4D8, (uint64_t)&protocol witness table for Int, (uint64_t)&protocol conformance descriptor for <A> [A]);
  v30 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(v90, v12, v13);
  v32 = v31;
  swift_release(v10);
  swift_bridgeObjectRelease(v11, v33, v34, v35, v36, v37, v38, v39);
  v40 = (void *)objc_opt_self(NSPropertyListSerialization);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v92 = 0;
  v42 = objc_msgSend(v40, "propertyListWithData:options:format:error:", isa, 0, 0, &v92);

  v43 = v92;
  if (v42)
  {
    v84 = v32;
    v85 = v2;
    _bridgeAnyObjectToAny(_:)(v90, v42);
    swift_unknownObjectRelease(v42);
    if (qword_10081D920 != -1)
      swift_once(&qword_10081D920, sub_1002667FC);
    v44 = (void *)qword_10086A3E0;
    v45 = v91;
    v46 = sub_100016804(v90, v91);
    v47 = v44;
    v48 = _bridgeAnythingToObjectiveC<A>(_:)(v46, v45);
    v49 = String._bridgeToObjectiveC()();
    objc_msgSend(v47, "setObject:forKey:", v48, v49);

    swift_unknownObjectRelease(v48);
    v50 = (void *)qword_10086A3E0;
    v51 = (void *)objc_opt_self(NSUserDefaults);
    v52 = v50;
    v53 = objc_msgSend(v51, "standardUserDefaults");
    sub_1002677D0();
    LOBYTE(v48) = static NSObject.== infix(_:_:)(v52, v53);

    if ((v48 & 1) != 0)
    {
      v55 = String._bridgeToObjectiveC()();
      objc_msgSend(v51, "fu_backupStandardUserDefaultsKey:", v55);

    }
    static WOLog.trainingLoad.getter(v54);
    swift_bridgeObjectRetain_n(a1, 2);
    v57 = Logger.logObject.getter(v56);
    v58 = static os_log_type_t.default.getter(v57);
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc(12, -1);
      v60 = (void *)swift_slowAlloc(32, -1);
      v92 = v60;
      *(_DWORD *)v59 = 136315138;
      v83 = v59 + 4;
      type metadata accessor for SleepingSampleDataType(0);
      v61 = swift_bridgeObjectRetain(a1);
      v62 = Array.description.getter(v61);
      v64 = (CHWorkoutDetailHeartRateTableViewCell *)v63;
      swift_bridgeObjectRelease(a1, v63, v65, v66, v67, v68, v69, v70);
      v87 = sub_10003E8EC(v62, (unint64_t)v64, (uint64_t *)&v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, v88, v83);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v64, v71, v72, v73, v74, v75, v76, v77);
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "Saved OvernightMetrics to user defaults overnightMetrics=%s", v59, 0xCu);
      swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v60, -1, -1);
      swift_slowDealloc(v59, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(a1, 2);
    }
    sub_10004D9E4(v30, v84);

    (*(void (**)(char *, uint64_t))(v86 + 8))(v8, v85);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v90);
  }
  else
  {
    v78 = v43;
    v79 = _convertNSErrorToError(_:)(v43);

    swift_willThrow(v80);
    v81 = sub_10004D9E4(v30, v32);
    static WOLog.trainingLoad.getter(v81);
    swift_errorRetain(v79);
    v14 = swift_errorRetain(v79);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v90[0] = v18;
      *(_DWORD *)v17 = 136315138;
      swift_getErrorValue(v79, v89, v88);
      v19 = Error.errorDescription.getter(v88[1], v88[2]);
      v21 = (CHWorkoutDetailHeartRateTableViewCell *)v20;
      v92 = (id)sub_10003E8EC(v19, v20, v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93, v17 + 4);
      swift_bridgeObjectRelease(v21, v22, v23, v24, v25, v26, v27, v28);
      swift_errorRelease(v79);
      swift_errorRelease(v79);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Failed to encode and save OvernightMetrics error=%s", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

      swift_errorRelease(v79);
    }
    else
    {
      swift_errorRelease(v79);
      swift_errorRelease(v79);
      swift_errorRelease(v79);

    }
    return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v4, v2);
  }
}

uint64_t sub_100267770(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100007050(&qword_1008282B0);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002677D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082A4E0;
  if (!qword_10082A4E0)
  {
    v1 = objc_opt_self(NSUserDefaults);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10082A4E0);
  }
  return result;
}

uint64_t sub_10026780C(uint64_t a1, uint64_t a2)
{
  _OWORD v3[2];
  char v4;

  v4 = 0;
  memset(v3, 0, sizeof(v3));
  return View.listRowInsets(_:)(v3, a1, a2);
}

id sub_10026794C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PaletteViewControllerSizingDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PaletteViewControllerSizingDelegate()
{
  return objc_opt_self(CHPaletteViewControllerSizingDelegate);
}

id AVPlayer.forNonAudioSessionParticipation()()
{
  void *v0;
  id v2;

  objc_msgSend(v0, "_setParticipatesInAudioSession:", 0);
  return v2;
}

char *sub_1002679E0(int a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, void *a13, uint64_t a14, uint64_t a15, unsigned __int8 a16, uint64_t a17, unsigned __int8 a18, uint64_t a19, uint64_t a20,char a21,unint64_t a22,uint64_t a23,char a24)
{
  char *v24;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  double v36;
  void *v37;
  id v38;
  id v39;
  double v40;
  void *v41;
  void *v42;
  char *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  int v68;
  __int128 v69;
  __int128 v70;
  double v71;
  __int128 v72;
  __int128 v73;
  id v74;
  id v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  char *v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  id v87;
  id v88;
  id v89;
  id v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  void *v97;
  char *v98;
  id v99;
  char v101;
  objc_super v106;
  _BYTE v107[64];
  _BYTE v108[64];
  char v109[64];
  _BYTE v110[64];
  _OWORD v111[7];
  uint64_t v112;
  _OWORD v113[7];
  uint64_t v114;
  __int128 v115[3];
  uint64_t v116;
  __int128 v117[3];
  uint64_t v118;

  v29 = OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_stackView;
  sub_10001E724(0, &qword_10082A5F8, UIStackView_ptr);
  v30 = v24;
  *(_QWORD *)&v24[v29] = sub_1005AEF5C();
  v31 = OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_summaryView;
  type metadata accessor for TrendDetailSummaryView();
  *(_QWORD *)&v30[v31] = sub_1005AEF5C();
  v32 = OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_explanationView;
  type metadata accessor for TrendExplanationView();
  *(_QWORD *)&v30[v32] = sub_1005AEF5C();
  v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_trendType] = a1;
  v33 = OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_direction;
  v101 = a2;
  v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_direction] = a2;
  sub_1000364C8(byte_10063145C[(char)a1]);
  v35 = v34;
  v36 = *(double *)a3;
  v37 = (void *)objc_opt_self(HKQuantity);
  v38 = objc_msgSend(v37, "quantityWithUnit:doubleValue:", v35, v36);

  v39 = 0;
  *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_valueQuantity] = v38;
  if (v30[v33] == 2)
  {
    v40 = *(double *)a4 - v36;
    sub_1000364C8(byte_10063145C[(char)a1]);
    v42 = v41;
    v39 = objc_msgSend(v37, "quantityWithUnit:doubleValue:", v41, v40);

  }
  *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_differenceQuantity] = v39;
  v43 = &v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_statistics90];
  *(_OWORD *)v43 = *(_OWORD *)a3;
  v44 = *(_OWORD *)(a3 + 64);
  v46 = *(_OWORD *)(a3 + 16);
  v45 = *(_OWORD *)(a3 + 32);
  *((_OWORD *)v43 + 3) = *(_OWORD *)(a3 + 48);
  *((_OWORD *)v43 + 4) = v44;
  *((_OWORD *)v43 + 1) = v46;
  *((_OWORD *)v43 + 2) = v45;
  v47 = *(_OWORD *)(a3 + 128);
  v49 = *(_OWORD *)(a3 + 80);
  v48 = *(_OWORD *)(a3 + 96);
  *((_OWORD *)v43 + 7) = *(_OWORD *)(a3 + 112);
  *((_OWORD *)v43 + 8) = v47;
  *((_OWORD *)v43 + 5) = v49;
  *((_OWORD *)v43 + 6) = v48;
  v51 = *(_OWORD *)(a3 + 160);
  v50 = *(_OWORD *)(a3 + 176);
  v52 = *(_OWORD *)(a3 + 144);
  v43[192] = *(_BYTE *)(a3 + 192);
  *((_OWORD *)v43 + 10) = v51;
  *((_OWORD *)v43 + 11) = v50;
  *((_OWORD *)v43 + 9) = v52;
  v53 = &v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_statistics365];
  *(_OWORD *)v53 = *(_OWORD *)a4;
  v54 = *(_OWORD *)(a4 + 64);
  v56 = *(_OWORD *)(a4 + 16);
  v55 = *(_OWORD *)(a4 + 32);
  *((_OWORD *)v53 + 3) = *(_OWORD *)(a4 + 48);
  *((_OWORD *)v53 + 4) = v54;
  *((_OWORD *)v53 + 1) = v56;
  *((_OWORD *)v53 + 2) = v55;
  v57 = *(_OWORD *)(a4 + 128);
  v59 = *(_OWORD *)(a4 + 80);
  v58 = *(_OWORD *)(a4 + 96);
  *((_OWORD *)v53 + 7) = *(_OWORD *)(a4 + 112);
  *((_OWORD *)v53 + 8) = v57;
  *((_OWORD *)v53 + 5) = v59;
  *((_OWORD *)v53 + 6) = v58;
  v61 = *(_OWORD *)(a4 + 160);
  v60 = *(_OWORD *)(a4 + 176);
  v62 = *(_OWORD *)(a4 + 144);
  v53[192] = *(_BYTE *)(a4 + 192);
  *((_OWORD *)v53 + 10) = v61;
  *((_OWORD *)v53 + 11) = v60;
  *((_OWORD *)v53 + 9) = v62;
  sub_100045AD4(a5, (uint64_t)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_mannKendall90], &qword_10082A600);
  sub_100045AD4(a9, (uint64_t)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_mannKendall365], &qword_10082A600);
  v63 = &v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_fit90];
  *(_QWORD *)v63 = a6;
  *((_QWORD *)v63 + 1) = a7;
  v63[16] = a8 & 1;
  v64 = &v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_fit365];
  *(_QWORD *)v64 = a10;
  *((_QWORD *)v64 + 1) = a11;
  v64[16] = a12 & 1;
  *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_formattingManager] = a13;
  *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_pairedWatchManager] = a14;
  v65 = &v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_daysRingsClosed365];
  *(_QWORD *)v65 = a15;
  v65[8] = a16 & 1;
  v66 = &v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_daysRingsClosed90];
  *(_QWORD *)v66 = a17;
  v66[8] = a18 & 1;
  v67 = &v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_coachingString];
  *(_QWORD *)v67 = a19;
  *((_QWORD *)v67 + 1) = a20;
  v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_isWheelchairUser] = a21 & 1;
  v68 = v30[v33];
  v118 = *(_QWORD *)(a3 + 64);
  v69 = *(_OWORD *)(a3 + 48);
  v70 = *(_OWORD *)(a3 + 16);
  v117[1] = *(_OWORD *)(a3 + 32);
  v117[2] = v69;
  v117[0] = v70;
  v71 = *(double *)a4;
  v116 = *(_QWORD *)(a4 + 64);
  v72 = *(_OWORD *)(a4 + 48);
  v73 = *(_OWORD *)(a4 + 16);
  v115[1] = *(_OWORD *)(a4 + 32);
  v115[2] = v72;
  v115[0] = v73;
  v74 = objc_allocWithZone((Class)type metadata accessor for TrendDetailChartView(0));
  v75 = a13;
  sub_10004AE58((_QWORD *)a3);
  sub_10004AE58((_QWORD *)a4);
  swift_retain(a14);
  sub_10003EE38(v117);
  sub_10003EE38(v115);
  *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_chartView] = sub_1005BA474(a1, v68, v117, v115, v75, v36, v71);
  v76 = *(_OWORD *)(a3 + 72);
  v77 = *(_OWORD *)(a3 + 120);
  v113[2] = *(_OWORD *)(a3 + 104);
  v113[3] = v77;
  v78 = *(_OWORD *)(a3 + 88);
  v113[0] = v76;
  v113[1] = v78;
  v114 = *(_QWORD *)(a3 + 184);
  v79 = *(_OWORD *)(a3 + 168);
  v80 = *(_OWORD *)(a3 + 136);
  v113[5] = *(_OWORD *)(a3 + 152);
  v113[6] = v79;
  v113[4] = v80;
  if (*(_QWORD *)(v76 + 16))
  {
    v81 = 0;
    v82 = *(_OWORD *)(a4 + 72);
    v83 = *(_OWORD *)(a4 + 120);
    v111[2] = *(_OWORD *)(a4 + 104);
    v111[3] = v83;
    v84 = *(_OWORD *)(a4 + 88);
    v111[0] = v82;
    v111[1] = v84;
    v112 = *(_QWORD *)(a4 + 184);
    v85 = *(_OWORD *)(a4 + 168);
    v86 = *(_OWORD *)(a4 + 136);
    v111[5] = *(_OWORD *)(a4 + 152);
    v111[6] = v85;
    v111[4] = v86;
    if (*(_QWORD *)(v82 + 16) && v101 != 1 && a1 != 4)
    {
      v87 = objc_allocWithZone((Class)type metadata accessor for TrendDetailDailyAverageView());
      v88 = v75;
      sub_100269278(v113);
      sub_100269278(v111);
      v81 = sub_1001D32D8(a1, (uint64_t)v113, (double *)v111, v88);
    }
  }
  else
  {
    v81 = 0;
  }
  *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_dailyChart] = v81;
  if (((a16 | a18) & 1) != 0)
  {
    *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_ringClosureSummary] = 0;
  }
  else
  {
    type metadata accessor for TrendDetailRingClosureView();
    v89 = sub_1005AEF5C();
    *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_ringClosureSummary] = v89;
    v90 = v89;
    sub_10022E908(a1, a17, a15, a21 & 1);

  }
  if (a1 == 4 && (a24 & 1) == 0 && (sub_100392E78(a22, a23), v91))
  {
    v93 = v91;
    v94 = v92;
    sub_1003922CC(v91, v92, (uint64_t)v107, v36);
    sub_100049DE4((_QWORD *)a3);
    sub_100045AD4((uint64_t)v107, (uint64_t)v110, &qword_100821798);
    if (v110[48] == 6)
    {
      sub_100049DE4((_QWORD *)a4);
      swift_bridgeObjectRelease(v93);
    }
    else
    {
      sub_1003922CC(v93, v94, (uint64_t)v108, v71);
      swift_bridgeObjectRelease(v93);
      sub_100049DE4((_QWORD *)a4);
      sub_100045AD4((uint64_t)v108, (uint64_t)v109, &qword_100821798);
    }
  }
  else
  {
    sub_100049DE4((_QWORD *)a4);
    sub_100049DE4((_QWORD *)a3);
  }
  *(_QWORD *)&v30[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_vO2MaxChart] = 0;

  v106.receiver = v30;
  v106.super_class = (Class)type metadata accessor for TrendDetailViewController();
  v95 = (char *)objc_msgSendSuper2(&v106, "initWithNibName:bundle:", 0, 0);
  v96 = v95;
  v97 = *(void **)&v95[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_dailyChart];
  if (v97)
  {
    v98 = v95;
    v99 = v97;
    objc_msgSend(v99, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  }
  swift_release(a14);
  return v96;
}

void sub_1002681A4()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  char v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v1, "setView:", v2);

  v3 = objc_msgSend(v1, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_11;
  }
  v4 = v3;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "systemBackgroundColor");
  objc_msgSend(v4, "setBackgroundColor:", v6);

  v7 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  objc_msgSend(v7, "setAutoresizingMask:", 18);
  objc_msgSend(v7, "_setHostsLayoutEngine:", 1);
  v8 = v7;
  v9 = objc_msgSend(v5, "systemBackgroundColor");
  objc_msgSend(v8, "setBackgroundColor:", v9);

  objc_msgSend(v8, "setAlwaysBounceVertical:", 1);
  v10 = objc_msgSend(v1, "view");
  if (!v10)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v11 = v10;
  objc_msgSend(v10, "addSubview:", v8);

  v36 = v8;
  v12 = objc_msgSend(v1, "view");
  if (!v12)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v13 = v12;
  objc_msgSend(v12, "bounds");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  objc_msgSend(v36, "setFrame:", v15, v17, v19, v21);
  v22 = objc_msgSend(v1, "navigationItem");
  v23 = v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_trendType];
  v24 = v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_isWheelchairUser];
  sub_1004E3DDC(v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_isWheelchairUser], v23);
  v26 = v25;
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setTitle:", v27, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v28 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_stackView];
  objc_msgSend(v36, "addSubview:", v28);
  objc_msgSend(v28, "setAxis:", 1);
  objc_msgSend(v28, "setDistribution:", 0);
  objc_msgSend(v28, "addArrangedSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_summaryView]);
  objc_msgSend(v28, "addArrangedSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_chartView]);
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_dailyChart])
    objc_msgSend(v28, "addArrangedSubview:");
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_ringClosureSummary])
    objc_msgSend(v28, "addArrangedSubview:");
  v29 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_explanationView];
  v30 = objc_msgSend(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_formattingManager]+ OBJC_IVAR____TtC10FitnessApp23TrendsFormattingManager_fiuiFormatter), "unitManager");
  if (v30)
  {
    v31 = v30;
    sub_1004E537C(v24, v30, *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_pairedWatchManager], v23);
    v33 = v32;
    v35 = sub_100588940(v23, v34, v32);
    objc_msgSend(*(id *)(v29 + OBJC_IVAR____TtC10FitnessApp20TrendExplanationView_textView), "setAttributedText:", v35, swift_bridgeObjectRelease(v33).n128_f64[0]);

    objc_msgSend(v28, "addArrangedSubview:", v29);
    sub_1002685D8();

    return;
  }
LABEL_13:
  __break(1u);
}

void sub_1002685D8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  Class isa;
  char *v24;
  void *v25;
  char *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_stackView);
  v3 = objc_msgSend(v2, "superview");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v2, "topAnchor");
    v6 = objc_msgSend(v4, "topAnchor");
    v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

    v8 = objc_msgSend(v2, "leftAnchor");
    v9 = objc_msgSend(v4, "leftAnchor");
    v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

    v11 = objc_msgSend(v2, "widthAnchor");
    v12 = objc_msgSend(v4, "widthAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

    v14 = objc_msgSend(v2, "bottomAnchor");
    v15 = objc_msgSend(v4, "bottomAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

    v17 = (void *)objc_opt_self(NSLayoutConstraint);
    v18 = sub_100047110((uint64_t *)&unk_100828340);
    v19 = swift_allocObject(v18, 64, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100623750;
    *(_QWORD *)(v19 + 32) = v7;
    *(_QWORD *)(v19 + 40) = v10;
    *(_QWORD *)(v19 + 48) = v13;
    *(_QWORD *)(v19 + 56) = v16;
    v31 = v19;
    specialized Array._endMutation()(v19);
    sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
    v30 = v7;
    v20 = v10;
    v21 = v13;
    v22 = v16;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v17, "activateConstraints:", isa, swift_bridgeObjectRelease(v31).n128_f64[0]);

    v24 = *(char **)(v1 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_vO2MaxChart);
    if (v24)
    {
      v25 = *(void **)&v24[OBJC_IVAR____TtC10FitnessApp26TrendDetailVO2MaxChartView_pill90];
      v26 = v24;
      v27 = objc_msgSend(v25, "centerXAnchor");
      v28 = objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_chartView)+ OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_averagePlatter90), "centerXAnchor");
      v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

      objc_msgSend(v29, "setActive:", 1);
    }

  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000023, 0x8000000100693840, "FitnessApp/TrendDetailViewController.swift", 42, 2, 186, 0);
    __break(1u);
  }
}

void sub_100268978()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v1 = (void *)*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_direction);
  v2 = *(_BYTE *)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_trendType);
  if ((_DWORD)v1 == 1)
  {
    v6 = sub_10055E294(v2);
    v7 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_isWheelchairUser);
    v10 = v6;
    sub_1004E4CE8(v7, v2);
    v5 = v8;
    v4 = v9;
  }
  else
  {
    v3 = sub_100035D5C(*(void **)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_valueQuantity), v2);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_coachingString);
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_coachingString + 8);
    v10 = v3;
    swift_bridgeObjectRetain(v4);
  }
  sub_1001F201C(v2, v1, (uint64_t)v10, v5, v4, (_DWORD)v1 != 1);
  swift_bridgeObjectRelease(v4);

}

void sub_100268AF0()
{
  void *v0;
  void *v1;
  void *v2;
  NSString v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Class isa;
  id v13;
  uint64_t v14;
  objc_super v15;

  v1 = v0;
  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for TrendDetailViewController();
  objc_msgSendSuper2(&v15, "viewDidLoad");
  if (objc_msgSend((id)objc_opt_self(_HKBehavior), "isAppleInternalInstall"))
  {
    if (qword_10081E0B0 != -1)
      swift_once(&qword_10081E0B0, sub_10004F61C);
    if ((byte_10083D1A0 & 1) == 0)
    {
      v2 = (void *)objc_opt_self(UIImage);
      v3 = String._bridgeToObjectiveC()();
      v4 = objc_msgSend(v2, "__systemImageNamedSwift:", v3);

      v5 = objc_allocWithZone((Class)UIBarButtonItem);
      v6 = v1;
      v7 = objc_msgSend(v5, "initWithImage:style:target:action:", v4, 0, v6, "tapToRadar");

      v8 = objc_msgSend(v6, "navigationItem");
      v9 = sub_100047110((uint64_t *)&unk_100828340);
      v10 = swift_allocObject(v9, 40, 7);
      *(_OWORD *)(v10 + 16) = xmmword_100623630;
      *(_QWORD *)(v10 + 32) = v7;
      v14 = v10;
      specialized Array._endMutation()(v10);
      sub_10001E724(0, (unint64_t *)&unk_10082EEB0, UIBarButtonItem_ptr);
      v11 = v7;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v8, "setRightBarButtonItems:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

    }
  }
  sub_100268978();
  v13 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v13, "addObserver:selector:name:object:", v1, "contentSizeCategoryDidChangeWithNote:", UIContentSizeCategoryDidChangeNotification, 0);

}

void sub_100268D60(char a1)
{
  char *v1;
  char *v2;
  void *v4;
  objc_super v5;

  v2 = v1;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for TrendDetailViewController();
  objc_msgSendSuper2(&v5, "viewWillAppear:", a1 & 1);
  if (v2[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_direction] != 1)
  {
    v4 = (void *)*(unsigned __int8 *)(*(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_summaryView]
                                    + OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrowDirection);
    if ((_DWORD)v4 == 1)
      sub_10047F60C(v4, 0);
    else
      sub_10047FF70(v4);
  }
  *(_BYTE *)(*(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_chartView]
           + OBJC_IVAR____TtC10FitnessApp20TrendDetailChartView_filled) = 1;
}

void sub_100268E58(uint64_t a1)
{
  void *v1;

  v1 = (void *)*(unsigned __int8 *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_summaryView)
                                  + OBJC_IVAR____TtC10FitnessApp22TrendDetailSummaryView_arrowDirection);
  sub_10047F60C(v1, (_DWORD)v1 != 1);
}

uint64_t sub_100268F6C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;

  v2 = v1;
  v4 = OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_stackView;
  sub_10001E724(0, &qword_10082A5F8, UIStackView_ptr);
  v5 = v1;
  *(_QWORD *)&v1[v4] = sub_1005AEF5C();
  v6 = OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_summaryView;
  type metadata accessor for TrendDetailSummaryView();
  *(_QWORD *)&v5[v6] = sub_1005AEF5C();
  v7 = OBJC_IVAR____TtC10FitnessApp25TrendDetailViewController_explanationView;
  type metadata accessor for TrendExplanationView();
  v8 = sub_1005AEF5C();

  *(_QWORD *)&v5[v7] = v8;
  v9 = *(void **)&v5[v7];

  v10 = type metadata accessor for TrendDetailViewController();
  swift_deallocPartialClassInstance(v5, v10, 704, 7);
  return 0;
}

id sub_1002690A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendDetailViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrendDetailViewController()
{
  return objc_opt_self(_TtC10FitnessApp25TrendDetailViewController);
}

_QWORD *sub_100269278(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[7];
  v4 = a1[8];
  swift_bridgeObjectRetain(*a1);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t sub_1002692C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002692EC()
{
  uint64_t v0;

  sub_100268E58(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100269448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t KeyPath;
  uint64_t v17;
  double v18;
  void (*v19)(char *, uint64_t);
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t Strong;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v36;
  char *v37;
  _BYTE v38[24];
  _BYTE v39[24];

  v1 = v0;
  v2 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v2);
  v37 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v36 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v36 - v12;
  v14 = v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v15((char *)&v36 - v12, v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate, v4);
  KeyPath = swift_getKeyPath(&unk_100631570);
  v17 = swift_getKeyPath(&unk_100631598);
  static Published.subscript.getter(v11, v1, KeyPath, v17);
  swift_release(KeyPath);
  swift_release(v17);
  v18 = Date.timeIntervalSince(_:)(v11);
  v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v11, v4);
  v19(v13, v4);
  v20 = *(double *)(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
  v21 = floor(v18 / v20);
  v22 = ceil(*(double *)(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration) / v20) + -1.0;
  if (v22 < v21)
    v21 = v22;
  v23 = v20 * v21;
  v24 = ((uint64_t (*)(char *, uint64_t, uint64_t))v15)(v13, v14, v4);
  Date.addingTimeInterval(_:)(v24, v23);
  v19(v13, v4);
  v25 = v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBucketStartDate;
  swift_beginAccess(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBucketStartDate, v39, 0, 0);
  v15(v13, v25, v4);
  v26 = sub_10026B3EC();
  v27 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v8, v4, v26);
  v19(v13, v4);
  if ((v27 & 1) == 0)
  {
    swift_beginAccess(v25, v38, 33, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 24))(v25, v8, v4);
    swift_endAccess(v38);
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_delegate);
    if (Strong)
    {
      v29 = Strong;
      v30 = (uint64_t)v37;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v37, 1, 1, v4);
      sub_100593D6C(v30);
      sub_10001BE90(v30, (uint64_t *)&unk_100828370);
      v31 = *(void **)(v29 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapRoutePolyline);
      if (v31)
      {
        v32 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
        v33 = *(void **)(v29 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView);
        v34 = v31;
        objc_msgSend(v33, "removeOverlay:", v34);
        objc_msgSend(*(id *)(v29 + v32), "addOverlay:level:", v34, 1);
        swift_unknownObjectRelease(v29);

      }
      else
      {
        swift_unknownObjectRelease(v29);
      }
    }
  }
  return ((uint64_t (*)(char *, uint64_t))v19)(v8, v4);
}

uint64_t sub_100269784@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100631570);
  v4 = swift_getKeyPath(&unk_100631598);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_1002697E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  void (*v16)(_QWORD *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v29 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v4 = (uint64_t *)((char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100047110((uint64_t *)&unk_100828730);
  v6 = *(unsigned __int8 *)(v2 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v5, v7 + 4 * *(_QWORD *)(v2 + 72), v6 | 7);
  v30 = v8;
  *(_OWORD *)(v8 + 16) = xmmword_100624D00;
  v9 = (_QWORD *)(v8 + v7);
  KeyPath = swift_getKeyPath(&unk_100631570);
  v11 = swift_getKeyPath(&unk_100631598);
  static Published.subscript.getter(v9, v1, KeyPath, v11);
  swift_release(KeyPath);
  swift_release(v11);
  v12 = swift_getKeyPath(&unk_100631570);
  v13 = swift_getKeyPath(&unk_100631598);
  static Published.subscript.getter(v4, v1, v12, v13);
  swift_release(v12);
  swift_release(v13);
  v28 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets;
  v14 = *(double *)(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets);
  v27 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration;
  Date.addingTimeInterval(_:)(v15, v14 * *(double *)(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration) * 0.333333333);
  v16 = *(void (**)(_QWORD *, uint64_t))(v2 + 8);
  v17 = v29;
  v16(v4, v29);
  v18 = swift_getKeyPath(&unk_100631570);
  v19 = swift_getKeyPath(&unk_100631598);
  static Published.subscript.getter(v4, v1, v18, v19);
  swift_release(v18);
  swift_release(v19);
  v21 = v27;
  v20 = v28;
  Date.addingTimeInterval(_:)(v22, *(double *)(v1 + v28) * *(double *)(v1 + v27) * 0.666666667);
  v16(v4, v17);
  v23 = swift_getKeyPath(&unk_100631570);
  v24 = swift_getKeyPath(&unk_100631598);
  static Published.subscript.getter(v4, v1, v23, v24);
  swift_release(v23);
  swift_release(v24);
  Date.addingTimeInterval(_:)(v25, *(double *)(v1 + v20) * *(double *)(v1 + v21));
  v16(v4, v17);
  return v30;
}

uint64_t sub_100269A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  unint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t Strong;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  _BYTE v30[24];
  double v31;
  char v32;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10082A920);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v9);
  v29 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v28 - v15;
  KeyPath = swift_getKeyPath(&unk_100631528);
  v18 = swift_getKeyPath(&unk_100631550);
  static Published.subscript.getter(&v31, v1, KeyPath, v18);
  swift_release(KeyPath);
  swift_release(v18);
  sub_100269E08(v31, v32, (uint64_t)v16);
  v19 = v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  swift_beginAccess(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate, &v31, 0, 0);
  v20 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_100031D7C(v19, (uint64_t)v8);
  sub_100031D7C((uint64_t)v16, v20);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v21((uint64_t)v8, 1, v2) == 1)
  {
    if (v21(v20, 1, v2) == 1)
      goto LABEL_10;
  }
  else
  {
    sub_100031D7C((uint64_t)v8, (uint64_t)v13);
    if (v21(v20, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v20, v2);
      v22 = sub_10026B3EC();
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v5, v2, v22);
      v24 = *(void (**)(char *, uint64_t))(v3 + 8);
      v24(v5, v2);
      v24(v13, v2);
      sub_10001BE90((uint64_t)v8, (uint64_t *)&unk_100828370);
      if ((v23 & 1) != 0)
        return sub_10001BE90((uint64_t)v16, (uint64_t *)&unk_100828370);
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v13, v2);
  }
  sub_10001BE90((uint64_t)v8, &qword_10082A920);
LABEL_8:
  swift_beginAccess(v19, v30, 33, 0);
  sub_10026B3A4((uint64_t)v16, v19);
  swift_endAccess(v30);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_delegate);
  if (Strong)
  {
    v26 = Strong;
    v8 = v29;
    sub_100031D7C(v19, (uint64_t)v29);
    sub_10059582C((uint64_t)v8);
    swift_unknownObjectRelease(v26);
LABEL_10:
    sub_10001BE90((uint64_t)v8, (uint64_t *)&unk_100828370);
  }
  return sub_10001BE90((uint64_t)v16, (uint64_t *)&unk_100828370);
}

uint64_t sub_100269D94()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100631528);
  v2 = swift_getKeyPath(&unk_100631550);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100269E08@<X0>(double a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double *v11;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;

  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a3, 1, 1, v7);
  v11 = (double *)(v3 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth);
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth + 8) & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a3, 1, 1, v7);
  v13 = a1;
  v14 = *v11;
  if (a1 < 0.0)
  {
    v13 = 0.0;
    if (v14 >= 0.0)
      goto LABEL_9;
    goto LABEL_8;
  }
  if (v14 < a1)
LABEL_8:
    v13 = *v11;
LABEL_9:
  v15 = *(double *)(v3 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
  v16 = floor((v13 + *(double *)(v3 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount))* (*(double *)(v3 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets)* v15/ v14)/ v15);
  v17 = ceil(*(double *)(v3 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration) / v15) + -1.0;
  if (v17 < v16)
    v16 = v17;
  v18 = v15 * 0.5 + v15 * v16;
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v3 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate, v7);
  Date.addingTimeInterval(_:)(v19, v18);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a3, 0, 1, v7);
}

uint64_t sub_100269FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t);
  double v7;
  uint64_t (*v8)(char *, uint64_t);
  uint64_t result;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate;
  v6 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v6(v4, v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate, v1);
  v7 = Date.timeIntervalSince(_:)(v4);
  v8 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
  result = v8(v4, v1);
  v10 = *(double *)(v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
  v11 = v7 / v10;
  if ((~COERCE__INT64(v7 / v10) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v11 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v11 < 9.22337204e18)
  {
    v12 = v10 * 0.5 + v10 * (double)(uint64_t)v11;
    v13 = ((uint64_t (*)(char *, uint64_t, uint64_t))v6)(v4, v5, v1);
    Date.addingTimeInterval(_:)(v13, v12);
    return v8(v4, v1);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10026A114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  double v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  _BYTE v29[24];

  v1 = v0;
  v2 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v2);
  v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v29[-v10 - 8];
  __chkstk_darwin(v12);
  v14 = &v29[-v13 - 8];
  v15 = v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  swift_beginAccess(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate, v29, 0, 0);
  sub_100031D7C(v15, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001BE90((uint64_t)v4, (uint64_t *)&unk_100828370);
LABEL_5:
    *(double *)&result = 0.0;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v4, v5);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth + 8) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
    goto LABEL_5;
  }
  v17 = *(double *)(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth);
  KeyPath = swift_getKeyPath(&unk_100631570);
  v19 = swift_getKeyPath(&unk_100631598);
  static Published.subscript.getter(v8, v1, KeyPath, v19);
  swift_release(KeyPath);
  swift_release(v19);
  Date.addingTimeInterval(_:)(v20, *(double *)(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets)* *(double *)(v1 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration));
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v8, v5);
  v22 = swift_getKeyPath(&unk_100631570);
  v23 = swift_getKeyPath(&unk_100631598);
  static Published.subscript.getter(v8, v1, v22, v23);
  swift_release(v22);
  swift_release(v23);
  v24 = Date.timeIntervalSince(_:)(v8);
  v21(v8, v5);
  v21(v11, v5);
  v25 = swift_getKeyPath(&unk_100631570);
  v26 = swift_getKeyPath(&unk_100631598);
  static Published.subscript.getter(v11, v1, v25, v26);
  swift_release(v25);
  swift_release(v26);
  v27 = Date.timeIntervalSince(_:)(v11);
  v21(v11, v5);
  v21(v14, v5);
  *(double *)&result = v17 * (v27 / v24);
  return result;
}

uint64_t sub_10026A410(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  double v17;
  double v18;
  double v19;
  double *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  unint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  void (*v41)(char *, uint64_t);

  v3 = v2;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v38 - v12;
  result = __chkstk_darwin(v11);
  v16 = (char *)&v38 - v15;
  v17 = *(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration);
  v18 = *(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
  v19 = *(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets) * v18;
  if (v19 >= v17)
  {
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v35(v13, v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate, v6);
    KeyPath = swift_getKeyPath(&unk_100631570);
    v37 = swift_getKeyPath(&unk_100631598);
    v35(v10, (uint64_t)v13, v6);
    swift_retain(v3);
    static Published.subscript.setter(v10, v3, KeyPath, v37);
    sub_100269448();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  else
  {
    if ((a2 & 1) == 0
      && (*(_BYTE *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom + 8) & 1) == 0)
    {
      v20 = (double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth);
      if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth + 8) & 1) == 0 && *v20 > 0.0)
      {
        v21 = v19 / *v20;
        v22 = (v18 * ceil(v17 / v18) - v19) / v21;
        v23 = 0.0;
        if (*(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom)
           - *(double *)&a1
           + *(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount) >= 0.0)
          v23 = *(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom)
              - *(double *)&a1
              + *(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount);
        if (v22 >= v23)
          v22 = v23;
        *(double *)(v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount) = v22;
        v24 = v21 * v22;
        v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
        v25 = v40(v13, v2 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate, v6);
        Date.addingTimeInterval(_:)(v25, v24);
        v41 = *(void (**)(char *, uint64_t))(v7 + 8);
        v41(v13, v6);
        v26 = swift_getKeyPath(&unk_100631570);
        v27 = swift_getKeyPath(&unk_100631598);
        static Published.subscript.getter(v13, v3, v26, v27);
        swift_release(v26);
        v28 = v27;
        v29 = v41;
        swift_release(v28);
        v30 = sub_10026B3EC();
        LOBYTE(v26) = dispatch thunk of static Equatable.== infix(_:_:)(v13, v16, v6, v30);
        v29(v13, v6);
        if ((v26 & 1) == 0)
        {
          v31 = (void (*)(char *, char *, uint64_t))v40;
          v40(v13, (uint64_t)v16, v6);
          v39 = swift_getKeyPath(&unk_100631570);
          v32 = swift_getKeyPath(&unk_100631598);
          v31(v10, v13, v6);
          swift_retain(v3);
          v33 = v32;
          v29 = v41;
          static Published.subscript.setter(v10, v3, v39, v33);
          sub_100269448();
          v29(v13, v6);
        }
        result = ((uint64_t (*)(char *, uint64_t))v29)(v16, v6);
      }
    }
    v34 = v3 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom;
    *(double *)v34 = *(double *)&a1;
    *(_BYTE *)(v34 + 8) = a2 & 1;
  }
  return result;
}

uint64_t sub_10026A764(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, int a6, int a7, double a8, double a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  char *v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  double v46;
  uint64_t v47;
  int v48;
  char *v49;
  uint64_t v50;
  int v51;
  double v52;
  char v53;
  uint64_t v54;
  char v55;

  v10 = v9;
  v51 = a7;
  v48 = a6;
  v46 = *(double *)&a3;
  v47 = a5;
  v49 = a2;
  v43 = a1;
  v45 = a4 & 1;
  v13 = sub_100047110((uint64_t *)&unk_100828370);
  __chkstk_darwin(v13);
  v50 = (uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v38 - v20;
  v22 = sub_100047110(&qword_10082A928);
  v23 = *(_QWORD *)(v22 - 8);
  v40 = v22;
  v41 = v23;
  __chkstk_darwin(v22);
  v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets) = 0x404E000000000000;
  *(_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration) = 0x404E000000000000;
  v26 = v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth;
  *(_QWORD *)v26 = 0;
  *(_BYTE *)(v26 + 8) = 1;
  v27 = v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties__touchPoint;
  v54 = 0;
  v55 = 1;
  v42 = sub_100047110(&qword_1008221A0);
  Published.init(initialValue:)(&v54, v42);
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v27, v25, v22);
  v28 = v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_delegate;
  *(_QWORD *)(v28 + 8) = 0;
  swift_unknownObjectWeakInit(v28, 0);
  v44 = v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  (*(void (**)(void))(v16 + 56))();
  *(_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount) = 0;
  v29 = v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom;
  *(_QWORD *)v29 = 0;
  *(_BYTE *)(v29 + 8) = 1;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v31 = v43;
  v30(v21, v43, v15);
  swift_beginAccess(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties__onScreenStartDate, &v54, 33, 0);
  v30(v19, (uint64_t)v21, v15);
  Published.init(initialValue:)(v19, v15);
  v39 = *(void (**)(char *, uint64_t))(v16 + 8);
  v39(v21, v15);
  swift_endAccess(&v54);
  v30((char *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBucketStartDate), v31, v15);
  swift_beginAccess(v27, &v54, 33, 0);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v27, v40);
  v32 = v46;
  v52 = v46;
  LOBYTE(v23) = v45;
  v53 = v45;
  Published.init(initialValue:)(&v52, v42);
  swift_endAccess(&v54);
  *(_QWORD *)v26 = v47;
  *(_BYTE *)(v26 + 8) = v48 & 1;
  v30((char *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate), v31, v15);
  v33 = v49;
  v30((char *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutEndDate), (uint64_t)v49, v15);
  *(double *)(v10 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration) = Date.timeIntervalSince(_:)(v31);
  sub_10026AB2C(v51, a8, a9);
  v34 = v50;
  sub_100269E08(v32, v23, v50);
  v35 = (void (*)(uint64_t, uint64_t))v39;
  v39(v33, v15);
  v35(v31, v15);
  v36 = v44;
  swift_beginAccess(v44, &v54, 33, 0);
  sub_10004D99C(v34, v36);
  swift_endAccess(&v54);
  return v10;
}

void sub_10026AB2C(int a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  double v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  double *v51;
  double v52;
  void (*v53)(uint64_t, char *, uint64_t);
  double v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  int v69;
  _BYTE v70[24];
  char v71[24];

  v4 = v3;
  v8 = sub_100047110((uint64_t *)&unk_100828370);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v64 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v64 - v15;
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v19);
  v24 = (char *)&v64 - v23;
  __chkstk_darwin(v22);
  v26 = (char *)&v64 - v25;
  v69 = a1;
  if ((a1 & 1) != 0)
  {
    v27 = *(double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration);
    v28 = v27 / a3;
    if (v27 / a3 < a2)
      v28 = a2;
    *(double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration) = v28;
    v29 = ceil(v27 / v28);
    if (v29 <= a3)
      a3 = v29;
  }
  else
  {
    *(double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration) = a2;
  }
  *(double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets) = a3;
  v30 = v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
  swift_beginAccess(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate, v71, 0, 0);
  sub_100031D7C(v30, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_10001BE90((uint64_t)v16, (uint64_t *)&unk_100828370);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount) = 0;
    v31 = v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom;
    *(_QWORD *)v31 = 0;
    *(_BYTE *)(v31 + 8) = 0;
    sub_10026A410(0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_delegate);
    if (Strong)
    {
      v33 = Strong;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v14, 1, 1, v17);
      sub_100593D6C((uint64_t)v14);
      sub_10001BE90((uint64_t)v14, (uint64_t *)&unk_100828370);
      v34 = *(void **)(v33 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapRoutePolyline);
      if (v34)
      {
        v35 = OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView;
        v36 = *(void **)(v33 + OBJC_IVAR___CHWorkoutDetailedMetricsViewController_mapView);
        v37 = v34;
        objc_msgSend(v36, "removeOverlay:", v37);
        objc_msgSend(*(id *)(v33 + v35), "addOverlay:level:", v37, 1);
        swift_unknownObjectRelease(v33);

      }
      else
      {
        swift_unknownObjectRelease(v33);
      }
    }
  }
  else
  {
    v65 = v14;
    v67 = v11;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v26, v16, v17);
    v38 = v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate;
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    v39(v24, v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate, v17);
    v68 = v26;
    v40 = Date.timeIntervalSince(_:)(v24);
    v41 = v21;
    v42 = *(void (**)(char *, uint64_t))(v18 + 8);
    v42(v24, v17);
    v43 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration;
    v44 = *(double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
    v45 = floor(v40 / v44);
    v46 = ceil(*(double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration) / v44) + -1.0;
    if (v46 < v45)
      v45 = v46;
    v47 = v44 * 0.5 + v44 * v45;
    v48 = ((uint64_t (*)(char *, uint64_t, uint64_t))v39)(v24, v38, v17);
    v66 = v41;
    Date.addingTimeInterval(_:)(v48, v47);
    v49 = v24;
    v50 = v42;
    v42(v49, v17);
    v51 = (double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth);
    if ((*(_BYTE *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth + 8) & 1) != 0
      || (v52 = *(double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets)
              * *(double *)(v4 + v43),
          v52 <= 0.0)
      || (v69 & 1) != 0)
    {
      v53 = (void (*)(uint64_t, char *, uint64_t))v39;
      v56 = 0.0;
      *(_QWORD *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount) = 0;
      v57 = v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom;
      *(_QWORD *)v57 = 0;
      *(_BYTE *)(v57 + 8) = 0;
    }
    else
    {
      v53 = (void (*)(uint64_t, char *, uint64_t))v39;
      v54 = *v51;
      *(double *)(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetAmount) = v40 * (*v51 / v52);
      v55 = v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_offsetFrom;
      *(_QWORD *)v55 = 0;
      *(_BYTE *)(v55 + 8) = 0;
      v56 = v54 * 0.5;
    }
    v58 = v66;
    v59 = (uint64_t)v67;
    v60 = (uint64_t)v65;
    sub_10026A410(*(uint64_t *)&v56, 0);
    v53(v60, v58, v17);
    v61 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56);
    v61(v60, 0, 1, v17);
    sub_1001B9DF4(v60, v59);
    swift_beginAccess(v30, v70, 33, 0);
    sub_10004D99C(v59, v30);
    swift_endAccess(v70);
    v62 = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_delegate);
    if (v62)
    {
      v63 = v62;
      v53(v60, v58, v17);
      v61(v60, 0, 1, v17);
      sub_10059582C(v60);
      swift_unknownObjectRelease(v63);
      sub_10001BE90(v60, (uint64_t *)&unk_100828370);
    }
    v50(v58, v17);
    v50(v68, v17);
  }
}

uint64_t sub_10026B058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutStartDate;
  v2 = type metadata accessor for Date(0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutEndDate, v2);
  v3(v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBucketStartDate, v2);
  v4 = v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties__onScreenStartDate;
  v5 = sub_100047110(&qword_10082A930);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties__touchPoint;
  v7 = sub_100047110(&qword_10082A928);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  sub_1000F61B4(v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_delegate);
  sub_10001BE90(v0 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate, (uint64_t *)&unk_100828370);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10026B15C()
{
  return type metadata accessor for WorkoutChartProperties(0);
}

uint64_t type metadata accessor for WorkoutChartProperties(uint64_t a1)
{
  uint64_t result;

  result = qword_10082A668;
  if (!qword_10082A668)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutChartProperties);
  return result;
}

void sub_10026B1A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[13];

  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = v10[0];
    v10[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v10[3] = v10[0];
    sub_10026B308(319, &qword_10082A678, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v5 <= 0x3F)
    {
      v10[4] = *(_QWORD *)(v4 - 8) + 64;
      v10[5] = (char *)&value witness table for Builtin.Int64 + 64;
      v10[6] = (char *)&value witness table for Builtin.Int64 + 64;
      v10[7] = "\t";
      sub_10026B2B0(319);
      if (v7 <= 0x3F)
      {
        v10[8] = *(_QWORD *)(v6 - 8) + 64;
        v10[9] = &unk_1006314B0;
        sub_10026B308(319, (unint64_t *)&qword_100823E60, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v9 <= 0x3F)
        {
          v10[10] = *(_QWORD *)(v8 - 8) + 64;
          v10[11] = (char *)&value witness table for Builtin.Int64 + 64;
          v10[12] = "\t";
          swift_updateClassMetadata2(a1, 256, 13, v10, a1 + 80);
        }
      }
    }
  }
}

void sub_10026B2B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10082A680)
  {
    v2 = sub_100007050(&qword_1008221A0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10082A680);
  }
}

void sub_10026B308(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for Date(255);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_10026B360@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for WorkoutChartProperties(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_10026B3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110((uint64_t *)&unk_100828370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_10026B3EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100824D50;
  if (!qword_100824D50)
  {
    v1 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Date, v1);
    atomic_store(result, (unint64_t *)&qword_100824D50);
  }
  return result;
}

void sub_10026B43C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "briskColors");
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, "nonGradientTextColor");

    if (v2)
    {
      qword_10082A938 = (uint64_t)v2;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10026B4AC()
{
  uint64_t result;

  sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
  result = static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)(UIFontTextStyleTitle3, 0, 0x100000000, *(_QWORD *)&UIFontWeightBold, 0, 0);
  qword_10082A940 = result;
  return result;
}

id sub_10026B528(uint64_t a1)
{
  return sub_100222254(a1, &UIFontTextStyleSubheadline, &qword_10082A948);
}

id sub_10026B53C(uint64_t a1)
{
  return sub_100222254(a1, &UIFontTextStyleFootnote, &qword_10082A950);
}

char *sub_10026B550(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  id v61;
  id v62;
  void *v63;
  objc_super v65;

  v9 = &v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnAchievement];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnShowAllAchievements];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = &v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_templateUniqueName];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_stackTemplateUniqueNames] = _swiftEmptyArrayStorage;
  v12 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_roundedView;
  v13 = objc_allocWithZone((Class)UIView);
  v14 = v4;
  v15 = objc_msgSend(v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = objc_msgSend(v15, "layer");
  objc_msgSend(v16, "setCornerRadius:", 15.0);

  objc_msgSend(v15, "setClipsToBounds:", 1);
  v17 = sub_100032490();
  objc_msgSend(v15, "setBackgroundColor:", v17);

  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v4[v12] = v15;
  v18 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_sectionLabel;
  v19 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, "setLineBreakMode:", 0);
  objc_msgSend(v19, "setNumberOfLines:", 0);
  v20 = (void *)UILabel.withLineBreakMode(_:)(0);

  if (qword_10081D930 != -1)
    swift_once(&qword_10081D930, sub_10026B4AC);
  v21 = (void *)UILabel.withFont(_:)(qword_10082A940);

  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v14[v18] = v21;
  v22 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_achievementLabel;
  v23 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v24 = (void *)UILabel.textAlignment(_:)(0);

  objc_msgSend(v24, "setLineBreakMode:", 0);
  objc_msgSend(v24, "setNumberOfLines:", 0);
  v25 = (void *)UILabel.withLineBreakMode(_:)(0);

  objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v14[v22] = v25;
  v26 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView;
  v27 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v28 = (void *)UIView.withUserInteractionEnabled(_:)(1);

  v29 = (void *)UIView.withContentMode(_:)(1);
  objc_msgSend(v29, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v14[v26] = v29;
  v30 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView;
  v31 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v32 = (void *)UIView.withContentMode(_:)(8);

  objc_msgSend(v32, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v14[v30] = v32;
  v33 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_showAllButton;
  v34 = type metadata accessor for ShowAllButton();
  v35 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v34)), "init");
  if (qword_10081D940 != -1)
    swift_once(&qword_10081D940, sub_10026B53C);
  v36 = (void *)UIButton.withTitleLabelFont(_:)(qword_10082A950);

  if (qword_10081D928 != -1)
    swift_once(&qword_10081D928, sub_10026B43C);
  v37 = (void *)UIButton.withTitleTextColor(_:for:)(qword_10082A938, 0);

  v38 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v39 = String._bridgeToObjectiveC()();
  v40 = objc_msgSend(v38, "localizedStringForKey:value:table:", v39, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v42 = v41;

  v43 = String._bridgeToObjectiveC()();
  objc_msgSend(v37, "setTitle:forState:", v43, objc_msgSend(v37, "state"));
  swift_bridgeObjectRelease(v42);

  v44 = objc_msgSend(v37, "titleLabel");
  objc_msgSend(v44, "setLineBreakMode:", 0);

  v45 = objc_msgSend(v37, "titleLabel");
  objc_msgSend(v45, "setLineBreakMode:", 0);

  v46 = objc_msgSend(v37, "titleLabel");
  objc_msgSend(v46, "setNumberOfLines:", 0);

  objc_msgSend(v37, "setContentHorizontalAlignment:", 2);
  objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v14[v33] = v37;

  v65.receiver = v14;
  v65.super_class = (Class)type metadata accessor for TrophyCaseGoForItCell();
  v47 = objc_msgSendSuper2(&v65, "initWithFrame:", a1, a2, a3, a4);
  v48 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v49 = (char *)v47;
  v50 = objc_msgSend(v48, "initWithTarget:action:", v49, "didTapTopAchievement:");
  v51 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView;
  objc_msgSend(*(id *)&v49[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView], "addGestureRecognizer:", v50);
  v52 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_achievementLabel;
  v53 = *(id *)&v49[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_achievementLabel];
  if (FIUILocaleIsRightToLeft(v53))
    v54 = 2;
  else
    v54 = 0;
  objc_msgSend(v53, "setTextAlignment:", v54);

  v55 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_showAllButton;
  v56 = *(id *)&v49[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_showAllButton];
  if (FIUILocaleIsRightToLeft(v56))
    v57 = 1;
  else
    v57 = 2;
  objc_msgSend(v56, "setContentHorizontalAlignment:", v57);

  v58 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView;
  v59 = *(id *)&v49[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView];
  if (FIUILocaleIsRightToLeft(v59))
    v60 = 7;
  else
    v60 = 8;
  objc_msgSend(v59, "setContentMode:", v60);

  objc_msgSend(*(id *)&v49[v55], "addTarget:action:forControlEvents:", v49, "didTapShowAllButton:", 64);
  v61 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v62 = objc_msgSend(v61, "preferredContentSizeCategory");

  LOBYTE(v61) = UIContentSizeCategory.isAccessibilityCategory.getter(v62);
  if ((v61 & 1) != 0)
    objc_msgSend(*(id *)&v49[v52], "setTextAlignment:", 1);
  v63 = *(void **)&v49[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_roundedView];
  objc_msgSend(v63, "addSubview:", *(_QWORD *)&v49[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_sectionLabel]);
  objc_msgSend(v63, "addSubview:", *(_QWORD *)&v49[v51]);
  objc_msgSend(v63, "addSubview:", *(_QWORD *)&v49[v52]);
  objc_msgSend(v63, "addSubview:", *(_QWORD *)&v49[v58]);
  objc_msgSend(v63, "addSubview:", *(_QWORD *)&v49[v55]);
  objc_msgSend(v49, "addSubview:", v63);
  sub_10026BD3C();

  return v49;
}

void sub_10026BD3C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  id v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  id v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  Class isa;

  v160 = sub_100047110((uint64_t *)&unk_100828340);
  v1 = swift_allocObject(v160, 224, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1006315C0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_roundedView];
  v3 = objc_msgSend(v2, "topAnchor");
  v4 = objc_msgSend(v0, "topAnchor");
  v5 = objc_msgSend(v3, "constraintEqualToAnchor:", v4);

  *(_QWORD *)(v1 + 32) = v5;
  v6 = objc_msgSend(v2, "bottomAnchor");
  v7 = objc_msgSend(v0, "bottomAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v1 + 40) = v8;
  v9 = objc_msgSend(v2, "leadingAnchor");
  v10 = objc_msgSend(v0, "leadingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v1 + 48) = v11;
  v12 = objc_msgSend(v2, "trailingAnchor");
  v13 = objc_msgSend(v0, "trailingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v1 + 56) = v14;
  v15 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView];
  v16 = objc_msgSend(v15, "topAnchor");
  v17 = objc_msgSend(v2, "topAnchor");
  v18 = objc_msgSend(v16, "constraintGreaterThanOrEqualToAnchor:constant:", v17, 16.0);

  *(_QWORD *)(v1 + 64) = v18;
  v19 = objc_msgSend(v15, "centerYAnchor");
  v20 = objc_msgSend(v2, "centerYAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v1 + 72) = v21;
  v22 = objc_msgSend(v15, "leadingAnchor");
  v23 = objc_msgSend(v2, "leadingAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v23, 16.0);

  *(_QWORD *)(v1 + 80) = v24;
  v25 = objc_msgSend(v15, "widthAnchor");
  v26 = objc_msgSend(v15, "heightAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v1 + 88) = v27;
  v28 = objc_msgSend(v15, "widthAnchor");
  v29 = objc_msgSend(v28, "constraintEqualToConstant:", 72.0);

  *(_QWORD *)(v1 + 96) = v29;
  v30 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_sectionLabel];
  v31 = objc_msgSend(v30, "topAnchor");
  v32 = objc_msgSend(v2, "topAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v32, 16.0);

  *(_QWORD *)(v1 + 104) = v33;
  v34 = objc_msgSend(v30, "leadingAnchor");
  v35 = objc_msgSend(v15, "trailingAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v35, 12.0);

  *(_QWORD *)(v1 + 112) = v36;
  v157 = v30;
  v37 = objc_msgSend(v30, "trailingAnchor");
  v161 = v0;
  v38 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView];
  v39 = objc_msgSend(v38, "leadingAnchor");
  v40 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v39, -12.0);

  *(_QWORD *)(v1 + 120) = v40;
  v41 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_achievementLabel];
  v42 = objc_msgSend(v41, "topAnchor");
  v43 = objc_msgSend(v30, "lastBaselineAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, 5.0);

  *(_QWORD *)(v1 + 128) = v44;
  v45 = objc_msgSend(v41, "leadingAnchor");
  v46 = objc_msgSend(v15, "trailingAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v46, 12.0);

  *(_QWORD *)(v1 + 136) = v47;
  v158 = v41;
  v48 = objc_msgSend(v41, "trailingAnchor");
  v49 = objc_msgSend(v38, "leadingAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, -12.0);

  *(_QWORD *)(v1 + 144) = v50;
  v51 = objc_msgSend(v41, "bottomAnchor");
  v52 = objc_msgSend(v2, "bottomAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:constant:", v52, -16.0);

  *(_QWORD *)(v1 + 152) = v53;
  v54 = objc_msgSend(v38, "topAnchor");
  v55 = objc_msgSend(v2, "topAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:constant:", v55, 16.0);

  *(_QWORD *)(v1 + 160) = v56;
  v57 = objc_msgSend(v38, "trailingAnchor");
  v58 = objc_msgSend(v2, "trailingAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:constant:", v58, -16.0);

  *(_QWORD *)(v1 + 168) = v59;
  v60 = objc_msgSend(v38, "heightAnchor");
  v61 = objc_msgSend(v60, "constraintEqualToConstant:", 34.0);

  *(_QWORD *)(v1 + 176) = v61;
  v62 = objc_msgSend(v38, "widthAnchor");
  v63 = objc_msgSend(v15, "widthAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

  *(_QWORD *)(v1 + 184) = v64;
  v65 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_showAllButton];
  v66 = objc_msgSend(v65, "topAnchor");
  v67 = objc_msgSend(v38, "bottomAnchor");
  v68 = objc_msgSend(v66, "constraintGreaterThanOrEqualToAnchor:constant:", v67, 12.0);

  *(_QWORD *)(v1 + 192) = v68;
  v69 = objc_msgSend(v65, "bottomAnchor");
  v70 = objc_msgSend(v2, "bottomAnchor");
  v71 = objc_msgSend(v69, "constraintEqualToAnchor:constant:", v70, -16.0);

  *(_QWORD *)(v1 + 200) = v71;
  v72 = objc_msgSend(v65, "trailingAnchor");
  v73 = objc_msgSend(v2, "trailingAnchor");
  v74 = objc_msgSend(v72, "constraintEqualToAnchor:constant:", v73, -16.0);

  *(_QWORD *)(v1 + 208) = v74;
  v75 = objc_msgSend(v65, "leadingAnchor");
  v76 = objc_msgSend(v38, "leadingAnchor");
  v77 = objc_msgSend(v75, "constraintEqualToAnchor:", v76);

  *(_QWORD *)(v1 + 216) = v77;
  specialized Array._endMutation()(v78);
  v159 = v1;
  v79 = swift_allocObject(v160, 216, 7);
  *(_OWORD *)(v79 + 16) = xmmword_1006315D0;
  v80 = v2;
  v81 = objc_msgSend(v2, "topAnchor");
  v82 = objc_msgSend(v161, "topAnchor");
  v83 = objc_msgSend(v81, "constraintEqualToAnchor:", v82);

  *(_QWORD *)(v79 + 32) = v83;
  v84 = objc_msgSend(v2, "bottomAnchor");
  v85 = objc_msgSend(v161, "bottomAnchor");
  v86 = objc_msgSend(v84, "constraintEqualToAnchor:", v85);

  *(_QWORD *)(v79 + 40) = v86;
  v87 = objc_msgSend(v2, "leadingAnchor");
  v88 = objc_msgSend(v161, "leadingAnchor");
  v89 = objc_msgSend(v87, "constraintEqualToAnchor:", v88);

  *(_QWORD *)(v79 + 48) = v89;
  v90 = objc_msgSend(v2, "trailingAnchor");
  v91 = objc_msgSend(v161, "trailingAnchor");
  v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

  *(_QWORD *)(v79 + 56) = v92;
  v93 = objc_msgSend(v157, "topAnchor");
  v94 = objc_msgSend(v80, "topAnchor");
  v95 = objc_msgSend(v93, "constraintEqualToAnchor:constant:", v94, 16.0);

  *(_QWORD *)(v79 + 64) = v95;
  v96 = objc_msgSend(v157, "leadingAnchor");
  v97 = objc_msgSend(v80, "leadingAnchor");
  v98 = objc_msgSend(v96, "constraintEqualToAnchor:constant:", v97, 12.0);

  *(_QWORD *)(v79 + 72) = v98;
  v99 = objc_msgSend(v157, "trailingAnchor");
  v100 = objc_msgSend(v80, "trailingAnchor");
  v101 = objc_msgSend(v99, "constraintEqualToAnchor:constant:", v100, -16.0);

  *(_QWORD *)(v79 + 80) = v101;
  v102 = objc_msgSend(v15, "topAnchor");
  v103 = objc_msgSend(v157, "bottomAnchor");
  v104 = objc_msgSend(v102, "constraintGreaterThanOrEqualToAnchor:constant:", v103, 16.0);

  *(_QWORD *)(v79 + 88) = v104;
  v105 = objc_msgSend(v15, "centerXAnchor");
  v106 = objc_msgSend(v80, "centerXAnchor");
  v107 = objc_msgSend(v105, "constraintEqualToAnchor:", v106);

  *(_QWORD *)(v79 + 96) = v107;
  v108 = objc_msgSend(v15, "widthAnchor");
  v109 = objc_msgSend(v15, "heightAnchor");
  v110 = objc_msgSend(v108, "constraintEqualToAnchor:", v109);

  *(_QWORD *)(v79 + 104) = v110;
  v111 = objc_msgSend(v15, "widthAnchor");
  v112 = objc_msgSend(v80, "widthAnchor");
  v113 = objc_msgSend(v111, "constraintEqualToAnchor:multiplier:", v112, 0.6);

  *(_QWORD *)(v79 + 112) = v113;
  v114 = objc_msgSend(v158, "topAnchor");
  v115 = objc_msgSend(v15, "bottomAnchor");
  v116 = objc_msgSend(v114, "constraintEqualToAnchor:constant:", v115, 20.0);

  *(_QWORD *)(v79 + 120) = v116;
  v117 = objc_msgSend(v158, "leadingAnchor");
  v118 = objc_msgSend(v80, "leadingAnchor");
  v119 = objc_msgSend(v117, "constraintEqualToAnchor:constant:", v118, 16.0);

  *(_QWORD *)(v79 + 128) = v119;
  v120 = objc_msgSend(v158, "trailingAnchor");
  v121 = objc_msgSend(v80, "trailingAnchor");
  v122 = objc_msgSend(v120, "constraintEqualToAnchor:constant:", v121, -16.0);

  *(_QWORD *)(v79 + 136) = v122;
  v123 = objc_msgSend(v38, "topAnchor");
  v124 = objc_msgSend(v158, "bottomAnchor");
  v125 = objc_msgSend(v123, "constraintGreaterThanOrEqualToAnchor:constant:", v124, 16.0);

  *(_QWORD *)(v79 + 144) = v125;
  v126 = objc_msgSend(v38, "leadingAnchor");
  v127 = objc_msgSend(v80, "leadingAnchor");
  v128 = objc_msgSend(v126, "constraintEqualToAnchor:constant:", v127, 16.0);

  *(_QWORD *)(v79 + 152) = v128;
  v129 = objc_msgSend(v38, "trailingAnchor");
  v130 = objc_msgSend(v80, "centerXAnchor");
  v131 = objc_msgSend(v129, "constraintEqualToAnchor:constant:", v130, -5.0);

  *(_QWORD *)(v79 + 160) = v131;
  v132 = objc_msgSend(v38, "heightAnchor");
  v133 = objc_msgSend(v132, "constraintEqualToConstant:", 41.0);

  *(_QWORD *)(v79 + 168) = v133;
  v134 = objc_msgSend(v38, "bottomAnchor");
  v135 = objc_msgSend(v80, "bottomAnchor");
  v136 = objc_msgSend(v134, "constraintEqualToAnchor:constant:", v135, -16.0);

  *(_QWORD *)(v79 + 176) = v136;
  v137 = objc_msgSend(v65, "topAnchor");
  v138 = objc_msgSend(v158, "bottomAnchor");
  v139 = objc_msgSend(v137, "constraintGreaterThanOrEqualToAnchor:constant:", v138, 16.0);

  *(_QWORD *)(v79 + 184) = v139;
  v140 = objc_msgSend(v65, "bottomAnchor");
  v141 = objc_msgSend(v80, "bottomAnchor");
  v142 = objc_msgSend(v140, "constraintEqualToAnchor:constant:", v141, -16.0);

  *(_QWORD *)(v79 + 192) = v142;
  v143 = objc_msgSend(v65, "trailingAnchor");
  v144 = objc_msgSend(v80, "trailingAnchor");
  v145 = objc_msgSend(v143, "constraintEqualToAnchor:constant:", v144, -16.0);

  *(_QWORD *)(v79 + 200) = v145;
  v146 = objc_msgSend(v65, "leadingAnchor");
  v147 = objc_msgSend(v80, "centerXAnchor");
  v148 = objc_msgSend(v146, "constraintEqualToAnchor:constant:", v147, 16.0);

  *(_QWORD *)(v79 + 208) = v148;
  specialized Array._endMutation()(v149);
  v150 = v79;
  v151 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v152 = objc_msgSend(v151, "preferredContentSizeCategory");

  v153 = UIContentSizeCategory.isAccessibilityCategory.getter(v152);
  if ((v153 & 1) != 0)
    v154 = v159;
  else
    v154 = v150;
  if ((v153 & 1) != 0)
    v155 = v150;
  else
    v155 = v159;
  swift_bridgeObjectRelease(v154);
  v156 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v156, "activateConstraints:", isa, swift_bridgeObjectRelease(v155).n128_f64[0]);

}

void sub_10026D0B8(void *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  id v28;
  id v29;
  double v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  void *v40;
  __n128 v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  _QWORD *v76;
  void **aBlock;
  uint64_t v78;
  uint64_t (*v79)(uint64_t);
  void *v80;
  uint64_t (*v81)();
  uint64_t v82;
  CGRect v83;

  v3 = v2;
  v75 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v73 = *(_QWORD *)(v5 - 8);
  v74 = v5;
  __chkstk_darwin(v5);
  v72 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  __chkstk_darwin(v7);
  v69 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS.QoSClass(0);
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v18, "bounds");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v83.origin.x = v20;
  v83.origin.y = v22;
  v83.size.width = v24;
  v83.size.height = v26;
  v27 = CGRectGetWidth(v83) + -20.0;
  v28 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v29 = objc_msgSend(v28, "preferredContentSizeCategory");

  LOBYTE(v28) = UIContentSizeCategory.isAccessibilityCategory.getter(v29);
  if ((v28 & 1) != 0)
    v30 = v27 * 0.6;
  else
    v30 = 72.0;
  v31 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView];
  sub_100047110((uint64_t *)&unk_10083D730);
  v32 = a1;
  LocalizedStringResource.init(stringLiteral:)(0x64656E726145, 0xE600000000000000);
  v33 = EntityProperty<>.init(title:)(v17);
  v34 = v32;
  LOBYTE(aBlock) = objc_msgSend(v34, "unearned", swift_retain(v33).n128_f64[0]) ^ 1;
  EntityProperty.wrappedValue.setter(&aBlock);

  swift_release(v33);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v35 = sub_1000083D8((unint64_t *)&qword_10081F608, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
  v36 = sub_100047110((uint64_t *)&unk_10083D740);
  v37 = sub_1000283C4((unint64_t *)&qword_10081F610, (uint64_t *)&unk_10083D740);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v36, v37, v12, v35);
  aBlock = (void **)v33;
  v78 = (uint64_t)v34;
  v38 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
  v39 = sub_1000F49B4();
  v40 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(&aBlock, v14, &type metadata for AwardEntity, v39);
  UIView.annotate(with:)(v40, v41);

  v42 = objc_msgSend(v34, "template");
  v43 = objc_msgSend(v42, "uniqueName");

  if (v43)
  {
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v46 = v45;

  }
  else
  {
    v44 = 0;
    v46 = 0;
  }
  v47 = (uint64_t *)&v3[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_templateUniqueName];
  v48 = *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_templateUniqueName + 8];
  *v47 = v44;
  v47[1] = v46;
  swift_bridgeObjectRelease(v48);
  v49 = v75;
  if (objc_msgSend(v75, "hasCachedThumbnailImageForAchievement:size:", v34, v30, v30))
  {
    v50 = objc_msgSend(v49, "thumbnailImageForAchievement:size:", v34, v30, v30);
    objc_msgSend(v31, "setImage:", v50);

  }
  else
  {
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v52 = v67;
    v51 = v68;
    (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v11, enum case for DispatchQoS.QoSClass.userInitiated(_:), v68);
    v53 = (void *)static OS_dispatch_queue.global(qos:)(v11);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v51);
    v54 = swift_allocObject(&unk_100792100, 56, 7);
    *(_QWORD *)(v54 + 16) = v49;
    *(_QWORD *)(v54 + 24) = v34;
    *(double *)(v54 + 32) = v30;
    *(double *)(v54 + 40) = v30;
    *(_QWORD *)(v54 + 48) = v3;
    v81 = sub_10026F0C4;
    v82 = v54;
    aBlock = _NSConcreteStackBlock;
    v78 = 1107296256;
    v79 = sub_10002D0F8;
    v80 = &unk_100792118;
    v55 = _Block_copy(&aBlock);
    v56 = v34;
    v57 = v49;
    v58 = v3;
    v59 = v69;
    static DispatchQoS.unspecified.getter(v58);
    v76 = _swiftEmptyArrayStorage;
    v60 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v61 = sub_100047110(&qword_100828C80);
    v62 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
    v63 = v72;
    v64 = v61;
    v65 = v74;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v76, v64, v62, v74, v60);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v59, v63, v55);
    _Block_release(v55);

    (*(void (**)(char *, uint64_t))(v73 + 8))(v63, v65);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v59, v71);
    swift_release(v82);
  }
}

uint64_t sub_10026D6B8(void *a1, void *a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  __n128 v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  _QWORD *v33;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(a1, "thumbnailImageForAchievement:size:", a2, a4, a5);
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v18 = (void *)static OS_dispatch_queue.main.getter(v17);
  v19 = swift_allocObject(&unk_100792088, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, a3);
  v20 = (_QWORD *)swift_allocObject(&unk_100792150, 40, 7);
  v20[2] = v19;
  v20[3] = a2;
  v20[4] = v16;
  aBlock[4] = sub_10026F108;
  v33 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_100792168;
  v21 = _Block_copy(aBlock);
  v22 = v33;
  v23 = a2;
  v24 = v16;
  swift_release(v22);
  static DispatchQoS.unspecified.getter(v25);
  aBlock[0] = _swiftEmptyArrayStorage;
  v26 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v27 = sub_100047110(&qword_100828C80);
  v28 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v10, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v30);
}

void sub_10026D938(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  _BYTE v21[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v9 = *(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_templateUniqueName);
    v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_templateUniqueName + 8);
    swift_bridgeObjectRetain(v8);

  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  v10 = objc_msgSend(a2, "template");
  v11 = objc_msgSend(v10, "uniqueName");

  if (!v11)
  {
    if (!v8)
      goto LABEL_18;
LABEL_14:
    swift_bridgeObjectRelease(v8);
    return;
  }
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  if (!v8)
  {
    if (v14)
    {
      swift_bridgeObjectRelease(v14);
      return;
    }
    goto LABEL_18;
  }
  if (!v14)
    goto LABEL_14;
  if (v9 == v12 && v8 == v14)
  {
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v8, v12, v14, 0);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v14);
    if ((v16 & 1) == 0)
      return;
  }
LABEL_18:
  swift_beginAccess(v5, &v20, 0, 0);
  v17 = swift_unknownObjectWeakLoadStrong(v5);
  if (v17)
  {
    v18 = (void *)v17;
    v19 = *(id *)(v17 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView);

    objc_msgSend(v19, "setImage:", a3);
  }
}

void sub_10026DAE4(uint64_t a1, void *a2, unsigned int a3)
{
  char *v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t IsRightToLeft;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  Class isa;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  Class v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void *v46;
  id v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  id v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  unint64_t v67;
  unsigned int v68;
  unsigned int v69;
  char *v70;
  _QWORD *v71;
  _QWORD aBlock[5];
  uint64_t v73;

  v69 = a3;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)type metadata accessor for DispatchQoS(0);
  v64 = *(v10 - 1);
  __chkstk_darwin(v10);
  v63 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS.QoSClass(0);
  v61 = *(_QWORD *)(v12 - 8);
  v62 = v12;
  __chkstk_darwin(v12);
  v60 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026ED40();
  v15 = v14;
  v17 = v16;
  v18 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v19 = objc_msgSend(v18, "preferredContentSizeCategory");

  LOBYTE(v18) = UIContentSizeCategory.isAccessibilityCategory.getter(v19);
  IsRightToLeft = FIUILocaleIsRightToLeft(v20);
  if ((v18 & 1) != 0)
  {
    v68 = IsRightToLeft;
    v22 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView];
    if (FIUILocaleIsRightToLeft(IsRightToLeft))
      v23 = 8;
    else
      v23 = 7;
  }
  else
  {
    v24 = IsRightToLeft ^ 1;
    v68 = v24;
    v22 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView];
    if (FIUILocaleIsRightToLeft(v24))
      v23 = 7;
    else
      v23 = 8;
  }
  v59 = v22;
  objc_msgSend(v22, "setContentMode:", v23);
  v70 = v3;
  if ((unint64_t)a1 >> 62)
    goto LABEL_27;
  v25 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v66 = v9;
    v67 = v7;
    v65 = v10;
    if (!v25)
      break;
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1001214C4(0, v25 & ~(v25 >> 63), 0);
    if (v25 < 0)
    {
      __break(1u);
LABEL_32:
      __break(1u);
      return;
    }
    v57 = a2;
    v58 = v6;
    a2 = 0;
    v10 = (_QWORD *)aBlock[0];
    v7 = a1 & 0xC000000000000001;
    while ((void *)v25 != a2)
    {
      if (v7)
        v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a1);
      else
        v26 = *(id *)(a1 + 8 * (_QWORD)a2 + 32);
      v27 = v26;
      v28 = objc_msgSend(v26, "template");
      v29 = objc_msgSend(v28, "uniqueName");

      if (!v29)
        goto LABEL_32;
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
      v9 = v30;

      aBlock[0] = v10;
      v32 = v10[2];
      v31 = v10[3];
      if (v32 >= v31 >> 1)
      {
        sub_1001214C4(v31 > 1, v32 + 1, 1);
        v10 = (_QWORD *)aBlock[0];
      }
      a2 = (char *)a2 + 1;
      v10[2] = v32 + 1;
      v33 = &v10[2 * v32];
      v33[4] = v6;
      v33[5] = v9;
      if ((void *)v25 == a2)
      {
        v6 = v58;
        a2 = v57;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_27:
    if (a1 < 0)
      v55 = a1;
    else
      v55 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v25 = _CocoaArrayWrapper.endIndex.getter(v55);
    swift_bridgeObjectRelease(a1);
  }
  v10 = _swiftEmptyArrayStorage;
LABEL_23:
  v34 = v70;
  v35 = *(_QWORD *)&v70[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_stackTemplateUniqueNames];
  *(_QWORD *)&v70[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_stackTemplateUniqueNames] = v10;
  swift_bridgeObjectRelease(v35);
  sub_10001E724(0, (unint64_t *)&qword_10082BBF0, ACHAchievement_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v38 = v68;
  v37 = v69;
  v39 = objc_msgSend(a2, "hasCachedThumbnailImageForAchievements:size:alignment:stackType:", isa, v68, v69, v15, v17);

  if ((v39 & 1) != 0)
  {
    v40 = Array._bridgeToObjectiveC()().super.isa;
    v70 = (char *)objc_msgSend(a2, "thumbnailImageForAchievements:size:alignment:stackType:", v40, v38, v37, v15, v17);

    objc_msgSend(v59, "setImage:", v70);
  }
  else
  {
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v42 = v61;
    v41 = v62;
    v43 = v6;
    v44 = v60;
    (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v60, enum case for DispatchQoS.QoSClass.userInitiated(_:), v62);
    v59 = (id)static OS_dispatch_queue.global(qos:)(v44);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v41);
    v45 = swift_allocObject(&unk_100792038, 64, 7);
    *(_QWORD *)(v45 + 16) = a2;
    *(_QWORD *)(v45 + 24) = a1;
    *(double *)(v45 + 32) = v15;
    *(double *)(v45 + 40) = v17;
    *(_DWORD *)(v45 + 48) = v38;
    *(_DWORD *)(v45 + 52) = v37;
    *(_QWORD *)(v45 + 56) = v34;
    aBlock[4] = sub_10026F018;
    v73 = v45;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_100792050;
    v46 = _Block_copy(aBlock);
    swift_bridgeObjectRetain(a1);
    v47 = a2;
    v48 = v34;
    v49 = v63;
    static DispatchQoS.unspecified.getter(v48);
    v71 = _swiftEmptyArrayStorage;
    v50 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v51 = sub_100047110(&qword_100828C80);
    v52 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
    v53 = v66;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v71, v51, v52, v43, v50);
    v54 = v59;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v49, v53, v46);
    _Block_release(v46);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v53, v43);
    (*(void (**)(char *, _QWORD *))(v64 + 8))(v49, v65);
    swift_release(v73);
  }
}

uint64_t sub_10026E0C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  Class isa;
  id v21;
  __n128 v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[5];
  _QWORD *v37;

  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v35 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for DispatchQoS(0);
  v17 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E724(0, (unint64_t *)&qword_10082BBF0, ACHAchievement_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v21 = objc_msgSend(a1, "thumbnailImageForAchievements:size:alignment:stackType:", isa, a3, a4, a6, a7);

  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v23 = (void *)static OS_dispatch_queue.main.getter(v22);
  v24 = swift_allocObject(&unk_100792088, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16, a5);
  v25 = (_QWORD *)swift_allocObject(&unk_1007920B0, 40, 7);
  v25[2] = v24;
  v25[3] = a2;
  v25[4] = v21;
  aBlock[4] = sub_10026F084;
  v37 = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_1007920C8;
  v26 = _Block_copy(aBlock);
  v27 = v37;
  swift_bridgeObjectRetain(a2);
  v28 = v21;
  swift_release(v27);
  static DispatchQoS.unspecified.getter(v29);
  aBlock[0] = _swiftEmptyArrayStorage;
  v30 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v31 = sub_100047110(&qword_100828C80);
  v32 = sub_1000283C4((unint64_t *)&qword_1008268F0, &qword_100828C80);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v14, v30);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v19, v16, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v34);
}

void sub_10026E37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD *v27;
  _BYTE v28[24];

  v4 = a1 + 16;
  swift_beginAccess(a1 + 16, v28, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(_QWORD **)(Strong + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_stackTemplateUniqueNames);
    swift_bridgeObjectRetain(v7);

    if (!((unint64_t)a2 >> 62))
    {
LABEL_3:
      v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    v7 = 0;
    if (!((unint64_t)a2 >> 62))
      goto LABEL_3;
  }
  if (a2 < 0)
    v25 = a2;
  else
    v25 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v8 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(a2);
LABEL_4:
  v9 = _swiftEmptyArrayStorage;
  if (v8)
  {
    v27 = _swiftEmptyArrayStorage;
    sub_1001214C4(0, v8 & ~(v8 >> 63), 0);
    if ((v8 & 0x8000000000000000) == 0)
    {
      v10 = 0;
      v9 = v27;
      while (v8 != v10)
      {
        if ((a2 & 0xC000000000000001) != 0)
          v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a2);
        else
          v11 = *(id *)(a2 + 8 * v10 + 32);
        v12 = v11;
        v13 = objc_msgSend(v11, "template");
        v14 = objc_msgSend(v13, "uniqueName");

        if (!v14)
          goto LABEL_28;
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v17 = v16;

        v27 = v9;
        v19 = v9[2];
        v18 = v9[3];
        if (v19 >= v18 >> 1)
        {
          sub_1001214C4(v18 > 1, v19 + 1, 1);
          v9 = v27;
        }
        ++v10;
        v9[2] = v19 + 1;
        v20 = &v9[2 * v19];
        v20[4] = v15;
        v20[5] = v17;
        if (v8 == v10)
          goto LABEL_15;
      }
      __break(1u);
    }
    __break(1u);
LABEL_28:
    __break(1u);
  }
  else
  {
LABEL_15:
    if (v7)
    {
      v21 = sub_1002A0A98(v7, v9);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v9);
      if ((v21 & 1) != 0)
      {
        swift_beginAccess(v4, &v27, 0, 0);
        v22 = swift_unknownObjectWeakLoadStrong(v4);
        if (v22)
        {
          v23 = (void *)v22;
          v24 = *(id *)(v22 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView);

          objc_msgSend(v24, "setImage:", a3);
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease(v9);
    }
  }
}

id sub_10026E5E8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrophyCaseGoForItCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrophyCaseGoForItCell()
{
  return objc_opt_self(_TtC10FitnessApp21TrophyCaseGoForItCell);
}

id sub_10026E6FC(char a1)
{
  _QWORD *v1;

  return objc_msgSend(*(id *)(*v1 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView), "setHidden:", a1 & 1);
}

double sub_10026E720()
{
  _QWORD *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;

  objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView), "frame");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = UIEdgeInsets.init(uniform:)(5.0);
  return sub_1002283B8(v2, v4, v6, v8, v9, v10);
}

void sub_10026E794(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void *a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10026EE5C(a1, a2, a3, a5, a6, a7, a9, a10, a11, a12);
}

void sub_10026E7D8()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  id v35;
  id v36;
  id v37;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnAchievement];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = &v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnShowAllAchievements];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = &v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_templateUniqueName];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_stackTemplateUniqueNames] = _swiftEmptyArrayStorage;
  v5 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_roundedView;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = objc_msgSend(v6, "layer");
  objc_msgSend(v7, "setCornerRadius:", 15.0);

  objc_msgSend(v6, "setClipsToBounds:", 1);
  v8 = sub_100032490();
  objc_msgSend(v6, "setBackgroundColor:", v8);

  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v5] = v6;
  v9 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_sectionLabel;
  v10 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v10, "setLineBreakMode:", 0);
  objc_msgSend(v10, "setNumberOfLines:", 0);
  v11 = (void *)UILabel.withLineBreakMode(_:)(0);

  if (qword_10081D930 != -1)
    swift_once(&qword_10081D930, sub_10026B4AC);
  v12 = (void *)UILabel.withFont(_:)(qword_10082A940);

  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v9] = v12;
  v13 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_achievementLabel;
  v14 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = (void *)UILabel.textAlignment(_:)(0);

  objc_msgSend(v15, "setLineBreakMode:", 0);
  objc_msgSend(v15, "setNumberOfLines:", 0);
  v16 = (void *)UILabel.withLineBreakMode(_:)(0);

  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v13] = v16;
  v17 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeImageView;
  v18 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v19 = (void *)UIView.withUserInteractionEnabled(_:)(1);

  v20 = (void *)UIView.withContentMode(_:)(1);
  objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v17] = v20;
  v21 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_badgeStackImageView;
  v22 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v23 = (void *)UIView.withContentMode(_:)(8);

  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v21] = v23;
  v24 = OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_showAllButton;
  v25 = type metadata accessor for ShowAllButton();
  v26 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v25)), "init");
  if (qword_10081D940 != -1)
    swift_once(&qword_10081D940, sub_10026B53C);
  v27 = (void *)UIButton.withTitleLabelFont(_:)(qword_10082A950);

  if (qword_10081D928 != -1)
    swift_once(&qword_10081D928, sub_10026B43C);
  v28 = (void *)UIButton.withTitleTextColor(_:for:)(qword_10082A938, 0);

  v29 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v29, "localizedStringForKey:value:table:", v30, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v33 = v32;

  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v28, "setTitle:forState:", v34, objc_msgSend(v28, "state"));
  swift_bridgeObjectRelease(v33);

  v35 = objc_msgSend(v28, "titleLabel");
  objc_msgSend(v35, "setLineBreakMode:", 0);

  v36 = objc_msgSend(v28, "titleLabel");
  objc_msgSend(v36, "setLineBreakMode:", 0);

  v37 = objc_msgSend(v28, "titleLabel");
  objc_msgSend(v37, "setNumberOfLines:", 0);

  objc_msgSend(v28, "setContentHorizontalAlignment:", 2);
  objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v24] = v28;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/TrophyCaseGoForItCell.swift", 38, 2, 105, 0);
  __break(1u);
}

void sub_10026ED40()
{
  id v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  id v9;
  id v10;
  CGRect v11;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;

  v11.origin.x = v2;
  v11.origin.y = v4;
  v11.size.width = v6;
  v11.size.height = v8;
  CGRectGetWidth(v11);
  v9 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v10 = objc_msgSend(v9, "preferredContentSizeCategory");

  UIContentSizeCategory.isAccessibilityCategory.getter(v10);
}

void sub_10026EE5C(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  void *v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v28;

  v16 = *(void **)(v10 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_sectionLabel);
  v17 = sub_100226C58();
  objc_msgSend(v16, "setAttributedText:", v17);

  v18 = (_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnAchievement);
  v19 = *(_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnAchievement);
  v20 = *(_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnAchievement + 8);
  *v18 = a7;
  v18[1] = a8;
  swift_retain(a8);
  sub_100022BA4(v19, v20);
  v21 = (_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnShowAllAchievements);
  v22 = *(_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnShowAllAchievements);
  v23 = *(_QWORD *)(v10 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_tapOnShowAllAchievements + 8);
  *v21 = a9;
  v21[1] = a10;
  swift_retain(a10);
  sub_100022BA4(v22, v23);
  if (a2)
  {
    v24 = a2;
    sub_10026D0B8(v24, a4);
    sub_10026DAE4(a3, a4, a6);
    v25 = *(void **)(v10 + OBJC_IVAR____TtC10FitnessApp21TrophyCaseGoForItCell_achievementLabel);
    if (qword_10081D938 != -1)
      swift_once(&qword_10081D938, sub_10026B528);
    v28 = sub_1002263CC(v24, (NSString *)qword_10082A948, a5);
    objc_msgSend(v25, "setAttributedText:", v28);

  }
}

uint64_t sub_10026EFE4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10026F018()
{
  uint64_t v0;

  return sub_10026E0C0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned int *)(v0 + 48), *(unsigned int *)(v0 + 52), *(_QWORD *)(v0 + 56), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_10026F02C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10026F050()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_10026F084()
{
  uint64_t *v0;

  sub_10026E37C(v0[2], v0[3], v0[4]);
}

uint64_t sub_10026F090()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10026F0C4()
{
  uint64_t v0;

  return sub_10026D6B8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 48), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_10026F0D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_10026F108()
{
  uint64_t v0;

  sub_10026D938(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_10026F12C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ActivitySharingHighlight(0) + 20);
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

char *sub_10026F174(char *a1, char **a2, int *a3)
{
  char *v4;
  int v5;
  char *v7;
  char v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  char *v41;
  uint64_t v43;
  char *v44;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v41 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = &v41[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v41);
  }
  else
  {
    v7 = *a2;
    v8 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    a1[8] = v8;
    v9 = (int *)type metadata accessor for ActivitySharingHighlight(0);
    v10 = v9[5];
    v11 = &v4[v10];
    v12 = (uint64_t)a2 + v10;
    v13 = type metadata accessor for UUID(0);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v15 = v7;
    v14(v11, v12, v13);
    v16 = v9[6];
    v17 = &v4[v16];
    v18 = (uint64_t)a2 + v16;
    v19 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = v9[7];
    v21 = *(char **)((char *)a2 + v20);
    *(_QWORD *)&v4[v20] = v21;
    *(_QWORD *)&v4[v9[8]] = *(char **)((char *)a2 + v9[8]);
    v22 = a3[5];
    v23 = a3[6];
    v24 = *(char **)((char *)a2 + v22);
    *(_QWORD *)&v4[v22] = v24;
    v25 = *(char **)((char *)a2 + v23);
    *(_QWORD *)&v4[v23] = v25;
    v26 = a3[7];
    v27 = a3[8];
    v28 = *(char **)((char *)a2 + v26);
    *(_QWORD *)&v4[v26] = v28;
    v29 = *(char **)((char *)a2 + v27);
    *(_QWORD *)&v4[v27] = v29;
    v30 = a3[10];
    v4[a3[9]] = *((_BYTE *)a2 + a3[9]);
    v44 = &v4[v30];
    v43 = (uint64_t)a2 + v30;
    v31 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
    v32 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    v33 = v21;
    v34 = v24;
    v35 = v25;
    v36 = v28;
    v37 = v29;
    v32(v44, v43, v31);
    v38 = a3[11];
    v39 = *(char **)((char *)a2 + v38);
    *(_QWORD *)&v4[v38] = v39;
    v40 = v39;
  }
  return v4;
}

void sub_10026F30C(id *a1, int *a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v4 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v5 = (char *)a1 + v4[5];
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (char *)a1 + v4[6];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);

  v9 = (char *)a1 + a2[10];
  v10 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);

}

uint64_t sub_10026F3F8(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  char v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v41;
  uint64_t v42;

  v6 = *(void **)a2;
  v7 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for UUID(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14 = v6;
  v13(v10, v11, v12);
  v15 = v8[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = v8[7];
  v20 = *(void **)(a2 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  v21 = a3[5];
  v22 = a3[6];
  v23 = *(void **)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v23;
  v24 = *(void **)(a2 + v22);
  *(_QWORD *)(a1 + v22) = v24;
  v25 = a3[7];
  v26 = a3[8];
  v27 = *(void **)(a2 + v25);
  *(_QWORD *)(a1 + v25) = v27;
  v28 = *(void **)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v28;
  v29 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v42 = a1 + v29;
  v41 = a2 + v29;
  v30 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
  v32 = v20;
  v33 = v23;
  v34 = v24;
  v35 = v27;
  v36 = v28;
  v31(v42, v41, v30);
  v37 = a3[11];
  v38 = *(void **)(a2 + v37);
  *(_QWORD *)(a1 + v37) = v38;
  v39 = v38;
  return a1;
}

uint64_t sub_10026F564(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  char v7;
  void *v8;
  id v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;

  v6 = *(void **)a2;
  v7 = *(_BYTE *)(a2 + 8);
  v8 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v7;
  v9 = v6;

  v10 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v11 = v10[5];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v10[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = v10[7];
  v20 = *(void **)(a2 + v19);
  v21 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  v22 = v20;

  *(_QWORD *)(a1 + v10[8]) = *(_QWORD *)(a2 + v10[8]);
  v23 = a3[5];
  v24 = *(void **)(a2 + v23);
  v25 = *(void **)(a1 + v23);
  *(_QWORD *)(a1 + v23) = v24;
  v26 = v24;

  v27 = a3[6];
  v28 = *(void **)(a2 + v27);
  v29 = *(void **)(a1 + v27);
  *(_QWORD *)(a1 + v27) = v28;
  v30 = v28;

  v31 = a3[7];
  v32 = *(void **)(a2 + v31);
  v33 = *(void **)(a1 + v31);
  *(_QWORD *)(a1 + v31) = v32;
  v34 = v32;

  v35 = a3[8];
  v36 = *(void **)(a2 + v35);
  v37 = *(void **)(a1 + v35);
  *(_QWORD *)(a1 + v35) = v36;
  v38 = v36;

  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v39 = a3[10];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[11];
  v44 = *(void **)(a2 + v43);
  v45 = *(void **)(a1 + v43);
  *(_QWORD *)(a1 + v43) = v44;
  v46 = v44;

  return a1;
}

uint64_t sub_10026F6F0(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v7 = v6[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = v6[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
  *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
  v15 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_10026F81C(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  void *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;

  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;

  v8 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[7];
  v18 = *(void **)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);

  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  v19 = a3[5];
  v20 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);

  v21 = a3[6];
  v22 = *(void **)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);

  v23 = a3[7];
  v24 = *(void **)(a1 + v23);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);

  v25 = a3[8];
  v26 = *(void **)(a1 + v25);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);

  v27 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = *(void **)(a1 + v31);
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);

  return a1;
}

uint64_t sub_10026F988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10026F994);
}

uint64_t sub_10026F994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for ActivitySharingHighlight(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
    v10 = a1 + *(int *)(a3 + 40);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_10026FA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10026FA48);
}

uint64_t sub_10026FA48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for ActivitySharingHighlight(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
    v12 = a1 + *(int *)(a4 + 40);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for ActivitySharingHighlightViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_10082AA30;
  if (!qword_10082AA30)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActivitySharingHighlightViewModel);
  return result;
}

uint64_t sub_10026FB28(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[8];

  result = type metadata accessor for ActivitySharingHighlight(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[5] = &unk_100631698;
    result = type metadata accessor for FIUIRelativeDateTimeFormatter(319);
    if (v4 <= 0x3F)
    {
      v5[6] = *(_QWORD *)(result - 8) + 64;
      v5[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_initStructMetadata(a1, 256, 8, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivitySharingHighlightViewDisplayStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10026FC14 + 4 * byte_100631625[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10026FC48 + 4 * byte_100631620[v4]))();
}

uint64_t sub_10026FC48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10026FC50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10026FC58);
  return result;
}

uint64_t sub_10026FC64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10026FC6CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10026FC70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10026FC78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingHighlightViewDisplayStyle()
{
  return &type metadata for ActivitySharingHighlightViewDisplayStyle;
}

unint64_t sub_10026FC98()
{
  unint64_t result;

  result = qword_10082AA80;
  if (!qword_10082AA80)
  {
    result = swift_getWitnessTable(&unk_10063171C, &type metadata for ActivitySharingHighlightViewDisplayStyle);
    atomic_store(result, (unint64_t *)&qword_10082AA80);
  }
  return result;
}

id sub_10026FCDC()
{
  id result;

  result = sub_10026FCF8();
  qword_10082A9D0 = (uint64_t)result;
  return result;
}

id sub_10026FCF8()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v0 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleTitle2);
  v1 = objc_msgSend(v0, "fontDescriptorWithSymbolicTraits:", 0x8000);
  if (v1)
  {
    v2 = v1;

    v0 = v2;
  }
  v3 = objc_msgSend(v0, "fontDescriptorWithDesign:", UIFontDescriptorSystemDesignRounded);
  if (v3)
  {
    v4 = v3;

    v0 = v4;
  }
  v5 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v0, 0.0);

  return v5;
}

uint64_t sub_10026FDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch(sub_10026FDE8, 0, 0);
}

uint64_t sub_10026FDE8()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  uint64_t v3;

  v2 = *(id **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  type metadata accessor for ActivitySharingAvatarProvider();
  v3 = type metadata accessor for ActivitySharingHighlight(0);
  *v2 = sub_1004B1860(*(void **)(v1 + *(int *)(v3 + 28)), 32.0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10026FE48(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  unsigned int v9;
  unint64_t v10;
  id v11;
  char v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v59[2];

  v3 = type metadata accessor for Font.Leading(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 8))
  {
    v7 = *(void **)v1;
    if (*(_BYTE *)(v1 + 8) == 1)
    {
      v8 = v7;
      v9 = objc_msgSend(v8, "_isStandalonePhoneSummary");

      if (v9)
        v10 = 0x8000000100693B40;
      else
        v10 = 0xEF444554454C504DLL;
    }
    else
    {
      v11 = v7;
      v12 = sub_1005EEA88(v11);

      if ((v12 & 1) != 0)
        v10 = 0x8000000100693B20;
      else
        v10 = 0x8000000100693B00;
    }
  }
  else
  {
    v10 = 0x8000000100693B60;
  }
  v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, 0, 0);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;
  swift_bridgeObjectRelease(v10);

  v19 = sub_100047110((uint64_t *)&unk_100827460);
  v20 = swift_allocObject(v19, 72, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100622F90;
  v21 = objc_msgSend(*(id *)(v1 + *(int *)(type metadata accessor for ActivitySharingHighlight(0) + 28)), "displayName");
  if (v21)
  {
    v22 = v21;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v25 = v24;

    *(_QWORD *)(v20 + 56) = &type metadata for String;
    *(_QWORD *)(v20 + 64) = sub_100038CF8();
    *(_QWORD *)(v20 + 32) = v23;
    *(_QWORD *)(v20 + 40) = v25;
    v27 = String.init(format:_:)(v16, v18, v20, v26);
    v29 = v28;
    swift_bridgeObjectRelease(v18);
    v59[0] = v27;
    v59[1] = v29;
    v30 = sub_100038CA0();
    v31 = Text.init<A>(_:)(v59, &type metadata for String, v30);
    v33 = v32;
    v35 = v34;
    v37 = v36 & 1;
    v39 = static Font.body.getter(v38);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Font.Leading.tight(_:), v3);
    v40 = Font.leading(_:)(v6, v39);
    v41 = swift_release(v39);
    v42.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v41);
    v43 = Text.font(_:)(v40, v31, v33, v37, v35, v42);
    v45 = v44;
    LOBYTE(v39) = v46;
    v48 = v47;
    swift_release(v40);
    v49 = v39 & 1;
    sub_1000E4458(v31, v33, v37);
    v50 = swift_bridgeObjectRelease(v35);
    v51 = static Color.primary.getter(v50);
    v52 = Text.foregroundColor(_:)(v51, v43, v45, v49, v48);
    v54 = v53;
    LOBYTE(v37) = v55;
    v57 = v56;
    swift_release(v51);
    sub_1000E4458(v43, v45, v49);
    swift_bridgeObjectRelease(v48);
    *(_QWORD *)a1 = v52;
    *(_QWORD *)(a1 + 8) = v54;
    *(_BYTE *)(a1 + 16) = v37 & 1;
    *(_QWORD *)(a1 + 24) = v57;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002701D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t result;
  uint64_t *v47;
  uint64_t v48;
  char *v49;
  uint64_t *v50;
  id v51;

  v50 = a1;
  v2 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AttributedString(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v49 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v48 - v12;
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v48 - v19;
  Date.init()(v21);
  v22 = v1 + *(int *)(type metadata accessor for ActivitySharingHighlight(0) + 24);
  v48 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v22, v14);
  LODWORD(v15) = *(unsigned __int8 *)(v1 + 8);
  type metadata accessor for ActivitySharingHighlightViewModel(0);
  if ((_DWORD)v15 == 2)
    v23 = FIUIRelativeDateTimeFormatter.localizedString(for:relativeTo:)(v17, v20);
  else
    v23 = FIUIRelativeDateTimeFormatter.localizedDayString(for:)(v17);
  v25 = v23;
  v26 = v24;
  v27 = swift_bridgeObjectRetain(v24);
  AttributeContainer.init()(v27);
  AttributedString.init(_:attributes:)(v25, v26, v4);
  v28 = swift_bridgeObjectRelease(v26);
  (*(void (**)(char *, char *, uint64_t, __n128))(v6 + 32))(v13, v10, v5, v28);
  KeyPath = swift_getKeyPath(&unk_1006317D8);
  __chkstk_darwin(KeyPath);
  *(&v48 - 2) = v30;
  v31 = swift_getKeyPath(&unk_100631808);
  v51 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v32 = sub_100274874();
  AttributedString.subscript.setter(&v51, v31, v32);
  v33 = swift_getKeyPath(&unk_100631848);
  __chkstk_darwin(v33);
  *(&v48 - 2) = v34;
  v35 = swift_getKeyPath(&unk_100631878);
  v51 = (id)static Font.caption2.getter(v35);
  v36 = sub_1000EA1DC();
  AttributedString.subscript.setter(&v51, v35, v36);
  v37 = v49;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v49, v13, v5);
  v38 = Text.init(_:)(v37);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  v45 = *(void (**)(char *, uint64_t))(v48 + 8);
  v45(v17, v14);
  result = ((uint64_t (*)(char *, uint64_t))v45)(v20, v14);
  v47 = v50;
  *v50 = v38;
  v47[1] = v40;
  *((_BYTE *)v47 + 16) = v42 & 1;
  v47[3] = v44;
  return result;
}

double sub_100270514@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  double result;
  __int128 v43;
  char v44;
  uint64_t v45;
  __int128 v46;
  void *v47;
  uint64_t v48;
  char v49;
  _OWORD v50[2];
  char v51;

  v3 = type metadata accessor for ActivitySharingHighlightViewModel(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v7 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)v1;
  if (!*(_BYTE *)(v1 + 8))
  {
    if (*(_BYTE *)(v1 + *(int *)(v6 + 36)))
      v19 = 100.0;
    else
      v19 = 165.0;
    v20 = *(void **)(v1 + *(int *)(v6 + 20));
    v21 = v8;
    v22 = objc_msgSend(v20, "thumbnailImageForAchievement:size:", v21, v19, v19);
    if (v22)
      v23 = Image.init(uiImage:)(v22);
    else
      v23 = 0;
    *(_QWORD *)&v46 = v23;
    BYTE8(v46) = 0;
    swift_retain(v23);
    v35 = sub_100047110(&qword_100823078);
    v36 = sub_10016F528();
    _ConditionalContent<>.init(storage:)(&v46, v35, &type metadata for Image, v36, &protocol witness table for Image);
    v37 = *(_QWORD *)&v50[0];
    *(_QWORD *)&v46 = *(_QWORD *)&v50[0];
    *((_QWORD *)&v46 + 1) = BYTE8(v50[0]);
    v47 = 0;
    v48 = 0;
    v49 = 0;
    j__swift_retain(*(_QWORD *)&v50[0]);
    v38 = sub_100047110(&qword_10082AB18);
    v39 = sub_100047110(&qword_10082AB20);
    v40 = sub_1002742F8();
    v41 = sub_100028384(&qword_10082AB30, &qword_10082AB20, (uint64_t)&unk_100634238);
    _ConditionalContent<>.init(storage:)(&v46, v38, v39, v40, v41);

    j__swift_release(v37);
    v18 = v23;
    goto LABEL_12;
  }
  if (*(_BYTE *)(v1 + 8) == 1)
  {
    v9 = v8;
    v10 = sub_100270960((uint64_t)v9);
    *(_QWORD *)&v46 = v10;
    BYTE8(v46) = 1;
    swift_retain(v10);
    v11 = sub_100047110(&qword_100823078);
    v12 = sub_10016F528();
    _ConditionalContent<>.init(storage:)(&v46, v11, &type metadata for Image, v12, &protocol witness table for Image);
    v13 = *(_QWORD *)&v50[0];
    *(_QWORD *)&v46 = *(_QWORD *)&v50[0];
    *((_QWORD *)&v46 + 1) = BYTE8(v50[0]);
    v47 = 0;
    v48 = 0;
    v49 = 0;
    j__swift_retain(*(_QWORD *)&v50[0]);
    v14 = sub_100047110(&qword_10082AB18);
    v15 = sub_100047110(&qword_10082AB20);
    v16 = sub_1002742F8();
    v17 = sub_100028384(&qword_10082AB30, &qword_10082AB20, (uint64_t)&unk_100634238);
    _ConditionalContent<>.init(storage:)(&v46, v14, v15, v16, v17);

    j__swift_release(v13);
    v18 = v10;
LABEL_12:
    swift_release(v18);
    goto LABEL_13;
  }
  sub_10004F8C8(v1, (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ActivitySharingHighlightViewModel);
  v24 = *(unsigned __int8 *)(v4 + 80);
  v25 = (v24 + 24) & ~v24;
  v26 = swift_allocObject(&unk_1007922B0, v25 + v5, v24 | 7);
  *(_QWORD *)(v26 + 16) = v8;
  sub_100273E98((uint64_t)v7, v26 + v25);
  *(_QWORD *)&v50[0] = 0;
  BYTE8(v50[0]) = 1;
  v27 = v8;
  v28 = AnyView.init<A>(_:)(v50, &type metadata for Spacer, &protocol witness table for Spacer);
  v29 = swift_allocObject(&unk_1007922D8, 32, 7);
  *(_QWORD *)(v29 + 16) = &unk_10082AB00;
  *(_QWORD *)(v29 + 24) = v26;
  *(_QWORD *)&v46 = v28;
  State.init(wrappedValue:)(v50, &v46, &type metadata for AnyView);
  v30 = v50[0];
  v46 = v50[0];
  v47 = &unk_10082AB10;
  v48 = v29;
  v49 = 1;
  swift_retain(*((_QWORD *)&v50[0] + 1));
  swift_retain(v29);
  swift_retain(v30);
  v31 = sub_100047110(&qword_10082AB18);
  v32 = sub_100047110(&qword_10082AB20);
  v33 = sub_1002742F8();
  v34 = sub_100028384(&qword_10082AB30, &qword_10082AB20, (uint64_t)&unk_100634238);
  _ConditionalContent<>.init(storage:)(&v46, v31, v32, v33, v34);
  swift_release(v29);
  swift_release(*((_QWORD *)&v30 + 1));
  swift_release(v30);

LABEL_13:
  result = *(double *)v50;
  v43 = v50[1];
  v44 = v51;
  *(_OWORD *)a1 = v50[0];
  *(_OWORD *)(a1 + 16) = v43;
  *(_BYTE *)(a1 + 32) = v44;
  return result;
}

uint64_t sub_100270960(uint64_t a1)
{
  uint64_t v1;
  float v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  id v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  uint64_t v15;

  if (*(_BYTE *)(v1 + *(int *)(type metadata accessor for ActivitySharingHighlightViewModel(0) + 36)))
    v3 = 100.0;
  else
    v3 = 165.0;
  v4 = (void *)objc_opt_self(ARUIRingGroup);
  objc_msgSend(v4, "preferredActivityRingThicknessForDiameter:", v3);
  v6 = v5;
  objc_msgSend(v4, "preferredActivityRingInterspacingForDiameter:", v3);
  v8 = v7;
  v9 = objc_msgSend(v4, "activityRingGroupForRingType:", 3);
  v10 = objc_msgSend(v9, "forCompanion");

  *(float *)&v11 = v3;
  objc_msgSend(v10, "setGroupDiameter:", v11);
  *(float *)&v12 = v6;
  objc_msgSend(v10, "setThickness:", v12);
  *(float *)&v13 = v8;
  objc_msgSend(v10, "setInterspacing:", v13);
  objc_msgSend(v10, "hk_configureWithActivitySummary:animated:", a1, 0);
  v14 = (void *)objc_opt_self(ARUIRingsImageFactory);
  if (qword_10081DE00 != -1)
    swift_once(&qword_10081DE00, sub_100495AA4);
  v15 = Image.init(uiImage:)(objc_msgSend(v14, "renderRingGroup:withRenderer:", v10, qword_10086ABF0));

  return v15;
}

__n128 sub_100270AF8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  char v11;
  void *v12;
  Class isa;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  __int128 v25;
  unint64_t v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __n128 result;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  uint64_t v72;
  _OWORD v73[8];
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  char v82;
  __int128 v83;
  _BYTE v84[32];
  _BYTE v85[32];
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  char v97;
  __int128 v98;
  __n128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int16 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  char v115;
  __int128 v116;
  __n128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int16 v122;

  v72 = a1;
  v2 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v5);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)v1;
  if (*(_BYTE *)(v1 + 8))
  {
    if (*(_BYTE *)(v1 + 8) == 1)
    {
      v66 = v6;
      v64 = v7;
      v70 = v10;
      v11 = objc_msgSend(v70, "_isStandalonePhoneSummary");
      v12 = *(void **)(v1 + *(int *)(type metadata accessor for ActivitySharingHighlightViewModel(0) + 44));
      type metadata accessor for ActivitySharingHighlight(0);
      isa = Date._bridgeToObjectiveC()().super.isa;
      v14 = objc_msgSend(v12, "stringFromDate:", isa);

      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;

      v18 = swift_bridgeObjectRetain(v17);
      AttributeContainer.init()(v18);
      AttributedString.init(_:attributes:)(v15, v17, v4);
      swift_bridgeObjectRelease(v17);
      v63 = static HorizontalAlignment.center.getter(v19, v20, v21, v22, v23);
      v24 = sub_100271F08(v11, (uint64_t)v9, (uint64_t)&v116);
      v25 = v116;
      LODWORD(v71) = v117.n128_u8[0];
      v26 = v117.n128_u64[1];
      v27 = v118;
      LOBYTE(v17) = v119;
      v28 = *((_QWORD *)&v119 + 1);
      (*(void (**)(char *, uint64_t, double))(v64 + 8))(v9, v66, v24);
      v83 = (unint64_t)v63;
      v84[0] = 0;
      v65 = v25;
      *(_OWORD *)&v84[8] = v25;
      v67 = *((_QWORD *)&v25 + 1);
      v68 = v26;
      v29 = (char)v71;
      v84[24] = (_BYTE)v71;
      *(_QWORD *)v85 = v26;
      *(_OWORD *)&v85[8] = v27;
      v85[24] = v17;
      v69 = v28;
      *(_QWORD *)&v86 = v28;
      sub_100272234((uint64_t)&v83);
      sub_100045AD4((uint64_t)&v83, (uint64_t)&v116, &qword_10082AAC0);
      sub_1000E439C(v25, *((uint64_t *)&v25 + 1), v29);
      swift_bridgeObjectRetain(v26);
      sub_1000E439C(v27, *((uint64_t *)&v27 + 1), v17);
      swift_bridgeObjectRetain(v28);
      v30 = sub_100047110(&qword_10082AAB0);
      v31 = sub_100047110(&qword_100826750);
      v32 = sub_100028384(&qword_10082AAA8, &qword_10082AAB0, (uint64_t)&protocol conformance descriptor for VStack<A>);
      v33 = sub_100028384(&qword_100826760, &qword_100826750, (uint64_t)&protocol conformance descriptor for VStack<A>);
      _ConditionalContent<>.init(storage:)(&v116, v30, v31, v32, v33);
      v95 = v80;
      v96 = v81;
      v91 = v76;
      v92 = v77;
      v93 = v78;
      v94 = v79;
      v89 = v74;
      v90 = v75;
      v113 = v80;
      v114 = v81;
      v109 = v76;
      v110 = v77;
      v111 = v78;
      v112 = v79;
      v97 = v82;
      v115 = v82;
      v107 = v74;
      v108 = v75;
      sub_100272240((uint64_t)&v107);
      sub_100045AD4((uint64_t)&v107, (uint64_t)&v116, &qword_10082AA88);
      sub_100272304((uint64_t)&v89, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100272248);
      v34 = sub_100047110(&qword_10082AA90);
      v35 = sub_100047110(&qword_10082AA98);
      v36 = sub_100271B18();
      v37 = sub_100028384(&qword_10082AAB8, &qword_10082AA98, (uint64_t)&protocol conformance descriptor for VStack<A>);
      _ConditionalContent<>.init(storage:)(&v116, v34, v35, v36, v37);

      sub_100272304((uint64_t)&v89, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100272368);
      sub_1000E4458(v65, v67, (char)v71);
      swift_bridgeObjectRelease(v68);
      sub_1000E4458(v27, *((uint64_t *)&v27 + 1), v17);
      swift_bridgeObjectRelease(v69);
    }
    else
    {
      v71 = v10;
      sub_100271580(v71, (uint64_t)&v116);
      v48 = v117.n128_i64[1];
      v47 = v118;
      v49 = BYTE8(v118);
      v50 = v119;
      v51 = v120;
      v52 = v121;
      v107 = v116;
      LOBYTE(v108) = v117.n128_u8[0];
      *((_QWORD *)&v108 + 1) = v117.n128_u64[1];
      *(_QWORD *)&v109 = v118;
      BYTE8(v109) = BYTE8(v118);
      v110 = v119;
      v69 = v121;
      v67 = *((_QWORD *)&v119 + 1);
      v70 = (id)v119;
      v68 = v120;
      v111 = v120;
      *(_QWORD *)&v112 = v121;
      sub_100271B0C((uint64_t)&v107);
      sub_100045AD4((uint64_t)&v107, (uint64_t)&v116, &qword_10082AA88);
      sub_1000E439C(v48, v47, v49);
      swift_retain(v51);
      swift_bridgeObjectRetain(v50);
      swift_retain(*((_QWORD *)&v50 + 1));
      sub_10003AFE0(*((uint64_t *)&v51 + 1), v52);
      v53 = sub_100047110(&qword_10082AA90);
      v54 = sub_100047110(&qword_10082AA98);
      v55 = sub_100271B18();
      v56 = sub_100028384(&qword_10082AAB8, &qword_10082AA98, (uint64_t)&protocol conformance descriptor for VStack<A>);
      _ConditionalContent<>.init(storage:)(&v116, v53, v54, v55, v56);

      sub_1000E4458(v48, v47, v49);
      swift_release(v68);
      swift_release(v67);
      swift_bridgeObjectRelease(v70);
      sub_100022BA4(*((uint64_t *)&v51 + 1), v69);
    }
  }
  else
  {
    v38 = v10;
    sub_100271304((uint64_t)v38, (uint64_t)v73);
    *(_OWORD *)&v85[16] = v73[4];
    v86 = v73[5];
    v87 = v73[6];
    v88 = v73[7];
    v83 = v73[0];
    *(_OWORD *)v84 = v73[1];
    *(_OWORD *)&v84[16] = v73[2];
    *(_OWORD *)v85 = v73[3];
    sub_100272424((uint64_t)&v83);
    sub_100045AD4((uint64_t)&v83, (uint64_t)&v116, &qword_10082AAC0);
    sub_10027242C((uint64_t)v73);
    v39 = sub_100047110(&qword_10082AAB0);
    v40 = sub_100047110(&qword_100826750);
    v41 = sub_100028384(&qword_10082AAA8, &qword_10082AAB0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v42 = sub_100028384(&qword_100826760, &qword_100826750, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(&v116, v39, v40, v41, v42);
    v95 = v80;
    v96 = v81;
    v91 = v76;
    v92 = v77;
    v93 = v78;
    v94 = v79;
    v89 = v74;
    v90 = v75;
    v113 = v80;
    v114 = v81;
    v109 = v76;
    v110 = v77;
    v111 = v78;
    v112 = v79;
    v97 = v82;
    v115 = v82;
    v107 = v74;
    v108 = v75;
    sub_100272240((uint64_t)&v107);
    sub_100045AD4((uint64_t)&v107, (uint64_t)&v116, &qword_10082AA88);
    sub_100272304((uint64_t)&v89, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100272248);
    v43 = sub_100047110(&qword_10082AA90);
    v44 = sub_100047110(&qword_10082AA98);
    v45 = sub_100271B18();
    v46 = sub_100028384(&qword_10082AAB8, &qword_10082AA98, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(&v116, v43, v44, v45, v46);

    sub_100272304((uint64_t)&v89, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100272368);
    sub_1002724B8((uint64_t)v73);
  }
  v122 = v106;
  v118 = v100;
  v119 = v101;
  v120 = v102;
  v121 = v103;
  v116 = v98;
  v117 = v99;
  v57 = v105;
  v58 = v72;
  *(_OWORD *)(v72 + 96) = v104;
  *(_OWORD *)(v58 + 112) = v57;
  *(_WORD *)(v58 + 128) = v122;
  v59 = v119;
  *(_OWORD *)(v58 + 32) = v118;
  *(_OWORD *)(v58 + 48) = v59;
  v60 = v121;
  *(_OWORD *)(v58 + 64) = v120;
  *(_OWORD *)(v58 + 80) = v60;
  result = v117;
  *(_OWORD *)v58 = v116;
  *(__n128 *)(v58 + 16) = result;
  return result;
}

uint64_t sub_100271304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  Class isa;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  int v41;
  int v42;
  int v43;
  int v44;
  __int128 v46;
  char v47;
  __int128 v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  __int128 v53;
  char v54;
  uint64_t v55;
  _BYTE v56[7];
  char v57;
  _BYTE v58[7];
  _BYTE v59[7];
  char v60;
  _BYTE v61[7];
  char v62;
  char v63;

  v5 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AttributedString(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivitySharingHighlightViewModel(0);
  v13 = objc_msgSend(*(id *)(v2 + *(int *)(v12 + 24)), "titleForAchievement:", a1);
  if (v13)
  {
    v14 = v13;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0xE000000000000000;
  }
  v18 = *(void **)(v2 + *(int *)(v12 + 44));
  type metadata accessor for ActivitySharingHighlight(0);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(v18, "stringFromDate:", isa);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v24 = swift_bridgeObjectRetain(v23);
  AttributeContainer.init()(v24);
  AttributedString.init(_:attributes:)(v21, v23, v7);
  swift_bridgeObjectRelease(v23);
  v30 = static HorizontalAlignment.center.getter(v25, v26, v27, v28, v29);
  sub_100271BBC(v15, v17, (uint64_t)v11, (uint64_t)&v46);
  swift_bridgeObjectRelease(v17);
  v31 = v47;
  v32 = v49;
  v33 = v50;
  v34 = v51;
  v35 = v52;
  v36 = v54;
  v37 = v55;
  v38 = v48;
  v39 = v46;
  v40 = v53;
  v63 = 1;
  v62 = v47;
  v60 = v50;
  v57 = v54;
  *(_QWORD *)a2 = v30;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_DWORD *)(a2 + 17) = v46;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v46 + 3);
  *(_OWORD *)(a2 + 24) = v39;
  *(_BYTE *)(a2 + 40) = v31;
  v41 = *(_DWORD *)v61;
  *(_DWORD *)(a2 + 44) = *(_DWORD *)&v61[3];
  *(_DWORD *)(a2 + 41) = v41;
  *(_OWORD *)(a2 + 48) = v38;
  *(_QWORD *)(a2 + 64) = v32;
  *(_BYTE *)(a2 + 72) = v33;
  v42 = *(_DWORD *)v59;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v59[3];
  *(_DWORD *)(a2 + 73) = v42;
  *(_QWORD *)(a2 + 80) = v34;
  *(_BYTE *)(a2 + 88) = v35;
  v43 = *(_DWORD *)v58;
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v58[3];
  *(_DWORD *)(a2 + 89) = v43;
  *(_OWORD *)(a2 + 96) = v40;
  *(_BYTE *)(a2 + 112) = v36;
  v44 = *(_DWORD *)v56;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v56[3];
  *(_DWORD *)(a2 + 113) = v44;
  *(_QWORD *)(a2 + 120) = v37;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_100271580(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  id v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  __int128 v99;
  char v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;

  v3 = v2;
  v95 = a2;
  v5 = type metadata accessor for ActivitySharingHighlightViewModel(0);
  v87 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v88 = v6;
  v7 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Font.Leading(0);
  v93 = *(_QWORD *)(v8 - 8);
  v94 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AttributedString(0);
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)&v13 = __chkstk_darwin(v11).n128_u64[0];
  v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = a1;
  v16 = objc_msgSend(a1, "workoutActivityType", v13);
  v17 = objc_msgSend(*(id *)(v3 + *(int *)(v5 + 28)), "unitManager");
  v18 = v17;
  v96 = v12;
  v97 = v11;
  v89 = v7;
  if (v16 == (id)84)
  {
    if (v17)
    {
      if (qword_10081DB00 != -1)
        swift_once(&qword_10081DB00, sub_1003754C8);
      v19 = (id)qword_10082FF38;
      objc_msgSend(v98, "duration");
      v20 = objc_msgSend(v19, "stringFromTimeInterval:");

      if (v20)
      {
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v23 = v22;

        v20 = 0;
        v24 = 0;
      }
      else
      {

        v21 = 0;
        v24 = 0;
        v23 = 0xE000000000000000;
      }
      v29 = 2;
      goto LABEL_11;
    }
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  if (!v17)
    goto LABEL_21;
  v25 = v98;
  v21 = sub_10037387C(v98, v17);
  v23 = v26;
  v20 = v27;
  v24 = v28;

  v29 = (uint64_t)objc_msgSend(v25, "_goalType");
LABEL_11:
  v30 = objc_msgSend((id)objc_opt_self(ARUIMetricColors), "metricColorsForGoalTypeIdentifier:", v29);
  v31 = objc_msgSend(v30, "nonGradientTextColor");

  if (v24)
  {
    *(_QWORD *)&v99 = v20;
    *((_QWORD *)&v99 + 1) = v24;
    v32 = sub_100038CA0();
    v33 = StringProtocol.localizedUppercase.getter(&type metadata for String, v32);
    v35 = v34;
  }
  else
  {
    v33 = 0;
    v35 = 0xE000000000000000;
  }
  v91 = v24;
  v86 = v3;
  if (qword_10081D948 != -1)
    swift_once(&qword_10081D948, sub_10026FCDC);
  v92 = v15;
  v90 = v31;
  sub_100436EB8(v21, v23, v33, v35, (void *)qword_10082A9D0, v31, (uint64_t)v15);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v23);
  v36 = (void *)objc_opt_self(FIUIWorkoutActivityType);
  v37 = v98;
  v38 = objc_msgSend(v36, "activityTypeWithWorkout:", v98);
  v39 = objc_msgSend(v38, "localizedName");

  v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v42 = v41;

  *(_QWORD *)&v99 = v40;
  *((_QWORD *)&v99 + 1) = v42;
  v43 = sub_100038CA0();
  v44 = Text.init<A>(_:)(&v99, &type metadata for String, v43);
  v46 = v45;
  v48 = v47;
  v50 = v49 & 1;
  v51 = static Font.subheadline.getter();
  v53 = v93;
  v52 = v94;
  (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v10, enum case for Font.Leading.tight(_:), v94);
  v54 = Font.leading(_:)(v10, v51);
  v55 = swift_release(v51);
  v56.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v53 + 8))(v10, v52, v55);
  v57 = Text.font(_:)(v54, v44, v46, v50, v48, v56);
  v59 = v58;
  v61 = v60;
  v63 = v62;
  swift_release(v54);
  sub_1000E4458(v44, v46, v50);
  swift_bridgeObjectRelease(v48);
  v64 = v37;
  LOBYTE(v46) = sub_1005EEA88(v64);

  if ((v46 & 1) != 0)
  {
    v70 = (uint64_t)v89;
    sub_10004F8C8(v86, (uint64_t)v89, type metadata accessor for ActivitySharingHighlightViewModel);
    v71 = *(unsigned __int8 *)(v87 + 80);
    v72 = (v71 + 16) & ~v71;
    v73 = (v88 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
    v74 = swift_allocObject(&unk_100792238, v73 + 8, v71 | 7);
    sub_100273E98(v70, v74 + v72);
    *(_QWORD *)(v74 + v73) = v64;
    v65 = v64;
    v75 = &unk_10082AAD0;
  }
  else
  {
    v75 = 0;
    v74 = 0;
  }
  v76 = v97;
  v77 = v95;
  v78 = v61 & 1;
  v79 = static HorizontalAlignment.center.getter(v65, v66, v67, v68, v69);
  v80 = (uint64_t)v92;
  sub_100272544((uint64_t)v92, v57, v59, v78, v63, (uint64_t)v75, v74, (uint64_t)&v99);
  v81 = v100;
  v82 = v103;
  v83 = v101;
  v84 = v99;
  v85 = v102;
  *(_QWORD *)v77 = v79;
  *(_QWORD *)(v77 + 8) = 0;
  *(_BYTE *)(v77 + 16) = 1;
  *(_OWORD *)(v77 + 24) = v84;
  *(_BYTE *)(v77 + 40) = v81;
  *(_OWORD *)(v77 + 48) = v83;
  *(_OWORD *)(v77 + 64) = v85;
  *(_QWORD *)(v77 + 80) = v82;
  sub_1000E4458(v57, v59, v78);
  swift_bridgeObjectRelease(v63);
  sub_100022BA4((uint64_t)v75, v74);

  (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v80, v76);
  swift_bridgeObjectRelease(v91);
}

uint64_t sub_100271B0C(uint64_t result)
{
  *(_BYTE *)(result + 129) = 1;
  return result;
}

unint64_t sub_100271B18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082AAA0;
  if (!qword_10082AAA0)
  {
    v1 = sub_100007050(&qword_10082AA90);
    sub_100028384(&qword_10082AAA8, &qword_10082AAB0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100028384(&qword_100826760, &qword_100826750, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082AAA0);
  }
  return result;
}

double sub_100271BBC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double result;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  int v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[2];

  v72 = a3;
  v7 = type metadata accessor for AttributedString(0);
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  __chkstk_darwin(v7);
  v66 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Font.Leading(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73[0] = a1;
  v73[1] = a2;
  v13 = sub_100038CA0();
  swift_bridgeObjectRetain(a2);
  v14 = Text.init<A>(_:)(v73, &type metadata for String, v13);
  v16 = v15;
  v18 = v17;
  v20 = v19 & 1;
  v21 = static Font.subheadline.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for Font.Leading.tight(_:), v9);
  v22 = Font.leading(_:)(v12, v21);
  v23 = swift_release(v21);
  v24.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v23);
  v25 = Text.font(_:)(v22, v14, v16, v20, v18, v24);
  v67 = v26;
  v68 = v25;
  LOBYTE(v9) = v27;
  v69 = v28;
  swift_release(v22);
  v65 = v9 & 1;
  sub_1000E4458(v14, v16, v20);
  swift_bridgeObjectRelease(v18);
  KeyPath = swift_getKeyPath(&unk_100631748);
  v63 = swift_getKeyPath(&unk_100631778);
  v29 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v66, v72, v71);
  v30 = Text.init(_:)(v29);
  v32 = v31;
  v34 = v33;
  v36 = v35 & 1;
  LODWORD(v73[0]) = static HierarchicalShapeStyle.secondary.getter(v37);
  v38 = Text.foregroundStyle<A>(_:)(v73, v30, v32, v36, v34, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v40 = v39;
  v42 = v41;
  v44 = v43 & 1;
  sub_1000E4458(v30, v32, v36);
  v45 = swift_bridgeObjectRelease(v34);
  v46 = static Font.footnote.getter(v45);
  v48 = Text.font(_:)(v46, v38, v40, v44, v42, v47);
  v50 = v49;
  LOBYTE(v32) = v51;
  v53 = v52;
  swift_release(v46);
  LOBYTE(v46) = v32 & 1;
  sub_1000E4458(v38, v40, v44);
  swift_bridgeObjectRelease(v42);
  v54 = v65;
  LOBYTE(v73[0]) = v65;
  v56 = v67;
  v55 = v68;
  *(_QWORD *)a4 = v68;
  *(_QWORD *)(a4 + 8) = v56;
  *(_BYTE *)(a4 + 16) = v54;
  v57 = v69;
  v59 = v63;
  v58 = KeyPath;
  *(_QWORD *)(a4 + 24) = v69;
  *(_QWORD *)(a4 + 32) = v58;
  *(_QWORD *)(a4 + 40) = 2;
  *(_BYTE *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = v59;
  *(_BYTE *)(a4 + 64) = 1;
  *(_QWORD *)(a4 + 72) = v48;
  *(_QWORD *)(a4 + 80) = v50;
  *(_BYTE *)(a4 + 88) = v46;
  *(_QWORD *)(a4 + 96) = v53;
  v60 = v55;
  sub_1000E439C(v55, v56, v54);
  swift_bridgeObjectRetain(v57);
  swift_retain(v58);
  swift_retain(v59);
  sub_1000E439C(v48, v50, v46);
  swift_bridgeObjectRetain(v53);
  sub_1000E4458(v48, v50, v46);
  swift_bridgeObjectRelease(v53);
  sub_1000E4458(v60, v56, v73[0]);
  swift_release(v59);
  swift_release(v58);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v57).n128_u64[0];
  return result;
}

double sub_100271F08@<D0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  __n128 v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double result;
  _BYTE v62[4];
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  int v72[3];

  v70 = a2;
  v5 = type metadata accessor for AttributedString(0);
  v68 = *(_QWORD *)(v5 - 8);
  v69 = v5;
  __chkstk_darwin(v5);
  v67 = &v62[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Font.Leading(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v62[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) != 0)
  {
    v11 = 0xD00000000000001BLL;
    v12 = 0x8000000100693A60;
  }
  else
  {
    v12 = 0x8000000100693A40;
    v11 = 0xD000000000000017;
  }
  v13 = LocalizedStringKey.init(stringLiteral:)(v11, v12);
  v14 = Text.init(_:tableName:bundle:comment:)(v13);
  v16 = v15;
  v18 = v17;
  v20 = v19 & 1;
  v21 = static Font.subheadline.getter();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Font.Leading.tight(_:), v7);
  v22 = Font.leading(_:)(v10, v21);
  v23 = swift_release(v21);
  v24.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v23);
  v25 = Text.font(_:)(v22, v14, v16, v20, v18, v24);
  v64 = v26;
  v65 = v25;
  v28 = v27;
  v66 = v29;
  swift_release(v22);
  v63 = v28 & 1;
  sub_1000E4458(v14, v16, v20);
  v30 = swift_bridgeObjectRelease(v18);
  v31 = v67;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v68 + 16))(v67, v70, v69, v30);
  v32 = Text.init(_:)(v31);
  v34 = v33;
  v36 = v35;
  v38 = v37 & 1;
  v72[0] = static HierarchicalShapeStyle.secondary.getter(v39);
  v40 = Text.foregroundStyle<A>(_:)(v72, v32, v34, v38, v36, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v42 = v41;
  v44 = v43;
  v46 = v45 & 1;
  sub_1000E4458(v32, v34, v38);
  v47 = swift_bridgeObjectRelease(v36);
  v48 = static Font.footnote.getter(v47);
  v50 = Text.font(_:)(v48, v40, v42, v46, v44, v49);
  v52 = v51;
  LOBYTE(v38) = v53;
  v55 = v54;
  swift_release(v48);
  sub_1000E4458(v40, v42, v46);
  swift_bridgeObjectRelease(v44);
  v56 = v63;
  v71 = v63;
  v58 = v64;
  v57 = v65;
  *(_QWORD *)a3 = v65;
  *(_QWORD *)(a3 + 8) = v58;
  *(_BYTE *)(a3 + 16) = v56;
  v59 = v66;
  *(_QWORD *)(a3 + 24) = v66;
  *(_QWORD *)(a3 + 32) = v50;
  *(_QWORD *)(a3 + 40) = v52;
  *(_BYTE *)(a3 + 48) = v38 & 1;
  *(_QWORD *)(a3 + 56) = v55;
  v60 = v57;
  sub_1000E439C(v57, v58, v56);
  swift_bridgeObjectRetain(v59);
  sub_1000E439C(v50, v52, v38 & 1);
  swift_bridgeObjectRetain(v55);
  sub_1000E4458(v50, v52, v38 & 1);
  swift_bridgeObjectRelease(v55);
  sub_1000E4458(v60, v58, v71);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v59).n128_u64[0];
  return result;
}

uint64_t sub_100272234(uint64_t result)
{
  *(_BYTE *)(result + 128) = 1;
  return result;
}

uint64_t sub_100272240(uint64_t result)
{
  *(_BYTE *)(result + 129) = 0;
  return result;
}

double sub_100272248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, char a17)
{
  uint64_t v19;
  double result;

  v19 = a11;
  sub_1000E439C(a4, a5, a6 & 1);
  swift_bridgeObjectRetain(a7);
  if ((a17 & 1) != 0)
  {
    sub_1000E439C(a8, a9, a10 & 1);
  }
  else
  {
    swift_retain(a8);
    swift_retain(a11);
    sub_1000E439C(a13, a14, a15 & 1);
    v19 = a16;
  }
  *(_QWORD *)&result = swift_bridgeObjectRetain(v19).n128_u64[0];
  return result;
}

uint64_t sub_100272304(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 128);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), v4);
  return a1;
}

double sub_100272368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, char a17)
{
  uint64_t v19;
  double result;

  v19 = a11;
  sub_1000E4458(a4, a5, a6 & 1);
  if ((a17 & 1) != 0)
  {
    swift_bridgeObjectRelease(a7);
    sub_1000E4458(a8, a9, a10 & 1);
  }
  else
  {
    swift_release(a11);
    swift_release(a8);
    swift_bridgeObjectRelease(a7);
    sub_1000E4458(a13, a14, a15 & 1);
    v19 = a16;
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v19).n128_u64[0];
  return result;
}

uint64_t sub_100272424(uint64_t result)
{
  *(_BYTE *)(result + 128) = 0;
  return result;
}

uint64_t sub_10027242C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_BYTE *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  sub_1000E439C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  sub_1000E439C(v5, v6, v7);
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_1002724B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_BYTE *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  sub_1000E4458(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  sub_1000E4458(v5, v6, v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

double sub_100272544@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  double result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v35 = a7;
  v15 = type metadata accessor for AttributedString(0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v19 + 16))(v18, a1, v16);
  v20 = Text.init(_:)(v18);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v37 = a2;
  v38 = a3;
  a4 &= 1u;
  v39 = a4;
  v40 = a5;
  swift_bridgeObjectRetain(a5);
  sub_1000E439C(a2, a3, a4);
  v27 = AnyView.init<A>(_:)(&v37, &type metadata for Text, &protocol witness table for Text);
  if (a6)
  {
    v28 = swift_allocObject(&unk_100792288, 32, 7);
    v29 = v35;
    *(_QWORD *)(v28 + 16) = a6;
    *(_QWORD *)(v28 + 24) = v29;
    v30 = &unk_10082AAF0;
  }
  else
  {
    v30 = 0;
    v28 = 0;
    v29 = v35;
  }
  v31 = v24 & 1;
  v36 = v27;
  sub_10003AFE0(a6, v29);
  State.init(wrappedValue:)(&v37, &v36, &type metadata for AnyView);
  v32 = v37;
  v33 = v38;
  *(_QWORD *)a8 = v20;
  *(_QWORD *)(a8 + 8) = v22;
  *(_BYTE *)(a8 + 16) = v31;
  *(_QWORD *)(a8 + 24) = v26;
  *(_QWORD *)(a8 + 32) = v32;
  *(_QWORD *)(a8 + 40) = v33;
  *(_QWORD *)(a8 + 48) = v30;
  *(_QWORD *)(a8 + 56) = v28;
  sub_1000E439C(v20, v22, v31);
  swift_retain(v33);
  swift_bridgeObjectRetain(v26);
  swift_retain(v32);
  sub_10003AFE0((uint64_t)v30, v28);
  swift_release(v33);
  swift_release(v32);
  sub_100022BA4((uint64_t)v30, v28);
  sub_1000E4458(v20, v22, v31);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v26).n128_u64[0];
  return result;
}

uint64_t sub_100272728(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_100272780;
  return v5();
}

uint64_t sub_100272780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD *v9;
  uint64_t v11;

  v9 = *(_QWORD **)(*v4 + 16);
  v11 = *v4;
  swift_task_dealloc(*(_QWORD *)(*v4 + 24));
  *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  return (*(uint64_t (**)(void))(v11 + 8))();
}

uint64_t sub_1002727F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch(sub_100272808, 0, 0);
}

uint64_t sub_100272808()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 64) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 48);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 72) = v2;
  v3 = sub_100047110(&qword_10082AAD8);
  *v2 = v0;
  v2[1] = sub_1002728B8;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000003ALL, 0x8000000100693A80, sub_100273FD8, v1, v3);
}

uint64_t sub_1002728B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 72));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100272914, 0, 0);
}

uint64_t sub_100272914()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

double sub_100272924(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  double result;
  uint64_t v15;

  v6 = sub_100047110(&qword_10082AAE0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = *(char **)(a2 + *(int *)(type metadata accessor for ActivitySharingHighlightViewModel(0) + 32));
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = swift_allocObject(&unk_100792260, v11 + v8, v10 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v13 = a3;
  sub_10010E6C8(v13, (void (*)(_QWORD))sub_100273FEC, v12, v9);

  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_100272A24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  __int128 v32;
  __int128 v33;

  v2 = type metadata accessor for Font.Leading(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = objc_msgSend(*(id *)(a1 + OBJC_IVAR___CHCatalogItemViewModel_title), "string", v4);
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    *(_QWORD *)&v32 = v8;
    *((_QWORD *)&v32 + 1) = v10;
    v11 = sub_100038CA0();
    v12 = Text.init<A>(_:)(&v32, &type metadata for String, v11);
    v14 = v13;
    v16 = v15;
    v18 = v17 & 1;
    v19 = static Font.subheadline.getter();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for Font.Leading.tight(_:), v2);
    v20 = Font.leading(_:)(v6, v19);
    v21 = swift_release(v19);
    v22.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v3 + 8))(v6, v2, v21);
    v23 = Text.font(_:)(v20, v12, v14, v18, v16, v22);
    v25 = v24;
    LOBYTE(v19) = v26;
    v28 = v27;
    swift_release(v20);
    sub_1000E4458(v12, v14, v18);
    swift_bridgeObjectRelease(v16);
    *(_QWORD *)&v32 = v23;
    *((_QWORD *)&v32 + 1) = v25;
    *(_QWORD *)&v33 = v19 & 1;
    *((_QWORD *)&v33 + 1) = v28;
  }
  else
  {
    v32 = 0u;
    v33 = 0u;
  }
  v29 = sub_100047110(&qword_10082AAE0);
  return CheckedContinuation.resume(returning:)(&v32, v29);
}

uint64_t sub_100272BD0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_100272C28;
  return v5();
}

uint64_t sub_100272C28(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v5;

  v3 = *(_QWORD **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 24));
  *v3 = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_100272C78(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2[15] = a1;
  v2[16] = a2;
  v3 = type metadata accessor for ActivitySharingHighlightViewModel(0);
  v2[17] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[18] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v2[19] = v5;
  v2[20] = swift_task_alloc((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10082AB38);
  v2[21] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[22] = swift_task_alloc(v7);
  v2[23] = swift_task_alloc(v7);
  v8 = sub_100047110(&qword_100821238);
  v2[24] = v8;
  v2[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RoundedRectangle(0);
  v2[26] = v9;
  v2[27] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_100823AC8);
  v2[28] = v10;
  v2[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_10082AB40);
  v2[30] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Image.ResizingMode(0);
  v2[31] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[32] = v13;
  v2[33] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100272DD4, 0, 0);
}

void sub_100272DD4()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t *v33;
  double *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  double v39;
  double v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88[10];

  v1 = sub_1003B13FC(*(id *)(v0 + 120));
  v2 = objc_msgSend(v1, "nonGradientTextColor");

  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 128);
    v3 = *(_QWORD *)(v0 + 136);
    v5 = *(void **)(v0 + 120);
    v6 = Color.init(uiColor:)(v2);
    *(_QWORD *)(v0 + 272) = v6;
    v75 = *(int *)(v3 + 36);
    v76 = v4;
    v7 = *(unsigned __int8 *)(v4 + v75);
    v8 = 1;
    if (*(_BYTE *)(v4 + v75))
      v9 = 2;
    else
      v9 = 1;
    v10 = sub_100373CA4(v5, v9);
    v12 = v11;
    *(_QWORD *)(v0 + 280) = v10;
    *(_QWORD *)(v0 + 288) = v11;
    v78 = v13;
    *(_QWORD *)(v0 + 296) = v13;
    if (v10)
    {
      v10 = (id)Image.init(uiImage:)(v10);
      v8 = 2;
    }
    v85 = (uint64_t)v10;
    *(_QWORD *)(v0 + 304) = v10;
    if (v12)
    {
      v15 = *(_QWORD *)(v0 + 256);
      v14 = *(_QWORD *)(v0 + 264);
      v16 = *(_QWORD *)(v0 + 248);
      v17 = Image.init(uiImage:)(objc_msgSend((id)v12, "imageWithRenderingMode:", v8));
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104))(v14, enum case for Image.ResizingMode.stretch(_:), v16);
      v18 = Image.resizable(capInsets:resizingMode:)(v14, v17, 0.0, 0.0, 0.0, 0.0);
      v19 = swift_release(v17);
      v20 = v16;
      v21 = v6;
      v22 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v15 + 8))(v14, v20, v19);
      if (v7)
        v23 = 0x404B800000000000;
      else
        v23 = 0x4057400000000000;
      v24 = static Alignment.center.getter(v22);
      _FrameLayout.init(width:height:alignment:)((_QWORD *)(v0 + 16), v23, 0, v23, 0, v24, v25);
      v26 = *(_QWORD *)(v0 + 16);
      v12 = *(unsigned __int8 *)(v0 + 24);
      v27 = *(_QWORD *)(v0 + 32);
      v28 = *(unsigned __int8 *)(v0 + 40);
      v29 = *(_QWORD *)(v0 + 48);
      v30 = *(_QWORD *)(v0 + 56);
      KeyPath = swift_getKeyPath(&unk_1006317A8);
      swift_retain(v21);
    }
    else
    {
      v18 = 0;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v30 = 0;
      KeyPath = 0;
      v21 = 0;
    }
    *(_QWORD *)(v0 + 368) = KeyPath;
    *(_QWORD *)(v0 + 376) = v21;
    v80 = KeyPath;
    v81 = v30;
    *(_QWORD *)(v0 + 352) = v29;
    *(_QWORD *)(v0 + 360) = v30;
    v82 = v29;
    v83 = v28;
    *(_QWORD *)(v0 + 336) = v27;
    *(_QWORD *)(v0 + 344) = v28;
    *(_QWORD *)(v0 + 320) = v26;
    *(_QWORD *)(v0 + 328) = v12;
    v84 = v18;
    *(_QWORD *)(v0 + 312) = v18;
    v32 = *(_QWORD *)(v0 + 240);
    v86 = v21;
    v87 = v27;
    if (v78)
    {
      v33 = *(uint64_t **)(v0 + 232);
      v35 = *(_QWORD *)(v0 + 208);
      v34 = *(double **)(v0 + 216);
      v36 = *(_QWORD *)(v0 + 200);
      v73 = *(_QWORD *)(v0 + 192);
      v74 = *(_QWORD *)(v0 + 224);
      v37 = *(unsigned __int8 *)(v76 + v75);
      v38 = Image.init(uiImage:)(v78);
      if (v37)
        v39 = 35.0;
      else
        v39 = 60.0;
      if (v37)
        v40 = 7.0;
      else
        v40 = 14.0;
      v41 = (char *)v34 + *(int *)(v35 + 20);
      v42 = enum case for RoundedCornerStyle.continuous(_:);
      v43 = type metadata accessor for RoundedCornerStyle(0);
      v44 = v42;
      v27 = v87;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v41, v44, v43);
      *v34 = v40;
      v34[1] = v40;
      sub_10004F8C8((uint64_t)v34, v36, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      *(_WORD *)(v36 + *(int *)(v73 + 36)) = 256;
      sub_100021CC0(v36, (uint64_t)v33 + *(int *)(v74 + 36), &qword_100821238);
      *v33 = v38;
      swift_retain(v38);
      sub_10001BE90(v36, &qword_100821238);
      sub_1001D2ACC((uint64_t)v34);
      swift_release(v38);
      sub_100021CC0((uint64_t)v33, v32, &qword_100823AC8);
      v45 = sub_100047110(&qword_10082AB48);
      v46 = (double *)(v32 + *(int *)(v45 + 36));
      *v46 = v39;
      v46[1] = v39;
      sub_10001BE90((uint64_t)v33, &qword_100823AC8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v32, 0, 1, v45);
    }
    else
    {
      v47 = sub_100047110(&qword_10082AB48);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v32, 1, 1, v47);
    }
    v48 = *(_QWORD **)(v0 + 184);
    v77 = *(_QWORD *)(v0 + 240);
    v79 = *(void **)(v0 + 120);
    v88[0] = v84;
    v88[1] = v26;
    v88[2] = v12;
    v88[3] = v27;
    v88[4] = v83;
    v88[5] = v82;
    v88[6] = v81;
    v88[7] = v80;
    v88[8] = v86;
    v49 = sub_10027436C(v84, v26, v12, v27, v83, v82, v81, v80, v86);
    *v48 = static Alignment.center.getter(v49);
    v48[1] = v50;
    v51 = sub_100047110(&qword_10082AB50);
    sub_100273614(v85, v88, v77, (_QWORD *)((char *)v48 + *(int *)(v51 + 44)));
    sub_1002743A8(v84, v26, v12, v87, v83, v82, v81, v80, v86);
    v52 = v79;
    v53 = sub_1005EEA88(v52);

    if ((v53 & 1) != 0)
    {
      v54 = *(_QWORD *)(v0 + 152);
      v55 = *(_QWORD *)(v0 + 160);
      v56 = *(_QWORD *)(v0 + 144);
      v57 = *(void **)(v0 + 120);
      sub_10004F8C8(*(_QWORD *)(v0 + 128), v55, type metadata accessor for ActivitySharingHighlightViewModel);
      v58 = *(unsigned __int8 *)(v56 + 80);
      v59 = (v58 + 16) & ~v58;
      v60 = (v54 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
      v61 = swift_allocObject(&unk_100792328, v60 + 8, v58 | 7);
      sub_100273E98(v55, v61 + v59);
      *(_QWORD *)(v61 + v60) = v57;
      v62 = v57;
      v63 = &unk_10082AB70;
    }
    else
    {
      v63 = 0;
      v61 = 0;
    }
    *(_QWORD *)(v0 + 384) = v63;
    *(_QWORD *)(v0 + 392) = v61;
    v64 = *(_QWORD *)(v0 + 176);
    v65 = *(_QWORD *)(v0 + 168);
    sub_100021CC0(*(_QWORD *)(v0 + 184), v64, &qword_10082AB38);
    v66 = sub_100028384(&qword_10082AB58, &qword_10082AB38, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    *(_QWORD *)(v0 + 400) = AnyView.init<A>(_:)(v64, v65, v66);
    if ((v53 & 1) != 0)
    {
      v67 = swift_allocObject(&unk_100792300, 32, 7);
      *(_QWORD *)(v67 + 16) = v63;
      *(_QWORD *)(v67 + 24) = v61;
      v68 = &unk_10082AB60;
    }
    else
    {
      v68 = 0;
      v67 = 0;
    }
    *(_QWORD *)(v0 + 408) = v68;
    *(_QWORD *)(v0 + 416) = v67;
    v69 = type metadata accessor for MainActor(0);
    v70 = sub_10003AFE0((uint64_t)v63, v61);
    *(_QWORD *)(v0 + 424) = static MainActor.shared.getter(v70);
    v71 = dispatch thunk of Actor.unownedExecutor.getter(v69, &protocol witness table for MainActor);
    swift_task_switch(sub_100273380, v71, v72);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100273380()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[50];
  swift_release(v0[53]);
  v0[14] = v1;
  State.init(wrappedValue:)(v0 + 12, v0 + 14, &type metadata for AnyView);
  v2 = v0[13];
  v0[54] = v0[12];
  v0[55] = v2;
  return swift_task_switch(sub_1002733E4, 0, 0);
}

uint64_t sub_1002733E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = *(_QWORD *)(v0 + 432);
  v1 = *(_QWORD *)(v0 + 440);
  v4 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 416);
  v24 = *(_QWORD *)(v0 + 368);
  v21 = *(_QWORD *)(v0 + 360);
  v19 = *(_QWORD *)(v0 + 352);
  v17 = *(_QWORD *)(v0 + 376);
  v18 = *(_QWORD *)(v0 + 344);
  v15 = *(_QWORD *)(v0 + 392);
  v16 = *(_QWORD *)(v0 + 336);
  v13 = *(_QWORD *)(v0 + 384);
  v14 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 312);
  v12 = *(_QWORD *)(v0 + 320);
  v20 = *(void **)(v0 + 296);
  v23 = *(void **)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 272);
  v25 = *(void **)(v0 + 280);
  v27 = *(_QWORD *)(v0 + 264);
  v26 = *(_QWORD *)(v0 + 240);
  v28 = *(_QWORD *)(v0 + 232);
  v29 = *(_QWORD *)(v0 + 216);
  v30 = *(_QWORD *)(v0 + 200);
  v22 = *(_QWORD *)(v0 + 184);
  v31 = *(_QWORD *)(v0 + 176);
  v32 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v0 + 80) = v4;
  *(_QWORD *)(v0 + 88) = v3;
  swift_retain(v1);
  swift_retain(v2);
  sub_10003AFE0(v4, v3);
  v7 = sub_100047110(&qword_10082AB20);
  v8 = sub_100028384(&qword_10082AB30, &qword_10082AB20, (uint64_t)&unk_100634238);
  v9 = AnyView.init<A>(_:)(v0 + 64, v7, v8);
  swift_release(v6);
  swift_release(v2);
  swift_release(v1);
  swift_release(v5);
  sub_100022BA4(v4, v3);
  sub_100022BA4(v13, v15);
  sub_1002743A8(v11, v12, v14, v16, v18, v19, v21, v24, v17);

  sub_10001BE90(v22, &qword_10082AB38);
  sub_10001BE90(v26, &qword_10082AB40);
  swift_task_dealloc(v27);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v22);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
}

double sub_100273614@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;

  v38 = a1;
  v7 = sub_100047110(&qword_10082AB40);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v9;
  __chkstk_darwin(v10);
  v11 = *a2;
  v12 = a2[1];
  v13 = a2[2];
  v14 = a2[3];
  v35 = (uint64_t)&v31 - v15;
  v36 = v13;
  v16 = a2[4];
  v33 = a2[5];
  v34 = v12;
  v17 = a2[6];
  v32 = a2[7];
  v18 = a2[8];
  v19 = (char *)&v31 - v15;
  sub_100021CC0(a3, (uint64_t)&v31 - v15, &qword_10082AB40);
  sub_100021CC0((uint64_t)v19, (uint64_t)v9, &qword_10082AB40);
  v20 = v38;
  *a4 = v38;
  a4[1] = v11;
  v21 = v36;
  a4[2] = v12;
  a4[3] = v21;
  a4[4] = v14;
  a4[5] = v16;
  v22 = v32;
  v23 = v33;
  a4[6] = v33;
  a4[7] = v17;
  a4[8] = v22;
  a4[9] = v18;
  v24 = sub_100047110(&qword_10082AB98);
  sub_100021CC0((uint64_t)v37, (uint64_t)a4 + *(int *)(v24 + 64), &qword_10082AB40);
  v25 = v20;
  swift_retain(v20);
  v26 = v34;
  v27 = v21;
  v28 = v17;
  sub_10027436C(v11, v34, v27, v14, v16, v23, v17, v22, v18);
  swift_retain(v25);
  v29 = v36;
  sub_10027436C(v11, v26, v36, v14, v16, v23, v28, v22, v18);
  sub_10001BE90(v35, &qword_10082AB40);
  sub_10001BE90((uint64_t)v37, &qword_10082AB40);
  sub_1002743A8(v11, v26, v29, v14, v16, v23, v28, v22, v18);
  *(_QWORD *)&result = swift_release(v38).n128_u64[0];
  return result;
}

uint64_t sub_10027381C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch(sub_100273834, 0, 0);
}

uint64_t sub_100273834()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 48) = v2;
  v3 = sub_100047110(&qword_10082AB78);
  *v2 = v0;
  v2[1] = sub_1002738E4;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000038, 0x8000000100693AC0, sub_1002745BC, v1, v3);
}

uint64_t sub_1002738E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 48));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100273940, 0, 0);
}

uint64_t sub_100273940()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

double sub_100273948(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  double result;
  uint64_t v20;
  id v21;

  v21 = a3;
  v5 = type metadata accessor for ActivitySharingHighlightViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = sub_100047110(&qword_10082AB80);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v12 = *(char **)(a2 + *(int *)(v5 + 32));
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v11);
  sub_10004F8C8(a2, (uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ActivitySharingHighlightViewModel);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = *(unsigned __int8 *)(v6 + 80);
  v16 = (v10 + v15 + v14) & ~v15;
  v17 = swift_allocObject(&unk_100792350, v16 + v7, v13 | v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17 + v14, (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  sub_100273E98((uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  v18 = v21;
  sub_10010E6C8(v18, (void (*)(_QWORD))sub_100274730, v17, v12);

  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

void sub_100273ABC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_100047110(&qword_10082AB80);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  if (a1)
  {
    v9 = type metadata accessor for ActivitySharingHighlightViewModel(0);
    if (*(_BYTE *)(a3 + *(int *)(v9 + 36)))
      v10 = 100.0;
    else
      v10 = 144.0;
    if (*(_BYTE *)(a3 + *(int *)(v9 + 36)))
      v11 = 177.777778;
    else
      v11 = 271.418182;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
    v12 = *(unsigned __int8 *)(v7 + 80);
    v13 = (v12 + 16) & ~v12;
    v14 = swift_allocObject(&unk_100792378, v13 + v8, v12 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    v15 = a1;
    sub_10039636C(v15, (uint64_t)sub_1002747A8, v14, v11, v10);
    swift_release(v14);

  }
  else
  {
    v17 = 0;
    CheckedContinuation.resume(returning:)(&v17, v6);
  }
}

uint64_t sub_100273C18(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v2 = sub_100047110(&qword_100821238);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v5);
  v7 = (_OWORD *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100047110(&qword_10082AB88);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v30 - v12);
  if (a1)
  {
    v14 = Image.init(uiImage:)(a1);
    v15 = (char *)v7 + *(int *)(v5 + 20);
    v16 = enum case for RoundedCornerStyle.continuous(_:);
    v17 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
    __asm { FMOV            V0.2D, #8.0 }
    *v7 = _Q0;
    sub_10004F8C8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    *(_WORD *)&v4[*(int *)(v2 + 36)] = 256;
    v23 = sub_100047110(&qword_100823AC8);
    sub_100021CC0((uint64_t)v4, (uint64_t)v13 + *(int *)(v23 + 36), &qword_100821238);
    *v13 = v14;
    swift_retain(v14);
    sub_10001BE90((uint64_t)v4, &qword_100821238);
    sub_1001D2ACC((uint64_t)v7);
    v24 = swift_release(v14);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128))(*(_QWORD *)(v23 - 8) + 56))(v13, 0, 1, v23, v24);
  }
  else
  {
    v25 = sub_100047110(&qword_100823AC8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v25 - 8) + 56))(v13, 1, 1, v25, v26);
  }
  sub_100021CC0((uint64_t)v13, (uint64_t)v10, &qword_10082AB88);
  v27 = sub_100274808();
  v31 = AnyView.init<A>(_:)(v10, v8, v27);
  v28 = sub_100047110(&qword_10082AB80);
  CheckedContinuation.resume(returning:)(&v31, v28);
  return sub_10001BE90((uint64_t)v13, &qword_10082AB88);
}

uint64_t sub_100273E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivitySharingHighlightViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100273EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(type metadata accessor for ActivitySharingHighlightViewModel(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8));
  v6 = (_QWORD *)swift_task_alloc(dword_10082AACC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_100273F68;
  v6[6] = v4;
  v6[7] = v5;
  return swift_task_switch(sub_100272808, 0, 0);
}

uint64_t sub_100273F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v10;

  v10 = *v4;
  swift_task_dealloc(*(_QWORD *)(*v4 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a2, a3, a4);
}

double sub_100273FD8(uint64_t a1)
{
  uint64_t v1;

  return sub_100272924(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100273FE0()
{
  return sub_1001667E4(&qword_10082AAE0);
}

uint64_t sub_100273FEC(uint64_t a1)
{
  return sub_1002747BC(a1, &qword_10082AAE0, (uint64_t (*)(uint64_t, uint64_t))sub_100272A24);
}

uint64_t sub_100274000()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100274024(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10082AAEC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000DA0E4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10082AAE8 + dword_10082AAE8))(a1, v4);
}

uint64_t sub_100274094()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  v7 = v0 + v4;
  v8 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v9 = v7 + v8[5];
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + v8[6];
  v12 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);

  v13 = v7 + v1[10];
  v14 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);

  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002741CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivitySharingHighlightViewModel(0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = v0 + ((v2 + 24) & ~v2);
  v5 = (_QWORD *)swift_task_alloc(dword_10082AAFC);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_100274238;
  return sub_100272C78(v3, v4);
}

uint64_t sub_100274238(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_100274288(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10082AB0C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000EA380;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10082AB08 + dword_10082AB08))(a1, v4);
}

unint64_t sub_1002742F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082AB28;
  if (!qword_10082AB28)
  {
    v1 = sub_100007050(&qword_10082AB18);
    sub_10016F528();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082AB28);
  }
  return result;
}

uint64_t sub_10027436C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;

  if (result)
  {
    v10 = result;
    swift_retain(a9);
    swift_retain(v10);
    return swift_retain(a8);
  }
  return result;
}

uint64_t sub_1002743A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (result)
  {
    swift_release(result);
    swift_release(a8);
    return swift_release(a9);
  }
  return result;
}

uint64_t sub_1002743E4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v4;

  v8 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v9 = v7 + v8[5];
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + v8[6];
  v12 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);

  v13 = v7 + v1[10];
  v14 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100274528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(type metadata accessor for ActivitySharingHighlightViewModel(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8));
  v6 = (_QWORD *)swift_task_alloc(dword_10082AB6C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_100274918;
  v6[3] = v4;
  v6[4] = v5;
  return swift_task_switch(sub_100273834, 0, 0);
}

double sub_1002745BC(uint64_t a1)
{
  uint64_t v1;

  return sub_100273948(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1002745C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = sub_100047110(&qword_10082AB80);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  v12 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v13 = v0 + v9 + v12[5];
  v14 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = v0 + v9 + v12[6];
  v16 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);

  v17 = v0 + v9 + v6[10];
  v18 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);

  return swift_deallocObject(v0, v10, v11);
}

void sub_100274730(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_100047110(&qword_10082AB80) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivitySharingHighlightViewModel(0) - 8) + 80);
  sub_100273ABC(a1, v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_10027479C()
{
  return sub_1001667E4(&qword_10082AB80);
}

uint64_t sub_1002747A8(uint64_t a1)
{
  return sub_1002747BC(a1, &qword_10082AB80, (uint64_t (*)(uint64_t, uint64_t))sub_100273C18);
}

uint64_t sub_1002747BC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_100047110(a2) - 8) + 80);
  return a3(a1, v3 + ((v5 + 16) & ~v5));
}

unint64_t sub_100274808()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082AB90;
  if (!qword_10082AB90)
  {
    v1 = sub_100007050(&qword_10082AB88);
    sub_100186FDC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10082AB90);
  }
  return result;
}

unint64_t sub_100274874()
{
  unint64_t result;

  result = qword_10082ABA0;
  if (!qword_10082ABA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.ForegroundColorAttribute, &type metadata for AttributeScopes.UIKitAttributes.ForegroundColorAttribute);
    atomic_store(result, &qword_10082ABA0);
  }
  return result;
}

uint64_t sub_1002748BC()
{
  return 8;
}

uint64_t sub_1002748C8(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1002748D0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1002748E4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1002748FC()
{
  return 8;
}

id sub_100274928(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  id v7;
  id v8;

  switch(a5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 9:
    case 10:
    case 13:
    case 14:
      result = result;
      break;
    case 5:
      result = (id)swift_retain(a2);
      break;
    case 8:
    case 12:
      v7 = result;
      result = (id)swift_retain(a4);
      break;
    case 11:
    case 15:
      v8 = result;
      result = (id)swift_retain(a3);
      break;
    default:
      return result;
  }
  return result;
}

void destroy for ActivitySharingFriendDetailAlertType(uint64_t a1)
{
  sub_1002749B8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

void sub_1002749B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 9:
    case 10:
    case 13:
    case 14:

      break;
    case 5:
      swift_release(a2);
      break;
    case 8:
    case 12:

      swift_release(a4);
      break;
    case 11:
    case 15:

      swift_release(a3);
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for ActivitySharingFriendDetailAlertType(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_100274928(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ActivitySharingFriendDetailAlertType(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_100274928(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1002749B8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ActivitySharingFriendDetailAlertType(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1002749B8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingFriendDetailAlertType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF0 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 240);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 0x10)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingFriendDetailAlertType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xEF)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 240;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xF0)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_100274BDC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 0xFu)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 16);
}

uint64_t sub_100274BF4(uint64_t result, unsigned int a2)
{
  if (a2 >= 0x10)
  {
    *(_QWORD *)result = a2 - 16;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 16;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

uint64_t sub_100274C10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  id v11[4];
  char v12;

  v5 = *(void **)(v2 + 8);
  v6 = *(void **)(v2 + 16);
  v7 = *(void **)(v2 + 24);
  v8 = *(_BYTE *)(v2 + 32);
  v11[0] = *(id *)v2;
  v11[1] = v5;
  v11[2] = v6;
  v11[3] = v7;
  v12 = v8;
  sub_100274928(v11[0], (uint64_t)v5, (uint64_t)v6, (uint64_t)v7, v8);
  result = String.init<A>(describing:)(v11, a1);
  *a2 = result;
  a2[1] = v10;
  return result;
}

uint64_t sub_100274C6C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_100274C8C(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

id sub_100274CC8(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  id v24;
  NSString v25;
  objc_super v28;

  v13 = OBJC_IVAR___CHWorkoutRouteViewController_mapView;
  v14 = objc_allocWithZone((Class)MKMapView);
  v15 = v7;
  *(_QWORD *)&v7[v13] = objc_msgSend(v14, "init");
  v16 = OBJC_IVAR___CHWorkoutRouteViewController_toggleMapTypeButton;
  v17 = (void *)objc_opt_self(UIButton);
  *(_QWORD *)&v15[v16] = objc_msgSend(v17, "buttonWithType:", 0);
  v18 = OBJC_IVAR___CHWorkoutRouteViewController_divider;
  *(_QWORD *)&v15[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v19 = OBJC_IVAR___CHWorkoutRouteViewController_reportProblemButton;
  *(_QWORD *)&v15[v19] = objc_msgSend(v17, "buttonWithType:", 0);
  v20 = OBJC_IVAR___CHWorkoutRouteViewController_geoMapFeatureAccess;
  *(_QWORD *)&v15[v20] = objc_msgSend(objc_allocWithZone((Class)GEOMapFeatureAccess), "init");
  *(_QWORD *)&v15[OBJC_IVAR___CHWorkoutRouteViewController_excludedActivityTypes] = a7;
  *(_QWORD *)&v15[OBJC_IVAR___CHWorkoutRouteViewController_locationReadings] = a1;
  v21 = &v15[OBJC_IVAR___CHWorkoutRouteViewController_shareText];
  *(_QWORD *)v21 = a5;
  *((_QWORD *)v21 + 1) = a6;
  v15[OBJC_IVAR___CHWorkoutRouteViewController_sharingEnabled] = a4;
  v22 = a1;
  v23 = objc_msgSend(v22, "workout");
  *(_QWORD *)&v15[OBJC_IVAR___CHWorkoutRouteViewController_workout] = v23;

  v28.receiver = v15;
  v28.super_class = (Class)type metadata accessor for WorkoutRouteViewController();
  v24 = objc_msgSendSuper2(&v28, "initWithNibName:bundle:", 0, 0);
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v24, "setTitle:", v25, swift_bridgeObjectRelease(a3).n128_f64[0]);

  return v24;
}

void sub_100274F98(char a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for WorkoutRouteViewController();
  objc_msgSendSuper2(&v9, "viewWillAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "navigationItem");
  v4 = objc_msgSend(objc_allocWithZone((Class)UINavigationBarAppearance), "init");
  objc_msgSend(v3, "setScrollEdgeAppearance:", v4);

  v5 = objc_msgSend(v1, "tabBarController");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "tabBar");

    v8 = objc_msgSend(objc_allocWithZone((Class)UITabBarAppearance), "init");
    objc_msgSend(v7, "setScrollEdgeAppearance:", v8);

  }
}

id sub_10027519C()
{
  char *v0;
  void *v1;
  id result;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  id v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double MaxY;
  void *v23;
  double v24;
  double v25;
  double v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  double v32;
  double v33;
  id v34;
  double v35;
  double v36;
  objc_super v37;
  CGRect v38;

  v37.receiver = v0;
  v37.super_class = (Class)type metadata accessor for WorkoutRouteViewController();
  objc_msgSendSuper2(&v37, "viewWillLayoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR___CHWorkoutRouteViewController_mapView];
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = result;
  objc_msgSend(result, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  objc_msgSend(v1, "setFrame:", v5, v7, v9, v11);
  result = objc_msgSend(v0, "navigationController");
  if (!result)
    return result;
  v12 = result;
  v13 = objc_msgSend(result, "navigationBar");

  objc_msgSend(v13, "frame");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  v38.origin.x = v15;
  v38.origin.y = v17;
  v38.size.width = v19;
  v38.size.height = v21;
  MaxY = CGRectGetMaxY(v38);
  result = objc_msgSend(v0, "view");
  if (!result)
    goto LABEL_9;
  v23 = result;
  objc_msgSend(result, "bounds");
  v25 = v24;

  v26 = MaxY + 12.0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR___CHWorkoutRouteViewController_toggleMapTypeButton], "setFrame:", v25 + -45.0 + -12.0, v26, 45.0, 45.0);
  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v27 = result;
  objc_msgSend(result, "bounds");
  v29 = v28;

  v30 = v26 + 45.0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR___CHWorkoutRouteViewController_reportProblemButton], "setFrame:", v29 + -45.0 + -12.0, v30, 45.0, 45.0);
  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v31 = result;
  objc_msgSend(result, "bounds");
  v33 = v32;

  v34 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v34, "scale");
  v36 = v35;

  return objc_msgSend(*(id *)&v0[OBJC_IVAR___CHWorkoutRouteViewController_divider], "setFrame:", v33 + -45.0 + -12.0, v30, 45.0, 1.0 / v36);
}

void sub_1002754A8()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  double v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  objc_super v17;

  v1 = v0;
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for WorkoutRouteViewController();
  objc_msgSendSuper2(&v17, "viewDidLoad");
  v2 = objc_msgSend(v0, "navigationItem");
  v3 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 24, v1, "close");
  objc_msgSend(v2, "setRightBarButtonItem:", v3);

  if (v1[OBJC_IVAR___CHWorkoutRouteViewController_sharingEnabled] == 1)
  {
    v4 = objc_msgSend(v1, "navigationItem");
    v5 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 9, v1, "shareButtonPressed");
    objc_msgSend(v4, "setLeftBarButtonItem:", v5);

  }
  v6 = *(void **)&v1[OBJC_IVAR___CHWorkoutRouteViewController_mapView];
  if (objc_msgSend(*(id *)&v1[OBJC_IVAR___CHWorkoutRouteViewController_workout], "workoutActivityType") == (id)84)
    v7 = 2000.0;
  else
    v7 = 100.0;
  v8 = objc_msgSend(objc_allocWithZone((Class)MKMapCameraZoomRange), "initWithMinCenterCoordinateDistance:", v7);
  objc_msgSend(v6, "setCameraZoomRange:", v8);

  objc_msgSend(v6, "setDelegate:", v1);
  objc_msgSend(v6, "setShowsScale:", 0);
  objc_msgSend(v6, "setShowsCompass:", 0);
  objc_msgSend(v6, "setShowsAttribution:", 0);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  sub_100275BC4(5);
  v9 = objc_msgSend(v1, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "addSubview:", v6);

    v11 = *(void **)&v1[OBJC_IVAR___CHWorkoutRouteViewController_toggleMapTypeButton];
    v12 = (void *)objc_opt_self(UIColor);
    v13 = objc_msgSend(v12, "secondarySystemBackgroundColor");
    objc_msgSend(v11, "setBackgroundColor:", v13);

    v14 = objc_msgSend(v12, "whiteColor");
    objc_msgSend(v11, "setTintColor:", v14);

    v15 = objc_msgSend(v1, "view");
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, "addSubview:", v11);

      objc_msgSend(v11, "addTarget:action:forControlEvents:", v1, "toggleMapType", 64);
      sub_100275E18();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100275820()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  Class isa;
  Class v12;
  id v13;

  sub_1002759E4();
  if (v1)
  {
    v2 = v1;
    v3 = sub_100047110(&qword_10082CEC0);
    v4 = swift_allocObject(v3, 128, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100624A40;
    *(_QWORD *)(v4 + 56) = type metadata accessor for WorkoutRouteViewController();
    *(_QWORD *)(v4 + 32) = v0;
    v5 = sub_10001E724(0, (unint64_t *)&qword_1008284B0, UIImage_ptr);
    *(_QWORD *)(v4 + 64) = v2;
    v6 = *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutRouteViewController_shareText];
    v7 = *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutRouteViewController_shareText + 8];
    *(_QWORD *)(v4 + 120) = &type metadata for String;
    *(_QWORD *)(v4 + 88) = v5;
    *(_QWORD *)(v4 + 96) = v6;
    *(_QWORD *)(v4 + 104) = v7;
    v8 = objc_allocWithZone((Class)UIActivityViewController);
    v9 = v0;
    v10 = v2;
    swift_bridgeObjectRetain(v7);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v13 = objc_msgSend(v8, "initWithActivityItems:applicationActivities:", isa, 0, swift_bridgeObjectRelease(v4).n128_f64[0]);

    type metadata accessor for ActivityType(0);
    v12 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v13, "setExcludedActivityTypes:", v12);

    objc_msgSend(v9, "presentViewController:animated:completion:", v13, 1, 0);
  }
}

void sub_1002759E4()
{
  char *v0;
  double v1;
  double v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  _QWORD v9[5];
  uint64_t v10;

  objc_msgSend(*(id *)&v0[OBJC_IVAR___CHWorkoutRouteViewController_mapView], "bounds");
  v3 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", v1, v2);
  v4 = swift_allocObject(&unk_1007925C0, 24, 7);
  *(_QWORD *)(v4 + 16) = v0;
  v5 = swift_allocObject(&unk_1007925E8, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_1002772F0;
  *(_QWORD *)(v5 + 24) = v4;
  v9[4] = sub_10003A294;
  v10 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100274C8C;
  v9[3] = &unk_100792600;
  v6 = _Block_copy(v9);
  v7 = v10;
  v8 = v0;
  swift_retain(v5);
  objc_msgSend(v3, "imageWithActions:", v6, swift_release(v7).n128_f64[0]);

  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v5, "", 109, 145, 36, 1);
  swift_release(v4);
  swift_release(v5);
  if ((v3 & 1) != 0)
    __break(1u);
}

void sub_100275BC4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  NSString v3;
  id v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR___CHWorkoutRouteViewController_mapView), "setMapType:", a1);
  v2 = *(void **)(v1 + OBJC_IVAR___CHWorkoutRouteViewController_toggleMapTypeButton);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v3);

  objc_msgSend(v2, "setImage:forState:", v4, 0);
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v2, "setAccessibilityLabel:", v10);

}

void sub_100275E18()
{
  char *v0;
  void *v1;
  char **v2;
  double v3;
  double v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  id v14;
  char *v15;
  char *v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  MKMapPoint v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  void *v29;
  MKMapPoint v30;
  unint64_t v31;
  unint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  double v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  id v46;
  char *v47;
  void *v48;
  char *v49;
  id v50;
  _QWORD aBlock[5];
  uint64_t v52;
  CLLocationCoordinate2D v53;
  CLLocationCoordinate2D v54;

  v5 = *(void **)&v0[OBJC_IVAR___CHWorkoutRouteViewController_locationReadings];
  v6 = (uint64_t)&selRef_setRightBarButtonItems_animated_;
  v7 = objc_msgSend(v5, "allValidLocations");
  v8 = sub_10001E724(0, (unint64_t *)&qword_10082AC90, CLLocation_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v34 = v9;
    else
      v34 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v35 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v9);
    if (!v35)
      goto LABEL_37;
  }
  else if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_37;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
  }
  else
  {
    if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_33;
    }
    v10 = *(id *)(v9 + 32);
  }
  v11 = v10;
  v2 = &selRef_setRightBarButtonItems_animated_;
  objc_msgSend(v10, "coordinate", swift_bridgeObjectRelease(v9).n128_f64[0]);
  v3 = v12;
  v4 = v13;

  v14 = objc_msgSend(v5, "allValidLocations");
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v8);

  if (!((unint64_t)v9 >> 62))
  {
    v15 = *(char **)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
      goto LABEL_8;
LABEL_37:
    swift_bridgeObjectRelease(v9);
    return;
  }
LABEL_33:
  if (v9 < 0)
    v36 = v9;
  else
    v36 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v15 = (char *)_CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease(v9);
  if (!v15)
    goto LABEL_37;
LABEL_8:
  v16 = v15 - 1;
  if (__OFSUB__(v15, 1))
  {
    __break(1u);
  }
  else if ((v9 & 0xC000000000000001) == 0)
  {
    if (((unint64_t)v16 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v16 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v17 = *(id *)(v9 + 8 * (_QWORD)v16 + 32);
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_42;
  }
  v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v9);
LABEL_13:
  v18 = v17;
  objc_msgSend(v17, v2[8], swift_bridgeObjectRelease(v9).n128_f64[0]);
  v20 = v19;
  v22 = v21;

  v50 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutStartLocationAnnotation()), "init");
  objc_msgSend(v50, "setCoordinate:", v3, v4);
  v1 = *(void **)&v0[OBJC_IVAR___CHWorkoutRouteViewController_mapView];
  objc_msgSend(v1, "addAnnotation:", v50);
  if (objc_msgSend(v5, "count") == (id)1)
  {
    v53.latitude = v3;
    v53.longitude = v4;
    v23 = MKMapPointForCoordinate(v53);
    objc_msgSend(v1, "setVisibleMapRect:", v23.x, v23.y, 1500.0, 1500.0);
    objc_msgSend(v1, "setCenterCoordinate:", v3, v4);
    goto LABEL_48;
  }
  v15 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutEndLocationAnnotation()), "init");
  objc_msgSend(v15, "setCoordinate:", v20, v22);
  objc_msgSend(v1, "addAnnotation:", v15);
  v24 = objc_msgSend(v5, "allValidLocations");
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v8);

  if ((unint64_t)v6 >> 62)
  {
LABEL_42:
    if (v6 < 0)
      v37 = v6;
    else
      v37 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v25 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v6);
    if (v25)
      goto LABEL_17;
    goto LABEL_46;
  }
  v25 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v25)
  {
LABEL_17:
    v47 = v15;
    v48 = v1;
    v49 = v0;
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1001219A0(0, v25 & ~(v25 >> 63), 0);
    if (v25 < 0)
    {
      __break(1u);
      return;
    }
    v26 = 0;
    v27 = (_QWORD *)aBlock[0];
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v6);
      else
        v28 = *(id *)(v6 + 8 * v26 + 32);
      v29 = v28;
      objc_msgSend(v28, v2[8], v47, v48, v49);
      v30 = MKMapPointForCoordinate(v54);

      aBlock[0] = v27;
      v32 = v27[2];
      v31 = v27[3];
      if (v32 >= v31 >> 1)
      {
        sub_1001219A0(v31 > 1, v32 + 1, 1);
        v27 = (_QWORD *)aBlock[0];
      }
      ++v26;
      v27[2] = v32 + 1;
      *(MKMapPoint *)&v27[2 * v32 + 4] = v30;
    }
    while (v25 != v26);
    *(_QWORD *)&v33 = swift_bridgeObjectRelease(v6).n128_u64[0];
    v1 = v48;
    v0 = v49;
    v15 = v47;
    goto LABEL_47;
  }
LABEL_46:
  *(_QWORD *)&v33 = swift_bridgeObjectRelease(v6).n128_u64[0];
  v27 = _swiftEmptyArrayStorage;
LABEL_47:
  v38 = objc_msgSend((id)objc_opt_self(MKPolyline), "polylineWithPoints:count:", v27 + 4, objc_msgSend(v5, "count", v33));
  objc_msgSend(v1, "addOverlay:level:", v38, 1, swift_bridgeObjectRelease(v27).n128_f64[0]);
  objc_msgSend(v38, "boundingMapRect");
  objc_msgSend(v1, "setVisibleMapRect:");

LABEL_48:
  objc_msgSend(v1, "_setEdgeInsets:", 80.0, 40.0, 40.0, 40.0);
  v39 = *(void **)&v0[OBJC_IVAR___CHWorkoutRouteViewController_workout];
  if (objc_msgSend(v39, "supportsTrackWorkout"))
  {
    v40 = *(void **)&v0[OBJC_IVAR___CHWorkoutRouteViewController_geoMapFeatureAccess];
    objc_msgSend(v40, "setAllowNetworkTileLoad:", 1);
    objc_msgSend(v40, "setAllowStaleData:", 1);
    if (objc_msgSend(v39, "workoutActivityType") == (id)84)
      v41 = 2000.0;
    else
      v41 = 100.0;
    v42 = swift_allocObject(&unk_100792570, 24, 7);
    *(_QWORD *)(v42 + 16) = v0;
    aBlock[4] = sub_1002772C8;
    v52 = v42;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003CC44;
    aBlock[3] = &unk_100792588;
    v43 = _Block_copy(aBlock);
    v44 = v52;
    v45 = v0;
    swift_release(v44);
    v46 = objc_msgSend(v40, "findRunningTrackFlagsNear:radius:handler:completionHandler:", v43, 0, v3, v4, v41);

    _Block_release(v43);
    swift_unknownObjectRelease(v46);
  }
  else
  {

  }
}

void sub_100276578()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v6).n128_u64[0];
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(v0, "view", v8);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)&v1[OBJC_IVAR___CHWorkoutRouteViewController_reportProblemButton];
    v14 = sub_10001E724(0, (unint64_t *)&qword_100821308, UIView_ptr);
    LOBYTE(v13) = UIFocusEnvironment.contains(_:)(v13, v14);

    if ((v13 & 1) == 0)
    {
      sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
      v16 = (void *)static OS_dispatch_queue.main.getter(v15);
      v17 = swift_allocObject(&unk_100792520, 24, 7);
      *(_QWORD *)(v17 + 16) = v1;
      aBlock[4] = sub_1002772C0;
      v26 = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10002D0F8;
      aBlock[3] = &unk_100792538;
      v18 = _Block_copy(aBlock);
      v19 = v26;
      v20 = v1;
      swift_release(v19);
      static DispatchQoS.unspecified.getter(v21);
      aBlock[0] = _swiftEmptyArrayStorage;
      v22 = sub_10002FAC0();
      v23 = sub_100047110(&qword_100828C80);
      v24 = sub_10002FB08();
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v2, v22);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v5, v18);
      _Block_release(v18);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_1002767B0(char *a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  NSString v8;
  id v9;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id result;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;

  v2 = objc_msgSend(*(id *)&a1[OBJC_IVAR___CHWorkoutRouteViewController_toggleMapTypeButton], "layer");
  objc_msgSend(v2, "setMaskedCorners:", 3);

  v3 = *(void **)&a1[OBJC_IVAR___CHWorkoutRouteViewController_reportProblemButton];
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "secondarySystemBackgroundColor");
  objc_msgSend(v3, "setBackgroundColor:", v5);

  v6 = objc_msgSend(v4, "whiteColor");
  objc_msgSend(v3, "setTintColor:", v6);

  v7 = objc_msgSend(v3, "layer");
  objc_msgSend(v7, "setMaskedCorners:", 12);

  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v8);

  objc_msgSend(v3, "setImage:forState:", v9, 0);
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v14 = v13;

  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v3, "setAccessibilityLabel:", v15);

  result = objc_msgSend(a1, "view");
  if (result)
  {
    v17 = result;
    objc_msgSend(result, "addSubview:", v3);

    v18 = *(void **)&a1[OBJC_IVAR___CHWorkoutRouteViewController_divider];
    v19 = objc_msgSend(v4, "whiteColor");
    v20 = objc_msgSend(v19, "colorWithAlphaComponent:", 0.3);

    objc_msgSend(v18, "setBackgroundColor:", v20);
    result = objc_msgSend(a1, "view");
    if (result)
    {
      v21 = result;
      objc_msgSend(result, "addSubview:", v18);

      return objc_msgSend(v3, "addTarget:action:forControlEvents:", a1, "reportProblem", 64);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100276B10()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutRouteViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutRouteViewController()
{
  return objc_opt_self(CHWorkoutRouteViewController);
}

void sub_100276D4C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OBJC_IVAR___CHWorkoutRouteViewController_mapView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)MKMapView), "init");
  v2 = OBJC_IVAR___CHWorkoutRouteViewController_toggleMapTypeButton;
  v3 = (void *)objc_opt_self(UIButton);
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, "buttonWithType:", 0);
  v4 = OBJC_IVAR___CHWorkoutRouteViewController_divider;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR___CHWorkoutRouteViewController_reportProblemButton;
  *(_QWORD *)&v0[v5] = objc_msgSend(v3, "buttonWithType:", 0);
  v6 = OBJC_IVAR___CHWorkoutRouteViewController_geoMapFeatureAccess;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)GEOMapFeatureAccess), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/WorkoutRouteViewController.swift", 43, 2, 62, 0);
  __break(1u);
}

id sub_100276E84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  objc_class *v20;
  id v21;
  id v23;
  objc_super v24;
  __int128 v25;
  __int128 v26;

  v2 = v1;
  v4 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___CHWorkoutRouteViewController_workout), "metadata");
  if (!v4)
  {
    v25 = 0u;
    v26 = 0u;
    goto LABEL_10;
  }
  v5 = v4;
  v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(_HKPrivateMetadataKeyWorkoutExtendedMode);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16) || (v10 = sub_100438F74(v7, v8), (v11 & 1) == 0))
  {
    v25 = 0u;
    v26 = 0u;
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v6);
    goto LABEL_10;
  }
  sub_10003E9BC(*(_QWORD *)(v6 + 56) + 32 * v10, (uint64_t)&v25);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v6);
  if (!*((_QWORD *)&v26 + 1))
  {
LABEL_10:
    sub_1000F996C((uint64_t)&v25);
    goto LABEL_11;
  }
  v12 = sub_10001E724(0, (unint64_t *)&qword_100828930, NSNumber_ptr);
  if ((swift_dynamicCast(&v23, &v25, (char *)&type metadata for Any + 8, v12, 6) & 1) == 0)
  {
LABEL_11:
    v18 = *(void **)(v2 + OBJC_IVAR___CHWorkoutRouteViewController_locationReadings);
    v19 = (char *)objc_allocWithZone((Class)type metadata accessor for WorkoutGradientPathRenderer());
    *(_QWORD *)&v19[OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings] = v18;
    v20 = (objc_class *)type metadata accessor for WorkoutOverlayPathRenderer();
    v24.receiver = v19;
    v24.super_class = v20;
    v21 = v18;
    return objc_msgSendSuper2(&v24, "initWithOverlay:", a1);
  }
  v13 = v23;
  if (!objc_msgSend(v23, "BOOLValue"))
  {

    goto LABEL_11;
  }
  v14 = *(void **)(v2 + OBJC_IVAR___CHWorkoutRouteViewController_locationReadings);
  v15 = objc_allocWithZone((Class)type metadata accessor for WorkoutExtendedModePathRenderer());
  swift_unknownObjectRetain(a1);
  sub_1002F4014(a1, (uint64_t)v14);
  v17 = v16;

  swift_unknownObjectRelease(a1);
  return (id)v17;
}

id sub_100277080(uint64_t a1)
{
  uint64_t v1;
  id v3;
  id v4;
  const char *v5;
  uint64_t started;
  uint64_t v8;

  if (objc_msgSend(*(id *)(v1 + OBJC_IVAR___CHWorkoutRouteViewController_workout), "workoutActivityType") == (id)84)
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DivingLocationAnnotationView()), "initWithAnnotation:reuseIdentifier:", a1, 0);
    v4 = v3;
    v5 = "setCollisionMode:";
LABEL_5:
    objc_msgSend(v3, v5, 2);
    return v4;
  }
  v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView()), "initWithAnnotation:reuseIdentifier:", a1, 0);
  objc_msgSend(v4, "setCollisionMode:", 2);
  started = type metadata accessor for WorkoutStartLocationAnnotation();
  if (swift_dynamicCastClass(a1, started))
  {
    v5 = "_setZIndex:";
    v3 = v4;
    goto LABEL_5;
  }
  v8 = type metadata accessor for WorkoutEndLocationAnnotation();
  if (swift_dynamicCastClass(a1, v8))
    objc_msgSend(v4, "_setZIndex:", 1);
  return v4;
}

id sub_100277178()
{
  id v0;
  UIImage *v1;
  UIImage *v2;
  NSData *v3;
  NSData *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  Class isa;
  NSString v10;
  id v11;

  v0 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  sub_1002759E4();
  if (v1)
  {
    v2 = v1;
    v3 = UIImagePNGRepresentation(v1);
    if (v3)
    {
      v4 = v3;
      v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v3);
      v7 = v6;

      v8 = objc_allocWithZone((Class)LPImage);
      sub_1001AE60C(v5, v7);
      isa = Data._bridgeToObjectiveC()().super.isa;
      v10 = String._bridgeToObjectiveC()();
      v11 = objc_msgSend(v8, "initWithData:MIMEType:", isa, v10);
      sub_10004D9E4(v5, v7);

      objc_msgSend(v0, "setImage:", v11);
      sub_10004D9E4(v5, v7);
    }

  }
  return v0;
}

uint64_t sub_10027729C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002772C0()
{
  uint64_t v0;

  return sub_1002767B0(*(char **)(v0 + 16));
}

void sub_1002772C8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
    sub_100276578();
}

id sub_1002772F0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___CHWorkoutRouteViewController_mapView);
  objc_msgSend(v1, "bounds");
  return objc_msgSend(v1, "drawViewHierarchyInRect:afterScreenUpdates:", 1);
}

uint64_t sub_100277338()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t destroy for IntervalsRangeSlider(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 16));
}

uint64_t initializeWithCopy for IntervalsRangeSlider(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for IntervalsRangeSlider(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  swift_retain(v5);
  swift_release(v6);
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = a2[5];
  return a1;
}

uint64_t assignWithTake for IntervalsRangeSlider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v4);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for IntervalsRangeSlider()
{
  return &type metadata for IntervalsRangeSlider;
}

uint64_t sub_100277484(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B1B44, 1);
}

void sub_100277494(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  void *v25;
  id v26;
  double v27;
  double v28;
  id v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = (_OWORD *)swift_allocObject(&unk_1007926C8, 64, 7);
  v5 = *(_OWORD *)(v1 + 16);
  v4[1] = *(_OWORD *)v1;
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v8 = swift_retain_n(v3, 2);
  v9 = static Alignment.center.getter(v8);
  v11 = _FrameLayout.init(width:height:alignment:)(&v39, v7, 0, v6, 0, v9, v10);
  v12 = v39;
  v13 = v40;
  v14 = v41;
  v38 = v42;
  v36 = v44;
  v37 = v43;
  v15 = static Edge.Set.trailing.getter(v11);
  v16 = v15;
  v17 = static Edge.Set.top.getter(v15);
  v18 = v17;
  v19 = static Edge.Set.bottom.getter(v17);
  v20 = Edge.Set.init(rawValue:)(0);
  v21 = Edge.Set.init(rawValue:)(v20);
  if (Edge.Set.init(rawValue:)(v21 & v16) != v16)
    v20 = Edge.Set.init(rawValue:)(v20 | v16);
  v22 = Edge.Set.init(rawValue:)(v20);
  if (Edge.Set.init(rawValue:)(v22 & v18) != v18)
    v20 = Edge.Set.init(rawValue:)(v20 | v18);
  v23 = Edge.Set.init(rawValue:)(v20);
  v24 = v14;
  if (Edge.Set.init(rawValue:)(v23 & v19) != v19)
    LOBYTE(v20) = Edge.Set.init(rawValue:)(v20 | v19);
  v25 = (void *)objc_opt_self(UIScreen);
  v26 = objc_msgSend(v25, "mainScreen");
  objc_msgSend(v26, "scale");
  v28 = v27;

  v29 = objc_msgSend(v25, "mainScreen");
  objc_msgSend(v29, "nativeScale");
  v31 = v30;

  v32 = 0.0;
  v33 = 0;
  v34 = 0;
  v35 = 0;
  if (v28 != v31)
    v32 = EdgeInsets.init(_all:)(8.0);
  *(_QWORD *)a1 = sub_1002781E4;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v12;
  *(_BYTE *)(a1 + 32) = v13;
  *(_QWORD *)(a1 + 40) = v24;
  *(_BYTE *)(a1 + 48) = v38;
  *(_QWORD *)(a1 + 56) = v37;
  *(_QWORD *)(a1 + 64) = v36;
  *(_BYTE *)(a1 + 72) = v20;
  *(double *)(a1 + 80) = v32;
  *(_QWORD *)(a1 + 88) = v33;
  *(_QWORD *)(a1 + 96) = v34;
  *(_QWORD *)(a1 + 104) = v35;
  *(_BYTE *)(a1 + 112) = v28 == v31;
}

uint64_t sub_1002776C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[2];
  double v53;
  char v54;

  v48 = a1;
  v51 = a3;
  v50 = sub_100047110(&qword_10082AC98);
  __chkstk_darwin(v50);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100047110(&qword_10082ACA0);
  __chkstk_darwin(v49);
  v47 = (uint64_t *)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100047110(&qword_10082ACA8);
  __chkstk_darwin(v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10082ACB0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10082ACB8);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_10082ACC0);
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1002781EC(a2, (uint64_t)v52);
  v19 = sub_1002781EC(v52, (uint64_t)&v53);
  if (v54 == 1)
  {
    v48 = v13;
    v24 = v50;
    v25 = v53;
    v26 = static HorizontalAlignment.center.getter(v19, v20, v21, v22, v23);
    if (v25 == 0.0)
    {
      v39 = (uint64_t)v47;
      *v47 = v26;
      *(_QWORD *)(v39 + 8) = 0;
      *(_BYTE *)(v39 + 16) = 1;
      v40 = sub_100047110(&qword_10082ACF0);
      sub_100277D9C((uint64_t)a2, v39 + *(int *)(v40 + 44));
      sub_100021CC0(v39, (uint64_t)v12, &qword_10082ACA0);
      swift_storeEnumTagMultiPayload(v12, v10, 1);
      v41 = sub_100028384(&qword_10082ACD8, &qword_10082ACC0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
      v42 = sub_100028384(&qword_10082ACE0, &qword_10082ACA0, (uint64_t)&protocol conformance descriptor for VStack<A>);
      _ConditionalContent<>.init(storage:)(v12, v16, v49, v41, v42);
      sub_100021CC0((uint64_t)v15, (uint64_t)v9, &qword_10082ACB8);
      swift_storeEnumTagMultiPayload(v9, v7, 0);
      v43 = sub_100278204();
      v44 = sub_100028384(&qword_10082ACE8, &qword_10082AC98, (uint64_t)&protocol conformance descriptor for VStack<A>);
      _ConditionalContent<>.init(storage:)(v9, v48, v24, v43, v44);
      sub_10001BE90((uint64_t)v15, &qword_10082ACB8);
      v30 = v39;
      v31 = &qword_10082ACA0;
    }
    else
    {
      *(_QWORD *)v5 = v26;
      *((_QWORD *)v5 + 1) = 0;
      v5[16] = 1;
      v27 = sub_100047110(&qword_10082ACC8);
      sub_100277FA0((uint64_t)a2, (uint64_t)&v5[*(int *)(v27 + 44)]);
      sub_100021CC0((uint64_t)v5, (uint64_t)v9, &qword_10082AC98);
      swift_storeEnumTagMultiPayload(v9, v7, 1);
      v28 = sub_100278204();
      v29 = sub_100028384(&qword_10082ACE8, &qword_10082AC98, (uint64_t)&protocol conformance descriptor for VStack<A>);
      _ConditionalContent<>.init(storage:)(v9, v48, v24, v28, v29);
      v30 = (uint64_t)v5;
      v31 = &qword_10082AC98;
    }
  }
  else
  {
    v32 = v53;
    *v18 = static Alignment.center.getter(v19);
    v18[1] = v33;
    v34 = sub_100047110(&qword_10082ACF8);
    sub_100277BB4((uint64_t)a2, (uint64_t)v18 + *(int *)(v34 + 44), v32);
    sub_100021CC0((uint64_t)v18, (uint64_t)v12, &qword_10082ACC0);
    swift_storeEnumTagMultiPayload(v12, v10, 0);
    v35 = sub_100028384(&qword_10082ACD8, &qword_10082ACC0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    v36 = sub_100028384(&qword_10082ACE0, &qword_10082ACA0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v12, v16, v49, v35, v36);
    sub_100021CC0((uint64_t)v15, (uint64_t)v9, &qword_10082ACB8);
    swift_storeEnumTagMultiPayload(v9, v7, 0);
    v37 = sub_100278204();
    v38 = sub_100028384(&qword_10082ACE8, &qword_10082AC98, (uint64_t)&protocol conformance descriptor for VStack<A>);
    _ConditionalContent<>.init(storage:)(v9, v13, v50, v37, v38);
    sub_10001BE90((uint64_t)v15, &qword_10082ACB8);
    v30 = (uint64_t)v18;
    v31 = &qword_10082ACC0;
  }
  return sub_10001BE90(v30, v31);
}

uint64_t sub_100277BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v6 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100047110(&qword_100829298);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - v13;
  v15 = *(_QWORD *)(a1 + 40);
  v16 = (char *)v8 + *(int *)(v6 + 20);
  v17 = enum case for RoundedCornerStyle.continuous(_:);
  v18 = type metadata accessor for RoundedCornerStyle(0);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  *v8 = v15;
  v8[1] = v15;
  v20 = static Color.black.getter(v19);
  sub_100234158((uint64_t)v8, (uint64_t)v11);
  *(_QWORD *)&v11[*(int *)(v9 + 36)] = v20;
  sub_1001D2ACC((uint64_t)v8);
  v21 = sub_1002782A0((uint64_t)v11, (uint64_t)v14);
  v22 = *(double *)(a1 + 24) * 0.5;
  GeometryProxy.size.getter(v21);
  v24 = (1.0 - a3) * v23;
  v26 = static Animation.default.getter(v25);
  sub_100021CC0((uint64_t)v14, (uint64_t)v11, &qword_100829298);
  sub_100021CC0((uint64_t)v11, a2, &qword_100829298);
  v27 = a2 + *(int *)(sub_100047110(&qword_10082AD00) + 48);
  *(double *)v27 = v22;
  *(double *)(v27 + 8) = v24;
  *(_QWORD *)(v27 + 16) = v26;
  *(double *)(v27 + 24) = a3;
  swift_retain(v26);
  sub_10001BE90((uint64_t)v14, &qword_100829298);
  swift_release(v26);
  return sub_10001BE90((uint64_t)v11, &qword_100829298);
}

uint64_t sub_100277D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  v4 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100047110(&qword_100829298);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - v11;
  v13 = *(_QWORD *)(a1 + 40);
  v14 = (char *)v6 + *(int *)(v4 + 20);
  v15 = enum case for RoundedCornerStyle.continuous(_:);
  v16 = type metadata accessor for RoundedCornerStyle(0);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  *v6 = v13;
  v6[1] = v13;
  v18 = static Color.black.getter(v17);
  sub_100234158((uint64_t)v6, (uint64_t)v9);
  *(_QWORD *)&v9[*(int *)(v7 + 36)] = v18;
  sub_1001D2ACC((uint64_t)v6);
  v19 = sub_1002782A0((uint64_t)v9, (uint64_t)v12);
  v20 = *(double *)(a1 + 24) * 0.5;
  v21 = static Alignment.center.getter(v19);
  _FrameLayout.init(width:height:alignment:)(&v29, 0, 1, *(_QWORD *)&v20, 0, v21, v22);
  v23 = v29;
  LOBYTE(v18) = v30;
  v24 = v31;
  LOBYTE(v15) = v32;
  v26 = v33;
  v25 = v34;
  sub_100021CC0((uint64_t)v12, (uint64_t)v9, &qword_100829298);
  sub_100021CC0((uint64_t)v9, a2, &qword_100829298);
  v27 = a2 + *(int *)(sub_100047110(&qword_10082AD08) + 48);
  *(_QWORD *)v27 = 0;
  *(_BYTE *)(v27 + 8) = 1;
  *(_QWORD *)(v27 + 16) = v23;
  *(_BYTE *)(v27 + 24) = v18;
  *(_QWORD *)(v27 + 32) = v24;
  *(_BYTE *)(v27 + 40) = v15;
  *(_QWORD *)(v27 + 48) = v26;
  *(_QWORD *)(v27 + 56) = v25;
  sub_10001BE90((uint64_t)v12, &qword_100829298);
  return sub_10001BE90((uint64_t)v9, &qword_100829298);
}

uint64_t sub_100277FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;

  v4 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100047110(&qword_100829298);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - v11;
  v13 = *(double *)(a1 + 24) * 0.5;
  v15 = static Alignment.center.getter(v14);
  _FrameLayout.init(width:height:alignment:)(&v33, 0, 1, *(_QWORD *)&v13, 0, v15, v16);
  v17 = v33;
  v18 = v34;
  v19 = v35;
  v32 = v36;
  v30 = v38;
  v31 = v37;
  v20 = *(_QWORD *)(a1 + 40);
  v21 = (char *)v6 + *(int *)(v4 + 20);
  v22 = enum case for RoundedCornerStyle.continuous(_:);
  v23 = type metadata accessor for RoundedCornerStyle(0);
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v21, v22, v23);
  *v6 = v20;
  v6[1] = v20;
  v25 = static Color.black.getter(v24);
  sub_100234158((uint64_t)v6, (uint64_t)v9);
  *(_QWORD *)&v9[*(int *)(v7 + 36)] = v25;
  sub_1001D2ACC((uint64_t)v6);
  sub_1002782A0((uint64_t)v9, (uint64_t)v12);
  sub_100021CC0((uint64_t)v12, (uint64_t)v9, &qword_100829298);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = v17;
  *(_BYTE *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v19;
  *(_BYTE *)(a2 + 40) = v32;
  v26 = v30;
  *(_QWORD *)(a2 + 48) = v31;
  *(_QWORD *)(a2 + 56) = v26;
  v27 = sub_100047110(&qword_10082AD10);
  sub_100021CC0((uint64_t)v9, a2 + *(int *)(v27 + 64), &qword_100829298);
  sub_10001BE90((uint64_t)v12, &qword_100829298);
  return sub_10001BE90((uint64_t)v9, &qword_100829298);
}

uint64_t sub_1002781C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002781E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002776C8(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_1002781EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

unint64_t sub_100278204()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082ACD0;
  if (!qword_10082ACD0)
  {
    v1 = sub_100007050(&qword_10082ACB8);
    sub_100028384(&qword_10082ACD8, &qword_10082ACC0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_100028384(&qword_10082ACE0, &qword_10082ACA0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082ACD0);
  }
  return result;
}

uint64_t sub_1002782A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100829298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for IntervalsRangeSlider.State()
{
  return &type metadata for IntervalsRangeSlider.State;
}

uint64_t sub_1002782F8()
{
  return sub_1000E0A18(&qword_10082AD18, &qword_10082AD20, (void (*)(void))sub_10027832C);
}

uint64_t sub_10027832C()
{
  return sub_1000E0A18(&qword_10082AD28, &qword_10082AD30, (void (*)(void))sub_100278350);
}

unint64_t sub_100278350()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082AD38;
  if (!qword_10082AD38)
  {
    v1 = sub_100007050(&qword_10082AD40);
    sub_100028384(&qword_10082AD48, &qword_10082AD50, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    sub_100028384(&qword_1008237E0, &qword_1008237E8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082AD38);
  }
  return result;
}

id sub_1002783EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  NSString v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id result;
  void *v20;
  id v21;
  objc_super v22;

  *(_QWORD *)&v3[OBJC_IVAR____TtC10FitnessApp28DivingLocationAnnotationView_pinSize] = 0x402E000000000000;
  if (a3)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v6 = 0;
  }
  v22.receiver = v3;
  v22.super_class = (Class)type metadata accessor for DivingLocationAnnotationView();
  v7 = objc_msgSendSuper2(&v22, "initWithAnnotation:reuseIdentifier:", a1, v6);

  v8 = v7;
  objc_msgSend(v8, "setFrame:", 0.0, 0.0, 15.0, 15.0);
  v9 = (void *)objc_opt_self(UIColor);
  v10 = v8;
  v11 = objc_msgSend(v9, "clearColor");
  objc_msgSend(v10, "setBackgroundColor:", v11);

  objc_msgSend(v10, "setCanShowCallout:", 0);
  v12 = v10;
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v13);

  objc_msgSend(v12, "setGlyphImage:", v14);
  v15 = v12;
  v16 = objc_msgSend(v9, "whiteColor");
  objc_msgSend(v15, "setGlyphTintColor:", v16);

  v17 = (void *)objc_opt_self(ARUIMetricColors);
  v18 = v15;
  result = objc_msgSend(v17, "diveColors");
  if (result)
  {
    v20 = result;
    v21 = objc_msgSend(result, "nonGradientTextColor");

    objc_msgSend(v18, "setMarkerTintColor:", v21);
    swift_unknownObjectRelease(a1);
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002786E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DivingLocationAnnotationView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DivingLocationAnnotationView()
{
  return objc_opt_self(_TtC10FitnessApp28DivingLocationAnnotationView);
}

uint64_t initializeWithCopy for MirrorControlsButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for MirrorControlsButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for MirrorControlsButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for MirrorControlsButton()
{
  return &type metadata for MirrorControlsButton;
}

uint64_t sub_10027881C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B1BB4, 1);
}

uint64_t sub_10027882C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[16];
  uint64_t v34;
  _QWORD v35[2];
  _OWORD v36[3];

  v32 = a1;
  v2 = sub_100047110(&qword_10082AD88);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10082AD90);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10082AD98);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject(&unk_100792840, 56, 7);
  v13 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v1 + 32);
  v34 = v1;
  swift_retain(*(_QWORD *)(v1 + 16));
  v14 = sub_100047110(&qword_10082ADA0);
  v15 = sub_100028384(&qword_10082ADA8, &qword_10082ADA0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  v16 = Button.init(action:label:)(sub_100278D7C, v12, sub_100278D9C, v33, v14, v15);
  v17 = *(_QWORD *)(v1 + 24);
  v18 = static Alignment.center.getter(v16);
  _FrameLayout.init(width:height:alignment:)(v36, v17, 0, 0, 1, v18, v19);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  v20 = &v8[*(int *)(v6 + 36)];
  v21 = v36[1];
  *(_OWORD *)v20 = v36[0];
  *((_OWORD *)v20 + 1) = v21;
  *((_OWORD *)v20 + 2) = v36[2];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v22, "localizedStringForKey:value:table:", v23, 0, 0);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v35[0] = v25;
  v35[1] = v27;
  v28 = sub_100278DA4();
  v29 = sub_100038CA0();
  View.accessibilityLabel<A>(_:)(v35, v6, &type metadata for String, v28, v29);
  swift_bridgeObjectRelease(v27);
  sub_10001BE90((uint64_t)v8, &qword_10082AD90);
  return sub_100278E28((uint64_t)v11, v32);
}

double sub_100278B08@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  double result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  double v22;

  v4 = static Alignment.center.getter(a1);
  v6 = v5;
  sub_100278B8C(a1, (uint64_t)&v15);
  v7 = v15;
  v8 = v16;
  v9 = v17;
  v10 = v20;
  result = v22;
  v12 = v21;
  v14 = v18;
  v13 = v19;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v7;
  *(_BYTE *)(a2 + 24) = v8;
  *(_BYTE *)(a2 + 25) = v9;
  *(_OWORD *)(a2 + 32) = v14;
  *(_OWORD *)(a2 + 48) = v13;
  *(_QWORD *)(a2 + 64) = v10;
  *(_OWORD *)(a2 + 72) = v12;
  *(double *)(a2 + 88) = result;
  return result;
}

void sub_100278B8C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t KeyPath;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_100047110(&qword_10081F2F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10081DCD8 != -1)
    swift_once(&qword_10081DCD8, sub_1003D1FC8);
  v7 = qword_10086A848;
  swift_retain(qword_10086A848);
  v8 = Image.init(systemName:)(0x2E6E6F7276656863, 0xEC0000006E776F64);
  v10 = static Color.white.getter(v9);
  KeyPath = swift_getKeyPath(&unk_100631AC8);
  v12 = *(double *)(a1 + 32);
  v13 = static Font.Weight.semibold.getter(KeyPath);
  v14 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
  v15 = static Font.system(size:weight:design:)(*(_QWORD *)&v13, 0, v6, v12);
  sub_10001BE90((uint64_t)v6, &qword_10081F2F8);
  v16 = swift_getKeyPath(&unk_100631AF8);
  v17 = v16;
  if ((*(_BYTE *)a1 & 1) != 0)
    v18 = 3.14159265;
  else
    v18 = 0.0;
  v19 = static UnitPoint.center.getter(v16);
  *(_QWORD *)a2 = v7;
  *(_WORD *)(a2 + 8) = 256;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = KeyPath;
  *(_QWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v17;
  *(_QWORD *)(a2 + 48) = v15;
  *(double *)(a2 + 56) = v18;
  *(double *)(a2 + 64) = v19;
  *(_QWORD *)(a2 + 72) = v20;
}

uint64_t sub_100278D20@<X0>(uint64_t a1@<X8>)
{
  return sub_10027882C(a1);
}

uint64_t sub_100278D58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100278D7C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

double sub_100278D9C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100278B08(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100278DA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082ADB0;
  if (!qword_10082ADB0)
  {
    v1 = sub_100007050(&qword_10082AD90);
    sub_100028384(&qword_10082ADB8, &qword_10082AD88, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082ADB0);
  }
  return result;
}

uint64_t sub_100278E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10082AD98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100278E84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082ADC0;
  if (!qword_10082ADC0)
  {
    v1 = sub_100007050(&qword_10082AD98);
    sub_100278DA4();
    sub_100278EF0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082ADC0);
  }
  return result;
}

unint64_t sub_100278EF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10081EFA8;
  if (!qword_10081EFA8)
  {
    v1 = type metadata accessor for AccessibilityAttachmentModifier(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AccessibilityAttachmentModifier, v1);
    atomic_store(result, (unint64_t *)&qword_10081EFA8);
  }
  return result;
}

void destroy for ActivitySharingFriendDetailCompetitionActionListView(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);

  swift_release(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));

}

uint64_t initializeWithCopy for ActivitySharingFriendDetailCompetitionActionListView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v3 = *a2;
  v4 = (void *)a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = a2[2];
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  v7 = (void *)a2[5];
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  v9 = (void *)a2[7];
  v8 = a2[8];
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v8;
  v10 = a2[9];
  v11 = (void *)a2[10];
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
  v12 = (void *)a2[12];
  *(_QWORD *)(a1 + 96) = v12;
  swift_retain(v3);
  v13 = v4;
  swift_retain(v6);
  v14 = v7;
  v15 = v9;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v10);
  v16 = v11;
  v17 = v12;
  return a1;
}

uint64_t *assignWithCopy for ActivitySharingFriendDetailCompetitionActionListView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = (uint64_t)v6;
  v8 = v6;

  v9 = a2[2];
  v10 = a1[2];
  a1[2] = v9;
  swift_retain(v9);
  swift_release(v10);
  a1[3] = a2[3];
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  v11 = (void *)a2[5];
  v12 = (void *)a1[5];
  a1[5] = (uint64_t)v11;
  v13 = v11;

  *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
  v14 = (void *)a1[7];
  v15 = (void *)a2[7];
  a1[7] = (uint64_t)v15;
  v16 = v15;

  v17 = a2[8];
  v18 = a1[8];
  a1[8] = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  v19 = a2[9];
  v20 = a1[9];
  a1[9] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = (void *)a2[10];
  v22 = (void *)a1[10];
  a1[10] = (uint64_t)v21;
  v23 = v21;

  *((_BYTE *)a1 + 88) = *((_BYTE *)a2 + 88);
  v24 = (void *)a2[12];
  v25 = (void *)a1[12];
  a1[12] = (uint64_t)v24;
  v26 = v24;

  return a1;
}

__n128 initializeWithTake for ActivitySharingFriendDetailCompetitionActionListView(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for ActivitySharingFriendDetailCompetitionActionListView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;

  swift_release(*(_QWORD *)a1);
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  v8 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v9 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);

  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingFriendDetailCompetitionActionListView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingFriendDetailCompetitionActionListView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingFriendDetailCompetitionActionListView()
{
  return &type metadata for ActivitySharingFriendDetailCompetitionActionListView;
}

uint64_t sub_1002792F8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B1BF8, 1);
}

uint64_t sub_100279308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = static Font.body.getter();
  v1 = Font.bold()();
  result = swift_release(v0);
  qword_10082ADC8 = v1;
  return result;
}

uint64_t sub_100279340()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = type metadata accessor for Color.RGBColorSpace(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, enum case for Color.RGBColorSpace.sRGB(_:));
  result = Color.init(_:red:green:blue:opacity:)(v2, 0.811764706, 0.698039216, 0.356862745, 1.0);
  qword_10082ADD0 = result;
  return result;
}

uint64_t sub_1002793D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t OpaqueTypeConformance2;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE v81[224];
  _BYTE v82[224];
  __int128 v83;
  unint64_t v84;
  unint64_t v85;
  char v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;

  v79 = a2;
  v3 = sub_100047110(&qword_10082ADE0);
  __chkstk_darwin(v3);
  v80 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v78 = (uint64_t)&v68 - v6;
  v7 = sub_100047110(&qword_10082ADE8);
  v75 = *(_QWORD *)(v7 - 8);
  v76 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10082ADF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10082ADF8);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v74 = (uint64_t)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100047110(&qword_10082AE00);
  __chkstk_darwin(v16);
  v77 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v19 = __chkstk_darwin(v18).n128_u64[0];
  v21 = (char *)&v68 - v20;
  v22 = a1;
  v23 = *(void **)(a1 + 40);
  if ((objc_msgSend(v23, "isCompetitionActive", v19) & 1) != 0
    || (v24 = objc_msgSend(v23, "hasCompetitionHistory"), (v24 & 1) != 0))
  {
    sub_10027B6B0(&v83);
  }
  else
  {
    v25 = static VerticalAlignment.center.getter(v24);
    v72 = v12;
    v73 = v9;
    v26 = v25;
    v70 = v22;
    sub_10027A314(v22, (uint64_t)&v100);
    v69 = v100;
    v27 = v101;
    v71 = v14;
    v28 = v102;
    v29 = v103;
    v30 = v104;
    v92 = v26;
    v93 = 0;
    v94 = 1;
    v95 = v100;
    v96 = v101;
    v97 = v102;
    v98 = v103;
    v99 = v104;
    v32 = static Alignment.leading.getter(v31);
    sub_1003EC214(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v83, 0.0, 1, 0.0, 1, v32, v33);
    v34 = v28;
    v14 = v71;
    sub_1000E4458(v69, v27, v34);
    swift_bridgeObjectRelease(v29);
    swift_release(v30);
    LOBYTE(v26) = static Edge.Set.bottom.getter(v35);
    v36 = EdgeInsets.init(_all:)(18.0);
    v82[0] = 0;
    v86 = v26;
    v12 = v72;
    v9 = v73;
    v87 = v36;
    v88 = v37;
    v89 = v38;
    v90 = v39;
    v91 = 0;
    ASFriendListDisplayMode.id.getter(&v83);
  }
  sub_10027B42C((uint64_t)&v83, (uint64_t)&v100);
  if (objc_msgSend(v23, "isAwaitingCompetitionResponseFromMe"))
  {
    v40 = v74;
    sub_100279A18(v74);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, v40, v13);
    swift_storeEnumTagMultiPayload(v12, v10, 0);
    v41 = sub_100007050(&qword_10082AE10);
    v42 = type metadata accessor for BorderedProminentButtonStyle(255);
    v43 = v21;
    v44 = v13;
    v45 = sub_10027B474();
    v46 = sub_1000EA0F8();
    *(_QWORD *)&v83 = v41;
    *((_QWORD *)&v83 + 1) = v42;
    v84 = v45;
    v85 = v46;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v48 = sub_100007050(&qword_10082AE30);
    v49 = sub_10027B510();
    *(_QWORD *)&v83 = v48;
    *((_QWORD *)&v83 + 1) = v42;
    v84 = v49;
    v85 = v46;
    v50 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v12, v44, v76, OpaqueTypeConformance2, v50);
    v51 = v44;
    v21 = v43;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v74, v51);
  }
  else
  {
    v73 = v9;
    sub_100279C84((uint64_t)v9);
    v52 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
    v74 = v13;
    v53 = v76;
    v52(v12, v9, v76);
    swift_storeEnumTagMultiPayload(v12, v10, 1);
    v54 = sub_100007050(&qword_10082AE10);
    v55 = type metadata accessor for BorderedProminentButtonStyle(255);
    v56 = sub_10027B474();
    v57 = sub_1000EA0F8();
    *(_QWORD *)&v83 = v54;
    *((_QWORD *)&v83 + 1) = v55;
    v84 = v56;
    v85 = v57;
    v58 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v59 = sub_100007050(&qword_10082AE30);
    v60 = sub_10027B510();
    *(_QWORD *)&v83 = v59;
    *((_QWORD *)&v83 + 1) = v55;
    v84 = v60;
    v85 = v57;
    v61 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v12, v74, v53, v58, v61);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v73, v53);
  }
  v62 = v78;
  sub_100279EEC(v78);
  sub_10027B42C((uint64_t)&v100, (uint64_t)v81);
  v63 = v77;
  sub_100021CC0((uint64_t)v21, v77, &qword_10082AE00);
  v64 = v80;
  sub_100021CC0(v62, v80, &qword_10082ADE0);
  sub_10027B42C((uint64_t)v81, (uint64_t)v82);
  v65 = v79;
  sub_10027B42C((uint64_t)v82, v79);
  v66 = sub_100047110(&qword_10082AE40);
  sub_100021CC0(v63, v65 + *(int *)(v66 + 48), &qword_10082AE00);
  sub_100021CC0(v64, v65 + *(int *)(v66 + 64), &qword_10082ADE0);
  sub_10027B5F0((uint64_t)v82, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_10027B5AC);
  sub_10027B5F0((uint64_t)&v100, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_10027B5AC);
  sub_10001BE90(v62, &qword_10082ADE0);
  sub_10001BE90((uint64_t)v21, &qword_10082AE00);
  sub_10027B5F0((uint64_t)&v100, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_10027B66C);
  sub_10001BE90(v64, &qword_10082ADE0);
  sub_10001BE90(v63, &qword_10082AE00);
  sub_10027B42C((uint64_t)v81, (uint64_t)&v83);
  return sub_10027B5F0((uint64_t)&v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_10027B66C);
}

uint64_t sub_100279A18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  __n128 v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v29 = a1;
  v3 = type metadata accessor for BorderedProminentButtonStyle(0);
  v30 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10082AE28);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10082AE10);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject(&unk_100792930, 120, 7);
  v14 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v13 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v13 + 96) = v14;
  *(_QWORD *)(v13 + 112) = *(_QWORD *)(v2 + 96);
  v15 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v13 + 32) = v15;
  v16 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v13 + 64) = v16;
  v32 = v2;
  sub_10027B6EC((uint64_t *)v2);
  v17 = sub_100047110(&qword_10082AE48);
  v18 = sub_10027B778();
  Button.init(action:label:)(sub_10027B6DC, v13, sub_10027B6E4, v31, v17, v18);
  v19 = (void *)objc_opt_self(UIColor);
  v20 = Color.init(uiColor:)(objc_msgSend(v19, "as_competitionButtonGold", v29));
  KeyPath = swift_getKeyPath(&unk_100631BD8);
  v33 = v20;
  swift_retain(v20);
  v22 = AnyShapeStyle.init<A>(_:)(&v33, &type metadata for Color, &protocol witness table for Color);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
  v23 = swift_release(v20);
  v24 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  *v24 = KeyPath;
  v24[1] = v22;
  v25 = (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v23);
  BorderedProminentButtonStyle.init()(v25);
  v26 = sub_10027B474();
  v27 = sub_1000EA0F8();
  View.buttonStyle<A>(_:)(v5, v10, v3, v26, v27);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v3);
  return sub_10001BE90((uint64_t)v12, &qword_10082AE10);
}

uint64_t sub_100279C84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  __n128 v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v29[1] = a1;
  v3 = type metadata accessor for BorderedProminentButtonStyle(0);
  v30 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10081F2B8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10082AE30);
  __chkstk_darwin(v10);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject(&unk_100792A70, 120, 7);
  v14 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v13 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v13 + 96) = v14;
  *(_QWORD *)(v13 + 112) = *(_QWORD *)(v2 + 96);
  v15 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v13 + 32) = v15;
  v16 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v13 + 64) = v16;
  sub_10027B6EC((uint64_t *)v2);
  v17 = sub_100047110(&qword_10081F2D0);
  v18 = sub_1000EA094();
  Button.init(action:label:)(sub_10027BC34, v13, sub_10027A64C, 0, v17, v18);
  v19 = objc_msgSend((id)objc_opt_self(UIColor), "as_competitionButtonGold");
  v20 = Color.init(uiColor:)(v19);
  KeyPath = swift_getKeyPath(&unk_100631BD8);
  v31 = v20;
  swift_retain(v20);
  v22 = AnyShapeStyle.init<A>(_:)(&v31, &type metadata for Color, &protocol witness table for Color);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
  v23 = swift_release(v20);
  v24 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  *v24 = KeyPath;
  v24[1] = v22;
  v25 = (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v23);
  BorderedProminentButtonStyle.init()(v25);
  v26 = sub_10027B510();
  v27 = sub_1000EA0F8();
  View.buttonStyle<A>(_:)(v5, v10, v3, v26, v27);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v3);
  return sub_10001BE90((uint64_t)v12, &qword_10082AE30);
}

uint64_t sub_100279EEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  __n128 v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v49 = a1;
  v2 = type metadata accessor for BorderedProminentButtonStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  v47 = v2;
  v48 = v3;
  __chkstk_darwin(v2);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10081F2B8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10082AE30);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100047110(&qword_10082ADE8);
  v45 = *(_QWORD *)(v13 - 8);
  v46 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject(&unk_1007929F8, 120, 7);
  v17 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v16 + 80) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v16 + 96) = v17;
  *(_QWORD *)(v16 + 112) = *(_QWORD *)(v1 + 96);
  v18 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v16 + 32) = v18;
  v19 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v16 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v16 + 64) = v19;
  sub_10027B6EC((uint64_t *)v1);
  v20 = sub_100047110(&qword_10081F2D0);
  v21 = sub_1000EA094();
  Button.init(action:label:)(sub_10027BAF8, v16, sub_10027B1D8, 0, v20, v21);
  v22 = objc_msgSend((id)objc_opt_self(UIColor), "as_competitionGraphBackgroundGold");
  v23 = Color.init(uiColor:)(v22);
  KeyPath = swift_getKeyPath(&unk_100631BD8);
  v50 = v23;
  swift_retain(v23);
  v25 = AnyShapeStyle.init<A>(_:)(&v50, &type metadata for Color, &protocol witness table for Color);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
  v26 = swift_release(v23);
  v27 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  *v27 = KeyPath;
  v27[1] = v25;
  v28 = (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v26);
  BorderedProminentButtonStyle.init()(v28);
  v29 = sub_10027B510();
  v30 = sub_1000EA0F8();
  v31 = v47;
  View.buttonStyle<A>(_:)(v5, v10, v47, v29, v30);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v5, v31);
  v32 = sub_10001BE90((uint64_t)v12, &qword_10082AE30);
  LOBYTE(v29) = static Edge.Set.top.getter(v32);
  v33 = EdgeInsets.init(_all:)(2.0);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v45;
  v40 = v46;
  v42 = v49;
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v49, v15, v46);
  v43 = v42 + *(int *)(sub_100047110(&qword_10082ADE0) + 36);
  *(_BYTE *)v43 = v29;
  *(double *)(v43 + 8) = v33;
  *(_QWORD *)(v43 + 16) = v35;
  *(_QWORD *)(v43 + 24) = v37;
  *(_QWORD *)(v43 + 32) = v39;
  *(_BYTE *)(v43 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v15, v40);
}

uint64_t sub_10027A20C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  Class isa;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = ASCompetitionVictoryStyleForBadge(0, 0);
  UUID.init()();
  isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v8 = (id)ASEphemeralCompetitionVictoryAchievementForStyle(v6, isa);

  v9 = objc_msgSend(*(id *)(v1 + 96), "thumbnailImageForAchievement:size:", v8, 52.0, 52.0);
  if (v9)
  {
    v10 = v9;
    v11 = Image.init(uiImage:)();

  }
  else
  {

    return 0;
  }
  return v11;
}

void sub_10027A314(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD v29[2];

  v4 = (id)ActivitySharingBundle(a1);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, 0, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = sub_100047110((uint64_t *)&unk_100827460);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100622F90;
  v12 = objc_msgSend(*(id *)(a1 + 40), "displayName");
  if (v12)
  {
    v13 = v12;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v16 = v15;

    *(_QWORD *)(v11 + 56) = &type metadata for String;
    *(_QWORD *)(v11 + 64) = sub_100038CF8();
    *(_QWORD *)(v11 + 32) = v14;
    *(_QWORD *)(v11 + 40) = v16;
    v18 = String.init(format:_:)(v7, v9, v11, v17);
    v20 = v19;
    swift_bridgeObjectRelease(v9);
    v29[0] = v18;
    v29[1] = v20;
    v21 = sub_100038CA0();
    v22 = Text.init<A>(_:)(v29, &type metadata for String, v21);
    v24 = v23;
    v26 = v25;
    LOBYTE(v13) = v27 & 1;
    v28 = sub_10027A20C();
    *(_QWORD *)a2 = v22;
    *(_QWORD *)(a2 + 8) = v24;
    *(_BYTE *)(a2 + 16) = (_BYTE)v13;
    *(_QWORD *)(a2 + 24) = v26;
    *(_QWORD *)(a2 + 32) = v28;
    sub_1000E439C(v22, v24, (char)v13);
    swift_bridgeObjectRetain(v26);
    sub_1000E4458(v22, v24, (char)v13);
    swift_bridgeObjectRelease(v26);
  }
  else
  {
    __break(1u);
  }
}

double sub_10027A4C4(_OWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __int128 v5;
  __int128 v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double result;
  _OWORD v14[4];
  _OWORD v15[2];

  v2 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1[3];
  v14[2] = a1[2];
  v14[3] = v5;
  v15[0] = a1[4];
  *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)((char *)a1 + 73);
  v6 = a1[1];
  v14[0] = *a1;
  v14[1] = v6;
  v7 = (_OWORD *)swift_allocObject(&unk_100792A98, 105, 7);
  v8 = a1[3];
  v7[3] = a1[2];
  v7[4] = v8;
  v7[5] = a1[4];
  *(_OWORD *)((char *)v7 + 89) = *(_OWORD *)((char *)a1 + 73);
  v9 = a1[1];
  v7[1] = *a1;
  v7[2] = v9;
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  v11 = (_QWORD *)swift_allocObject(&unk_100792AC0, 48, 7);
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = &unk_10082AEC0;
  v11[5] = v7;
  sub_10027B95C((uint64_t *)v14);
  swift_retain(v7);
  v12 = sub_10020D9C0((uint64_t)v4, (uint64_t)&unk_10082AEC8, (uint64_t)v11);
  swift_release(v7);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_10027A604()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_100836054);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000EA380;
  return sub_1004985C0();
}

__n128 sub_10027A64C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __n128 result;
  _OWORD v33[9];

  v3 = (id)ActivitySharingBundle(a1);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, 0, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  *(_QWORD *)&v33[0] = v6;
  *((_QWORD *)&v33[0] + 1) = v8;
  v9 = sub_100038CA0();
  v10 = Text.init<A>(_:)(v33, &type metadata for String, v9);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  if (qword_10081D950 != -1)
    swift_once(&qword_10081D950, sub_100279308);
  v18 = v15 & 1;
  v19 = Text.font(_:)(qword_10082ADC8, v10, v13, v18, v17, v11);
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  sub_1000E4458(v10, v13, v18);
  swift_bridgeObjectRelease(v17);
  v27 = static Alignment.center.getter(v26);
  sub_1003EAC04(0.0, 1, 0.0, 1, INFINITY, 0, 38.0, 0, (uint64_t)v33, 0.0, 1, 0.0, 1, v27, v28, v19, v21, v25, v23);
  sub_1000E4458(v19, v21, v25);
  swift_bridgeObjectRelease(v23);
  v29 = v33[7];
  *(_OWORD *)(a2 + 96) = v33[6];
  *(_OWORD *)(a2 + 112) = v29;
  *(_OWORD *)(a2 + 128) = v33[8];
  v30 = v33[3];
  *(_OWORD *)(a2 + 32) = v33[2];
  *(_OWORD *)(a2 + 48) = v30;
  v31 = v33[5];
  *(_OWORD *)(a2 + 64) = v33[4];
  *(_OWORD *)(a2 + 80) = v31;
  result = (__n128)v33[1];
  *(_OWORD *)a2 = v33[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

double sub_10027A830(_OWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __int128 v5;
  __int128 v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double result;
  _OWORD v14[4];
  _OWORD v15[2];

  v2 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1[3];
  v14[2] = a1[2];
  v14[3] = v5;
  v15[0] = a1[4];
  *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)((char *)a1 + 73);
  v6 = a1[1];
  v14[0] = *a1;
  v14[1] = v6;
  v7 = (_OWORD *)swift_allocObject(&unk_100792958, 105, 7);
  v8 = a1[3];
  v7[3] = a1[2];
  v7[4] = v8;
  v7[5] = a1[4];
  *(_OWORD *)((char *)v7 + 89) = *(_OWORD *)((char *)a1 + 73);
  v9 = a1[1];
  v7[1] = *a1;
  v7[2] = v9;
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  v11 = (_QWORD *)swift_allocObject(&unk_100792980, 48, 7);
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = &unk_10082AE80;
  v11[5] = v7;
  sub_10027B95C((uint64_t *)v14);
  swift_retain(v7);
  v12 = sub_10020D9C0((uint64_t)v4, (uint64_t)&unk_10082AE88, (uint64_t)v11);
  swift_release(v7);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_10027A970(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 56) = a1;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 64) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10027A9DC, v3, v4);
}

uint64_t sub_10027A9DC()
{
  uint64_t v0;
  uint64_t *v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  id v17;

  v1 = *(uint64_t **)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 64));
  v2 = (_OWORD *)swift_allocObject(&unk_1007929A8, 105, 7);
  v3 = *((_OWORD *)v1 + 1);
  v2[1] = *(_OWORD *)v1;
  v2[2] = v3;
  v5 = *((_OWORD *)v1 + 3);
  v4 = *((_OWORD *)v1 + 4);
  v6 = *((_OWORD *)v1 + 2);
  *(_OWORD *)((char *)v2 + 89) = *(_OWORD *)((char *)v1 + 73);
  v2[4] = v5;
  v2[5] = v4;
  v2[3] = v6;
  v7 = swift_allocObject(&unk_1007929D0, 128, 7);
  v8 = *((_OWORD *)v1 + 1);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v7 + 32) = v8;
  v9 = *((_OWORD *)v1 + 2);
  v10 = *((_OWORD *)v1 + 3);
  v11 = *((_OWORD *)v1 + 4);
  *(_OWORD *)(v7 + 89) = *(_OWORD *)((char *)v1 + 73);
  *(_OWORD *)(v7 + 64) = v10;
  *(_OWORD *)(v7 + 80) = v11;
  *(_OWORD *)(v7 + 48) = v9;
  *(_QWORD *)(v7 + 112) = &unk_10082AE90;
  *(_QWORD *)(v7 + 120) = v2;
  v12 = *v1;
  v13 = (void *)v1[5];
  v14 = v1[3];
  KeyPath = swift_getKeyPath(&unk_100631C38);
  v16 = swift_getKeyPath(&unk_100631C60);
  *(_QWORD *)(v0 + 16) = v13;
  *(_QWORD *)(v0 + 24) = v14;
  *(_QWORD *)(v0 + 32) = &unk_10082AE98;
  *(_QWORD *)(v0 + 40) = v7;
  *(_BYTE *)(v0 + 48) = 12;
  sub_10027B95C(v1);
  sub_10027B95C(v1);
  v17 = v13;
  swift_retain(v12);
  static Published.subscript.setter(v0 + 16, v12, KeyPath, v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10027AB1C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  __int128 v69;
  __int128 v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v4 = Image.init(systemName:)(0x662E646C65696873, 0xEB000000006C6C69);
  if (qword_10081D958 != -1)
    swift_once(&qword_10081D958, sub_100279340);
  v5 = qword_10082ADD0;
  v6 = (void *)objc_opt_self(NSBundle);
  v7 = objc_msgSend(v6, "mainBundle", swift_retain(v5).n128_f64[0]);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, 0, 0);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v13 = sub_100047110((uint64_t *)&unk_100827460);
  v14 = swift_allocObject(v13, 72, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100622F90;
  v15 = objc_msgSend(*(id *)(a1 + 40), "displayName");
  if (v15)
  {
    v16 = v15;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v19 = v18;

    *(_QWORD *)(v14 + 56) = &type metadata for String;
    *(_QWORD *)(v14 + 64) = sub_100038CF8();
    *(_QWORD *)(v14 + 32) = v17;
    *(_QWORD *)(v14 + 40) = v19;
    v21 = String.init(format:_:)(v10, v12, v14, v20);
    v23 = v22;
    swift_bridgeObjectRelease(v12);
    *(_QWORD *)&v53 = v21;
    *((_QWORD *)&v53 + 1) = v23;
    v24 = sub_100038CA0();
    v25 = Text.init<A>(_:)(&v53, &type metadata for String, v24);
    v27 = v26;
    v29 = v28;
    v31 = v30;
    v66 = v4;
    v67 = v5;
    swift_retain(v5);
    swift_retain(v4);
    v33 = static VerticalAlignment.center.getter(v32);
    v51 = v27;
    v52 = v25;
    v50 = v29 & 1;
    sub_10027AECC(&v66, v25, v27, v29 & 1, v31, (uint64_t)&v53);
    swift_release(v5);
    swift_release(v4);
    v49 = v5;
    v34 = v53;
    v35 = v54;
    v36 = v55;
    v37 = *((_QWORD *)&v55 + 1);
    if (qword_10081D950 != -1)
      swift_once(&qword_10081D950, sub_100279308);
    v38 = qword_10082ADC8;
    KeyPath = swift_getKeyPath(&unk_100631C08);
    v66 = v33;
    v67 = 0x4008000000000000;
    v68 = 0;
    v69 = v34;
    v70 = v35;
    v71 = v36;
    v72 = v37;
    v73 = KeyPath;
    v74 = v38;
    swift_retain(v38);
    v41 = static Alignment.center.getter(v40);
    sub_1003EC3D4(0.0, 1, 0.0, 1, INFINITY, 0, 38.0, 0, (uint64_t)&v53, 0.0, 1, 0.0, 1, v41, v42);
    sub_1000E4458(v52, v51, v50);
    swift_release(*((_QWORD *)&v34 + 1));
    swift_release(v34);
    swift_release(v49);
    swift_release(v4);
    swift_bridgeObjectRelease(v31);
    sub_1000E4458(v35, *((uint64_t *)&v35 + 1), v36);
    swift_release(v38);
    swift_release(KeyPath);
    swift_bridgeObjectRelease(v37);
    v43 = v64;
    *(_OWORD *)(a2 + 160) = v63;
    *(_OWORD *)(a2 + 176) = v43;
    *(_QWORD *)(a2 + 192) = v65;
    v44 = v60;
    *(_OWORD *)(a2 + 96) = v59;
    *(_OWORD *)(a2 + 112) = v44;
    v45 = v62;
    *(_OWORD *)(a2 + 128) = v61;
    *(_OWORD *)(a2 + 144) = v45;
    v46 = v56;
    *(_OWORD *)(a2 + 32) = v55;
    *(_OWORD *)(a2 + 48) = v46;
    v47 = v58;
    *(_OWORD *)(a2 + 64) = v57;
    *(_OWORD *)(a2 + 80) = v47;
    v48 = v54;
    *(_OWORD *)a2 = v53;
    *(_OWORD *)(a2 + 16) = v48;
  }
  else
  {
    __break(1u);
  }
}

double sub_10027AECC@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  double result;

  v9 = *a1;
  v10 = a1[1];
  *(_QWORD *)a6 = *a1;
  *(_QWORD *)(a6 + 8) = v10;
  *(_QWORD *)(a6 + 16) = a2;
  *(_QWORD *)(a6 + 24) = a3;
  v11 = a4 & 1;
  *(_BYTE *)(a6 + 32) = a4 & 1;
  *(_QWORD *)(a6 + 40) = a5;
  swift_retain(v9);
  swift_retain(v10);
  sub_1000E439C(a2, a3, v11);
  swift_bridgeObjectRetain(a5);
  swift_retain(v9);
  swift_retain(v10);
  sub_1000E439C(a2, a3, v11);
  swift_bridgeObjectRetain(a5);
  sub_1000E4458(a2, a3, v11);
  swift_release(v10);
  swift_release(v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a5).n128_u64[0];
  return result;
}

double sub_10027AF8C(_OWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __int128 v5;
  __int128 v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double result;
  _OWORD v14[4];
  _OWORD v15[2];

  v2 = sub_100047110(&qword_10081E650);
  __chkstk_darwin(v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1[3];
  v14[2] = a1[2];
  v14[3] = v5;
  v15[0] = a1[4];
  *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)((char *)a1 + 73);
  v6 = a1[1];
  v14[0] = *a1;
  v14[1] = v6;
  v7 = (_OWORD *)swift_allocObject(&unk_100792A20, 105, 7);
  v8 = a1[3];
  v7[3] = a1[2];
  v7[4] = v8;
  v7[5] = a1[4];
  *(_OWORD *)((char *)v7 + 89) = *(_OWORD *)((char *)a1 + 73);
  v9 = a1[1];
  v7[1] = *a1;
  v7[2] = v9;
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  v11 = (_QWORD *)swift_allocObject(&unk_100792A48, 48, 7);
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = &unk_10082AEA8;
  v11[5] = v7;
  sub_10027B95C((uint64_t *)v14);
  swift_retain(v7);
  v12 = sub_10020D9C0((uint64_t)v4, (uint64_t)&unk_10082AEB0, (uint64_t)v11);
  swift_release(v7);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_10027B0CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 56) = a1;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 64) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10027B138, v3, v4);
}

uint64_t sub_10027B138()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  id v7;

  v1 = *(uint64_t **)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 64));
  v2 = *v1;
  v3 = (void *)v1[5];
  v4 = v1[3];
  KeyPath = swift_getKeyPath(&unk_100631C38);
  v6 = swift_getKeyPath(&unk_100631C60);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 24) = v4;
  *(_BYTE *)(v0 + 48) = 0;
  v7 = v3;
  swift_retain(v2);
  static Published.subscript.setter(v0 + 16, v2, KeyPath, v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

__n128 sub_10027B1D8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __n128 result;
  _OWORD v33[9];

  v3 = (id)ActivitySharingBundle(a1);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, 0, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  *(_QWORD *)&v33[0] = v6;
  *((_QWORD *)&v33[0] + 1) = v8;
  v9 = sub_100038CA0();
  v10 = Text.init<A>(_:)(v33, &type metadata for String, v9);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  if (qword_10081D950 != -1)
    swift_once(&qword_10081D950, sub_100279308);
  v18 = v15 & 1;
  v19 = Text.font(_:)(qword_10082ADC8, v10, v13, v18, v17, v11);
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  sub_1000E4458(v10, v13, v18);
  swift_bridgeObjectRelease(v17);
  v27 = static Alignment.center.getter(v26);
  sub_1003EAC04(0.0, 1, 0.0, 1, INFINITY, 0, 38.0, 0, (uint64_t)v33, 0.0, 1, 0.0, 1, v27, v28, v19, v21, v25, v23);
  sub_1000E4458(v19, v21, v25);
  swift_bridgeObjectRelease(v23);
  v29 = v33[7];
  *(_OWORD *)(a2 + 96) = v33[6];
  *(_OWORD *)(a2 + 112) = v29;
  *(_OWORD *)(a2 + 128) = v33[8];
  v30 = v33[3];
  *(_OWORD *)(a2 + 32) = v33[2];
  *(_OWORD *)(a2 + 48) = v30;
  v31 = v33[5];
  *(_OWORD *)(a2 + 64) = v33[4];
  *(_OWORD *)(a2 + 80) = v31;
  result = (__n128)v33[1];
  *(_OWORD *)a2 = v33[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_10027B3BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _OWORD v13[6];
  uint64_t v14;

  v8 = *(_OWORD *)(v6 + 80);
  v13[4] = *(_OWORD *)(v6 + 64);
  v13[5] = v8;
  v14 = *(_QWORD *)(v6 + 96);
  v9 = *(_OWORD *)(v6 + 16);
  v13[0] = *(_OWORD *)v6;
  v13[1] = v9;
  v10 = *(_OWORD *)(v6 + 48);
  v13[2] = *(_OWORD *)(v6 + 32);
  v13[3] = v10;
  *(_QWORD *)a6 = static HorizontalAlignment.center.getter(a1, a2, a3, a4, a5);
  *(_QWORD *)(a6 + 8) = 0;
  *(_BYTE *)(a6 + 16) = 1;
  v11 = sub_100047110(&qword_10082ADD8);
  return sub_1002793D8((uint64_t)v13, a6 + *(int *)(v11 + 44));
}

uint64_t sub_10027B42C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10082AE08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10027B474()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082AE18;
  if (!qword_10082AE18)
  {
    v1 = sub_100007050(&qword_10082AE10);
    sub_100028384(&qword_10082AE20, &qword_10082AE28, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100028384(&qword_100826030, &qword_100826038, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082AE18);
  }
  return result;
}

unint64_t sub_10027B510()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082AE38;
  if (!qword_10082AE38)
  {
    v1 = sub_100007050(&qword_10082AE30);
    sub_100028384(&qword_10081F2E0, &qword_10081F2B8, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100028384(&qword_100826030, &qword_100826038, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082AE38);
  }
  return result;
}

double sub_10027B5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  double result;

  if (a7)
  {
    sub_1000E439C(a4, a5, a6 & 1);
    swift_retain(a8);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a7).n128_u64[0];
  }
  return result;
}

uint64_t sub_10027B5F0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 216);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    v4);
  return a1;
}

double sub_10027B66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  double result;

  if (a7)
  {
    sub_1000E4458(a4, a5, a6 & 1);
    swift_bridgeObjectRelease(a7);
    *(_QWORD *)&result = swift_release(a8).n128_u64[0];
  }
  return result;
}

double sub_10027B6B0(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 201) = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

double sub_10027B6DC()
{
  uint64_t v0;

  return sub_10027A830((_OWORD *)(v0 + 16));
}

void sub_10027B6E4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10027AB1C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t *sub_10027B6EC(uint64_t *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v2 = *a1;
  v3 = (void *)a1[1];
  v4 = a1[2];
  v5 = (void *)a1[5];
  v6 = a1[8];
  v7 = a1[9];
  v8 = (void *)a1[10];
  v9 = (void *)a1[12];
  v10 = (id)a1[7];
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  v11 = v8;
  v12 = v9;
  swift_retain(v2);
  v13 = v3;
  swift_retain(v4);
  v14 = v5;
  return a1;
}

unint64_t sub_10027B778()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082AE50;
  if (!qword_10082AE50)
  {
    v1 = sub_100007050(&qword_10082AE48);
    sub_10027B7E4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082AE50);
  }
  return result;
}

unint64_t sub_10027B7E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082AE58;
  if (!qword_10082AE58)
  {
    v1 = sub_100007050(&qword_10082AE60);
    sub_100028384(&qword_10082AE68, &qword_10082AE70, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100028384(&qword_100823850, &qword_100823858, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082AE58);
  }
  return result;
}

uint64_t sub_10027B894()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10082AE7C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1000EA380;
  return sub_10027A970(v0 + 16);
}

uint64_t sub_10027B8E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10083B534);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA380;
  return sub_10058325C(a1, v4, v5, v6);
}

uint64_t *sub_10027B95C(uint64_t *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = *a1;
  v3 = (void *)a1[1];
  v4 = a1[2];
  v5 = (void *)a1[5];
  v6 = a1[8];
  v7 = a1[9];
  v8 = (void *)a1[10];
  v9 = (id)a1[7];
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  v10 = v8;
  swift_retain(v2);
  v11 = v3;
  swift_retain(v4);
  v12 = v5;
  return a1;
}

uint64_t sub_10027B9DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10083604C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1000EA380;
  return sub_1004992A8(v0 + 16);
}

uint64_t sub_10027BA28()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));

  swift_release(*(_QWORD *)(v0 + 120));
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10027BA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0 + 16;
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = (_QWORD *)swift_task_alloc(dword_100836044);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1000EA380;
  return sub_100499B6C(v2, v4, v3);
}

double sub_10027BAF8()
{
  uint64_t v0;

  return sub_10027AF8C((_OWORD *)(v0 + 16));
}

uint64_t sub_10027BB04()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10082AEA4);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1000EA380;
  return sub_10027B0CC(v0 + 16);
}

uint64_t sub_10027BB54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10083B534);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000DA0E4;
  return sub_10058325C(a1, v4, v5, v6);
}

uint64_t sub_10027BBD0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));

  return swift_deallocObject(v0, 120, 7);
}

double sub_10027BC34()
{
  uint64_t v0;

  return sub_10027A4C4((_OWORD *)(v0 + 16));
}

uint64_t sub_10027BC40()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));

  return swift_deallocObject(v0, 105, 7);
}

uint64_t sub_10027BC9C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_10082AEBC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000EA380;
  v2 = (_QWORD *)swift_task_alloc(dword_100836054);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1000EA380;
  return sub_1004985C0();
}

uint64_t sub_10027BD08()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10027BD34()
{
  return sub_100028384(&qword_10082AED0, &qword_10082AED8, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

unint64_t sub_10027BD64()
{
  unint64_t result;

  result = qword_10082AEE0;
  if (!qword_10082AEE0)
  {
    result = swift_getWitnessTable(&unk_100631D00, &type metadata for OpenMindfulnessSessionIntent);
    atomic_store(result, (unint64_t *)&qword_10082AEE0);
  }
  return result;
}

uint64_t sub_10027BDAC()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_100008398(v0, qword_10086A418);
  sub_10003CE9C(v0, (uint64_t)qword_10086A418);
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100693F10);
}

uint64_t sub_10027BE0C()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

_QWORD *sub_10027BE3C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

void sub_10027BE74(id *a1)
{
  id v1;
  id v2;

  v2 = *a1;
  v1 = v2;
  IntentParameter.wrappedValue.setter(&v2);

}

unint64_t sub_10027BEB8()
{
  unint64_t result;

  result = qword_10082AEE8;
  if (!qword_10082AEE8)
  {
    result = swift_getWitnessTable(&unk_100631D28, &type metadata for OpenMindfulnessSessionIntent);
    atomic_store(result, (unint64_t *)&qword_10082AEE8);
  }
  return result;
}

uint64_t sub_10027BEFC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_10027C3C4();
  v5 = sub_10021FBE4();
  return static URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

unint64_t sub_10027BF54()
{
  unint64_t result;

  result = qword_10082AEF0;
  if (!qword_10082AEF0)
  {
    result = swift_getWitnessTable(&unk_100631DB8, &type metadata for OpenMindfulnessSessionIntent);
    atomic_store(result, (unint64_t *)&qword_10082AEF0);
  }
  return result;
}

unint64_t sub_10027BF9C()
{
  unint64_t result;

  result = qword_10082AEF8;
  if (!qword_10082AEF8)
  {
    result = swift_getWitnessTable(&unk_100631DE0, &type metadata for OpenMindfulnessSessionIntent);
    atomic_store(result, (unint64_t *)&qword_10082AEF8);
  }
  return result;
}

uint64_t sub_10027BFE0(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10027BEB8();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_10027C020@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10081D960 != -1)
    swift_once(&qword_10081D960, sub_10027BDAC);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10003CE9C(v2, (uint64_t)qword_10086A418);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_10027C090(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10027C3C4();
  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_10027C0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = (_QWORD *)swift_task_alloc(async function pointer to URLRepresentableIntent<>.perform()[1]);
  *(_QWORD *)(v2 + 16) = v4;
  v5 = sub_10027C3C4();
  v6 = sub_10027C408();
  v7 = sub_10021FBE4();
  *v4 = v2;
  v4[1] = sub_10010123C;
  return URLRepresentableIntent<>.perform()(a2, v5, v6, v7);
}

uint64_t sub_10027C13C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10027C198();
  *a1 = result;
  return result;
}

uint64_t sub_10027C160(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10027BEB8();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenMindfulnessSessionIntent()
{
  return &type metadata for OpenMindfulnessSessionIntent;
}

uint64_t sub_10027C198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100047110(&qword_1008201C8);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - v8;
  v10 = sub_100047110(&qword_1008201D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047110(&qword_10082AF08);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000002CLL, 0x80000001006913E0);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100693EF0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v22 = 0;
  v17 = type metadata accessor for IntentDialog(0);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v9, 1, 1, v17);
  v18(v6, 1, 1, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  v19 = sub_10021F580();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v16, v12, &v22, v9, v6, v3, v19);
}

unint64_t sub_10027C3C4()
{
  unint64_t result;

  result = qword_10082AF10;
  if (!qword_10082AF10)
  {
    result = swift_getWitnessTable(&unk_100631C80, &type metadata for OpenMindfulnessSessionIntent);
    atomic_store(result, (unint64_t *)&qword_10082AF10);
  }
  return result;
}

unint64_t sub_10027C408()
{
  unint64_t result;

  result = qword_10082AF18;
  if (!qword_10082AF18)
  {
    result = swift_getWitnessTable(&unk_100631CD0, &type metadata for OpenMindfulnessSessionIntent);
    atomic_store(result, (unint64_t *)&qword_10082AF18);
  }
  return result;
}

uint64_t destroy for HistoryItemView(_QWORD *a1)
{
  uint64_t result;

  swift_release(*a1);
  result = _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 1);
  if (a1[9])
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 6);
  return result;
}

uint64_t initializeWithCopy for HistoryItemView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t *, uint64_t);
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  v5 = a2 + 1;
  v6 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v6 - 8);
  swift_retain(v4);
  v8(a1 + 8, v5, v7);
  v9 = (_OWORD *)(a1 + 48);
  v10 = a2 + 6;
  v11 = a2[9];
  if (v11)
  {
    v12 = a2[10];
    *(_QWORD *)(a1 + 72) = v11;
    *(_QWORD *)(a1 + 80) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    v13 = *((_OWORD *)a2 + 4);
    *v9 = *v10;
    *(_OWORD *)(a1 + 64) = v13;
    *(_QWORD *)(a1 + 80) = a2[10];
  }
  return a1;
}

uint64_t *assignWithCopy for HistoryItemView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  sub_1000F1A58(a1 + 1, a2 + 1);
  v6 = a2[9];
  if (!a1[9])
  {
    if (v6)
    {
      a1[9] = v6;
      a1[10] = a2[10];
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 6), (uint64_t)(a2 + 6));
      return a1;
    }
LABEL_7:
    v7 = *((_OWORD *)a2 + 3);
    v8 = *((_OWORD *)a2 + 4);
    a1[10] = a2[10];
    *((_OWORD *)a1 + 3) = v7;
    *((_OWORD *)a1 + 4) = v8;
    return a1;
  }
  if (!v6)
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 6);
    goto LABEL_7;
  }
  sub_1000F1A58(a1 + 6, a2 + 6);
  return a1;
}

uint64_t *assignWithTake for HistoryItemView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 1);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  a1[5] = a2[5];
  if (a1[9])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(a1 + 6);
  v5 = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 4) = v5;
  a1[10] = a2[10];
  return a1;
}

ValueMetadata *type metadata accessor for HistoryItemView()
{
  return &type metadata for HistoryItemView;
}

uint64_t sub_10027C67C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B1C58, 1);
}

uint64_t sub_10027C68C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  uint64_t v19;
  _OWORD v20[5];
  uint64_t v21;

  v2 = v1;
  v19 = a1;
  v3 = sub_100047110(&qword_10082AF20);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_10082AF28);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10082AF30);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10027C884(v2, (uint64_t)v5);
  v13 = v2[4];
  v12 = v2[5];
  sub_100016804(v2 + 1, v13);
  (*(void (**)(uint64_t, uint64_t))(v12 + 48))(v13, v12);
  sub_100045AD4((uint64_t)v5, (uint64_t)v8, &qword_10082AF20);
  sub_100021CC0((uint64_t)v8, (uint64_t)v11, &qword_10082AF28);
  v11[*(int *)(v9 + 36)] = 0;
  sub_10001BE90((uint64_t)v8, &qword_10082AF28);
  sub_1001DDCAC(v2, (uint64_t)v20);
  v14 = swift_allocObject(&unk_100792CD8, 104, 7);
  v15 = v20[3];
  *(_OWORD *)(v14 + 48) = v20[2];
  *(_OWORD *)(v14 + 64) = v15;
  *(_OWORD *)(v14 + 80) = v20[4];
  *(_QWORD *)(v14 + 96) = v21;
  v16 = v20[1];
  *(_OWORD *)(v14 + 16) = v20[0];
  *(_OWORD *)(v14 + 32) = v16;
  v17 = sub_10027D33C();
  View.onTapGesture(count:perform:)(1, sub_10027D334, v14, v9, v17);
  swift_release(v14);
  return sub_10001BE90((uint64_t)v11, &qword_10082AF30);
}

uint64_t sub_10027C884@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  char v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  char v69;
  int *v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  char *v79;
  _QWORD *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  _OWORD v109[3];

  v107 = a2;
  v3 = type metadata accessor for AttributedString(0);
  v95 = *(_QWORD *)(v3 - 8);
  v96 = v3;
  __chkstk_darwin(v3);
  v94 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v93 = (char *)&v91 - v6;
  v106 = type metadata accessor for FitnessPlusStackItemView(0);
  __chkstk_darwin(v106);
  v97 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for MindfulnessItemView(0);
  __chkstk_darwin(v101);
  v98 = (uint64_t)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110((uint64_t *)&unk_100828380);
  __chkstk_darwin(v9);
  v11 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FitnessPlusStackViewModel(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v92 = (uint64_t)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v99 = (uint64_t)&v91 - v16;
  v102 = sub_100047110(&qword_10082AF48);
  __chkstk_darwin(v102);
  v104 = (uint64_t)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_100047110(&qword_10082AF50);
  __chkstk_darwin(v100);
  v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100047110(&qword_10082AF58);
  __chkstk_darwin(v103);
  v21 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100047110(&qword_10082AF60);
  __chkstk_darwin(v22);
  v105 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for WorkoutItemView(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000252E0((uint64_t)(a1 + 1), (uint64_t)v109);
  v27 = sub_100047110((uint64_t *)&unk_10082E5B0);
  v28 = sub_10027D46C();
  if ((swift_dynamicCast(&v108, v109, v27, v28, 6) & 1) != 0)
  {
    v29 = *a1;
    v30 = *(void **)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_workoutFormattingManager);
    v31 = *(void **)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_seymourCatalogItemDataProvider);
    v32 = *(void **)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_awardsDataProvider);
    LODWORD(v99) = *(unsigned __int8 *)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_size);
    v33 = *(_QWORD *)(v29 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_workoutImageProvider);
    v34 = v108;
    v35 = v30;
    v36 = v31;
    v37 = v32;
    swift_retain(v33);
    v38 = v34;
    sub_10048195C(v34, v35, v36, v37, v99, v33, (uint64_t)v26);
    sub_10004F8C8((uint64_t)v26, (uint64_t)v19, type metadata accessor for WorkoutItemView);
    swift_storeEnumTagMultiPayload(v19, v100, 0);
    v39 = sub_1000083D8(&qword_10082AF78, type metadata accessor for WorkoutItemView, (uint64_t)&unk_10063EAE8);
    v40 = sub_1000083D8(&qword_10082AF80, type metadata accessor for MindfulnessItemView, (uint64_t)&unk_100628F80);
    _ConditionalContent<>.init(storage:)(v19, v24, v101, v39, v40);
    v41 = v104;
    sub_100021CC0((uint64_t)v21, v104, &qword_10082AF58);
    swift_storeEnumTagMultiPayload(v41, v102, 0);
    v42 = sub_10027D4EC();
    v43 = sub_1000083D8(&qword_10082AF88, type metadata accessor for FitnessPlusStackItemView, (uint64_t)&unk_10063E540);
    v44 = v105;
    _ConditionalContent<>.init(storage:)(v41, v103, v106, v42, v43);

    sub_10001BE90((uint64_t)v21, &qword_10082AF58);
    sub_100011F54((uint64_t)v26, type metadata accessor for WorkoutItemView);
    v45 = sub_100047110(&qword_10082AF68);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
    v46 = (uint64_t)v44;
  }
  else
  {
    v91 = v24;
    sub_1000252E0((uint64_t)(a1 + 1), (uint64_t)v109);
    v47 = type metadata accessor for MindfulnessSessionViewModel(0);
    if ((swift_dynamicCast(&v108, v109, v27, v47, 6) & 1) != 0)
    {
      v48 = *(void **)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_mindfulnessFormattingManager);
      v49 = *(void **)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_fitnessAppContext);
      v50 = *(_BYTE *)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_size);
      v51 = v108;
      v52 = v48;
      v53 = v49;
      v54 = v98;
      sub_100184528(v51, v52, v53, v50, v98);
      sub_10004F8C8(v54, (uint64_t)v19, type metadata accessor for MindfulnessItemView);
      swift_storeEnumTagMultiPayload(v19, v100, 1);
      v55 = sub_1000083D8(&qword_10082AF78, type metadata accessor for WorkoutItemView, (uint64_t)&unk_10063EAE8);
      v56 = sub_1000083D8(&qword_10082AF80, type metadata accessor for MindfulnessItemView, (uint64_t)&unk_100628F80);
      _ConditionalContent<>.init(storage:)(v19, v91, v101, v55, v56);
      v57 = v104;
      sub_100021CC0((uint64_t)v21, v104, &qword_10082AF58);
      swift_storeEnumTagMultiPayload(v57, v102, 0);
      v58 = sub_10027D4EC();
      v59 = sub_1000083D8(&qword_10082AF88, type metadata accessor for FitnessPlusStackItemView, (uint64_t)&unk_10063E540);
      v60 = v105;
      _ConditionalContent<>.init(storage:)(v57, v103, v106, v58, v59);

      sub_10001BE90((uint64_t)v21, &qword_10082AF58);
      sub_100011F54(v54, type metadata accessor for MindfulnessItemView);
      v61 = sub_100047110(&qword_10082AF68);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 0, 1, v61);
      v46 = (uint64_t)v60;
    }
    else
    {
      sub_1000252E0((uint64_t)(a1 + 1), (uint64_t)v109);
      v62 = swift_dynamicCast(v11, v109, v27, v12, 6);
      v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
      if ((v62 & 1) == 0)
      {
        v63(v11, 1, 1, v12);
        sub_10001BE90((uint64_t)v11, (uint64_t *)&unk_100828380);
        v90 = sub_100047110(&qword_10082AF68);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v107, 1, 1, v90);
      }
      v63(v11, 0, 1, v12);
      v64 = v99;
      sub_10027D4A8((uint64_t)v11, v99);
      v65 = v64;
      v66 = v92;
      sub_10004F8C8(v65, v92, type metadata accessor for FitnessPlusStackViewModel);
      v67 = *(void **)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_stackFormattingManager);
      v68 = *(void **)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_seymourCatalogItemDataProvider);
      v69 = *(_BYTE *)(*a1 + OBJC_IVAR____TtC10FitnessApp16HistoryItemsCard_size);
      v70 = (int *)v106;
      v71 = *(int *)(v106 + 32);
      v108 = 0;
      v72 = v67;
      v73 = v68;
      v74 = sub_100047110(&qword_100823078);
      State.init(wrappedValue:)(v109, &v108, v74);
      v75 = (uint64_t)v97;
      *(_OWORD *)&v97[v71] = v109[0];
      sub_10004F8C8(v66, v75, type metadata accessor for FitnessPlusStackViewModel);
      *(_QWORD *)(v75 + v70[5]) = v72;
      *(_QWORD *)(v75 + v70[6]) = v73;
      *(_BYTE *)(v75 + v70[7]) = v69;
      v76 = v72;
      v77 = v73;
      v78 = sub_100387C74();
      v79 = v93;
      AttributedString.init(_:)(v78);
      v80 = (_QWORD *)(v75 + v70[9]);
      v82 = v94;
      v81 = v95;
      v83 = v96;
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v94, v79, v96);
      State.init(wrappedValue:)(v80, v82, v83);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v79, v83);

      sub_100011F54(v66, type metadata accessor for FitnessPlusStackViewModel);
      v84 = v104;
      sub_10004F8C8(v75, v104, type metadata accessor for FitnessPlusStackItemView);
      swift_storeEnumTagMultiPayload(v84, v102, 1);
      v85 = sub_10027D4EC();
      v86 = sub_1000083D8(&qword_10082AF88, type metadata accessor for FitnessPlusStackItemView, (uint64_t)&unk_10063E540);
      v87 = v105;
      _ConditionalContent<>.init(storage:)(v84, v103, v70, v85, v86);
      sub_100011F54(v75, type metadata accessor for FitnessPlusStackItemView);
      sub_100011F54(v99, type metadata accessor for FitnessPlusStackViewModel);
      v88 = sub_100047110(&qword_10082AF68);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v87, 0, 1, v88);
      v46 = (uint64_t)v87;
    }
  }
  return sub_100045AD4(v46, v107, &qword_10082AF60);
}

uint64_t sub_10027D20C(uint64_t *a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];
  _QWORD v8[3];
  uint64_t v9;
  _QWORD v10[5];

  sub_1000252E0((uint64_t)(a1 + 1), (uint64_t)v10);
  sub_100021CC0((uint64_t)(a1 + 6), (uint64_t)v8, &qword_10081F600);
  if (v9)
  {
    v2 = sub_100016804(v8, v9);
    v3 = *a1;
    v7[3] = &type metadata for HistoryViewActionContext;
    v7[0] = swift_allocObject(&unk_100792D00, 56, 7);
    sub_10027D430((uint64_t)v10, v7[0] + 16);
    v4 = *v2;
    swift_retain(v3);
    sub_10040AE7C(v5, (uint64_t)v7, v4);
    sub_10027D3D8(v10);
    sub_10001BE90((uint64_t)v7, (uint64_t *)&unk_100828420);
    swift_release(v3);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0(v8);
  }
  else
  {
    sub_10027D3D8(v10);
    return sub_10001BE90((uint64_t)v8, &qword_10081F600);
  }
}

uint64_t sub_10027D2F8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 3);
  if (v0[11])
    _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 8);
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10027D334()
{
  uint64_t v0;

  return sub_10027D20C((uint64_t *)(v0 + 16));
}

unint64_t sub_10027D33C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082AF38;
  if (!qword_10082AF38)
  {
    v1 = sub_100007050(&qword_10082AF30);
    sub_100028384(&qword_10082AF40, &qword_10082AF28, (uint64_t)&protocol conformance descriptor for IDView<A, B>);
    sub_100028384(&qword_10081F650, &qword_10081F658, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082AF38);
  }
  return result;
}

_QWORD *sub_10027D3D8(_QWORD *a1)
{
  destroy for HistoryViewActionContext(a1);
  return a1;
}

uint64_t sub_10027D40C()
{
  uint64_t v0;

  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10027D430(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for HistoryViewActionContext(a2, a1);
  return a2;
}

unint64_t sub_10027D46C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100828390;
  if (!qword_100828390)
  {
    v1 = objc_opt_self(HKWorkout);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100828390);
  }
  return result;
}

uint64_t sub_10027D4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FitnessPlusStackViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10027D4EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082AF70;
  if (!qword_10082AF70)
  {
    v1 = sub_100007050(&qword_10082AF58);
    sub_1000083D8(&qword_10082AF78, type metadata accessor for WorkoutItemView, (uint64_t)&unk_10063EAE8);
    sub_1000083D8(&qword_10082AF80, type metadata accessor for MindfulnessItemView, (uint64_t)&unk_100628F80);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082AF70);
  }
  return result;
}

uint64_t sub_10027D588()
{
  _QWORD v1[2];

  v1[0] = sub_100007050(&qword_10082AF30);
  v1[1] = sub_10027D33C();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
}

uint64_t sub_10027D5D4@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, __int128 *a8@<X7>, char *a9@<X8>, __int128 *a10)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *Card;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v29;
  int v30;
  int v31;
  __int128 *v32;
  __int128 *v33;

  v30 = a6;
  v31 = a7;
  v29 = a5;
  v32 = a10;
  v33 = a8;
  v15 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  Card = (int *)type metadata accessor for FitnessPlusUpNextCard(0);
  v23 = &a9[Card[5]];
  *(_OWORD *)v23 = xmmword_100623560;
  v23[16] = 3;
  a9[Card[6]] = 1;
  sub_10004D954(a1, (uint64_t)v17);
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  if ((_DWORD)v24 == 1)
  {
    UUID.init()(v24);
    sub_10004D914(a1);
    sub_10004D914((uint64_t)v17);
    v25 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  }
  else
  {
    sub_10004D914(a1);
    v25 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v25(v21, v17, v18);
  }
  v25(a9, v21, v18);
  a9[Card[7]] = a2 & 1;
  a9[Card[8]] = a3 & 1;
  v26 = &a9[Card[9]];
  v27 = v29;
  *(_QWORD *)v26 = a4;
  *((_QWORD *)v26 + 1) = v27;
  v26[16] = v30;
  a9[Card[10]] = v31 & 1;
  sub_10002411C(v33, (uint64_t)&a9[Card[11]]);
  return sub_10002411C(v32, (uint64_t)&a9[Card[12]]);
}

Swift::Int sub_10027D7B0()
{
  uint64_t v0;
  uint64_t v1;
  int *Card;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  Swift::UInt v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::UInt v23;
  _OWORD v25[4];
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v1 = v0;
  Hasher.init()(v25);
  Card = (int *)type metadata accessor for FitnessPlusUpNextCard(0);
  v3 = v0 + Card[5];
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(unsigned __int8 *)(v3 + 16);
  sub_1000EB3F4(*(_QWORD *)v3, v5, *(_BYTE *)(v3 + 16));
  sub_10054FFE4(v4, v5, v6);
  v8 = v7;
  String.hash(into:)(v25, v9, v7);
  swift_bridgeObjectRelease(v8);
  if (!v6 || v6 == 2)
  {
    Hasher._combine(_:)(v4);
  }
  else
  {
    if (v6 == 1)
    {
      String.hash(into:)(v25, v4, v5);
      v10 = v4;
      v11 = v5;
      v12 = 1;
    }
    else
    {
      v10 = v4;
      v11 = v5;
      v12 = v6;
    }
    sub_1000EB41C(v10, v11, v12);
  }
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + Card[6]));
  Hasher._combine(_:)(*(_BYTE *)(v1 + Card[7]));
  v13 = v1 + Card[9];
  v15 = *(_QWORD *)v13;
  v14 = *(_QWORD *)(v13 + 8);
  v16 = *(unsigned __int8 *)(v13 + 16);
  if (v16)
  {
    if (v16 == 1)
    {
      Hasher._combine(_:)(3uLL);
      swift_bridgeObjectRetain(v14);
      String.hash(into:)(v25, v15, v14);
      sub_10027DC80(v15, v14, 1);
    }
    else
    {
      if (v15 | v14)
      {
        if (v15 ^ 1 | v14)
          v23 = 4;
        else
          v23 = 1;
      }
      else
      {
        v23 = 0;
      }
      Hasher._combine(_:)(v23);
    }
  }
  else
  {
    Hasher._combine(_:)(2uLL);
    v17 = *(_QWORD *)(v15 + 16);
    Hasher._combine(_:)(v17);
    if (v17)
    {
      v18 = type metadata accessor for CatalogLockup(0);
      v19 = *(_QWORD *)(v18 - 8);
      v20 = v15 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
      v21 = *(_QWORD *)(v19 + 72);
      v22 = sub_1000083D8(&qword_10082AF90, (uint64_t (*)(uint64_t))&type metadata accessor for CatalogLockup, (uint64_t)&protocol conformance descriptor for CatalogLockup);
      swift_bridgeObjectRetain(v15);
      do
      {
        dispatch thunk of Hashable.hash(into:)(v25, v18, v22);
        v20 += v21;
        --v17;
      }
      while (v17);
      sub_10027DC80(v15, v14, 0);
    }
  }
  Hasher._combine(_:)(*(_BYTE *)(v1 + Card[10]));
  v29 = v25[2];
  v30 = v25[3];
  v31 = v26;
  v27 = v25[0];
  v28 = v25[1];
  return Hasher.finalize()();
}

uint64_t sub_10027DA28()
{
  uint64_t v0;
  int *Card;
  __int128 *v2;
  char v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  Swift::String v17;
  __int128 *v18;
  char v19;
  __int128 v21;
  char v22;
  _QWORD v23[2];

  v23[0] = 0;
  v23[1] = 0xE000000000000000;
  Card = (int *)type metadata accessor for FitnessPlusUpNextCard(0);
  v2 = (__int128 *)(v0 + Card[5]);
  v3 = *((_BYTE *)v2 + 16);
  v21 = *v2;
  v22 = v3;
  _print_unlocked<A, B>(_:_:)(&v21, v23, &type metadata for CardType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  LOBYTE(v21) = *(_BYTE *)(v0 + Card[6]);
  _print_unlocked<A, B>(_:_:)(&v21, v23, &type metadata for CardSize, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v5._countAndFlagsBits = 58;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6 = type metadata accessor for UUID(0);
  v7 = sub_1000083D8((unint64_t *)&qword_100821498, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, v7);
  object = (CHWorkoutDetailHeartRateTableViewCell *)v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object, v10, v11, v12, v13, v14, v15, v16);
  v17._countAndFlagsBits = 540945696;
  v17._object = (void *)0xE400000000000000;
  String.append(_:)(v17);
  v18 = (__int128 *)(v0 + Card[9]);
  v19 = *((_BYTE *)v18 + 16);
  v21 = *v18;
  v22 = v19;
  _print_unlocked<A, B>(_:_:)(&v21, v23, &type metadata for FitnessPlusCardDataProvider.State, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  return v23[0];
}

uint64_t sub_10027DB94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_10027DBCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 20);
  v3 = *(_QWORD *)v2;
  sub_1000EB3F4(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16));
  return v3;
}

uint64_t sub_10027DC18(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_10027DC24(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_10027DC38(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t type metadata accessor for FitnessPlusUpNextCard(uint64_t a1)
{
  uint64_t result;

  result = qword_10082AFF0;
  if (!qword_10082AFF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FitnessPlusUpNextCard);
  return result;
}

uint64_t sub_10027DC80(uint64_t result, uint64_t a2, char a3)
{
  if (a3)
  {
    if (a3 != 1)
      return result;
    result = a2;
  }
  return swift_bridgeObjectRelease(result);
}

_QWORD *sub_10027DC9C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v24);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    v12 = *((_QWORD *)v10 + 1);
    v13 = v10[16];
    sub_1000EB3F4(*(_QWORD *)v10, v12, v13);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    v9[16] = v13;
    v14 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    v15 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v16 = (char *)a1 + v15;
    v17 = *(_QWORD *)((char *)a2 + v15);
    v18 = *(_QWORD *)((char *)a2 + v15 + 8);
    v19 = *((_BYTE *)a2 + v15 + 16);
    sub_1001B73B0(v17, v18, v19);
    *(_QWORD *)v16 = v17;
    *((_QWORD *)v16 + 1) = v18;
    v16[16] = v19;
    v20 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v21 = *(_OWORD *)((char *)a2 + v20 + 24);
    *(_OWORD *)((char *)a1 + v20 + 24) = v21;
    (**(void (***)(void))(v21 - 8))();
    v22 = a3[12];
    v23 = *(_OWORD *)((char *)a2 + v22 + 24);
    *(_OWORD *)((char *)a1 + v22 + 24) = v23;
    (**(void (***)(void))(v23 - 8))();
  }
  return a1;
}

uint64_t sub_10027DDEC(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_1000EB41C(*(_QWORD *)(a1 + a2[5]), *(_QWORD *)(a1 + a2[5] + 8), *(_BYTE *)(a1 + a2[5] + 16));
  sub_10027DC80(*(_QWORD *)(a1 + a2[9]), *(_QWORD *)(a1 + a2[9] + 8), *(_BYTE *)(a1 + a2[9] + 16));
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(a1 + a2[11]));
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(a1 + a2[12]));
}

uint64_t sub_10027DE64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v15 = a1 + v14;
  v16 = *(_QWORD *)(a2 + v14);
  v17 = *(_QWORD *)(a2 + v14 + 8);
  v18 = *(_BYTE *)(a2 + v14 + 16);
  sub_1001B73B0(v16, v17, v18);
  *(_QWORD *)v15 = v16;
  *(_QWORD *)(v15 + 8) = v17;
  *(_BYTE *)(v15 + 16) = v18;
  v19 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v20 = *(_OWORD *)(a2 + v19 + 24);
  *(_OWORD *)(a1 + v19 + 24) = v20;
  (**(void (***)(void))(v20 - 8))();
  v21 = a3[12];
  v22 = *(_OWORD *)(a2 + v21 + 24);
  *(_OWORD *)(a1 + v21 + 24) = v22;
  (**(void (***)(void))(v22 - 8))();
  return a1;
}

uint64_t sub_10027DF88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  v13 = *(_QWORD *)v8;
  v14 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  v15 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v12;
  sub_1000EB41C(v13, v14, v15);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)v18;
  v20 = *(_QWORD *)(v18 + 8);
  v21 = *(_BYTE *)(v18 + 16);
  sub_1001B73B0(*(_QWORD *)v18, v20, v21);
  v22 = *(_QWORD *)v17;
  v23 = *(_QWORD *)(v17 + 8);
  *(_QWORD *)v17 = v19;
  *(_QWORD *)(v17 + 8) = v20;
  v24 = *(_BYTE *)(v17 + 16);
  *(_BYTE *)(v17 + 16) = v21;
  sub_10027DC80(v22, v23, v24);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  sub_1000F1A58((_QWORD *)(a1 + a3[11]), (_QWORD *)(a2 + a3[11]));
  sub_1000F1A58((_QWORD *)(a1 + a3[12]), (_QWORD *)(a2 + a3[12]));
  return a1;
}

uint64_t sub_10027E0A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[9];
  v13 = a3[10];
  v14 = a1 + v12;
  v15 = (__int128 *)(a2 + v12);
  v16 = *v15;
  *(_BYTE *)(v14 + 16) = *((_BYTE *)v15 + 16);
  *(_OWORD *)v14 = v16;
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v17 = a3[11];
  v18 = a3[12];
  v19 = a1 + v17;
  v20 = a2 + v17;
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  v22 = a1 + v18;
  v23 = a2 + v18;
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  return a1;
}

uint64_t sub_10027E188(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)v8;
  v12 = *(_QWORD *)(v8 + 8);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v13 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v10;
  sub_1000EB41C(v11, v12, v13);
  v14 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 16);
  v19 = *(_QWORD *)v16;
  v20 = *(_QWORD *)(v16 + 8);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v21 = *(_BYTE *)(v16 + 16);
  *(_BYTE *)(v16 + 16) = v18;
  sub_10027DC80(v19, v20, v21);
  v22 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v23 = a1 + v22;
  v24 = a2 + v22;
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(a1 + v22));
  v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v25;
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  v26 = a3[12];
  v27 = a1 + v26;
  v28 = a2 + v26;
  _s10FitnessApp24HistoryViewActionContextVwxx_0((_QWORD *)(a1 + v26));
  v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
  return a1;
}

uint64_t sub_10027E29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027E2A8);
}

uint64_t sub_10027E2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 44) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10027E328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027E334);
}

uint64_t sub_10027E334(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 44) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_10027E3B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100631ED8;
    v4[2] = &unk_100631EF0;
    v4[3] = &unk_100631EF0;
    v4[4] = &unk_100631EF0;
    v4[5] = &unk_100631F08;
    v4[6] = &unk_100631EF0;
    v4[7] = &unk_100631F20;
    v4[8] = &unk_100631F20;
    swift_initStructMetadata(a1, 256, 9, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10027E448@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _BYTE *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  int *v18;
  _BYTE *v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _BYTE *, uint64_t);
  uint64_t result;
  _BYTE v23[12];
  int v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a5;
  v26 = a6;
  v24 = a3;
  v11 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v11);
  v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v23[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = (int *)type metadata accessor for CatalogTipCard(0);
  v19 = &a7[v18[5]];
  *(_OWORD *)v19 = xmmword_100623570;
  v19[16] = 3;
  sub_100021CC0(a1, (uint64_t)v13, (uint64_t *)&unk_10082E690);
  v20 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  if ((_DWORD)v20 == 1)
  {
    UUID.init()(v20);
    sub_10001BE90(a1, (uint64_t *)&unk_10082E690);
    sub_10001BE90((uint64_t)v13, (uint64_t *)&unk_10082E690);
    v21 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 32);
  }
  else
  {
    sub_10001BE90(a1, (uint64_t *)&unk_10082E690);
    v21 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 32);
    v21(v17, v13, v14);
  }
  v21(a7, v17, v14);
  a7[v18[6]] = a2 & 1;
  a7[v18[7]] = v24 & 1;
  a7[v18[8]] = a4 & 1;
  result = sub_10027F148(v25, (uint64_t)&a7[v18[9]]);
  *(_QWORD *)&a7[v18[10]] = v26;
  return result;
}

Swift::Int sub_10027E608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _OWORD v25[4];
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for CatalogTipSectionItem(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100824DE0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init()(v25);
  v8 = (int *)type metadata accessor for CatalogTipCard(0);
  v9 = v0 + v8[5];
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(unsigned __int8 *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, *(_BYTE *)(v9 + 16));
  sub_10054FFE4(v10, v11, v12);
  v14 = v13;
  String.hash(into:)(v25, v15, v13);
  swift_bridgeObjectRelease(v14);
  if (!v12 || v12 == 2)
  {
    Hasher._combine(_:)(v10);
  }
  else
  {
    if (v12 == 1)
    {
      String.hash(into:)(v25, v10, v11);
      v16 = v10;
      v17 = v11;
      v18 = 1;
    }
    else
    {
      v16 = v10;
      v17 = v11;
      v18 = v12;
    }
    sub_1000EB41C(v16, v17, v18);
  }
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + v8[6]));
  Hasher._combine(_:)(*(_BYTE *)(v1 + v8[7]));
  sub_100021CC0(v1 + v8[9], (uint64_t)v7, &qword_100824DE0);
  v19 = type metadata accessor for CatalogTipSection(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v7, 1, v19) == 1)
  {
    sub_10001BE90((uint64_t)v7, &qword_100824DE0);
    Hasher._combine(_:)(0);
  }
  else
  {
    sub_10004EEB0((uint64_t)&v7[*(int *)(v19 + 24)], (uint64_t)v4);
    sub_100011F54((uint64_t)v7, type metadata accessor for CatalogTipSection);
    v20 = &v4[*(int *)(v2 + 28)];
    v21 = *(_QWORD *)v20;
    v22 = *((_QWORD *)v20 + 1);
    swift_bridgeObjectRetain(v22);
    sub_100011F54((uint64_t)v4, type metadata accessor for CatalogTipSectionItem);
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v22);
    String.hash(into:)(v25, v21, v22);
    swift_bridgeObjectRelease_n(v22, 2);
  }
  v29 = v25[2];
  v30 = v25[3];
  v31 = v26;
  v27 = v25[0];
  v28 = v25[1];
  return Hasher.finalize()();
}

uint64_t sub_10027E890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  __int128 *v13;
  char v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;
  Swift::String v19;
  CHWorkoutDetailHeartRateTableViewCell *object;
  SEL v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  CHWorkoutDetailHeartRateTableViewCell *v32;
  uint64_t v33;
  uint64_t *v34;
  Swift::String v35;
  SEL v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  Swift::String v43;
  CHWorkoutDetailHeartRateTableViewCell *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  CHWorkoutDetailHeartRateTableViewCell *v49;
  Swift::String v50;
  SEL v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  char v64;
  __int128 v65;

  v1 = type metadata accessor for Artwork(0);
  v61 = *(_QWORD *)(v1 - 8);
  v62 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for CatalogTipSectionItem(0);
  __chkstk_darwin(v60);
  v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100047110(&qword_100824DE0);
  __chkstk_darwin(v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v59 - v10;
  *(_QWORD *)&v63 = 0;
  *((_QWORD *)&v63 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  v65 = v63;
  v12 = (int *)type metadata accessor for CatalogTipCard(0);
  v13 = (__int128 *)(v0 + v12[5]);
  v14 = *((_BYTE *)v13 + 16);
  v63 = *v13;
  v64 = v14;
  _print_unlocked<A, B>(_:_:)(&v63, &v65, &type metadata for CardType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v15._countAndFlagsBits = 58;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  LOBYTE(v63) = *(_BYTE *)(v0 + v12[6]);
  _print_unlocked<A, B>(_:_:)(&v63, &v65, &type metadata for CardSize, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v16._countAndFlagsBits = 58;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  v17 = type metadata accessor for UUID(0);
  v18 = sub_10027F100();
  v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v17, v18);
  object = (CHWorkoutDetailHeartRateTableViewCell *)v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(object, v21, v22, v23, v24, v25, v26, v27);
  v28._countAndFlagsBits = 540945696;
  v28._object = (void *)0xE400000000000000;
  String.append(_:)(v28);
  v29 = v0 + v12[9];
  sub_100021CC0(v29, (uint64_t)v11, &qword_100824DE0);
  v30 = type metadata accessor for CatalogTipSection(0);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48);
  if (v31(v11, 1, v30) == 1)
  {
    sub_10001BE90((uint64_t)v11, &qword_100824DE0);
    v32 = (CHWorkoutDetailHeartRateTableViewCell *)0xE300000000000000;
    v33 = 4271950;
  }
  else
  {
    v34 = (uint64_t *)&v11[*(int *)(v30 + 28)];
    v33 = *v34;
    v32 = (CHWorkoutDetailHeartRateTableViewCell *)v34[1];
    swift_bridgeObjectRetain(v32);
    sub_100011F54((uint64_t)v11, type metadata accessor for CatalogTipSection);
  }
  v35._countAndFlagsBits = v33;
  v35._object = v32;
  String.append(_:)(v35);
  swift_bridgeObjectRelease(v32, v36, v37, v38, v39, v40, v41, v42);
  v43._countAndFlagsBits = 8250;
  v43._object = (void *)0xE200000000000000;
  String.append(_:)(v43);
  sub_100021CC0(v29, (uint64_t)v8, &qword_100824DE0);
  if (v31(v8, 1, v30) == 1)
  {
    sub_10001BE90((uint64_t)v8, &qword_100824DE0);
    v44 = (CHWorkoutDetailHeartRateTableViewCell *)0xEA00000000006B72;
    v45 = 0x6F77747241206F4ELL;
  }
  else
  {
    sub_10004EEB0((uint64_t)&v8[*(int *)(v30 + 24)], (uint64_t)v5);
    sub_100011F54((uint64_t)v8, type metadata accessor for CatalogTipSection);
    v46 = v61;
    v47 = v62;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v3, &v5[*(int *)(v60 + 20)], v62);
    v48 = sub_100011F54((uint64_t)v5, type metadata accessor for CatalogTipSectionItem);
    v45 = Artwork.description.getter(v48);
    v44 = v49;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v3, v47);
  }
  v50._countAndFlagsBits = v45;
  v50._object = v44;
  String.append(_:)(v50);
  swift_bridgeObjectRelease(v44, v51, v52, v53, v54, v55, v56, v57);
  return v65;
}

uint64_t sub_10027EC1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v42 = a1;
  v43 = a2;
  v44 = a3;
  v4 = type metadata accessor for ScalarDictionary(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MetricClickElement(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110(&qword_100824DE0);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CatalogTipSectionItem(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v41 - v18;
  v20 = type metadata accessor for CatalogTipCard(0);
  sub_100021CC0(v3 + *(int *)(v20 + 36), (uint64_t)v13, &qword_100824DE0);
  v21 = type metadata accessor for CatalogTipSection(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v13, 1, v21) == 1)
  {
    sub_10001BE90((uint64_t)v13, &qword_100824DE0);
    v22 = type metadata accessor for ImpressionMetrics(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v44, 1, 1, v22);
  }
  else
  {
    sub_10004EEB0((uint64_t)&v13[*(int *)(v21 + 24)], (uint64_t)v16);
    sub_100011F54((uint64_t)v13, type metadata accessor for CatalogTipSection);
    sub_100026DEC((uint64_t)v16, (uint64_t)v19);
    v24 = &v19[*(int *)(v14 + 28)];
    v25 = *((_QWORD *)v24 + 1);
    v41 = *(_QWORD *)v24;
    v26 = v43;
    swift_bridgeObjectRetain(v43);
    v27 = swift_bridgeObjectRetain(v25);
    v28 = (void *)ShelfLockupAttributedTagStrings.title.getter(v27);
    v29 = objc_msgSend(v28, "string");

    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v32 = v31;

    v33 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for MetricClickElement.button(_:), v7);
    v34 = static MetricConstants.itemIdentifierType.getter(v33);
    v36 = v35;
    v37 = sub_100030A4C((uint64_t)_swiftEmptyArrayStorage);
    ScalarDictionary.init()();
    v40 = v37;
    v38 = v44;
    ImpressionMetrics.init(parentId:elementId:name:clickElement:index:idType:additionalFields:custom:)(v42, v26, v41, v25, v30, v32, v10, 0, v34, v36, v40, v6);
    sub_100011F54((uint64_t)v19, type metadata accessor for CatalogTipSectionItem);
    v39 = type metadata accessor for ImpressionMetrics(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 0, 1, v39);
  }
}

uint64_t type metadata accessor for CatalogTipCard(uint64_t a1)
{
  uint64_t result;

  result = qword_10082B0B0;
  if (!qword_10082B0B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CatalogTipCard);
  return result;
}

unint64_t sub_10027EF58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_10027EFBC(a1, a2, v5);
}

unint64_t sub_10027EFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    v11 = v10[1];
    if ((*v10 != a1 || v11 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      i = (i + 1) & v13;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v14 = (_QWORD *)(v9 + 16 * i);
        v15 = v14[1];
        if ((*v14 != a1 || v15 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0)
        {
          for (i = (i + 1) & v13; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
          {
            v17 = (_QWORD *)(v9 + 16 * i);
            v18 = v17[1];
            if (*v17 == a1 && v18 == a2)
              break;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

unint64_t sub_10027F100()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100821498;
  if (!qword_100821498)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&qword_100821498);
  }
  return result;
}

uint64_t sub_10027F148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_100824DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_10027F190(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  id v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t, __n128);
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t, __n128);
  __n128 v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  void (*v72)(void **, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v73;
  uint64_t v74;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  char *__dst;
  uint64_t v79;
  uint64_t v80;
  void **v81;
  void **v82;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    v12 = *((_QWORD *)v10 + 1);
    v13 = v10[16];
    sub_1000EB3F4(*(_QWORD *)v10, v12, v13);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    v9[16] = v13;
    v14 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    v15 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v16 = (void **)((char *)a1 + v15);
    v17 = (void **)((char *)a2 + v15);
    v18 = type metadata accessor for CatalogTipSection(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100047110(&qword_100824DE0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v79 = v19;
      v80 = v18;
      v22 = *v17;
      v23 = v17[1];
      *v16 = *v17;
      v16[1] = v23;
      v24 = *(int *)(v18 + 24);
      v81 = v17;
      v82 = v16;
      v25 = (char *)v16 + v24;
      v26 = (char *)v17 + v24;
      v27 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      v29 = v22;
      v30 = v23;
      v28(v25, v26, v27);
      v31 = (int *)type metadata accessor for CatalogTipSectionItem(0);
      v32 = v31[5];
      v33 = &v25[v32];
      v34 = &v26[v32];
      v35 = type metadata accessor for Artwork(0);
      v36 = *(_QWORD *)(v35 - 8);
      v76 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
      v76(v33, v34, v35);
      v37 = v31[6];
      v38 = &v25[v37];
      v39 = &v26[v37];
      v40 = *((_QWORD *)v39 + 1);
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *((_QWORD *)v38 + 1) = v40;
      v41 = v31[7];
      v42 = &v25[v41];
      v43 = &v26[v41];
      v44 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = v44;
      v45 = v31[8];
      v77 = v36;
      __dst = &v25[v45];
      v46 = &v26[v45];
      v47 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v36 + 48);
      swift_bridgeObjectRetain(v40);
      v48 = swift_bridgeObjectRetain(v44);
      if (v47(v46, 1, v35, v48))
      {
        v49 = sub_100047110((uint64_t *)&unk_1008283A0);
        memcpy(__dst, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        v76(__dst, v46, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(__dst, 0, 1, v35);
      }
      v50 = v31[9];
      v51 = &v25[v50];
      v52 = &v26[v50];
      v53 = *((_QWORD *)v52 + 1);
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *((_QWORD *)v51 + 1) = v53;
      v54 = v31[10];
      v55 = &v25[v54];
      v56 = &v26[v54];
      v57 = *((_QWORD *)v56 + 1);
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *((_QWORD *)v55 + 1) = v57;
      v58 = v31[11];
      v59 = &v25[v58];
      v60 = &v26[v58];
      v61 = *((_QWORD *)v60 + 1);
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *((_QWORD *)v59 + 1) = v61;
      v62 = v31[12];
      v63 = &v25[v62];
      v64 = &v26[v62];
      v65 = type metadata accessor for URL(0);
      v66 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v65 - 8) + 16);
      swift_bridgeObjectRetain(v53);
      swift_bridgeObjectRetain(v57);
      v67 = swift_bridgeObjectRetain(v61);
      v66(v63, v64, v65, v67);
      v68 = *(int *)(v80 + 28);
      v69 = (void **)((char *)v82 + v68);
      v70 = (void **)((char *)v81 + v68);
      v71 = v70[1];
      *v69 = *v70;
      v69[1] = v71;
      v72 = *(void (**)(void **, _QWORD, uint64_t, uint64_t, __n128))(v79 + 56);
      v73 = swift_bridgeObjectRetain(v71);
      v72(v82, 0, 1, v80, v73);
    }
    v74 = a3[10];
    v21 = *(_QWORD *)((char *)a2 + v74);
    *(_QWORD *)((char *)a1 + v74) = v21;
  }
  swift_retain(v21);
  return a1;
}

double sub_10027F4D4(uint64_t a1, int *a2)
{
  uint64_t v4;
  id *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  __n128 v14;
  char *v15;
  char *v16;
  uint64_t v17;
  double result;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_1000EB41C(*(_QWORD *)(a1 + a2[5]), *(_QWORD *)(a1 + a2[5] + 8), *(_BYTE *)(a1 + a2[5] + 16));
  v5 = (id *)(a1 + a2[9]);
  v6 = type metadata accessor for CatalogTipSection(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {

    v7 = (char *)v5 + *(int *)(v6 + 24);
    v8 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = (int *)type metadata accessor for CatalogTipSectionItem(0);
    v10 = &v7[v9[5]];
    v11 = type metadata accessor for Artwork(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, uint64_t))(v12 + 8);
    v13(v10, v11);
    swift_bridgeObjectRelease(*(_QWORD *)&v7[v9[6] + 8]);
    v14 = swift_bridgeObjectRelease(*(_QWORD *)&v7[v9[7] + 8]);
    v15 = &v7[v9[8]];
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48))(v15, 1, v11, v14))
      v13(v15, v11);
    swift_bridgeObjectRelease(*(_QWORD *)&v7[v9[9] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v7[v9[10] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v7[v9[11] + 8]);
    v16 = &v7[v9[12]];
    v17 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    swift_bridgeObjectRelease(*(id *)((char *)v5 + *(int *)(v6 + 28) + 8));
  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + a2[10])).n128_u64[0];
  return result;
}

uint64_t sub_10027F694(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  id v27;
  id v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t, __n128);
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t, __n128);
  __n128 v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  void (*v70)(void **, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  char *__dst;
  uint64_t v78;
  uint64_t v79;
  void **v80;
  void **v81;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v15 = (void **)(a1 + v14);
  v16 = (void **)(a2 + v14);
  v17 = type metadata accessor for CatalogTipSection(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_100047110(&qword_100824DE0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v78 = v18;
    v79 = v17;
    v20 = *v16;
    v21 = v16[1];
    *v15 = *v16;
    v15[1] = v21;
    v22 = *(int *)(v17 + 24);
    v80 = v16;
    v81 = v15;
    v23 = (char *)v15 + v22;
    v24 = (char *)v16 + v22;
    v25 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v27 = v20;
    v28 = v21;
    v26(v23, v24, v25);
    v29 = (int *)type metadata accessor for CatalogTipSectionItem(0);
    v30 = v29[5];
    v31 = &v23[v30];
    v32 = &v24[v30];
    v33 = type metadata accessor for Artwork(0);
    v34 = *(_QWORD *)(v33 - 8);
    v75 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    v75(v31, v32, v33);
    v35 = v29[6];
    v36 = &v23[v35];
    v37 = &v24[v35];
    v38 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v38;
    v39 = v29[7];
    v40 = &v23[v39];
    v41 = &v24[v39];
    v42 = *((_QWORD *)v41 + 1);
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *((_QWORD *)v40 + 1) = v42;
    v43 = v29[8];
    v76 = v34;
    __dst = &v23[v43];
    v44 = &v24[v43];
    v45 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v34 + 48);
    swift_bridgeObjectRetain(v38);
    v46 = swift_bridgeObjectRetain(v42);
    if (v45(v44, 1, v33, v46))
    {
      v47 = sub_100047110((uint64_t *)&unk_1008283A0);
      memcpy(__dst, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v75(__dst, v44, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(__dst, 0, 1, v33);
    }
    v48 = v29[9];
    v49 = &v23[v48];
    v50 = &v24[v48];
    v51 = *((_QWORD *)v50 + 1);
    *(_QWORD *)v49 = *(_QWORD *)v50;
    *((_QWORD *)v49 + 1) = v51;
    v52 = v29[10];
    v53 = &v23[v52];
    v54 = &v24[v52];
    v55 = *((_QWORD *)v54 + 1);
    *(_QWORD *)v53 = *(_QWORD *)v54;
    *((_QWORD *)v53 + 1) = v55;
    v56 = v29[11];
    v57 = &v23[v56];
    v58 = &v24[v56];
    v59 = *((_QWORD *)v58 + 1);
    *(_QWORD *)v57 = *(_QWORD *)v58;
    *((_QWORD *)v57 + 1) = v59;
    v60 = v29[12];
    v61 = &v23[v60];
    v62 = &v24[v60];
    v63 = type metadata accessor for URL(0);
    v64 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v63 - 8) + 16);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v55);
    v65 = swift_bridgeObjectRetain(v59);
    v64(v61, v62, v63, v65);
    v66 = *(int *)(v79 + 28);
    v67 = (void **)((char *)v81 + v66);
    v68 = (void **)((char *)v80 + v66);
    v69 = v68[1];
    *v67 = *v68;
    v67[1] = v69;
    v70 = *(void (**)(void **, _QWORD, uint64_t, uint64_t, __n128))(v78 + 56);
    v71 = swift_bridgeObjectRetain(v69);
    v70(v81, 0, 1, v79, v71);
  }
  v72 = a3[10];
  v73 = *(_QWORD *)(a2 + v72);
  *(_QWORD *)(a1 + v72) = v73;
  swift_retain(v73);
  return a1;
}

uint64_t sub_10027F9B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void **v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void **, uint64_t, uint64_t);
  int v22;
  void *v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  id v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t, __n128);
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  void *v56;
  id v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  uint64_t (*v80)(__n128);
  int v81;
  size_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void (*v100)(char *, char *, uint64_t, __n128);
  __n128 v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  void (*v106)(void **, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v136)(char *, char *, uint64_t);
  void (*v137)(char *, char *, uint64_t);
  void (**__src)(void *, _QWORD, uint64_t, uint64_t);
  char *__dst;
  char *__dsta;
  uint64_t v141;
  int *v142;
  void **v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void **v147;
  void **v148;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  v13 = *(_QWORD *)v8;
  v14 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  v15 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v12;
  sub_1000EB41C(v13, v14, v15);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = a3[9];
  v17 = (void **)(a1 + v16);
  v18 = (void **)(a2 + v16);
  v19 = type metadata accessor for CatalogTipSection(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v20 + 48);
  LODWORD(v11) = v21(v17, 1, v19);
  v22 = v21(v18, 1, v19);
  if (!(_DWORD)v11)
  {
    if (v22)
    {
      sub_100011F54((uint64_t)v17, type metadata accessor for CatalogTipSection);
      goto LABEL_7;
    }
    v52 = *v18;
    v53 = *v17;
    *v17 = *v18;
    v54 = v52;

    v55 = v18[1];
    v56 = v17[1];
    v17[1] = v55;
    v57 = v55;

    v146 = v19;
    v148 = v18;
    v58 = *(int *)(v19 + 24);
    v59 = (char *)v17 + v58;
    v60 = (char *)v18 + v58;
    v61 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 24))(v59, v60, v61);
    v62 = (int *)type metadata accessor for CatalogTipSectionItem(0);
    v63 = v62[5];
    v64 = &v59[v63];
    v65 = &v60[v63];
    v66 = type metadata accessor for Artwork(0);
    v144 = *(_QWORD *)(v66 - 8);
    v137 = *(void (**)(char *, char *, uint64_t))(v144 + 24);
    v137(v64, v65, v66);
    v67 = v62[6];
    v68 = &v59[v67];
    v69 = &v60[v67];
    *(_QWORD *)v68 = *(_QWORD *)v69;
    v70 = *((_QWORD *)v69 + 1);
    v71 = *((_QWORD *)v68 + 1);
    *((_QWORD *)v68 + 1) = v70;
    swift_bridgeObjectRetain(v70);
    swift_bridgeObjectRelease(v71);
    v72 = v62[7];
    v73 = &v59[v72];
    v74 = &v60[v72];
    *(_QWORD *)v73 = *(_QWORD *)v74;
    v75 = *((_QWORD *)v74 + 1);
    v76 = *((_QWORD *)v73 + 1);
    *((_QWORD *)v73 + 1) = v75;
    swift_bridgeObjectRetain(v75);
    v77 = swift_bridgeObjectRelease(v76);
    v142 = v62;
    v78 = v62[8];
    v79 = &v60[v78];
    v80 = *(uint64_t (**)(__n128))(v144 + 48);
    __dsta = &v59[v78];
    LODWORD(v76) = v80(v77);
    v81 = ((uint64_t (*)(char *, uint64_t, uint64_t))v80)(v79, 1, v66);
    if ((_DWORD)v76)
    {
      if (!v81)
      {
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(__dsta, v79, v66);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(__dsta, 0, 1, v66);
        goto LABEL_18;
      }
      v82 = *(_QWORD *)(*(_QWORD *)(sub_100047110((uint64_t *)&unk_1008283A0) - 8) + 64);
      v83 = __dsta;
    }
    else
    {
      if (!v81)
      {
        v137(__dsta, v79, v66);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v144 + 8))(__dsta, v66);
      v82 = *(_QWORD *)(*(_QWORD *)(sub_100047110((uint64_t *)&unk_1008283A0) - 8) + 64);
      v83 = __dsta;
    }
    memcpy(v83, v79, v82);
LABEL_18:
    v108 = v142[9];
    v109 = &v59[v108];
    v110 = &v60[v108];
    *(_QWORD *)v109 = *(_QWORD *)v110;
    v111 = *((_QWORD *)v110 + 1);
    v112 = *((_QWORD *)v109 + 1);
    *((_QWORD *)v109 + 1) = v111;
    swift_bridgeObjectRetain(v111);
    swift_bridgeObjectRelease(v112);
    v113 = v142[10];
    v114 = &v59[v113];
    v115 = &v60[v113];
    *(_QWORD *)v114 = *(_QWORD *)v115;
    v116 = *((_QWORD *)v115 + 1);
    v117 = *((_QWORD *)v114 + 1);
    *((_QWORD *)v114 + 1) = v116;
    swift_bridgeObjectRetain(v116);
    swift_bridgeObjectRelease(v117);
    v118 = v142[11];
    v119 = &v59[v118];
    v120 = &v60[v118];
    *(_QWORD *)v119 = *(_QWORD *)v120;
    v121 = *((_QWORD *)v120 + 1);
    v122 = *((_QWORD *)v119 + 1);
    *((_QWORD *)v119 + 1) = v121;
    swift_bridgeObjectRetain(v121);
    swift_bridgeObjectRelease(v122);
    v123 = v142[12];
    v124 = &v59[v123];
    v125 = &v60[v123];
    v126 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 24))(v124, v125, v126);
    v127 = *(int *)(v146 + 28);
    v128 = (void **)((char *)v17 + v127);
    v129 = (void **)((char *)v148 + v127);
    *v128 = *v129;
    v130 = v129[1];
    v131 = v128[1];
    v128[1] = v130;
    swift_bridgeObjectRetain(v130);
    swift_bridgeObjectRelease(v131);
    goto LABEL_19;
  }
  if (v22)
  {
LABEL_7:
    v51 = sub_100047110(&qword_100824DE0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_19;
  }
  v141 = v20;
  v143 = v17;
  v23 = *v18;
  *v17 = *v18;
  v24 = v18[1];
  v17[1] = v24;
  v145 = v19;
  v147 = v18;
  v25 = *(int *)(v19 + 24);
  v26 = (char *)v17 + v25;
  v27 = (char *)v18 + v25;
  v28 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
  v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  v30 = v23;
  v31 = v24;
  v29(v26, v27, v28);
  v32 = (int *)type metadata accessor for CatalogTipSectionItem(0);
  v33 = v32[5];
  v34 = &v26[v33];
  v35 = &v27[v33];
  v36 = type metadata accessor for Artwork(0);
  v37 = *(_QWORD **)(v36 - 8);
  v136 = (void (*)(char *, char *, uint64_t))v37[2];
  v136(v34, v35, v36);
  v38 = v32[6];
  v39 = &v26[v38];
  v40 = &v27[v38];
  *(_QWORD *)v39 = *(_QWORD *)v40;
  v41 = *((_QWORD *)v40 + 1);
  *((_QWORD *)v39 + 1) = v41;
  v42 = v32[7];
  v43 = &v26[v42];
  v44 = &v27[v42];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v45 = *((_QWORD *)v44 + 1);
  *((_QWORD *)v43 + 1) = v45;
  v46 = v32[8];
  __src = (void (**)(void *, _QWORD, uint64_t, uint64_t))v37;
  __dst = &v26[v46];
  v47 = &v27[v46];
  v48 = (unsigned int (*)(char *, uint64_t, uint64_t, __n128))v37[6];
  swift_bridgeObjectRetain(v41);
  v49 = swift_bridgeObjectRetain(v45);
  if (v48(v47, 1, v36, v49))
  {
    v50 = sub_100047110((uint64_t *)&unk_1008283A0);
    memcpy(__dst, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v136(__dst, v47, v36);
    __src[7](__dst, 0, 1, v36);
  }
  v84 = v32[9];
  v85 = &v26[v84];
  v86 = &v27[v84];
  *(_QWORD *)v85 = *(_QWORD *)v86;
  v87 = *((_QWORD *)v86 + 1);
  *((_QWORD *)v85 + 1) = v87;
  v88 = v32[10];
  v89 = &v26[v88];
  v90 = &v27[v88];
  *(_QWORD *)v89 = *(_QWORD *)v90;
  v91 = *((_QWORD *)v90 + 1);
  *((_QWORD *)v89 + 1) = v91;
  v92 = v32[11];
  v93 = &v26[v92];
  v94 = &v27[v92];
  *(_QWORD *)v93 = *(_QWORD *)v94;
  v95 = *((_QWORD *)v94 + 1);
  *((_QWORD *)v93 + 1) = v95;
  v96 = v32[12];
  v97 = &v26[v96];
  v98 = &v27[v96];
  v99 = type metadata accessor for URL(0);
  v100 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v99 - 8) + 16);
  swift_bridgeObjectRetain(v87);
  swift_bridgeObjectRetain(v91);
  v101 = swift_bridgeObjectRetain(v95);
  v100(v97, v98, v99, v101);
  v102 = *(int *)(v145 + 28);
  v103 = (void **)((char *)v143 + v102);
  v104 = (void **)((char *)v147 + v102);
  *v103 = *v104;
  v105 = v104[1];
  v103[1] = v105;
  v106 = *(void (**)(void **, _QWORD, uint64_t, uint64_t, __n128))(v141 + 56);
  v107 = swift_bridgeObjectRetain(v105);
  v106(v143, 0, 1, v145, v107);
LABEL_19:
  v132 = a3[10];
  v133 = *(_QWORD *)(a2 + v132);
  v134 = *(_QWORD *)(a1 + v132);
  *(_QWORD *)(a1 + v132) = v133;
  swift_retain(v133);
  swift_release(v134);
  return a1;
}

uint64_t sub_100280014(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  char *__dst;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[9];
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = type metadata accessor for CatalogTipSection(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100047110(&qword_100824DE0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v38 = v16;
    v39 = v14;
    *v13 = *v14;
    v18 = *(int *)(v15 + 24);
    v40 = v13;
    v19 = (char *)v13 + v18;
    v20 = (char *)v14 + v18;
    v21 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    v22 = (int *)type metadata accessor for CatalogTipSectionItem(0);
    v23 = v22[5];
    v24 = &v19[v23];
    v25 = &v20[v23];
    v26 = type metadata accessor for Artwork(0);
    v27 = v25;
    v28 = *(_QWORD *)(v26 - 8);
    v37 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v37(v24, v27, v26);
    *(_OWORD *)&v19[v22[6]] = *(_OWORD *)&v20[v22[6]];
    *(_OWORD *)&v19[v22[7]] = *(_OWORD *)&v20[v22[7]];
    v29 = v22[8];
    __dst = &v19[v29];
    v30 = &v20[v29];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(&v20[v29], 1, v26))
    {
      v31 = sub_100047110((uint64_t *)&unk_1008283A0);
      memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v37(__dst, v30, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v26);
    }
    *(_OWORD *)&v19[v22[9]] = *(_OWORD *)&v20[v22[9]];
    *(_OWORD *)&v19[v22[10]] = *(_OWORD *)&v20[v22[10]];
    *(_OWORD *)&v19[v22[11]] = *(_OWORD *)&v20[v22[11]];
    v32 = v22[12];
    v33 = &v19[v32];
    v34 = &v20[v32];
    v35 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
    *(_OWORD *)((char *)v40 + *(int *)(v15 + 28)) = *(_OWORD *)((char *)v39 + *(int *)(v15 + 28));
    (*(void (**)(void))(v38 + 56))();
  }
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1002802A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void **, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  uint64_t (*v65)(__n128);
  int v66;
  size_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v104)(char *, char *, uint64_t);
  char *v105;
  void (*__src)(char *, char *, uint64_t);
  char *__dst;
  int *__dsta;
  uint64_t v109;
  uint64_t v110;
  void **v111;
  void **v112;
  void **v113;
  void **v114;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)v8;
  v12 = *(_QWORD *)(v8 + 8);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v13 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v10;
  sub_1000EB41C(v11, v12, v13);
  v14 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = (void **)(a1 + v15);
  v17 = (void **)(a2 + v15);
  v18 = type metadata accessor for CatalogTipSection(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_100011F54((uint64_t)v16, type metadata accessor for CatalogTipSection);
      goto LABEL_7;
    }
    v38 = *v16;
    *v16 = *v17;

    v39 = v16[1];
    v16[1] = v17[1];

    v110 = v18;
    v112 = v17;
    v40 = *(int *)(v18 + 24);
    v114 = v16;
    v41 = (char *)v16 + v40;
    v42 = (char *)v17 + v40;
    v43 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
    v44 = (int *)type metadata accessor for CatalogTipSectionItem(0);
    v45 = v44[5];
    v46 = &v41[v45];
    v47 = &v42[v45];
    v48 = type metadata accessor for Artwork(0);
    v49 = *(_QWORD *)(v48 - 8);
    v104 = *(void (**)(char *, char *, uint64_t))(v49 + 40);
    v104(v46, v47, v48);
    v50 = v44[6];
    v51 = &v41[v50];
    v52 = &v42[v50];
    v54 = *(_QWORD *)v52;
    v53 = *((_QWORD *)v52 + 1);
    v55 = *((_QWORD *)v51 + 1);
    *(_QWORD *)v51 = v54;
    *((_QWORD *)v51 + 1) = v53;
    swift_bridgeObjectRelease(v55);
    v56 = v44[7];
    v57 = &v41[v56];
    v58 = &v42[v56];
    v60 = *(_QWORD *)v58;
    v59 = *((_QWORD *)v58 + 1);
    v61 = *((_QWORD *)v57 + 1);
    *(_QWORD *)v57 = v60;
    *((_QWORD *)v57 + 1) = v59;
    v62 = swift_bridgeObjectRelease(v61);
    __dsta = v44;
    v63 = v44[8];
    v64 = &v42[v63];
    v65 = *(uint64_t (**)(__n128))(v49 + 48);
    v105 = &v41[v63];
    LODWORD(v46) = v65(v62);
    v66 = ((uint64_t (*)(char *, uint64_t, uint64_t))v65)(v64, 1, v48);
    if ((_DWORD)v46)
    {
      if (!v66)
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v105, v64, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v105, 0, 1, v48);
        goto LABEL_18;
      }
      v67 = *(_QWORD *)(*(_QWORD *)(sub_100047110((uint64_t *)&unk_1008283A0) - 8) + 64);
      v68 = v105;
    }
    else
    {
      if (!v66)
      {
        v104(v105, v64, v48);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v105, v48);
      v67 = *(_QWORD *)(*(_QWORD *)(sub_100047110((uint64_t *)&unk_1008283A0) - 8) + 64);
      v68 = v105;
    }
    memcpy(v68, v64, v67);
LABEL_18:
    v73 = __dsta[9];
    v74 = &v41[v73];
    v75 = &v42[v73];
    v77 = *(_QWORD *)v75;
    v76 = *((_QWORD *)v75 + 1);
    v78 = *((_QWORD *)v74 + 1);
    *(_QWORD *)v74 = v77;
    *((_QWORD *)v74 + 1) = v76;
    swift_bridgeObjectRelease(v78);
    v79 = __dsta[10];
    v80 = &v41[v79];
    v81 = &v42[v79];
    v83 = *(_QWORD *)v81;
    v82 = *((_QWORD *)v81 + 1);
    v84 = *((_QWORD *)v80 + 1);
    *(_QWORD *)v80 = v83;
    *((_QWORD *)v80 + 1) = v82;
    swift_bridgeObjectRelease(v84);
    v85 = __dsta[11];
    v86 = &v41[v85];
    v87 = &v42[v85];
    v89 = *(_QWORD *)v87;
    v88 = *((_QWORD *)v87 + 1);
    v90 = *((_QWORD *)v86 + 1);
    *(_QWORD *)v86 = v89;
    *((_QWORD *)v86 + 1) = v88;
    swift_bridgeObjectRelease(v90);
    v91 = __dsta[12];
    v92 = &v41[v91];
    v93 = &v42[v91];
    v94 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 40))(v92, v93, v94);
    v95 = *(int *)(v110 + 28);
    v96 = (void **)((char *)v114 + v95);
    v97 = (uint64_t *)((char *)v112 + v95);
    v99 = *v97;
    v98 = v97[1];
    v100 = v96[1];
    *v96 = v99;
    v96[1] = v98;
    swift_bridgeObjectRelease(v100);
    goto LABEL_19;
  }
  if (v22)
  {
LABEL_7:
    v37 = sub_100047110(&qword_100824DE0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v109 = v18;
  v111 = v17;
  v23 = *(int *)(v18 + 24);
  v113 = v16;
  v24 = (char *)v16 + v23;
  v25 = (char *)v17 + v23;
  v26 = type metadata accessor for ShelfLockupAttributedTagStrings(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = (int *)type metadata accessor for CatalogTipSectionItem(0);
  v28 = v27[5];
  v29 = &v24[v28];
  v30 = &v25[v28];
  v31 = type metadata accessor for Artwork(0);
  v32 = v30;
  v33 = *(_QWORD *)(v31 - 8);
  __src = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  __src(v29, v32, v31);
  *(_OWORD *)&v24[v27[6]] = *(_OWORD *)&v25[v27[6]];
  *(_OWORD *)&v24[v27[7]] = *(_OWORD *)&v25[v27[7]];
  v34 = v27[8];
  __dst = &v24[v34];
  v35 = &v25[v34];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(&v25[v34], 1, v31))
  {
    v36 = sub_100047110((uint64_t *)&unk_1008283A0);
    memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    __src(__dst, v35, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v31);
  }
  *(_OWORD *)&v24[v27[9]] = *(_OWORD *)&v25[v27[9]];
  *(_OWORD *)&v24[v27[10]] = *(_OWORD *)&v25[v27[10]];
  *(_OWORD *)&v24[v27[11]] = *(_OWORD *)&v25[v27[11]];
  v69 = v27[12];
  v70 = &v24[v69];
  v71 = &v25[v69];
  v72 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v70, v71, v72);
  *(_OWORD *)((char *)v113 + *(int *)(v109 + 28)) = *(_OWORD *)((char *)v111 + *(int *)(v109 + 28));
  (*(void (**)(void))(v19 + 56))();
LABEL_19:
  v101 = a3[10];
  v102 = *(_QWORD *)(a1 + v101);
  *(_QWORD *)(a1 + v101) = *(_QWORD *)(a2 + v101);
  swift_release(v102);
  return a1;
}

uint64_t sub_1002807C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002807D0);
}

uint64_t sub_1002807D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100047110(&qword_100824DE0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 40));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_10028087C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100280888);
}

uint64_t sub_100280888(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_100047110(&qword_100824DE0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  return result;
}

void sub_100280930(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_100631F68;
    v6[2] = &unk_100631F80;
    v6[3] = &unk_100631F80;
    v6[4] = &unk_100631F80;
    sub_10004F408(319);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = (char *)&value witness table for Builtin.NativeObject + 64;
      swift_initStructMetadata(a1, 256, 7, v6, a1 + 16);
    }
  }
}

char *sub_1002809D8(char *a1, char **a2, uint64_t a3)
{
  char *v4;
  int v5;
  char *v6;
  char v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  int *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char **v42;
  char *v43;
  char *v44;
  id v45;
  uint64_t v47;
  char *v48;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = &v44[(v5 + 16) & ~(unint64_t)v5];
  }
  else
  {
    v6 = *a2;
    v7 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    a1[8] = v7;
    v8 = (int *)type metadata accessor for ActivitySharingHighlight(0);
    v9 = v8[5];
    v10 = &v4[v9];
    v11 = (uint64_t)a2 + v9;
    v12 = type metadata accessor for UUID(0);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14 = v6;
    v13(v10, v11, v12);
    v15 = v8[6];
    v16 = &v4[v15];
    v17 = (uint64_t)a2 + v15;
    v18 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = v8[7];
    v20 = *(char **)((char *)a2 + v19);
    *(_QWORD *)&v4[v19] = v20;
    *(_QWORD *)&v4[v8[8]] = *(char **)((char *)a2 + v8[8]);
    v21 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
    v22 = v21[5];
    v23 = *(char **)((char *)a2 + v22);
    *(_QWORD *)&v4[v22] = v23;
    v24 = v21[6];
    v25 = *(char **)((char *)a2 + v24);
    *(_QWORD *)&v4[v24] = v25;
    v26 = v21[7];
    v27 = *(char **)((char *)a2 + v26);
    *(_QWORD *)&v4[v26] = v27;
    v28 = v21[8];
    v29 = *(char **)((char *)a2 + v28);
    *(_QWORD *)&v4[v28] = v29;
    v4[v21[9]] = *((_BYTE *)a2 + v21[9]);
    v30 = v21[10];
    v47 = (uint64_t)a2 + v30;
    v48 = &v4[v30];
    v31 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
    v32 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    v33 = v20;
    v34 = v23;
    v35 = v25;
    v36 = v27;
    v37 = v29;
    v32(v48, v47, v31);
    v38 = v21[11];
    v39 = *(char **)((char *)a2 + v38);
    *(_QWORD *)&v4[v38] = v39;
    v40 = *(int *)(a3 + 20);
    v41 = &v4[v40];
    v42 = (char **)((char *)a2 + v40);
    v44 = *v42;
    v43 = v42[1];
    *(_QWORD *)v41 = v44;
    *((_QWORD *)v41 + 1) = v43;
    v45 = v39;
  }
  swift_retain(v44);
  return v4;
}

double sub_100280BA0(id *a1, uint64_t a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int *v9;
  char *v10;
  uint64_t v11;
  double result;

  v4 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v5 = (char *)a1 + v4[5];
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (char *)a1 + v4[6];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);

  v9 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v10 = (char *)a1 + v9[10];
  v11 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);

  *(_QWORD *)&result = swift_release(*(id *)((char *)a1 + *(int *)(a2 + 20))).n128_u64[0];
  return result;
}

uint64_t sub_100280CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  char v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  int *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v46;
  uint64_t v47;

  v5 = *(void **)a2;
  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  v7 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for UUID(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v5;
  v12(v9, v10, v11);
  v14 = v7[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  v18 = v7[7];
  v19 = *(void **)(a2 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
  v20 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v21 = v20[5];
  v22 = *(void **)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v22;
  v23 = v20[6];
  v24 = *(void **)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v24;
  v25 = v20[7];
  v26 = *(void **)(a2 + v25);
  *(_QWORD *)(a1 + v25) = v26;
  v27 = v20[8];
  v28 = *(void **)(a2 + v27);
  *(_QWORD *)(a1 + v27) = v28;
  *(_BYTE *)(a1 + v20[9]) = *(_BYTE *)(a2 + v20[9]);
  v29 = v20[10];
  v46 = a2 + v29;
  v47 = a1 + v29;
  v30 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
  v32 = v19;
  v33 = v22;
  v34 = v24;
  v35 = v26;
  v36 = v28;
  v31(v47, v46, v30);
  v37 = v20[11];
  v38 = *(void **)(a2 + v37);
  *(_QWORD *)(a1 + v37) = v38;
  v39 = *(int *)(a3 + 20);
  v40 = (_QWORD *)(a1 + v39);
  v41 = (uint64_t *)(a2 + v39);
  v43 = *v41;
  v42 = v41[1];
  *v40 = v43;
  v40[1] = v42;
  v44 = v38;
  swift_retain(v43);
  return a1;
}

uint64_t sub_100280E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  char v7;
  void *v8;
  id v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  int *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;

  v6 = *(void **)a2;
  v7 = *(_BYTE *)(a2 + 8);
  v8 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v7;
  v9 = v6;

  v10 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v11 = v10[5];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v10[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = v10[7];
  v20 = *(void **)(a2 + v19);
  v21 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  v22 = v20;

  *(_QWORD *)(a1 + v10[8]) = *(_QWORD *)(a2 + v10[8]);
  v23 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v24 = v23[5];
  v25 = *(void **)(a2 + v24);
  v26 = *(void **)(a1 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  v27 = v25;

  v28 = v23[6];
  v29 = *(void **)(a2 + v28);
  v30 = *(void **)(a1 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v31 = v29;

  v32 = v23[7];
  v33 = *(void **)(a2 + v32);
  v34 = *(void **)(a1 + v32);
  *(_QWORD *)(a1 + v32) = v33;
  v35 = v33;

  v36 = v23[8];
  v37 = *(void **)(a2 + v36);
  v38 = *(void **)(a1 + v36);
  *(_QWORD *)(a1 + v36) = v37;
  v39 = v37;

  *(_BYTE *)(a1 + v23[9]) = *(_BYTE *)(a2 + v23[9]);
  v40 = v23[10];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
  v44 = v23[11];
  v45 = *(void **)(a2 + v44);
  v46 = *(void **)(a1 + v44);
  *(_QWORD *)(a1 + v44) = v45;
  v47 = v45;

  v48 = *(int *)(a3 + 20);
  v49 = a1 + v48;
  v50 = (uint64_t *)(a2 + v48);
  v51 = *(_QWORD *)(a1 + v48);
  v52 = *v50;
  *(_QWORD *)(a1 + v48) = *v50;
  swift_retain(v52);
  swift_release(v51);
  *(_QWORD *)(v49 + 8) = v50[1];
  return a1;
}

uint64_t sub_100281008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v7 = v6[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = v6[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
  *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
  v15 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  *(_QWORD *)(a1 + v15[5]) = *(_QWORD *)(a2 + v15[5]);
  *(_QWORD *)(a1 + v15[6]) = *(_QWORD *)(a2 + v15[6]);
  *(_QWORD *)(a1 + v15[7]) = *(_QWORD *)(a2 + v15[7]);
  *(_QWORD *)(a1 + v15[8]) = *(_QWORD *)(a2 + v15[8]);
  *(_BYTE *)(a1 + v15[9]) = *(_BYTE *)(a2 + v15[9]);
  v16 = v15[10];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  *(_QWORD *)(a1 + v15[11]) = *(_QWORD *)(a2 + v15[11]);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100281158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  void *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;

  v8 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[7];
  v18 = *(void **)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);

  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  v19 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v20 = v19[5];
  v21 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);

  v22 = v19[6];
  v23 = *(void **)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);

  v24 = v19[7];
  v25 = *(void **)(a1 + v24);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);

  v26 = v19[8];
  v27 = *(void **)(a1 + v26);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);

  *(_BYTE *)(a1 + v19[9]) = *(_BYTE *)(a2 + v19[9]);
  v28 = v19[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  v32 = v19[11];
  v33 = *(void **)(a1 + v32);
  *(_QWORD *)(a1 + v32) = *(_QWORD *)(a2 + v32);

  v34 = *(int *)(a3 + 20);
  v35 = a1 + v34;
  v36 = (_QWORD *)(a2 + v34);
  v37 = *(_QWORD *)(a1 + v34);
  *(_QWORD *)(a1 + v34) = *v36;
  swift_release(v37);
  *(_QWORD *)(v35 + 8) = v36[1];
  return a1;
}

uint64_t sub_1002812F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100281304);
}

uint64_t sub_100281308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100281314);
}

uint64_t type metadata accessor for ActivitySharingHighlightViewWrapper(uint64_t a1)
{
  return sub_100024334(a1, qword_10082B168, (uint64_t)&nominal type descriptor for ActivitySharingHighlightViewWrapper);
}

uint64_t sub_100281330(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B1D20, 1);
}

uint64_t sub_100281340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v27;
  _OWORD v28[11];
  _OWORD v29[2];
  _BYTE v30[209];
  char v31;
  __int128 v32;
  _BYTE v33[210];
  _QWORD v34[2];
  char v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49;

  v4 = sub_100047110(&qword_10082B2C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - v8;
  *(_QWORD *)v9 = static VerticalAlignment.center.getter(v10);
  *((_QWORD *)v9 + 1) = 0x4024000000000000;
  v9[16] = 0;
  v11 = sub_100047110(&qword_10082B2C8);
  v12 = sub_1002816F8(a1, (uint64_t)&v9[*(int *)(v11 + 44)]);
  v17 = static HorizontalAlignment.center.getter(v12, v13, v14, v15, v16);
  sub_100281DBC((uint64_t)v28);
  *(_OWORD *)&v30[151] = v28[9];
  *(_OWORD *)&v30[167] = v28[10];
  *(_OWORD *)&v30[183] = v29[0];
  *(_OWORD *)&v30[193] = *(_OWORD *)((char *)v29 + 10);
  *(_OWORD *)&v30[87] = v28[5];
  *(_OWORD *)&v30[103] = v28[6];
  *(_OWORD *)&v30[119] = v28[7];
  *(_OWORD *)&v30[135] = v28[8];
  *(_OWORD *)&v30[23] = v28[1];
  *(_OWORD *)&v30[39] = v28[2];
  *(_OWORD *)&v30[55] = v28[3];
  *(_OWORD *)&v30[71] = v28[4];
  v31 = 1;
  *(_OWORD *)&v30[7] = v28[0];
  sub_100021CC0((uint64_t)v9, (uint64_t)v6, &qword_10082B2C0);
  sub_100021CC0((uint64_t)v6, a2, &qword_10082B2C0);
  v18 = a2 + *(int *)(sub_100047110(&qword_10082B2D0) + 48);
  v32 = (unint64_t)v17;
  v33[0] = 1;
  *(_OWORD *)&v33[161] = *(_OWORD *)&v30[160];
  *(_OWORD *)&v33[177] = *(_OWORD *)&v30[176];
  *(_OWORD *)&v33[193] = *(_OWORD *)&v30[192];
  v33[209] = v30[208];
  *(_OWORD *)&v33[97] = *(_OWORD *)&v30[96];
  *(_OWORD *)&v33[113] = *(_OWORD *)&v30[112];
  *(_OWORD *)&v33[129] = *(_OWORD *)&v30[128];
  *(_OWORD *)&v33[145] = *(_OWORD *)&v30[144];
  *(_OWORD *)&v33[33] = *(_OWORD *)&v30[32];
  *(_OWORD *)&v33[49] = *(_OWORD *)&v30[48];
  *(_OWORD *)&v33[65] = *(_OWORD *)&v30[64];
  *(_OWORD *)&v33[81] = *(_OWORD *)&v30[80];
  *(_OWORD *)&v33[17] = *(_OWORD *)&v30[16];
  *(_OWORD *)&v33[1] = *(_OWORD *)v30;
  v19 = *(_OWORD *)&v33[192];
  *(_OWORD *)(v18 + 192) = *(_OWORD *)&v33[176];
  *(_OWORD *)(v18 + 208) = v19;
  *(_WORD *)(v18 + 224) = *(_WORD *)&v33[208];
  v20 = *(_OWORD *)&v33[128];
  *(_OWORD *)(v18 + 128) = *(_OWORD *)&v33[112];
  *(_OWORD *)(v18 + 144) = v20;
  v21 = *(_OWORD *)&v33[160];
  *(_OWORD *)(v18 + 160) = *(_OWORD *)&v33[144];
  *(_OWORD *)(v18 + 176) = v21;
  v22 = *(_OWORD *)&v33[64];
  *(_OWORD *)(v18 + 64) = *(_OWORD *)&v33[48];
  *(_OWORD *)(v18 + 80) = v22;
  v23 = *(_OWORD *)&v33[96];
  *(_OWORD *)(v18 + 96) = *(_OWORD *)&v33[80];
  *(_OWORD *)(v18 + 112) = v23;
  v24 = *(_OWORD *)v33;
  *(_OWORD *)v18 = v32;
  *(_OWORD *)(v18 + 16) = v24;
  v25 = *(_OWORD *)&v33[32];
  *(_OWORD *)(v18 + 32) = *(_OWORD *)&v33[16];
  *(_OWORD *)(v18 + 48) = v25;
  sub_100283EDC((uint64_t)&v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100283DC8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, __int16))sub_100283E28);
  sub_10001BE90((uint64_t)v9, &qword_10082B2C0);
  v46 = *(_OWORD *)&v30[160];
  v47 = *(_OWORD *)&v30[176];
  v48 = *(_OWORD *)&v30[192];
  v42 = *(_OWORD *)&v30[96];
  v43 = *(_OWORD *)&v30[112];
  v44 = *(_OWORD *)&v30[128];
  v45 = *(_OWORD *)&v30[144];
  v38 = *(_OWORD *)&v30[32];
  v39 = *(_OWORD *)&v30[48];
  v40 = *(_OWORD *)&v30[64];
  v41 = *(_OWORD *)&v30[80];
  v36 = *(_OWORD *)v30;
  v34[0] = v17;
  v34[1] = 0;
  v35 = 1;
  v49 = v30[208];
  v37 = *(_OWORD *)&v30[16];
  sub_100283EDC((uint64_t)v34, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100283FC0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, __int16))sub_100284018);
  return sub_10001BE90((uint64_t)v6, &qword_10082B2C0);
}

uint64_t sub_1002816F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  _OWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  char *v82;
  int v83;
  int v84;
  int v85;
  char *v86;
  uint64_t v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  _QWORD v101[5];
  unsigned __int8 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned __int8 v109;
  unsigned __int8 v110;
  unsigned __int8 v111;
  unsigned __int8 v112;
  unsigned __int8 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  char v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  _OWORD v130[2];
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  double v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  _QWORD v148[2];
  char v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  char v158;
  double v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;

  v87 = a2;
  v3 = type metadata accessor for ActivitySharingHighlight(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ActivitySharingAvatarView(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100047110(&qword_10082B2D8);
  __chkstk_darwin(v9);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v73 - v13;
  sub_10004F8C8(a1, (uint64_t)v8, type metadata accessor for ActivitySharingHighlightViewModel);
  v15 = *(int *)(v6 + 20);
  *(_QWORD *)&v123 = 0;
  v16 = sub_100047110(&qword_100827568);
  v17 = State.init(wrappedValue:)(&v131, &v123, v16);
  *(_OWORD *)&v8[v15] = v131;
  LOBYTE(v15) = static Edge.Set.top.getter(v17);
  v18 = EdgeInsets.init(_all:)(2.0);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  sub_10004F8C8((uint64_t)v8, (uint64_t)v11, type metadata accessor for ActivitySharingAvatarView);
  v25 = &v11[*(int *)(v9 + 36)];
  *v25 = v15;
  *((double *)v25 + 1) = v18;
  *((_QWORD *)v25 + 2) = v20;
  *((_QWORD *)v25 + 3) = v22;
  *((_QWORD *)v25 + 4) = v24;
  v25[40] = 0;
  sub_100011F54((uint64_t)v8, type metadata accessor for ActivitySharingAvatarView);
  v26 = (uint64_t)v14;
  v82 = v14;
  v27 = sub_100284138((uint64_t)v11, (uint64_t)v14);
  v93 = static HorizontalAlignment.leading.getter(v27);
  sub_100281CD4((uint64_t)&v131);
  LOBYTE(v15) = v132;
  v97 = v131;
  v98 = v133;
  v96 = v134;
  v94 = *((_QWORD *)&v131 + 1);
  v95 = v135;
  LOBYTE(v14) = v136;
  v100 = v137;
  v99 = static Edge.Set.top.getter(v28);
  v29 = EdgeInsets.init(_all:)(0.0);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v112 = 0;
  v111 = v15;
  v110 = v14;
  v109 = 0;
  sub_10004F8C8(a1, (uint64_t)v5, type metadata accessor for ActivitySharingHighlight);
  v36 = type metadata accessor for ActivitySharingReplyCoordinator(0);
  swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
  v37 = sub_1000D7480((uint64_t)v5, 1);
  v38 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ActivitySharingHighlightView(0) + 20));
  v39 = *v38;
  v40 = v38[1];
  sub_10003AFE0(*v38, v40);
  sub_10051D2CC(v37, v39, v40, (uint64_t)v101);
  v41 = v101[0];
  v42 = v101[1];
  v78 = v101[3];
  v79 = v101[2];
  v77 = v101[4];
  v76 = v102;
  v74 = v104;
  v75 = v103;
  v80 = v106;
  v91 = v107;
  v92 = v105;
  v90 = v108;
  v89 = static Edge.Set.top.getter(v43);
  v44 = EdgeInsets.init(_all:)(2.0);
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v113 = 0;
  v86 = v11;
  sub_100021CC0(v26, (uint64_t)v11, &qword_10082B2D8);
  LOBYTE(v26) = v112;
  LOBYTE(v14) = v111;
  v83 = v112;
  v84 = v111;
  LOBYTE(v39) = v110;
  v85 = v110;
  v88 = v113;
  LODWORD(v37) = v109;
  v51 = v87;
  sub_100021CC0((uint64_t)v11, v87, &qword_10082B2D8);
  v52 = (int *)sub_100047110(&qword_10082B2E0);
  v53 = v51 + v52[12];
  *(_QWORD *)&v114 = v93;
  *((_QWORD *)&v114 + 1) = 0x4000000000000000;
  LOBYTE(v115) = v26;
  *((_QWORD *)&v115 + 1) = v97;
  *(_QWORD *)&v116 = v94;
  BYTE8(v116) = (_BYTE)v14;
  *(_QWORD *)&v117 = v98;
  *((_QWORD *)&v117 + 1) = v96;
  *(_QWORD *)&v118 = v95;
  BYTE8(v118) = v39;
  *(_QWORD *)&v119 = v100;
  BYTE8(v119) = v99;
  *(double *)&v120 = v29;
  *((_QWORD *)&v120 + 1) = v31;
  *(_QWORD *)&v121 = v33;
  *((_QWORD *)&v121 + 1) = v35;
  v81 = v37;
  v122 = v37;
  *(_BYTE *)(v53 + 128) = v37;
  v54 = v117;
  *(_OWORD *)(v53 + 32) = v116;
  *(_OWORD *)(v53 + 48) = v54;
  v55 = v121;
  *(_OWORD *)(v53 + 96) = v120;
  *(_OWORD *)(v53 + 112) = v55;
  v56 = v119;
  *(_OWORD *)(v53 + 64) = v118;
  *(_OWORD *)(v53 + 80) = v56;
  v57 = v115;
  *(_OWORD *)v53 = v114;
  *(_OWORD *)(v53 + 16) = v57;
  v58 = v51 + v52[16];
  *(_QWORD *)v58 = 0;
  *(_BYTE *)(v58 + 8) = 0;
  v59 = (_OWORD *)(v51 + v52[20]);
  v60 = v41;
  *(_QWORD *)&v123 = v41;
  *((_QWORD *)&v123 + 1) = v42;
  v61 = v42;
  v63 = v78;
  v62 = v79;
  *(_QWORD *)&v124 = v79;
  *((_QWORD *)&v124 + 1) = v78;
  v64 = v77;
  *(_QWORD *)&v125 = v77;
  LOBYTE(v41) = v76;
  BYTE8(v125) = v76;
  v65 = v74;
  v66 = v75;
  *(_QWORD *)&v126 = v75;
  *((_QWORD *)&v126 + 1) = v74;
  *(_QWORD *)&v127 = v92;
  v67 = v80;
  *((_QWORD *)&v127 + 1) = v80;
  *(_QWORD *)&v128 = v91;
  *((_QWORD *)&v128 + 1) = v90;
  LOBYTE(v129) = v89;
  *((double *)&v129 + 1) = v44;
  *(_QWORD *)&v130[0] = v46;
  *((_QWORD *)&v130[0] + 1) = v48;
  *(_QWORD *)&v130[1] = v50;
  BYTE8(v130[1]) = v88;
  v68 = v124;
  *v59 = v123;
  v59[1] = v68;
  v69 = v126;
  v59[2] = v125;
  v59[3] = v69;
  *(_OWORD *)((char *)v59 + 121) = *(_OWORD *)((char *)v130 + 9);
  v70 = v130[0];
  v59[6] = v129;
  v59[7] = v70;
  v71 = v128;
  v59[4] = v127;
  v59[5] = v71;
  sub_100284180((uint64_t)&v114);
  sub_1002841F0(&v123);
  sub_10001BE90((uint64_t)v82, &qword_10082B2D8);
  *(_QWORD *)&v131 = v60;
  *((_QWORD *)&v131 + 1) = v61;
  v132 = v62;
  v133 = v63;
  v134 = v64;
  LOBYTE(v135) = v41;
  v136 = v66;
  v137 = v65;
  v138 = v92;
  v139 = v67;
  v140 = v91;
  v141 = v90;
  v142 = v89;
  v143 = v44;
  v144 = v46;
  v145 = v48;
  v146 = v50;
  v147 = v88;
  sub_100284274(&v131);
  v148[0] = v93;
  v148[1] = 0x4000000000000000;
  v149 = v83;
  v150 = v97;
  v151 = v94;
  v152 = v84;
  v153 = v98;
  v154 = v96;
  v155 = v95;
  v156 = v85;
  v157 = v100;
  v158 = v99;
  v159 = v29;
  v160 = v31;
  v161 = v33;
  v162 = v35;
  v163 = v81;
  sub_1002842F8((uint64_t)v148);
  return sub_10001BE90((uint64_t)v86, &qword_10082B2D8);
}

double sub_100281CD4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_10026FE48((uint64_t)&v11);
  v2 = v11;
  v3 = v12;
  v4 = v13;
  v5 = v14;
  sub_1002701D8(&v11);
  v6 = v11;
  v7 = v12;
  v8 = v13;
  v9 = v14;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  sub_1000E439C(v2, v3, v4);
  swift_bridgeObjectRetain(v5);
  sub_1000E439C(v6, v7, v8);
  swift_bridgeObjectRetain(v9);
  sub_1000E4458(v6, v7, v8);
  swift_bridgeObjectRelease(v9);
  sub_1000E4458(v2, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

double sub_100281DBC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int16 v20;
  _OWORD v21[8];
  __int16 v22;
  _BYTE v23[137];
  char v24;
  char v25;
  char v26;
  _OWORD v27[8];
  __int16 v28;

  sub_100270514((uint64_t)v23);
  v2 = *(_QWORD *)v23;
  v3 = *(_QWORD *)&v23[8];
  v4 = *(_QWORD *)&v23[16];
  v5 = *(_QWORD *)&v23[24];
  v6 = v23[32];
  sub_100270AF8((uint64_t)&v12);
  v27[5] = v17;
  v27[6] = v18;
  v27[7] = v19;
  v27[2] = v14;
  v27[3] = v15;
  v27[4] = v16;
  v27[0] = v12;
  v27[1] = v13;
  v21[6] = v18;
  v21[7] = v19;
  v21[2] = v14;
  v21[3] = v15;
  v21[4] = v16;
  v21[5] = v17;
  v21[0] = v12;
  v21[1] = v13;
  *(_OWORD *)&v23[103] = v18;
  *(_OWORD *)&v23[87] = v17;
  *(_OWORD *)&v23[39] = v14;
  *(_OWORD *)&v23[23] = v13;
  *(_OWORD *)&v23[119] = v19;
  *(_WORD *)&v23[135] = v20;
  *(_OWORD *)&v23[55] = v15;
  *(_OWORD *)&v23[71] = v16;
  *(_OWORD *)&v23[7] = v12;
  v7 = *(_OWORD *)&v23[64];
  *(_OWORD *)(a1 + 145) = *(_OWORD *)&v23[80];
  v8 = *(_OWORD *)&v23[112];
  *(_OWORD *)(a1 + 161) = *(_OWORD *)&v23[96];
  *(_OWORD *)(a1 + 177) = v8;
  *(_OWORD *)(a1 + 186) = *(_OWORD *)&v23[121];
  v9 = *(_OWORD *)v23;
  *(_OWORD *)(a1 + 81) = *(_OWORD *)&v23[16];
  v10 = *(_OWORD *)&v23[48];
  *(_OWORD *)(a1 + 97) = *(_OWORD *)&v23[32];
  *(_OWORD *)(a1 + 113) = v10;
  *(_OWORD *)(a1 + 129) = v7;
  v28 = v20;
  v22 = v20;
  v26 = 1;
  v25 = v6;
  v24 = 1;
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 1;
  *(_OWORD *)(a1 + 65) = v9;
  sub_100283DC8(v2, v3, v4, v5, v6);
  sub_1002840CC((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_100283E28);
  sub_1002840CC((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_100284018);
  return sub_100283FC0(v2, v3, v4, v5, v6);
}

uint64_t sub_100281FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;

  *(_QWORD *)a6 = static HorizontalAlignment.center.getter(a1, a2, a3, a4, a5);
  *(_QWORD *)(a6 + 8) = 0;
  *(_BYTE *)(a6 + 16) = 1;
  v8 = sub_100047110(&qword_10082B2B8);
  return sub_100281340(v6, a6 + *(int *)(v8 + 44));
}

CGFloat sub_100282020()
{
  id v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  CGFloat result;
  CGRect v10;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;

  v10.origin.x = v2;
  v10.origin.y = v4;
  v10.size.width = v6;
  v10.size.height = v8;
  result = CGRectGetWidth(v10) * 0.8;
  qword_10082B108 = *(_QWORD *)&result;
  return result;
}

uint64_t sub_1002820B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (**v34)(uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _OWORD *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  id v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t OpaqueTypeConformance2;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD v131[2];
  _OWORD v132[3];
  _OWORD v133[7];

  v2 = v1;
  v129 = a1;
  v127 = type metadata accessor for AccessibilityActionKind(0);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v125 = (char *)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for AccessibilityTraits(0);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v122 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for AccessibilityChildBehavior(0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v119 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_100047110(&qword_100821238);
  __chkstk_darwin(v113);
  v115 = (uint64_t)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v103);
  v112 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100047110(&qword_10082B1A0);
  __chkstk_darwin(v106);
  v116 = (uint64_t *)((char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for ActivitySharingHighlightViewWrapper(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ActivitySharingHighlightViewModel(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for ActivitySharingHighlightView(0);
  __chkstk_darwin(v96);
  v17 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100047110(&qword_10082B1A8);
  __chkstk_darwin(v18);
  v20 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100047110(&qword_10082B1B0);
  __chkstk_darwin(v97);
  v22 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_100047110(&qword_10082B1B8);
  __chkstk_darwin(v98);
  v100 = (uint64_t)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_100047110(&qword_10082B1C0);
  __chkstk_darwin(v99);
  v101 = (char *)&v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100047110(&qword_10082B1C8);
  __chkstk_darwin(v104);
  v102 = (uint64_t)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_100047110(&qword_10082B1D0);
  v107 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v105 = (char *)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100047110(&qword_10082B1D8);
  __chkstk_darwin(v118);
  v114 = (char *)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v117 = (char *)&v96 - v29;
  sub_10004F8C8(v2, (uint64_t)v15, type metadata accessor for ActivitySharingHighlightViewModel);
  v128 = v2;
  sub_10004F8C8(v2, (uint64_t)v12, type metadata accessor for ActivitySharingHighlightViewWrapper);
  v30 = *(unsigned __int8 *)(v10 + 80);
  v31 = (v30 + 16) & ~v30;
  v110 = v31 + v11;
  v130 = v30 | 7;
  v32 = swift_allocObject(&unk_100792E00, v31 + v11, v30 | 7);
  v111 = v31;
  v109 = v12;
  sub_100047C88((uint64_t)v12, v32 + v31, type metadata accessor for ActivitySharingHighlightViewWrapper);
  v33 = sub_100047C88((uint64_t)v15, (uint64_t)v17, type metadata accessor for ActivitySharingHighlightViewModel);
  v34 = (void (**)(uint64_t))&v17[*(int *)(v96 + 20)];
  *v34 = sub_100282E24;
  v34[1] = (void (*)(uint64_t))v32;
  LOBYTE(v15) = static Edge.Set.all.getter(v33);
  sub_10004F8C8((uint64_t)v17, (uint64_t)v20, type metadata accessor for ActivitySharingHighlightView);
  v35 = &v20[*(int *)(v18 + 36)];
  *v35 = (char)v15;
  *(_OWORD *)(v35 + 8) = xmmword_100631FA0;
  *(_OWORD *)(v35 + 24) = xmmword_100631FB0;
  v35[40] = 0;
  v36 = sub_100011F54((uint64_t)v17, type metadata accessor for ActivitySharingHighlightView);
  if (qword_10081D968 != -1)
    v36 = swift_once(&qword_10081D968, sub_100282020);
  v37 = qword_10082B108;
  v38 = static Alignment.center.getter(v36);
  _FrameLayout.init(width:height:alignment:)(v132, v37, 0, 0, 1, v38, v39);
  sub_100021CC0((uint64_t)v20, (uint64_t)v22, &qword_10082B1A8);
  v40 = &v22[*(int *)(v97 + 36)];
  v41 = v132[1];
  *(_OWORD *)v40 = v132[0];
  *((_OWORD *)v40 + 1) = v41;
  *((_OWORD *)v40 + 2) = v132[2];
  v42 = sub_10001BE90((uint64_t)v20, &qword_10082B1A8);
  v43 = *(double *)&qword_10082B108;
  v44 = static Alignment.center.getter(v42);
  v45 = v44;
  v47 = v46;
  if (v43 > INFINITY)
  {
    v48 = static os_log_type_t.fault.getter(v44);
    v49 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v48, &_mh_execute_header, v49, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v133, 0, 1, 0, 1, 0, 1, *(_QWORD *)&v43, 0, 0, 1, 0x7FF0000000000000, 0, v45, v47);
  v50 = v100;
  sub_100021CC0((uint64_t)v22, v100, &qword_10082B1B0);
  v51 = (_OWORD *)(v50 + *(int *)(v98 + 36));
  v52 = v133[5];
  v51[4] = v133[4];
  v51[5] = v52;
  v51[6] = v133[6];
  v53 = v133[1];
  *v51 = v133[0];
  v51[1] = v53;
  v54 = v133[3];
  v51[2] = v133[2];
  v51[3] = v54;
  sub_10001BE90((uint64_t)v22, &qword_10082B1B0);
  v55 = sub_100032490();
  v56 = Color.init(uiColor:)(v55);
  v57 = v112;
  v58 = &v112[*(int *)(v103 + 20)];
  v59 = enum case for RoundedCornerStyle.continuous(_:);
  v60 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 104))(v58, v59, v60);
  *v57 = 0x4028000000000000;
  v57[1] = 0x4028000000000000;
  v61 = v115;
  sub_10004F8C8((uint64_t)v57, v115, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v61 + *(int *)(v113 + 36)) = 256;
  v62 = v116;
  sub_100021CC0(v61, (uint64_t)v116 + *(int *)(v106 + 36), &qword_100821238);
  *v62 = v56;
  swift_retain(v56);
  sub_10001BE90(v61, &qword_100821238);
  sub_100011F54((uint64_t)v57, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  swift_release(v56);
  v64 = static Alignment.center.getter(v63);
  v66 = v65;
  v67 = (uint64_t)v101;
  v68 = (uint64_t)&v101[*(int *)(v99 + 36)];
  sub_100021CC0((uint64_t)v62, v68, &qword_10082B1A0);
  v69 = (uint64_t *)(v68 + *(int *)(sub_100047110(&qword_10082B1E0) + 36));
  *v69 = v64;
  v69[1] = v66;
  sub_100021CC0(v50, v67, &qword_10082B1B8);
  sub_10001BE90((uint64_t)v62, &qword_10082B1A0);
  v70 = sub_10001BE90(v50, &qword_10082B1B8);
  LOBYTE(v64) = static Edge.Set.all.getter(v70);
  v71 = v102;
  sub_100021CC0(v67, v102, &qword_10082B1C0);
  v72 = v104;
  v73 = v71 + *(int *)(v104 + 36);
  *(_BYTE *)v73 = v64;
  *(_OWORD *)(v73 + 8) = xmmword_100622F50;
  *(_OWORD *)(v73 + 24) = xmmword_100624D70;
  *(_BYTE *)(v73 + 40) = 0;
  v74 = sub_10001BE90(v67, &qword_10082B1C0);
  v75 = v119;
  static AccessibilityChildBehavior.combine.getter(v74);
  v76 = sub_1000E0A18(&qword_10082B1E8, &qword_10082B1C8, (void (*)(void))sub_100282E60);
  v77 = v105;
  View.accessibilityElement(children:)(v75, v72, v76);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v75, v121);
  v78 = sub_10001BE90(v71, &qword_10082B1C8);
  v79 = v122;
  static AccessibilityTraits.isButton.getter(v78);
  v131[0] = v72;
  v131[1] = v76;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v131, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v81 = (uint64_t)v114;
  v82 = v108;
  View.accessibilityAddTraits(_:)(v79, v108, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v79, v124);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v77, v82);
  v83 = v128;
  v84 = (uint64_t)v109;
  sub_10004F8C8(v128, (uint64_t)v109, type metadata accessor for ActivitySharingHighlightViewWrapper);
  v85 = v110;
  v86 = swift_allocObject(&unk_100792E28, v110, v130);
  v87 = v111;
  v88 = sub_100047C88(v84, v86 + v111, type metadata accessor for ActivitySharingHighlightViewWrapper);
  v89 = v125;
  static AccessibilityActionKind.default.getter(v88);
  v90 = (uint64_t)v117;
  v91 = v118;
  ModifiedContent<>.accessibilityAction(_:_:)(v89, sub_1002830F8, v86, v118);
  v92 = swift_release(v86);
  (*(void (**)(char *, uint64_t, __n128))(v126 + 8))(v89, v127, v92);
  sub_10001BE90(v81, &qword_10082B1D8);
  sub_10004F8C8(v83, v84, type metadata accessor for ActivitySharingHighlightViewWrapper);
  v93 = swift_allocObject(&unk_100792E50, v85, v130);
  sub_100047C88(v84, v93 + v87, type metadata accessor for ActivitySharingHighlightViewWrapper);
  v94 = sub_100283130();
  View.onTapGesture(count:perform:)(1, sub_1002830F8, v93, v91, v94);
  swift_release(v93);
  return sub_10001BE90(v90, &qword_10082B1D8);
}

void sub_100282C8C(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ActivitySharingHighlightViewWrapper(0) + 20));
  v3 = *v2;
  if (*v2)
  {
    v4 = *(void **)(a1 + *(int *)(type metadata accessor for ActivitySharingHighlight(0) + 28));
    swift_retain(v3);
    sub_10029D3A0(v4, 1);
    swift_release(v3);
  }
  else
  {
    v5 = v2[1];
    v6 = type metadata accessor for ActivitySharingNavigationCoordinator();
    v7 = sub_1000083D8(&qword_10081EDC0, (uint64_t (*)(uint64_t))type metadata accessor for ActivitySharingNavigationCoordinator, (uint64_t)&unk_1006328F8);
    EnvironmentObject.error()(0, v5, v6, v7);
    __break(1u);
  }
}

void sub_100282D2C(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)(a2 + *(int *)(type metadata accessor for ActivitySharingHighlightViewWrapper(0) + 20));
  v4 = *v3;
  if (*v3)
  {
    v5 = *(void **)(v4 + 144);
    if (v5)
    {
      objc_msgSend(v5, "dismissViewControllerAnimated:completion:", 0, 0, swift_retain(*v3).n128_f64[0]);
      v6 = *(void **)(v4 + 144);
      if (v6)
        objc_msgSend(v6, "presentViewController:animated:completion:", a1, 1, 0);
    }
    else
    {
      swift_retain(*v3);
    }
    swift_release(v4);
  }
  else
  {
    v7 = v3[1];
    v8 = type metadata accessor for ActivitySharingNavigationCoordinator();
    v9 = sub_1000083D8(&qword_10081EDC0, (uint64_t (*)(uint64_t))type metadata accessor for ActivitySharingNavigationCoordinator, (uint64_t)&unk_1006328F8);
    EnvironmentObject.error()(0, v7, v8, v9);
    __break(1u);
  }
}

uint64_t type metadata accessor for ActivitySharingHighlightView(uint64_t a1)
{
  return sub_100024334(a1, qword_10082B280, (uint64_t)&nominal type descriptor for ActivitySharingHighlightView);
}

void sub_100282E24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivitySharingHighlightViewWrapper(0) - 8) + 80);
  sub_100282D2C(a1, v1 + ((v3 + 16) & ~v3));
}

unint64_t sub_100282E60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082B1F0;
  if (!qword_10082B1F0)
  {
    v1 = sub_100007050(&qword_10082B1C0);
    sub_1000E0A18(&qword_10082B1F8, &qword_10082B1B8, (void (*)(void))sub_100282F04);
    sub_100028384(&qword_10082B218, &qword_10082B1E0, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082B1F0);
  }
  return result;
}

uint64_t sub_100282F04()
{
  return sub_1000E0A18(&qword_10082B200, &qword_10082B1B0, (void (*)(void))sub_100282F28);
}

unint64_t sub_100282F28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082B208;
  if (!qword_10082B208)
  {
    v1 = sub_100007050(&qword_10082B1A8);
    sub_1000083D8(&qword_10082B210, type metadata accessor for ActivitySharingHighlightView, (uint64_t)&unk_100632080);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082B208);
  }
  return result;
}

uint64_t sub_100282FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for ActivitySharingHighlightViewWrapper(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;

  v8 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v9 = v7 + v8[5];
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + v8[6];
  v12 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);

  v13 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v14 = v7 + v13[10];
  v15 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);

  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 20)));
  return swift_deallocObject(v0, v5, v6);
}

void sub_100283100()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivitySharingHighlightViewWrapper(0) - 8) + 80);
  sub_100282C8C(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_100283130()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10082B220;
  if (!qword_10082B220)
  {
    v1 = sub_100007050(&qword_10082B1D8);
    v2[0] = sub_100007050(&qword_10082B1C8);
    v2[1] = sub_1000E0A18(&qword_10082B1E8, &qword_10082B1C8, (void (*)(void))sub_100282E60);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_1000083D8((unint64_t *)&qword_10081EFA8, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082B220);
  }
  return result;
}

char *sub_100283204(char *a1, char **a2, uint64_t a3)
{
  char *v4;
  int v5;
  char *v6;
  char v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  int *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  char *v46;
  uint64_t v48;
  char *v49;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v46 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = &v46[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v46);
  }
  else
  {
    v6 = *a2;
    v7 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    a1[8] = v7;
    v8 = (int *)type metadata accessor for ActivitySharingHighlight(0);
    v9 = v8[5];
    v10 = &v4[v9];
    v11 = (uint64_t)a2 + v9;
    v12 = type metadata accessor for UUID(0);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14 = v6;
    v13(v10, v11, v12);
    v15 = v8[6];
    v16 = &v4[v15];
    v17 = (uint64_t)a2 + v15;
    v18 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = v8[7];
    v20 = *(char **)((char *)a2 + v19);
    *(_QWORD *)&v4[v19] = v20;
    *(_QWORD *)&v4[v8[8]] = *(char **)((char *)a2 + v8[8]);
    v21 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
    v22 = v21[5];
    v23 = *(char **)((char *)a2 + v22);
    *(_QWORD *)&v4[v22] = v23;
    v24 = v21[6];
    v25 = *(char **)((char *)a2 + v24);
    *(_QWORD *)&v4[v24] = v25;
    v26 = v21[7];
    v27 = *(char **)((char *)a2 + v26);
    *(_QWORD *)&v4[v26] = v27;
    v28 = v21[8];
    v29 = *(char **)((char *)a2 + v28);
    *(_QWORD *)&v4[v28] = v29;
    v4[v21[9]] = *((_BYTE *)a2 + v21[9]);
    v30 = v21[10];
    v48 = (uint64_t)a2 + v30;
    v49 = &v4[v30];
    v31 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
    v32 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    v33 = v20;
    v34 = v23;
    v35 = v25;
    v36 = v27;
    v37 = v29;
    v32(v49, v48, v31);
    v38 = v21[11];
    v39 = *(char **)((char *)a2 + v38);
    *(_QWORD *)&v4[v38] = v39;
    v40 = *(int *)(a3 + 20);
    v41 = &v4[v40];
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = *v42;
    v44 = v39;
    if (v43)
    {
      v45 = v42[1];
      *(_QWORD *)v41 = v43;
      *((_QWORD *)v41 + 1) = v45;
      swift_retain(v45);
    }
    else
    {
      *(_OWORD *)v41 = *(_OWORD *)v42;
    }
  }
  return v4;
}

double sub_1002833E0(id *a1, uint64_t a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int *v9;
  char *v10;
  uint64_t v11;
  double result;
  _QWORD *v13;

  v4 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v5 = (char *)a1 + v4[5];
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (char *)a1 + v4[6];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);

  v9 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v10 = (char *)a1 + v9[10];
  v11 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);

  v13 = (id *)((char *)a1 + *(int *)(a2 + 20));
  if (*v13)
    *(_QWORD *)&result = swift_release(v13[1]).n128_u64[0];
  return result;
}

uint64_t sub_100283500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  char v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  int *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;

  v5 = *(void **)a2;
  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  v7 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for UUID(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v5;
  v12(v9, v10, v11);
  v14 = v7[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  v18 = v7[7];
  v19 = *(void **)(a2 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
  v20 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v21 = v20[5];
  v22 = *(void **)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v22;
  v23 = v20[6];
  v24 = *(void **)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v24;
  v25 = v20[7];
  v26 = *(void **)(a2 + v25);
  *(_QWORD *)(a1 + v25) = v26;
  v27 = v20[8];
  v28 = *(void **)(a2 + v27);
  *(_QWORD *)(a1 + v27) = v28;
  *(_BYTE *)(a1 + v20[9]) = *(_BYTE *)(a2 + v20[9]);
  v29 = v20[10];
  v46 = a2 + v29;
  v47 = a1 + v29;
  v30 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
  v32 = v19;
  v33 = v22;
  v34 = v24;
  v35 = v26;
  v36 = v28;
  v31(v47, v46, v30);
  v37 = v20[11];
  v38 = *(void **)(a2 + v37);
  *(_QWORD *)(a1 + v37) = v38;
  v39 = *(int *)(a3 + 20);
  v40 = (_QWORD *)(a1 + v39);
  v41 = (uint64_t *)(a2 + v39);
  v42 = *v41;
  v43 = v38;
  if (v42)
  {
    v44 = v41[1];
    *v40 = v42;
    v40[1] = v44;
    swift_retain(v44);
  }
  else
  {
    *(_OWORD *)v40 = *(_OWORD *)v41;
  }
  return a1;
}

uint64_t sub_1002836B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  char v7;
  void *v8;
  id v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  int *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v6 = *(void **)a2;
  v7 = *(_BYTE *)(a2 + 8);
  v8 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v7;
  v9 = v6;

  v10 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v11 = v10[5];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v10[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = v10[7];
  v20 = *(void **)(a2 + v19);
  v21 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  v22 = v20;

  *(_QWORD *)(a1 + v10[8]) = *(_QWORD *)(a2 + v10[8]);
  v23 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v24 = v23[5];
  v25 = *(void **)(a2 + v24);
  v26 = *(void **)(a1 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  v27 = v25;

  v28 = v23[6];
  v29 = *(void **)(a2 + v28);
  v30 = *(void **)(a1 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v31 = v29;

  v32 = v23[7];
  v33 = *(void **)(a2 + v32);
  v34 = *(void **)(a1 + v32);
  *(_QWORD *)(a1 + v32) = v33;
  v35 = v33;

  v36 = v23[8];
  v37 = *(void **)(a2 + v36);
  v38 = *(void **)(a1 + v36);
  *(_QWORD *)(a1 + v36) = v37;
  v39 = v37;

  *(_BYTE *)(a1 + v23[9]) = *(_BYTE *)(a2 + v23[9]);
  v40 = v23[10];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
  v44 = v23[11];
  v45 = *(void **)(a2 + v44);
  v46 = *(void **)(a1 + v44);
  *(_QWORD *)(a1 + v44) = v45;
  v47 = v45;

  v48 = *(int *)(a3 + 20);
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v51 = *(_QWORD *)(a1 + v48);
  v52 = *v50;
  if (!v51)
  {
    if (v52)
    {
      v55 = v50[1];
      *v49 = v52;
      v49[1] = v55;
      swift_retain(v55);
      return a1;
    }
LABEL_7:
    *(_OWORD *)v49 = *(_OWORD *)v50;
    return a1;
  }
  if (!v52)
  {
    swift_release(v49[1]);
    goto LABEL_7;
  }
  v53 = v50[1];
  v54 = v49[1];
  *v49 = v52;
  v49[1] = v53;
  swift_retain(v53);
  swift_release(v54);
  return a1;
}

uint64_t sub_1002838A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v7 = v6[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = v6[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
  *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
  v15 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  *(_QWORD *)(a1 + v15[5]) = *(_QWORD *)(a2 + v15[5]);
  *(_QWORD *)(a1 + v15[6]) = *(_QWORD *)(a2 + v15[6]);
  *(_QWORD *)(a1 + v15[7]) = *(_QWORD *)(a2 + v15[7]);
  *(_QWORD *)(a1 + v15[8]) = *(_QWORD *)(a2 + v15[8]);
  *(_BYTE *)(a1 + v15[9]) = *(_BYTE *)(a2 + v15[9]);
  v16 = v15[10];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  *(_QWORD *)(a1 + v15[11]) = *(_QWORD *)(a2 + v15[11]);
  v20 = *(int *)(a3 + 20);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v23 = *v22;
  if (*v22)
  {
    v24 = v22[1];
    *v21 = v23;
    v21[1] = v24;
  }
  else
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
  }
  return a1;
}

uint64_t sub_100283A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  void *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;

  v8 = (int *)type metadata accessor for ActivitySharingHighlight(0);
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[7];
  v18 = *(void **)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);

  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  v19 = (int *)type metadata accessor for ActivitySharingHighlightViewModel(0);
  v20 = v19[5];
  v21 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);

  v22 = v19[6];
  v23 = *(void **)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);

  v24 = v19[7];
  v25 = *(void **)(a1 + v24);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);

  v26 = v19[8];
  v27 = *(void **)(a1 + v26);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);

  *(_BYTE *)(a1 + v19[9]) = *(_BYTE *)(a2 + v19[9]);
  v28 = v19[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = type metadata accessor for FIUIRelativeDateTimeFormatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  v32 = v19[11];
  v33 = *(void **)(a1 + v32);
  *(_QWORD *)(a1 + v32) = *(_QWORD *)(a2 + v32);

  v34 = *(int *)(a3 + 20);
  v35 = (_QWORD *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v37 = *(_QWORD *)(a1 + v34);
  v38 = *v36;
  if (!v37)
  {
    if (v38)
    {
      v41 = v36[1];
      *v35 = v38;
      v35[1] = v41;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v35 = *(_OWORD *)v36;
    return a1;
  }
  if (!v38)
  {
    swift_release(v35[1]);
    goto LABEL_7;
  }
  v39 = v36[1];
  v40 = v35[1];
  *v35 = v38;
  v35[1] = v39;
  swift_release(v40);
  return a1;
}

uint64_t sub_100283BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100283BE8);
}

uint64_t sub_100283BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for ActivitySharingHighlightViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_100283C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100283C80);
}

uint64_t sub_100283C84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ActivitySharingHighlightViewModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_100283CFC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for ActivitySharingHighlightViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100631FF8;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100283D6C()
{
  _QWORD v1[2];

  v1[0] = sub_100007050(&qword_10082B1D8);
  v1[1] = sub_100283130();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
}

uint64_t sub_100283DB8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B1D48, 1);
}

double sub_100283DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  double result;

  if ((a5 & 1) != 0)
  {
    swift_retain(a2);
    swift_retain(a1);
    sub_10003AFE0(a3, a4);
  }
  else
  {
    *(_QWORD *)&result = j__swift_retain(a1).n128_u64[0];
  }
  return result;
}

double sub_100283E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, char a17, char a18)
{
  double result;

  if ((a18 & 1) == 0)
    return sub_100272248(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17 & 1);
  sub_1000E439C(a4, a5, a6 & 1);
  swift_retain(a9);
  swift_bridgeObjectRetain(a7);
  swift_retain(a8);
  sub_10003AFE0(a10, a11);
  return result;
}

uint64_t sub_100283EDC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, __int16))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  __int16 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = *(_QWORD *)(a1 + 104);
  v20 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 120);
  v18 = *(_QWORD *)(a1 + 112);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 152);
  v16 = *(_OWORD *)(a1 + 176);
  v17 = *(_OWORD *)(a1 + 160);
  v15 = *(_OWORD *)(a1 + 192);
  v9 = *(_QWORD *)(a1 + 208);
  v10 = *(_QWORD *)(a1 + 216);
  v11 = *(_BYTE *)(a1 + 224);
  v12 = *(_BYTE *)(a1 + 225);
  a2(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(unsigned __int8 *)(a1 + 72));
  HIBYTE(v14) = v12;
  LOBYTE(v14) = v11;
  a3(v20, v19, v18, v4, v5, v6, v7, v8, v17, *((_QWORD *)&v17 + 1), v16, *((_QWORD *)&v16 + 1), v15, *((_QWORD *)&v15 + 1), v9, v10, v14);
  return a1;
}

double sub_100283FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  double result;

  if ((a5 & 1) != 0)
  {
    swift_release(a1);
    swift_release(a2);
    sub_100022BA4(a3, a4);
  }
  else
  {
    *(_QWORD *)&result = j__swift_release(a1).n128_u64[0];
  }
  return result;
}

double sub_100284018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, char a17, char a18)
{
  double result;

  if ((a18 & 1) == 0)
    return sub_100272368(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17 & 1);
  sub_1000E4458(a4, a5, a6 & 1);
  swift_release(a8);
  swift_bridgeObjectRelease(a7);
  swift_release(a9);
  sub_100022BA4(a10, a11);
  return result;
}

uint64_t sub_1002840CC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_WORD *)(a1 + 128));
  return a1;
}

uint64_t sub_100284138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10082B2D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100284180(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_BYTE *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  sub_1000E439C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  sub_1000E439C(v3, v4, v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *sub_1002841F0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[6];
  v6 = a1[8];
  v7 = a1[10];
  v8 = a1[11];
  swift_retain(a1[9]);
  swift_retain(v2);
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_bridgeObjectRetain(v6);
  sub_10003AFE0(v7, v8);
  return a1;
}

_QWORD *sub_100284274(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[8];
  v6 = a1[9];
  v7 = a1[10];
  v8 = a1[11];
  swift_release(a1[1]);
  swift_bridgeObjectRelease(v2);
  swift_release(v3);
  swift_release(v4);
  swift_bridgeObjectRelease(v5);
  swift_release(v6);
  sub_100022BA4(v7, v8);
  return a1;
}

uint64_t sub_1002842F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_BYTE *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  sub_1000E4458(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease(v2);
  sub_1000E4458(v3, v4, v5);
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t sub_100284368()
{
  return sub_100028384(&qword_10082B2E8, &qword_10082B2F0, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t getEnumTagSinglePayload for ActivitySharingHighlightEmptyView(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[24])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingHighlightEmptyView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingHighlightEmptyView()
{
  return &type metadata for ActivitySharingHighlightEmptyView;
}

uint64_t sub_10028443C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006B1D8C, 1);
}

uint64_t sub_10028444C@<X0>(int a1@<W0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t KeyPath;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  _OWORD v72[3];

  v67 = a2;
  v7 = sub_100047110(&qword_10082B300);
  __chkstk_darwin(v7);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100047110(&qword_10082B308);
  __chkstk_darwin(v10);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v62 - v14;
  v16 = sub_100284870(a1, v9);
  v17 = static Alignment.center.getter(v16);
  _FrameLayout.init(width:height:alignment:)(v72, *(_QWORD *)&a3, 0, *(_QWORD *)&a4, 0, v17, v18);
  sub_100021CC0((uint64_t)v9, (uint64_t)v12, &qword_10082B300);
  v19 = &v12[*(int *)(v10 + 36)];
  v20 = v72[1];
  *(_OWORD *)v19 = v72[0];
  *((_OWORD *)v19 + 1) = v20;
  *((_OWORD *)v19 + 2) = v72[2];
  sub_10001BE90((uint64_t)v9, &qword_10082B300);
  v65 = v15;
  sub_100284B2C((uint64_t)v12, (uint64_t)v15);
  v21 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001CLL, 0x8000000100693F60);
  v22 = Text.init(_:tableName:bundle:comment:)(v21);
  v24 = v23;
  v26 = v25;
  v28 = v27 & 1;
  v29 = static Font.headline.getter();
  v31 = Text.font(_:)(v29, v22, v24, v28, v26, v30);
  v69 = v32;
  v70 = v31;
  v68 = v33;
  v35 = v34;
  swift_release(v29);
  v36 = v35 & 1;
  sub_1000E4458(v22, v24, v28);
  swift_bridgeObjectRelease(v26);
  LOBYTE(v26) = static Edge.Set.all.getter(v37);
  v38 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000022, 0x8000000100693F80);
  v63 = Text.init(_:tableName:bundle:comment:)(v38);
  v64 = v39;
  v41 = v40;
  LOBYTE(v29) = v42 & 1;
  KeyPath = swift_getKeyPath(&unk_100632158);
  v62 = static Font.subheadline.getter();
  v44 = swift_getKeyPath(&unk_100632188);
  v46 = static Color.secondary.getter(v45);
  v47 = swift_getKeyPath(&unk_1006321B8);
  v66 = v12;
  sub_100021CC0((uint64_t)v15, (uint64_t)v12, &qword_10082B308);
  v71 = v36;
  v48 = (uint64_t)v12;
  v49 = v67;
  sub_100021CC0(v48, v67, &qword_10082B308);
  v50 = sub_100047110(&qword_10082B310);
  v51 = v49 + *(int *)(v50 + 48);
  v53 = v69;
  v52 = v70;
  v54 = v68;
  *(_QWORD *)v51 = v70;
  *(_QWORD *)(v51 + 8) = v54;
  *(_BYTE *)(v51 + 16) = v36;
  v55 = v36;
  *(_QWORD *)(v51 + 24) = v53;
  *(_BYTE *)(v51 + 32) = v26;
  *(_QWORD *)(v51 + 40) = 0x4032000000000000;
  *(_QWORD *)(v51 + 48) = 0;
  *(_QWORD *)(v51 + 56) = 0;
  *(_QWORD *)(v51 + 64) = 0;
  *(_BYTE *)(v51 + 72) = 0;
  v56 = v49 + *(int *)(v50 + 64);
  v57 = v63;
  v58 = v64;
  *(_QWORD *)v56 = v63;
  *(_QWORD *)(v56 + 8) = v41;
  *(_BYTE *)(v56 + 16) = v29;
  *(_QWORD *)(v56 + 24) = v58;
  *(_QWORD *)(v56 + 32) = KeyPath;
  v59 = KeyPath;
  *(_WORD *)(v56 + 40) = 1;
  *(_BYTE *)(v56 + 42) = 1;
  v60 = v62;
  *(_QWORD *)(v56 + 48) = v44;
  *(_QWORD *)(v56 + 56) = v60;
  *(_QWORD *)(v56 + 64) = v47;
  *(_QWORD *)(v56 + 72) = v46;
  sub_1000E439C(v52, v54, v55);
  swift_bridgeObjectRetain(v53);
  sub_1000E439C(v57, v41, v29);
  swift_bridgeObjectRetain(v58);
  swift_retain(v59);
  swift_retain(v44);
  swift_retain(v60);
  swift_retain(v47);
  swift_retain(v46);
  sub_10001BE90((uint64_t)v65, &qword_10082B308);
  sub_1000E4458(v57, v41, v29);
  swift_release(v46);
  swift_release(v47);
  swift_release(v60);
  swift_release(v44);
  swift_release(v59);
  swift_bridgeObjectRelease(v58);
  sub_1000E4458(v70, v68, v71);
  swift_bridgeObjectRelease(v69);
  return sub_10001BE90((uint64_t)v66, &qword_10082B308);
}

uint64_t sub_100284870@<X0>(int a1@<W0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v18;
  uint64_t v20;
  _BYTE v21[12];
  int v22;

  v22 = a1;
  v3 = sub_100047110(&qword_10081E640);
  __chkstk_darwin(v3);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v21[-v11];
  v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "URLForResource:withExtension:", v14, v15);

  if (v16)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v16);

    v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32);
    v17(v5, v9, v6);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v17(v12, v5, v6);
      v17(a2, v12, v6);
      v18 = type metadata accessor for VideoLooperRepresentable(0);
      a2[*(int *)(v18 + 20)] = v22 & 1;
      return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 0, 1, v18);
    }
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_10001BE90((uint64_t)v5, &qword_10081E640);
  v20 = type metadata accessor for VideoLooperRepresentable(0);
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
}

uint64_t sub_100284AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  double *v6;
  int v8;
  double v9;
  double v10;
  uint64_t v11;

  v8 = *(unsigned __int8 *)v6;
  v9 = v6[1];
  v10 = v6[2];
  *(_QWORD *)a6 = static HorizontalAlignment.center.getter(a1, a2, a3, a4, a5);
  *(_QWORD *)(a6 + 8) = 0;
  *(_BYTE *)(a6 + 16) = 1;
  v11 = sub_100047110(&qword_10082B2F8);
  return sub_10028444C(v8, a6 + *(int *)(v11 + 44), v9, v10);
}

uint64_t sub_100284B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10082B308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100284B90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082B318;
  if (!qword_10082B318)
  {
    v1 = sub_100007050(qword_10082B320);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10082B318);
  }
  return result;
}

uint64_t sub_100284BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

void sub_100284BE4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_100285A2C(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 0, 2, v6, a1 + 32);
    }
  }
}

uint64_t *sub_100284C6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  const void *v22;
  unsigned int (*v23)(const void *, uint64_t, uint64_t);
  void *__dst;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for GeometryProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  if (*(_DWORD *)(v7 + 84))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = *(_QWORD *)(v7 + 64) + 1;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = ((v8 + 16) & ~v8) + v9 + v12;
  v14 = (v13 & ~v12) + *(_QWORD *)(v11 + 64);
  v15 = (*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000;
  v16 = *a2;
  *a1 = *a2;
  if ((v12 | v8) > 7 || v15 != 0 || v14 > 0x18)
  {
    a1 = (uint64_t *)(v16 + (((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)));
    swift_retain(v16);
  }
  else
  {
    v26 = ~v12;
    v27 = v10;
    v19 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v20 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    v21 = *v20;
    *v19 = *v20;
    __dst = (void *)(((unint64_t)v19 + v8 + 8) & ~v8);
    v22 = (const void *)(((unint64_t)v20 + v8 + 8) & ~v8);
    v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
    swift_retain(v16);
    swift_retain(v21);
    if (v23(v22, 1, v6))
    {
      memcpy(__dst, v22, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(__dst, v22, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(__dst, 0, 1, v6);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(((unint64_t)a1 + v13) & v26, ((unint64_t)a2 + v13) & v26, v27);
  }
  return a1;
}

uint64_t sub_100284E10(_QWORD *a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = (unint64_t)a1 + 15;
  swift_release(*a1);
  v5 = v4 & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8));
  v6 = type metadata accessor for GeometryProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 8) & ~v8;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  v10 = (uint64_t)a1 + *(_QWORD *)(v7 + 64) + ((v8 + 16) & ~v8);
  if (!*(_DWORD *)(v7 + 84))
    ++v10;
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v10 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t *sub_100284EE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  int v15;
  size_t v16;
  size_t v17;
  size_t v18;
  uint64_t v19;

  v5 = *a2;
  *a1 = *a2;
  v6 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = *v7;
  *v6 = *v7;
  v9 = type metadata accessor for GeometryProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v6 + v11 + 8) & ~v11);
  v13 = (const void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_retain(v5);
  swift_retain(v8);
  if (v14(v13, 1, v9))
  {
    v15 = *(_DWORD *)(v10 + 84);
    v16 = *(_QWORD *)(v10 + 64);
    if (v15)
      v17 = v16;
    else
      v17 = v16 + 1;
    memcpy(v12, v13, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
    v15 = *(_DWORD *)(v10 + 84);
    v16 = *(_QWORD *)(v10 + 64);
  }
  v18 = v16 + ((v11 + 16) & ~v11);
  if (!v15)
    ++v18;
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v19 + 16))(((unint64_t)a1 + v18 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), ((unint64_t)a2 + v18 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  return a1;
}

uint64_t *sub_100285044(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *a1;
  v7 = (unint64_t)a2 + 15;
  v6 = *a2;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v5);
  v8 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8);
  v11 = *v8;
  *v8 = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = type metadata accessor for GeometryProxy(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (void *)(((unint64_t)v8 + v14 + 8) & ~v14);
  v16 = (void *)((v14 + 8 + v9) & ~v14);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v9) = v17(v15, 1, v12);
  v18 = v17(v16, 1, v12);
  if ((_DWORD)v9)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v15, v16, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
      goto LABEL_10;
    }
LABEL_6:
    if (*(_DWORD *)(v13 + 84))
      v19 = *(_QWORD *)(v13 + 64);
    else
      v19 = *(_QWORD *)(v13 + 64) + 1;
    memcpy(v15, v16, v19);
    goto LABEL_10;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
    goto LABEL_6;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v15, v16, v12);
LABEL_10:
  v20 = *(_QWORD *)(v13 + 64) + ((v14 + 16) & ~v14);
  if (!*(_DWORD *)(v13 + 84))
    ++v20;
  v21 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 24))(((unint64_t)a1 + v20 + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), ((unint64_t)a2 + v20 + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

_QWORD *sub_1002851F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v8 = type metadata accessor for GeometryProxy(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (void *)(((unint64_t)v6 + v10 + 8) & ~v10);
  v12 = (const void *)(((unint64_t)v7 + v10 + 8) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v12, 1, v8))
  {
    v13 = *(_DWORD *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 64);
    if (v13)
      v15 = v14;
    else
      v15 = v14 + 1;
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v11, v12, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
    v13 = *(_DWORD *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 64);
  }
  v16 = v14 + ((v10 + 16) & ~v10);
  if (!v13)
    ++v16;
  v17 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v17 + 32))(((unint64_t)a1 + v16 + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), ((unint64_t)a2 + v16 + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  return a1;
}

uint64_t *sub_10028532C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *a1;
  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release(v5);
  v7 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 & 0xFFFFFFFFFFFFFFF8;
  v9 = *v7;
  *v7 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF8);
  swift_release(v9);
  v10 = type metadata accessor for GeometryProxy(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (void *)(((unint64_t)v7 + v12 + 8) & ~v12);
  v14 = (void *)((v12 + 8 + v8) & ~v12);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v15(v13, 1, v10);
  v16 = v15(v14, 1, v10);
  if ((_DWORD)v8)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v13, v14, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
      goto LABEL_10;
    }
LABEL_6:
    if (*(_DWORD *)(v11 + 84))
      v17 = *(_QWORD *)(v11 + 64);
    else
      v17 = *(_QWORD *)(v11 + 64) + 1;
    memcpy(v13, v14, v17);
    goto LABEL_10;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_6;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v13, v14, v10);
LABEL_10:
  v18 = *(_QWORD *)(v11 + 64) + ((v12 + 16) & ~v12);
  if (!*(_DWORD *)(v11 + 84))
    ++v18;
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v19 + 40))(((unint64_t)a1 + v18 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), ((unint64_t)a2 + v18 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  return a1;
}

uint64_t sub_1002854C8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  unsigned int v22;
  int v23;
  int v24;
  uint64_t *v25;
  uint64_t v26;
  unsigned int v27;

  v6 = *(_QWORD *)(type metadata accessor for GeometryProxy(0) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  if (v8 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  else
    v9 = v8;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v9)
    v12 = v9;
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (v7)
    v13 = *(_QWORD *)(v6 + 64);
  else
    v13 = *(_QWORD *)(v6 + 64) + 1;
  if (!a2)
    return 0;
  v14 = *(unsigned __int8 *)(v6 + 80);
  v15 = v13 + ((v14 + 16) & ~v14);
  v16 = *(unsigned __int8 *)(v10 + 80);
  v17 = v15 + v16;
  if (a2 <= v12)
    goto LABEL_33;
  v18 = (v17 & ~v16) + *(_QWORD *)(v10 + 64);
  v19 = 8 * v18;
  if (v18 <= 3)
  {
    v22 = ((a2 - v12 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v22))
    {
      v20 = *(_DWORD *)(a1 + v18);
      if (!v20)
        goto LABEL_33;
      goto LABEL_24;
    }
    if (v22 > 0xFF)
    {
      v20 = *(unsigned __int16 *)(a1 + v18);
      if (!*(_WORD *)(a1 + v18))
        goto LABEL_33;
      goto LABEL_24;
    }
    if (v22 < 2)
    {
LABEL_33:
      if (v9 < v11)
        return (*(uint64_t (**)(uint64_t, _QWORD))(v10 + 48))((v17 + a1) & ~v16, *(unsigned int *)(v10 + 84));
      v25 = (uint64_t *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      if ((v8 & 0x80000000) != 0)
      {
        v27 = (*(uint64_t (**)(unint64_t))(v6 + 48))(((unint64_t)v25 + v14 + 8) & ~v14);
        if (v27 >= 2)
          return v27 - 1;
        else
          return 0;
      }
      else
      {
        v26 = *v25;
        if ((unint64_t)*v25 >= 0xFFFFFFFF)
          LODWORD(v26) = -1;
        return (v26 + 1);
      }
    }
  }
  v20 = *(unsigned __int8 *)(a1 + v18);
  if (!*(_BYTE *)(a1 + v18))
    goto LABEL_33;
LABEL_24:
  v23 = (v20 - 1) << v19;
  if (v18 > 3)
    v23 = 0;
  if ((_DWORD)v18)
  {
    if (v18 <= 3)
      v24 = (v17 & ~(_DWORD)v16) + *(_DWORD *)(v10 + 64);
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  return v12 + v23 + 1;
}

void sub_1002856C0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  size_t v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v8 = 0;
  v9 = *(_QWORD *)(type metadata accessor for GeometryProxy(0) - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  v13 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v13 + 84) <= v12)
    v14 = v12;
  else
    v14 = *(_DWORD *)(v13 + 84);
  if (v10)
    v15 = *(_QWORD *)(v9 + 64);
  else
    v15 = *(_QWORD *)(v9 + 64) + 1;
  v16 = ((((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
        + v15
        + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))
      + *(_QWORD *)(v13 + 64);
  if (a3 > v14)
  {
    if (v16 > 3)
    {
      v8 = &_mh_execute_header.magic + 1;
      if (v14 >= a2)
        goto LABEL_16;
LABEL_22:
      v18 = ~v14 + a2;
      if (v16 < 4)
      {
        if ((_DWORD)v16)
        {
          v19 = v18 & ~(-1 << (8 * v16));
          bzero(a1, v16);
          if ((_DWORD)v16 == 3)
          {
            *(_WORD *)a1 = v19;
            a1[2] = BYTE2(v19);
          }
          else if ((_DWORD)v16 == 2)
          {
            *(_WORD *)a1 = v19;
          }
          else
          {
            *a1 = v19;
          }
        }
      }
      else
      {
        bzero(a1, v16);
        *(_DWORD *)a1 = v18;
      }
      __asm { BR              X10 }
    }
    v17 = ((a3 - v14 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v17))
    {
      v8 = &dword_100000004;
      if (v14 < a2)
        goto LABEL_22;
LABEL_16:
      __asm { BR              X6 }
    }
    if (v17 >= 0x100)
      v8 = 2;
    else
      v8 = v17 > 1;
  }
  if (v14 < a2)
    goto LABEL_22;
  goto LABEL_16;
}

uint64_t type metadata accessor for ViewSizeCalculator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10014E7CC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ViewSizeCalculator);
}

void sub_100285A2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1008230E8)
  {
    v2 = sub_100007050(&qword_10081F430);
    v3 = type metadata accessor for Binding(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1008230E8);
  }
}

uint64_t sub_100285A84(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1006B1DF0, 1);
}

uint64_t sub_100285AB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_100047110(&qword_10081F430);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002864B0(a1, (uint64_t)v4);
  v5 = sub_100047110(&qword_10081F550);
  Binding.wrappedValue.setter(v4, v5);
  return sub_1002864F8(a1);
}

uint64_t sub_100285B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  void (*v18)(_BYTE *, uint64_t);
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_100007050(&qword_10082B3A8);
  v7 = type metadata accessor for ModifiedContent(255, v5, v6);
  v8 = type metadata accessor for Group(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v20[-v13];
  v15 = *(_QWORD *)(a1 + 24);
  v21 = v5;
  v22 = v15;
  v23 = v2;
  v16 = sub_100028384(&qword_10082B3B0, &qword_10082B3A8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v25 = v15;
  v26 = v16;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
  Group<A>.init(content:)(sub_1002861A8, v20, v7, WitnessTable);
  v24 = WitnessTable;
  swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v8);
  sub_10029340C((uint64_t)v11, v8, (uint64_t)v14);
  v18 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
  v18(v11, v8);
  sub_100291778((uint64_t)v14, v8, a2);
  return ((uint64_t (*)(_BYTE *, uint64_t))v18)(v14, v8);
}

uint64_t sub_100285CC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];

  v43 = a5;
  v8 = type metadata accessor for ViewSizeCalculator(0, a2, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v12 = (char *)&v38 - v11;
  v40 = *(_QWORD *)(a2 - 8);
  v13 = v40;
  __chkstk_darwin(v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007050(&qword_10082B3A8);
  v18 = type metadata accessor for ModifiedContent(0, a2, v17);
  v42 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v39 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v20);
  v41 = (uint64_t)&v38 - v22;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, a1 + *(int *)(v8 + 36), a2, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  v23 = *(unsigned __int8 *)(v9 + 80);
  v24 = (v23 + 32) & ~v23;
  v25 = swift_allocObject(&unk_100792FE0, v24 + v10, v23 | 7);
  *(_QWORD *)(v25 + 16) = a2;
  *(_QWORD *)(v25 + 24) = a3;
  v26 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25 + v24, v12, v8);
  v46[0] = sub_1002862A0;
  v46[1] = v25;
  v27 = static Alignment.center.getter(v26);
  v29 = v28;
  v30 = sub_100047110(&qword_10082B3B8);
  v31 = sub_100028384((unint64_t *)&unk_10082B3C0, &qword_10082B3B8, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
  v32 = (uint64_t)v39;
  View.background<A>(_:alignment:)(v46, v27, v29, a2, v30, a3, v31);
  v33 = swift_release(v25);
  (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v16, a2, v33);
  v34 = sub_100028384(&qword_10082B3B0, &qword_10082B3A8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v44 = a3;
  v45 = v34;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v35 = v41;
  sub_10029340C(v32, v18, v41);
  v36 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v36(v32, v18);
  sub_100291778(v35, v18, v43);
  return ((uint64_t (*)(uint64_t, uint64_t))v36)(v35, v18);
}

uint64_t sub_100285F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a3;
  v31 = a4;
  v28 = a1;
  v9 = type metadata accessor for GeometryProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v13 = type metadata accessor for ViewSizeCalculator(0, a3, a4, v12);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v17 = (char *)&v26 - v16;
  v29 = static Color.clear.getter(v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a2, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v9);
  v19 = *(unsigned __int8 *)(v14 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = *(unsigned __int8 *)(v10 + 80);
  v22 = (v15 + v21 + v20) & ~v21;
  v23 = swift_allocObject(&unk_100793008, v22 + v11, v19 | v21 | 7);
  v24 = v31;
  *(_QWORD *)(v23 + 16) = v30;
  *(_QWORD *)(v23 + 24) = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v23 + v20, v17, v13);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(v23 + v22, (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v27);
  *a5 = v29;
  a5[1] = (uint64_t)sub_100286434;
  a5[3] = 0;
  a5[4] = 0;
  a5[2] = v23;
  return result;
}

uint64_t sub_1002860F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_100047110(&qword_10081F430);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for GeometryProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  return sub_100285AB8((uint64_t)v5);
}

uint64_t sub_1002861A8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_100285CC8(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_1002861B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ViewSizeCalculator(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  swift_release(*(_QWORD *)(v4 + v9));
  swift_release(*(_QWORD *)(v4 + v9 + 8));
  v11 = v4 + v9 + *(int *)(sub_100047110(&qword_10081F550) + 32);
  v12 = type metadata accessor for GeometryProxy(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v9 + *(int *)(v6 + 36), v5);
  return swift_deallocObject(v4, v9 + v10, v8 | 7);
}

uint64_t sub_1002862A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ViewSizeCalculator(0, v6, v7, a2) - 8) + 80);
  return sub_100285F6C(a1, v3 + ((v8 + 32) & ~v8), v6, v7, a3);
}

uint64_t sub_100286308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ViewSizeCalculator(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v18 = *(_QWORD *)(v7 + 64);
  v10 = type metadata accessor for GeometryProxy(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v17 = *(_QWORD *)(v11 + 64);
  v13 = v4 + v9;
  swift_release(*(_QWORD *)(v4 + v9));
  swift_release(*(_QWORD *)(v4 + v9 + 8));
  v14 = v4 + v9 + *(int *)(sub_100047110(&qword_10081F550) + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v14, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
  v15 = (v9 + v18 + v12) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v13 + *(int *)(v6 + 36), v5);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4 + v15, v10);
  return swift_deallocObject(v4, v15 + v17, v8 | v12 | 7);
}

uint64_t sub_100286434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for ViewSizeCalculator(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeometryProxy(0) - 8) + 80);
  return sub_1002860F4(v4 + v6, v4 + ((v6 + v7 + v8) & ~v8));
}

uint64_t sub_1002864B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_10081F430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002864F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110(&qword_10081F430);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100286538(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *a1;
  v2 = sub_100007050(&qword_10082B3A8);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  v4 = type metadata accessor for Group(255, v3);
  sub_100028384(&qword_10082B3B0, &qword_10082B3A8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
  return swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v4);
}

void sub_1002865E0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  _QWORD v40[5];

  v2 = v1;
  v4 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  v8 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_healthStore];
  v9 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_friendListManager];
  sub_1000252E0((uint64_t)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider], (uint64_t)v40);
  v10 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_badgeImageFactory];
  v11 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_formattingManager];
  v12 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_resourceProvider];
  v13 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_localizationProvider];
  v14 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_pauseRingsCoordinator];
  v15 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_workoutFormattingManager];
  v35 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_fitnessAppContext];
  v36 = v15;
  v38 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_workoutDataProvider];
  v39 = objc_allocWithZone((Class)type metadata accessor for TrophyCaseSectionViewController(0));
  v37 = v8;
  v34 = v9;
  v16 = v10;
  v17 = v11;
  v18 = v12;
  v19 = v13;
  v20 = v14;
  v33 = v20;
  v21 = v35;
  v35 = v21;
  v22 = v36;
  v23 = v38;
  v31 = v20;
  v32 = v21;
  v24 = (uint64_t)v6;
  v25 = v37;
  v26 = v34;
  v27 = v16;
  v28 = sub_1002BE850(v24, v37, v34, v40, v16, v17, v18, v19, v31, v32, v22, v23);

  v29 = objc_msgSend(v2, "navigationController");
  if (v29)
  {
    v30 = v29;
    objc_msgSend(v29, "pushViewController:animated:", v28, 1);

  }
}

char *sub_10028682C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  objc_super v20;

  v5 = v4;
  v10 = OBJC_IVAR____TtC10FitnessApp34TrophyCaseViewControllerFooterView_label;
  v11 = objc_allocWithZone((Class)UILabel);
  v12 = v5;
  v13 = objc_msgSend(v11, "init");
  v14 = (void *)UILabel.withNumberOfLines(_:)(0);

  v15 = (void *)UILabel.withLineBreakMode(_:)(0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v10] = v15;

  v20.receiver = v12;
  v20.super_class = (Class)type metadata accessor for TrophyCaseViewControllerFooterView();
  v16 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC10FitnessApp34TrophyCaseViewControllerFooterView_label];
  v18 = v16;
  objc_msgSend(v18, "addSubview:", v17);
  sub_100286D18();

  return v18;
}

id sub_100286968(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  objc_super v12;

  v2 = v1;
  v4 = OBJC_IVAR____TtC10FitnessApp34TrophyCaseViewControllerFooterView_label;
  v5 = objc_allocWithZone((Class)UILabel);
  v6 = v2;
  v7 = objc_msgSend(v5, "init");
  v8 = (void *)UILabel.withNumberOfLines(_:)(0);

  v9 = (void *)UILabel.withLineBreakMode(_:)(0);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v2[v4] = v9;

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for TrophyCaseViewControllerFooterView();
  v10 = objc_msgSendSuper2(&v12, "initWithCoder:", a1);

  return v10;
}

void sub_100286A60(char a1)
{
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  void *v10;
  NSString *v11;
  id v12;
  uint64_t v13;
  void *v14;
  NSString *v15;
  id v16;
  unint64_t v17;
  id v18;
  NSString v19;
  Class isa;
  id v21;
  uint64_t v22;

  if ((a1 & 1) != 0)
  {
    v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v3 = String._bridgeToObjectiveC()();
    v4 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v6 = v5;

    v7 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp34TrophyCaseViewControllerFooterView_label);
    v8 = sub_100047110((uint64_t *)&unk_10082EDA0);
    inited = swift_initStackObject(v8, &v22);
    *(_OWORD *)(inited + 16) = xmmword_100620BC0;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v10 = (void *)objc_opt_self(UIFont);
    v11 = NSFontAttributeName;
    v12 = objc_msgSend(v10, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
    v13 = sub_10001E724(0, (unint64_t *)&qword_10082B530, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v12;
    *(_QWORD *)(inited + 64) = v13;
    *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
    v14 = (void *)objc_opt_self(UIColor);
    v15 = NSForegroundColorAttributeName;
    v16 = objc_msgSend(v14, "secondaryLabelColor");
    *(_QWORD *)(inited + 104) = sub_10001E724(0, (unint64_t *)&qword_10082EDB0, UIColor_ptr);
    *(_QWORD *)(inited + 80) = v16;
    v17 = sub_100038C84(inited);
    v18 = objc_allocWithZone((Class)NSAttributedString);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    type metadata accessor for Key(0);
    sub_100028404((unint64_t *)&qword_10081E850, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1006226C0);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v21 = objc_msgSend(v18, "initWithString:attributes:", v19, isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

    objc_msgSend(v7, "setAttributedText:", v21);
  }
  else
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp34TrophyCaseViewControllerFooterView_label), "setAttributedText:", 0);
  }
}

void sub_100286D18()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100047110((uint64_t *)&unk_100828340);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100623750;
  v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp34TrophyCaseViewControllerFooterView_label];
  v6 = objc_msgSend(v5, "topAnchor");
  v7 = objc_msgSend(v1, "topAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v5, "bottomAnchor");
  v10 = objc_msgSend(v1, "bottomAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, -15.0);

  *(_QWORD *)(v4 + 40) = v11;
  v12 = objc_msgSend(v5, "trailingAnchor");
  v13 = objc_msgSend(v1, "trailingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v4 + 48) = v14;
  v15 = objc_msgSend(v5, "leadingAnchor");
  v16 = objc_msgSend(v1, "leadingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v4 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_10001E724(0, (unint64_t *)&qword_10081F6C0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

id sub_100286F74()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrophyCaseViewControllerFooterView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TrophyCaseViewControllerFooterView()
{
  return objc_opt_self(_TtC10FitnessApp34TrophyCaseViewControllerFooterView);
}

id sub_100286FF8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_super v7;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 32];
  sub_100016804(&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider], v1);
  v4 = sub_100028404(&qword_10082B528, v3, (uint64_t (*)(uint64_t))type metadata accessor for TrophyCaseViewController, (uint64_t)&unk_100632308);
  v5 = v0;
  dispatch thunk of AAUIAwardsDataProviding.remove(observer:)(v5, v4, v1, v2);

  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for TrophyCaseViewController();
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_10028725C(char a1)
{
  char *v1;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  objc_super v7;

  v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimatorFromViewController];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimatorFromViewController] = 0;

  v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimator];
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimator] = 0;

  v5 = objc_msgSend(v1, "navigationController");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "setDelegate:", v1);

  }
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for TrophyCaseViewController();
  objc_msgSendSuper2(&v7, "viewDidAppear:", a1 & 1);
  sub_1002876C0();
}

void sub_100287344()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  id v11;
  id v12;
  double v13;
  uint64_t v14;
  double v15;
  id v16;
  void *v17;
  id v18;
  __n128 v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow;
  v10 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow];
  v11 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v12 = objc_msgSend(v11, "preferredContentSizeCategory");

  LOBYTE(v11) = UIContentSizeCategory.isAccessibilityCategory.getter(v12);
  v13 = 2.0;
  if ((v11 & 1) != 0)
    v13 = 1.0;
  *(double *)&v1[v9] = v13;
  v14 = OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxCellHeight;
  v15 = *(double *)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxCellHeight];
  sub_100288B88();
  if (v15 != *(double *)&v1[v14] || v10 != *(double *)&v1[v9])
  {
    v16 = objc_msgSend(v1, "collectionView");
    if (!v16)
    {
      __break(1u);
      return;
    }
    v17 = v16;
    v18 = objc_msgSend(v16, "collectionViewLayout");

    objc_msgSend(v18, "invalidateLayout");
    v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldReloadCollectionView] = 1;
  }
  if (v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldReloadCollectionView] == 1)
  {
    v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldReloadCollectionView] = 0;
    sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v20 = (void *)static OS_dispatch_queue.main.getter(v19);
    v21 = swift_allocObject(&unk_100793068, 24, 7);
    swift_unknownObjectWeakInit(v21 + 16, v1);
    aBlock[4] = sub_10028A414;
    v30 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002D0F8;
    aBlock[3] = &unk_100793080;
    v22 = _Block_copy(aBlock);
    swift_release(v30);
    static DispatchQoS.unspecified.getter(v23);
    aBlock[0] = _swiftEmptyArrayStorage;
    v24 = sub_100028404((unint64_t *)&qword_1008268E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v25 = sub_100047110(&qword_100828C80);
    v26 = sub_10002FB08();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v2, v24);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v22);
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_1002876C0()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  unsigned __int8 v4;
  id v5;
  os_log_type_t v6;
  void *v7;
  id v8;
  NSObject *v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  os_log_type_t v22;
  void *v23;
  os_log_type_t v24;
  char *v25;
  NSObject *v26;
  uint8_t *v27;
  uint64_t Strong;
  void *v29;
  void *v30;
  NSObject *log;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_initialAchievement];
  if (v1)
  {
    v2 = v0;
    if ((v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_initialAchievementPresented] & 1) == 0)
    {
      v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_initialAchievementPresented] = 1;
      v3 = v1;
      v4 = objc_msgSend(v3, "unearned");
      v5 = sub_100288390(v3, v4 ^ 1u, v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_forModalPresentation], v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldShowCelebration]);
      v6 = static os_log_type_t.error.getter(v5);
      v7 = (void *)HKLogActivity;
      v32 = v5;
      if (os_log_type_enabled(HKLogActivity, v6))
      {
        v8 = v3;
        v9 = v7;
        v10 = (uint8_t *)swift_slowAlloc(12, -1);
        v11 = swift_slowAlloc(32, -1);
        v35 = v11;
        *(_DWORD *)v10 = 136315138;
        v12 = objc_msgSend(v8, "template");
        v13 = objc_msgSend(v12, "uniqueName");

        log = v9;
        if (v13)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
          v15 = v14;

        }
        else
        {
          v15 = 0;
        }
        v34 = v15;
        v16 = sub_100047110(&qword_10082B520);
        v17 = Optional.description.getter(v16);
        v19 = v18;
        swift_bridgeObjectRelease(v15);
        v33 = sub_10003E8EC(v17, v19, &v35);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v10 + 4);

        swift_bridgeObjectRelease(v19);
        _os_log_impl((void *)&_mh_execute_header, log, v6, "[TrophyCase] Presenting detail view controller for template: %s", v10, 0xCu);
        swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v11, -1, -1);
        swift_slowDealloc(v10, -1, -1);

        v5 = v32;
      }
      v20 = objc_msgSend(v2, "navigationController", log);
      if (v20)
      {
        v21 = v20;
        objc_msgSend(v20, "pushViewController:animated:", v5, 0);

      }
      v22 = static os_log_type_t.error.getter(v20);
      v23 = (void *)HKLogActivity;
      v24 = v22;
      if (os_log_type_enabled(HKLogActivity, v22))
      {
        v25 = v2;
        v26 = v23;
        v27 = (uint8_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v27 = 67109120;
        Strong = swift_unknownObjectWeakLoadStrong(&v25[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_delegate]);

        swift_unknownObjectRelease(Strong);
        LODWORD(v33) = Strong == 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, (char *)&v33 + 4, v27 + 4);

        v5 = v32;
        _os_log_impl((void *)&_mh_execute_header, v26, v24, "[TrophyCase] Calling back delegate for trophyCaseDidBeginCelebration, delegate == nil ? %{BOOL}d", v27, 8u);
        swift_slowDealloc(v27, -1, -1);

      }
      v29 = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_delegate]);
      if (v29)
      {
        v30 = v29;
        objc_msgSend(v29, "trophyCaseDidBeginCelebration:", v2);

        swift_unknownObjectRelease(v30);
      }
      else
      {

      }
    }
  }
}

uint64_t sub_100287A6C(uint64_t result, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Class v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;
  id v31;
  uint64_t v32;
  uint64_t Strong;
  char *v34;
  uint64_t v35;
  double v36;
  void *v37;
  double v38;
  char **v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  double v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  NSString v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  Class v62;
  void *v63;
  uint64_t v64;
  uint64_t v65[3];

  if (result > 2)
    return 0;
  if (result < 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!*((_BYTE *)&off_100782110 + result + 32))
  {
    v20 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v21 = objc_msgSend(v20, "fractionalWidthDimension:", 1.0);
    v22 = objc_msgSend(v20, "estimatedDimension:", 44.0);
    v23 = (void *)objc_opt_self(NSCollectionLayoutSize);
    v7 = objc_msgSend(v23, "sizeWithWidthDimension:heightDimension:", v21, v22);

    v24 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v7);
    v25 = objc_msgSend(v20, "fractionalWidthDimension:", 1.0);
    v26 = objc_msgSend(v20, "estimatedDimension:", 44.0);
    v11 = objc_msgSend(v23, "sizeWithWidthDimension:heightDimension:", v25, v26);

    v27 = (void *)objc_opt_self(NSCollectionLayoutGroup);
    v28 = sub_100047110((uint64_t *)&unk_100828340);
    v29 = swift_allocObject(v28, 40, 7);
    *(_OWORD *)(v29 + 16) = xmmword_100623630;
    *(_QWORD *)(v29 + 32) = v24;
    v65[0] = v29;
    specialized Array._endMutation()(v29);
    sub_10001E724(0, &qword_10083C030, NSCollectionLayoutItem_ptr);
    v15 = v24;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v17 = objc_msgSend(v27, "verticalGroupWithLayoutSize:subitems:", v11, isa, swift_bridgeObjectRelease(v65[0]).n128_f64[0]);

    v31 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSpacing), "fixedSpacing:", 10.0);
    objc_msgSend(v17, "setInterItemSpacing:", v31);

    v19 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v17);
    objc_msgSend(v19, "setInterGroupSpacing:", 10.0);
    objc_msgSend(v19, "setContentInsets:", 0.0, 10.0, 10.0, 10.0);
    goto LABEL_7;
  }
  if (*((_BYTE *)&off_100782110 + result + 32) == 1)
  {
    v3 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v4 = objc_msgSend(v3, "fractionalWidthDimension:", 1.0);
    v5 = objc_msgSend(v3, "estimatedDimension:", 44.0);
    v6 = (void *)objc_opt_self(NSCollectionLayoutSize);
    v7 = objc_msgSend(v6, "sizeWithWidthDimension:heightDimension:", v4, v5);

    v8 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v7);
    v9 = objc_msgSend(v3, "fractionalWidthDimension:", 1.0);
    v10 = objc_msgSend(v3, "estimatedDimension:", 44.0);
    v11 = objc_msgSend(v6, "sizeWithWidthDimension:heightDimension:", v9, v10);

    v12 = (void *)objc_opt_self(NSCollectionLayoutGroup);
    v13 = sub_100047110((uint64_t *)&unk_100828340);
    v14 = swift_allocObject(v13, 40, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100623630;
    *(_QWORD *)(v14 + 32) = v8;
    v65[0] = v14;
    specialized Array._endMutation()(v14);
    sub_10001E724(0, &qword_10083C030, NSCollectionLayoutItem_ptr);
    v15 = v8;
    v16 = Array._bridgeToObjectiveC()().super.isa;
    v17 = objc_msgSend(v12, "horizontalGroupWithLayoutSize:subitems:", v11, v16, swift_bridgeObjectRelease(v65[0]).n128_f64[0]);

    v18 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSpacing), "fixedSpacing:", 10.0);
    objc_msgSend(v17, "setInterItemSpacing:", v18);

    v19 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v17);
    objc_msgSend(v19, "setInterGroupSpacing:", 10.0);
    objc_msgSend(v19, "setContentInsets:", 0.0, 10.0, 0.0, 10.0);
LABEL_7:

    return (uint64_t)v19;
  }
  v32 = a3 + 16;
  swift_beginAccess(a3 + 16, v65, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v32);
  if (!Strong)
    return 0;
  v34 = (char *)Strong;
  v35 = OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow;
  v36 = *(double *)(Strong + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow);
  v37 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  if (v36 <= 1.0)
  {
    v39 = &selRef_estimatedDimension_;
    v38 = 44.0;
  }
  else
  {
    v38 = *(double *)&v34[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxCellHeight];
    v39 = &selRef_absoluteDimension_;
  }
  v40 = objc_msgSend(v37, *v39, v38);
  v41 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v42 = objc_msgSend(v41, "fractionalWidthDimension:", 1.0 / *(double *)&v34[v35]);
  v43 = (void *)objc_opt_self(NSCollectionLayoutSize);
  v44 = objc_msgSend(v43, "sizeWithWidthDimension:heightDimension:", v42, v40);

  v63 = v44;
  v45 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v44);
  v46 = objc_msgSend(v41, "fractionalWidthDimension:", 1.0);
  v47 = objc_msgSend(v43, "sizeWithWidthDimension:heightDimension:", v46, v40);

  result = objc_opt_self(NSCollectionLayoutGroup);
  v48 = *(double *)&v34[v35];
  if ((~*(_QWORD *)&v48 & 0x7FF0000000000000) == 0)
    goto LABEL_19;
  if (v48 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v48 < 9.22337204e18)
  {
    v49 = objc_msgSend((id)result, "horizontalGroupWithLayoutSize:repeatingSubitem:count:", v47, v45, (uint64_t)v48);
    v50 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSpacing), "fixedSpacing:", 10.0);
    objc_msgSend(v49, "setInterItemSpacing:", v50);

    v51 = objc_msgSend(v41, "fractionalWidthDimension:", 1.0);
    v52 = objc_msgSend(v41, "estimatedDimension:", 44.0);
    v53 = objc_msgSend(v43, "sizeWithWidthDimension:heightDimension:", v51, v52);

    static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
    v55 = v54;
    v56 = v53;
    v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v55);
    v58 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v56, v57, 5);

    v19 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v49);
    objc_msgSend(v19, "setInterGroupSpacing:", 10.0);
    v59 = sub_100047110((uint64_t *)&unk_100828340);
    v60 = swift_allocObject(v59, 40, 7);
    *(_OWORD *)(v60 + 16) = xmmword_100623630;
    *(_QWORD *)(v60 + 32) = v58;
    v64 = v60;
    specialized Array._endMutation()(v60);
    sub_10001E724(0, (unint64_t *)&unk_10082B4F0, NSCollectionLayoutBoundarySupplementaryItem_ptr);
    v61 = v58;
    v62 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v19, "setBoundarySupplementaryItems:", v62, swift_bridgeObjectRelease(v64).n128_f64[0]);

    objc_msgSend(v19, "setContentInsets:", 10.0, 10.0, 10.0, 10.0);
    return (uint64_t)v19;
  }
LABEL_21:
  __break(1u);
  return result;
}

id sub_100288390(void *a1, char a2, unsigned __int8 a3, char a4)
{
  uint64_t v4;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  __int128 v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v29 = type metadata accessor for TrophyCaseAwardDetailViewController();
  v6 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_healthStore);
  v7 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_friendListManager);
  sub_1000252E0(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider, (uint64_t)v33);
  v8 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_badgeImageFactory);
  v9 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_resourceProvider);
  v10 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_formattingManager);
  v11 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_localizationProvider);
  v12 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_pauseRingsCoordinator);
  v22 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_fitnessAppContext);
  v23 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_workoutFormattingManager);
  v13 = v34;
  v25 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_workoutDataProvider);
  v26 = v35;
  v28 = sub_10017C044((uint64_t)v33, v34);
  v27 = a1;
  v24 = v6;
  v14 = v7;
  v15 = v8;
  v16 = v9;
  v17 = v10;
  v18 = v11;
  *(_QWORD *)&v21 = v12;
  *((_QWORD *)&v21 + 1) = v22;
  v19 = sub_1005A7AB0(v27, v24, v14, v28, v15, v16, v17, v18, v21, v23, v25, a3, a4, a2, 1, 0, v29, v13, v26);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v33);
  return v19;
}

void sub_10028855C(void *a1, uint64_t a2, void *a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  char *v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  void (*v52)(char *, uint64_t, uint64_t);
  id v53;
  unsigned int v54;
  uint64_t v55;
  id v56;
  id v57;
  void **aBlock;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  void *v61;
  void (*v62)();
  uint64_t v63;

  v56 = a3;
  v55 = a4;
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v23 = __chkstk_darwin(v22).n128_u64[0];
  v25 = (char *)&v52 - v24;
  v53 = a1;
  LOBYTE(a1) = objc_msgSend(a1, "unearned", v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v25, a2, v18);
  if ((a1 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
    v26 = 0;
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, enum case for AAUIAwardsDataProviderSection.goForIt(_:), v18);
    v27 = sub_100028404((unint64_t *)&unk_100828320, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AAUIAwardsDataProviderSection, (uint64_t)&protocol conformance descriptor for AAUIAwardsDataProviderSection);
    v28 = dispatch thunk of static Equatable.== infix(_:_:)(v25, v21, v18, v27);
    v29 = *(void (**)(char *, uint64_t))(v19 + 8);
    v29(v21, v18);
    v29(v25, v18);
    v26 = v28 ^ 1;
  }
  v54 = v26 & 1;
  v30 = v57;
  v53 = sub_100288390(v53, v26 & 1, 0, 0);
  v31 = swift_allocObject(&unk_100793068, 24, 7);
  swift_unknownObjectWeakInit(v31 + 16, v30);
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v32 = v55;
  v52((char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v55, v14);
  v33 = *(unsigned __int8 *)(v15 + 80);
  v34 = (v33 + 24) & ~v33;
  v35 = v34 + v16;
  v36 = v33 | 7;
  v37 = swift_allocObject(&unk_100793130, v35, v33 | 7);
  *(_QWORD *)(v37 + 16) = v31;
  v38 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
  v38(v37 + v34, v17, v14);
  v39 = swift_allocObject(&unk_100793068, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16, v57);
  v52(v17, v32, v14);
  v40 = swift_allocObject(&unk_100793158, v35, v36);
  *(_QWORD *)(v40 + 16) = v39;
  v38(v40 + v34, v17, v14);
  v41 = objc_allocWithZone((Class)AAUIAchievementDetailTransitionAnimator);
  v62 = sub_10028B39C;
  v63 = v37;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_10002D0F8;
  v61 = &unk_100793170;
  v42 = _Block_copy(&aBlock);
  v43 = v63;
  v44 = v53;
  v55 = v37;
  swift_retain(v37);
  swift_retain(v40);
  v45 = v56;
  v46 = (char *)v57;
  swift_release(v43);
  v62 = sub_10028B428;
  v63 = v40;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_10002D0F8;
  v61 = &unk_100793198;
  v47 = _Block_copy(&aBlock);
  swift_release(v63);
  v48 = objc_msgSend(v41, "initWithPresentingViewController:detailViewController:shouldPlayFlipInAnimation:initialBadgeFrame:conversionView:didStartAnimationBlock:didFinishAnimationBlock:", v46, v44, v54, v45, v42, v47, a5, a6, a7, a8);

  _Block_release(v47);
  _Block_release(v42);
  v49 = *(void **)&v46[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimator];
  *(_QWORD *)&v46[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimator] = v48;

  v50 = objc_msgSend(v46, "navigationController");
  if (v50)
  {
    v51 = v50;
    objc_msgSend(v50, "pushViewController:animated:", v44, 1);

  }
  swift_release(v40);
  swift_release(v55);
}

void sub_1002889AC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v4 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    goto LABEL_7;
  v6 = Strong;
  v7 = objc_msgSend(Strong, "collectionView");

  if (!v7)
  {
    __break(1u);
    return;
  }
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(v7, "cellForItemAtIndexPath:", isa);

  if (v9
    && (v18[0] = v9,
        v10 = sub_10001E724(0, (unint64_t *)&qword_10082B508, UICollectionViewCell_ptr),
        v11 = sub_100047110((uint64_t *)&unk_10082B510),
        (swift_dynamicCast(&v15, v18, v10, v11, 6) & 1) != 0))
  {
    if (*((_QWORD *)&v16 + 1))
    {
      sub_10002411C(&v15, (uint64_t)v18);
      v12 = v19;
      v13 = v20;
      sub_100016804(v18, v19);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v13 + 24))(a3 & 1, v12, v13);
      _s10FitnessApp24HistoryViewActionContextVwxx_0(v18);
      return;
    }
  }
  else
  {
LABEL_7:
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
  }
  sub_10001BE90((uint64_t)&v15, &qword_10082B500);
}

uint64_t type metadata accessor for TrophyCaseViewController()
{
  return objc_opt_self(_TtC10FitnessApp24TrophyCaseViewController);
}

void sub_100288B88()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  double v5;
  id v6;
  void *v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  CGRect v44;

  v1 = v0;
  v2 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v43 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow];
  v39 = OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxCellHeight;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxCellHeight] = 0;
  v40 = OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxSectionLabelHeight;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxSectionLabelHeight] = 0;
  if (v5 > 1.0)
  {
    v6 = objc_msgSend(v0, "view");
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "bounds");
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;

      v44.origin.x = v9;
      v44.origin.y = v11;
      v44.size.width = v13;
      v44.size.height = v15;
      v16 = (CGRectGetWidth(v44) + -20.0) * 0.5 + -5.0;
      v17 = &v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider];
      v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24];
      v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 32];
      sub_100016804(&v1[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider], v19);
      v20 = dispatch thunk of AAUIAwardsDataProviding.otherSections()(v19, v18);
      v21 = sub_100226E48(v20, v16);
      *(double *)&v1[v40] = v21;
      v22 = *(_QWORD *)(v20 + 16);
      if (v22)
      {
        v37 = v20;
        v38 = OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_localizationProvider;
        v23 = v20 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
        v24 = *(_QWORD *)(v43 + 72);
        v41 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 16);
        v42 = v24;
        v41(v4, v23, v2);
        while (1)
        {
          v25 = *((_QWORD *)v17 + 3);
          v26 = *((_QWORD *)v17 + 4);
          sub_100016804(v17, v25);
          v27 = dispatch thunk of AAUIAwardsDataProviding.topAchievement(forSection:)(v4, v25, v26);
          if (v27)
          {
            v28 = (void *)v27;
            v29 = *((_QWORD *)v17 + 3);
            v30 = *((_QWORD *)v17 + 4);
            sub_100016804(v17, v29);
            v31 = dispatch thunk of AAUIAwardsDataProviding.achievementCount(forSection:)(v4, v29, v30);
            sub_100227218((int)v4, v28, *(double *)&v1[v40], v16, v31, *(void **)&v1[v38], 1);
            v33 = v32;
            v34 = v39;
            v35 = *(double *)&v1[v39];

            if (v35 > v33)
              v33 = v35;
            (*(void (**)(char *, uint64_t))(v43 + 8))(v4, v2);
            *(double *)&v1[v34] = v33;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v43 + 8))(v4, v2);
          }
          v23 += v42;
          if (!--v22)
            break;
          v41(v4, v23, v2);
        }
        swift_bridgeObjectRelease(v37);
      }
      else
      {
        swift_bridgeObjectRelease(v20);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100288E50(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "collectionView");

    if (v4)
    {
      objc_msgSend(v4, "reloadData");

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100288ED0()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldReloadCollectionView) = 1;
  sub_100287344();
}

uint64_t sub_100288F3C(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  NSString v31;
  Class v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  NSString v37;
  Class isa;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  NSString v44;
  Class v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  uint64_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(void);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t *v80;
  __int128 *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  void (*v101)(uint64_t, char *, uint64_t);
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  id v108;
  void *v109;
  double v110;
  CGFloat v111;
  double v112;
  CGFloat v113;
  double v114;
  CGFloat v115;
  double v116;
  CGFloat v117;
  CGFloat v118;
  _UNKNOWN **v119;
  uint64_t v120;
  _QWORD *v121;
  __n128 v122;
  id v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  _BOOL4 v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  void (*v139)(char *, uint64_t, uint64_t);
  id v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  uint64_t v147;
  __int128 v148;
  __int128 v149;
  _UNKNOWN **v150;
  _OWORD v151[2];
  uint64_t v152;
  CGRect v153;

  v140 = a1;
  v136 = type metadata accessor for IndexPath(0);
  v135 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v133 = v4;
  v134 = (char *)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v144 = *(_QWORD *)(v145 - 8);
  v5 = *(_QWORD *)(v144 + 64);
  __chkstk_darwin(v145);
  v143 = (char *)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v132 = (char *)&v125 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v125 - v9;
  __chkstk_darwin(v11);
  v137 = (char *)&v125 - v12;
  v13 = sub_100047110(&qword_100828318);
  __chkstk_darwin(v13);
  v139 = (void (*)(char *, uint64_t, uint64_t))((char *)&v125 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v17 = (char *)&v125 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v125 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v125 - v22;
  __chkstk_darwin(v24);
  v141 = (uint64_t)&v125 - v25;
  v138 = v2;
  v26 = &v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider];
  v28 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24];
  v27 = *(_QWORD *)&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 32];
  sub_100016804(&v2[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider], v28);
  v29 = dispatch thunk of AAUIAwardsDataProviding.otherSections()(v28, v27);
  v142 = a2;
  result = IndexPath.section.getter(v29);
  if (result > 2)
  {
    swift_bridgeObjectRelease(v29);
    return (uint64_t)objc_msgSend(objc_allocWithZone((Class)UICollectionViewCell), "init");
  }
  if (result < 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  if (!*((_BYTE *)&off_1007820E8 + result + 32))
  {
    swift_bridgeObjectRelease(v29);
    v37 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v39 = objc_msgSend(v140, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v37, isa);

    v40 = type metadata accessor for TrophyCaseGoForItCell();
    v41 = swift_dynamicCastClass(v39, v40);
    if (v41)
    {
      *((_QWORD *)&v149 + 1) = v40;
      v150 = &off_100791FF8;
      *(_QWORD *)&v148 = v41;
      v42 = v39;
      v43 = v39;
    }
    else
    {
      v42 = v39;
      v150 = 0;
      v148 = 0u;
      v149 = 0u;
    }
    v55 = v145;
    sub_100045AD4((uint64_t)&v148, (uint64_t)v151, &qword_10082B500);
    v65 = *((_QWORD *)v26 + 3);
    v66 = *((_QWORD *)v26 + 4);
    sub_100016804(v26, v65);
    v67 = *(void (**)(void))(v144 + 104);
    v68 = v137;
    ((void (*)(char *, _QWORD, uint64_t))v67)(v137, enum case for AAUIAwardsDataProviderSection.goForIt(_:), v55);
    v57 = (_QWORD *)dispatch thunk of AAUIAwardsDataProviding.achievementStack(forSection:)(v68, v65, v66);
    (*(void (**)(char *, uint64_t))(v144 + 8))(v68, v55);
    v53 = v141;
    v67();
    v54 = v144;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v144 + 56))(v53, 0, 1, v55);
    v59 = 0;
    LODWORD(v140) = 2;
    v33 = v42;
    v58 = (uint64_t)v139;
    goto LABEL_28;
  }
  if (*((_BYTE *)&off_1007820E8 + result + 32) == 1)
  {
    swift_bridgeObjectRelease(v29);
    v31 = String._bridgeToObjectiveC()();
    v32 = IndexPath._bridgeToObjectiveC()().super.isa;
    v33 = objc_msgSend(v140, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v31, v32);

    v34 = type metadata accessor for TrophyCaseSectionCell();
    v35 = swift_dynamicCastClass(v33, v34);
    if (v35)
    {
      *((_QWORD *)&v149 + 1) = v34;
      v150 = &off_10078FD90;
      *(_QWORD *)&v148 = v35;
      v36 = v33;
    }
    else
    {
      v150 = 0;
      v148 = 0u;
      v149 = 0u;
    }
    v55 = v145;
    v54 = v144;
    sub_100045AD4((uint64_t)&v148, (uint64_t)v151, &qword_10082B500);
    v60 = *((_QWORD *)v26 + 3);
    v61 = *((_QWORD *)v26 + 4);
    sub_100016804(v26, v60);
    v62 = v61;
    v53 = v141;
    dispatch thunk of AAUIAwardsDataProviding.mostRecentSection()(v60, v62);
    sub_100021CC0(v53, (uint64_t)v23, &qword_100828318);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v23, 1, v55) == 1)
    {
      sub_10001BE90((uint64_t)v23, &qword_100828318);
      v59 = 0;
      v57 = _swiftEmptyArrayStorage;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v10, v23, v55);
      v63 = *((_QWORD *)v26 + 3);
      v64 = *((_QWORD *)v26 + 4);
      sub_100016804(v26, v63);
      v57 = (_QWORD *)dispatch thunk of AAUIAwardsDataProviding.achievementStack(forSection:)(v10, v63, v64);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v10, v55);
      v59 = 0;
    }
    LODWORD(v140) = 1;
    v56 = v143;
    v58 = (uint64_t)v139;
    goto LABEL_29;
  }
  v44 = String._bridgeToObjectiveC()();
  v45 = IndexPath._bridgeToObjectiveC()().super.isa;
  v46 = objc_msgSend(v140, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v44, v45);

  v131 = *(double *)&v138[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow] > 1.0;
  v47 = *(_QWORD *)(v29 + 16);
  v48 = v46;
  swift_bridgeObjectRelease(v29);
  if (IndexPath.row.getter(v49) < v47)
  {
    v50 = type metadata accessor for TrophyCaseSectionCell();
    v51 = swift_dynamicCastClass(v48, v50);
    v52 = v144;
    v53 = v141;
    v33 = v48;
    if (v51)
    {
      *((_QWORD *)&v149 + 1) = v50;
      v150 = &off_10078FD90;
      *(_QWORD *)&v148 = v51;
    }
    else
    {

      v150 = 0;
      v148 = 0u;
      v149 = 0u;
    }
    sub_100045AD4((uint64_t)&v148, (uint64_t)v151, &qword_10082B500);
    v69 = *((_QWORD *)v26 + 3);
    v70 = *((_QWORD *)v26 + 4);
    sub_100016804(v26, v69);
    v71 = dispatch thunk of AAUIAwardsDataProviding.otherSections()(v69, v70);
    result = IndexPath.row.getter(v71);
    if ((result & 0x8000000000000000) == 0)
    {
      if ((unint64_t)result < *(_QWORD *)(v71 + 16))
      {
        v72 = v145;
        (*(void (**)(char *, unint64_t, uint64_t))(v52 + 16))(v20, v71+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * result, v145);
        v73 = swift_bridgeObjectRelease(v71);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v52 + 56))(v20, 0, 1, v72, v73);
        v74 = (uint64_t)v20;
        v55 = v72;
        sub_100045AD4(v74, v53, &qword_100828318);
        sub_100021CC0(v53, (uint64_t)v17, &qword_100828318);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v17, 1, v72) == 1)
        {
          sub_10001BE90((uint64_t)v17, &qword_100828318);
          v57 = _swiftEmptyArrayStorage;
        }
        else
        {
          v75 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
          v130 = v33;
          v76 = v132;
          v75(v132, v17, v72);
          v77 = *((_QWORD *)v26 + 3);
          v78 = *((_QWORD *)v26 + 4);
          sub_100016804(v26, v77);
          v57 = (_QWORD *)dispatch thunk of AAUIAwardsDataProviding.achievementStack(forSection:)(v76, v77, v78);
          v79 = v76;
          v33 = v130;
          (*(void (**)(char *, uint64_t))(v52 + 8))(v79, v72);
        }
        LODWORD(v140) = 2;
        v58 = (uint64_t)v139;
        v59 = v131;
        v54 = v52;
LABEL_28:
        v56 = v143;
        goto LABEL_29;
      }
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }

  v54 = v144;
  v53 = v141;
  v55 = v145;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56))(v141, 1, 1, v145);
  v152 = 0;
  memset(v151, 0, sizeof(v151));
  LODWORD(v140) = 2;
  v56 = v143;
  v33 = v48;
  v57 = _swiftEmptyArrayStorage;
  v58 = (uint64_t)v139;
  v59 = v131;
LABEL_29:
  sub_100021CC0(v53, v58, &qword_100828318);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v58, 1, v55) == 1)
  {
    swift_bridgeObjectRelease(v57);
    v80 = &qword_100828318;
    v81 = (__int128 *)v58;
LABEL_35:
    sub_10001BE90((uint64_t)v81, v80);
    v123 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewCell), "init");

    sub_10001BE90(v53, &qword_100828318);
    sub_10001BE90((uint64_t)v151, &qword_10082B500);
    return (uint64_t)v123;
  }
  v139 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 32);
  v139(v56, v58, v55);
  sub_100021CC0((uint64_t)v151, (uint64_t)&v146, &qword_10082B500);
  if (!v147)
  {
    (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v55);
    swift_bridgeObjectRelease(v57);
    v80 = &qword_10082B500;
    v81 = &v146;
    goto LABEL_35;
  }
  v125 = v57;
  v131 = v59;
  sub_10002411C(&v146, (uint64_t)&v148);
  v82 = *((_QWORD *)v26 + 3);
  v83 = *((_QWORD *)v26 + 4);
  sub_100016804(v26, v82);
  v84 = dispatch thunk of AAUIAwardsDataProviding.topAchievement(forSection:)(v56, v82, v83);
  v127 = (void *)v84;
  v85 = *((_QWORD *)v26 + 3);
  v86 = *((_QWORD *)v26 + 4);
  sub_100016804(v26, v85);
  v126 = dispatch thunk of AAUIAwardsDataProviding.achievementCount(forSection:)(v56, v85, v86);
  v129 = swift_allocObject(&unk_100793068, 24, 7);
  swift_unknownObjectWeakInit(v129 + 16, v138);
  v87 = swift_allocObject(&unk_1007930B8, 24, 7);
  v130 = v33;
  swift_unknownObjectWeakInit(v87 + 16, v33);
  v132 = *(char **)(v54 + 16);
  v88 = v137;
  ((void (*)(char *, char *, uint64_t))v132)(v137, v143, v145);
  v89 = v54;
  v90 = v135;
  v91 = *(void (**)(char *, uint64_t, uint64_t))(v135 + 16);
  v92 = v134;
  v93 = v5;
  v128 = v5;
  v94 = v136;
  v91(v134, v142, v136);
  v95 = *(unsigned __int8 *)(v89 + 80);
  v96 = (v95 + 40) & ~v95;
  v142 = v95 | 7;
  v97 = *(unsigned __int8 *)(v90 + 80);
  v98 = (v93 + v97 + v96) & ~v97;
  v99 = (char *)swift_allocObject(&unk_1007930E0, v98 + v133, v95 | 7 | v97);
  *((_QWORD *)v99 + 2) = v84;
  *((_QWORD *)v99 + 3) = v87;
  v100 = v143;
  *((_QWORD *)v99 + 4) = v129;
  v101 = (void (*)(uint64_t, char *, uint64_t))v139;
  v139(&v99[v96], (uint64_t)v88, v145);
  (*(void (**)(char *, char *, uint64_t))(v90 + 32))(&v99[v98], v92, v94);
  v102 = swift_allocObject(&unk_100793068, 24, 7);
  v103 = v138;
  swift_unknownObjectWeakInit(v102 + 16, v138);
  ((void (*)(char *, char *, uint64_t))v132)(v88, v100, v145);
  v104 = v145;
  v105 = (v95 + 24) & ~v95;
  v106 = swift_allocObject(&unk_100793108, v105 + v128, v142);
  *(_QWORD *)(v106 + 16) = v102;
  v107 = v127;
  v101(v106 + v105, v88, v104);
  v108 = v107;
  result = (uint64_t)objc_msgSend(v103, "view");
  if (result)
  {
    v109 = (void *)result;
    objc_msgSend((id)result, "bounds");
    v111 = v110;
    v113 = v112;
    v115 = v114;
    v117 = v116;

    v153.origin.x = v111;
    v153.origin.y = v113;
    v153.size.width = v115;
    v153.size.height = v117;
    v118 = (CGRectGetWidth(v153) + -20.0) * 0.5 + -5.0;
    v120 = *((_QWORD *)&v149 + 1);
    v119 = v150;
    sub_100016804(&v148, *((uint64_t *)&v149 + 1));
    v124 = v120;
    v121 = v125;
    ((void (*)(char *, void *, _QWORD *, uint64_t, _QWORD, _QWORD, _QWORD, _BOOL4, CGFloat, double, uint64_t (*)(), char *, void (*)(), uint64_t, uint64_t, _UNKNOWN **))v119[5])(v100, v107, v125, v126, *(_QWORD *)&v103[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_badgeImageFactory], *(_QWORD *)&v103[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_localizationProvider], v140, v131, v118, *(double *)&v103[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxSectionLabelHeight], sub_10028B2EC, v99, sub_10028B360, v106, v124, v119);
    swift_bridgeObjectRelease(v121);

    swift_release(v99);
    v122 = swift_release(v106);
    (*(void (**)(char *, uint64_t, __n128))(v144 + 8))(v100, v104, v122);
    sub_10001BE90(v141, &qword_100828318);
    sub_10001BE90((uint64_t)v151, &qword_10082B500);
    _s10FitnessApp24HistoryViewActionContextVwxx_0(&v148);
    return (uint64_t)v130;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100289D10(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  __int128 v24[2];
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];

  if (result)
  {
    v8 = (void *)result;
    v9 = a2 + 16;
    swift_beginAccess(a2 + 16, v30, 0, 0);
    result = swift_unknownObjectWeakLoadStrong(v9);
    if (result)
    {
      v10 = (void *)result;
      v26 = result;
      v11 = sub_10001E724(0, (unint64_t *)&qword_10082B508, UICollectionViewCell_ptr);
      v12 = v8;
      v13 = v10;
      v14 = sub_100047110((uint64_t *)&unk_10082B510);
      if ((swift_dynamicCast(v24, &v26, v11, v14, 6) & 1) != 0)
      {
        v15 = a3 + 16;
        sub_10002411C(v24, (uint64_t)v27);
        swift_beginAccess(v15, v24, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(v15);
        if (Strong)
        {
          v17 = (void *)Strong;
          v18 = v28;
          v19 = v29;
          sub_100016804(v27, v28);
          v20 = (*(double (**)(uint64_t, uint64_t))(v19 + 32))(v18, v19);
          sub_10028855C(v12, a4, v13, a5, v20, v21, v22, v23);

        }
        return _s10FitnessApp24HistoryViewActionContextVwxx_0(v27);
      }
      else
      {
        v25 = 0;
        memset(v24, 0, sizeof(v24));

        return sub_10001BE90((uint64_t)v24, &qword_10082B500);
      }
    }
  }
  return result;
}

void sub_100289E88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1002865E0(a2);

  }
}

void sub_10028A044(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString *v17;
  NSString v18;
  Class isa;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  if (v7 == a2 && v8 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v10 = v8;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a2, a3, 0);
    swift_bridgeObjectRelease(v10);
    if ((v11 & 1) == 0)
    {
      objc_msgSend(objc_allocWithZone((Class)UICollectionReusableView), "init");
      return;
    }
  }
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24);
  v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 32);
  sub_100016804((_QWORD *)(v3 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider), v12);
  v14 = dispatch thunk of AAUIAwardsDataProviding.otherSections()(v12, v13);
  v15 = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRelease(v14);
  v16 = v15 + 2;
  if (__OFADD__(v15, 2))
  {
    __break(1u);
  }
  else
  {
    v17 = UICollectionElementKindSectionFooter;
    v18 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v20 = objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v17, v18, isa);

    v21 = type metadata accessor for TrophyCaseViewControllerFooterView();
    if (swift_dynamicCastClass(v20, v21))
    {
      v22 = v20;
      v23 = static AAUIAwardsDataProviderSection.allCases.getter();
      v24 = *(_QWORD *)(v23 + 16);
      swift_bridgeObjectRelease(v23);
      sub_100286A60(v16 < v24);

    }
  }
}

uint64_t sub_10028A3F0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10028A414()
{
  uint64_t v0;

  sub_100288E50(v0);
}

id sub_10028A41C(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, char a14, char a15, _BYTE *a16, uint64_t a17, uint64_t a18)
{
  id v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  id result;
  void *v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t ObjCClassFromMetadata;
  NSString v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  NSString *v54;
  NSString v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  _QWORD *v64;
  id v66;
  id v68;
  id v70;
  id v71;
  id v73;
  id v75;
  id v76;
  id v77;
  _QWORD aBlock[5];
  uint64_t v79;
  objc_super v80;
  _QWORD v81[6];

  v81[3] = a17;
  v81[4] = a18;
  v64 = sub_10004C480(v81);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a17 - 8) + 32))(v64, a3, a17);
  swift_unknownObjectWeakInit(&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_delegate], 0);
  a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_initialAchievementPresented] = 0;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimator] = 0;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimatorFromViewController] = 0;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow] = 0x4000000000000000;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxCellHeight] = 0;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxSectionLabelHeight] = 0;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_cellWidth] = 0;
  a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldReloadCollectionView] = 0;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_healthStore] = a1;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_friendListManager] = a2;
  sub_1000252E0((uint64_t)v81, (uint64_t)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider]);
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_badgeImageFactory] = a4;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_formattingManager] = a5;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_resourceProvider] = a6;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_localizationProvider] = a7;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_pauseRingsCoordinator] = a8;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_fitnessAppContext] = a9;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_workoutFormattingManager] = a10;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_workoutDataProvider] = a11;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_wheelchairUseCache] = a12;
  *(_QWORD *)&a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_initialAchievement] = a13;
  a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldShowCelebration] = a14;
  a16[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_forModalPresentation] = a15;
  v23 = objc_allocWithZone((Class)UICollectionViewLayout);
  v77 = a13;
  v76 = a1;
  v68 = a2;
  v70 = a4;
  v66 = a5;
  v63 = a6;
  v62 = a7;
  v75 = a8;
  v24 = a9;
  v73 = a10;
  v71 = a11;
  v25 = a12;
  v26 = objc_msgSend(v23, "init");
  v80.receiver = a16;
  v80.super_class = (Class)type metadata accessor for TrophyCaseViewController();
  v27 = objc_msgSendSuper2(&v80, "initWithCollectionViewLayout:", v26);

  v28 = v27;
  v29 = objc_msgSend(v28, "navigationItem");
  objc_msgSend(v29, "setLargeTitleDisplayMode:", 1);

  v30 = objc_msgSend(v28, "navigationItem");
  v31 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v32 = String._bridgeToObjectiveC()();
  v33 = objc_msgSend(v31, "localizedStringForKey:value:table:", v32, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v35 = v34;

  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "setTitle:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

  result = objc_msgSend(v28, "collectionView");
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v38 = result;
  v39 = swift_allocObject(&unk_100793068, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16, v28);
  v40 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  aBlock[4] = sub_10028B474;
  v79 = v39;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100319084;
  aBlock[3] = &unk_1007931C0;
  v41 = _Block_copy(aBlock);
  v42 = objc_msgSend(v40, "initWithSectionProvider:", v41);
  _Block_release(v41);
  objc_msgSend(v38, "setCollectionViewLayout:", v42, swift_release(v79).n128_f64[0]);

  result = objc_msgSend(v28, "collectionView");
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v43 = result;
  v44 = type metadata accessor for TrophyCaseSectionCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v44);
  v46 = String._bridgeToObjectiveC()();
  objc_msgSend(v43, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v46);

  result = objc_msgSend(v28, "collectionView");
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v47 = result;
  v48 = type metadata accessor for TrophyCaseGoForItCell();
  v49 = swift_getObjCClassFromMetadata(v48);
  v50 = String._bridgeToObjectiveC()();
  objc_msgSend(v47, "registerClass:forCellWithReuseIdentifier:", v49, v50);

  result = objc_msgSend(v28, "collectionView");
  if (result)
  {
    v51 = result;
    v52 = type metadata accessor for TrophyCaseViewControllerFooterView();
    v53 = swift_getObjCClassFromMetadata(v52);
    v54 = UICollectionElementKindSectionFooter;
    v55 = String._bridgeToObjectiveC()();
    objc_msgSend(v51, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v53, v54, v55);

    v57 = sub_100028404(&qword_10082B528, v56, (uint64_t (*)(uint64_t))type metadata accessor for TrophyCaseViewController, (uint64_t)&unk_100632308);
    v58 = v28;
    dispatch thunk of AAUIAwardsDataProviding.add(observer:)(v58, v57, a17, a18);

    objc_msgSend(v25, "addObserver:", v58);
    v59 = *(void **)&v24[OBJC_IVAR___CHFitnessAppContext_pregnancyStateProvider];
    objc_msgSend(v62, "setIsPregnant:", objc_msgSend(v59, "isPregnant"));
    v60 = v58;
    v61 = v59;
    objc_msgSend(v61, "addObserver:", v60);

    _s10FitnessApp24HistoryViewActionContextVwxx_0(v81);
    return v60;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_10028AB40()
{
  _BYTE *v0;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_delegate], 0);
  v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_initialAchievementPresented] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimatorFromViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_numberOfCellPerRow] = 0x4000000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxCellHeight] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_maxSectionLabelHeight] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_cellWidth] = 0;
  v0[OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_shouldReloadCollectionView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/TrophyCaseViewController.swift", 41, 2, 173, 0);
  __break(1u);
}

void sub_10028AC14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = sub_100047110(&qword_100828318);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 <= 2)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (*((_BYTE *)&off_100782138 + a1 + 32))
    {
      if (*((_BYTE *)&off_100782138 + a1 + 32) == 1)
      {
        v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24);
        v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 32);
        sub_100016804((_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider), v10);
        dispatch thunk of AAUIAwardsDataProviding.mostRecentSection()(v10, v11);
        (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
        sub_10001BE90((uint64_t)v5, &qword_100828318);
      }
      else
      {
        v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24);
        v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 32);
        sub_100016804((_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider), v14);
        v16 = dispatch thunk of AAUIAwardsDataProviding.otherSections()(v14, v15);
        swift_bridgeObjectRelease(v16);
      }
    }
    else
    {
      v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24);
      v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 32);
      sub_100016804((_QWORD *)(v1 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider), v12);
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for AAUIAwardsDataProviderSection.goForIt(_:), v6);
      dispatch thunk of AAUIAwardsDataProviding.achievementCount(forSection:)(v9, v12, v13);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

uint64_t sub_10028ADE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  _QWORD v22[2];

  v1 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100047110(&qword_100828318);
  __chkstk_darwin(v5);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v22 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)v22 - v12;
  result = IndexPath.section.getter(v14);
  if (result > 2)
    return result;
  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!*((_BYTE *)&off_100782160 + result + 32))
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v13, enum case for AAUIAwardsDataProviderSection.goForIt(_:), v1);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v13, 0, 1, v1);
    goto LABEL_10;
  }
  if (*((_BYTE *)&off_100782160 + result + 32) != 1)
  {
    v22[1] = v0;
    v18 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24);
    v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 32);
    sub_100016804((_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider), v18);
    v20 = dispatch thunk of AAUIAwardsDataProviding.otherSections()(v18, v19);
    result = IndexPath.row.getter(v20);
    if ((result & 0x8000000000000000) == 0)
    {
      if ((unint64_t)result < *(_QWORD *)(v20 + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v10, v20+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * result, v1);
        v21 = swift_bridgeObjectRelease(v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v2 + 56))(v10, 0, 1, v1, v21);
        sub_100045AD4((uint64_t)v10, (uint64_t)v13, &qword_100828318);
        goto LABEL_10;
      }
LABEL_17:
      __break(1u);
      return result;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 24);
  v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider + 32);
  sub_100016804((_QWORD *)(v0 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_achievementDataProvider), v16);
  dispatch thunk of AAUIAwardsDataProviding.mostRecentSection()(v16, v17);
LABEL_10:
  sub_100021CC0((uint64_t)v13, (uint64_t)v7, &qword_100828318);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_10001BE90((uint64_t)v13, &qword_100828318);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1002865E0((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v7 = v13;
  }
  return sub_10001BE90((uint64_t)v7, &qword_100828318);
}

uint64_t sub_10028B0A8(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v7;
  id v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t result;

  v4 = a1;
  if (!a1)
    return (uint64_t)v4;
  v5 = v3;
  if (a1 == (void *)2)
  {
    v4 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimatorFromViewController);
    if (!v4)
      return (uint64_t)v4;
    sub_10001E724(0, (unint64_t *)&qword_100828310, UIViewController_ptr);
    v7 = a3;
    v8 = v4;
    v9 = static NSObject.== infix(_:_:)(v8, v7);

    v4 = 0;
    if ((v9 & 1) == 0)
      return (uint64_t)v4;
    goto LABEL_10;
  }
  if (a1 == (void *)1)
  {
    v11 = type metadata accessor for TrophyCaseAwardDetailViewController();
    v4 = 0;
    if (objc_msgSend(a3, "isKindOfClass:", swift_getObjCClassFromMetadata(v11)))
    {
      v12 = type metadata accessor for TrophyCaseViewController();
      if (objc_msgSend(a2, "isKindOfClass:", swift_getObjCClassFromMetadata(v12)))
      {
        v13 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimatorFromViewController);
        *(_QWORD *)(v5 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimatorFromViewController) = a2;
        v14 = a2;

LABEL_10:
        v4 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp24TrophyCaseViewController_transitionAnimator);
        if (v4)
          v15 = v4;
        return (uint64_t)v4;
      }
      return 0;
    }
    return (uint64_t)v4;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000005ELL, 0x8000000100694200, "FitnessApp/TrophyCaseViewController.swift", 41, 2, 613, 0);
  __break(1u);
  return result;
}

uint64_t sub_10028B220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for AAUIAwardsDataProviderSection(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_10028B2EC()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for AAUIAwardsDataProviderSection(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_100289D10(v0[2], v0[3], v0[4], (uint64_t)v0 + v2, (uint64_t)v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_10028B354()
{
  return sub_10028B3B0((uint64_t (*)(_QWORD))&type metadata accessor for AAUIAwardsDataProviderSection);
}

void sub_10028B360()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AAUIAwardsDataProviderSection(0) - 8) + 80);
  sub_100289E88(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_10028B390()
{
  return sub_10028B3B0((uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

void sub_10028B39C()
{
  sub_10028B430(1);
}

uint64_t sub_10028B3A4()
{
  return sub_10028B3B0((uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

uint64_t sub_10028B3B0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 24) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  swift_release(*(_QWORD *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

void sub_10028B428()
{
  sub_10028B430(0);
}

void sub_10028B430(char a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  sub_1002889AC(*(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3), a1);
}

uint64_t sub_10028B474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100287A6C(a1, a2, v2);
}

id sub_10028B488()
{
  return sub_10028B4B0(&OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell____lazy_storage___imageViewWidthConstraint, (SEL *)&selRef_widthAnchor);
}

id sub_10028B49C()
{
  return sub_10028B4B0(&OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell____lazy_storage___imageViewHeightConstraint, (SEL *)&selRef_heightAnchor);
}

id sub_10028B4B0(uint64_t *a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                               + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_iconImageView), *a2));
    v7 = objc_msgSend(v6, "constraintEqualToConstant:", 43.0);

    v8 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v7;
    v5 = v7;

    v4 = 0;
  }
  v9 = v4;
  return v5;
}

id sub_10028B554()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  qword_10082B538 = (uint64_t)result;
  return result;
}

char *sub_10028B598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  NSString v20;
  id v21;
  id v22;
  char *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  objc_super v30;

  v4 = v3;
  v7 = &v3[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_stackViewModel];
  v8 = type metadata accessor for FitnessPlusStackViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_fitnessAppContext] = 0;
  v9 = OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_iconImageView;
  v10 = objc_allocWithZone((Class)UIImageView);
  v11 = v4;
  v12 = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = (void *)UIView.withContentMode(_:)(2);

  v14 = objc_msgSend(v13, "layer");
  objc_msgSend(v14, "setCornerRadius:", 10.0);

  objc_msgSend(v13, "setClipsToBounds:", 1);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v4[v9] = v13;
  v15 = OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_titleLabel;
  v16 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_10081D970 != -1)
    swift_once(&qword_10081D970, sub_10028B554);
  v17 = (void *)UILabel.withFont(_:)(qword_10082B538);

  objc_msgSend(v17, "setLineBreakMode:", 0);
  objc_msgSend(v17, "setNumberOfLines:", 0);
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v15] = v17;
  v18 = OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_subtitleLabel;
  v19 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v18] = v19;
  *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell____lazy_storage___imageViewWidthConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell____lazy_storage___imageViewHeightConstraint] = 0;

  if (a3)
  {
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v20 = 0;
  }
  v30.receiver = v11;
  v30.super_class = (Class)type metadata accessor for StackDetailHeaderCell(0);
  v21 = objc_msgSendSuper2(&v30, "initWithStyle:reuseIdentifier:", a1, v20);

  v22 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v23 = (char *)v21;
  v24 = objc_msgSend(v22, "initWithTarget:action:", v23, "navigateToPlaylist");
  v25 = objc_msgSend(v23, "contentView");
  objc_msgSend(v25, "addGestureRecognizer:", v24);

  v26 = objc_msgSend(v23, "contentView");
  objc_msgSend(v26, "addSubview:", *(_QWORD *)&v23[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_iconImageView]);

  v27 = objc_msgSend(v23, "contentView");
  objc_msgSend(v27, "addSubview:", *(_QWORD *)&v23[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_titleLabel]);

  v28 = objc_msgSend(v23, "contentView");
  objc_msgSend(v28, "addSubview:", *(_QWORD *)&v23[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_subtitleLabel]);

  sub_10028B978();
  return v23;
}

void sub_10028B978()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  void *v44;
  Class isa;

  v44 = (void *)objc_opt_self(NSLayoutConstraint);
  v1 = sub_100047110((uint64_t *)&unk_100828340);
  v2 = swift_allocObject(v1, 128, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100632330;
  v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_iconImageView];
  v4 = objc_msgSend(v3, "topAnchor");
  v5 = objc_msgSend(v0, "contentView");
  v6 = objc_msgSend(v5, "topAnchor");

  v7 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v6, 16.0);
  *(_QWORD *)(v2 + 32) = v7;
  v8 = objc_msgSend(v3, "leadingAnchor");
  v9 = objc_msgSend(v0, "contentView");
  v10 = objc_msgSend(v9, "leadingAnchor");

  v11 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v10, 16.0);
  *(_QWORD *)(v2 + 40) = v11;
  *(_QWORD *)(v2 + 48) = sub_10028B488();
  *(_QWORD *)(v2 + 56) = sub_10028B49C();
  v12 = objc_msgSend(v3, "bottomAnchor");
  v13 = objc_msgSend(v0, "contentView");
  v14 = objc_msgSend(v13, "bottomAnchor");

  v15 = objc_msgSend(v12, "constraintLessThanOrEqualToAnchor:constant:", v14, -27.0);
  *(_QWORD *)(v2 + 64) = v15;
  v16 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_titleLabel];
  v17 = objc_msgSend(v16, "topAnchor");
  v18 = objc_msgSend(v0, "contentView");
  v19 = objc_msgSend(v18, "topAnchor");

  v20 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v19, 16.0);
  *(_QWORD *)(v2 + 72) = v20;
  v21 = objc_msgSend(v16, "leadingAnchor");
  v22 = objc_msgSend(v3, "trailingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, 19.0);

  *(_QWORD *)(v2 + 80) = v23;
  v24 = objc_msgSend(v16, "trailingAnchor");
  v25 = objc_msgSend(v0, "contentView");
  v26 = objc_msgSend(v25, "trailingAnchor");

  v27 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v26, -16.0);
  *(_QWORD *)(v2 + 88) = v27;
  v28 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_subtitleLabel];
  v29 = objc_msgSend(v28, "topAnchor");
  v30 = objc_msgSend(v16, "bottomAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v30, 4.0);

  *(_QWORD *)(v2 + 96) = v31;
  v32 = objc_msgSend(v28, "leadingAnchor");
  v33 = objc_msgSend(v16, "leadingAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v2 + 104) = v34;
  v35 = objc_msgSend(v28, "trailingAnchor");
  v36 = objc_msgSend(v0, "contentView");
  v37 = objc_msgSend(v36, "trailingAnchor");

  v38 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v37, -16.0);
  *(_QWORD *)(v2 + 112) = v38;
  v39 = objc_msgSend(v28, "bottomAnchor");
  v40 = objc_msgSend(v0, "contentView");
  v41 = objc_msgSend(v40, "bottomAnchor");

  v42 = objc_msgSend(v39, "constraintLessThanOrEqualToAnchor:constant:", v41, -27.0);
  *(_QWORD *)(v2 + 120) = v42;
  specialized Array._endMutation()(v43);
  sub_100039898();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v44, "activateConstraints:", isa, swift_bridgeObjectRelease(v2).n128_f64[0]);

}

double sub_10028BEF8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  NSString v15;
  id v16;
  uint64_t Strong;
  void *v18;
  id v19;
  _QWORD *v20;
  double result;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _BYTE v27[24];

  if (a1)
  {
    v9 = a2 + 16;
    v10 = *(_QWORD *)&a1[OBJC_IVAR___CHCatalogItemViewModel_title];
    v11 = objc_allocWithZone((Class)NSMutableAttributedString);
    v12 = a1;
    v13 = objc_msgSend(v11, "initWithAttributedString:", v10);
    v14 = objc_allocWithZone((Class)NSAttributedString);
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v14, "initWithString:", v15);

    objc_msgSend(v13, "appendAttributedString:", v16);
    objc_msgSend(v13, "appendAttributedString:", *(_QWORD *)&v12[OBJC_IVAR___CHCatalogItemViewModel_subtitle]);
    swift_beginAccess(v9, v27, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v9);
    if (Strong)
    {
      v18 = (void *)Strong;
      v19 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_titleLabel);

      objc_msgSend(v19, "setAttributedText:", v13);
    }
    v20 = (_QWORD *)swift_allocObject(&unk_100793230, 40, 7);
    v20[2] = a4;
    v20[3] = a5;
    v20[4] = a2;
    sub_10003AFE0(a4, a5);
    swift_retain(a2);
    sub_10039636C(v12, (uint64_t)sub_10028C924, (uint64_t)v20, 135.0, 76.0);

    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  else
  {
    v22 = static os_log_type_t.error.getter(0);
    v23 = (void *)HKLogActivity;
    v24 = sub_100047110((uint64_t *)&unk_100827460);
    v25 = swift_allocObject(v24, 72, 7);
    *(_OWORD *)(v25 + 16) = xmmword_100622F90;
    *(_QWORD *)(v25 + 56) = &type metadata for String;
    *(_QWORD *)(v25 + 64) = sub_100038CF8();
    *(_QWORD *)(v25 + 32) = 0xD000000000000043;
    *(_QWORD *)(v25 + 40) = 0x8000000100694470;
    v26 = v23;
    os_log(_:dso:log:_:_:)(v22, &_mh_execute_header, v26, "%@ failed to fetch stack view model", 35, 2, v25);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v25).n128_u64[0];
  }
  return result;
}

void sub_10028C198(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  _BYTE v16[24];
  _BYTE v17[24];
  _BYTE v18[24];

  if (a1)
  {
    v6 = a4 + 16;
    swift_beginAccess(a4 + 16, v18, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    if (Strong)
    {
      v8 = (void *)Strong;
      v9 = sub_10028B488();

      objc_msgSend(v9, "setConstant:", 135.0);
    }
    swift_beginAccess(v6, v17, 0, 0);
    v10 = swift_unknownObjectWeakLoadStrong(v6);
    if (v10)
    {
      v11 = (void *)v10;
      v12 = sub_10028B49C();

      objc_msgSend(v12, "setConstant:", 76.0);
    }
    swift_beginAccess(v6, v16, 0, 0);
    v13 = swift_unknownObjectWeakLoadStrong(v6);
    if (v13)
    {
      v14 = (void *)v13;
      v15 = *(id *)(v13 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_iconImageView);

      objc_msgSend(v15, "setImage:", a1);
    }
  }
  if (a2)
    a2();
}

uint64_t sub_10028C2DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  _BYTE v17[24];

  v1 = sub_100047110((uint64_t *)&unk_100828380);
  __chkstk_darwin(v1);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for FitnessPlusStackViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = v0 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_stackViewModel;
  swift_beginAccess(v0 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_stackViewModel, v17, 0, 0);
  sub_10028C930(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_10028C978((uint64_t)v3);
  sub_10027D4A8((uint64_t)v3, (uint64_t)v7);
  v10 = (uint64_t *)&v7[*(int *)(v4 + 24)];
  v11 = v10[1];
  v12 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_fitnessAppContext);
  if (v11)
  {
    if (v12)
    {
      v13 = *v10;
      swift_bridgeObjectRetain(v10[1]);
      v14 = v12;
      sub_100533040(v13, v11);
      swift_bridgeObjectRelease(v11);

    }
  }
  else if (v12)
  {
    v15 = v12;
    sub_100533634((uint64_t)v7);

  }
  return sub_100149D44((uint64_t)v7);
}

id sub_10028C4A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StackDetailHeaderCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10028C564()
{
  return type metadata accessor for StackDetailHeaderCell(0);
}

uint64_t type metadata accessor for StackDetailHeaderCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10082B5A0;
  if (!qword_10082B5A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StackDetailHeaderCell);
  return result;
}

void sub_10028C5A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  sub_10004F90C(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = "\b";
    v4[6] = "\b";
    swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
  }
}

void sub_10028C634(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  NSString v21;
  id v22;
  char *v23;
  uint64_t v24;
  char *v25;
  _BYTE v27[24];

  v5 = v4;
  v10 = sub_100047110((uint64_t *)&unk_100828380);
  __chkstk_darwin(v10);
  v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100149D00(a1, (uint64_t)v12);
  v13 = type metadata accessor for FitnessPlusStackViewModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 0, 1, v13);
  v14 = v5 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_stackViewModel;
  swift_beginAccess(v5 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_stackViewModel, v27, 33, 0);
  sub_10028C884((uint64_t)v12, v14);
  swift_endAccess(v27);
  v15 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_fitnessAppContext);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_fitnessAppContext) = a2;
  v16 = a2;

  v17 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_titleLabel);
  v18 = sub_100387C74();
  objc_msgSend(v17, "setAttributedText:", v18);

  v19 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_subtitleLabel);
  v20 = sub_100387EB4();
  objc_msgSend(v19, "setAttributedText:", v20);

  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend((id)objc_opt_self(UIImage), "smm_systemImageNamed:", v21);

  if (v22)
  {
    objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_iconImageView), "setImage:", v22);

  }
  v23 = *(char **)&v16[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
  v24 = swift_allocObject(&unk_100793208, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16, v5);
  v25 = v16;
  sub_10003AFE0(a3, a4);
  sub_10039EBB0(a1, v23, v24, v25, a3, a4);
  sub_100022BA4(a3, a4);
  swift_release(v24);

}

uint64_t sub_10028C884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110((uint64_t *)&unk_100828380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028C8CC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10028C8F0()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_10028C924(uint64_t a1)
{
  uint64_t v1;

  sub_10028C198(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10028C930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110((uint64_t *)&unk_100828380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028C978(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100047110((uint64_t *)&unk_100828380);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10028C9B8()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_stackViewModel];
  v3 = type metadata accessor for FitnessPlusStackViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_fitnessAppContext] = 0;
  v4 = OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_iconImageView;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v6 = (void *)UIView.withContentMode(_:)(2);

  v7 = objc_msgSend(v6, "layer");
  objc_msgSend(v7, "setCornerRadius:", 10.0);

  objc_msgSend(v6, "setClipsToBounds:", 1);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v4] = v6;
  v8 = OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_titleLabel;
  v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  if (qword_10081D970 != -1)
    swift_once(&qword_10081D970, sub_10028B554);
  v10 = (void *)UILabel.withFont(_:)(qword_10082B538);

  objc_msgSend(v10, "setLineBreakMode:", 0);
  objc_msgSend(v10, "setNumberOfLines:", 0);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v8] = v10;
  v11 = OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell_subtitleLabel;
  v12 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v11] = v12;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell____lazy_storage___imageViewWidthConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FitnessApp21StackDetailHeaderCell____lazy_storage___imageViewHeightConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100689100, "FitnessApp/StackDetailHeaderCell.swift", 38, 2, 127, 0);
  __break(1u);
}

uint64_t sub_10028CBFC@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a7;
  v32 = a8;
  v28 = a5;
  v29 = a10;
  v30 = a6;
  v15 = sub_100047110((uint64_t *)&unk_10082E690);
  __chkstk_darwin(v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (int *)type metadata accessor for AwardsCard(0);
  v23 = a9 + v22[5];
  *(_OWORD *)v23 = xmmword_1006235B0;
  *(_BYTE *)(v23 + 16) = 3;
  sub_10004D954(a1, (uint64_t)v17);
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  if ((_DWORD)v24 == 1)
  {
    UUID.init()(v24);
    sub_10004D914(a1);
    sub_10004D914((uint64_t)v17);
    v25 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  }
  else
  {
    sub_10004D914(a1);
    v25 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v25(v21, v17, v18);
  }
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v25)(a9, v21, v18);
  *(_BYTE *)(a9 + v22[6]) = a2 & 1;
  *(_BYTE *)(a9 + v22[7]) = a3 & 1;
  *(_BYTE *)(a9 + v22[8]) = a4 & 1;
  *(_QWORD *)(a9 + v22[9]) = v28;
  *(_QWORD *)(a9 + v22[10]) = v30;
  *(_QWORD *)(a9 + v22[11]) = v31;
  *(_QWORD *)(a9 + v22[12]) = v32;
  *(_QWORD *)(a9 + v22[13]) = v29;
  return result;
}

void sub_10028CDCC()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unsigned __int8 v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  void *v40;
  unsigned __int8 v41;
  unint64_t v42;
  unint64_t v43;
  Swift::UInt8 v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  Swift::UInt64 v49;
  Swift::UInt64 v50;
  Swift::UInt64 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Swift::UInt8 *v55;
  Swift::UInt8 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t i;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  void *v65;
  Swift::UInt64 v66;
  Swift::UInt64 v67;
  Swift::UInt64 v68;
  unint64_t v69;
  _OWORD v70[4];
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;

  v1 = v0;
  Hasher.init()(v70);
  v2 = (int *)type metadata accessor for AwardsCard(0);
  v3 = v0 + v2[5];
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(unsigned __int8 *)(v3 + 16);
  sub_1000EB3F4(*(_QWORD *)v3, v5, *(_BYTE *)(v3 + 16));
  sub_10054FFE4(v4, v5, v6);
  v8 = v7;
  String.hash(into:)(v70, v9, v7);
  swift_bridgeObjectRelease(v8);
  if (!v6 || v6 == 2)
  {
    Hasher._combine(_:)(v4);
  }
  else
  {
    if (v6 == 1)
    {
      String.hash(into:)(v70, v4, v5);
      v10 = v4;
      v11 = v5;
      v12 = 1;
    }
    else
    {
      v10 = v4;
      v11 = v5;
      v12 = v6;
    }
    sub_1000EB41C(v10, v11, v12);
  }
  v13 = *(_BYTE *)(v1 + v2[6]);
  Hasher._combine(_:)(v13);
  Hasher._combine(_:)(*(_BYTE *)(v1 + v2[7]));
  v14 = *(void **)(v1 + v2[11]);
  if (v14)
  {
    Hasher._combine(_:)(1u);
    v15 = v14;
    NSObject.hash(into:)(v70);

    if ((v13 & 1) != 0)
      goto LABEL_10;
LABEL_27:
    v30 = *(void **)(v1 + v2[10]);
    if (v30)
    {
      v31 = objc_msgSend(v30, "template");
      v32 = objc_msgSend(v31, "uniqueName");

      if (v32)
      {
        v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
        v35 = v34;

        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain(v35);
        String.hash(into:)(v70, v33, v35);
        swift_bridgeObjectRelease_n(v35, 2);
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      v44 = objc_msgSend(v30, "unearned");
      Hasher._combine(_:)(1u);
      Hasher._combine(_:)(v44);
      v45 = objc_msgSend(v30, "template");
      v46 = objc_msgSend(v45, "canonicalUnit");

      if (v46)
      {
        v47 = objc_msgSend(v30, "progress");
        if (v47)
        {
          v48 = v47;
          objc_msgSend(v47, "doubleValueForUnit:", v46);
          v50 = v49;

          Hasher._combine(_:)(1u);
          if ((v50 & 0x7FFFFFFFFFFFFFFFLL) != 0)
            v51 = v50;
          else
            v51 = 0;
          Hasher._combine(_:)(v51);
        }
        else
        {
          Hasher._combine(_:)(0);
        }

      }
      goto LABEL_87;
    }
    goto LABEL_30;
  }
  Hasher._combine(_:)(0);
  if ((v13 & 1) == 0)
    goto LABEL_27;
LABEL_10:
  v16 = *(_QWORD *)(v1 + v2[9]);
  if (!v16)
  {
LABEL_30:
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(0);
LABEL_87:
    v74 = v70[2];
    v75 = v70[3];
    v76 = v71;
    v72 = v70[0];
    v73 = v70[1];
    Hasher.finalize()();
    return;
  }
  v69 = (unint64_t)v16 >> 62;
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v52 = v16;
    else
      v52 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v17 = _CocoaArrayWrapper.endIndex.getter(v52);
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v16);
  }
  if (v17)
  {
    *(_QWORD *)&v72 = _swiftEmptyArrayStorage;
    sub_10012193C(0, v17 & ~(v17 >> 63), 0);
    if (v17 < 0)
    {
      __break(1u);
      goto LABEL_89;
    }
    v18 = 0;
    v19 = (_QWORD *)v72;
    do
    {
      if ((v16 & 0xC000000000000001) != 0)
        v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v16);
      else
        v20 = *(id *)(v16 + 8 * v18 + 32);
      v21 = v20;
      v22 = objc_msgSend(v20, "template", v69);
      v23 = objc_msgSend(v22, "uniqueName");

      if (v23)
      {
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
        v26 = v25;

      }
      else
      {

        v24 = 0;
        v26 = 0;
      }
      *(_QWORD *)&v72 = v19;
      v28 = v19[2];
      v27 = v19[3];
      if (v28 >= v27 >> 1)
      {
        sub_10012193C(v27 > 1, v28 + 1, 1);
        v19 = (_QWORD *)v72;
      }
      ++v18;
      v19[2] = v28 + 1;
      v29 = &v19[2 * v28];
      v29[4] = v24;
      v29[5] = v26;
    }
    while (v17 != v18);
    swift_bridgeObjectRelease(v16);
  }
  else
  {
    swift_bridgeObjectRelease(v16);
    v19 = _swiftEmptyArrayStorage;
  }
  Hasher._combine(_:)(1u);
  swift_bridgeObjectRetain(v19);
  sub_100124AE0((uint64_t)v70, (uint64_t)v19);
  swift_bridgeObjectRelease_n(v19, 2);
  if (v69)
  {
    if (v16 < 0)
      v53 = v16;
    else
      v53 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v36 = _CocoaArrayWrapper.endIndex.getter(v53);
    if (v36)
    {
LABEL_34:
      *(_QWORD *)&v72 = _swiftEmptyArrayStorage;
      sub_1001219C4(0, v36 & ~(v36 >> 63), 0);
      if ((v36 & 0x8000000000000000) == 0)
      {
        v37 = 0;
        v38 = (_QWORD *)v72;
        do
        {
          if ((v16 & 0xC000000000000001) != 0)
            v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v16);
          else
            v39 = *(id *)(v16 + 8 * v37 + 32);
          v40 = v39;
          v41 = objc_msgSend(v39, "unearned", v69);

          *(_QWORD *)&v72 = v38;
          v43 = v38[2];
          v42 = v38[3];
          if (v43 >= v42 >> 1)
          {
            sub_1001219C4(v42 > 1, v43 + 1, 1);
            v38 = (_QWORD *)v72;
          }
          ++v37;
          v38[2] = v43 + 1;
          *((_BYTE *)v38 + v43 + 32) = v41;
        }
        while (v36 != v37);
        swift_bridgeObjectRelease(v16);
        goto LABEL_61;
      }
LABEL_89:
      __break(1u);
      goto LABEL_90;
    }
  }
  else
  {
    v36 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v16);
    if (v36)
      goto LABEL_34;
  }
  swift_bridgeObjectRelease(v16);
  v38 = _swiftEmptyArrayStorage;
LABEL_61:
  Hasher._combine(_:)(1u);
  Hasher._combine(_:)(v38[2]);
  v54 = v38[2];
  if (v54)
  {
    v55 = (Swift::UInt8 *)(v38 + 4);
    do
    {
      v56 = *v55++;
      Hasher._combine(_:)(v56);
      --v54;
    }
    while (v54);
  }
  swift_bridgeObjectRelease(v38);
  if (v69)
  {
    if (v16 < 0)
      v58 = v16;
    else
      v58 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v16, 2);
    v57 = _CocoaArrayWrapper.endIndex.getter(v58);
    if (!v57)
      goto LABEL_86;
  }
  else
  {
    v57 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v16, 2);
    if (!v57)
    {
LABEL_86:
      swift_bridgeObjectRelease_n(v16, 2);
      goto LABEL_87;
    }
  }
  if (v57 >= 1)
  {
    for (i = 0; i != v57; ++i)
    {
      if ((v16 & 0xC000000000000001) != 0)
        v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v16);
      else
        v61 = *(id *)(v16 + 8 * i + 32);
      v62 = v61;
      v63 = objc_msgSend(v61, "template", v69);
      v60 = objc_msgSend(v63, "canonicalUnit");

      if (v60)
      {
        v64 = objc_msgSend(v62, "progress");
        if (v64)
        {
          v65 = v64;
          objc_msgSend(v64, "doubleValueForUnit:", v60);
          v67 = v66;

          Hasher._combine(_:)(1u);
          if ((v67 & 0x7FFFFFFFFFFFFFFFLL) != 0)
            v68 = v67;
          else
            v68 = 0;
          Hasher._combine(_:)(v68);
        }
        else
        {
          Hasher._combine(_:)(0);
        }

      }
      else
      {
        v60 = v62;
      }

    }
    goto LABEL_86;
  }
LABEL_90:
  __break(1u);
}

uint64_t sub_10028D528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  char v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  unint64_t v8;
  Swift::String v9;
  void *object;
  Swift::String v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 *v16;
  char v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  unint64_t v21;
  Swift::String v22;
  void *v23;
  Swift::String v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v31;
  char v32;
  uint64_t v33;
  unint64_t v34;

  v1 = type metadata accessor for AwardsCard(0);
  v2 = v1;
  if ((*(_BYTE *)(v0 + *(int *)(v1 + 24)) & 1) != 0)
  {
    v33 = 0;
    v34 = 0xE000000000000000;
    v3 = (__int128 *)(v0 + *(int *)(v1 + 20));
    v4 = *((_BYTE *)v3 + 16);
    v31 = *v3;
    v32 = v4;
    _print_unlocked<A, B>(_:_:)(&v31, &v33, &type metadata for CardType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v5._countAndFlagsBits = 58;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    LOBYTE(v31) = 1;
    _print_unlocked<A, B>(_:_:)(&v31, &v33, &type metadata for CardSize, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v6._countAndFlagsBits = 58;
    v6._object = (void *)0xE100000000000000;
    String.append(_:)(v6);
    v7 = type metadata accessor for UUID(0);
    v8 = sub_10027F100();
    v9._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v7, v8);
    object = v9._object;
    String.append(_:)(v9);
    swift_bridgeObjectRelease(object);
    v11._countAndFlagsBits = 540945696;
    v11._object = (void *)0xE400000000000000;
    String.append(_:)(v11);
    if (*(_QWORD *)(v0 + *(int *)(v2 + 36)))
    {
      sub_10017DAE4();
      v13 = Array.description.getter(v12);
      v15 = v14;
    }
    else
    {
      v13 = 4271950;
      v15 = 0xE300000000000000;
    }
  }
  else
  {
    v33 = 0;
    v34 = 0xE000000000000000;
    v16 = (__int128 *)(v0 + *(int *)(v1 + 20));
    v17 = *((_BYTE *)v16 + 16);
    v31 = *v16;
    v32 = v17;
    _print_unlocked<A, B>(_:_:)(&v31, &v33, &type metadata for CardType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v18._countAndFlagsBits = 58;
    v18._object = (void *)0xE100000000000000;
    String.append(_:)(v18);
    LOBYTE(v31) = 0;
    _print_unlocked<A, B>(_:_:)(&v31, &v33, &type metadata for CardSize, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v19._countAndFlagsBits = 58;
    v19._object = (void *)0xE100000000000000;
    String.append(_:)(v19);
    v20 = type metadata accessor for UUID(0);
    v21 = sub_10027F100();
    v22._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v20, v21);
    v23 = v22._object;
    String.append(_:)(v22);
    swift_bridgeObjectRelease(v23);
    v24._countAndFlagsBits = 540945696;
    v24._object = (void *)0xE400000000000000;
    String.append(_:)(v24);
    v25 = *(void **)(v0 + *(int *)(v2 + 40));
    if (v25)
    {
      v26 = objc_msgSend(v25, "description");
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v15 = v28;

    }
    else
    {
      v27 = 4271950;
      v15 = 0xE300000000000000;
    }
    v13 = v27;
  }
  v29 = v15;
  String.append(_:)(*(Swift::String *)&v13);
  swift_bridgeObjectRelease(v15);
  return v33;
}

uint64_t type metadata accessor for AwardsCard(uint64_t a1)
{
  uint64_t result;

  result = qword_10082B610;
  if (!qword_10082B610)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AwardsCard);
  return result;
}

_QWORD *sub_10028D800(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v29);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    v12 = *((_QWORD *)v10 + 1);
    v13 = v10[16];
    sub_1000EB3F4(*(_QWORD *)v10, v12, v13);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    v9[16] = v13;
    v14 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    v15 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v16 = *(_QWORD *)((char *)a2 + v15);
    *(_QWORD *)((char *)a1 + v15) = v16;
    v17 = a3[10];
    v18 = a3[11];
    v19 = *(void **)((char *)a2 + v17);
    *(_QWORD *)((char *)a1 + v17) = v19;
    v20 = *(void **)((char *)a2 + v18);
    *(_QWORD *)((char *)a1 + v18) = v20;
    v21 = a3[12];
    v22 = a3[13];
    v23 = *(void **)((char *)a2 + v21);
    *(_QWORD *)((char *)a1 + v21) = v23;
    v24 = *(void **)((char *)a2 + v22);
    *(_QWORD *)((char *)a1 + v22) = v24;
    swift_bridgeObjectRetain(v16);
    v25 = v19;
    v26 = v20;
    v27 = v23;
    v28 = v24;
  }
  return a1;
}

void sub_10028D91C(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_1000EB41C(*(_QWORD *)(a1 + a2[5]), *(_QWORD *)(a1 + a2[5] + 8), *(_BYTE *)(a1 + a2[5] + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9]));

}

uint64_t sub_10028D9A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  v16 = a3[10];
  v17 = a3[11];
  v18 = *(void **)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = *(void **)(a2 + v17);
  *(_QWORD *)(a1 + v17) = v19;
  v20 = a3[12];
  v21 = a3[13];
  v22 = *(void **)(a2 + v20);
  *(_QWORD *)(a1 + v20) = v22;
  v23 = *(void **)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v23;
  swift_bridgeObjectRetain(v15);
  v24 = v18;
  v25 = v19;
  v26 = v22;
  v27 = v23;
  return a1;
}

uint64_t sub_10028DA94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1000EB3F4(*(_QWORD *)v9, v11, v12);
  v13 = *(_QWORD *)v8;
  v14 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  v15 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v12;
  sub_1000EB41C(v13, v14, v15);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = a3[9];
  v17 = *(_QWORD *)(a1 + v16);
  v18 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v17);
  v19 = a3[10];
  v20 = *(void **)(a1 + v19);
  v21 = *(void **)(a2 + v19);
  *(_QWORD *)(a1 + v19) = v21;
  v22 = v21;

  v23 = a3[11];
  v24 = *(void **)(a1 + v23);
  v25 = *(void **)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v25;
  v26 = v25;

  v27 = a3[12];
  v28 = *(void **)(a1 + v27);
  v29 = *(void **)(a2 + v27);
  *(_QWORD *)(a1 + v27) = v29;
  v30 = v29;

  v31 = a3[13];
  v32 = *(void **)(a1 + v31);
  v33 = *(void **)(a2 + v31);
  *(_QWORD *)(a1 + v31) = v33;
  v34 = v33;

  return a1;
}

uint64_t sub_10028DBCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_10028DC88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)v8;
  v12 = *(_QWORD *)(v8 + 8);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v13 = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v8 + 16) = v10;
  sub_1000EB41C(v11, v12, v13);
  v14 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = *(_QWORD *)(a1 + v15);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[10];
  v18 = *(void **)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);

  v19 = a3[11];
  v20 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);

  v21 = a3[12];
  v22 = *(void **)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);

  v23 = a3[13];
  v24 = *(void **)(a1 + v23);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);

  return a1;
}

uint64_t sub_10028DD80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10028DD8C);
}

uint64_t sub_10028DD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_10028DE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10028DE20);
}

uint64_t sub_10028DE20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = a2;
  return result;
}

uint64_t sub_10028DE98(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[10];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1006323A8;
    v4[2] = &unk_1006323C0;
    v4[3] = &unk_1006323C0;
    v4[4] = &unk_1006323C0;
    v4[5] = &unk_1006323D8;
    v4[6] = &unk_1006323D8;
    v4[7] = &unk_1006323D8;
    v4[8] = &unk_1006323D8;
    v4[9] = &unk_1006323D8;
    swift_initStructMetadata(a1, 256, 10, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10028DF28()
{
  return sub_100101C84((uint64_t)&unk_1006324C8, (uint64_t)&unk_1006324F0);
}

uint64_t sub_10028DF3C()
{
  return sub_100101C84((uint64_t)&unk_100632510, (uint64_t)&unk_100632538);
}

void sub_10028E040()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  _QWORD v8[5];
  uint64_t v9;

  v1 = *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate];
  if (v1)
    objc_msgSend(*(id *)(v1 + OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator), "startAnimating");
  v2 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator];
  v3 = *(_QWORD *)&v0[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout];
  v4 = swift_allocObject(&unk_1007932F8, 24, 7);
  *(_QWORD *)(v4 + 16) = v0;
  v8[4] = sub_1002913AC;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10028ED2C;
  v8[3] = &unk_100793310;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = v0;
  objc_msgSend(v2, "segmentsForWorkout:completion:", v3, v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
}

void sub_10028E13C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __n128 v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  dispatch_group_t v33;
  id v34;
  void *v35;
  _QWORD *v36;
  void *v37;
  void *v38;
  id v39;
  NSObject *v40;
  id v41;
  uint64_t v42;
  __n128 v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  dispatch_group_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  void (*v54)(_QWORD, _QWORD);
  uint64_t v55;
  uint64_t v56;
  dispatch_group_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[8];
  _QWORD *v64;
  void **aBlock;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  void *v68;
  void *v69;
  _QWORD *v70;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v15 = sub_100047110(&qword_10082CEC0);
    v16 = swift_allocObject(v15, 64, 7);
    *(_OWORD *)(v16 + 16) = xmmword_100622F90;
    swift_getErrorValue(a2, v63, &v61);
    v17 = v61;
    v18 = v62;
    *(_QWORD *)(v16 + 56) = v62;
    v19 = sub_10004C480((_QWORD *)(v16 + 32));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19, v17, v18);
    swift_errorRetain(a2);
    print(_:separator:terminator:)(v16, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(a2);
    return;
  }
  if (a1)
  {
    v59 = v12;
    v57 = dispatch_group_create();
    v49 = sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
    v54 = (void (*)(_QWORD, _QWORD))static OS_dispatch_queue.main.getter(v20);
    v21 = swift_allocObject(&unk_100793348, 32, 7);
    *(_QWORD *)(v21 + 16) = a3;
    *(_QWORD *)(v21 + 24) = a1;
    v69 = sub_1002913E0;
    v70 = (_QWORD *)v21;
    aBlock = _NSConcreteStackBlock;
    v66 = 1107296256;
    v67 = sub_10002D0F8;
    v68 = &unk_100793360;
    v22 = _Block_copy(&aBlock);
    v60 = a1;
    v23 = v22;
    v24 = v70;
    v58 = a3;
    swift_bridgeObjectRetain(v60);
    swift_release(v24);
    static DispatchQoS.unspecified.getter(v25);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v26 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v27 = sub_100047110(&qword_100828C80);
    v28 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
    v55 = v27;
    v56 = v26;
    v53 = v28;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v27, v28, v6, v26);
    v29 = v54;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v9, v23);
    v30 = v60;
    _Block_release(v23);

    v54 = *(void (**)(_QWORD, _QWORD))(v7 + 8);
    v54(v9, v6);
    v52 = *(void (**)(char *, uint64_t))(v11 + 8);
    v52(v14, v59);
    if ((unint64_t)v30 >> 62)
    {
      if (v30 >= 0)
        v42 = v30 & 0xFFFFFFFFFFFFFF8;
      else
        v42 = v30;
      swift_bridgeObjectRetain(v30);
      v31 = _CocoaArrayWrapper.endIndex.getter(v42);
      if (v31)
        goto LABEL_6;
    }
    else
    {
      v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v30);
      if (v31)
      {
LABEL_6:
        if (v31 < 1)
        {
          __break(1u);
          return;
        }
        v32 = 0;
        v51 = *(_QWORD *)&v58[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_internalQueue];
        v50 = v30 & 0xC000000000000001;
        v33 = v57;
        do
        {
          if (v50)
            v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v30);
          else
            v34 = *(id *)(v30 + 8 * v32 + 32);
          v35 = v34;
          v36 = (_QWORD *)swift_allocObject(&unk_100793398, 40, 7);
          v37 = v58;
          v36[2] = v58;
          v36[3] = v35;
          v36[4] = v32;
          v69 = sub_100291414;
          v70 = v36;
          aBlock = _NSConcreteStackBlock;
          v66 = 1107296256;
          v67 = sub_10002D0F8;
          v68 = &unk_1007933B0;
          v38 = _Block_copy(&aBlock);
          v39 = v37;
          v40 = v33;
          v41 = v35;
          static DispatchQoS.unspecified.getter(v41);
          v64 = _swiftEmptyArrayStorage;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v64, v55, v53, v6, v56);
          OS_dispatch_queue.async(group:qos:flags:execute:)(v33, v14, v9, v38);
          _Block_release(v38);

          v54(v9, v6);
          v52(v14, v59);
          swift_release(v70);
          ++v32;
          v30 = v60;
        }
        while (v31 != v32);
      }
    }
    v43 = swift_bridgeObjectRelease(v30);
    v44 = (void *)static OS_dispatch_queue.main.getter(v43);
    v45 = swift_allocObject(&unk_1007933E8, 24, 7);
    v46 = v58;
    *(_QWORD *)(v45 + 16) = v58;
    v69 = sub_100291420;
    v70 = (_QWORD *)v45;
    aBlock = _NSConcreteStackBlock;
    v66 = 1107296256;
    v67 = sub_10002D0F8;
    v68 = &unk_100793400;
    v47 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter(v46);
    v64 = _swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v64, v55, v53, v6, v56);
    v48 = v57;
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v14, v9, v44, v47);
    _Block_release(v47);

    v54(v9, v6);
    v52(v14, v59);
    swift_release(v70);
  }
}

uint64_t sub_10028E6D4(void *a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;

  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v24 = a2;
    else
      v24 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = _swiftEmptyArrayStorage;
  if (!v4)
    goto LABEL_14;
  v26 = _swiftEmptyArrayStorage;
  result = specialized ContiguousArray.reserveCapacity(_:)(v4);
  if ((v4 & 0x8000000000000000) == 0)
  {
    v25 = a1;
    v7 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a2);
      else
        v19 = *(id *)(a2 + 8 * v7 + 32);
      v20 = v19;
      v21 = objc_msgSend(v19, "distance", v25);
      if (v21)
      {
        v8 = v21;
        v9 = objc_msgSend((id)objc_opt_self(HKUnit), "meterUnit");
        objc_msgSend(v8, "doubleValueForUnit:", v9);
        v11 = v10;

      }
      else
      {
        v11 = 0;
      }
      ++v7;
      objc_msgSend(v20, "elapsedTime");
      v13 = v12;
      v14 = type metadata accessor for WorkoutDurationMetrics();
      v15 = swift_allocObject(v14, 160, 7);
      *(_QWORD *)(v15 + 16) = 0;
      *(_QWORD *)(v15 + 24) = 0;
      *(_QWORD *)(v15 + 48) = 0;
      *(_BYTE *)(v15 + 56) = 1;
      *(_QWORD *)(v15 + 72) = 0;
      *(_BYTE *)(v15 + 80) = 1;
      *(_OWORD *)(v15 + 88) = 0u;
      *(_OWORD *)(v15 + 104) = 0u;
      *(_QWORD *)(v15 + 120) = 0;
      *(_BYTE *)(v15 + 128) = 1;
      *(_QWORD *)(v15 + 144) = 0;
      *(_QWORD *)(v15 + 152) = 0;
      *(_QWORD *)(v15 + 136) = 0;
      *(_QWORD *)(v15 + 32) = v11;
      *(_BYTE *)(v15 + 40) = 0;
      *(_QWORD *)(v15 + 64) = v13;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v17 = v26[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
      v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized ContiguousArray._endMutation()(v18);
    }
    while (v4 != v7);
    a1 = v25;
    v5 = v26;
LABEL_14:
    KeyPath = swift_getKeyPath(&unk_1006324C8);
    v23 = swift_getKeyPath(&unk_1006324F0);
    v26 = v5;
    static Published.subscript.setter(&v26, a1, KeyPath, v23);
    return sub_10028F290();
  }
  __break(1u);
  return result;
}

uint64_t sub_10028E91C(char *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  int v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  __n128 v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[5];
  _QWORD *v37;

  v32 = a3;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v35 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)&a1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout];
  v12 = *(_QWORD *)&a1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_trackDistanceUnit];
  v13 = a1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_trackDistanceUnit + 8];
  v14 = *(void **)&a1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator];
  v15 = type metadata accessor for WorkoutDurationMetrics();
  swift_allocObject(v15, 160, 7);
  v16 = v11;
  v17 = a2;
  v18 = v14;
  v19 = sub_100354EC8(v16, v17, v12, v13, v18, 0, 0);

  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v21 = (void *)static OS_dispatch_queue.main.getter(v20);
  v22 = (_QWORD *)swift_allocObject(&unk_100793438, 40, 7);
  v23 = v32;
  v22[2] = a1;
  v22[3] = v23;
  v22[4] = v19;
  aBlock[4] = sub_100291454;
  v37 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D0F8;
  aBlock[3] = &unk_100793450;
  v24 = _Block_copy(aBlock);
  v25 = v37;
  v26 = a1;
  swift_retain(v19);
  swift_release(v25);
  static DispatchQoS.unspecified.getter(v27);
  aBlock[0] = _swiftEmptyArrayStorage;
  v28 = sub_1000083D8((unint64_t *)&qword_1008268E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v29 = sub_100047110(&qword_100828C80);
  v30 = sub_100028384((unint64_t *)&qword_1008268F0, &qword_100828C80, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v5, v28);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v24);
  _Block_release(v24);
  swift_release(v19);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v10, v34);
}

uint64_t sub_10028EBD8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t KeyPath;
  uint64_t v7;
  void (*v8)(_BYTE *, _QWORD);
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[32];

  KeyPath = swift_getKeyPath(&unk_1006324C8);
  v7 = swift_getKeyPath(&unk_1006324F0);
  swift_retain(a3);
  v8 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v15, a1, KeyPath, v7);
  v10 = v9;
  v11 = *v9;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v9);
  *v10 = v11;
  if (!(_DWORD)result || v11 < 0 || (v11 & 0x4000000000000000) != 0)
  {
    result = sub_1004DEE2C(v11);
    v11 = result;
    *v10 = result;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20);
    *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = a3;
    v14 = swift_release(v13);
    specialized Array._endMutation()(v14);
    v8(v15, 0);
    swift_release(KeyPath);
    return swift_release(v7);
  }
  __break(1u);
  return result;
}

id sub_10028ECDC(uint64_t a1)
{
  id result;
  uint64_t v3;

  result = (id)sub_10028F290();
  v3 = *(_QWORD *)(a1 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate);
  if (v3)
    return objc_msgSend(*(id *)(v3 + OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator), "stopAnimating");
  return result;
}

double sub_10028ED2C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  id v8;
  double result;

  v4 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_10001E724(0, qword_10082B708, off_100776620);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain(v5);
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

void sub_10028EDB8(unint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v5;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100632510);
  v4 = swift_getKeyPath(&unk_100632538);
  static Published.subscript.getter(&v6, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v6 + 16) > a1)
  {
    v5 = *(_BYTE *)(v6 + a1 + 32);
    swift_bridgeObjectRelease(v6);
    sub_1001A5750(*(_QWORD *)(v1 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_formattingManager), v5);
    return;
  }
  __break(1u);
}

void sub_10028EE74(unint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  _QWORD v9[3];

  KeyPath = swift_getKeyPath(&unk_100632510);
  v4 = swift_getKeyPath(&unk_100632538);
  static Published.subscript.getter(v9, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(_QWORD *)(v9[0] + 16) <= a1)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v5 = *(unsigned __int8 *)(v9[0] + a1 + 32);
  swift_bridgeObjectRelease(v9[0]);
  v6 = (uint64_t *)(v1 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_columnSizes);
  swift_beginAccess(v6, v9, 0, 0);
  v7 = *v6;
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain(v7);
    sub_1004396A8(v5);
    if ((v8 & 1) != 0)
      swift_bridgeObjectRelease(v7);
    else
      swift_bridgeObjectRelease(v7);
  }
}

uint64_t sub_10028EF84(uint64_t a1)
{
  uint64_t result;
  BOOL v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;

  result = objc_opt_self(NSNumberFormatter);
  v3 = __OFADD__(a1, 1);
  v4 = a1 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    v5 = (void *)result;
    v6 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v4);
    v7 = objc_msgSend(v5, "localizedStringFromNumber:numberStyle:", v6, 0);

    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    return v8;
  }
  return result;
}

void sub_10028F028(unint64_t a1@<X0>, CHWorkoutDetailHeartRateTableViewCell *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  CHWorkoutDetailHeartRateTableViewCell *v4;
  CHWorkoutDetailHeartRateTableViewCell *v5;
  uint64_t KeyPath;
  uint64_t v11;
  CHWorkoutDetailHeartRateTableViewCell *v12;
  const char *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  CHWorkoutDetailHeartRateTableViewCell *v23;
  id v24;
  void *v25;
  uint64_t v26;
  CHWorkoutDetailHeartRateTableViewCell *v27;
  CHWorkoutDetailHeartRateTableViewCell *v28;
  unint64_t v29;
  const char *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  SEL v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  SEL v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  _QWORD v51[2];

  v5 = v4;
  KeyPath = swift_getKeyPath(&unk_1006324C8);
  v11 = swift_getKeyPath(&unk_1006324F0);
  static Published.subscript.getter(v51, v5, KeyPath, v11);
  swift_release(KeyPath);
  swift_release(v11);
  v12 = (CHWorkoutDetailHeartRateTableViewCell *)v51[0];
  if ((v51[0] & 0xC000000000000001) != 0)
  {
    a1 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v51[0]);
    goto LABEL_5;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (*(_QWORD *)((v51[0] & 0xFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  a1 = *(_QWORD *)(v51[0] + 8 * a1 + 32);
  swift_retain(a1);
LABEL_5:
  swift_bridgeObjectRelease(v12, v13, v14, v15, v16, v17, v18, v19);
  if ((a3 & 1) != 0
    || (*(_BYTE *)(a1 + 40) & 1) != 0
    || (v20 = *(Class *)((char *)&v5->super.super.super.super.isa
                       + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_formattingManager),
        (v21 = objc_msgSend(v20, "localizedStringWithDistanceInMeters:distanceUnit:unitStyle:decimalPrecision:roundingMode:decimalTrimmingMode:", a2, 0, objc_msgSend((id)objc_opt_self(FIUIFormattingManager), "defaultPrecisionForDistanceUnit:", a2), 2, 1, *(double *)(a1 + 32))) == 0))
  {
    sub_1001A601C(a1, *(void **)((char *)&v5->super.super.super.super.isa + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout), 0, *(uint64_t *)((char *)&v5->super.super.super.super.isa+ OBJC_IVAR___CHWorkoutDetailSegmentDataSource_formattingManager), 1, a4);
    swift_release(a1);
  }
  else
  {
    v22 = v21;
    a3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v5 = v23;

    v24 = objc_msgSend(v20, "localizedShortUnitStringForDistanceUnit:", a2);
    if (v24)
    {
      v25 = v24;
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v28 = v27;

      v51[0] = v26;
      v51[1] = v28;
      v29 = sub_100038CA0();
      v12 = (CHWorkoutDetailHeartRateTableViewCell *)StringProtocol.localizedUppercase.getter(&type metadata for String, v29);
      a2 = (CHWorkoutDetailHeartRateTableViewCell *)v30;
      swift_bridgeObjectRelease(v28, v30, v31, v32, v33, v34, v35, v36);
      if (qword_10081D688 == -1)
      {
LABEL_10:
        sub_100436EB8(a3, (uint64_t)v5, (uint64_t)v12, (uint64_t)a2, (void *)qword_100869FF8, 0, a4);
        swift_release(a1);
        swift_bridgeObjectRelease(v5, v37, v38, v39, v40, v41, v42, v43);
        swift_bridgeObjectRelease(a2, v44, v45, v46, v47, v48, v49, v50);
        return;
      }
LABEL_15:
      swift_once(&qword_10081D688, sub_1001A536C);
      goto LABEL_10;
    }
    __break(1u);
  }
}

uint64_t sub_10028F290()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  _QWORD *v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  __int128 v55;
  NSAttributedStringKey v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char v64[8];

  v1 = v0;
  v52 = type metadata accessor for AttributedString(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v50 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v49 = (char *)&v39 - v4;
  KeyPath = swift_getKeyPath(&unk_1006324C8);
  v6 = swift_getKeyPath(&unk_1006324F0);
  static Published.subscript.getter(&v61, v1, KeyPath, v6);
  swift_release(KeyPath);
  swift_release(v6);
  v7 = v61;
  if (v61 >> 62)
    goto LABEL_16;
  v8 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v8)
  {
    v9 = 0;
    v10 = &v1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_columnSizes];
    v11 = *(_QWORD **)&v1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_defaultColumns];
    v44 = v7 & 0xC000000000000001;
    v41 = v7 & 0xFFFFFFFFFFFFFF8;
    v40 = v7 + 32;
    v48 = OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout;
    v47 = OBJC_IVAR___CHWorkoutDetailSegmentDataSource_formattingManager;
    v54 = &v62;
    v60 = v11;
    v59 = v11[2];
    v56 = NSFontAttributeName;
    v55 = xmmword_100622F90;
    v53 = (char *)&type metadata for Any + 8;
    v46 = "";
    v43 = v7;
    v42 = v8;
    while (v44)
    {
      v57 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
      v12 = (void *)(v9 + 1);
      if (__OFADD__(v9, 1))
        goto LABEL_14;
LABEL_11:
      if (v59)
      {
        v45 = v12;
        v58 = (char *)v9;
        swift_bridgeObjectRetain(v60);
        swift_beginAccess(v10, v64, 0, 0);
        __asm { BR              X8 }
      }
      swift_release(v57);
      v9 = (int64_t)v12;
      if (v12 == (void *)v8)
        goto LABEL_20;
    }
    if ((unint64_t)v9 >= *(_QWORD *)(v41 + 16))
      goto LABEL_15;
    v57 = *(_QWORD *)(v40 + 8 * v9);
    swift_retain(v57);
    v12 = (void *)(v9 + 1);
    if (!__OFADD__(v9, 1))
      goto LABEL_11;
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    if (v7 < 0)
      v13 = v7;
    else
      v13 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v7);
  }
LABEL_20:
  swift_bridgeObjectRelease(v7);
  v14 = *(_QWORD *)&v1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_defaultColumns];
  v15 = *(_QWORD *)(v14 + 16);
  v16 = &v1[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_columnSizes];
  v17 = v1;
  swift_bridgeObjectRetain(v14);
  swift_beginAccess(v16, &v61, 0, 0);
  if (v15)
  {
    v18 = 0;
    v19 = v14 + 32;
    v20 = _swiftEmptyArrayStorage;
    v58 = v17;
    v59 = v14;
    v57 = v15;
    do
    {
      v60 = v20;
      v21 = 0;
      if (v18 <= v15)
        v22 = v15;
      else
        v22 = v18;
      v23 = v18 - v22;
      v24 = v19;
      while (1)
      {
        if (!(v23 + v21))
        {
          __break(1u);
          JUMPOUT(0x10028FF78);
        }
        v25 = *(_QWORD *)v16;
        if (*(_QWORD *)(*(_QWORD *)v16 + 16))
        {
          v26 = *(unsigned __int8 *)(v24 + v18);
          v27 = v19;
          swift_bridgeObjectRetain(*(_QWORD *)v16);
          sub_1004396A8(v26);
          v29 = v28;
          swift_bridgeObjectRelease(v25);
          v19 = v27;
          if ((v29 & 1) != 0)
            break;
        }
        ++v21;
        ++v24;
        if (v18 == --v15)
        {
          v17 = v58;
          v14 = v59;
          v20 = v60;
          goto LABEL_39;
        }
      }
      v30 = v60;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v60);
      v63 = v30;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100121894(0, v30[2] + 1, 1);
        v30 = v63;
      }
      v14 = v59;
      v33 = v30[2];
      v32 = v30[3];
      if (v33 >= v32 >> 1)
      {
        sub_100121894(v32 > 1, v33 + 1, 1);
        v30 = v63;
      }
      v34 = v18 + 1;
      v18 += 1 + v21;
      v30[2] = v33 + 1;
      *((_BYTE *)v30 + v33 + 32) = v26;
      v35 = v34 == v15;
      v17 = v58;
      v15 = v57;
      v19 = v27;
      v20 = v30;
    }
    while (!v35);
  }
  else
  {
    v20 = _swiftEmptyArrayStorage;
  }
LABEL_39:
  swift_bridgeObjectRelease(v14);

  v36 = swift_getKeyPath(&unk_100632510);
  v37 = swift_getKeyPath(&unk_100632538);
  v63 = v20;
  return static Published.subscript.setter(&v63, v17, v36, v37);
}

id sub_100290014()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailSegmentDataSource(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100290128()
{
  return type metadata accessor for WorkoutDetailSegmentDataSource(0);
}

uint64_t type metadata accessor for WorkoutDetailSegmentDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_10082B6C8;
  if (!qword_10082B6C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WorkoutDetailSegmentDataSource);
  return result;
}

void sub_10029016C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[10];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1000DBE4C(319, (unint64_t *)&qword_100826808, &qword_100826810);
  if (v3 <= 0x3F)
  {
    v6[3] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000DBE4C(319, &qword_10082B6D8, &qword_10082B6E0);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      v6[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[8] = &unk_100632440;
      v6[9] = &unk_100632458;
      swift_updateClassMetadata2(a1, 256, 10, v6, a1 + 80);
    }
  }
}

uint64_t sub_10029024C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_100632510);
  v2 = swift_getKeyPath(&unk_100632538);
  static Published.subscript.getter(&v5, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease(v5);
  return v3;
}

uint64_t sub_1002902D4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x190))();
}

uint64_t sub_1002902F0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for WorkoutDetailSegmentDataSource(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_10029032C(uint64_t a1)
{
  uint64_t result;

  result = sub_1000083D8(&qword_100829D70, type metadata accessor for WorkoutDetailSegmentDataSource, (uint64_t)&unk_100632470);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100290368@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001268D4(a1, (uint64_t)&unk_1006324C8, (uint64_t)&unk_1006324F0, a2);
}

uint64_t sub_10029037C(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002903B8(a1, a2, a3, a4, (uint64_t)&unk_1006324C8, (uint64_t)&unk_1006324F0);
}

uint64_t sub_100290390@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001268D4(a1, (uint64_t)&unk_100632510, (uint64_t)&unk_100632538, a2);
}

uint64_t sub_1002903A4(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002903B8(a1, a2, a3, a4, (uint64_t)&unk_100632510, (uint64_t)&unk_100632538);
}

uint64_t sub_1002903B8(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_bridgeObjectRetain(v7);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

id sub_100290428(void *a1, void *a2, uint64_t a3, void *a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  char *v27;
  char *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  char v33;
  id result;
  void *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _UNKNOWN **v40;
  uint64_t v41;
  objc_class *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  objc_super v50;
  _QWORD *v51;

  v46 = a4;
  v47 = a2;
  v48 = a3;
  v49 = a1;
  v5 = type metadata accessor for DispatchQoS.QoSClass(0);
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047110(&qword_10082B700);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047110((uint64_t *)&unk_100826820);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v4[OBJC_IVAR___CHWorkoutDetailSegmentDataSource__metrics];
  v51 = _swiftEmptyArrayStorage;
  v17 = v4;
  v18 = sub_100047110(&qword_100826810);
  Published.init(initialValue:)(&v51, v18);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v15, v12);
  v19 = &v17[OBJC_IVAR___CHWorkoutDetailSegmentDataSource__columns];
  v51 = _swiftEmptyArrayStorage;
  v20 = sub_100047110(&qword_10082B6E0);
  Published.init(initialValue:)(&v51, v20);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v19, v11, v8);
  *(_QWORD *)&v17[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_columnSizes] = _swiftEmptyDictionarySingleton;
  v21 = OBJC_IVAR___CHWorkoutDetailSegmentDataSource_internalQueue;
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v23 = v44;
  v22 = v45;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v7, enum case for DispatchQoS.QoSClass.userInitiated(_:), v45);
  v24 = static OS_dispatch_queue.global(qos:)(v7);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v22);
  *(_QWORD *)&v17[v21] = v24;
  v26 = v46;
  v25 = v47;
  v27 = &v17[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;
  v28 = &v17[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_trackDistanceUnit];
  *(_QWORD *)v28 = 0;
  v28[8] = 1;
  *(_QWORD *)&v17[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator] = v25;
  v29 = v25;
  v30 = objc_msgSend(v26, "fitnessUIFormattingManager");
  *(_QWORD *)&v17[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_formattingManager] = v30;
  v31 = v49;
  *(_QWORD *)v28 = v48;
  v28[8] = 0;
  *(_QWORD *)&v17[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout] = v31;
  v32 = v31;
  if (!objc_msgSend(v26, "supportsDistanceForWorkout:workoutActivity:", v32, 0))
  {
    if (objc_msgSend(v32, "_activityMoveMode") == (id)1)
      v40 = &off_100782188;
    else
      v40 = &off_1007821B0;
    *(_QWORD *)&v17[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_defaultColumns] = v40;
    goto LABEL_17;
  }
  if (objc_msgSend(v32, "workoutActivityType") == (id)13)
    v33 = 9;
  else
    v33 = 6;
  if (!objc_msgSend(v26, "supportsPaceForWorkout:workoutActivity:", v32, 0))
  {
    v41 = sub_100047110(&qword_100821570);
    v39 = swift_allocObject(v41, 38, 7);
    *(_OWORD *)(v39 + 16) = xmmword_100632400;
    *(_DWORD *)(v39 + 32) = 67240192;
    *(_BYTE *)(v39 + 36) = 5;
    *(_BYTE *)(v39 + 37) = v33;
LABEL_14:
    *(_QWORD *)&v17[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_defaultColumns] = v39;
LABEL_17:

    v42 = (objc_class *)type metadata accessor for WorkoutDetailSegmentDataSource(0);
    v50.receiver = v17;
    v50.super_class = v42;
    return objc_msgSendSuper2(&v50, "init");
  }
  result = objc_msgSend(v32, "fiui_activityType");
  if (result)
  {
    v35 = result;
    v36 = FIUIPaceFormatForWorkoutActivityType(result);

    if (v36 == 4)
      v37 = 8;
    else
      v37 = 3;
    v38 = sub_100047110(&qword_100821570);
    v39 = swift_allocObject(v38, 39, 7);
    *(_OWORD *)(v39 + 16) = xmmword_10062F3E0;
    *(_WORD *)(v39 + 32) = 256;
    *(_BYTE *)(v39 + 34) = 2;
    *(_BYTE *)(v39 + 35) = v37;
    *(_WORD *)(v39 + 36) = 1284;
    *(_BYTE *)(v39 + 38) = v33;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

id sub_100290834(void *a1, void *a2, void *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  char v32;
  id result;
  void *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  _UNKNOWN **v39;
  uint64_t v40;
  objc_class *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  objc_super v47;
  _QWORD *v48;

  v44 = a3;
  v45 = a2;
  v46 = a1;
  v4 = type metadata accessor for DispatchQoS.QoSClass(0);
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100047110(&qword_10082B700);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100047110((uint64_t *)&unk_100826820);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v3[OBJC_IVAR___CHWorkoutDetailSegmentDataSource__metrics];
  v48 = _swiftEmptyArrayStorage;
  v16 = v3;
  v17 = sub_100047110(&qword_100826810);
  Published.init(initialValue:)(&v48, v17);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v14, v11);
  v18 = &v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource__columns];
  v48 = _swiftEmptyArrayStorage;
  v19 = sub_100047110(&qword_10082B6E0);
  Published.init(initialValue:)(&v48, v19);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v18, v10, v7);
  *(_QWORD *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_columnSizes] = _swiftEmptyDictionarySingleton;
  v20 = OBJC_IVAR___CHWorkoutDetailSegmentDataSource_internalQueue;
  sub_10001E724(0, (unint64_t *)&qword_100828710, OS_dispatch_queue_ptr);
  v22 = v42;
  v21 = v43;
  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v6, enum case for DispatchQoS.QoSClass.userInitiated(_:), v43);
  v23 = static OS_dispatch_queue.global(qos:)(v6);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v21);
  *(_QWORD *)&v16[v20] = v23;
  v24 = &v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_delegate];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v25 = &v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_trackDistanceUnit];
  *(_QWORD *)v25 = 0;
  v25[8] = 1;
  v27 = v44;
  v26 = v45;
  *(_QWORD *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_dataCalculator] = v45;
  v28 = v26;
  v29 = objc_msgSend(v27, "fitnessUIFormattingManager");
  *(_QWORD *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_formattingManager] = v29;
  v30 = v46;
  *(_QWORD *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout] = v46;
  v31 = v30;
  if (!objc_msgSend(v27, "supportsDistanceForWorkout:workoutActivity:", v31, 0))
  {
    if (objc_msgSend(v31, "_activityMoveMode") == (id)1)
      v39 = &off_1007821D8;
    else
      v39 = &off_100782200;
    *(_QWORD *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_defaultColumns] = v39;
    goto LABEL_17;
  }
  if (objc_msgSend(v31, "workoutActivityType") == (id)13)
    v32 = 9;
  else
    v32 = 6;
  if (!objc_msgSend(v27, "supportsPaceForWorkout:workoutActivity:", v31, 0, v42, v43))
  {
    v40 = sub_100047110(&qword_100821570);
    v38 = swift_allocObject(v40, 38, 7);
    *(_OWORD *)(v38 + 16) = xmmword_100632400;
    *(_DWORD *)(v38 + 32) = 67240192;
    *(_BYTE *)(v38 + 36) = 5;
    *(_BYTE *)(v38 + 37) = v32;
LABEL_14:
    *(_QWORD *)&v16[OBJC_IVAR___CHWorkoutDetailSegmentDataSource_defaultColumns] = v38;
LABEL_17:

    v41 = (objc_class *)type metadata accessor for WorkoutDetailSegmentDataSource(0);
    v47.receiver = v16;
    v47.super_class = v41;
    return objc_msgSendSuper2(&v47, "init");
  }
  result = objc_msgSend(v31, "fiui_activityType");
  if (result)
  {
    v34 = result;
    v35 = FIUIPaceFormatForWorkoutActivityType(result);

    if (v35 == 4)
      v36 = 8;
    else
      v36 = 3;
    v37 = sub_100047110(&qword_100821570);
    v38 = swift_allocObject(v37, 39, 7);
    *(_OWORD *)(v38 + 16) = xmmword_10062F3E0;
    *(_WORD *)(v38 + 32) = 256;
    *(_BYTE *)(v38 + 34) = 2;
    *(_BYTE *)(v38 + 35) = v36;
    *(_WORD *)(v38 + 36) = 1284;
    *(_BYTE *)(v38 + 38) = v32;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_100290C38()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  KeyPath = swift_getKeyPath(&unk_1006324C8);
  v2 = swift_getKeyPath(&unk_1006324F0);
  static Published.subscript.getter(&v7, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v7;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v6 = v7;
    else
      v6 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v4 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t sub_100290CF0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001268D4(a1, (uint64_t)&unk_1006324C8, (uint64_t)&unk_1006324F0, a2);
}

uint64_t sub_100290D14(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002903B8(a1, a2, a3, a4, (uint64_t)&unk_1006324C8, (uint64_t)&unk_1006324F0);
}

uint64_t sub_100290D38@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001268D4(a1, (uint64_t)&unk_100632510, (uint64_t)&unk_100632538, a2);
}

uint64_t sub_100290D5C(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002903B8(a1, a2, a3, a4, (uint64_t)&unk_100632510, (uint64_t)&unk_100632538);
}

void sub_100290D80(unint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  CHWorkoutDetailHeartRateTableViewCell *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  const char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  CHWorkoutDetailHeartRateTableViewCell *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  CHWorkoutDetailHeartRateTableViewCell *v33;
  char v34;
  SEL v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  CHWorkoutDetailHeartRateTableViewCell *v47;
  CHWorkoutDetailHeartRateTableViewCell *v48;
  char v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  __n128 v53;
  CHWorkoutDetailHeartRateTableViewCell *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char *v59;
  SEL v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  CHWorkoutDetailHeartRateTableViewCell *v73;
  unint64_t v74;
  char *v75;
  CHWorkoutDetailHeartRateTableViewCell *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  SEL v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  uint64_t OpaqueTypeConformance2;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  const char *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  CHWorkoutDetailHeartRateTableViewCell *v101;
  CHWorkoutDetailHeartRateTableViewCell *v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  CHWorkoutDetailHeartRateTableViewCell *v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111;
  CHWorkoutDetailHeartRateTableViewCell *v112;
  CHWorkoutDetailHeartRateTableViewCell *v113;
  SEL v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  __n128 v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  CHWorkoutDetailHeartRateTableViewCell *v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;

  v5 = type metadata accessor for AttributedString(0);
  v6 = *(CHWorkoutDetailHeartRateTableViewCell **)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v122 - v10;
  v12 = type metadata accessor for DynamicTypeSize(0);
  v123 = *(_QWORD *)(v12 - 8);
  v124 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_100047110(&qword_10082B6E8);
  __chkstk_darwin(v126);
  v125 = (char *)&v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100632510);
  v17 = swift_getKeyPath(&unk_100632538);
  static Published.subscript.getter(&v127, v2, KeyPath, v17);
  swift_release(KeyPath);
  swift_release(v17);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (*(_QWORD *)(v127 + 16) <= a2)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    v90 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v6);
    goto LABEL_12;
  }
  LOBYTE(a2) = *(_BYTE *)(v127 + a2 + 32);
  swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)v127, v18, v19, v20, v21, v22, v23, v24);
  v25 = sub_1001A561C(a2);
  v33 = v26;
  if (v25 == 0x72656B72616DLL && v26 == (CHWorkoutDetailHeartRateTableViewCell *)0xE600000000000000)
  {
    swift_bridgeObjectRelease((CHWorkoutDetailHeartRateTableViewCell *)0xE600000000000000, (SEL)0xE600000000000000, v27, v28, v29, v30, v31, v32);
LABEL_7:
    v127 = (*(uint64_t (**)(unint64_t))((swift_isaMask & *v2) + 0x198))(a1);
    v128 = v42;
    v43 = sub_100038CA0();
    v44 = Text.init<A>(_:)(&v127, &type metadata for String, v43);
    v46 = v45;
    v48 = v47;
    v50 = v49 & 1;
    v52 = static Font.body.getter(v51);
    v54 = (CHWorkoutDetailHeartRateTableViewCell *)Text.font(_:)(v52, v44, v46, v50, v48, v53);
    v56 = v55;
    v58 = v57;
    v122 = v59;
    swift_release(v52);
    sub_1000E4458(v44, v46, v50);
    swift_bridgeObjectRelease(v48, v60, v61, v62, v63, v64, v65, v66);
    v67 = swift_getKeyPath(&unk_100632558);
    sub_1001A5D38(a2);
    v69 = v68;
    v70 = swift_getKeyPath(&unk_100632588);
    v127 = (uint64_t)v54;
    v128 = v56;
    v129 = v58 & 1;
    v71 = v123;
    v130 = (CHWorkoutDetailHeartRateTableViewCell *)v122;
    v131 = v67;
    v132 = 3;
    v133 = 0;
    v134 = v70;
    v135 = v69;
    v72 = v124;
    (*(void (**)(char *, _QWORD, uint64_t))(v123 + 104))(v14, enum case for DynamicTypeSize.large(_:), v124);
    v73 = (CHWorkoutDetailHeartRateTableViewCell *)sub_100047110(&qword_10082B6F0);
    v74 = sub_1002912BC();
    v75 = v125;
    View.dynamicTypeSize(_:)(v14, v73, v74);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v14, v72);
    v76 = v130;
    v77 = v131;
    v78 = v134;
    v79 = v135;
    sub_1000E4458(v127, v128, v129);
    swift_release(v78);
    swift_release(v77);
    swift_bridgeObjectRelease(v76, v80, v81, v82, v83, v84, v85, v86);
    swift_release(v79);
    v127 = (uint64_t)v73;
    v128 = v74;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v127, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    AnyView.init<A>(_:)(v75, v126, OpaqueTypeConformance2);
    return;
  }
  v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, 0x72656B72616DLL, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v33, v35, v36, v37, v38, v39, v40, v41);
  if ((v34 & 1) != 0)
    goto LABEL_7;
  v14 = (char *)v6;
  v88 = swift_getKeyPath(&unk_1006324C8);
  v89 = swift_getKeyPath(&unk_1006324F0);
  static Published.subscript.getter(&v127, v2, v88, v89);
  swift_release(v88);
  swift_release(v89);
  v6 = (CHWorkoutDetailHeartRateTableViewCell *)v127;
  if ((v127 & 0xC000000000000001) != 0)
    goto LABEL_15;
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v127 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
  {
    v90 = *(_QWORD *)(v127 + 8 * a1 + 32);
    swift_retain(v90);
LABEL_12:
    v125 = (char *)v90;
    swift_bridgeObjectRelease(v6, v91, v92, v93, v94, v95, v96, v97);
    sub_1001A601C(v90, *(void **)((char *)v2 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_workout), 0, *(_QWORD *)((char *)v2 + OBJC_IVAR___CHWorkoutDetailSegmentDataSource_formattingManager), a2, (uint64_t)v11);
    v122 = v14;
    (*((void (**)(char *, char *, uint64_t))v14 + 2))(v8, v11, v5);
    v98 = Text.init(_:)(v8);
    v100 = v99;
    v102 = v101;
    v126 = v5;
    v104 = v103 & 1;
    sub_1001A5D38(a2);
    v106 = v105;
    v107 = (CHWorkoutDetailHeartRateTableViewCell *)Text.foregroundColor(_:)(v105, v98, v100, v104, v102);
    v109 = v108;
    v111 = v110;
    v113 = v112;
    swift_release(v106);
    sub_1000E4458(v98, v100, v104);
    swift_bridgeObjectRelease(v102, v114, v115, v116, v117, v118, v119, v120);
    v127 = (uint64_t)v107;
    v128 = v109;
    v129 = v111 & 1;
    v130 = v113;
    AnyView.init<A>(_:)(&v127, &type metadata for Text, &protocol witness table for Text);
    v121 = swift_release(v125);
    (*((void (**)(char *, uint64_t, __n128))v122 + 1))(v11, v126, v121);
    return;
  }
  __break(1u);
}

unint64_t sub_1002912BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082B6F8;
  if (!qword_10082B6F8)
  {
    v1 = sub_100007050(&qword_10082B6F0);
    sub_1001C3060();
    sub_100028384(&qword_1008279F8, &qword_100827A00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082B6F8);
  }
  return result;
}

uint64_t sub_100291340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100047110(&qword_1008255D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100291388()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002913AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10028E13C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1002913B4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002913E0()
{
  uint64_t v0;

  return sub_10028E6D4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002913E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100291414()
{
  uint64_t v0;

  return sub_10028E91C(*(char **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

id sub_100291420()
{
  uint64_t v0;

  return sub_10028ECDC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100291428()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100291454()
{
  uint64_t v0;

  return sub_10028EBD8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100291480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 56);
}

uint64_t sub_100291488(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  swift_bridgeObjectRelease(a1[6]);
  return swift_release(a1[9]);
}

uint64_t sub_1002914C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_bridgeObjectRetain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_100291554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  swift_retain(v5);
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v6);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  swift_retain(v9);
  swift_release(v8);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v12;
  swift_retain(v12);
  swift_release(v14);
  return a1;
}

uint64_t sub_100291618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v6);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_release(*(_QWORD *)(a1 + 40));
  v7 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release(v8);
  return a1;
}

uint64_t sub_10029169C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1002916E4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for CustomPageControlTabView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for CustomPageControlTabView);
}

uint64_t sub_100291744(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &unk_1006B221C, 1);
}

uint64_t sub_100291778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_100291790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ScrollView.init(_:showsIndicators:content:)(a1, 1, a2, a3, a4, a5);
}

double sub_1002917A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void (*v34)(uint64_t *, uint64_t *, uint64_t);
  __n128 v35;
  void *v36;
  double result;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;

  v3 = v2;
  v6 = (_OWORD *)swift_allocObject(&unk_100793518, 128, 7);
  v38 = *(_OWORD *)(a1 + 16);
  v39 = *(_OWORD *)(a1 + 32);
  v6[1] = v38;
  v6[2] = v39;
  v7 = *(_OWORD *)(v3 + 48);
  v6[5] = *(_OWORD *)(v3 + 32);
  v6[6] = v7;
  v6[7] = *(_OWORD *)(v3 + 64);
  v8 = *(_OWORD *)(v3 + 16);
  v6[3] = *(_OWORD *)v3;
  v6[4] = v8;
  sub_100292E00((_QWORD *)v3);
  v9 = type metadata accessor for HStack(255, v38);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v9);
  v11 = type metadata accessor for ScrollView(255, v9, WitnessTable);
  v12 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v11);
  v44 = v11;
  v45 = &type metadata for Int;
  v46 = v12;
  v47 = &protocol witness table for Int;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v44, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v44 = v11;
  v45 = &type metadata for Int;
  v46 = v12;
  v47 = &protocol witness table for Int;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v44 = OpaqueTypeMetadata2;
  v45 = (void *)OpaqueTypeConformance2;
  v15 = swift_getOpaqueTypeMetadata2(255, &v44, &opaque type descriptor for <<opaque return type of View.onScrollPhaseChange(_:)>>, 0);
  v44 = OpaqueTypeMetadata2;
  v45 = (void *)OpaqueTypeConformance2;
  v16 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.onScrollPhaseChange(_:)>>, 1);
  v17 = sub_100292E68();
  v44 = v15;
  v45 = &type metadata for CGFloat;
  v46 = v16;
  v47 = (void *)v17;
  v18 = swift_getOpaqueTypeMetadata2(255, &v44, &opaque type descriptor for <<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>, 0);
  v19 = sub_100007050(&qword_10082B798);
  v20 = type metadata accessor for ModifiedContent(255, v18, v19);
  v22 = type metadata accessor for PagingScrollTargetBehavior(255, v21);
  v44 = v15;
  v45 = &type metadata for CGFloat;
  v46 = v16;
  v47 = (void *)v17;
  v42 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>, 1);
  v43 = sub_100292EAC();
  v23 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v44 = v20;
  v45 = (void *)v22;
  v46 = v23;
  v47 = &protocol witness table for PagingScrollTargetBehavior;
  v24 = swift_getOpaqueTypeMetadata2(255, &v44, &opaque type descriptor for <<opaque return type of View.scrollTargetBehavior<A>(_:)>>, 0);
  v44 = v20;
  v45 = (void *)v22;
  v46 = v23;
  v47 = &protocol witness table for PagingScrollTargetBehavior;
  v25 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.scrollTargetBehavior<A>(_:)>>, 1);
  v44 = v24;
  v45 = (void *)v25;
  v26 = swift_getOpaqueTypeMetadata2(255, &v44, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v44 = v24;
  v45 = (void *)v25;
  v27 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v44 = v26;
  v45 = (void *)v27;
  v28 = swift_getOpaqueTypeMetadata2(0, &v44, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 0);
  v44 = v26;
  v45 = (void *)v27;
  v29 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 1);
  v30 = ScrollViewReader.init(content:)(sub_100292DF0, v6, v28, v29);
  v32 = v31;
  v40 = v30;
  v41 = v31;
  v33 = type metadata accessor for ScrollViewReader(0, v28, v29);
  swift_getWitnessTable(&protocol conformance descriptor for ScrollViewReader<A>, v33);
  v34 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  v34(&v44, &v40, v33);
  v35 = swift_release(v32);
  v36 = v45;
  v40 = v44;
  v41 = v45;
  ((void (*)(uint64_t, uint64_t *, uint64_t, __n128))v34)(a2, &v40, v33, v35);
  *(_QWORD *)&result = swift_release(v36).n128_u64[0];
  return result;
}

uint64_t sub_100291B04@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  char *v64;
  uint64_t v65;
  char *v66;
  __n128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  char *v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  char *v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int v98;
  __n128 v99;
  unsigned int v100;
  uint64_t v101;
  int v102;
  int v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  __n128 v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  char *v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t);
  uint64_t WitnessTable;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  char v171[8];
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __int128 *v176;
  char v177[8];
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  __int128 *v182;
  _QWORD v183[3];
  __int128 v184;
  uint64_t v185;
  void *v186;

  v143 = a6;
  v121 = a5;
  v141 = a4;
  v146 = a1;
  v169 = a7;
  v168 = type metadata accessor for ScrollBounceBehavior(0);
  v167 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v166 = (char *)&WitnessTable - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = type metadata accessor for ScrollIndicatorVisibility(0);
  v164 = *(_QWORD *)(v165 - 8);
  v10 = __chkstk_darwin(v165);
  v162 = (char *)&WitnessTable - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PagingScrollTargetBehavior(0, v10);
  v163 = *(_QWORD *)(v12 - 8);
  v13 = v12;
  __chkstk_darwin(v12);
  v161 = (char *)&WitnessTable - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for ScrollViewProxy(0);
  v136 = *(_QWORD *)(v137 - 8);
  v138 = *(_QWORD *)(v136 + 64);
  __chkstk_darwin(v137);
  v134 = (char *)&WitnessTable - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for HStack(255, a3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v16);
  v17 = type metadata accessor for ScrollView(0, v16, WitnessTable);
  v142 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v170 = (char *)&WitnessTable - v18;
  v19 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v17);
  *(_QWORD *)&v184 = v17;
  *((_QWORD *)&v184 + 1) = &type metadata for Int;
  v124 = v17;
  v185 = v19;
  v186 = &protocol witness table for Int;
  v20 = v19;
  v125 = v19;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v184, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v145 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v22 = OpaqueTypeMetadata2;
  __chkstk_darwin(OpaqueTypeMetadata2);
  v123 = (char *)&WitnessTable - v23;
  *(_QWORD *)&v184 = v17;
  *((_QWORD *)&v184 + 1) = &type metadata for Int;
  v185 = v20;
  v186 = &protocol witness table for Int;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v184, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  *(_QWORD *)&v184 = v22;
  *((_QWORD *)&v184 + 1) = OpaqueTypeConformance2;
  v132 = v22;
  v25 = OpaqueTypeConformance2;
  v133 = OpaqueTypeConformance2;
  v26 = swift_getOpaqueTypeMetadata2(0, &v184, &opaque type descriptor for <<opaque return type of View.onScrollPhaseChange(_:)>>, 0);
  v147 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v128 = (char *)&WitnessTable - v27;
  *(_QWORD *)&v184 = v22;
  *((_QWORD *)&v184 + 1) = v25;
  v28 = swift_getOpaqueTypeConformance2(&v184, &opaque type descriptor for <<opaque return type of View.onScrollPhaseChange(_:)>>, 1);
  v29 = sub_100292E68();
  *(_QWORD *)&v184 = v26;
  *((_QWORD *)&v184 + 1) = &type metadata for CGFloat;
  v126 = v26;
  v185 = v28;
  v186 = (void *)v29;
  v30 = v28;
  v127 = v28;
  v122 = v29;
  v31 = swift_getOpaqueTypeMetadata2(0, &v184, &opaque type descriptor for <<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>, 0);
  v148 = *(_QWORD *)(v31 - 8);
  v144 = v31;
  __chkstk_darwin(v31);
  v135 = (char *)&WitnessTable - v32;
  v33 = sub_100007050(&qword_10082B798);
  v34 = type metadata accessor for ModifiedContent(0, v31, v33);
  v149 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v140 = (char *)&WitnessTable - v35;
  *(_QWORD *)&v184 = v26;
  *((_QWORD *)&v184 + 1) = &type metadata for CGFloat;
  v185 = v30;
  v186 = (void *)v29;
  v36 = swift_getOpaqueTypeConformance2(&v184, &opaque type descriptor for <<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>, 1);
  v139 = v36;
  v37 = sub_100292EAC();
  v183[1] = v36;
  v183[2] = v37;
  v38 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v34);
  *(_QWORD *)&v184 = v34;
  *((_QWORD *)&v184 + 1) = v13;
  v130 = v34;
  v129 = v13;
  v185 = v38;
  v186 = &protocol witness table for PagingScrollTargetBehavior;
  v39 = v38;
  v131 = v38;
  v40 = swift_getOpaqueTypeMetadata2(0, &v184, &opaque type descriptor for <<opaque return type of View.scrollTargetBehavior<A>(_:)>>, 0);
  v159 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v120 = (char *)&WitnessTable - v41;
  *(_QWORD *)&v184 = v34;
  *((_QWORD *)&v184 + 1) = v13;
  v185 = v39;
  v186 = &protocol witness table for PagingScrollTargetBehavior;
  v42 = swift_getOpaqueTypeConformance2(&v184, &opaque type descriptor for <<opaque return type of View.scrollTargetBehavior<A>(_:)>>, 1);
  *(_QWORD *)&v184 = v40;
  *((_QWORD *)&v184 + 1) = v42;
  v43 = swift_getOpaqueTypeMetadata2(0, &v184, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v157 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v155 = (char *)&WitnessTable - v44;
  v160 = v40;
  *(_QWORD *)&v184 = v40;
  *((_QWORD *)&v184 + 1) = v42;
  v152 = v42;
  v45 = swift_getOpaqueTypeConformance2(&v184, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v158 = v43;
  *(_QWORD *)&v184 = v43;
  *((_QWORD *)&v184 + 1) = v45;
  v150 = v45;
  v156 = swift_getOpaqueTypeMetadata2(0, &v184, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 0);
  v154 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v151 = (char *)&WitnessTable - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __chkstk_darwin(v47);
  v153 = (char *)&WitnessTable - v49;
  v50 = static Axis.Set.horizontal.getter(v48);
  v51 = a3;
  v178 = a3;
  v52 = v141;
  v53 = v121;
  v179 = v141;
  v180 = v121;
  v54 = v143;
  v181 = v143;
  v182 = a2;
  ScrollView.init(_:showsIndicators:content:)(v50, 1, sub_100292EF8, v177, v16, WitnessTable);
  v184 = *a2;
  v55 = sub_100047110(&qword_10081F1D8);
  State.wrappedValue.getter(v183, v55);
  v56 = v136;
  v57 = v134;
  v58 = v137;
  (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v134, v146, v137);
  v59 = *(unsigned __int8 *)(v56 + 80);
  v60 = (v59 + 128) & ~v59;
  v61 = swift_allocObject(&unk_100793540, v60 + v138, v59 | 7);
  *(_QWORD *)(v61 + 16) = v51;
  *(_QWORD *)(v61 + 24) = v52;
  *(_QWORD *)(v61 + 32) = v53;
  *(_QWORD *)(v61 + 40) = v54;
  v62 = a2[3];
  *(_OWORD *)(v61 + 80) = a2[2];
  *(_OWORD *)(v61 + 96) = v62;
  *(_OWORD *)(v61 + 112) = a2[4];
  v63 = a2[1];
  *(_OWORD *)(v61 + 48) = *a2;
  *(_OWORD *)(v61 + 64) = v63;
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v61 + v60, v57, v58);
  sub_100292E00(a2);
  v64 = v123;
  v65 = v124;
  v66 = v170;
  View.onChange<A>(of:initial:_:)(v183, 0, sub_100292F98, v61, v124, &type metadata for Int, v125, &protocol witness table for Int);
  v67 = swift_release(v61);
  (*(void (**)(char *, uint64_t, __n128))(v142 + 8))(v66, v65, v67);
  v68 = swift_allocObject(&unk_100793568, 128, 7);
  *(_QWORD *)(v68 + 16) = v51;
  *(_QWORD *)(v68 + 24) = v52;
  *(_QWORD *)(v68 + 32) = v53;
  *(_QWORD *)(v68 + 40) = v54;
  v69 = a2[3];
  *(_OWORD *)(v68 + 80) = a2[2];
  *(_OWORD *)(v68 + 96) = v69;
  *(_OWORD *)(v68 + 112) = a2[4];
  v70 = a2[1];
  *(_OWORD *)(v68 + 48) = *a2;
  *(_OWORD *)(v68 + 64) = v70;
  sub_100292E00(a2);
  v71 = v128;
  v72 = v132;
  View.onScrollPhaseChange(_:)(sub_100293014, v68, v132, v133);
  v73 = swift_release(v68);
  (*(void (**)(char *, uint64_t, __n128))(v145 + 8))(v64, v72, v73);
  v74 = swift_allocObject(&unk_100793590, 128, 7);
  *(_QWORD *)(v74 + 16) = v51;
  *(_QWORD *)(v74 + 24) = v52;
  *(_QWORD *)(v74 + 32) = v53;
  *(_QWORD *)(v74 + 40) = v54;
  v75 = a2[3];
  *(_OWORD *)(v74 + 80) = a2[2];
  *(_OWORD *)(v74 + 96) = v75;
  *(_OWORD *)(v74 + 112) = a2[4];
  v76 = a2[1];
  *(_OWORD *)(v74 + 48) = *a2;
  *(_OWORD *)(v74 + 64) = v76;
  sub_100292E00(a2);
  v77 = v135;
  v78 = v126;
  View.onScrollGeometryChange<A>(for:of:action:)(&type metadata for CGFloat, sub_100292B60, 0, sub_10029306C, v74, v126, &type metadata for CGFloat, v127, v122);
  v79 = swift_release(v74);
  v80 = (*(uint64_t (**)(char *, uint64_t, __n128))(v147 + 8))(v71, v78, v79);
  v81 = static Alignment.bottom.getter(v80);
  v83 = v82;
  v172 = v51;
  v173 = v52;
  v174 = v53;
  v175 = v54;
  v84 = v120;
  v176 = a2;
  v85 = sub_100047110(&qword_10082B7A8);
  v86 = sub_100293088();
  v87 = v140;
  v88 = v81;
  v89 = v144;
  v90 = v85;
  v91 = v162;
  View.overlay<A>(alignment:content:)(v88, v83, sub_10029307C, v171, v144, v90, v139, v86);
  v92 = (*(uint64_t (**)(char *, uint64_t))(v148 + 8))(v77, v89);
  v93 = v161;
  PagingScrollTargetBehavior.init()(v92);
  v94 = v130;
  v95 = v129;
  View.scrollTargetBehavior<A>(_:)(v93, v130, v129, v131, &protocol witness table for PagingScrollTargetBehavior);
  (*(void (**)(char *, uint64_t))(v163 + 8))(v93, v95);
  v96 = (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v87, v94);
  v97 = static ScrollIndicatorVisibility.hidden.getter(v96);
  v98 = static Axis.Set.vertical.getter(v97);
  v100 = static Axis.Set.horizontal.getter(v99);
  v101 = Axis.Set.init(rawValue:)(0);
  v102 = Axis.Set.init(rawValue:)(v101);
  if (Axis.Set.init(rawValue:)(v102 & v98) != v98)
    v101 = Axis.Set.init(rawValue:)(v101 | v98);
  v103 = Axis.Set.init(rawValue:)(v101);
  if (Axis.Set.init(rawValue:)(v103 & v100) != v100)
    v101 = Axis.Set.init(rawValue:)(v101 | v100);
  v104 = v155;
  v105 = v101;
  v106 = v160;
  View.scrollIndicators(_:axes:)(v91, v105, v160, v152);
  (*(void (**)(char *, uint64_t))(v164 + 8))(v91, v165);
  v107 = (*(uint64_t (**)(char *, uint64_t))(v159 + 8))(v84, v106);
  v108 = v166;
  v109.n128_f64[0] = static ScrollBounceBehavior.basedOnSize.getter(v107);
  v110 = static Axis.Set.horizontal.getter(v109);
  v111 = v151;
  v112 = v158;
  View.scrollBounceBehavior(_:axes:)(v108, v110, v158, v150);
  (*(void (**)(char *, uint64_t))(v167 + 8))(v108, v168);
  (*(void (**)(char *, uint64_t))(v157 + 8))(v104, v112);
  v113 = v154;
  v114 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
  v115 = v153;
  v116 = v156;
  v114(v153, v111, v156);
  v117 = *(void (**)(char *, uint64_t))(v113 + 8);
  v117(v111, v116);
  v114(v169, v115, v116);
  return ((uint64_t (*)(char *, uint64_t))v117)(v115, v116);
}

uint64_t sub_1002926D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _BYTE *, uint64_t);
  void (*v22)(_BYTE *, uint64_t);
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v12 = type metadata accessor for HStack(0, a2);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v24[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v18 = &v24[-v17];
  v25 = a2;
  v26 = a3;
  v27 = a4;
  v28 = a5;
  v29 = a1;
  v20 = static VerticalAlignment.center.getter(v19);
  HStack.init(alignment:spacing:content:)(v20, 0, 0, sub_100293158, v24, a2, a4);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v12);
  v21 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16);
  v21(v18, v15, v12);
  v22 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
  v22(v15, v12);
  v21(a6, v18, v12);
  return ((uint64_t (*)(_BYTE *, uint64_t))v22)(v18, v12);
}

uint64_t sub_10029280C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v15 - v10;
  (*(void (**)(void))(v9 + 64))();
  v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v12(v11, v8, a2);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, a2);
  v12(a3, v11, a2);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

uint64_t sub_1002928D4(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t WitnessTable;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedConformanceWitness;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v28 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a8, a6, &protocol requirements base descriptor for Identifiable, &associated type descriptor for Identifiable.ID);
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v14 = (char *)&v26 - v13;
  v15 = *(_QWORD *)(a6 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a3[1];
  v19 = sub_100047110(&qword_100820D80);
  result = (uint64_t)State.wrappedValue.getter(&v31, v19);
  if (v31 == 1)
  {
    v27 = *((_QWORD *)a3 + 6);
    *(_QWORD *)&v31 = v27;
    v21 = type metadata accessor for Array(0, a6);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v21);
    RandomAccessCollection<>.indices.getter(&v32, v21, WitnessTable, &protocol witness table for Int);
    v30 = *a3;
    v31 = v32;
    v23 = sub_100047110(&qword_10081F1D8);
    State.wrappedValue.getter(&v29, v23);
    v24 = sub_100047110(&qword_100821138);
    result = Range.contains(_:)(&v29, v24);
    if ((result & 1) != 0)
    {
      v32 = *a3;
      State.wrappedValue.getter(&v31, v23);
      Array.subscript.getter(v31, v27, a6);
      dispatch thunk of Identifiable.id.getter(a6, a8);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, a6);
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a8, a6, AssociatedTypeWitness, &protocol requirements base descriptor for Identifiable, &associated conformance descriptor for Identifiable.Identifiable.ID: Hashable);
      ScrollViewProxy.scrollTo<A>(_:anchor:)(v14, 0, 0, 1, AssociatedTypeWitness, AssociatedConformanceWitness);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
    }
  }
  return result;
}

uint64_t sub_100292AF8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  BOOL v6;
  __int128 v7;

  v7 = *(_OWORD *)(a4 + 16);
  v6 = a2 == 0;
  v4 = sub_100047110(&qword_100820D80);
  return State.wrappedValue.setter(&v6, v4);
}

double sub_100292B60@<D0>(double *a1@<X8>)
{
  double v2;
  double result;

  v2 = ScrollGeometry.contentOffset.getter();
  result = v2 / ScrollGeometry.containerSize.getter();
  *a1 = result;
  return result;
}

void sub_100292B9C(uint64_t a1, double *a2, __int128 *a3)
{
  double v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v3 = round(*a2);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) != 0)
  {
    if (v3 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (v3 < 9.22337204e18)
    {
      v6 = *a3;
      v5 = (uint64_t)v3;
      v4 = sub_100047110(&qword_10081F1D8);
      State.wrappedValue.setter(&v5, v4);
      return;
    }
    __break(1u);
  }
}

uint64_t sub_100292C2C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  unint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  v6 = sub_100047110(&qword_10082B7C0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Array.count.getter(*((_QWORD *)a1 + 6), a2, v8);
  v31 = *a1;
  sub_100047110(&qword_10081F1D8);
  State.projectedValue.getter(&v27);
  v12 = v27;
  v13 = v28;
  v14 = v29;
  v27 = v11;
  v28 = v12;
  v29 = v13;
  v30 = v14;
  v15 = (*((_BYTE *)a1 + 56) & 1) == 0;
  v16 = sub_100293114();
  View.isHidden(_:defaultAccessibilityHidden:)(v15, 0, &type metadata for PageControlView, v16);
  swift_release(v13);
  swift_release(v12);
  LOBYTE(a2) = static Edge.Set.bottom.getter(v17);
  v18 = EdgeInsets.init(_all:)(12.0);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(a3, v10, v6);
  v25 = a3 + *(int *)(sub_100047110(&qword_10082B7A8) + 36);
  *(_BYTE *)v25 = a2;
  *(double *)(v25 + 8) = v18;
  *(_QWORD *)(v25 + 16) = v20;
  *(_QWORD *)(v25 + 24) = v22;
  *(_QWORD *)(v25 + 32) = v24;
  *(_BYTE *)(v25 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_100292DAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002917A8(a1, a2);
}

uint64_t sub_100292DF0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_100291B04(a1, (__int128 *)(v2 + 48), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

_QWORD *sub_100292E00(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[6];
  v5 = a1[9];
  swift_retain(a1[5]);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  swift_retain(v2);
  swift_retain(v3);
  return a1;
}

unint64_t sub_100292E68()
{
  unint64_t result;

  result = qword_10082B790;
  if (!qword_10082B790)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_10082B790);
  }
  return result;
}

unint64_t sub_100292EAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082B7A0;
  if (!qword_10082B7A0)
  {
    v1 = sub_100007050(&qword_10082B798);
    result = swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10082B7A0);
  }
  return result;
}

uint64_t sub_100292EF8()
{
  return sub_100293164((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002926D8);
}

uint64_t sub_100292F04()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ScrollViewProxy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 128) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*((_QWORD *)v0 + 7));
  swift_release(*((_QWORD *)v0 + 9));
  swift_release(*((_QWORD *)v0 + 11));
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 12));
  swift_release(*((_QWORD *)v0 + 15));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100292F98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8) + 80);
  return sub_1002928D4(a1, a2, (__int128 *)(v2 + 48), v2 + ((v9 + 128) & ~v9), v5, v6, v7, v8);
}

uint64_t sub_100293014(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100292AF8(a1, a2, a3, v3 + 48);
}

uint64_t sub_100293028()
{
  _QWORD *v0;

  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  swift_bridgeObjectRelease(v0[12]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

void sub_10029306C(uint64_t a1, double *a2)
{
  uint64_t v2;

  sub_100292B9C(a1, a2, (__int128 *)(v2 + 48));
}

uint64_t sub_10029307C()
{
  return sub_100293164((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100292C2C);
}

unint64_t sub_100293088()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10082B7B0;
  if (!qword_10082B7B0)
  {
    v1 = sub_100007050(&qword_10082B7A8);
    v2[0] = &type metadata for PageControlView;
    v2[1] = sub_100293114();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.isHidden(_:defaultAccessibilityHidden:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082B7B0);
  }
  return result;
}

